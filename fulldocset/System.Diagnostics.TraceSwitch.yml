### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.TraceSwitch
  id: TraceSwitch
  children:
  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.TraceSwitch.Level
  - System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  - System.Diagnostics.TraceSwitch.OnValueChanged
  - System.Diagnostics.TraceSwitch.TraceError
  - System.Diagnostics.TraceSwitch.TraceInfo
  - System.Diagnostics.TraceSwitch.TraceVerbose
  - System.Diagnostics.TraceSwitch.TraceWarning
  langs:
  - csharp
  name: TraceSwitch
  nameWithType: TraceSwitch
  fullName: System.Diagnostics.TraceSwitch
  type: Class
  summary: "Fornece uma opção de vários níveis para controle de rastreamento e saída de depuração sem recompilar seu código."
  remarks: "Você pode usar uma opção de rastreamento para filtrar as mensagens com base em sua importância. A classe TraceSwitch fornece o <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, e <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Propriedades para testar o nível do comutador.</xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> A <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade obtém ou define a opção <xref:System.Diagnostics.TraceLevel>.</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceSwitch.Level%2A>       Você pode definir o nível de um TraceSwitch por meio do arquivo de configuração do aplicativo e, em seguida, use o nível de TraceSwitch configurado em seu aplicativo. Como alternativa, você pode criar um TraceSwitch no seu código e defina o nível diretamente para instrumentar uma seção de código.       Para configurar um TraceSwitch, edite o para seu aplicativo. Nesse arquivo, você pode adicionar ou remover um comutador, definir valor do comutador ou limpar todas as opções definidas anteriormente pelo aplicativo. O arquivo de configuração deve ser formatado com o seguinte exemplo: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot; />       </switches>     </system.diagnostics>   </configuration>   ``` esta seção de configuração define um TraceSwitch com o <xref:System.Diagnostics.Switch.DisplayName%2A>definido como `mySwitch`e o <xref:System.Diagnostics.TraceSwitch.Level%2A>definido como 1, que corresponde ao valor de enumeração <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.Switch.DisplayName%2A>      > [!NOTE] > No .NET Framework versão 2.0, você pode usar o texto para especificar o valor para um comutador. Por exemplo, `true` para um <xref:System.Diagnostics.BooleanSwitch>ou o texto que representa um valor de enumeração, como `Error` para um TraceSwitch.</xref:System.Diagnostics.BooleanSwitch> A linha `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` é equivalente a `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`.       Em seu aplicativo, você pode usar o nível de comutador configurado ao criar um TraceSwitch com o mesmo nome, conforme mostrado no exemplo a seguir: [!code-vb [clássico TraceSwitch.TraceError exemplo n º&3;](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_1.vb)][!code-cpp[clássico TraceSwitch.TraceError exemplo n º&3;](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_1.cpp)][!code-cs[clássico TraceSwitch.TraceError exemplo n º&3;](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_1.cs) ] por padrão, a opção <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade é definida usando o valor especificado no arquivo de configuração.</xref:System.Diagnostics.TraceSwitch.Level%2A>     Se o <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>construtor não é possível localizar as configurações de comutador inicial no arquivo de configuração, <xref:System.Diagnostics.TraceSwitch.Level%2A>novos padrões de comutador para <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.TraceSwitch.%23ctor%2A>       Você deve habilitar o rastreamento ou a depuração para usar uma opção. A sintaxe a seguir é específico do compilador. Se você usar compiladores que não seja o c# ou Visual Basic, consulte a documentação para o compilador.      -Para habilitar a depuração em c#, adicione o `/d:DEBUG` sinalizador para a linha de comando do compilador quando você compila o código ou adiciona `#define DEBUG` à parte superior do seu arquivo. No Visual Basic, adicione o `/d:DEBUG=True` sinalizador para a linha de comando do compilador.      -Para habilitar o rastreamento em c#, adicione o `/d:TRACE` sinalizador para a linha de comando do compilador quando você compila o código ou adiciona `#define TRACE` à parte superior do seu arquivo. No Visual Basic, adicione o `/d:TRACE=True` sinalizador para a linha de comando do compilador.      > [!NOTE] > Esses depurar e opções de compilador de rastreamento não são necessárias ao usar a classe TraceSwitch isoladamente. São necessárias apenas em conjunto com <xref:System.Diagnostics.Trace>ou <xref:System.Diagnostics.Debug>métodos que são compilados condicionalmente.</xref:System.Diagnostics.Debug> </xref:System.Diagnostics.Trace>       Para obter mais informações sobre como instrumentar seu aplicativo, consulte <xref:System.Diagnostics.Debug>e <xref:System.Diagnostics.Trace>.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> Para obter mais informações sobre como configurar e usar as opções de rastreamento, consulte [opções de rastreamento](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Para melhorar o desempenho, você pode fazer membros TraceSwitch `static` em sua classe."
  example:
  - "The following code example creates a new TraceSwitch and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/t-system.diagnostics.tra_0_2.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/t-system.diagnostics.tra_0_2.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.tra_0_2.vb)]"
  syntax:
    content: >-
      [System.Diagnostics.SwitchLevel(typeof(System.Diagnostics.TraceLevel))]

      public class TraceSwitch : System.Diagnostics.Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceSwitch(String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.TraceSwitch&quot;> </xref> de classe, usando o nome de exibição especificado e uma descrição."
  remarks: "Para definir o nível de seu <xref:System.Diagnostics.TraceSwitch>, edite o arquivo de configuração que corresponde ao nome do seu aplicativo.</xref:System.Diagnostics.TraceSwitch> Nesse arquivo, você pode adicionar um comutador e defina seu valor, remova um comutador ou desmarcar todas as opções definidas anteriormente pelo aplicativo. O arquivo de configuração deve ser formatado com o seguinte exemplo: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot; />       </switches>     </system.diagnostics>   </configuration>   ```       >  [!NOTE] > no .NET Framework versão 2.0, você pode usar o texto para especificar o valor para um comutador. Por exemplo, `true` para um <xref:System.Diagnostics.BooleanSwitch>ou o texto que representa um valor de enumeração, como `Error` para <xref:System.Diagnostics.TraceSwitch>.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.BooleanSwitch> A linha `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` é equivalente a `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`.       Em seu aplicativo, você pode usar o nível do comutador configurado, criando um <xref:System.Diagnostics.TraceSwitch>com o mesmo nome, conforme mostrado no exemplo a seguir: [!code-vb [clássico TraceSwitch.TraceError exemplo n º&3;](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_1.vb)][!code-cpp[clássico TraceSwitch.TraceError exemplo n º&3;](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_1.cpp)][!code-cs[clássico TraceSwitch.TraceError exemplo n º&3;](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_1.cs) ] quando o <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>construtor não é possível localizar as configurações de comutador inicial no arquivo de configuração, a <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade da nova opção está definida como <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.TraceSwitch.%23ctor%2A>     </xref:System.Diagnostics.TraceSwitch>       O <xref:System.Diagnostics.TraceSwitch>classe fornece a <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, e <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Propriedades para testar o <xref:System.Diagnostics.TraceSwitch.Level%2A>do comutador.</xref:System.Diagnostics.TraceSwitch.Level%2A> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> </xref:System.Diagnostics.TraceSwitch> A <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade obtém ou define a opção <xref:System.Diagnostics.TraceLevel>.</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceSwitch.Level%2A>      > [!NOTE] > Para melhorar o desempenho, você pode fazer <xref:System.Diagnostics.TraceSwitch>membros `static` em sua classe</xref:System.Diagnostics.TraceSwitch>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/m-system.diagnostics.tra_27_2.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/m-system.diagnostics.tra_27_2.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.tra_27_2.vb)]"
  syntax:
    content: public TraceSwitch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "O nome a ser exibido em uma interface de usuário."
    - id: description
      type: System.String
      description: "A descrição do comutador."
  overload: System.Diagnostics.TraceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceSwitch(String,String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.TraceSwitch&quot;> </xref> de classe, usando o nome de exibição especificado, a descrição e o valor padrão para o comutador."
  remarks: "O `displayName` parâmetro é usado para definir o valor da <xref:System.Diagnostics.Switch.DisplayName%2A>propriedade, o `description` parâmetro é usado para definir o valor da <xref:System.Diagnostics.Switch.Description%2A>propriedade e o `defaultSwitchValue` parâmetro é salvo como um campo e usado para inicializar o <xref:System.Diagnostics.Switch.Value%2A>propriedade na primeira referência.</xref:System.Diagnostics.Switch.Value%2A> </xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> Consulte o <xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29>construtor para obter mais informações e um exemplo de código.</xref:System.Diagnostics.TraceSwitch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: public TraceSwitch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "O nome a ser exibido em uma interface de usuário."
    - id: description
      type: System.String
      description: "A descrição do comutador."
    - id: defaultSwitchValue
      type: System.String
      description: "O valor padrão do comutador."
  overload: System.Diagnostics.TraceSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.Level
  id: Level
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: Level
  nameWithType: TraceSwitch.Level
  fullName: System.Diagnostics.TraceSwitch.Level
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define o nível de rastreamento que determina as mensagens que permite que o comutador."
  remarks: "Para definir o nível de seu <xref:System.Diagnostics.TraceSwitch>, edite o arquivo de configuração que corresponde ao nome do seu aplicativo.</xref:System.Diagnostics.TraceSwitch> Nesse arquivo, você pode adicionar um comutador e defina seu valor, remova um comutador ou desmarcar todas as opções definidas anteriormente pelo aplicativo. O arquivo de configuração deve ser formatado com o seguinte exemplo: ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;0&quot; />         <add name=&quot;myNewSwitch&quot; value=&quot;3&quot; />         <remove name=&quot;mySwitch&quot; />         <clear/>       </switches>     </system.diagnostics>   </configuration>   ```       >  [!NOTE] > no .NET Framework versão 2.0, você pode usar o texto para especificar o valor para um comutador. Por exemplo, `true` para um <xref:System.Diagnostics.BooleanSwitch>ou o texto que representa um valor de enumeração, como `Error` para <xref:System.Diagnostics.TraceSwitch>.</xref:System.Diagnostics.TraceSwitch> </xref:System.Diagnostics.BooleanSwitch> A linha `<add name=&quot;mySwitch&quot; value=&quot;Error&quot; />` é equivalente a `<add name=&quot;mySwitch&quot; value=&quot;1&quot; />`.       Quando o <xref:System.Diagnostics.TraceSwitch.%23ctor%2A>construtor não é possível localizar as configurações de comutador inicial no arquivo de configuração, a propriedade de nível de nova opção está definida como <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.%23ctor%2A>       Configuração desta propriedade atualiza o <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, e <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Propriedades para refletir o novo valor.</xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to print error messages. The switch is created at the class level. `MyMethod` writes the first error message if the Level property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the Level is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cpp[Classic TraceSwitch.Level Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_1_1.cpp)]\n [!code-cs[Classic TraceSwitch.Level Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_1_1.cs)]\n [!code-vb[Classic TraceSwitch.Level Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_1_1.vb)]"
  syntax:
    content: public System.Diagnostics.TraceLevel Level { get; set; }
    return:
      type: System.Diagnostics.TraceLevel
      description: "Uma da <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref> valores que especifica o nível das mensagens que são permitidos pelo comutador."
  overload: System.Diagnostics.TraceSwitch.Level*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nível é definido como um valor que não é um do <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  id: OnSwitchSettingChanged
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: OnSwitchSettingChanged()
  nameWithType: TraceSwitch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Atualiza e corrige o nível para esse comutador."
  remarks: "O método OnSwitchSettingChanged é usado pelo .NET framework para validar e corrija o valor de um comutador inicializado por meio de um arquivo de configuração. Uma mensagem é gravada para todos os ouvintes de rastreamento, se o valor de opção especificado no arquivo de configuração não é definido pelo <xref:System.Diagnostics.TraceLevel>enumeração e o comutador é definido como um valor definido.</xref:System.Diagnostics.TraceLevel>       Se você tentar em seu código para definir o <xref:System.Diagnostics.TraceSwitch.Level%2A>propriedade para um valor que não é definida pelo <xref:System.Diagnostics.TraceLevel>enumeração, um <xref:System.ArgumentException>exceção será lançada.</xref:System.ArgumentException> </xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  syntax:
    content: protected override void OnSwitchSettingChanged ();
    parameters: []
  overload: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: TraceSwitch.OnValueChanged()
  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Conjuntos de <> </> *> propriedade equivalente inteiro o <> </> *> propriedade."
  remarks: "Este método é chamado internamente quando o <xref:System.Diagnostics.Switch.Value%2A>propriedade das alterações de comutador.</xref:System.Diagnostics.Switch.Value%2A> O método garante que as propriedades relacionadas ao valor da opção refletem o novo valor."
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.TraceSwitch.OnValueChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceError
  id: TraceError
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceError
  nameWithType: TraceSwitch.TraceError
  fullName: System.Diagnostics.TraceSwitch.TraceError
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um valor que indica se a opção permite que mensagens de tratamento de erros."
  remarks: "Você pode usar o TraceError <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, e <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Propriedades em conjunto com o <xref:System.Diagnostics.Debug>e <xref:System.Diagnostics.Trace>classes de emissão de todas as mensagens com uma prioridade especificada ou superior.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> Quando o <xref:System.Diagnostics.TraceSwitch.Level%2A>estiver definida como maior importância, <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, <xref:System.Diagnostics.TraceLevel>, somente as mensagens de tratamento de erros são emitidas.</xref:System.Diagnostics.TraceLevel> </xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_5_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_5_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_5_1.vb)]"
  syntax:
    content: public bool TraceError { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, or <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceError*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceInfo
  id: TraceInfo
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
  fullName: System.Diagnostics.TraceSwitch.TraceInfo
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um valor que indica se a opção permite mensagens informativas."
  remarks: "Você pode usar o <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, TraceInfo, e <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Propriedades em conjunto com o <xref:System.Diagnostics.Debug>e <xref:System.Diagnostics.Trace>classes de emissão de todas as mensagens com uma prioridade especificada ou superior.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> Quando o <xref:System.Diagnostics.TraceSwitch.Level%2A>estiver definida como <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, mensagens informativas, avisos e mensagens de tratamento de erros são emitidas.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-vb[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_8_1.vb)]\n [!code-cs[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_8_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceInfo Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_8_1.cpp)]"
  syntax:
    content: public bool TraceInfo { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Diagnostics.TraceSwitch.Level*>está definida como <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref> ou <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceVerbose
  id: TraceVerbose
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
  fullName: System.Diagnostics.TraceSwitch.TraceVerbose
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um valor que indica se a opção permite todas as mensagens."
  remarks: "Você pode usar o <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, <xref:System.Diagnostics.TraceSwitch.TraceWarning%2A>, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>e as propriedades de TraceVerbose em conjunto com o <xref:System.Diagnostics.Debug>e <xref:System.Diagnostics.Trace>classes de emissão de todas as mensagens com uma prioridade especificada ou superior.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceWarning%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> Quando o <xref:System.Diagnostics.TraceSwitch.Level%2A>estiver definida como <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, todas as de depuração e rastreamento de mensagens são transmitidas.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes both error messages when the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_4_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_4_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceError Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_4_1.vb)]"
  syntax:
    content: public bool TraceVerbose { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Diagnostics.TraceSwitch.Level*>está definida como <xref href=&quot;System.Diagnostics.TraceLevel&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceVerbose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.TraceSwitch.TraceWarning
  id: TraceWarning
  parent: System.Diagnostics.TraceSwitch
  langs:
  - csharp
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
  fullName: System.Diagnostics.TraceSwitch.TraceWarning
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém um valor que indica se a opção permite que as mensagens de aviso."
  remarks: "Você pode usar o <xref:System.Diagnostics.TraceSwitch.TraceError%2A>, TraceWarning, <xref:System.Diagnostics.TraceSwitch.TraceInfo%2A>, e <xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A>Propriedades em conjunto com o <xref:System.Diagnostics.Debug>e <xref:System.Diagnostics.Trace>classes de emissão de todas as mensagens com uma prioridade especificada ou superior.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> </xref:System.Diagnostics.TraceSwitch.TraceVerbose%2A> </xref:System.Diagnostics.TraceSwitch.TraceInfo%2A> </xref:System.Diagnostics.TraceSwitch.TraceError%2A> Quando o <xref:System.Diagnostics.TraceSwitch.Level%2A>estiver definida como <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>, mensagens de tratamento de erros e avisos são emitidas.</xref:System.Diagnostics.TraceLevel?displayProperty=fullName> </xref:System.Diagnostics.TraceSwitch.Level%2A>"
  example:
  - "The following code example creates a new <xref:System.Diagnostics.TraceSwitch> and uses the switch to determine whether to emit error messages. The switch is created at the class level. `MyMethod` writes the first error message if the <xref:System.Diagnostics.TraceSwitch.Level%2A> property is set to <xref:System.Diagnostics.TraceLevel?displayProperty=fullName> or higher. However, `MyMethod` does not write the second error message when the <xref:System.Diagnostics.TraceSwitch.Level%2A> is less than <xref:System.Diagnostics.TraceLevel?displayProperty=fullName>.  \n  \n [!code-cs[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/csharp/p-system.diagnostics.tra_3_1.cs)]\n [!code-cpp[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/cpp/p-system.diagnostics.tra_3_1.cpp)]\n [!code-vb[Classic TraceSwitch.TraceWarning Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.tra_3_1.vb)]"
  syntax:
    content: public bool TraceWarning { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if the <xref:System.Diagnostics.TraceSwitch.Level*> property is set to <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>, or <xref href=&quot;System.Diagnostics.TraceLevel&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Diagnostics.TraceSwitch.Level*>"
  overload: System.Diagnostics.TraceSwitch.TraceWarning*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch(String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.TraceSwitch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch(String,String,String)
  nameWithType: TraceSwitch.TraceSwitch(String,String,String)
  fullName: System.Diagnostics.TraceSwitch.TraceSwitch(String,String,String)
- uid: System.Diagnostics.TraceSwitch.Level
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: Level
  nameWithType: TraceSwitch.Level
  fullName: System.Diagnostics.TraceSwitch.Level
- uid: System.Diagnostics.TraceLevel
  parent: System.Diagnostics
  isExternal: false
  name: TraceLevel
  nameWithType: TraceLevel
  fullName: System.Diagnostics.TraceLevel
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnSwitchSettingChanged()
  nameWithType: TraceSwitch.OnSwitchSettingChanged()
  fullName: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged()
- uid: System.Diagnostics.TraceSwitch.OnValueChanged
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: TraceSwitch.OnValueChanged()
  fullName: System.Diagnostics.TraceSwitch.OnValueChanged()
- uid: System.Diagnostics.TraceSwitch.TraceError
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceError
  nameWithType: TraceSwitch.TraceError
  fullName: System.Diagnostics.TraceSwitch.TraceError
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.TraceSwitch.TraceInfo
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
  fullName: System.Diagnostics.TraceSwitch.TraceInfo
- uid: System.Diagnostics.TraceSwitch.TraceVerbose
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
  fullName: System.Diagnostics.TraceSwitch.TraceVerbose
- uid: System.Diagnostics.TraceSwitch.TraceWarning
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
  fullName: System.Diagnostics.TraceSwitch.TraceWarning
- uid: System.Diagnostics.TraceSwitch.#ctor*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceSwitch
  nameWithType: TraceSwitch.TraceSwitch
- uid: System.Diagnostics.TraceSwitch.Level*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: Level
  nameWithType: TraceSwitch.Level
- uid: System.Diagnostics.TraceSwitch.OnSwitchSettingChanged*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnSwitchSettingChanged
  nameWithType: TraceSwitch.OnSwitchSettingChanged
- uid: System.Diagnostics.TraceSwitch.OnValueChanged*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: TraceSwitch.OnValueChanged
- uid: System.Diagnostics.TraceSwitch.TraceError*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceError
  nameWithType: TraceSwitch.TraceError
- uid: System.Diagnostics.TraceSwitch.TraceInfo*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceInfo
  nameWithType: TraceSwitch.TraceInfo
- uid: System.Diagnostics.TraceSwitch.TraceVerbose*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceVerbose
  nameWithType: TraceSwitch.TraceVerbose
- uid: System.Diagnostics.TraceSwitch.TraceWarning*
  parent: System.Diagnostics.TraceSwitch
  isExternal: false
  name: TraceWarning
  nameWithType: TraceSwitch.TraceWarning
