### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Xml
  id: Xml
  children:
  - System.Web.UI.WebControls.Xml.#ctor
  - System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)
  - System.Web.UI.WebControls.Xml.ClientID
  - System.Web.UI.WebControls.Xml.Controls
  - System.Web.UI.WebControls.Xml.CreateControlCollection
  - System.Web.UI.WebControls.Xml.Document
  - System.Web.UI.WebControls.Xml.DocumentContent
  - System.Web.UI.WebControls.Xml.DocumentSource
  - System.Web.UI.WebControls.Xml.EnableTheming
  - System.Web.UI.WebControls.Xml.FindControl(System.String)
  - System.Web.UI.WebControls.Xml.Focus
  - System.Web.UI.WebControls.Xml.GetDesignModeState
  - System.Web.UI.WebControls.Xml.HasControls
  - System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Xml.SkinID
  - System.Web.UI.WebControls.Xml.Transform
  - System.Web.UI.WebControls.Xml.TransformArgumentList
  - System.Web.UI.WebControls.Xml.TransformSource
  - System.Web.UI.WebControls.Xml.XPathNavigator
  langs:
  - csharp
  name: Xml
  nameWithType: Xml
  fullName: System.Web.UI.WebControls.Xml
  type: Class
  summary: "Exibe um documento XML sem formatação ou usando transformações de linguagem de folha de estilos extensível (XSLT)."
  remarks: "Neste tópico:- [Introdução](#introduction)      -   [dados de XML especificando](#specifying_xml_data)      -   [especificando uma transformação XSL](#specifying_an_xsl_transformation)      -   [sintaxe declarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # Introdução usar o controle Xml para exibir o conteúdo de um documento XML sem formatação ou usando transformações de XSL.            <a name=&quot;specifying_xml_data&quot;></a># # Especificando documento XML dados o XML para exibir é especificado pela configuração de um dos três propriedades. Essas três propriedades representam os diferentes tipos de documentos XML que podem ser exibidos. Você pode exibir um <xref:System.Xml.XmlDocument?displayProperty=fullName>, uma cadeia de caracteres XML ou um arquivo XML, definindo a propriedade apropriada.</xref:System.Xml.XmlDocument?displayProperty=fullName> A tabela a seguir lista as propriedades para especificar o documento XML.      | Propriedade | Descrição |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.Xml.Document%2A>| Define o documento XML usando um <xref:System.Xml.XmlDocument?displayProperty=fullName>objeto.</xref:System.Xml.XmlDocument?displayProperty=fullName> </xref:System.Web.UI.WebControls.Xml.Document%2A> **Aviso:** esta propriedade é obsoleta. Use uma das propriedades listadas nesta seção para definir o XML conteúdo para o controle de Xml. |   | <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>| Define o documento XML usando uma cadeia de caracteres.</xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> **Observação:** esta propriedade é geralmente definida declarativamente colocando o texto entre a abertura e fechamento `<asp:Xml>` marcas do controle Xml. |   | <xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>| Define o documento XML usando um arquivo. |      > [!NOTE] > Pelo menos uma das propriedades do documento XML deve ser definida para exibir um documento XML.</xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> Se mais de uma propriedade de documento XML é definida, o documento XML referenciado no último conjunto de propriedades é exibido. Os documentos nas outras propriedades são ignorados.      <a name=&quot;specifying_an_xsl_transformation&quot;></a># # Especificar uma transformação de XSL você pode opcionalmente especificar uma folha de estilos de transformações XSL (XSLT) que formata o documento XML antes de serem gravado no fluxo de saída, definindo uma das duas propriedades. As duas propriedades representam os diferentes tipos de folhas de estilo XSL Transformation que podem ser usados para formatar o documento XML. Você pode formatar o documento XML com um <xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=fullName>do objeto ou com uma transformação XSL arquivo de folha de estilo, definindo a propriedade apropriada.</xref:System.Xml.Xsl.XslCompiledTransform?displayProperty=fullName> Se nenhuma folha de estilos XSL Transformation for especificada, o documento XML é exibido usando o formato padrão. A tabela a seguir lista as propriedades para especificar uma folha de estilos XSL Transformation.      | Propriedade | Descrição |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.Xml.Transform%2A>| Formata o documento XML usando especificado <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>objeto.</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> </xref:System.Web.UI.WebControls.Xml.Transform%2A> **Observação:** usando um objeto <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>requer `Full Trust` permissões. |   | <xref:System.Web.UI.WebControls.Xml.TransformSource%2A>| Formata o documento XML usando o arquivo de folha de estilo XSL Transformation especificado. |      > [!NOTE] > Folha de estilos a transformação em XSL é opcional.</xref:System.Web.UI.WebControls.Xml.TransformSource%2A> </xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> Você não precisa definir o <xref:System.Web.UI.WebControls.Xml.Transform%2A>ou o <xref:System.Web.UI.WebControls.Xml.TransformSource%2A>propriedade.</xref:System.Web.UI.WebControls.Xml.TransformSource%2A> </xref:System.Web.UI.WebControls.Xml.Transform%2A> Se ambas as propriedades de folha de estilo XSL Transformation for definidas, o último conjunto de propriedade determina qual folha de estilo XSL Transformation é usada para formatar o documento XML. Outra propriedade é ignorada.       A classe de Xml também fornece o <xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A>propriedade, que permite que você forneça a folha de estilos XSL Transformation com argumentos opcionais.</xref:System.Web.UI.WebControls.Xml.TransformArgumentList%2A> Os argumentos podem ser parâmetros de transformações XSL (XSLT) ou objetos de extensão.      <a name=&quot;declarative_syntax&quot;></a># # Sintaxe de declarativa```   <asp:Xml       DocumentSource=&quot;uri&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       TransformSource=&quot;string&quot;       Visible=&quot;True|False&quot;   />   ```"
  example:
  - "The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \n  \n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_196_1.aspx)]\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_196_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("DocumentSource")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.WebControls.XmlBuilder))]

      [System.Web.UI.PersistChildren(false, true)]

      public class Xml : System.Web.UI.Control
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Xml()
  nameWithType: Xml.Xml()
  fullName: System.Web.UI.WebControls.Xml.Xml()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref> classe."
  syntax:
    content: public Xml ();
    parameters: []
  overload: System.Web.UI.WebControls.Xml.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)
  id: AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: AddParsedSubObject(Object)
  nameWithType: Xml.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.Xml.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Notifica o controle de servidor que um elemento XML ou HTML, foi analisado e adiciona o elemento para o controle de servidor <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddParsedSubObject method in a custom <xref:System.Web.UI.WebControls.Xml> server control.  \n  \n [!code-cs[CustomXmlAddParsedSubObject#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_244_1.aspx)]\n [!code-vb[CustomXmlAddParsedSubObject#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_244_1.aspx)]  \n  \n [!code-vb[CustomXmlAddParsedSubObject#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_244_2.vb)]\n [!code-cs[CustomXmlAddParsedSubObject#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_244_2.cs)]"
  syntax:
    content: protected override void AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Um <xref:System.Object>que representa o elemento analisado.</xref:System.Object>"
  overload: System.Web.UI.WebControls.Xml.AddParsedSubObject*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<code>obj</code>não é do tipo <xref href=&quot;System.Web.UI.LiteralControl&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.ClientID
  id: ClientID
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: ClientID
  nameWithType: Xml.ClientID
  fullName: System.Web.UI.WebControls.Xml.ClientID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Substitui o &lt;xref:System.Web.UI.Control.ClientID%2A?displayProperty=fullName&gt; propriedade e retorna o identificador de controle de servidor de base."
  syntax:
    content: public override string ClientID { get; }
    return:
      type: System.String
      description: "O identificador de controle de servidor de base."
  overload: System.Web.UI.WebControls.Xml.ClientID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Controls
  id: Controls
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Controls
  nameWithType: Xml.Controls
  fullName: System.Web.UI.WebControls.Xml.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Substitui o &lt;xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName&gt; propriedade e retorna a base de <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> coleção."
  syntax:
    content: public override System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "A base de <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> coleção."
  overload: System.Web.UI.WebControls.Xml.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: Xml.CreateControlCollection()
  fullName: System.Web.UI.WebControls.Xml.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria um novo <xref href=&quot;System.Web.UI.EmptyControlCollection&quot;> </xref> objeto."
  remarks: "O método CreateControlCollection é usado principalmente por desenvolvedores de controle estender a funcionalidade do <xref:System.Web.UI.WebControls.Xml>controle.</xref:System.Web.UI.WebControls.Xml>"
  syntax:
    content: protected override System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "Sempre retorna um <xref href=&quot;System.Web.UI.EmptyControlCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.Xml.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Document
  id: Document
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Document
  nameWithType: Xml.Document
  fullName: System.Web.UI.WebControls.Xml.Document
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> para exibir o <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref> controle."
  remarks: "A propriedade de documento está obsoleta. Para especificar o XML que será exibido no <xref:System.Web.UI.WebControls.Xml>controlar, use o <xref:System.Web.UI.WebControls.Xml.DocumentContent%2A>propriedade ou o <xref:System.Web.UI.WebControls.Xml.DocumentSource%2A>propriedade.</xref:System.Web.UI.WebControls.Xml.DocumentSource%2A> </xref:System.Web.UI.WebControls.Xml.DocumentContent%2A> </xref:System.Web.UI.WebControls.Xml> Para obter mais informações sobre essas alternativas, consulte a visão geral da classe para o <xref:System.Web.UI.WebControls.Xml>controle.</xref:System.Web.UI.WebControls.Xml>       O documento XML para exibir o <xref:System.Web.UI.WebControls.Xml>controle é especificado em um dos três modos.</xref:System.Web.UI.WebControls.Xml> Você pode especificar um <xref:System.Xml.XmlDocument?displayProperty=fullName>objeto, uma cadeia de caracteres XML ou um arquivo XML, definindo a propriedade apropriada.</xref:System.Xml.XmlDocument?displayProperty=fullName> A propriedade de documento é usada para especificar um <xref:System.Xml.XmlDocument?displayProperty=fullName>(representando um documento XML) para exibir no controle.</xref:System.Xml.XmlDocument?displayProperty=fullName>"
  example:
  - "The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \n  \n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_173_1.aspx)]\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_173_1.aspx)]"
  syntax:
    content: public System.Xml.XmlDocument Document { get; set; }
    return:
      type: System.Xml.XmlDocument
      description: "O <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> para exibir o <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.Xml.Document*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.DocumentContent
  id: DocumentContent
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: DocumentContent
  nameWithType: Xml.DocumentContent
  fullName: System.Web.UI.WebControls.Xml.DocumentContent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Define uma cadeia de caracteres que contém o documento XML para exibir o <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref> controle."
  remarks: "O documento XML para exibir o <xref:System.Web.UI.WebControls.Xml>controle é especificado em um dos três modos.</xref:System.Web.UI.WebControls.Xml> Você pode especificar um <xref:System.Xml.XmlDocument?displayProperty=fullName>objeto, uma cadeia de caracteres XML ou um arquivo XML, definindo a propriedade apropriada.</xref:System.Xml.XmlDocument?displayProperty=fullName> A propriedade DocumentContent é usada para especificar uma cadeia de caracteres XML (representando um documento XML) para exibir no controle. O DocumentContent propriedade normalmente por meio de programação não está definida ou estiver definida como um atributo do controle. Em vez disso, a cadeia de caracteres XML é geralmente definida declarativamente colocando o texto entre a abertura e fechamento `<asp:Xml>` marcas do controle.      > [!NOTE] > Embora a propriedade DocumentContent contém `get` e `set` acessadores, somente o `set` acessador é útil. Se você usar o `get` acessador, <xref:System.String.Empty?displayProperty=fullName>será retornado.</xref:System.String.Empty?displayProperty=fullName>"
  syntax:
    content: public string DocumentContent { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o XML de documento para exibir o <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.Xml.DocumentContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.DocumentSource
  id: DocumentSource
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: DocumentSource
  nameWithType: Xml.DocumentSource
  fullName: System.Web.UI.WebControls.Xml.DocumentSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o caminho para um documento XML para exibir o <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref> controle."
  remarks: "O documento XML para exibir o <xref:System.Web.UI.WebControls.Xml>controle é especificado em um dos três modos.</xref:System.Web.UI.WebControls.Xml> Você pode especificar um <xref:System.Xml.XmlDocument?displayProperty=fullName>objeto, uma cadeia de caracteres XML ou um arquivo XML, definindo a propriedade apropriada.</xref:System.Xml.XmlDocument?displayProperty=fullName> A propriedade DocumentSource é usada para especificar o caminho para um arquivo XML (representando um documento XML) para exibir no controle. Você pode usar um caminho relativo ou absoluto. Um caminho relativo relaciona o local do arquivo para o local do controle de página ou usuário de formulários da Web, sem especificar um caminho completo no servidor. O caminho é relativo ao local da página da Web. Isso torna mais fácil mover todo o site para outro diretório no servidor sem atualizar o caminho para o arquivo de código. Um caminho absoluto fornece o caminho completo, para que mover o site para outro diretório requer a atualização do código."
  example:
  - "The following code example shows how to display an XML document using an XSL Transform in the <xref:System.Web.UI.WebControls.Xml> control.  \n  \n [!code-vb[XmlControlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_902_1.aspx)]\n [!code-cs[XmlControlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_902_1.aspx)]"
  syntax:
    content: public string DocumentSource { get; set; }
    return:
      type: System.String
      description: "O caminho para um documento XML para exibir o <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.Xml.DocumentSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: EnableTheming
  nameWithType: Xml.EnableTheming
  fullName: System.Web.UI.WebControls.Xml.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Substitui o &lt;xref:System.Web.UI.Control.EnableTheming%2A?displayProperty=fullName&gt; propriedade. Não há suporte para essa propriedade o <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref> classe."
  remarks: "A propriedade EnableTheming é herdada do <xref:System.Web.UI.Control>classe, mas não aplicável para a <xref:System.Web.UI.WebControls.Xml>classe.</xref:System.Web.UI.WebControls.Xml> </xref:System.Web.UI.Control> Qualquer tentativa de definir o valor dessa propriedade gera uma <xref:System.NotSupportedException>exceção.</xref:System.NotSupportedException>"
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "Sempre retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Não há suporte para essa propriedade."
  overload: System.Web.UI.WebControls.Xml.EnableTheming*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "É feita uma tentativa para definir o valor dessa propriedade."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: Xml.FindControl(String)
  fullName: System.Web.UI.WebControls.Xml.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Pesquisa o contêiner de nomeação de página para o controle de servidor especificado."
  syntax:
    content: public override System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "O identificador para o controle a ser localizado."
    return:
      type: System.Web.UI.Control
      description: "O controle especificado; Caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o controle especificado não existe."
  overload: System.Web.UI.WebControls.Xml.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Focus
  id: Focus
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Focus()
  nameWithType: Xml.Focus()
  fullName: System.Web.UI.WebControls.Xml.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Substitui o &lt;xref:System.Web.UI.Control.Focus%2A?displayProperty=fullName&gt; método. Este método não é suportado pelo <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref> classe."
  remarks: "O método de foco é herdado da <xref:System.Web.UI.Control>classe, mas é não aplicável para a <xref:System.Web.UI.WebControls.Xml>classe.</xref:System.Web.UI.WebControls.Xml> </xref:System.Web.UI.Control> Qualquer tentativa de invocar o método gera uma <xref:System.NotSupportedException>exceção.</xref:System.NotSupportedException>"
  syntax:
    content: public override void Focus ();
    parameters: []
  overload: System.Web.UI.WebControls.Xml.Focus*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "É feita uma tentativa para invocar esse método."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.GetDesignModeState
  id: GetDesignModeState
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: GetDesignModeState()
  nameWithType: Xml.GetDesignModeState()
  fullName: System.Web.UI.WebControls.Xml.GetDesignModeState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém os dados de tempo de design para um controle."
  remarks: "O método GetDesignModeState é um método auxiliar usado para obter o estado atual de tempo de design do <xref:System.Web.UI.WebControls.Xml>controle.</xref:System.Web.UI.WebControls.Xml>"
  syntax:
    content: protected override System.Collections.IDictionary GetDesignModeState ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que contém os dados de tempo de design para o <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref> controle.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.WebControls.Xml.GetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.HasControls
  id: HasControls
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: HasControls()
  nameWithType: Xml.HasControls()
  fullName: System.Web.UI.WebControls.Xml.HasControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se o controle de servidor contém os controles filho."
  syntax:
    content: public override bool HasControls ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle contiver outros controles. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Xml.HasControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Xml.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Xml.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renderiza os resultados para o fluxo de saída."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the Render method in a custom server control so that the <xref:System.Web.UI.WebControls.Xml> control is always displayed with an image.  \n  \n [!code-vb[CustomXmlRender#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_194_1.aspx)]\n [!code-cs[CustomXmlRender#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_194_1.aspx)]  \n  \n [!code-cs[CustomXmlRender#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_194_2.cs)]\n [!code-vb[CustomXmlRender#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_194_2.vb)]"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter output);
    parameters:
    - id: output
      type: System.Web.UI.HtmlTextWriter
      description: "O resultado do fluxo de saída."
  overload: System.Web.UI.WebControls.Xml.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: SkinID
  nameWithType: Xml.SkinID
  fullName: System.Web.UI.WebControls.Xml.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Substitui o &lt;xref:System.Web.UI.Control.SkinID%2A?displayProperty=fullName&gt; propriedade. Não há suporte para essa propriedade o <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref> classe."
  remarks: "A propriedade SkinID é herdada do <xref:System.Web.UI.Control>classe, mas não aplicável para a <xref:System.Web.UI.WebControls.Xml>classe.</xref:System.Web.UI.WebControls.Xml> </xref:System.Web.UI.Control> Qualquer tentativa de definir o valor dessa propriedade gera uma <xref:System.NotSupportedException>exceção.</xref:System.NotSupportedException>"
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "Sempre retorna uma cadeia de caracteres vazia (&quot;&quot;). Não há suporte para essa propriedade."
  overload: System.Web.UI.WebControls.Xml.SkinID*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "É feita uma tentativa para definir o valor dessa propriedade."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.Transform
  id: Transform
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: Transform
  nameWithType: Xml.Transform
  fullName: System.Web.UI.WebControls.Xml.Transform
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o <xref href=&quot;System.Xml.Xsl.XslTransform&quot;> </xref> objeto que formata o documento XML antes de serem gravado no fluxo de saída."
  remarks: "Ao usar o <xref:System.Web.UI.WebControls.Xml>controle para exibir um documento XML, opcionalmente, você pode especificar uma folha de estilos de transformação de linguagem de folha de estilos extensível (XSLT) que formata o documento XML, antes de serem gravado no fluxo de saída de uma das duas maneiras.</xref:System.Web.UI.WebControls.Xml> Você pode formatar o documento XML com um uma <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>objeto ou um arquivo de folha de estilos XSL Transformation.</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> Se nenhum documento transformação XSL for especificado, o documento XML é exibido usando o formato padrão. A propriedade de transformação é usada para especificar um <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>objeto (representando um documento de transformação em XSL) usado para formatar o documento XML antes de serem gravado no fluxo de saída.</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>      > [!NOTE] > Usando um <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>objeto requer `Full Trust` permissões.</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>"
  example:
  - "The following code example shows how to create <xref:System.Xml.XmlDocument> and <xref:System.Xml.Xsl.XslTransform> objects from a sample XML file and an XSL Transformation style sheet. The objects are then used by the XML control to display the XML document.  \n  \n [!code-cs[XmlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_569_1.aspx)]\n [!code-vb[XmlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_569_1.aspx)]"
  syntax:
    content: public System.Xml.Xsl.XslTransform Transform { get; set; }
    return:
      type: System.Xml.Xsl.XslTransform
      description: "O <xref href=&quot;System.Xml.Xsl.XslTransform&quot;> </xref> que formata o documento XML antes de serem gravado no fluxo de saída."
  overload: System.Web.UI.WebControls.Xml.Transform*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.TransformArgumentList
  id: TransformArgumentList
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: TransformArgumentList
  nameWithType: Xml.TransformArgumentList
  fullName: System.Web.UI.WebControls.Xml.TransformArgumentList
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém uma lista de argumentos opcionais passados para a folha de estilo e usado durante a transformação de linguagem de folha de estilos (XSLT) extensível."
  remarks: "Use a propriedade TransformArgumentList para fornecer a folha de estilos XSL Transformation com argumentos opcionais. Os argumentos podem ser parâmetros XSLT ou objetos de extensão.       Para obter mais informações sobre como usar o <xref:System.Xml.Xsl.XsltArgumentList?displayProperty=fullName>de classe, consulte [XsltArgumentList para parâmetros de folha de estilos e objetos de extensão](~/add/includes/ajax-current-ext-md.md).</xref:System.Xml.Xsl.XsltArgumentList?displayProperty=fullName>"
  syntax:
    content: public System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }
    return:
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> que contém uma lista de argumentos opcionais passados para a folha de estilo e usado durante a transformação XSL."
  overload: System.Web.UI.WebControls.Xml.TransformArgumentList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.TransformSource
  id: TransformSource
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: TransformSource
  nameWithType: Xml.TransformSource
  fullName: System.Web.UI.WebControls.Xml.TransformSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o caminho para uma folha de estilos de transformação de linguagem de folha de estilos extensível (XSLT) que formata o documento XML antes de serem gravado no fluxo de saída."
  remarks: "Ao usar o <xref:System.Web.UI.WebControls.Xml>controle para exibir um documento XML, opcionalmente, você pode especificar uma folha de estilos XSL Transformation que formata o documento XML antes de serem gravado no fluxo de saída de uma das duas maneiras.</xref:System.Web.UI.WebControls.Xml> Ou você pode formatar o documento XML com um <xref:System.Xml.Xsl.XslTransform?displayProperty=fullName>de objeto ou arquivo de folha de estilo com uma transformação XSL.</xref:System.Xml.Xsl.XslTransform?displayProperty=fullName> Se nenhuma folha de estilos XSL Transformation for especificada, o documento XML é exibido usando o formato padrão. A propriedade TransformSource é usada para especificar o caminho para um arquivo de folha de estilo XSL Transformation (representando uma folha de estilos XSL Transformation) usado para formatar o documento XML antes de serem gravado no fluxo de saída. Você pode usar um caminho relativo ou absoluto. Um caminho relativo relaciona o local do arquivo para o local do controle de página ou usuário de formulários da Web, sem especificar um caminho completo no servidor. O caminho é relativo ao local da página da Web. Isso torna mais fácil mover todo o site para outro diretório no servidor sem atualizar o caminho para o arquivo de código. Um caminho absoluto fornece o caminho completo, para que mover o site para outro diretório requer a atualização do código."
  example:
  - "The following code example shows how to display an XML document using an XSL Transform in the <xref:System.Web.UI.WebControls.Xml> control.  \n  \n [!code-vb[XmlControlClassExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_330_1.aspx)]\n [!code-cs[XmlControlClassExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_330_1.aspx)]"
  syntax:
    content: public string TransformSource { get; set; }
    return:
      type: System.String
      description: "O caminho para uma folha de estilos XSL Transformation que formata o documento XML antes de serem gravado no fluxo de saída."
  overload: System.Web.UI.WebControls.Xml.TransformSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Xml.XPathNavigator
  id: XPathNavigator
  parent: System.Web.UI.WebControls.Xml
  langs:
  - csharp
  name: XPathNavigator
  nameWithType: Xml.XPathNavigator
  fullName: System.Web.UI.WebControls.Xml.XPathNavigator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um modelo de cursor para navegar e editar os dados XML associados a <xref href=&quot;System.Web.UI.WebControls.Xml&quot;> </xref> controle."
  remarks: "Essa propriedade pode ser usada para associar um <xref:System.Xml.XPath.XPathNavigator>do objeto com o <xref:System.Web.UI.WebControls.Xml>controle.</xref:System.Web.UI.WebControls.Xml> </xref:System.Xml.XPath.XPathNavigator>       Um <xref:System.Xml.XPath.XPathNavigator>objeto é criado a partir de uma classe que implementa o <xref:System.Xml.XPath.IXPathNavigable>interface, como o <xref:System.Xml.XPath.XPathDocument>e <xref:System.Xml.XmlDocument>classes.</xref:System.Xml.XmlDocument> </xref:System.Xml.XPath.XPathDocument> </xref:System.Xml.XPath.IXPathNavigable> </xref:System.Xml.XPath.XPathNavigator> <xref:System.Xml.XPath.XPathNavigator>objetos criados por <xref:System.Xml.XPath.XPathDocument>objetos são somente leitura, e <xref:System.Xml.XPath.XPathNavigator>objetos criados por <xref:System.Xml.XmlDocument>objetos podem ser editados.</xref:System.Xml.XmlDocument> </xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XPath.XPathDocument></xref:System.Xml.XPath.XPathNavigator> Um <xref:System.Xml.XPath.XPathNavigator>status de somente leitura ou editável do objeto é determinado usando a <xref:System.Xml.XPath.XPathNavigator.CanEdit%2A>propriedade de <xref:System.Xml.XPath.XPathNavigator>classe.</xref:System.Xml.XPath.XPathNavigator> </xref:System.Xml.XPath.XPathNavigator.CanEdit%2A> </xref:System.Xml.XPath.XPathNavigator>"
  syntax:
    content: public System.Xml.XPath.XPathNavigator XPathNavigator { get; set; }
    return:
      type: System.Xml.XPath.XPathNavigator
      description: "Um <xref href=&quot;System.Xml.XPath.XPathNavigator&quot;> </xref> objeto."
  overload: System.Web.UI.WebControls.Xml.XPathNavigator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.Xml.#ctor
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Xml()
  nameWithType: Xml.Xml()
  fullName: System.Web.UI.WebControls.Xml.Xml()
- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject(System.Object)
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: Xml.AddParsedSubObject(Object)
  fullName: System.Web.UI.WebControls.Xml.AddParsedSubObject(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.Xml.ClientID
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: ClientID
  nameWithType: Xml.ClientID
  fullName: System.Web.UI.WebControls.Xml.ClientID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Xml.Controls
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Controls
  nameWithType: Xml.Controls
  fullName: System.Web.UI.WebControls.Xml.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.WebControls.Xml.CreateControlCollection
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: CreateControlCollection()
  nameWithType: Xml.CreateControlCollection()
  fullName: System.Web.UI.WebControls.Xml.CreateControlCollection()
- uid: System.Web.UI.WebControls.Xml.Document
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Document
  nameWithType: Xml.Document
  fullName: System.Web.UI.WebControls.Xml.Document
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Web.UI.WebControls.Xml.DocumentContent
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentContent
  nameWithType: Xml.DocumentContent
  fullName: System.Web.UI.WebControls.Xml.DocumentContent
- uid: System.Web.UI.WebControls.Xml.DocumentSource
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentSource
  nameWithType: Xml.DocumentSource
  fullName: System.Web.UI.WebControls.Xml.DocumentSource
- uid: System.Web.UI.WebControls.Xml.EnableTheming
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: EnableTheming
  nameWithType: Xml.EnableTheming
  fullName: System.Web.UI.WebControls.Xml.EnableTheming
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Xml.FindControl(System.String)
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: FindControl(String)
  nameWithType: Xml.FindControl(String)
  fullName: System.Web.UI.WebControls.Xml.FindControl(String)
- uid: System.Web.UI.WebControls.Xml.Focus
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Focus()
  nameWithType: Xml.Focus()
  fullName: System.Web.UI.WebControls.Xml.Focus()
- uid: System.Web.UI.WebControls.Xml.GetDesignModeState
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: GetDesignModeState()
  nameWithType: Xml.GetDesignModeState()
  fullName: System.Web.UI.WebControls.Xml.GetDesignModeState()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.Xml.HasControls
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: HasControls()
  nameWithType: Xml.HasControls()
  fullName: System.Web.UI.WebControls.Xml.HasControls()
- uid: System.Web.UI.WebControls.Xml.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Xml.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Xml.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Xml.SkinID
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: SkinID
  nameWithType: Xml.SkinID
  fullName: System.Web.UI.WebControls.Xml.SkinID
- uid: System.Web.UI.WebControls.Xml.Transform
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Transform
  nameWithType: Xml.Transform
  fullName: System.Web.UI.WebControls.Xml.Transform
- uid: System.Xml.Xsl.XslTransform
  parent: System.Xml.Xsl
  isExternal: false
  name: XslTransform
  nameWithType: XslTransform
  fullName: System.Xml.Xsl.XslTransform
- uid: System.Web.UI.WebControls.Xml.TransformArgumentList
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformArgumentList
  nameWithType: Xml.TransformArgumentList
  fullName: System.Web.UI.WebControls.Xml.TransformArgumentList
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Web.UI.WebControls.Xml.TransformSource
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformSource
  nameWithType: Xml.TransformSource
  fullName: System.Web.UI.WebControls.Xml.TransformSource
- uid: System.Web.UI.WebControls.Xml.XPathNavigator
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: XPathNavigator
  nameWithType: Xml.XPathNavigator
  fullName: System.Web.UI.WebControls.Xml.XPathNavigator
- uid: System.Xml.XPath.XPathNavigator
  parent: System.Xml.XPath
  isExternal: false
  name: XPathNavigator
  nameWithType: XPathNavigator
  fullName: System.Xml.XPath.XPathNavigator
- uid: System.Web.UI.WebControls.Xml.#ctor*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Xml
  nameWithType: Xml.Xml
- uid: System.Web.UI.WebControls.Xml.AddParsedSubObject*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: AddParsedSubObject
  nameWithType: Xml.AddParsedSubObject
- uid: System.Web.UI.WebControls.Xml.ClientID*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: ClientID
  nameWithType: Xml.ClientID
- uid: System.Web.UI.WebControls.Xml.Controls*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Controls
  nameWithType: Xml.Controls
- uid: System.Web.UI.WebControls.Xml.CreateControlCollection*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: CreateControlCollection
  nameWithType: Xml.CreateControlCollection
- uid: System.Web.UI.WebControls.Xml.Document*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Document
  nameWithType: Xml.Document
- uid: System.Web.UI.WebControls.Xml.DocumentContent*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentContent
  nameWithType: Xml.DocumentContent
- uid: System.Web.UI.WebControls.Xml.DocumentSource*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: DocumentSource
  nameWithType: Xml.DocumentSource
- uid: System.Web.UI.WebControls.Xml.EnableTheming*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: EnableTheming
  nameWithType: Xml.EnableTheming
- uid: System.Web.UI.WebControls.Xml.FindControl*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: FindControl
  nameWithType: Xml.FindControl
- uid: System.Web.UI.WebControls.Xml.Focus*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Focus
  nameWithType: Xml.Focus
- uid: System.Web.UI.WebControls.Xml.GetDesignModeState*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: GetDesignModeState
  nameWithType: Xml.GetDesignModeState
- uid: System.Web.UI.WebControls.Xml.HasControls*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: HasControls
  nameWithType: Xml.HasControls
- uid: System.Web.UI.WebControls.Xml.Render*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Render
  nameWithType: Xml.Render
- uid: System.Web.UI.WebControls.Xml.SkinID*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: SkinID
  nameWithType: Xml.SkinID
- uid: System.Web.UI.WebControls.Xml.Transform*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: Transform
  nameWithType: Xml.Transform
- uid: System.Web.UI.WebControls.Xml.TransformArgumentList*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformArgumentList
  nameWithType: Xml.TransformArgumentList
- uid: System.Web.UI.WebControls.Xml.TransformSource*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: TransformSource
  nameWithType: Xml.TransformSource
- uid: System.Web.UI.WebControls.Xml.XPathNavigator*
  parent: System.Web.UI.WebControls.Xml
  isExternal: false
  name: XPathNavigator
  nameWithType: Xml.XPathNavigator
