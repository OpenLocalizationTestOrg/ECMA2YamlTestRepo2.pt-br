### YamlMime:ManagedReference
items:
- uid: System.Windows.Media.PathSegmentCollection
  id: PathSegmentCollection
  children:
  - System.Windows.Media.PathSegmentCollection.#ctor
  - System.Windows.Media.PathSegmentCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment})
  - System.Windows.Media.PathSegmentCollection.#ctor(System.Int32)
  - System.Windows.Media.PathSegmentCollection.Add(System.Windows.Media.PathSegment)
  - System.Windows.Media.PathSegmentCollection.Clear
  - System.Windows.Media.PathSegmentCollection.Clone
  - System.Windows.Media.PathSegmentCollection.CloneCore(System.Windows.Freezable)
  - System.Windows.Media.PathSegmentCollection.CloneCurrentValue
  - System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore(System.Windows.Freezable)
  - System.Windows.Media.PathSegmentCollection.Contains(System.Windows.Media.PathSegment)
  - System.Windows.Media.PathSegmentCollection.CopyTo(System.Windows.Media.PathSegment[],System.Int32)
  - System.Windows.Media.PathSegmentCollection.Count
  - System.Windows.Media.PathSegmentCollection.CreateInstanceCore
  - System.Windows.Media.PathSegmentCollection.FreezeCore(System.Boolean)
  - System.Windows.Media.PathSegmentCollection.GetAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  - System.Windows.Media.PathSegmentCollection.GetEnumerator
  - System.Windows.Media.PathSegmentCollection.IndexOf(System.Windows.Media.PathSegment)
  - System.Windows.Media.PathSegmentCollection.Insert(System.Int32,System.Windows.Media.PathSegment)
  - System.Windows.Media.PathSegmentCollection.Item(System.Int32)
  - System.Windows.Media.PathSegmentCollection.Remove(System.Windows.Media.PathSegment)
  - System.Windows.Media.PathSegmentCollection.RemoveAt(System.Int32)
  - System.Windows.Media.PathSegmentCollection.System#Collections#Generic#ICollection{System#Windows#Media#PathSegment}#IsReadOnly
  - System.Windows.Media.PathSegmentCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#PathSegment}#GetEnumerator
  - System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  - System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#IsSynchronized
  - System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#SyncRoot
  - System.Windows.Media.PathSegmentCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsReadOnly
  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Media.PathSegmentCollection.System#Collections#IList#Remove(System.Object)
  langs:
  - csharp
  name: PathSegmentCollection
  nameWithType: PathSegmentCollection
  fullName: System.Windows.Media.PathSegmentCollection
  type: Class
  summary: "Representa uma coleção de <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> objetos que podem ser acessados separadamente por índice."
  remarks: "Exceto conforme observado, os membros desta classe se comportam exatamente conforme descrito pelo <xref:System.Collections.Generic.IList%601>, <xref:System.Collections.Generic.ICollection%601>, e <xref:System.Collections.Generic.IEnumerable%601>documentação.</xref:System.Collections.Generic.IEnumerable%601> </xref:System.Collections.Generic.ICollection%601> </xref:System.Collections.Generic.IList%601>       **Recursos de Freezable:** porque ele herda o <xref:System.Windows.Freezable>classe, a classe PathSegmentCollection fornece vários recursos especiais: PathSegmentCollection objetos podem ser declarados como, compartilhados entre vários objetos, somente leitura para melhorar o desempenho, clonados e tornados thread-safe.</xref:System.Windows.Freezable> Para obter mais informações sobre os diferentes recursos fornecidos pelo <xref:System.Windows.Freezable>objetos, consulte o [visão geral de objetos Freezable](~/add/includes/ajax-current-ext-md.md).</xref:System.Windows.Freezable>      <a name=&quot;xamlImplicitCollectionUsage_PathSegmentCollection&quot;></a># # Uso de coleção implícita XAML ```   <object>     <object.property>       oneOrMorePathSegmentObjectElements     </object.property>   </object>   ``` <a name=&quot;xamlValues_PathSegmentCollection&quot;> </a> # # XAML valores *oneOrMorePathSegmentObjectElements* um ou mais <xref:System.Windows.Media.PathSegment>objetos, declarados usando a sintaxe de elemento de objeto.</xref:System.Windows.Media.PathSegment>      "
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.None, Readability=System.Windows.Readability.Unreadable)]

      public sealed class PathSegmentCollection : System.Windows.Media.Animation.Animatable, System.Collections.Generic.ICollection<System.Windows.Media.PathSegment>, System.Collections.Generic.IEnumerable<System.Windows.Media.PathSegment>, System.Collections.Generic.IList<System.Windows.Media.PathSegment>, System.Collections.IList
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.Freezable
  - System.Windows.Media.Animation.Animatable
  implements:
  - System.Collections.Generic.ICollection<System.Windows.Media.PathSegment>
  - System.Collections.Generic.IEnumerable<System.Windows.Media.PathSegment>
  - System.Collections.Generic.IList<System.Windows.Media.PathSegment>
  - System.Collections.IList
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Freezable.CanFreeze
  - System.Windows.Freezable.Changed
  - System.Windows.Freezable.CreateInstance
  - System.Windows.Freezable.Freeze
  - System.Windows.Freezable.Freeze(System.Windows.Freezable,System.Boolean)
  - System.Windows.Freezable.GetAsFrozen
  - System.Windows.Freezable.GetCurrentValueAsFrozen
  - System.Windows.Freezable.IsFrozen
  - System.Windows.Freezable.OnChanged
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject)
  - System.Windows.Freezable.OnFreezablePropertyChanged(System.Windows.DependencyObject,System.Windows.DependencyObject,System.Windows.DependencyProperty)
  - System.Windows.Freezable.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.Freezable.ReadPreamble
  - System.Windows.Freezable.WritePostscript
  - System.Windows.Freezable.WritePreamble
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock)
  - System.Windows.Media.Animation.Animatable.ApplyAnimationClock(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationClock,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline)
  - System.Windows.Media.Animation.Animatable.BeginAnimation(System.Windows.DependencyProperty,System.Windows.Media.Animation.AnimationTimeline,System.Windows.Media.Animation.HandoffBehavior)
  - System.Windows.Media.Animation.Animatable.GetAnimationBaseValue(System.Windows.DependencyProperty)
  - System.Windows.Media.Animation.Animatable.HasAnimatedProperties
  - System.Windows.Media.Animation.Animatable.ShouldSerializeStoredWeakReference(System.Windows.DependencyObject)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.#ctor
  id: '#ctor'
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: PathSegmentCollection()
  nameWithType: PathSegmentCollection.PathSegmentCollection()
  fullName: System.Windows.Media.PathSegmentCollection.PathSegmentCollection()
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inicializa uma nova instância de um <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>."
  syntax:
    content: public PathSegmentCollection ();
    parameters: []
  overload: System.Windows.Media.PathSegmentCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment})'
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: PathSegmentCollection(IEnumerable<PathSegment>)
  nameWithType: PathSegmentCollection.PathSegmentCollection(IEnumerable<PathSegment>)
  fullName: System.Windows.Media.PathSegmentCollection.PathSegmentCollection(IEnumerable<PathSegment>)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref> classe com o conjunto especificado de <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> objetos."
  syntax:
    content: public PathSegmentCollection (System.Collections.Generic.IEnumerable<System.Windows.Media.PathSegment> collection);
    parameters:
    - id: collection
      type: System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment}
      description: "A coleção de <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> objetos que compõem o <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>."
  overload: System.Windows.Media.PathSegmentCollection.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>collection</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: PathSegmentCollection(Int32)
  nameWithType: PathSegmentCollection.PathSegmentCollection(Int32)
  fullName: System.Windows.Media.PathSegmentCollection.PathSegmentCollection(Int32)
  type: Constructor
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref> classe com a capacidade especificada ou o número de <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> a coleção é inicialmente capaz de armazenar os objetos."
  syntax:
    content: public PathSegmentCollection (int capacity);
    parameters:
    - id: capacity
      type: System.Int32
      description: "O número de <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> objetos que a coleção é inicialmente capaz de armazenar."
  overload: System.Windows.Media.PathSegmentCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.Add(System.Windows.Media.PathSegment)
  id: Add(System.Windows.Media.PathSegment)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: Add(PathSegment)
  nameWithType: PathSegmentCollection.Add(PathSegment)
  fullName: System.Windows.Media.PathSegmentCollection.Add(PathSegment)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Adiciona um <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> ao final da coleção."
  remarks: "Porque <xref:System.Windows.Media.PathSegment>objetos derivam <xref:System.Windows.Freezable>, eles são copiados quando eles são usados.</xref:System.Windows.Freezable> </xref:System.Windows.Media.PathSegment> Portanto, você não poderá recuperar mais tarde ou remover o <xref:System.Windows.Media.PathSegment>adicionado à coleção usando o original <xref:System.Windows.Media.PathSegment>objeto; o <xref:System.Windows.Media.PathSegment>na coleção é uma cópia do original <xref:System.Windows.Media.PathSegment>e é considerado um diferentes <xref:System.Windows.Media.PathSegment>que você adicionou.</xref:System.Windows.Media.PathSegment> </xref:System.Windows.Media.PathSegment> </xref:System.Windows.Media.PathSegment> </xref:System.Windows.Media.PathSegment> </xref:System.Windows.Media.PathSegment>       Ao contrário das implementações comuns de <xref:System.Collections.Generic.ICollection%601.Add%2A?displayProperty=fullName>, esta implementação lança um <xref:System.ArgumentException>se você tentar adicionar um **nulo** (**nada**) referência.</xref:System.ArgumentException> </xref:System.Collections.Generic.ICollection%601.Add%2A?displayProperty=fullName>"
  syntax:
    content: public void Add (System.Windows.Media.PathSegment value);
    parameters:
    - id: value
      type: System.Windows.Media.PathSegment
      description: "O segmento a ser adicionado à coleção."
  overload: System.Windows.Media.PathSegmentCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=\"System.Windows.Media.PathSegmentCollection\"></xref> is read-only.  \n  \n \\- or -  \n  \n The <xref href=\"System.Windows.Media.PathSegmentCollection\"></xref> has a fixed size."
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.Clear
  id: Clear
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: PathSegmentCollection.Clear()
  fullName: System.Windows.Media.PathSegmentCollection.Clear()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Limpa a coleção de todos os segmentos e redefine <xref:System.Windows.Media.PathSegmentCollection.Count*>como zero.</xref:System.Windows.Media.PathSegmentCollection.Count*>"
  remarks: "Este método não altera a capacidade de <xref:System.Windows.Media.PathSegmentCollection>.</xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Windows.Media.PathSegmentCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref> é somente leitura."
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.Clone
  id: Clone
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: Clone()
  nameWithType: PathSegmentCollection.Clone()
  fullName: System.Windows.Media.PathSegmentCollection.Clone()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Cria um clone modificável <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>, fazendo cópias profundas dos valores do objeto. Ao copiar as propriedades de dependência, esse método copia associações de dados e as referências de recurso (mas eles não podem resolver) mas não animações ou seus valores atuais."
  remarks: "Esse método é usado para produzir cópias modificáveis de congelada <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.       Para obter mais informações, consulte <xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.Clone%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.PathSegmentCollection Clone ();
    parameters: []
    return:
      type: System.Windows.Media.PathSegmentCollection
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade será <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> mesmo se a fonte <> </> *> era de propriedade<xref uid=&quot;langword_csharp_true.&quot; name=&quot;true.&quot; href=&quot;&quot;></xref>"
  overload: System.Windows.Media.PathSegmentCollection.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.CloneCore(System.Windows.Freezable)
  id: CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: CloneCore(Freezable)
  nameWithType: PathSegmentCollection.CloneCore(Freezable)
  fullName: System.Windows.Media.PathSegmentCollection.CloneCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override void CloneCore (System.Windows.Freezable source);
    parameters:
    - id: source
      type: System.Windows.Freezable
      description: "A ser adicionado."
  overload: System.Windows.Media.PathSegmentCollection.CloneCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.CloneCurrentValue
  id: CloneCurrentValue
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: CloneCurrentValue()
  nameWithType: PathSegmentCollection.CloneCurrentValue()
  fullName: System.Windows.Media.PathSegmentCollection.CloneCurrentValue()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Cria um clone modificável <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref> objeto, fazendo cópias profundas dos valores atuais deste objeto. Referências de recurso, associações de dados e animações não são copiadas, mas são os valores atuais."
  remarks: "Esse método é usado para produzir cópias modificáveis de congelada <xref:System.Windows.Freezable>objetos (ou qualquer <xref:System.Windows.Freezable>objeto).</xref:System.Windows.Freezable> </xref:System.Windows.Freezable> Para sua conveniência, este método sombreia a versão herdada com uma implementação fortemente tipada.       Para obter mais informações, consulte <xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>.</xref:System.Windows.Freezable.CloneCurrentValue%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.PathSegmentCollection CloneCurrentValue ();
    parameters: []
    return:
      type: System.Windows.Media.PathSegmentCollection
      description: "Um clone modificável do objeto atual. O objeto clonado <> </> *> propriedade será <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> mesmo se a fonte <> </> *> propriedade <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.PathSegmentCollection.CloneCurrentValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore(System.Windows.Freezable)
  id: CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: CloneCurrentValueCore(Freezable)
  nameWithType: PathSegmentCollection.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override void CloneCurrentValueCore (System.Windows.Freezable source);
    parameters:
    - id: source
      type: System.Windows.Freezable
      description: "A ser adicionado."
  overload: System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.Contains(System.Windows.Media.PathSegment)
  id: Contains(System.Windows.Media.PathSegment)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: Contains(PathSegment)
  nameWithType: PathSegmentCollection.Contains(PathSegment)
  fullName: System.Windows.Media.PathSegmentCollection.Contains(PathSegment)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Retorna um <xref:System.Boolean>que indica se o especificado <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> está contido dentro da coleção.</xref:System.Boolean>"
  syntax:
    content: public bool Contains (System.Windows.Media.PathSegment value);
    parameters:
    - id: value
      type: System.Windows.Media.PathSegment
      description: "O <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> para pesquisar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> contidos na coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.PathSegmentCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.CopyTo(System.Windows.Media.PathSegment[],System.Int32)
  id: CopyTo(System.Windows.Media.PathSegment[],System.Int32)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: CopyTo(PathSegment[],Int32)
  nameWithType: PathSegmentCollection.CopyTo(PathSegment[],Int32)
  fullName: System.Windows.Media.PathSegmentCollection.CopyTo(PathSegment[],Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Copia todo o <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref> para um unidimensional <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> matriz, começando no índice especificado da matriz de destino."
  syntax:
    content: public void CopyTo (System.Windows.Media.PathSegment[] array, int index);
    parameters:
    - id: array
      type: System.Windows.Media.PathSegment[]
      description: "A matriz na qual os itens da coleção devem ser copiados."
    - id: index
      type: System.Int32
      description: "O índice do `array` no qual começar a copiar o conteúdo do <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>."
  overload: System.Windows.Media.PathSegmentCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>é menor que zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>é multidimensional.       - ou - o número de itens na fonte de <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref> é maior que o espaço disponível do <code>index</code> até o final do destino <code>array</code>."
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.Count
  id: Count
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: Count
  nameWithType: PathSegmentCollection.Count
  fullName: System.Windows.Media.PathSegmentCollection.Count
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Obtém o número de segmentos de caminho dentro de <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de segmentos de caminho dentro de <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>."
  overload: System.Windows.Media.PathSegmentCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.CreateInstanceCore
  id: CreateInstanceCore
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: CreateInstanceCore()
  nameWithType: PathSegmentCollection.CreateInstanceCore()
  fullName: System.Windows.Media.PathSegmentCollection.CreateInstanceCore()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override System.Windows.Freezable CreateInstanceCore ();
    parameters: []
    return:
      type: System.Windows.Freezable
      description: "A ser adicionado."
  overload: System.Windows.Media.PathSegmentCollection.CreateInstanceCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.FreezeCore(System.Boolean)
  id: FreezeCore(System.Boolean)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: FreezeCore(Boolean)
  nameWithType: PathSegmentCollection.FreezeCore(Boolean)
  fullName: System.Windows.Media.PathSegmentCollection.FreezeCore(Boolean)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override bool FreezeCore (bool isChecking);
    parameters:
    - id: isChecking
      type: System.Boolean
      description: "A ser adicionado."
    return:
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Windows.Media.PathSegmentCollection.FreezeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.GetAsFrozenCore(System.Windows.Freezable)
  id: GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: GetAsFrozenCore(Freezable)
  nameWithType: PathSegmentCollection.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.PathSegmentCollection.GetAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override void GetAsFrozenCore (System.Windows.Freezable source);
    parameters:
    - id: source
      type: System.Windows.Freezable
      description: "A ser adicionado."
  overload: System.Windows.Media.PathSegmentCollection.GetAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  id: GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: PathSegmentCollection.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore(Freezable)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: protected override void GetCurrentValueAsFrozenCore (System.Windows.Freezable source);
    parameters:
    - id: source
      type: System.Windows.Freezable
      description: "A ser adicionado."
  overload: System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: PathSegmentCollection.GetEnumerator()
  fullName: System.Windows.Media.PathSegmentCollection.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Retorna um enumerador que pode iterar pela coleção."
  remarks: "Enumeradores permitem apenas ler os dados na coleção. Enumeradores não podem ser usados para modificar a coleção subjacente.       Inicialmente, o enumerador está posicionado antes do primeiro item na coleção. também traz o enumerador de volta para essa posição. AT isso posicionar, chamando <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>lança uma exceção.</xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> Portanto, você deve chamar <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>para avançar o enumerador para o primeiro item da coleção antes de ler o valor de <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>.</xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> </xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>       <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>Retorna o mesmo objeto até que o <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>ou <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Reset%2A>é chamado.</xref:System.Windows.Media.PathSegmentCollection.Enumerator.Reset%2A> </xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A></xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>define <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>para o próximo item.</xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A></xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>       Após o final da coleção for passado, o enumerador está posicionado após o último item na coleção e chamada <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>retorna `false`.</xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> Se a última chamada <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>retornado `false`, chamar <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>lança uma exceção.</xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> </xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> Para definir <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>como o primeiro item da coleção novamente, você pode chamar <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Reset%2A>seguido pelo <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>.</xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> </xref:System.Windows.Media.PathSegmentCollection.Enumerator.Reset%2A> </xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>       Um enumerador permanece válido desde que a coleção permaneça inalterada. Se forem feitas alterações à coleção, como adicionar, modificar ou excluir itens, o enumerador será invalidado irrecuperavelmente e a próxima chamada ou <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Reset%2A>gera um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Windows.Media.PathSegmentCollection.Enumerator.Reset%2A> </xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A> Se a coleção é modificada entre <xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>e <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>, <xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A>retornará o item que está definido como, mesmo se o enumerador já é invalidado.</xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> </xref:System.Windows.Media.PathSegmentCollection.Enumerator.Current%2A> </xref:System.Windows.Media.PathSegmentCollection.Enumerator.MoveNext%2A>       O enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de thread-safe. Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção. Para garantir a segurança de thread durante a enumeração, você pode bloquear a coleção durante toda a enumeração ou capture as exceções resultante de alterações feitas por outros threads."
  syntax:
    content: public System.Windows.Media.PathSegmentCollection.Enumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Windows.Media.PathSegmentCollection.Enumerator
      description: "Um <xref:System.Windows.Media.PathSegmentCollection.Enumerator>que pode iterar pela coleção.</xref:System.Windows.Media.PathSegmentCollection.Enumerator>"
  overload: System.Windows.Media.PathSegmentCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.IndexOf(System.Windows.Media.PathSegment)
  id: IndexOf(System.Windows.Media.PathSegment)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: IndexOf(PathSegment)
  nameWithType: PathSegmentCollection.IndexOf(PathSegment)
  fullName: System.Windows.Media.PathSegmentCollection.IndexOf(PathSegment)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Retorna o índice da primeira ocorrência do <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref>."
  syntax:
    content: public int IndexOf (System.Windows.Media.PathSegment value);
    parameters:
    - id: value
      type: System.Windows.Media.PathSegment
      description: "O item a ser pesquisado."
    return:
      type: System.Int32
      description: "O índice especificado <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref>."
  overload: System.Windows.Media.PathSegmentCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.Insert(System.Int32,System.Windows.Media.PathSegment)
  id: Insert(System.Int32,System.Windows.Media.PathSegment)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: Insert(Int32,PathSegment)
  nameWithType: PathSegmentCollection.Insert(Int32,PathSegment)
  fullName: System.Windows.Media.PathSegmentCollection.Insert(Int32,PathSegment)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Insere um <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> a esta <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref> no índice especificado."
  remarks: "Ao contrário das implementações comuns de <xref:System.Collections.Generic.IList%601.Insert%2A?displayProperty=fullName>, esta implementação lança um <xref:System.ArgumentException>se você tentar inserir uma **nulo** (**nada**) referência.</xref:System.ArgumentException> </xref:System.Collections.Generic.IList%601.Insert%2A?displayProperty=fullName>"
  syntax:
    content: public void Insert (int index, System.Windows.Media.PathSegment value);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice no qual inserir `value`, especificado <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref>."
    - id: value
      type: System.Windows.Media.PathSegment
      description: "O item a ser inserido."
  overload: System.Windows.Media.PathSegmentCollection.Insert*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>não é um índice válido no <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=\"System.Windows.Media.PathSegmentCollection\"></xref> is read-only.  \n  \n \\- or -  \n  \n The <xref href=\"System.Windows.Media.PathSegmentCollection\"></xref> has a fixed size."
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: PathSegmentCollection.Item(Int32)
  fullName: System.Windows.Media.PathSegmentCollection.Item(Int32)
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Obtém ou define o <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> no índice de base zero especificado."
  remarks: "Ao contrário das implementações comuns de <xref:System.Collections.Generic.IList%601.Item%2A?displayProperty=fullName>, esta implementação lança um <xref:System.ArgumentException>se você tentar inserir uma **nulo** (**nada**) referência.</xref:System.ArgumentException> </xref:System.Collections.Generic.IList%601.Item%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Media.PathSegment this[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice de base zero de <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> objeto para get ou set."
    return:
      type: System.Windows.Media.PathSegment
      description: "O item no índice especificado."
  overload: System.Windows.Media.PathSegmentCollection.Item*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>não é um índice válido no <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=\"System.Windows.Media.PathSegmentCollection\"></xref> is read-only.  \n  \n \\- or -  \n  \n The <xref href=\"System.Windows.Media.PathSegmentCollection\"></xref> has a fixed size."
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.Remove(System.Windows.Media.PathSegment)
  id: Remove(System.Windows.Media.PathSegment)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: Remove(PathSegment)
  nameWithType: PathSegmentCollection.Remove(PathSegment)
  fullName: System.Windows.Media.PathSegmentCollection.Remove(PathSegment)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Remove a primeira ocorrência do <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> deste <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>."
  syntax:
    content: public bool Remove (System.Windows.Media.PathSegment value);
    parameters:
    - id: value
      type: System.Windows.Media.PathSegment
      description: "O item a ser removido desta coleção."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> é removido da coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.PathSegmentCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <xref href=\"System.Windows.Media.PathSegmentCollection\"></xref> is read-only.  \n  \n \\- or -  \n  \n The <xref href=\"System.Windows.Media.PathSegmentCollection\"></xref> has a fixed size."
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: PathSegmentCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.PathSegmentCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Remove o <xref href=&quot;System.Windows.Media.PathSegment&quot;> </xref> no índice especificado neste <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>."
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice do item a ser removido."
  overload: System.Windows.Media.PathSegmentCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#Generic#ICollection{System#Windows#Media#PathSegment}#IsReadOnly
  id: System#Collections#Generic#ICollection{System#Windows#Media#PathSegment}#IsReadOnly
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.Generic.ICollection
  nameWithType: PathSegmentCollection.System.Collections.Generic.ICollection
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.Generic.ICollection
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: bool System.Collections.Generic.ICollection<System.Windows.Media.PathSegment>.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#Generic#ICollection<System#Windows#Media#PathSegment>#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#PathSegment}#GetEnumerator
  id: System#Collections#Generic#IEnumerable{System#Windows#Media#PathSegment}#GetEnumerator
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.Generic.IEnumerable()
  nameWithType: PathSegmentCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.Generic.IEnumerable()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  syntax:
    content: System.Collections.Generic.IEnumerator<System.Windows.Media.PathSegment> IEnumerable<PathSegment>.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerator{System.Windows.Media.PathSegment}
      description: "A ser adicionado."
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#Generic#IEnumerable<System#Windows#Media#PathSegment>#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: PathSegmentCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Collections.ICollection.CopyTo%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Media.PathSegmentCollection>instância é convertida em um <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection> </xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Uma base zero <xref:System.Array>que recebe os itens copiados do <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "A primeira posição especificada <xref:System.Array>para receber o conteúdo copiado.</xref:System.Array>"
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PathSegmentCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Media.PathSegmentCollection>instância é convertida em um <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection> </xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se acessar para o <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref> é sincronizado (thread-safe); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PathSegmentCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Media.PathSegmentCollection>instância é convertida em um <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection> </xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Um objeto que pode ser usado para sincronizar o acesso a <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>."
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PathSegmentCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Collections.IEnumerable.GetEnumerator%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Media.PathSegmentCollection>instância é convertida em um <xref:System.Collections.IEnumerable>interface.</xref:System.Collections.IEnumerable> </xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>objeto que pode ser usado para iterar pela coleção.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: PathSegmentCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Media.PathSegmentCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para adicionar ao <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "A posição na qual o novo elemento foi inserido."
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: PathSegmentCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Collections.IList.Contains%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Media.PathSegmentCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para localizar no <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Object>for encontrado no <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: PathSegmentCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Media.PathSegmentCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para localizar no <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>.</xref:System.Object>"
    return:
      type: System.Int32
      description: "O índice do <code> value </code> encontrado na lista; caso contrário, -1."
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: PathSegmentCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Collections.IList.Insert%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Media.PathSegmentCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice de base zero no qual inserir o <xref:System.Object>.</xref:System.Object>"
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para inserir o <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>.</xref:System.Object>"
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: PathSegmentCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Media.PathSegmentCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref> tem um fixa tamanho; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsReadOnly
  id: System#Collections#IList#IsReadOnly
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.IList.IsReadOnly
  nameWithType: PathSegmentCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.IsReadOnly
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Collections.IList.IsReadOnly%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Media.PathSegmentCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: bool System.Collections.IList.IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref> é somente leitura; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: PathSegmentCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Collections.IList.Item%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Media.PathSegmentCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice de base zero do elemento a ser obtido ou definido."
    return:
      type: System.Object
      description: "O elemento no índice especificado."
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Media.PathSegmentCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: PathSegmentCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - PresentationCore
  namespace: System.Windows.Media
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Collections.IList.Remove%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Media.PathSegmentCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Media.PathSegmentCollection>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para remover do <xref href=&quot;System.Windows.Media.PathSegmentCollection&quot;> </xref>.</xref:System.Object>"
  overload: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Media.Animation.Animatable
  isExternal: false
  name: System.Windows.Media.Animation.Animatable
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Windows.Media.PathSegmentCollection.#ctor
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: PathSegmentCollection()
  nameWithType: PathSegmentCollection.PathSegmentCollection()
  fullName: System.Windows.Media.PathSegmentCollection.PathSegmentCollection()
- uid: System.Windows.Media.PathSegmentCollection.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment})
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: PathSegmentCollection(IEnumerable<PathSegment>)
  nameWithType: PathSegmentCollection.PathSegmentCollection(IEnumerable<PathSegment>)
  fullName: System.Windows.Media.PathSegmentCollection.PathSegmentCollection(IEnumerable<PathSegment>)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Media.PathSegment}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<PathSegment>
  nameWithType: IEnumerable<PathSegment>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Media.PathSegment>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Media.PathSegment>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Media.PathSegment
    name: PathSegment
    nameWithType: PathSegment
    fullName: PathSegment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.PathSegmentCollection.#ctor(System.Int32)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: PathSegmentCollection(Int32)
  nameWithType: PathSegmentCollection.PathSegmentCollection(Int32)
  fullName: System.Windows.Media.PathSegmentCollection.PathSegmentCollection(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Media.PathSegmentCollection.Add(System.Windows.Media.PathSegment)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Add(PathSegment)
  nameWithType: PathSegmentCollection.Add(PathSegment)
  fullName: System.Windows.Media.PathSegmentCollection.Add(PathSegment)
- uid: System.Windows.Media.PathSegment
  parent: System.Windows.Media
  isExternal: false
  name: PathSegment
  nameWithType: PathSegment
  fullName: System.Windows.Media.PathSegment
- uid: System.Windows.Media.PathSegmentCollection.Clear
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Clear()
  nameWithType: PathSegmentCollection.Clear()
  fullName: System.Windows.Media.PathSegmentCollection.Clear()
- uid: System.Windows.Media.PathSegmentCollection.Clone
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Clone()
  nameWithType: PathSegmentCollection.Clone()
  fullName: System.Windows.Media.PathSegmentCollection.Clone()
- uid: System.Windows.Media.PathSegmentCollection
  parent: System.Windows.Media
  isExternal: false
  name: PathSegmentCollection
  nameWithType: PathSegmentCollection
  fullName: System.Windows.Media.PathSegmentCollection
- uid: System.Windows.Media.PathSegmentCollection.CloneCore(System.Windows.Freezable)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: CloneCore(Freezable)
  nameWithType: PathSegmentCollection.CloneCore(Freezable)
  fullName: System.Windows.Media.PathSegmentCollection.CloneCore(Freezable)
- uid: System.Windows.Freezable
  parent: System.Windows
  isExternal: false
  name: Freezable
  nameWithType: Freezable
  fullName: System.Windows.Freezable
- uid: System.Windows.Media.PathSegmentCollection.CloneCurrentValue
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: CloneCurrentValue()
  nameWithType: PathSegmentCollection.CloneCurrentValue()
  fullName: System.Windows.Media.PathSegmentCollection.CloneCurrentValue()
- uid: System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore(System.Windows.Freezable)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: CloneCurrentValueCore(Freezable)
  nameWithType: PathSegmentCollection.CloneCurrentValueCore(Freezable)
  fullName: System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore(Freezable)
- uid: System.Windows.Media.PathSegmentCollection.Contains(System.Windows.Media.PathSegment)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Contains(PathSegment)
  nameWithType: PathSegmentCollection.Contains(PathSegment)
  fullName: System.Windows.Media.PathSegmentCollection.Contains(PathSegment)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Media.PathSegmentCollection.CopyTo(System.Windows.Media.PathSegment[],System.Int32)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: CopyTo(PathSegment[],Int32)
  nameWithType: PathSegmentCollection.CopyTo(PathSegment[],Int32)
  fullName: System.Windows.Media.PathSegmentCollection.CopyTo(PathSegment[],Int32)
- uid: System.Windows.Media.PathSegment[]
  parent: System.Windows.Media
  isExternal: false
  name: PathSegment
  nameWithType: PathSegment
  fullName: System.Windows.Media.PathSegment[]
  spec.csharp:
  - uid: System.Windows.Media.PathSegment
    name: PathSegment
    nameWithType: PathSegment
    fullName: PathSegment[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Media.PathSegmentCollection.Count
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Count
  nameWithType: PathSegmentCollection.Count
  fullName: System.Windows.Media.PathSegmentCollection.Count
- uid: System.Windows.Media.PathSegmentCollection.CreateInstanceCore
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: CreateInstanceCore()
  nameWithType: PathSegmentCollection.CreateInstanceCore()
  fullName: System.Windows.Media.PathSegmentCollection.CreateInstanceCore()
- uid: System.Windows.Media.PathSegmentCollection.FreezeCore(System.Boolean)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: FreezeCore(Boolean)
  nameWithType: PathSegmentCollection.FreezeCore(Boolean)
  fullName: System.Windows.Media.PathSegmentCollection.FreezeCore(Boolean)
- uid: System.Windows.Media.PathSegmentCollection.GetAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: GetAsFrozenCore(Freezable)
  nameWithType: PathSegmentCollection.GetAsFrozenCore(Freezable)
  fullName: System.Windows.Media.PathSegmentCollection.GetAsFrozenCore(Freezable)
- uid: System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore(System.Windows.Freezable)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: GetCurrentValueAsFrozenCore(Freezable)
  nameWithType: PathSegmentCollection.GetCurrentValueAsFrozenCore(Freezable)
  fullName: System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore(Freezable)
- uid: System.Windows.Media.PathSegmentCollection.GetEnumerator
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: PathSegmentCollection.GetEnumerator()
  fullName: System.Windows.Media.PathSegmentCollection.GetEnumerator()
- uid: System.Windows.Media.PathSegmentCollection.Enumerator
  parent: System.Windows.Media
  isExternal: false
  name: PathSegmentCollection+Enumerator
  nameWithType: PathSegmentCollection+Enumerator
  fullName: System.Windows.Media.PathSegmentCollection+Enumerator
- uid: System.Windows.Media.PathSegmentCollection.IndexOf(System.Windows.Media.PathSegment)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: IndexOf(PathSegment)
  nameWithType: PathSegmentCollection.IndexOf(PathSegment)
  fullName: System.Windows.Media.PathSegmentCollection.IndexOf(PathSegment)
- uid: System.Windows.Media.PathSegmentCollection.Insert(System.Int32,System.Windows.Media.PathSegment)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Insert(Int32,PathSegment)
  nameWithType: PathSegmentCollection.Insert(Int32,PathSegment)
  fullName: System.Windows.Media.PathSegmentCollection.Insert(Int32,PathSegment)
- uid: System.Windows.Media.PathSegmentCollection.Item(System.Int32)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: PathSegmentCollection.Item(Int32)
  fullName: System.Windows.Media.PathSegmentCollection.Item(Int32)
- uid: System.Windows.Media.PathSegmentCollection.Remove(System.Windows.Media.PathSegment)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Remove(PathSegment)
  nameWithType: PathSegmentCollection.Remove(PathSegment)
  fullName: System.Windows.Media.PathSegmentCollection.Remove(PathSegment)
- uid: System.Windows.Media.PathSegmentCollection.RemoveAt(System.Int32)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: PathSegmentCollection.RemoveAt(Int32)
  fullName: System.Windows.Media.PathSegmentCollection.RemoveAt(Int32)
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#Generic#ICollection{System#Windows#Media#PathSegment}#IsReadOnly
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.Generic.ICollection
  nameWithType: PathSegmentCollection.System.Collections.Generic.ICollection
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.Generic.ICollection
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#Generic#IEnumerable{System#Windows#Media#PathSegment}#GetEnumerator
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable()
  nameWithType: PathSegmentCollection.System.Collections.Generic.IEnumerable()
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.Generic.IEnumerable()
- uid: System.Collections.Generic.IEnumerator{System.Windows.Media.PathSegment}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerator<PathSegment>
  nameWithType: IEnumerator<PathSegment>
  fullName: System.Collections.Generic.IEnumerator<System.Windows.Media.PathSegment>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerator`1
    name: IEnumerator
    nameWithType: IEnumerator
    fullName: IEnumerator<System.Windows.Media.PathSegment>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Media.PathSegment
    name: PathSegment
    nameWithType: PathSegment
    fullName: PathSegment
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: PathSegmentCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PathSegmentCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PathSegmentCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.ICollection.SyncRoot
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IEnumerable#GetEnumerator
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: PathSegmentCollection.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: PathSegmentCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: PathSegmentCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: PathSegmentCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: PathSegmentCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: PathSegmentCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsReadOnly
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: PathSegmentCollection.System.Collections.IList.IsReadOnly
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: PathSegmentCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: PathSegmentCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Media.PathSegmentCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Media.PathSegmentCollection.#ctor*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: PathSegmentCollection
  nameWithType: PathSegmentCollection.PathSegmentCollection
- uid: System.Windows.Media.PathSegmentCollection.Add*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Add
  nameWithType: PathSegmentCollection.Add
- uid: System.Windows.Media.PathSegmentCollection.Clear*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Clear
  nameWithType: PathSegmentCollection.Clear
- uid: System.Windows.Media.PathSegmentCollection.Clone*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Clone
  nameWithType: PathSegmentCollection.Clone
- uid: System.Windows.Media.PathSegmentCollection.CloneCore*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: CloneCore
  nameWithType: PathSegmentCollection.CloneCore
- uid: System.Windows.Media.PathSegmentCollection.CloneCurrentValue*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: CloneCurrentValue
  nameWithType: PathSegmentCollection.CloneCurrentValue
- uid: System.Windows.Media.PathSegmentCollection.CloneCurrentValueCore*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: CloneCurrentValueCore
  nameWithType: PathSegmentCollection.CloneCurrentValueCore
- uid: System.Windows.Media.PathSegmentCollection.Contains*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Contains
  nameWithType: PathSegmentCollection.Contains
- uid: System.Windows.Media.PathSegmentCollection.CopyTo*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: CopyTo
  nameWithType: PathSegmentCollection.CopyTo
- uid: System.Windows.Media.PathSegmentCollection.Count*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Count
  nameWithType: PathSegmentCollection.Count
- uid: System.Windows.Media.PathSegmentCollection.CreateInstanceCore*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: CreateInstanceCore
  nameWithType: PathSegmentCollection.CreateInstanceCore
- uid: System.Windows.Media.PathSegmentCollection.FreezeCore*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: FreezeCore
  nameWithType: PathSegmentCollection.FreezeCore
- uid: System.Windows.Media.PathSegmentCollection.GetAsFrozenCore*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: GetAsFrozenCore
  nameWithType: PathSegmentCollection.GetAsFrozenCore
- uid: System.Windows.Media.PathSegmentCollection.GetCurrentValueAsFrozenCore*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: GetCurrentValueAsFrozenCore
  nameWithType: PathSegmentCollection.GetCurrentValueAsFrozenCore
- uid: System.Windows.Media.PathSegmentCollection.GetEnumerator*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: PathSegmentCollection.GetEnumerator
- uid: System.Windows.Media.PathSegmentCollection.IndexOf*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: IndexOf
  nameWithType: PathSegmentCollection.IndexOf
- uid: System.Windows.Media.PathSegmentCollection.Insert*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Insert
  nameWithType: PathSegmentCollection.Insert
- uid: System.Windows.Media.PathSegmentCollection.Item*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Item
  nameWithType: PathSegmentCollection.Item
- uid: System.Windows.Media.PathSegmentCollection.Remove*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: Remove
  nameWithType: PathSegmentCollection.Remove
- uid: System.Windows.Media.PathSegmentCollection.RemoveAt*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: RemoveAt
  nameWithType: PathSegmentCollection.RemoveAt
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#Generic#ICollection<System#Windows#Media#PathSegment>#IsReadOnly*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.Generic.ICollection<System.Windows.Media.PathSegment>.IsReadOnly
  nameWithType: PathSegmentCollection.System.Collections.Generic.ICollection<System.Windows.Media.PathSegment>.IsReadOnly
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#Generic#IEnumerable<System#Windows#Media#PathSegment>#GetEnumerator*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.Generic.IEnumerable<System.Windows.Media.PathSegment>.GetEnumerator
  nameWithType: PathSegmentCollection.System.Collections.Generic.IEnumerable<System.Windows.Media.PathSegment>.GetEnumerator
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#CopyTo*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: PathSegmentCollection.System.Collections.ICollection.CopyTo
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: PathSegmentCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: PathSegmentCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: PathSegmentCollection.System.Collections.IEnumerable.GetEnumerator
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Add*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: PathSegmentCollection.System.Collections.IList.Add
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Contains*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: PathSegmentCollection.System.Collections.IList.Contains
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: PathSegmentCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Insert*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: PathSegmentCollection.System.Collections.IList.Insert
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: PathSegmentCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#IsReadOnly*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.IsReadOnly
  nameWithType: PathSegmentCollection.System.Collections.IList.IsReadOnly
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Item*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: PathSegmentCollection.System.Collections.IList.Item
- uid: System.Windows.Media.PathSegmentCollection.System#Collections#IList#Remove*
  parent: System.Windows.Media.PathSegmentCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: PathSegmentCollection.System.Collections.IList.Remove
