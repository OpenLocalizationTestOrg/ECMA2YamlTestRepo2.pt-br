### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeAssignStatement
  id: CodeAssignStatement
  children:
  - System.CodeDom.CodeAssignStatement.#ctor
  - System.CodeDom.CodeAssignStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)
  - System.CodeDom.CodeAssignStatement.Left
  - System.CodeDom.CodeAssignStatement.Right
  langs:
  - csharp
  name: CodeAssignStatement
  nameWithType: CodeAssignStatement
  fullName: System.CodeDom.CodeAssignStatement
  type: Class
  summary: "Representa uma instrução de atribuição simples."
  remarks: "CodeAssignStatement pode ser usado para representar uma instrução que atribui o valor de um objeto a outro objeto ou uma referência a outra referência. Instruções de atribuição simples normalmente têm o formato &quot; `value1`  =  `value2` &quot;, onde `value1` é o objeto que está sendo atribuído, e `value2` está sendo atribuído. O <xref:System.CodeDom.CodeAssignStatement.Left%2A>propriedade indica o objeto para atribuir a.</xref:System.CodeDom.CodeAssignStatement.Left%2A> O <xref:System.CodeDom.CodeAssignStatement.Right%2A>propriedade indica o objeto para atribuir.</xref:System.CodeDom.CodeAssignStatement.Right%2A>"
  example:
  - "The following code creates a CodeAssignStatement that assigns the value 10 to an integer variable named `i` :  \n  \n [!code-cs[CodeAssignStatement#1](~/add/codesnippet/csharp/t-system.codedom.codeass_1.cs)]\n [!code-vb[CodeAssignStatement#1](~/add/codesnippet/visualbasic/t-system.codedom.codeass_1.vb)]\n [!code-cpp[CodeAssignStatement#1](~/add/codesnippet/cpp/t-system.codedom.codeass_1.cpp)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeAssignStatement : System.CodeDom.CodeStatement
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeStatement
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  - System.CodeDom.CodeStatement.EndDirectives
  - System.CodeDom.CodeStatement.LinePragma
  - System.CodeDom.CodeStatement.StartDirectives
  platform:
  - net462
- uid: System.CodeDom.CodeAssignStatement.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeAssignStatement
  langs:
  - csharp
  name: CodeAssignStatement()
  nameWithType: CodeAssignStatement.CodeAssignStatement()
  fullName: System.CodeDom.CodeAssignStatement.CodeAssignStatement()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeAssignStatement&quot;> </xref> classe."
  syntax:
    content: public CodeAssignStatement ();
    parameters: []
  overload: System.CodeDom.CodeAssignStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeAssignStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)
  id: '#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)'
  parent: System.CodeDom.CodeAssignStatement
  langs:
  - csharp
  name: CodeAssignStatement(CodeExpression,CodeExpression)
  nameWithType: CodeAssignStatement.CodeAssignStatement(CodeExpression,CodeExpression)
  fullName: System.CodeDom.CodeAssignStatement.CodeAssignStatement(CodeExpression,CodeExpression)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeAssignStatement&quot;> </xref> classe usando as expressões especificadas."
  syntax:
    content: public CodeAssignStatement (System.CodeDom.CodeExpression left, System.CodeDom.CodeExpression right);
    parameters:
    - id: left
      type: System.CodeDom.CodeExpression
      description: "A variável para atribuir a."
    - id: right
      type: System.CodeDom.CodeExpression
      description: "O valor a ser atribuído."
  overload: System.CodeDom.CodeAssignStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeAssignStatement.Left
  id: Left
  parent: System.CodeDom.CodeAssignStatement
  langs:
  - csharp
  name: Left
  nameWithType: CodeAssignStatement.Left
  fullName: System.CodeDom.CodeAssignStatement.Left
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define a expressão que representa o objeto ou uma referência para atribuir a."
  syntax:
    content: public System.CodeDom.CodeExpression Left { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que indica o objeto ou uma referência para atribuir a."
  overload: System.CodeDom.CodeAssignStatement.Left*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeAssignStatement.Right
  id: Right
  parent: System.CodeDom.CodeAssignStatement
  langs:
  - csharp
  name: Right
  nameWithType: CodeAssignStatement.Right
  fullName: System.CodeDom.CodeAssignStatement.Right
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define a expressão que representa o objeto ou uma referência para atribuir."
  syntax:
    content: public System.CodeDom.CodeExpression Right { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que indica o objeto ou uma referência para atribuir."
  overload: System.CodeDom.CodeAssignStatement.Right*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeStatement
  isExternal: false
  name: System.CodeDom.CodeStatement
- uid: System.CodeDom.CodeAssignStatement.#ctor
  parent: System.CodeDom.CodeAssignStatement
  isExternal: false
  name: CodeAssignStatement()
  nameWithType: CodeAssignStatement.CodeAssignStatement()
  fullName: System.CodeDom.CodeAssignStatement.CodeAssignStatement()
- uid: System.CodeDom.CodeAssignStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeExpression)
  parent: System.CodeDom.CodeAssignStatement
  isExternal: false
  name: CodeAssignStatement(CodeExpression,CodeExpression)
  nameWithType: CodeAssignStatement.CodeAssignStatement(CodeExpression,CodeExpression)
  fullName: System.CodeDom.CodeAssignStatement.CodeAssignStatement(CodeExpression,CodeExpression)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeAssignStatement.Left
  parent: System.CodeDom.CodeAssignStatement
  isExternal: false
  name: Left
  nameWithType: CodeAssignStatement.Left
  fullName: System.CodeDom.CodeAssignStatement.Left
- uid: System.CodeDom.CodeAssignStatement.Right
  parent: System.CodeDom.CodeAssignStatement
  isExternal: false
  name: Right
  nameWithType: CodeAssignStatement.Right
  fullName: System.CodeDom.CodeAssignStatement.Right
- uid: System.CodeDom.CodeAssignStatement.#ctor*
  parent: System.CodeDom.CodeAssignStatement
  isExternal: false
  name: CodeAssignStatement
  nameWithType: CodeAssignStatement.CodeAssignStatement
- uid: System.CodeDom.CodeAssignStatement.Left*
  parent: System.CodeDom.CodeAssignStatement
  isExternal: false
  name: Left
  nameWithType: CodeAssignStatement.Left
- uid: System.CodeDom.CodeAssignStatement.Right*
  parent: System.CodeDom.CodeAssignStatement
  isExternal: false
  name: Right
  nameWithType: CodeAssignStatement.Right
