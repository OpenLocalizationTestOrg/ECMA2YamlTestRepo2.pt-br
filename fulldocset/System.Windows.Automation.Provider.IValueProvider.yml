### YamlMime:ManagedReference
items:
- uid: System.Windows.Automation.Provider.IValueProvider
  id: IValueProvider
  children:
  - System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  - System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)
  - System.Windows.Automation.Provider.IValueProvider.Value
  langs:
  - csharp
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: System.Windows.Automation.Provider.IValueProvider
  type: Interface
  summary: "Expõe métodos e propriedades para oferecer suporte ao acesso de cliente de automação de interface do usuário para controles que tem um valor intrínseco que abrangem um intervalo e que pode ser representado como uma cadeia de caracteres."
  remarks: "O valor do controle pode ou não poderão ser editado dependendo do controle e suas configurações.       Implementado em um provedor de automação de interface do usuário que deve dar suporte a <xref:System.Windows.Automation.ValuePattern>padrão de controle.</xref:System.Windows.Automation.ValuePattern>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("c7935180-6fb3-4201-b174-7df73adbf64a")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IValueProvider
  implements: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Automation.Provider.IValueProvider
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: IValueProvider.IsReadOnly
  fullName: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Obtém um valor que especifica se o valor de um controle é somente leitura."
  remarks: "Um controle deve ter seu <xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>definido como `true` e seu <xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty>definido como `false` antes de permitir uma chamada para <xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A>.</xref:System.Windows.Automation.Provider.IValueProvider.SetValue%2A> </xref:System.Windows.Automation.ValuePattern.IsReadOnlyProperty> </xref:System.Windows.Automation.AutomationElement.IsEnabledProperty>"
  example:
  - "The following example shows an implementation of this method for a control that allows its value to be changed.  \n  \n [!code-vb[UIAIValueProvider_snip#IsReadOnly](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#isreadonly)]\n [!code-cs[UIAIValueProvider_snip#IsReadOnly](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#isreadonly)]"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor é somente leitura; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se ele pode ser modificado."
  overload: System.Windows.Automation.Provider.IValueProvider.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)
  id: SetValue(System.String)
  parent: System.Windows.Automation.Provider.IValueProvider
  langs:
  - csharp
  name: SetValue(String)
  nameWithType: IValueProvider.SetValue(String)
  fullName: System.Windows.Automation.Provider.IValueProvider.SetValue(String)
  type: Method
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Define o valor de um controle."
  remarks: "Controles de edição de linha única oferecem suporte a acesso programático a seu conteúdo implementando <xref:System.Windows.Automation.Provider.IValueProvider>.</xref:System.Windows.Automation.Provider.IValueProvider> No entanto, os controles de edição de várias linhas não implementam <xref:System.Windows.Automation.Provider.IValueProvider>; em vez disso, eles fornecem acesso a seus conteúdos implementando <xref:System.Windows.Automation.Provider.ITextProvider>.</xref:System.Windows.Automation.Provider.ITextProvider> </xref:System.Windows.Automation.Provider.IValueProvider>       Controla como <xref:System.Windows.Automation.ControlType.ListItem>e <xref:System.Windows.Automation.ControlType.TreeItem>deve implementar <xref:System.Windows.Automation.Provider.IValueProvider>se o valor de qualquer um dos itens for editável, independentemente do atual modo de edição do controle.</xref:System.Windows.Automation.Provider.IValueProvider> </xref:System.Windows.Automation.ControlType.TreeItem> </xref:System.Windows.Automation.ControlType.ListItem> O controle pai também deve implementar <xref:System.Windows.Automation.Provider.IValueProvider>se os itens filhos são editáveis.</xref:System.Windows.Automation.Provider.IValueProvider>       ![Item de lista editável. ] (~/add/media/uia-valuepattern-editable-listitem.PNG &quot;Item de lista editável.&quot;)   Exemplo de um Item de lista editável"
  example:
  - "The following example code demonstrates a custom control that allows its value to be set to a string of limited length.  \n  \n [!code-vb[UIAIValueProvider_snip#SetValue](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#setvalue)]\n [!code-cs[UIAIValueProvider_snip#SetValue](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#setvalue)]"
  syntax:
    content: public void SetValue (string value);
    parameters:
    - id: value
      type: System.String
      description: "O valor a ser definido. O provedor é responsável por converter o valor para o tipo de dados apropriado."
  overload: System.Windows.Automation.Provider.IValueProvider.SetValue*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Se informações específicas de localidade são passadas para um controle em um formato incorreto, como uma data formatada incorretamente."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Se um novo valor não é possível converter uma cadeia de caracteres em um formato reconhece o controle."
  - type: System.Windows.Automation.ElementNotEnabledException
    commentId: T:System.Windows.Automation.ElementNotEnabledException
    description: "Quando é feita uma tentativa para manipular um controle que não está habilitado."
  platform:
  - net462
- uid: System.Windows.Automation.Provider.IValueProvider.Value
  id: Value
  parent: System.Windows.Automation.Provider.IValueProvider
  langs:
  - csharp
  name: Value
  nameWithType: IValueProvider.Value
  fullName: System.Windows.Automation.Provider.IValueProvider.Value
  type: Property
  assemblies:
  - UIAutomationProvider
  namespace: System.Windows.Automation.Provider
  summary: "Obtém o valor do controle."
  remarks: "Controles de edição de linha única oferecem suporte a acesso programático a seu conteúdo implementando <xref:System.Windows.Automation.Provider.IValueProvider>(além <xref:System.Windows.Automation.Provider.ITextProvider>).</xref:System.Windows.Automation.Provider.ITextProvider> </xref:System.Windows.Automation.Provider.IValueProvider> No entanto, os controles de edição de várias linhas não implementam <xref:System.Windows.Automation.Provider.IValueProvider>.</xref:System.Windows.Automation.Provider.IValueProvider>       Para recuperar o conteúdo textual de controles de edição de várias linhas, os controles devem implementar <xref:System.Windows.Automation.Provider.ITextProvider>.</xref:System.Windows.Automation.Provider.ITextProvider> No entanto, <xref:System.Windows.Automation.Provider.ITextProvider>não oferece suporte para a definição do valor de um controle.</xref:System.Windows.Automation.Provider.ITextProvider>       <xref:System.Windows.Automation.Provider.IValueProvider>não oferece suporte a recuperação de informações ou valores de subcadeia de caracteres de formatação.</xref:System.Windows.Automation.Provider.IValueProvider> Implementar <xref:System.Windows.Automation.Provider.ITextProvider>nessas situações.</xref:System.Windows.Automation.Provider.ITextProvider>"
  example:
  - "The following example shows an implementation of this method for a control that allows its value to be retrieved.  \n  \n [!code-vb[UIAIValueProvider_snip#Value](~/add/codesnippet/visualbasic/uiaivalueprovider_snip/valuefragment.vb#value)]\n [!code-cs[UIAIValueProvider_snip#Value](~/add/codesnippet/csharp/UIAIValueProvider_snip/ValueFragment.cs#value)]"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "O valor do controle como uma cadeia de caracteres."
  overload: System.Windows.Automation.Provider.IValueProvider.Value*
  exceptions: []
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Windows.Automation.ElementNotEnabledException
  parent: System.Windows.Automation
  isExternal: false
  name: ElementNotEnabledException
  nameWithType: ElementNotEnabledException
  fullName: System.Windows.Automation.ElementNotEnabledException
- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: IsReadOnly
  nameWithType: IValueProvider.IsReadOnly
  fullName: System.Windows.Automation.Provider.IValueProvider.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Automation.Provider.IValueProvider.SetValue(System.String)
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: SetValue(String)
  nameWithType: IValueProvider.SetValue(String)
  fullName: System.Windows.Automation.Provider.IValueProvider.SetValue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Automation.Provider.IValueProvider.Value
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: Value
  nameWithType: IValueProvider.Value
  fullName: System.Windows.Automation.Provider.IValueProvider.Value
- uid: System.Windows.Automation.Provider.IValueProvider.IsReadOnly*
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: IsReadOnly
  nameWithType: IValueProvider.IsReadOnly
- uid: System.Windows.Automation.Provider.IValueProvider.SetValue*
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: SetValue
  nameWithType: IValueProvider.SetValue
- uid: System.Windows.Automation.Provider.IValueProvider.Value*
  parent: System.Windows.Automation.Provider.IValueProvider
  isExternal: false
  name: Value
  nameWithType: IValueProvider.Value
