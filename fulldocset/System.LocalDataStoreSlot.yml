### YamlMime:ManagedReference
items:
- uid: System.LocalDataStoreSlot
  id: LocalDataStoreSlot
  children:
  - System.LocalDataStoreSlot.Finalize
  langs:
  - csharp
  name: LocalDataStoreSlot
  nameWithType: LocalDataStoreSlot
  fullName: System.LocalDataStoreSlot
  type: Class
  summary: "Encapsula um slot de memória para armazenar dados de locais. Essa classe não pode ser herdada."
  remarks: "O .NET Framework fornece dois mecanismos para usar o armazenamento local de thread (TLS): campos estáticos relativos a thread e slots de dados.      -Campos relativos a thread estático estão `static` campos (`Shared` campos no Visual Basic) que são marcados com o <xref:System.ThreadStaticAttribute>atributo.</xref:System.ThreadStaticAttribute> Eles fornecem melhor desempenho de slots de dados e habilitar a verificação de tipo de tempo de compilação.      -Slots de dados são mais lento e mais inadequado para uso de campos estáticos relativos a thread. Além disso, os dados são armazenados como tipo <xref:System.Object>portanto, você deve convertê-lo para o tipo correto antes de usar o proprietário.</xref:System.Object> No entanto, você pode usar os slots de dados quando você tem informações suficientes no tempo de compilação para alocar campos estáticos.       Para obter mais informações sobre como usar o TLS, consulte [armazenamento Local de Thread: campos estáticos relativos a Thread e Slots de dados](~/add/includes/ajax-current-ext-md.md).       Da mesma forma, o .NET Framework fornece dois mecanismos para uso do armazenamento local de contexto: slots campos e dados estáticos relativo de contexto. Campos estáticos relativos a contexto são campos estáticos que são marcados com o <xref:System.ContextStaticAttribute>atributo.</xref:System.ContextStaticAttribute> As compensações entre usar esses dois mecanismos são semelhantes às compensações entre o uso de slots dados e campos estáticos relativos a thread.       A estrutura de LocalDataStoreSlot serve como um mecanismo de memória de armazenamento local de threads e contextos podem usar para armazenar dados específicos de segmento e o contexto específico, respectivamente. O common language runtime aloca uma matriz de armazenamento de dados de vários slots para cada processo quando ele é criado. As chamadas de thread ou context várias funções para alocar um slot de dados no repositório de dados, armazenar e recuperar um valor de dados no slot e liberar um slot de dados para reutilizar depois que o objeto de thread ou context expira.       Os slots de dados são exclusivos por thread ou context; os valores não são compartilhados entre os objetos de thread ou context. Slots de dados podem ser alocados por um nome ou um número de índice.       Para obter mais informações sobre como armazenar dados locais, consulte <xref:System.Threading.Thread>ou <xref:System.Runtime.Remoting.Contexts.Context>.</xref:System.Runtime.Remoting.Contexts.Context> </xref:System.Threading.Thread> A classe de LocalDataStoreSlot é usada como com métodos <xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName>, <xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName>, <xref:System.Threading.Thread.GetData%2A?displayProperty=fullName>, e <xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName>; ele não tem métodos de sua própria que você precisa usar.</xref:System.Runtime.Remoting.Contexts.Context.GetData%2A?displayProperty=fullName> </xref:System.Threading.Thread.GetData%2A?displayProperty=fullName> </xref:System.Runtime.Remoting.Contexts.Context.AllocateNamedDataSlot%2A?displayProperty=fullName> </xref:System.Threading.Thread.AllocateNamedDataSlot%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class LocalDataStoreSlot
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.LocalDataStoreSlot.Finalize
  id: Finalize
  parent: System.LocalDataStoreSlot
  langs:
  - csharp
  name: Finalize()
  nameWithType: LocalDataStoreSlot.Finalize()
  fullName: System.LocalDataStoreSlot.Finalize()
  type: Method
  assemblies:
  - mscorlib
  namespace: System
  summary: "Garante que os recursos são liberados e outras operações de limpeza são realizadas quando o coletor de lixo recupera o <xref href=&quot;System.LocalDataStoreSlot&quot;> </xref> objeto."
  remarks: "O coletor de lixo chama Finalize quando o objeto atual está pronto para ser finalizado."
  syntax:
    content: ~LocalDataStoreSlot ();
    parameters: []
  overload: System.LocalDataStoreSlot.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.LocalDataStoreSlot.Finalize
  parent: System.LocalDataStoreSlot
  isExternal: false
  name: Finalize()
  nameWithType: LocalDataStoreSlot.Finalize()
  fullName: System.LocalDataStoreSlot.Finalize()
- uid: System.LocalDataStoreSlot.Finalize*
  parent: System.LocalDataStoreSlot
  isExternal: false
  name: Finalize
  nameWithType: LocalDataStoreSlot.Finalize
