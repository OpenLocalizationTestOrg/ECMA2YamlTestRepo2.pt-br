### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.SoapHeader
  id: SoapHeader
  children:
  - System.Web.Services.Protocols.SoapHeader.#ctor
  - System.Web.Services.Protocols.SoapHeader.Actor
  - System.Web.Services.Protocols.SoapHeader.DidUnderstand
  - System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  - System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  - System.Web.Services.Protocols.SoapHeader.EncodedRelay
  - System.Web.Services.Protocols.SoapHeader.MustUnderstand
  - System.Web.Services.Protocols.SoapHeader.Relay
  - System.Web.Services.Protocols.SoapHeader.Role
  langs:
  - csharp
  name: SoapHeader
  nameWithType: SoapHeader
  fullName: System.Web.Services.Protocols.SoapHeader
  type: Class
  summary: "Quando substituído em uma classe derivada, representa o conteúdo de um cabeçalho SOAP."
  remarks: "Cabeçalhos SOAP oferecem um método para passar dados para e de um método de serviço da Web em XML se os dados não está diretamente relacionados a funcionalidade principal do método de serviço da Web em XML. Por exemplo, um serviço Web XML pode conter vários métodos de serviço da Web em XML que cada requer um esquema de autenticação personalizado. Em vez de adicionar parâmetros para cada método de serviço da Web em XML para o esquema de autenticação personalizada, um <xref:System.Web.Services.Protocols.SoapHeaderAttribute>, que faz referência a uma classe derivando de SoapHeader, pode ser aplicado a cada método de serviço da Web em XML.</xref:System.Web.Services.Protocols.SoapHeaderAttribute> A implementação da classe derivando de SoapHeader lida com o esquema de autenticação personalizado. Dessa forma, o método de serviço Web XML implementa apenas a funcionalidade específica a ele e adiciona funcionalidades adicionais usando um cabeçalho SOAP.       A lista a seguir descreve as etapas básicas usadas para receber e processar um cabeçalho SOAP: 1.  Crie uma classe que deriva de SoapHeader que representa os dados passados para o cabeçalho SOAP.      2.  Adicione um membro para a classe que implementa um serviço Web XML ou uma classe de proxy do XML Web service cliente, do tipo criado na primeira etapa.      3.  Aplicar um <xref:System.Web.Services.Protocols.SoapHeaderAttribute>para o método de serviço da Web em XML ou o método correspondente na classe proxy, especificar o membro criado na segunda etapa no <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>propriedade.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A> </xref:System.Web.Services.Protocols.SoapHeaderAttribute>      4.  Dentro do método de serviço da Web em XML ou código de cliente de serviço da Web em XML, acessar o <xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>propriedade para processar os dados enviados no cabeçalho SOAP.</xref:System.Web.Services.Protocols.SoapHeaderAttribute.MemberName%2A>"
  example:
  - "The following `MyWebService` XML Web service defines the `MyHeader` SOAP header and requires it to be sent with any calls to the `MyWebMethod` XML Web service method. Additionally, `MyWebMethod` receives any SOAP headers other than the `MyHeader` SOAP header.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: >-
      [System.Xml.Serialization.SoapType(IncludeInSchema=false)]

      [System.Xml.Serialization.XmlType(IncludeInSchema=false)]

      public abstract class SoapHeader
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: SoapHeader()
  nameWithType: SoapHeader.SoapHeader()
  fullName: System.Web.Services.Protocols.SoapHeader.SoapHeader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Services.Protocols.SoapHeader&quot;> </xref> classe."
  syntax:
    content: protected SoapHeader ();
    parameters: []
  overload: System.Web.Services.Protocols.SoapHeader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.Actor
  id: Actor
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: Actor
  nameWithType: SoapHeader.Actor
  fullName: System.Web.Services.Protocols.SoapHeader.Actor
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o destinatário do cabeçalho SOAP."
  remarks: "Para definir o destinatário de um cabeçalho SOAP, defina a propriedade de ator. Independentemente da versão do protocolo SOAP usada para se comunicar com um serviço Web XML, o .NET Framework automaticamente gera a mensagem SOAP específica para a versão do protocolo SOAP. Especificamente, o elemento XML e um namespace XML que representa o destinatário são diferentes para as duas versões.       Recebendo o cabeçalho SOAP os XML Web services podem obter o destinatário pretendido obtendo o o <xref:System.Web.Services.Protocols.SoapHeader.Role%2A>ou propriedades de ator.</xref:System.Web.Services.Protocols.SoapHeader.Role%2A>       O destinatário (s) para o `Body` elemento e cada um dos cabeçalhos de SOAP dentro a `Header` elemento de uma mensagem SOAP não precisa ser o mesmo. Se um `Header` elemento existe na mensagem SOAP, representa dados adicionais que podem ser enviados para e de método de serviço Web XML ou um intermediário. O destinatário de dados, conhecidos como o SOAP `Actor` na versão 1.1, que pode ser um URI diferente que o URI para o método de serviço da Web em XML.       Para obter mais informações sobre o SOAP `actor` atributo, consulte a especificação de SOAP em http://www.w3.org/TR/SOAP/."
  example:
  - "The following XML Web service client calls the `MyWebMethod` XML Web service method after creating a custom SOAP header of type `MyHeader` and setting the Actor property to `http://www.contoso.com/MySoapHeaderHandler`.  \n  \n [!code-cs[Classic SoapHeader.Actor Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_16_1.cs)]\n [!code-cpp[Classic SoapHeader.Actor Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_16_1.cpp)]\n [!code-vb[Classic SoapHeader.Actor Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_16_1.vb)]"
  syntax:
    content: public string Actor { get; set; }
    return:
      type: System.String
      description: "O destinatário do cabeçalho SOAP. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.Services.Protocols.SoapHeader.Actor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.DidUnderstand
  id: DidUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: DidUnderstand
  nameWithType: SoapHeader.DidUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.DidUnderstand
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define um valor que indica se um método de serviço Web XML processado corretamente um cabeçalho SOAP."
  remarks: "Para cabeçalhos SOAP definidos por um serviço Web XML, ASP.NET supõe que o método de serviço processado corretamente o cabeçalho SOAP, definindo o valor inicial de DidUnderstand para XML Web `true`. Para cabeçalhos SOAP não definidos pelo serviço da Web em XML, o valor inicial é `false`. Se o ASP.NET detecta SOAP cabeçalhos passados para um método de serviço Web XML com DidUnderstand definido como `false` depois que o método retorna, um <xref:System.Web.Services.Protocols.SoapHeaderException>será devolvida para o cliente do serviço Web XML em vez dos resultados do método de serviço da Web em XML.</xref:System.Web.Services.Protocols.SoapHeaderException>"
  example:
  - "The following `MyWebService` XML Web service defines the `MyHeader` SOAP header and requires it to be sent with any calls to the `MyWebMethod` XML Web service method. Additionally, the `MyWebMethod` receives any SOAP headers other than the `MyHeader` SOAP header. For SOAP headers that `MyWebMethod` can process, DidUnderstand is set to `true`.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public bool DidUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cabeçalho SOAP foi processado corretamente; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.SoapHeader.DidUnderstand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  id: EncodedMustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: EncodedMustUnderstand
  nameWithType: SoapHeader.EncodedMustUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o valor de <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> atributo XML para o cabeçalho SOAP ao se comunicar com a versão do protocolo SOAP 1.1."
  remarks: "Não use essa propriedade. Em vez disso, use o <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>propriedade.</xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>"
  example:
  - >-
    [!code-cpp[SoapHeader_EncodedMustUnderstand#1](~/add/codesnippet/cpp/p-system.web.services.pr_37_1.cpp)]
     [!code-vb[SoapHeader_EncodedMustUnderstand#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_37_1.vb)]
     [!code-cs[SoapHeader_EncodedMustUnderstand#1](~/add/codesnippet/csharp/p-system.web.services.pr_37_1.cs)]
  syntax:
    content: public string EncodedMustUnderstand { get; set; }
    return:
      type: System.String
      description: "O valor de <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> atributo. O padrão é &quot;0&quot;."
  overload: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'A propriedade é definida como um valor diferente de: &quot;0&quot;, &quot;1&quot;, &quot;true&quot; ou &quot;false&quot;.'
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  id: EncodedMustUnderstand12
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: EncodedMustUnderstand12
  nameWithType: SoapHeader.EncodedMustUnderstand12
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o valor de <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> atributo XML para o cabeçalho SOAP ao se comunicar com a versão do protocolo SOAP 1.2."
  remarks: "Não use essa propriedade. Em vez disso, use o <xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>propriedade.</xref:System.Web.Services.Protocols.SoapHeader.MustUnderstand%2A>"
  syntax:
    content: public string EncodedMustUnderstand12 { get; set; }
    return:
      type: System.String
      description: "O valor de <xref uid=&quot;langword_csharp_mustUnderstand&quot; name=&quot;mustUnderstand&quot; href=&quot;&quot;> </xref> atributo XML de um cabeçalho SOAP. O padrão é &quot;0&quot;."
  overload: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'A propriedade é definida como um valor diferente de: &quot;0&quot;, &quot;1&quot;, &quot;true&quot; ou &quot;false&quot;.'
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.EncodedRelay
  id: EncodedRelay
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: EncodedRelay
  nameWithType: SoapHeader.EncodedRelay
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedRelay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o atributo de retransmissão do cabeçalho SOAP 1.2."
  remarks: "A propriedade EncodedRelay se aplica somente ao SOAP 1.2 e indica se o destinatário da mensagem encaminha esse cabeçalho quando ele encaminha a mensagem para o próximo nó downstream. Porque o .NET Framework não dá suporte a intermediários SOAP, essa propriedade é serializada e desserializada mas ignorada."
  syntax:
    content: public string EncodedRelay { get; set; }
    return:
      type: System.String
      description: "&quot;0&quot;, &quot;false&quot;, &quot;1&quot; ou &quot;true&quot;."
  overload: System.Web.Services.Protocols.SoapHeader.EncodedRelay*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.MustUnderstand
  id: MustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: MustUnderstand
  nameWithType: SoapHeader.MustUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.MustUnderstand
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.Services.Protocols.SoapHeader&quot;> </xref> devem ser compreendidos."
  remarks: "When an XML Web service client adds a SOAP header to an XML Web service method call with the MustUnderstand property set to `true`, the XML Web service method must set the <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> property to `true`; otherwise, a <xref:System.Web.Services.Protocols.SoapHeaderException> is thrown back to the XML Web service client by ASP.NET.  \n  \n Although both the <xref:System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand%2A> and MustUnderstand properties can be used to set the value of the `mustUnderstand` attribute within the SOAP header, the MustUnderstand property allows you to set the attribute using a Boolean value.  \n  \n For details on adding SOAP headers to clients, see [&#91;\\<topic://cpconusingsoapheaders>&#93;](http://msdn.microsoft.com/en-us/7bd961f2-b492-48d0-bafe-09d5d5fec3ba)."
  example:
  - "The following XML Web service client defines a custom SOAP header of type `MyHeader`, sets the MustUnderstand property to `true`, and invokes the `MyWebMethod` XML Web service method. If the XML Web service method does not set the <xref:System.Web.Services.Protocols.SoapHeader.DidUnderstand%2A> property of the `MyHeader` SOAP header to `true`, a <xref:System.Web.Services.Protocols.SoapHeaderException> is thrown.  \n  \n [!code-cs[Classic SoapHeader.MustUnderstand Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_18_1.cs)]\n [!code-vb[Classic SoapHeader.MustUnderstand Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_18_1.vb)]\n [!code-cpp[Classic SoapHeader.MustUnderstand Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_18_1.cpp)]"
  syntax:
    content: public bool MustUnderstand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o serviço Web XML deve interpretar e processar corretamente a <xref href=&quot;System.Web.Services.Protocols.SoapHeader&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.SoapHeader.MustUnderstand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.Relay
  id: Relay
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: Relay
  nameWithType: SoapHeader.Relay
  fullName: System.Web.Services.Protocols.SoapHeader.Relay
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define um valor que indica se o cabeçalho SOAP deve ser retransmitidas para o próximo nó SOAP se o nó atual não entender o cabeçalho."
  remarks: "As regras de processamento de SOAP 1.2 padrão requerem que nós SOAP para remover os cabeçalhos que não são entendidos pelo nó de processamento SOAP antes de transmiti-la para o próximo nó."
  syntax:
    content: public bool Relay { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cabeçalho SOAP tem uma &quot;retransmissão&quot; atributo definido como &quot;true&quot;; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.SoapHeader.Relay*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.SoapHeader.Role
  id: Role
  parent: System.Web.Services.Protocols.SoapHeader
  langs:
  - csharp
  name: Role
  nameWithType: SoapHeader.Role
  fullName: System.Web.Services.Protocols.SoapHeader.Role
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o destinatário do cabeçalho SOAP."
  remarks: "Para definir o destinatário de um cabeçalho SOAP, defina o <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>propriedade.</xref:System.Web.Services.Protocols.SoapHeader.Actor%2A> Independentemente da versão do protocolo SOAP usada para se comunicar com um serviço Web XML, o .NET Framework automaticamente gera a mensagem SOAP específica para a versão do protocolo SOAP. Especificamente, o elemento XML e um namespace XML que representa o destinatário são diferentes para as duas versões.       Recebendo o cabeçalho SOAP os XML Web services podem obter o destinatário pretendido, fazendo com que a função ou <xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>Propriedades.</xref:System.Web.Services.Protocols.SoapHeader.Actor%2A>       O destinatário (s) para o `Body` elemento e cada um dos cabeçalhos de SOAP dentro a `Header` elemento de uma mensagem SOAP não precisa ser o mesmo. Se um `Header` elemento existe na mensagem SOAP, representa dados adicionais que podem ser enviados para e de método de serviço Web XML ou um intermediário. O destinatário de dados, conhecidos como o SOAP `Role` na versão 1.2 da especificação SOAP e o SOAP `Actor` na versão 1.1, que pode ser um URI diferente que o URI para o método de serviço da Web em XML.       Para obter mais informações sobre o SOAP `actor` atributo, consulte a especificação de SOAP em http://www.w3.org/TR/SOAP/."
  syntax:
    content: public string Role { get; set; }
    return:
      type: System.String
      description: "Um URI que representa o destinatário do cabeçalho SOAP. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.Services.Protocols.SoapHeader.Role*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Services.Protocols.SoapHeader.#ctor
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: SoapHeader()
  nameWithType: SoapHeader.SoapHeader()
  fullName: System.Web.Services.Protocols.SoapHeader.SoapHeader()
- uid: System.Web.Services.Protocols.SoapHeader.Actor
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Actor
  nameWithType: SoapHeader.Actor
  fullName: System.Web.Services.Protocols.SoapHeader.Actor
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.SoapHeader.DidUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: DidUnderstand
  nameWithType: SoapHeader.DidUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.DidUnderstand
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand
  nameWithType: SoapHeader.EncodedMustUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand12
  nameWithType: SoapHeader.EncodedMustUnderstand12
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12
- uid: System.Web.Services.Protocols.SoapHeader.EncodedRelay
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedRelay
  nameWithType: SoapHeader.EncodedRelay
  fullName: System.Web.Services.Protocols.SoapHeader.EncodedRelay
- uid: System.Web.Services.Protocols.SoapHeader.MustUnderstand
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: MustUnderstand
  nameWithType: SoapHeader.MustUnderstand
  fullName: System.Web.Services.Protocols.SoapHeader.MustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.Relay
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Relay
  nameWithType: SoapHeader.Relay
  fullName: System.Web.Services.Protocols.SoapHeader.Relay
- uid: System.Web.Services.Protocols.SoapHeader.Role
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Role
  nameWithType: SoapHeader.Role
  fullName: System.Web.Services.Protocols.SoapHeader.Role
- uid: System.Web.Services.Protocols.SoapHeader.#ctor*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: SoapHeader
  nameWithType: SoapHeader.SoapHeader
- uid: System.Web.Services.Protocols.SoapHeader.Actor*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Actor
  nameWithType: SoapHeader.Actor
- uid: System.Web.Services.Protocols.SoapHeader.DidUnderstand*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: DidUnderstand
  nameWithType: SoapHeader.DidUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand
  nameWithType: SoapHeader.EncodedMustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.EncodedMustUnderstand12*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedMustUnderstand12
  nameWithType: SoapHeader.EncodedMustUnderstand12
- uid: System.Web.Services.Protocols.SoapHeader.EncodedRelay*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: EncodedRelay
  nameWithType: SoapHeader.EncodedRelay
- uid: System.Web.Services.Protocols.SoapHeader.MustUnderstand*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: MustUnderstand
  nameWithType: SoapHeader.MustUnderstand
- uid: System.Web.Services.Protocols.SoapHeader.Relay*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Relay
  nameWithType: SoapHeader.Relay
- uid: System.Web.Services.Protocols.SoapHeader.Role*
  parent: System.Web.Services.Protocols.SoapHeader
  isExternal: false
  name: Role
  nameWithType: SoapHeader.Role
