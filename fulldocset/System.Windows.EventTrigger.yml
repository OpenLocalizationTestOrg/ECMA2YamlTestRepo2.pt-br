### YamlMime:ManagedReference
items:
- uid: System.Windows.EventTrigger
  id: EventTrigger
  children:
  - System.Windows.EventTrigger.#ctor
  - System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)
  - System.Windows.EventTrigger.Actions
  - System.Windows.EventTrigger.AddChild(System.Object)
  - System.Windows.EventTrigger.AddText(System.String)
  - System.Windows.EventTrigger.RoutedEvent
  - System.Windows.EventTrigger.ShouldSerializeActions
  - System.Windows.EventTrigger.SourceName
  - System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  langs:
  - csharp
  name: EventTrigger
  nameWithType: EventTrigger
  fullName: System.Windows.EventTrigger
  type: Class
  summary: "Representa um gatilho que aplica um conjunto de ações em resposta a um evento."
  remarks: "<xref:System.Windows.Trigger>os objetos têm o <xref:System.Windows.Trigger.Setters%2A>, <xref:System.Windows.TriggerBase.EnterActions%2A>, e <xref:System.Windows.TriggerBase.ExitActions%2A>propriedades que se aplicam as alterações ou ações com base no estado de determinadas propriedades, enquanto objetos EventTrigger iniciar um conjunto de <xref:System.Windows.EventTrigger.Actions%2A>quando ocorre um evento roteado especificado.</xref:System.Windows.EventTrigger.Actions%2A> </xref:System.Windows.TriggerBase.ExitActions%2A> </xref:System.Windows.TriggerBase.EnterActions%2A> </xref:System.Windows.Trigger.Setters%2A></xref:System.Windows.Trigger> Por exemplo, você talvez queira usar um EventTrigger para iniciar um conjunto de animações quando o ponteiro do mouse está sobre um determinado [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] controle. Ao contrário de <xref:System.Windows.Trigger>, EventTrigger não tem nenhum conceito de encerramento de estado, para que a ação não será desfeita depois que a condição que aumentado o evento não ocorre mais.</xref:System.Windows.Trigger>       Observe que, ao usar um disparador de eventos, você precisa escolher eventos que não interfere com o comportamento inerente do seu controle. Controla como <xref:System.Windows.Controls.Button>ou <xref:System.Windows.Controls.TextBox>executar ações específicas em eventos de entrada do usuário, como cliques do mouse e teclado eventos.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.Button> Por exemplo, se você estiver definindo o estilo de um botão e tenta definir o <xref:System.Windows.Input.Mouse.MouseDown>evento como o <xref:System.Windows.EventTrigger.RoutedEvent%2A>de um disparador de eventos, EventTrigger nunca é aplicado porque o primeiro evento é controlado pelo botão.</xref:System.Windows.EventTrigger.RoutedEvent%2A> </xref:System.Windows.Input.Mouse.MouseDown> Em vez disso, você pode usar o <xref:System.Windows.Input.Mouse.PreviewMouseDown>evento ou um evento diferente.</xref:System.Windows.Input.Mouse.PreviewMouseDown>       Ao usar a associação de dados, se você estiver usando o <xref:System.Windows.Data.Binding.TargetUpdated>evento, você deve definir o <xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A>valor de seu <xref:System.Windows.Data.Binding>objeto para `true` para o evento a ser gerado.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> </xref:System.Windows.Data.Binding.TargetUpdated>       Adicionando um <xref:System.Windows.TriggerAction>filho a um objeto EventTrigger adiciona implicitamente para o <xref:System.Windows.TriggerActionCollection>para o objeto de EventTrigger.</xref:System.Windows.TriggerActionCollection> </xref:System.Windows.TriggerAction>"
  example:
  - "This example shows how to use event triggers in a style to animate the <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.MouseLeave> events of a <xref:System.Windows.FrameworkElement>. In this example, the <xref:System.Windows.Style> has the <xref:System.Windows.Style.TargetType%2A> set to <xref:System.Windows.Shapes.Rectangle>. Therefore, there is no need to qualify the `MouseEnter` and `MouseLeave` event names with the class name.  \n  \n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/StyleEventTriggerAnimation/Default.xaml#eventtriggersnippet)]\n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/t-system.windows.eventtr_1.xaml)]"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Actions")]

      public class EventTrigger : System.Windows.TriggerBase, System.Windows.Markup.IAddChild
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.DependencyObject
  - System.Windows.TriggerBase
  implements:
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.ClearValue(System.Windows.DependencyPropertyKey)
  - System.Windows.DependencyObject.CoerceValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.DependencyObjectType
  - System.Windows.DependencyObject.Equals(System.Object)
  - System.Windows.DependencyObject.GetHashCode
  - System.Windows.DependencyObject.GetLocalValueEnumerator
  - System.Windows.DependencyObject.GetValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.InvalidateProperty(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.IsSealed
  - System.Windows.DependencyObject.OnPropertyChanged(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyObject.ReadLocalValue(System.Windows.DependencyProperty)
  - System.Windows.DependencyObject.SetCurrentValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.DependencyObject.SetValue(System.Windows.DependencyPropertyKey,System.Object)
  - System.Windows.DependencyObject.ShouldSerializeProperty(System.Windows.DependencyProperty)
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  - System.Windows.TriggerBase.EnterActions
  - System.Windows.TriggerBase.ExitActions
  platform:
  - net462
- uid: System.Windows.EventTrigger.#ctor
  id: '#ctor'
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: EventTrigger()
  nameWithType: EventTrigger.EventTrigger()
  fullName: System.Windows.EventTrigger.EventTrigger()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.EventTrigger&quot;> </xref> classe."
  syntax:
    content: public EventTrigger ();
    parameters: []
  overload: System.Windows.EventTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)
  id: '#ctor(System.Windows.RoutedEvent)'
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: EventTrigger(RoutedEvent)
  nameWithType: EventTrigger.EventTrigger(RoutedEvent)
  fullName: System.Windows.EventTrigger.EventTrigger(RoutedEvent)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.EventTrigger&quot;> </xref> classe com o evento especificado."
  syntax:
    content: public EventTrigger (System.Windows.RoutedEvent routedEvent);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "O <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> que ativa o disparador."
  overload: System.Windows.EventTrigger.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.Actions
  id: Actions
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: Actions
  nameWithType: EventTrigger.Actions
  fullName: System.Windows.EventTrigger.Actions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém a coleção de ações a serem aplicadas quando o evento ocorre."
  remarks: "Ao contrário de <xref:System.Windows.Trigger>, <xref:System.Windows.EventTrigger>não tem nenhum conceito de encerramento de estado, para que a ação não será desfeita depois que a condição que gerou o evento não ocorre mais.</xref:System.Windows.EventTrigger> </xref:System.Windows.Trigger>       Adicionando um <xref:System.Windows.TriggerAction>filho para uma <xref:System.Windows.EventTrigger>objeto adiciona implicitamente para o <xref:System.Windows.TriggerActionCollection>para o <xref:System.Windows.EventTrigger>objeto.</xref:System.Windows.EventTrigger> </xref:System.Windows.TriggerActionCollection> </xref:System.Windows.EventTrigger> </xref:System.Windows.TriggerAction>      > [!NOTE] > Esta propriedade só pode ser definida [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] via mostra a sintaxe de coleção ou acessar o objeto de coleção e usando seus vários métodos, como adicionar. A propriedade para acessar o objeto de coleção é somente leitura, a coleção em si é leitura / gravação.      <a name=&quot;xamlPropertyElementUsage_Actions&quot;></a># # Uso do elemento de propriedade de XAML ```   <object>     <object.Actions>       OneOrMoreTriggerActions     </object.Actions>   </object>   ``` <a name=&quot;xamlValues_Actions&quot;> </a> # # XAML valores *OneOrMoreTriggerActions* um ou mais <xref:System.Windows.TriggerAction>objetos.</xref:System.Windows.TriggerAction>      "
  example:
  - "This example describes how to use event triggers in a style to animate the <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.MouseLeave> events of a <xref:System.Windows.FrameworkElement>. As mentioned above, adding a <xref:System.Windows.TriggerAction> child to an <xref:System.Windows.EventTrigger> object implicitly adds it to the <xref:System.Windows.TriggerActionCollection> for the <xref:System.Windows.EventTrigger> object. Therefore, in this example, `<EventTrigger.Actions>` is implicit.  \n  \n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/StyleEventTriggerAnimation/Default.xaml#eventtriggersnippet)]\n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/p-system.windows.eventtr_1_1.xaml)]"
  syntax:
    content: public System.Windows.TriggerActionCollection Actions { get; }
    return:
      type: System.Windows.TriggerActionCollection
      description: "O padrão é uma coleção vazia."
  overload: System.Windows.EventTrigger.Actions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.AddChild(System.Object)
  id: AddChild(System.Object)
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: AddChild(Object)
  nameWithType: EventTrigger.AddChild(Object)
  fullName: System.Windows.EventTrigger.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adiciona o objeto especificado para o <xref:System.Windows.EventTrigger.Actions*>coleção do gatilho de evento atual.</xref:System.Windows.EventTrigger.Actions*>"
  syntax:
    content: protected virtual void AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "Um <xref href=&quot;System.Windows.TriggerAction&quot;> </xref> objeto a ser adicionado para o <xref:System.Windows.EventTrigger.Actions*>coleta deste gatilho.</xref:System.Windows.EventTrigger.Actions*>"
  overload: System.Windows.EventTrigger.AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.AddText(System.String)
  id: AddText(System.String)
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: AddText(String)
  nameWithType: EventTrigger.AddText(String)
  fullName: System.Windows.EventTrigger.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Este método não tem suporte e resulta em uma exceção."
  syntax:
    content: protected virtual void AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "Esse parâmetro não for usado."
  overload: System.Windows.EventTrigger.AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.RoutedEvent
  id: RoutedEvent
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: RoutedEvent
  nameWithType: EventTrigger.RoutedEvent
  fullName: System.Windows.EventTrigger.RoutedEvent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o <xref href=&quot;System.Windows.RoutedEvent&quot;> </xref> que ativará a este disparador."
  remarks: "<xref:System.Windows.EventTrigger>s se aplicam a um conjunto de ações quando ocorre o evento roteado especificado.</xref:System.Windows.EventTrigger> Por exemplo, você talvez queira usar <xref:System.Windows.EventTrigger>s para iniciar um conjunto de animações quando o ponteiro do mouse está sobre um determinado [!INCLUDE[TLA#tla_ui](~/add/includes/tlasharptla-ui-md.md)] controle.</xref:System.Windows.EventTrigger>       Se o modelo ou estilo que contém esta <xref:System.Windows.EventTrigger>não tem o `TargetType` propriedade especificada, você precisa qualidade o nome do evento com o nome de classe usando o `ClassName.EventName` sintaxe.</xref:System.Windows.EventTrigger>       <xref:System.Windows.EventTrigger>objetos não podem tratar eventos que já tenham sido <xref:System.Windows.RoutedEventArgs.Handled%2A>.</xref:System.Windows.RoutedEventArgs.Handled%2A></xref:System.Windows.EventTrigger> Controla como <xref:System.Windows.Controls.Button>ou <xref:System.Windows.Controls.TextBox>executar ações específicas em eventos de entrada do usuário, como cliques do mouse e teclado eventos.</xref:System.Windows.Controls.TextBox> </xref:System.Windows.Controls.Button> Por exemplo, se você estiver definindo o estilo de um botão e tenta definir o <xref:System.Windows.Input.Mouse.MouseDown>eventos como RoutedEvent de um <xref:System.Windows.EventTrigger>, o <xref:System.Windows.EventTrigger>nunca é aplicado porque o primeiro evento é controlado pelo botão.</xref:System.Windows.EventTrigger> </xref:System.Windows.EventTrigger> </xref:System.Windows.Input.Mouse.MouseDown> Em vez disso, você pode usar o <xref:System.Windows.Input.Mouse.PreviewMouseDown>evento ou um evento diferente.</xref:System.Windows.Input.Mouse.PreviewMouseDown>       Ao usar a associação de dados, se você estiver usando o <xref:System.Windows.Data.Binding.TargetUpdated>evento, você deve definir o <xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A>valor de seu <xref:System.Windows.Data.Binding>objeto como true para o evento a ser gerado.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.NotifyOnTargetUpdated%2A> </xref:System.Windows.Data.Binding.TargetUpdated>"
  example:
  - "This example shows how to use event triggers in a style to animate the <xref:System.Windows.UIElement.MouseEnter> and <xref:System.Windows.UIElement.MouseLeave> events of a <xref:System.Windows.FrameworkElement>. In this example, the <xref:System.Windows.Style> has the <xref:System.Windows.Style.TargetType%2A> set to <xref:System.Windows.Shapes.Rectangle>. Therefore, there is no need to qualify the `MouseEnter` and `MouseLeave` event names with the class name.  \n  \n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/StyleEventTriggerAnimation/Default.xaml#eventtriggersnippet)]\n [!code-xml[StyleEventTriggerAnimation#EventTriggerSnippet](~/add/codesnippet/xaml/p-system.windows.eventtr_0_1.xaml)]"
  syntax:
    content: public System.Windows.RoutedEvent RoutedEvent { get; set; }
    return:
      type: System.Windows.RoutedEvent
      description: "O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.EventTrigger.RoutedEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A propriedade RoutedEvent não pode ser nula."
  platform:
  - net462
- uid: System.Windows.EventTrigger.ShouldSerializeActions
  id: ShouldSerializeActions
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: ShouldSerializeActions()
  nameWithType: EventTrigger.ShouldSerializeActions()
  fullName: System.Windows.EventTrigger.ShouldSerializeActions()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Retorna se processos de serialização devem serializar o valor efetivo da <xref:System.Windows.EventTrigger.Actions*>propriedade em instâncias desta classe.</xref:System.Windows.EventTrigger.Actions*>"
  syntax:
    content: public bool ShouldSerializeActions ();
    parameters: []
    return:
      type: System.Boolean
      description: "Retorna <xref uid=&quot;langword_csharp_true &quot; name=&quot;true &quot; href=&quot;&quot;> </xref>se o <xref:System.Windows.EventTrigger.Actions*>o valor da propriedade deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.EventTrigger.Actions*>"
  overload: System.Windows.EventTrigger.ShouldSerializeActions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.SourceName
  id: SourceName
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: SourceName
  nameWithType: EventTrigger.SourceName
  fullName: System.Windows.EventTrigger.SourceName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o nome do objeto com o evento que ativa o disparador. Isso é usado apenas por gatilhos de elemento ou disparadores de modelo."
  remarks: "Você pode definir essa propriedade como o nome de qualquer elemento dentro do escopo em que a coleção de gatilho (a coleção que este <xref:System.Windows.EventTrigger>faz parte do) é aplicada.</xref:System.Windows.EventTrigger> Isso geralmente é um elemento nomeado que esteja dentro do modelo que contém esta <xref:System.Windows.EventTrigger>.</xref:System.Windows.EventTrigger> Se você estiver configurando o <xref:System.Windows.FrameworkElement.Triggers%2A>propriedade em um elemento diretamente, em seguida, ele é um elemento nomeado dentro do escopo do elemento pai.</xref:System.Windows.FrameworkElement.Triggers%2A>       Você pode nomear um objeto usando o [diretiva X:Name](~/add/includes/ajax-current-ext-md.md) sintaxe."
  syntax:
    content: public string SourceName { get; set; }
    return:
      type: System.String
      description: "O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Se o valor dessa propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, em seguida, o elemento que está sendo monitorado para gerar o evento é o pai do modelo ou a raiz da árvore lógica."
  overload: System.Windows.EventTrigger.SourceName*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Após um <xref href=&quot;System.Windows.EventTrigger&quot;> </xref> está em uso, ele não pode ser modificado."
  platform:
  - net462
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adiciona um objeto filho."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.EventTrigger>instância é convertida em um <xref:System.Windows.Markup.IAddChild>interface.</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.EventTrigger>"
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto filho para adicionar."
  overload: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.EventTrigger
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adiciona o conteúdo de texto de um nó para o objeto."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.EventTrigger>instância é convertida em um <xref:System.Windows.Markup.IAddChild>interface.</xref:System.Windows.Markup.IAddChild> </xref:System.Windows.EventTrigger>"
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "O texto a ser adicionado ao objeto."
  overload: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.TriggerBase
  isExternal: false
  name: System.Windows.TriggerBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Windows.EventTrigger.#ctor
  parent: System.Windows.EventTrigger
  isExternal: false
  name: EventTrigger()
  nameWithType: EventTrigger.EventTrigger()
  fullName: System.Windows.EventTrigger.EventTrigger()
- uid: System.Windows.EventTrigger.#ctor(System.Windows.RoutedEvent)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: EventTrigger(RoutedEvent)
  nameWithType: EventTrigger.EventTrigger(RoutedEvent)
  fullName: System.Windows.EventTrigger.EventTrigger(RoutedEvent)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Windows.EventTrigger.Actions
  parent: System.Windows.EventTrigger
  isExternal: false
  name: Actions
  nameWithType: EventTrigger.Actions
  fullName: System.Windows.EventTrigger.Actions
- uid: System.Windows.TriggerActionCollection
  parent: System.Windows
  isExternal: false
  name: TriggerActionCollection
  nameWithType: TriggerActionCollection
  fullName: System.Windows.TriggerActionCollection
- uid: System.Windows.EventTrigger.AddChild(System.Object)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: AddChild(Object)
  nameWithType: EventTrigger.AddChild(Object)
  fullName: System.Windows.EventTrigger.AddChild(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.EventTrigger.AddText(System.String)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: AddText(String)
  nameWithType: EventTrigger.AddText(String)
  fullName: System.Windows.EventTrigger.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.EventTrigger.RoutedEvent
  parent: System.Windows.EventTrigger
  isExternal: false
  name: RoutedEvent
  nameWithType: EventTrigger.RoutedEvent
  fullName: System.Windows.EventTrigger.RoutedEvent
- uid: System.Windows.EventTrigger.ShouldSerializeActions
  parent: System.Windows.EventTrigger
  isExternal: false
  name: ShouldSerializeActions()
  nameWithType: EventTrigger.ShouldSerializeActions()
  fullName: System.Windows.EventTrigger.ShouldSerializeActions()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.EventTrigger.SourceName
  parent: System.Windows.EventTrigger
  isExternal: false
  name: SourceName
  nameWithType: EventTrigger.SourceName
  fullName: System.Windows.EventTrigger.SourceName
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.EventTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.EventTrigger.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.Windows.EventTrigger.#ctor*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: EventTrigger
  nameWithType: EventTrigger.EventTrigger
- uid: System.Windows.EventTrigger.Actions*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: Actions
  nameWithType: EventTrigger.Actions
- uid: System.Windows.EventTrigger.AddChild*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: AddChild
  nameWithType: EventTrigger.AddChild
- uid: System.Windows.EventTrigger.AddText*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: AddText
  nameWithType: EventTrigger.AddText
- uid: System.Windows.EventTrigger.RoutedEvent*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: RoutedEvent
  nameWithType: EventTrigger.RoutedEvent
- uid: System.Windows.EventTrigger.ShouldSerializeActions*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: ShouldSerializeActions
  nameWithType: EventTrigger.ShouldSerializeActions
- uid: System.Windows.EventTrigger.SourceName*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: SourceName
  nameWithType: EventTrigger.SourceName
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.EventTrigger.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.EventTrigger
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: EventTrigger.System.Windows.Markup.IAddChild.AddText
