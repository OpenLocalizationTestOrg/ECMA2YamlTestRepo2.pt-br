### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.Internal.GenerateMetadata
  id: GenerateMetadata
  children:
  - System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  - System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  - System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  - System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  langs:
  - csharp
  name: GenerateMetadata
  nameWithType: GenerateMetadata
  fullName: System.EnterpriseServices.Internal.GenerateMetadata
  type: Class
  summary: "Gera metadados comuns de runtime (CLR) do idioma para um componente COM+."
  remarks: "Se necessário, a classe GenerateMetadata gera um assembly que contém metadados do CLR para uma biblioteca de tipo especificado.       GenerateMetadata é usado internamente pelo .NET Framework. Você não precisa usar a classe diretamente no seu código."
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("d8013ff1-730b-45e2-ba24-874b7242c425")]

      public class GenerateMetadata : System.EnterpriseServices.Internal.IComSoapMetadata
  inheritance:
  - System.Object
  implements:
  - System.EnterpriseServices.Internal.IComSoapMetadata
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  id: '#ctor'
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateMetadata()
  nameWithType: GenerateMetadata.GenerateMetadata()
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()
  type: Constructor
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Inicializa uma nova instância do <xref href=&quot;System.EnterpriseServices.Internal.GenerateMetadata&quot;> </xref> classe."
  syntax:
    content: public GenerateMetadata ();
    parameters: []
  overload: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  id: Generate(System.String,System.String)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: Generate(String,String)
  nameWithType: GenerateMetadata.Generate(String,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Gera ou localiza um assembly que contém metadados de runtime (CLR) de linguagem comum para um componente COM+ representado pela biblioteca de tipo especificado."
  remarks: "Se necessário, o método de gerar gera um assembly que contém metadados do CLR para uma biblioteca de tipo especificado. Para fazer esse processamento, ele chama o <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>método.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>       Esses métodos não precisa ser chamado diretamente no seu código."
  syntax:
    content: public string Generate (string strSrcTypeLib, string outPath);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "O nome da biblioteca de tipos para o qual gerar um assembly."
    - id: outPath
      type: System.String
      description: "A pasta na qual para gerar um assembly ou para localizar um assembly já existente."
    return:
      type: System.String
      description: "O nome do assembly gerado; Caso contrário, vazio de cadeia de caracteres se as entradas são inválidas."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.Generate*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  id: GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Gera ou localiza um assembly que contém metadados comuns de runtime (CLR) do idioma para um componente COM+ representado pela biblioteca de tipo especificado, assina o assembly com um par de chaves de nome forte e instala-o no cache de assembly global."
  remarks: "Se necessário, o método GenerateMetaData gera um assembly que contém metadados do CLR para uma biblioteca de tipo especificado. Ele não gera um assembly se um assembly de nome gerado já existe na cadeia de caracteres `outPath` pasta.       GenerateMetaData não precisa ser chamado diretamente no seu código. Ele é chamado por ambos os <xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A>e <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>métodos.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A> </xref:System.EnterpriseServices.Internal.GenerateMetadata.Generate%2A>       Se chamado por <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>, GenerateMetaData também gera um par de chaves de nome forte, assina o assembly e instala-o no cache de assembly global.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned%2A>"
  syntax:
    content: public string GenerateMetaData (string strSrcTypeLib, string outPath, byte[] PublicKey, System.Reflection.StrongNameKeyPair KeyPair);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "O nome da biblioteca de tipos para o qual gerar um assembly."
    - id: outPath
      type: System.String
      description: "A pasta na qual para gerar um assembly ou para localizar um assembly já existente."
    - id: PublicKey
      type: System.Byte[]
      description: "Uma chave pública usada para importar informações de biblioteca de tipo em um assembly."
    - id: KeyPair
      type: System.Reflection.StrongNameKeyPair
      description: "Um nome forte par de chaves usado para assinar o assembly gerado."
    return:
      type: System.String
      description: "O nome do assembly gerado; Caso contrário, vazio de cadeia de caracteres se as entradas são inválidas."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  id: GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: GenerateSigned(String,String,Boolean,String)
  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Gera ou localiza um assembly que contém metadados comuns de runtime (CLR) do idioma para um componente COM+ representado pela biblioteca de tipo especificado, assina o assembly com um par de chaves de nome forte e instala-o no cache de assembly global."
  remarks: "Se necessário, o método GenerateSigned gera um assembly que contém metadados do CLR para uma biblioteca de tipo especificado. Ele também gera um par de chaves de nome forte e assina o assembly.       Para fazer esse processamento, ele chama o <xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A>método.</xref:System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData%2A> Esses métodos não precisa ser chamado diretamente no seu código.       O `InstallGac` parâmetro indica se é necessário instalar o assembly no cache de assembly global. No entanto, a implementação ignora esse valor e sempre tenta instalar o assembly assinado no cache de assembly global."
  syntax:
    content: public string GenerateSigned (string strSrcTypeLib, string outPath, bool InstallGac, out string Error);
    parameters:
    - id: strSrcTypeLib
      type: System.String
      description: "O nome da biblioteca de tipos para o qual gerar um assembly."
    - id: outPath
      type: System.String
      description: "A pasta na qual para gerar um assembly ou para localizar um assembly já existente."
    - id: InstallGac
      type: System.Boolean
      description: "Ignorado."
    - id: Error
      type: System.String
      description: "Uma cadeia de caracteres no qual uma mensagem de erro pode ser gravada."
    return:
      type: System.String
      description: "O nome do assembly gerado; Caso contrário, vazio de cadeia de caracteres se as entradas são inválidas."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  id: SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  langs:
  - csharp
  name: SearchPath(String,String,String,Int32,String,Int32[])
  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices.Internal
  summary: "Procura um arquivo especificado em um caminho especificado."
  remarks: "Para obter mais informações, consulte a documentação do Platform SDK sobre SearchPath em [http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp](http://msdn.microsoft.com/library/default.asp?url=/library/fileio/base/searchpath.asp)."
  syntax:
    content: public static int SearchPath (string path, string fileName, string extension, int numBufferChars, string buffer, int[] filePart);
    parameters:
    - id: path
      type: System.String
      description: "O caminho a ser pesquisada para o arquivo."
    - id: fileName
      type: System.String
      description: "O nome do arquivo que deseja pesquisar."
    - id: extension
      type: System.String
      description: "Uma extensão a ser adicionado ao nome do arquivo ao procurar o arquivo."
    - id: numBufferChars
      type: System.Int32
      description: "O tamanho do buffer que recebe o nome de arquivo e caminho válido."
    - id: buffer
      type: System.String
      description: "O buffer que recebe o nome de arquivo e caminho do arquivo encontrado."
    - id: filePart
      type: System.Int32[]
      description: "A variável que recebe o endereço do último componente do nome do arquivo e caminho válido."
    return:
      type: System.Int32
      description: "Se a pesquisa tiver êxito, o valor de retorno é o comprimento da cadeia de caracteres copiado <code> buffer </code>. Se a pesquisa falhar, o valor de retorno será 0."
  overload: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetadata()
  nameWithType: GenerateMetadata.GenerateMetadata()
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetadata()
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate(System.String,System.String)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: Generate(String,String)
  nameWithType: GenerateMetadata.Generate(String,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.Generate(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(System.String,System.String,System.Byte[],System.Reflection.StrongNameKeyPair)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  nameWithType: GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData(String,String,Byte[],StrongNameKeyPair)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.StrongNameKeyPair
  parent: System.Reflection
  isExternal: false
  name: StrongNameKeyPair
  nameWithType: StrongNameKeyPair
  fullName: System.Reflection.StrongNameKeyPair
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(System.String,System.String,System.Boolean,System.String@)
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateSigned(String,String,Boolean,String)
  nameWithType: GenerateMetadata.GenerateSigned(String,String,Boolean,String)
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned(String,String,Boolean,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(System.String,System.String,System.String,System.Int32,System.String,System.Int32[])
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: SearchPath(String,String,String,Int32,String,Int32[])
  nameWithType: GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
  fullName: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath(String,String,String,Int32,String,Int32[])
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.EnterpriseServices.Internal.GenerateMetadata.#ctor*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetadata
  nameWithType: GenerateMetadata.GenerateMetadata
- uid: System.EnterpriseServices.Internal.GenerateMetadata.Generate*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: Generate
  nameWithType: GenerateMetadata.Generate
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateMetaData*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateMetaData
  nameWithType: GenerateMetadata.GenerateMetaData
- uid: System.EnterpriseServices.Internal.GenerateMetadata.GenerateSigned*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: GenerateSigned
  nameWithType: GenerateMetadata.GenerateSigned
- uid: System.EnterpriseServices.Internal.GenerateMetadata.SearchPath*
  parent: System.EnterpriseServices.Internal.GenerateMetadata
  isExternal: false
  name: SearchPath
  nameWithType: GenerateMetadata.SearchPath
