### YamlMime:ManagedReference
items:
- uid: System.Xml.XmlElement
  id: XmlElement
  children:
  - System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  - System.Xml.XmlElement.Attributes
  - System.Xml.XmlElement.CloneNode(System.Boolean)
  - System.Xml.XmlElement.GetAttribute(System.String)
  - System.Xml.XmlElement.GetAttribute(System.String,System.String)
  - System.Xml.XmlElement.GetAttributeNode(System.String)
  - System.Xml.XmlElement.GetAttributeNode(System.String,System.String)
  - System.Xml.XmlElement.GetElementsByTagName(System.String)
  - System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)
  - System.Xml.XmlElement.HasAttribute(System.String)
  - System.Xml.XmlElement.HasAttribute(System.String,System.String)
  - System.Xml.XmlElement.HasAttributes
  - System.Xml.XmlElement.InnerText
  - System.Xml.XmlElement.InnerXml
  - System.Xml.XmlElement.IsEmpty
  - System.Xml.XmlElement.LocalName
  - System.Xml.XmlElement.Name
  - System.Xml.XmlElement.NamespaceURI
  - System.Xml.XmlElement.NextSibling
  - System.Xml.XmlElement.NodeType
  - System.Xml.XmlElement.OwnerDocument
  - System.Xml.XmlElement.ParentNode
  - System.Xml.XmlElement.Prefix
  - System.Xml.XmlElement.RemoveAll
  - System.Xml.XmlElement.RemoveAllAttributes
  - System.Xml.XmlElement.RemoveAttribute(System.String)
  - System.Xml.XmlElement.RemoveAttribute(System.String,System.String)
  - System.Xml.XmlElement.RemoveAttributeAt(System.Int32)
  - System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)
  - System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)
  - System.Xml.XmlElement.SchemaInfo
  - System.Xml.XmlElement.SetAttribute(System.String,System.String)
  - System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)
  - System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)
  - System.Xml.XmlElement.SetAttributeNode(System.String,System.String)
  - System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)
  - System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)
  langs:
  - csharp
  name: XmlElement
  nameWithType: XmlElement
  fullName: System.Xml.XmlElement
  type: Class
  summary: "Representa um elemento."
  remarks: "Elementos são um de nós mais comuns no W3C DOM Document Object Model (). Elementos podem ter atributos associados a eles. O `XmlElement` classe tem muitos métodos para acessar atributos (<xref:System.Xml.XmlElement.GetAttribute%2A>, <xref:System.Xml.XmlElement.SetAttribute%2A>, <xref:System.Xml.XmlElement.RemoveAttribute%2A>, <xref:System.Xml.XmlElement.GetAttributeNode%2A>e assim por diante).</xref:System.Xml.XmlElement.GetAttributeNode%2A> </xref:System.Xml.XmlElement.RemoveAttribute%2A> </xref:System.Xml.XmlElement.SetAttribute%2A> </xref:System.Xml.XmlElement.GetAttribute%2A> Você também pode usar o <xref:System.Xml.XmlElement.Attributes%2A>propriedade que retorna um <xref:System.Xml.XmlAttributeCollection>permitindo que você acesse os atributos por nome ou índice da coleção.</xref:System.Xml.XmlAttributeCollection> </xref:System.Xml.XmlElement.Attributes%2A>"
  syntax:
    content: 'public class XmlElement : System.Xml.XmlLinkedNode'
  inheritance:
  - System.Object
  - System.Xml.XmlNode
  - System.Xml.XmlLinkedNode
  implements: []
  inheritedMembers:
  - System.Xml.XmlLinkedNode.PreviousSibling
  - System.Xml.XmlNode.AppendChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.BaseURI
  - System.Xml.XmlNode.ChildNodes
  - System.Xml.XmlNode.Clone
  - System.Xml.XmlNode.CreateNavigator
  - System.Xml.XmlNode.FirstChild
  - System.Xml.XmlNode.GetEnumerator
  - System.Xml.XmlNode.GetNamespaceOfPrefix(System.String)
  - System.Xml.XmlNode.GetPrefixOfNamespace(System.String)
  - System.Xml.XmlNode.HasChildNodes
  - System.Xml.XmlNode.InsertAfter(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.InsertBefore(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.IsReadOnly
  - System.Xml.XmlNode.Item(System.String)
  - System.Xml.XmlNode.Item(System.String,System.String)
  - System.Xml.XmlNode.LastChild
  - System.Xml.XmlNode.Normalize
  - System.Xml.XmlNode.OuterXml
  - System.Xml.XmlNode.PrependChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.PreviousText
  - System.Xml.XmlNode.RemoveChild(System.Xml.XmlNode)
  - System.Xml.XmlNode.ReplaceChild(System.Xml.XmlNode,System.Xml.XmlNode)
  - System.Xml.XmlNode.SelectNodes(System.String)
  - System.Xml.XmlNode.SelectNodes(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.SelectSingleNode(System.String)
  - System.Xml.XmlNode.SelectSingleNode(System.String,System.Xml.XmlNamespaceManager)
  - System.Xml.XmlNode.Supports(System.String,System.String)
  - System.Xml.XmlNode.System#Collections#IEnumerable#GetEnumerator
  - System.Xml.XmlNode.System#ICloneable#Clone
  - System.Xml.XmlNode.Value
  platform:
  - net462
- uid: System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  id: '#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)'
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: XmlElement(String,String,String,XmlDocument)
  nameWithType: XmlElement.XmlElement(String,String,String,XmlDocument)
  fullName: System.Xml.XmlElement.XmlElement(String,String,String,XmlDocument)
  type: Constructor
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xml.XmlElement&quot;> </xref> classe."
  remarks: "Não criar uma instância de um <xref:System.Xml.XmlElement>diretamente; em vez disso, use os métodos como <xref:System.Xml.XmlDocument.CreateElement%2A>.</xref:System.Xml.XmlDocument.CreateElement%2A> </xref:System.Xml.XmlElement>"
  syntax:
    content: protected XmlElement (string prefix, string localName, string namespaceURI, System.Xml.XmlDocument doc);
    parameters:
    - id: prefix
      type: System.String
      description: "O prefixo de namespace. Consulte o <xref:System.Xml.XmlElement.Prefix*>propriedade.</xref:System.Xml.XmlElement.Prefix*>"
    - id: localName
      type: System.String
      description: "O nome local; Consulte o <xref:System.Xml.XmlElement.LocalName*>propriedade.</xref:System.Xml.XmlElement.LocalName*>"
    - id: namespaceURI
      type: System.String
      description: "O namespace URI. Consulte o <xref:System.Xml.XmlElement.NamespaceURI*>propriedade.</xref:System.Xml.XmlElement.NamespaceURI*>"
    - id: doc
      type: System.Xml.XmlDocument
      description: "O documento XML do pai."
  overload: System.Xml.XmlElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.Attributes
  id: Attributes
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: Attributes
  nameWithType: XmlElement.Attributes
  fullName: System.Xml.XmlElement.Attributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém um <xref href=&quot;System.Xml.XmlAttributeCollection&quot;> </xref> que contém a lista de atributos para este nó."
  remarks: ''
  example:
  - "The following example uses changes the value of the first attribute.  \n  \n [!code-cpp[Classic WebData XmlElement.Attributes Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._0_1.cpp)]\n [!code-cs[Classic WebData XmlElement.Attributes Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._0_1.cs)]\n [!code-vb[Classic WebData XmlElement.Attributes Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._0_1.vb)]"
  syntax:
    content: public override System.Xml.XmlAttributeCollection Attributes { get; }
    return:
      type: System.Xml.XmlAttributeCollection
      description: "<xref href=&quot;System.Xml.XmlAttributeCollection&quot;></xref>que contém a lista de atributos para este nó."
  overload: System.Xml.XmlElement.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.CloneNode(System.Boolean)
  id: CloneNode(System.Boolean)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: CloneNode(Boolean)
  nameWithType: XmlElement.CloneNode(Boolean)
  fullName: System.Xml.XmlElement.CloneNode(Boolean)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Cria uma cópia deste nó."
  remarks: "Esse método funciona como um construtor de cópia para nós. O nó duplicado não tem nenhum pai (<xref:System.Xml.XmlNode.ParentNode%2A> retorna `null`).</xref:System.Xml.XmlNode.ParentNode%2A>"
  example:
  - "The following example creates a new element, clones it, and then adds both elements into an XML document.  \n  \n [!code-cpp[Classic WebData XmlElement.CloneNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._3_1.cpp)]\n [!code-cs[Classic WebData XmlElement.CloneNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._3_1.cs)]\n [!code-vb[Classic WebData XmlElement.CloneNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._3_1.vb)]"
  syntax:
    content: public override System.Xml.XmlNode CloneNode (bool deep);
    parameters:
    - id: deep
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>recursivamente clonar a subárvore abaixo do nó especificado; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> clonar apenas o próprio nó (e seus atributos, se o nó for um <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref>)."
    return:
      type: System.Xml.XmlNode
      description: "O nó clonado."
  overload: System.Xml.XmlElement.CloneNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: XmlElement.GetAttribute(String)
  fullName: System.Xml.XmlElement.GetAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Retorna o valor do atributo com o nome especificado."
  remarks: ''
  example:
  - "The following example checks to see if the element has the specified attribute.  \n  \n [!code-cs[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._0_1.cs)]\n [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._0_1.vb)]\n [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._0_1.cpp)]"
  syntax:
    content: public virtual string GetAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do atributo para recuperar. Este é um nome qualificado. Ele é comparado com o <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> propriedade do nó correspondente."
    return:
      type: System.String
      description: "O valor do atributo especificado. Uma cadeia de caracteres vazia é retornada se um atributo correspondente não foi encontrado ou se o atributo não tem um especificado ou valor padrão."
  overload: System.Xml.XmlElement.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.GetAttribute(System.String,System.String)
  id: GetAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: GetAttribute(String,String)
  nameWithType: XmlElement.GetAttribute(String,String)
  fullName: System.Xml.XmlElement.GetAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Retorna o valor do atributo com o nome do local especificado e o URI de namespace."
  syntax:
    content: public virtual string GetAttribute (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do atributo para recuperar."
    - id: namespaceURI
      type: System.String
      description: "O URI do namespace do atributo a recuperar."
    return:
      type: System.String
      description: "O valor do atributo especificado. Uma cadeia de caracteres vazia é retornada se um atributo correspondente não foi encontrado ou se o atributo não tem um especificado ou valor padrão."
  overload: System.Xml.XmlElement.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.GetAttributeNode(System.String)
  id: GetAttributeNode(System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: GetAttributeNode(String)
  nameWithType: XmlElement.GetAttributeNode(String)
  fullName: System.Xml.XmlElement.GetAttributeNode(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Retorna o <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> com o nome especificado."
  remarks: ''
  example:
  - "The following example checks to see if the element has the specified attribute.  \n  \n [!code-cpp[Classic WebData XmlElement.GetAttributeNode Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._5_1.cpp)]\n [!code-cs[Classic WebData XmlElement.GetAttributeNode Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._5_1.cs)]\n [!code-vb[Classic WebData XmlElement.GetAttributeNode Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._5_1.vb)]"
  syntax:
    content: public virtual System.Xml.XmlAttribute GetAttributeNode (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do atributo para recuperar. Este é um nome qualificado. Ele é comparado com o <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> propriedade do nó correspondente."
    return:
      type: System.Xml.XmlAttribute
      description: "Especificado <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se um atributo correspondente não foi encontrado."
  overload: System.Xml.XmlElement.GetAttributeNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.GetAttributeNode(System.String,System.String)
  id: GetAttributeNode(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: GetAttributeNode(String,String)
  nameWithType: XmlElement.GetAttributeNode(String,String)
  fullName: System.Xml.XmlElement.GetAttributeNode(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Retorna o <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> com o nome do local especificado e o URI de namespace."
  syntax:
    content: public virtual System.Xml.XmlAttribute GetAttributeNode (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do atributo."
    - id: namespaceURI
      type: System.String
      description: "O namespace URI do atributo."
    return:
      type: System.Xml.XmlAttribute
      description: "Especificado <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se um atributo correspondente não foi encontrado."
  overload: System.Xml.XmlElement.GetAttributeNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.GetElementsByTagName(System.String)
  id: GetElementsByTagName(System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: GetElementsByTagName(String)
  nameWithType: XmlElement.GetElementsByTagName(String)
  fullName: System.Xml.XmlElement.GetElementsByTagName(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Retorna um <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> contendo uma lista de todos os elementos descendentes que correspondem a <xref:System.Xml.XmlElement.Name*>.</xref:System.Xml.XmlElement.Name*> especificado"
  remarks: "Os nós são colocados na ordem em que eles seriam encontrados em uma passagem preorder do <xref:System.Xml.XmlElement>árvore.</xref:System.Xml.XmlElement>      > [!NOTE] > É recomendável que você use o <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>ou <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName>método em vez do método GetElementsByTagName.</xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> </xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>"
  example:
  - "The following example gets and displays all the book titles.  \n  \n [!code-cpp[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._13_1.cpp)]\n [!code-vb[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._13_1.vb)]\n [!code-cs[Classic WebData XmlElement.GetElementsByTagName Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._13_1.cs)]  \n  \n The example uses the file, `2books.xml`, as input.  \n  \n [!code-xml[Classic WebData XmlElement.GetElementsByTagName Example#2](~/add/codesnippet/xml/m-system.xml.xmlelement._13_2.xml)]"
  syntax:
    content: public virtual System.Xml.XmlNodeList GetElementsByTagName (string name);
    parameters:
    - id: name
      type: System.String
      description: "A marca de nome para fazer a correspondência. Este é um nome qualificado. Ele é comparado com o <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> propriedade do nó correspondente. O asterisco (*) é um valor especial que corresponde a todas as marcas."
    return:
      type: System.Xml.XmlNodeList
      description: "Um <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> contendo uma lista de todos os nós correspondentes. A lista está vazia se não houver nenhum nó correspondente."
  overload: System.Xml.XmlElement.GetElementsByTagName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)
  id: GetElementsByTagName(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: GetElementsByTagName(String,String)
  nameWithType: XmlElement.GetElementsByTagName(String,String)
  fullName: System.Xml.XmlElement.GetElementsByTagName(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Retorna um <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> contendo uma lista de todos os elementos descendentes que correspondem à cadeia <> </> *> e <> </> *>."
  remarks: "Os nós são colocados na ordem em que eles seriam encontrados em uma passagem preorder do `XmlElement` árvore.      > [!NOTE] > É recomendável que você use o <xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>ou <xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName>método em vez do método GetElementsByTagName.</xref:System.Xml.XmlNode.SelectSingleNode%2A?displayProperty=fullName> </xref:System.Xml.XmlNode.SelectNodes%2A?displayProperty=fullName>"
  syntax:
    content: public virtual System.Xml.XmlNodeList GetElementsByTagName (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local para fazer a correspondência. O asterisco (*) é um valor especial que corresponde a todas as marcas."
    - id: namespaceURI
      type: System.String
      description: "O namespace URI para fazer a correspondência."
    return:
      type: System.Xml.XmlNodeList
      description: "Um <xref href=&quot;System.Xml.XmlNodeList&quot;> </xref> contendo uma lista de todos os nós correspondentes. A lista está vazia se não houver nenhum nó correspondente."
  overload: System.Xml.XmlElement.GetElementsByTagName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.HasAttribute(System.String)
  id: HasAttribute(System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: HasAttribute(String)
  nameWithType: XmlElement.HasAttribute(String)
  fullName: System.Xml.XmlElement.HasAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Determina se o nó atual tem um atributo com o nome especificado."
  remarks: ''
  example:
  - "The following example checks to see if the element has the specified attribute.  \n  \n [!code-cs[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._7_1.cs)]\n [!code-vb[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._7_1.vb)]\n [!code-cpp[Classic WebData XmlElement.HasAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._7_1.cpp)]"
  syntax:
    content: public virtual bool HasAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do atributo a localizar. Este é um nome qualificado. Ele é comparado com o <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> propriedade do nó correspondente."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nó atual tiver o atributo especificado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlElement.HasAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.HasAttribute(System.String,System.String)
  id: HasAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: HasAttribute(String,String)
  nameWithType: XmlElement.HasAttribute(String,String)
  fullName: System.Xml.XmlElement.HasAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Determina se o nó atual tem um atributo com o nome do local especificado e o URI de namespace."
  syntax:
    content: public virtual bool HasAttribute (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do atributo a localizar."
    - id: namespaceURI
      type: System.String
      description: "O URI do namespace do atributo a localizar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nó atual tiver o atributo especificado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlElement.HasAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.HasAttributes
  id: HasAttributes
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: HasAttributes
  nameWithType: XmlElement.HasAttributes
  fullName: System.Xml.XmlElement.HasAttributes
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém um <xref uid=&quot;langword_csharp_boolean&quot; name=&quot;boolean&quot; href=&quot;&quot;> </xref> valor que indica se o nó atual tem todos os atributos."
  remarks: "Esta propriedade é uma extensão da Microsoft para modelo de objeto de documento (DOM)."
  example:
  - "The following example removes all attributes from the root element.  \n  \n [!code-cpp[Classic WebData XmlElement.HasAttributes Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._5_1.cpp)]\n [!code-vb[Classic WebData XmlElement.HasAttributes Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._5_1.vb)]\n [!code-cs[Classic WebData XmlElement.HasAttributes Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._5_1.cs)]"
  syntax:
    content: public virtual bool HasAttributes { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nó atual possui atributos; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlElement.HasAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.InnerText
  id: InnerText
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: InnerText
  nameWithType: XmlElement.InnerText
  fullName: System.Xml.XmlElement.InnerText
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém ou define os valores concatenados do nó e todos os seus filhos."
  remarks: "A definição dessa propriedade substitui todos os filhos com o conteúdo analisado da cadeia de caracteres especificada.       Esta propriedade é uma extensão da Microsoft para modelo de objeto de documento (DOM)."
  example:
  - "The following example compares the `InnerText` and <xref:System.Xml.XmlElement.InnerXml%2A> properties.  \n  \n [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._7_1.cpp)]\n [!code-cs[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._7_1.cs)]\n [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._7_1.vb)]"
  syntax:
    content: public override string InnerText { get; set; }
    return:
      type: System.String
      description: "Os valores concatenados do nó e todos os seus filhos."
  overload: System.Xml.XmlElement.InnerText*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.InnerXml
  id: InnerXml
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: InnerXml
  nameWithType: XmlElement.InnerXml
  fullName: System.Xml.XmlElement.InnerXml
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém ou define a marcação que representa apenas os filhos deste nó."
  remarks: "A definição dessa propriedade substitui os filhos do nó com o conteúdo analisado da cadeia de caracteres especificada. A análise é feita no contexto atual do namespace.       Esta propriedade é uma extensão da Microsoft para modelo de objeto de documento (DOM)."
  example:
  - "The following example compares the <xref:System.Xml.XmlElement.InnerText%2A> and `InnerXml` properties.  \n  \n [!code-cpp[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._2_1.cpp)]\n [!code-cs[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._2_1.cs)]\n [!code-vb[Classic WebData XmlElement.InnerXml Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._2_1.vb)]"
  syntax:
    content: public override string InnerXml { get; set; }
    return:
      type: System.String
      description: "A marcação dos filhos deste nó."
  overload: System.Xml.XmlElement.InnerXml*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "O XML especificado quando a definição dessa propriedade não está bem formada."
  platform:
  - net462
- uid: System.Xml.XmlElement.IsEmpty
  id: IsEmpty
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: IsEmpty
  nameWithType: XmlElement.IsEmpty
  fullName: System.Xml.XmlElement.IsEmpty
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém ou define o formato de marca do elemento."
  remarks: "Esta propriedade é uma extensão de modelo de objeto de documento (DOM) da Microsoft."
  example:
  - "The following example adds content to an empty element.  \n  \n [!code-cpp[Classic WebData XmlElement.IsEmpty Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._8_1.cpp)]\n [!code-cs[Classic WebData XmlElement.IsEmpty Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._8_1.cs)]\n [!code-vb[Classic WebData XmlElement.IsEmpty Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._8_1.vb)]"
  syntax:
    content: public bool IsEmpty { get; set; }
    return:
      type: System.Boolean
      description: "Retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o elemento está para ser serializada em formato curto marca &quot;&lt;item /&gt;&quot;; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> for the long format &quot;&lt;item&gt;&lt;/item&gt;&quot;.       Ao definir essa propriedade, se definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, os filhos do elemento são removidos e o elemento é serializado no formato curto marca. Se definido como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, o valor da propriedade é alterado (independentemente de estarem ou não o elemento tem conteúdo); se o elemento está vazio, ele é serializado no formato longo.       Esta propriedade é uma extensão da Microsoft para modelo de objeto de documento (DOM)."
  overload: System.Xml.XmlElement.IsEmpty*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.LocalName
  id: LocalName
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: LocalName
  nameWithType: XmlElement.LocalName
  fullName: System.Xml.XmlElement.LocalName
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o nome local do nó atual."
  remarks: "Se o nó não tem um prefixo, `LocalName` é o mesmo que <xref:System.Xml.XmlElement.Name%2A>.</xref:System.Xml.XmlElement.Name%2A>"
  example:
  - "The following example displays information on the ISBN element.  \n  \n [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._4_1.vb)]\n [!code-cs[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._4_1.cs)]\n [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._4_1.cpp)]"
  syntax:
    content: public override string LocalName { get; }
    return:
      type: System.String
      description: "O nome do nó atual com o prefixo é removido. Por exemplo, <xref uid=&quot;langword_csharp_LocalName&quot; name=&quot;LocalName&quot; href=&quot;&quot;> </xref> é o catálogo para o elemento &lt;bk:book&gt;."
  overload: System.Xml.XmlElement.LocalName*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.Name
  id: Name
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: Name
  nameWithType: XmlElement.Name
  fullName: System.Xml.XmlElement.Name
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o nome qualificado do nó."
  remarks: ''
  example:
  - "The following example displays information on the ISBN element.  \n  \n [!code-cpp[Classic WebData XmlElement.Name Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._1_1.cpp)]\n [!code-cs[Classic WebData XmlElement.Name Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._1_1.cs)]\n [!code-vb[Classic WebData XmlElement.Name Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._1_1.vb)]"
  syntax:
    content: public override string Name { get; }
    return:
      type: System.String
      description: "O nome qualificado do nó. Para <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> nós, este é o nome da marca do elemento."
  overload: System.Xml.XmlElement.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.NamespaceURI
  id: NamespaceURI
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: NamespaceURI
  nameWithType: XmlElement.NamespaceURI
  fullName: System.Xml.XmlElement.NamespaceURI
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o namespace URI deste nó."
  remarks: "Este é o namespace que URI especificado no momento da criação. Por exemplo, `NamespaceURI` é urn: exemplos do elemento \\<bk:book xmlns:bk = &quot;urn: exemplos&quot; >"
  example:
  - "The following example displays information on the ISBN element.  \n  \n [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._6_1.vb)]\n [!code-cs[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._6_1.cs)]\n [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._6_1.cpp)]"
  syntax:
    content: public override string NamespaceURI { get; }
    return:
      type: System.String
      description: "O namespace URI deste nó. Se não houver nenhum URI de namespace, essa propriedade retorna Empty."
  overload: System.Xml.XmlElement.NamespaceURI*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.NextSibling
  id: NextSibling
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: NextSibling
  nameWithType: XmlElement.NextSibling
  fullName: System.Xml.XmlElement.NextSibling
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o <xref href=&quot;System.Xml.XmlNode&quot;> </xref> imediatamente após esse elemento."
  syntax:
    content: public override System.Xml.XmlNode NextSibling { get; }
    return:
      type: System.Xml.XmlNode
      description: "O <xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;> </xref> imediatamente após esse elemento."
  overload: System.Xml.XmlElement.NextSibling*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.NodeType
  id: NodeType
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: NodeType
  nameWithType: XmlElement.NodeType
  fullName: System.Xml.XmlElement.NodeType
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o tipo do nó atual."
  syntax:
    content: public override System.Xml.XmlNodeType NodeType { get; }
    return:
      type: System.Xml.XmlNodeType
      description: "O tipo de nó. Para <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> nós, esse valor é XmlNodeType."
  overload: System.Xml.XmlElement.NodeType*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.OwnerDocument
  id: OwnerDocument
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: OwnerDocument
  nameWithType: XmlElement.OwnerDocument
  fullName: System.Xml.XmlElement.OwnerDocument
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o <xref href=&quot;System.Xml.XmlDocument&quot;> </xref> ao qual pertence a este nó."
  remarks: "Ao adicionar nós ao nó atual, use o `XmlDocument` retornado pelo `OwnerDocument` propriedade para criar o nó."
  example:
  - "The following example inserts a new element into an XML document.  \n  \n [!code-cpp[Classic WebData XmlElement.OwnerDocument Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._3_1.cpp)]\n [!code-vb[Classic WebData XmlElement.OwnerDocument Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._3_1.vb)]\n [!code-cs[Classic WebData XmlElement.OwnerDocument Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._3_1.cs)]"
  syntax:
    content: public override System.Xml.XmlDocument OwnerDocument { get; }
    return:
      type: System.Xml.XmlDocument
      description: "O <xref uid=&quot;langword_csharp_XmlDocument&quot; name=&quot;XmlDocument&quot; href=&quot;&quot;> </xref> ao qual pertence este elemento."
  overload: System.Xml.XmlElement.OwnerDocument*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.ParentNode
  id: ParentNode
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: ParentNode
  nameWithType: XmlElement.ParentNode
  fullName: System.Xml.XmlElement.ParentNode
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o pai deste nó (para nós que podem ter pais)."
  syntax:
    content: public override System.Xml.XmlNode ParentNode { get; }
    return:
      type: System.Xml.XmlNode
      description: "O <xref uid=&quot;langword_csharp_XmlNode&quot; name=&quot;XmlNode&quot; href=&quot;&quot;> </xref> que é o pai do nó atual. Se um nó tiver acabado de ser criado e ainda não foram adicionados à árvore, ou se ele tiver sido removido da árvore, o pai é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Para todos os outros nós, o valor retornado depende do <xref:System.Xml.XmlNode.NodeType*>do nó.</xref:System.Xml.XmlNode.NodeType*> A tabela a seguir descreve os possíveis valores de retorno para o <xref uid=&quot;langword_csharp_ParentNode&quot; name=&quot;ParentNode&quot; href=&quot;&quot;> </xref> propriedade."
  overload: System.Xml.XmlElement.ParentNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.Prefix
  id: Prefix
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: Prefix
  nameWithType: XmlElement.Prefix
  fullName: System.Xml.XmlElement.Prefix
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém ou define o prefixo de namespace desse nó."
  remarks: "A definição dessa propriedade altera o <xref:System.Xml.XmlElement.Name%2A>propriedade, que contém o nome qualificado para um `XmlElement`.</xref:System.Xml.XmlElement.Name%2A> No entanto, alterar o prefixo não altera o URI do namespace do elemento."
  example:
  - "The following example displays information on the ISBN element.  \n  \n [!code-vb[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/visualbasic/p-system.xml.xmlelement._9_1.vb)]\n [!code-cs[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/csharp/p-system.xml.xmlelement._9_1.cs)]\n [!code-cpp[Classic WebData XmlElement.LocalName Example#1](~/add/codesnippet/cpp/p-system.xml.xmlelement._9_1.cpp)]"
  syntax:
    content: public override string Prefix { get; set; }
    return:
      type: System.String
      description: "O prefixo de namespace desse nó. Se não houver nenhum prefixo, essa propriedade retorna Empty."
  overload: System.Xml.XmlElement.Prefix*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Este nó é somente leitura"
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "O prefixo especificado contém um caractere inválido.       O prefixo especificado está incorreto.       O namespaceURI deste nó é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       O prefixo especificado é &quot;xml&quot; e o namespaceURI deste nó é diferente do http://www.w3.org/XML/1998/namespace."
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAll
  id: RemoveAll
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAll()
  nameWithType: XmlElement.RemoveAll()
  fullName: System.Xml.XmlElement.RemoveAll()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Remove todos os atributos especificados e os filhos do nó atual. Atributos padrão não são removidos."
  remarks: ''
  example:
  - "The following example removes all attributes and child nodes from the root element.  \n  \n [!code-cpp[Classic WebData XmlElement.RemoveAll Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._6_1.cpp)]\n [!code-vb[Classic WebData XmlElement.RemoveAll Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._6_1.vb)]\n [!code-cs[Classic WebData XmlElement.RemoveAll Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._6_1.cs)]"
  syntax:
    content: public override void RemoveAll ();
    parameters: []
  overload: System.Xml.XmlElement.RemoveAll*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAllAttributes
  id: RemoveAllAttributes
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAllAttributes()
  nameWithType: XmlElement.RemoveAllAttributes()
  fullName: System.Xml.XmlElement.RemoveAllAttributes()
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Remove todos os atributos especificados do elemento. Atributos padrão não são removidos."
  remarks: "Esse método é uma extensão da Microsoft para modelo de objeto de documento (DOM)."
  example:
  - "The following example removes all attributes from the root element.  \n  \n [!code-cpp[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._9_1.cpp)]\n [!code-cs[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._9_1.cs)]\n [!code-vb[Classic WebData XmlElement.RemoveAllAttributes Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._9_1.vb)]"
  syntax:
    content: public virtual void RemoveAllAttributes ();
    parameters: []
  overload: System.Xml.XmlElement.RemoveAllAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAttribute(System.String)
  id: RemoveAttribute(System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAttribute(String)
  nameWithType: XmlElement.RemoveAttribute(String)
  fullName: System.Xml.XmlElement.RemoveAttribute(String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Remove um atributo por nome."
  remarks: "Se o atributo removido é conhecido por ter um valor padrão, um atributo aparece imediatamente que contém o valor padrão e, se aplicável, o URI de namespace correspondente, o nome local e o prefixo."
  example:
  - "The following example removes an attribute from an element.  \n  \n [!code-cpp[Classic WebData XmlElement.RemoveAttribute Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._1_1.cpp)]\n [!code-cs[Classic WebData XmlElement.RemoveAttribute Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._1_1.cs)]\n [!code-vb[Classic WebData XmlElement.RemoveAttribute Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._1_1.vb)]"
  syntax:
    content: public virtual void RemoveAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do atributo a ser removido. Este é um nome qualificado. Ele é comparado com o <xref uid=&quot;langword_csharp_Name&quot; name=&quot;Name&quot; href=&quot;&quot;> </xref> propriedade do nó correspondente."
  overload: System.Xml.XmlElement.RemoveAttribute*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nó é somente leitura."
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAttribute(System.String,System.String)
  id: RemoveAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAttribute(String,String)
  nameWithType: XmlElement.RemoveAttribute(String,String)
  fullName: System.Xml.XmlElement.RemoveAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Remove um atributo com o nome do local especificado e o URI de namespace. (Se o atributo removido tiver um valor padrão, ele será imediatamente substituído)."
  remarks: "Se o atributo removido é conhecido por ter um valor padrão, um atributo aparece imediatamente que contém o valor padrão e, se aplicável, o URI de namespace correspondente, o nome local e o prefixo."
  example:
  - "The following example removes an attribute from an element.  \n  \n [!code-cpp[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._12_1.cpp)]\n [!code-vb[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._12_1.vb)]\n [!code-cs[Classic WebData XmlElement.RemoveAttribute1 Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._12_1.cs)]"
  syntax:
    content: public virtual void RemoveAttribute (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do atributo a ser removido."
    - id: namespaceURI
      type: System.String
      description: "O namespace URI do atributo a ser removido."
  overload: System.Xml.XmlElement.RemoveAttribute*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nó é somente leitura."
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAttributeAt(System.Int32)
  id: RemoveAttributeAt(System.Int32)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAttributeAt(Int32)
  nameWithType: XmlElement.RemoveAttributeAt(Int32)
  fullName: System.Xml.XmlElement.RemoveAttributeAt(Int32)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Remove o nó de atributo com o índice especificado do elemento. (Se o atributo removido tiver um valor padrão, ele será imediatamente substituído)."
  remarks: "Esse método é uma extensão da Microsoft para modelo de objeto de documento (DOM)."
  example:
  - "The following example removes an attribute from an element.  \n  \n [!code-cpp[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._2_1.cpp)]\n [!code-vb[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._2_1.vb)]\n [!code-cs[Classic WebData XmlElement.RemoveAttributeAt Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._2_1.cs)]"
  syntax:
    content: public virtual System.Xml.XmlNode RemoveAttributeAt (int i);
    parameters:
    - id: i
      type: System.Int32
      description: "O índice do nó a ser removido. O primeiro nó tem um índice 0."
    return:
      type: System.Xml.XmlNode
      description: "O nó de atributo removido ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhum nó no índice especificado."
  overload: System.Xml.XmlElement.RemoveAttributeAt*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)
  id: RemoveAttributeNode(System.Xml.XmlAttribute)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAttributeNode(XmlAttribute)
  nameWithType: XmlElement.RemoveAttributeNode(XmlAttribute)
  fullName: System.Xml.XmlElement.RemoveAttributeNode(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Remove o <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>."
  syntax:
    content: public virtual System.Xml.XmlAttribute RemoveAttributeNode (System.Xml.XmlAttribute oldAttr);
    parameters:
    - id: oldAttr
      type: System.Xml.XmlAttribute
      description: "O <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> nó a ser removido. Se o atributo removido tiver um valor padrão, ele será substituído imediatamente."
    return:
      type: System.Xml.XmlAttribute
      description: "O removido <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se <code> oldAttr </code> não é um nó de atributo do <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref>."
  overload: System.Xml.XmlElement.RemoveAttributeNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Este nó é somente leitura."
  platform:
  - net462
- uid: System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)
  id: RemoveAttributeNode(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: RemoveAttributeNode(String,String)
  nameWithType: XmlElement.RemoveAttributeNode(String,String)
  fullName: System.Xml.XmlElement.RemoveAttributeNode(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Remove o <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref> especificado pelo nome local e URI de namespace. (Se o atributo removido tiver um valor padrão, ele será imediatamente substituído)."
  remarks: ''
  example:
  - "The following example removes an attribute from an element.  \n  \n [!code-cpp[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._11_1.cpp)]\n [!code-cs[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._11_1.cs)]\n [!code-vb[Classic WebData XmlElement.RemoveAttributeNode1 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._11_1.vb)]"
  syntax:
    content: public virtual System.Xml.XmlAttribute RemoveAttributeNode (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do atributo."
    - id: namespaceURI
      type: System.String
      description: "O namespace URI do atributo."
    return:
      type: System.Xml.XmlAttribute
      description: "O removido <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> não tem um nó de atributo correspondente."
  overload: System.Xml.XmlElement.RemoveAttributeNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Este nó é somente leitura."
  platform:
  - net462
- uid: System.Xml.XmlElement.SchemaInfo
  id: SchemaInfo
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: SchemaInfo
  nameWithType: XmlElement.SchemaInfo
  fullName: System.Xml.XmlElement.SchemaInfo
  type: Property
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Obtém o infoset de validação de esquema post que foi atribuído a esse nó como resultado de validação de esquema."
  remarks: "A propriedade SchemaInfo é definida quando este nó é validado."
  syntax:
    content: public override System.Xml.Schema.IXmlSchemaInfo SchemaInfo { get; }
    return:
      type: System.Xml.Schema.IXmlSchemaInfo
      description: "Um <xref href=&quot;System.Xml.Schema.IXmlSchemaInfo&quot;> </xref> objeto contendo infoset post de validação de esquema deste nó."
  overload: System.Xml.XmlElement.SchemaInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: XmlElement.SetAttribute(String,String)
  fullName: System.Xml.XmlElement.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Define o valor do atributo com o nome especificado."
  remarks: "Se um atributo com o mesmo nome já está presente no elemento, seu valor é alterado para `value`. `value`é uma cadeia de caracteres simple. Ela não é analisada como ele está sendo definido. Qualquer marcação, como a sintaxe para ser reconhecida como uma referência de entidade é tratada como texto literal e precisa ser ignorada corretamente pela implementação quando ele é gravado. Para atribuir um valor de atributo que contém referências de entidade, o usuário deve criar um <xref:System.Xml.XmlAttribute>nó mais qualquer <xref:System.Xml.XmlText>e <xref:System.Xml.XmlEntityReference>nós, a subárvore apropriada de criar e usar <xref:System.Xml.XmlElement.SetAttributeNode%2A>atribuí-lo como o valor de um atributo.</xref:System.Xml.XmlElement.SetAttributeNode%2A> </xref:System.Xml.XmlEntityReference> </xref:System.Xml.XmlText> </xref:System.Xml.XmlAttribute>"
  syntax:
    content: public virtual void SetAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "O nome do atributo para criar ou alterar. Este é um nome qualificado. Se o nome contém dois-pontos, ela é analisada em componentes de nome local e o prefixo."
    - id: value
      type: System.String
      description: "O valor a ser definido para o atributo."
  overload: System.Xml.XmlElement.SetAttribute*
  exceptions:
  - type: System.Xml.XmlException
    commentId: T:System.Xml.XmlException
    description: "O nome especificado contém um caractere inválido."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nó é somente leitura."
  platform:
  - net462
- uid: System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)
  id: SetAttribute(System.String,System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: SetAttribute(String,String,String)
  nameWithType: XmlElement.SetAttribute(String,String,String)
  fullName: System.Xml.XmlElement.SetAttribute(String,String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Define o valor do atributo com o nome do local especificado e o URI de namespace."
  syntax:
    content: public virtual string SetAttribute (string localName, string namespaceURI, string value);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do atributo."
    - id: namespaceURI
      type: System.String
      description: "O namespace URI do atributo."
    - id: value
      type: System.String
      description: "O valor a ser definido para o atributo."
    return:
      type: System.String
      description: "O valor do atributo."
  overload: System.Xml.XmlElement.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)
  id: SetAttributeNode(System.Xml.XmlAttribute)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: SetAttributeNode(XmlAttribute)
  nameWithType: XmlElement.SetAttributeNode(XmlAttribute)
  fullName: System.Xml.XmlElement.SetAttributeNode(XmlAttribute)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Adiciona o <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>."
  remarks: "Se um atributo com esse nome já está presente no elemento, ele será substituído pelo novo."
  syntax:
    content: public virtual System.Xml.XmlAttribute SetAttributeNode (System.Xml.XmlAttribute newAttr);
    parameters:
    - id: newAttr
      type: System.Xml.XmlAttribute
      description: "O <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> nó a ser adicionado à coleção de atributo para este elemento."
    return:
      type: System.Xml.XmlAttribute
      description: "Se o atributo substitui um atributo existente com o mesmo nome, o antigo <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> retornado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é retornado."
  overload: System.Xml.XmlElement.SetAttributeNode*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> newAttr </code> foi criado a partir de um documento diferente daquela que criou este nó. Ou, esse nó é somente leitura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <code> newAttr </code> já é um atributo de outro <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> objeto. Você deve explicitamente clonar <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;> </xref> nós para reutilizá-los em outros <xref uid=&quot;langword_csharp_XmlElement&quot; name=&quot;XmlElement&quot; href=&quot;&quot;> </xref> objetos."
  platform:
  - net462
- uid: System.Xml.XmlElement.SetAttributeNode(System.String,System.String)
  id: SetAttributeNode(System.String,System.String)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: SetAttributeNode(String,String)
  nameWithType: XmlElement.SetAttributeNode(String,String)
  fullName: System.Xml.XmlElement.SetAttributeNode(String,String)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Adiciona o <xref href=&quot;System.Xml.XmlAttribute&quot;> </xref>."
  remarks: "O `XmlAttribute` não tem nenhum filho. Use <xref:System.Xml.XmlAttribute.Value%2A>para atribuir um valor de texto para o atributo ou use <xref:System.Xml.XmlNode.AppendChild%2A>(ou um método semelhante) para adicionar filhos para o atributo.</xref:System.Xml.XmlNode.AppendChild%2A> </xref:System.Xml.XmlAttribute.Value%2A>"
  example:
  - "The following example adds an attribute to an element.  \n  \n [!code-cs[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._4_1.cs)]\n [!code-vb[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._4_1.vb)]\n [!code-cpp[Classic WebData XmlElement.SetAttributeNode1 Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._4_1.cpp)]"
  syntax:
    content: public virtual System.Xml.XmlAttribute SetAttributeNode (string localName, string namespaceURI);
    parameters:
    - id: localName
      type: System.String
      description: "O nome local do atributo."
    - id: namespaceURI
      type: System.String
      description: "O namespace URI do atributo."
    return:
      type: System.Xml.XmlAttribute
      description: "The <xref uid=&quot;langword_csharp_XmlAttribute&quot; name=&quot;XmlAttribute&quot; href=&quot;&quot;></xref> to add."
  overload: System.Xml.XmlElement.SetAttributeNode*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)
  id: WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlElement.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlElement.WriteContentTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Salva todos os filhos do nó especificado <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter>"
  remarks: "Esse método é uma extensão da Microsoft para modelo de objeto de documento (DOM)."
  example:
  - "The following example displays the contents of the element to the console.  \n  \n [!code-cpp[Classic WebData XmlElement.WriteContentTo Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._8_1.cpp)]\n [!code-vb[Classic WebData XmlElement.WriteContentTo Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._8_1.vb)]\n [!code-cs[Classic WebData XmlElement.WriteContentTo Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._8_1.cs)]"
  syntax:
    content: public override void WriteContentTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "O <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> à qual você deseja salvar."
  overload: System.Xml.XmlElement.WriteContentTo*
  exceptions: []
  platform:
  - net462
- uid: System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)
  id: WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlElement
  langs:
  - csharp
  name: WriteTo(XmlWriter)
  nameWithType: XmlElement.WriteTo(XmlWriter)
  fullName: System.Xml.XmlElement.WriteTo(XmlWriter)
  type: Method
  assemblies:
  - System.Xml
  namespace: System.Xml
  summary: "Salva o nó atual para o <xref:System.Xml.XmlWriter>.</xref:System.Xml.XmlWriter> especificado"
  remarks: "Esse método é uma extensão da Microsoft para modelo de objeto de documento (DOM)."
  example:
  - "The following example adds an attribute to an element and then displays the modified element.  \n  \n [!code-cs[Classic WebData XmlElement.WriteTo Example#1](~/add/codesnippet/csharp/m-system.xml.xmlelement._10_1.cs)]\n [!code-cpp[Classic WebData XmlElement.WriteTo Example#1](~/add/codesnippet/cpp/m-system.xml.xmlelement._10_1.cpp)]\n [!code-vb[Classic WebData XmlElement.WriteTo Example#1](~/add/codesnippet/visualbasic/m-system.xml.xmlelement._10_1.vb)]"
  syntax:
    content: public override void WriteTo (System.Xml.XmlWriter w);
    parameters:
    - id: w
      type: System.Xml.XmlWriter
      description: "O <xref uid=&quot;langword_csharp_XmlWriter&quot; name=&quot;XmlWriter&quot; href=&quot;&quot;> </xref> à qual você deseja salvar."
  overload: System.Xml.XmlElement.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Xml.XmlLinkedNode
  isExternal: false
  name: System.Xml.XmlLinkedNode
- uid: System.Xml.XmlException
  isExternal: true
  name: System.Xml.XmlException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Xml.XmlElement.#ctor(System.String,System.String,System.String,System.Xml.XmlDocument)
  parent: System.Xml.XmlElement
  isExternal: false
  name: XmlElement(String,String,String,XmlDocument)
  nameWithType: XmlElement.XmlElement(String,String,String,XmlDocument)
  fullName: System.Xml.XmlElement.XmlElement(String,String,String,XmlDocument)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Xml.XmlElement.Attributes
  parent: System.Xml.XmlElement
  isExternal: false
  name: Attributes
  nameWithType: XmlElement.Attributes
  fullName: System.Xml.XmlElement.Attributes
- uid: System.Xml.XmlAttributeCollection
  parent: System.Xml
  isExternal: false
  name: XmlAttributeCollection
  nameWithType: XmlAttributeCollection
  fullName: System.Xml.XmlAttributeCollection
- uid: System.Xml.XmlElement.CloneNode(System.Boolean)
  parent: System.Xml.XmlElement
  isExternal: false
  name: CloneNode(Boolean)
  nameWithType: XmlElement.CloneNode(Boolean)
  fullName: System.Xml.XmlElement.CloneNode(Boolean)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xml.XmlElement.GetAttribute(System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetAttribute(String)
  nameWithType: XmlElement.GetAttribute(String)
  fullName: System.Xml.XmlElement.GetAttribute(String)
- uid: System.Xml.XmlElement.GetAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetAttribute(String,String)
  nameWithType: XmlElement.GetAttribute(String,String)
  fullName: System.Xml.XmlElement.GetAttribute(String,String)
- uid: System.Xml.XmlElement.GetAttributeNode(System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetAttributeNode(String)
  nameWithType: XmlElement.GetAttributeNode(String)
  fullName: System.Xml.XmlElement.GetAttributeNode(String)
- uid: System.Xml.XmlAttribute
  parent: System.Xml
  isExternal: false
  name: XmlAttribute
  nameWithType: XmlAttribute
  fullName: System.Xml.XmlAttribute
- uid: System.Xml.XmlElement.GetAttributeNode(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetAttributeNode(String,String)
  nameWithType: XmlElement.GetAttributeNode(String,String)
  fullName: System.Xml.XmlElement.GetAttributeNode(String,String)
- uid: System.Xml.XmlElement.GetElementsByTagName(System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetElementsByTagName(String)
  nameWithType: XmlElement.GetElementsByTagName(String)
  fullName: System.Xml.XmlElement.GetElementsByTagName(String)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.Xml.XmlElement.GetElementsByTagName(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetElementsByTagName(String,String)
  nameWithType: XmlElement.GetElementsByTagName(String,String)
  fullName: System.Xml.XmlElement.GetElementsByTagName(String,String)
- uid: System.Xml.XmlElement.HasAttribute(System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: HasAttribute(String)
  nameWithType: XmlElement.HasAttribute(String)
  fullName: System.Xml.XmlElement.HasAttribute(String)
- uid: System.Xml.XmlElement.HasAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: HasAttribute(String,String)
  nameWithType: XmlElement.HasAttribute(String,String)
  fullName: System.Xml.XmlElement.HasAttribute(String,String)
- uid: System.Xml.XmlElement.HasAttributes
  parent: System.Xml.XmlElement
  isExternal: false
  name: HasAttributes
  nameWithType: XmlElement.HasAttributes
  fullName: System.Xml.XmlElement.HasAttributes
- uid: System.Xml.XmlElement.InnerText
  parent: System.Xml.XmlElement
  isExternal: false
  name: InnerText
  nameWithType: XmlElement.InnerText
  fullName: System.Xml.XmlElement.InnerText
- uid: System.Xml.XmlElement.InnerXml
  parent: System.Xml.XmlElement
  isExternal: false
  name: InnerXml
  nameWithType: XmlElement.InnerXml
  fullName: System.Xml.XmlElement.InnerXml
- uid: System.Xml.XmlElement.IsEmpty
  parent: System.Xml.XmlElement
  isExternal: false
  name: IsEmpty
  nameWithType: XmlElement.IsEmpty
  fullName: System.Xml.XmlElement.IsEmpty
- uid: System.Xml.XmlElement.LocalName
  parent: System.Xml.XmlElement
  isExternal: false
  name: LocalName
  nameWithType: XmlElement.LocalName
  fullName: System.Xml.XmlElement.LocalName
- uid: System.Xml.XmlElement.Name
  parent: System.Xml.XmlElement
  isExternal: false
  name: Name
  nameWithType: XmlElement.Name
  fullName: System.Xml.XmlElement.Name
- uid: System.Xml.XmlElement.NamespaceURI
  parent: System.Xml.XmlElement
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlElement.NamespaceURI
  fullName: System.Xml.XmlElement.NamespaceURI
- uid: System.Xml.XmlElement.NextSibling
  parent: System.Xml.XmlElement
  isExternal: false
  name: NextSibling
  nameWithType: XmlElement.NextSibling
  fullName: System.Xml.XmlElement.NextSibling
- uid: System.Xml.XmlElement.NodeType
  parent: System.Xml.XmlElement
  isExternal: false
  name: NodeType
  nameWithType: XmlElement.NodeType
  fullName: System.Xml.XmlElement.NodeType
- uid: System.Xml.XmlNodeType
  parent: System.Xml
  isExternal: true
  name: XmlNodeType
  nameWithType: XmlNodeType
  fullName: System.Xml.XmlNodeType
- uid: System.Xml.XmlElement.OwnerDocument
  parent: System.Xml.XmlElement
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlElement.OwnerDocument
  fullName: System.Xml.XmlElement.OwnerDocument
- uid: System.Xml.XmlElement.ParentNode
  parent: System.Xml.XmlElement
  isExternal: false
  name: ParentNode
  nameWithType: XmlElement.ParentNode
  fullName: System.Xml.XmlElement.ParentNode
- uid: System.Xml.XmlElement.Prefix
  parent: System.Xml.XmlElement
  isExternal: false
  name: Prefix
  nameWithType: XmlElement.Prefix
  fullName: System.Xml.XmlElement.Prefix
- uid: System.Xml.XmlElement.RemoveAll
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAll()
  nameWithType: XmlElement.RemoveAll()
  fullName: System.Xml.XmlElement.RemoveAll()
- uid: System.Xml.XmlElement.RemoveAllAttributes
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAllAttributes()
  nameWithType: XmlElement.RemoveAllAttributes()
  fullName: System.Xml.XmlElement.RemoveAllAttributes()
- uid: System.Xml.XmlElement.RemoveAttribute(System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttribute(String)
  nameWithType: XmlElement.RemoveAttribute(String)
  fullName: System.Xml.XmlElement.RemoveAttribute(String)
- uid: System.Xml.XmlElement.RemoveAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttribute(String,String)
  nameWithType: XmlElement.RemoveAttribute(String,String)
  fullName: System.Xml.XmlElement.RemoveAttribute(String,String)
- uid: System.Xml.XmlElement.RemoveAttributeAt(System.Int32)
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttributeAt(Int32)
  nameWithType: XmlElement.RemoveAttributeAt(Int32)
  fullName: System.Xml.XmlElement.RemoveAttributeAt(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xml.XmlElement.RemoveAttributeNode(System.Xml.XmlAttribute)
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttributeNode(XmlAttribute)
  nameWithType: XmlElement.RemoveAttributeNode(XmlAttribute)
  fullName: System.Xml.XmlElement.RemoveAttributeNode(XmlAttribute)
- uid: System.Xml.XmlElement.RemoveAttributeNode(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttributeNode(String,String)
  nameWithType: XmlElement.RemoveAttributeNode(String,String)
  fullName: System.Xml.XmlElement.RemoveAttributeNode(String,String)
- uid: System.Xml.XmlElement.SchemaInfo
  parent: System.Xml.XmlElement
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlElement.SchemaInfo
  fullName: System.Xml.XmlElement.SchemaInfo
- uid: System.Xml.Schema.IXmlSchemaInfo
  parent: System.Xml.Schema
  isExternal: false
  name: IXmlSchemaInfo
  nameWithType: IXmlSchemaInfo
  fullName: System.Xml.Schema.IXmlSchemaInfo
- uid: System.Xml.XmlElement.SetAttribute(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: XmlElement.SetAttribute(String,String)
  fullName: System.Xml.XmlElement.SetAttribute(String,String)
- uid: System.Xml.XmlElement.SetAttribute(System.String,System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: SetAttribute(String,String,String)
  nameWithType: XmlElement.SetAttribute(String,String,String)
  fullName: System.Xml.XmlElement.SetAttribute(String,String,String)
- uid: System.Xml.XmlElement.SetAttributeNode(System.Xml.XmlAttribute)
  parent: System.Xml.XmlElement
  isExternal: false
  name: SetAttributeNode(XmlAttribute)
  nameWithType: XmlElement.SetAttributeNode(XmlAttribute)
  fullName: System.Xml.XmlElement.SetAttributeNode(XmlAttribute)
- uid: System.Xml.XmlElement.SetAttributeNode(System.String,System.String)
  parent: System.Xml.XmlElement
  isExternal: false
  name: SetAttributeNode(String,String)
  nameWithType: XmlElement.SetAttributeNode(String,String)
  fullName: System.Xml.XmlElement.SetAttributeNode(String,String)
- uid: System.Xml.XmlElement.WriteContentTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlElement
  isExternal: false
  name: WriteContentTo(XmlWriter)
  nameWithType: XmlElement.WriteContentTo(XmlWriter)
  fullName: System.Xml.XmlElement.WriteContentTo(XmlWriter)
- uid: System.Xml.XmlWriter
  parent: System.Xml
  isExternal: true
  name: XmlWriter
  nameWithType: XmlWriter
  fullName: System.Xml.XmlWriter
- uid: System.Xml.XmlElement.WriteTo(System.Xml.XmlWriter)
  parent: System.Xml.XmlElement
  isExternal: false
  name: WriteTo(XmlWriter)
  nameWithType: XmlElement.WriteTo(XmlWriter)
  fullName: System.Xml.XmlElement.WriteTo(XmlWriter)
- uid: System.Xml.XmlElement.#ctor*
  parent: System.Xml.XmlElement
  isExternal: false
  name: XmlElement
  nameWithType: XmlElement.XmlElement
- uid: System.Xml.XmlElement.Attributes*
  parent: System.Xml.XmlElement
  isExternal: false
  name: Attributes
  nameWithType: XmlElement.Attributes
- uid: System.Xml.XmlElement.CloneNode*
  parent: System.Xml.XmlElement
  isExternal: false
  name: CloneNode
  nameWithType: XmlElement.CloneNode
- uid: System.Xml.XmlElement.GetAttribute*
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetAttribute
  nameWithType: XmlElement.GetAttribute
- uid: System.Xml.XmlElement.GetAttributeNode*
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetAttributeNode
  nameWithType: XmlElement.GetAttributeNode
- uid: System.Xml.XmlElement.GetElementsByTagName*
  parent: System.Xml.XmlElement
  isExternal: false
  name: GetElementsByTagName
  nameWithType: XmlElement.GetElementsByTagName
- uid: System.Xml.XmlElement.HasAttribute*
  parent: System.Xml.XmlElement
  isExternal: false
  name: HasAttribute
  nameWithType: XmlElement.HasAttribute
- uid: System.Xml.XmlElement.HasAttributes*
  parent: System.Xml.XmlElement
  isExternal: false
  name: HasAttributes
  nameWithType: XmlElement.HasAttributes
- uid: System.Xml.XmlElement.InnerText*
  parent: System.Xml.XmlElement
  isExternal: false
  name: InnerText
  nameWithType: XmlElement.InnerText
- uid: System.Xml.XmlElement.InnerXml*
  parent: System.Xml.XmlElement
  isExternal: false
  name: InnerXml
  nameWithType: XmlElement.InnerXml
- uid: System.Xml.XmlElement.IsEmpty*
  parent: System.Xml.XmlElement
  isExternal: false
  name: IsEmpty
  nameWithType: XmlElement.IsEmpty
- uid: System.Xml.XmlElement.LocalName*
  parent: System.Xml.XmlElement
  isExternal: false
  name: LocalName
  nameWithType: XmlElement.LocalName
- uid: System.Xml.XmlElement.Name*
  parent: System.Xml.XmlElement
  isExternal: false
  name: Name
  nameWithType: XmlElement.Name
- uid: System.Xml.XmlElement.NamespaceURI*
  parent: System.Xml.XmlElement
  isExternal: false
  name: NamespaceURI
  nameWithType: XmlElement.NamespaceURI
- uid: System.Xml.XmlElement.NextSibling*
  parent: System.Xml.XmlElement
  isExternal: false
  name: NextSibling
  nameWithType: XmlElement.NextSibling
- uid: System.Xml.XmlElement.NodeType*
  parent: System.Xml.XmlElement
  isExternal: false
  name: NodeType
  nameWithType: XmlElement.NodeType
- uid: System.Xml.XmlElement.OwnerDocument*
  parent: System.Xml.XmlElement
  isExternal: false
  name: OwnerDocument
  nameWithType: XmlElement.OwnerDocument
- uid: System.Xml.XmlElement.ParentNode*
  parent: System.Xml.XmlElement
  isExternal: false
  name: ParentNode
  nameWithType: XmlElement.ParentNode
- uid: System.Xml.XmlElement.Prefix*
  parent: System.Xml.XmlElement
  isExternal: false
  name: Prefix
  nameWithType: XmlElement.Prefix
- uid: System.Xml.XmlElement.RemoveAll*
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAll
  nameWithType: XmlElement.RemoveAll
- uid: System.Xml.XmlElement.RemoveAllAttributes*
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAllAttributes
  nameWithType: XmlElement.RemoveAllAttributes
- uid: System.Xml.XmlElement.RemoveAttribute*
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttribute
  nameWithType: XmlElement.RemoveAttribute
- uid: System.Xml.XmlElement.RemoveAttributeAt*
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttributeAt
  nameWithType: XmlElement.RemoveAttributeAt
- uid: System.Xml.XmlElement.RemoveAttributeNode*
  parent: System.Xml.XmlElement
  isExternal: false
  name: RemoveAttributeNode
  nameWithType: XmlElement.RemoveAttributeNode
- uid: System.Xml.XmlElement.SchemaInfo*
  parent: System.Xml.XmlElement
  isExternal: false
  name: SchemaInfo
  nameWithType: XmlElement.SchemaInfo
- uid: System.Xml.XmlElement.SetAttribute*
  parent: System.Xml.XmlElement
  isExternal: false
  name: SetAttribute
  nameWithType: XmlElement.SetAttribute
- uid: System.Xml.XmlElement.SetAttributeNode*
  parent: System.Xml.XmlElement
  isExternal: false
  name: SetAttributeNode
  nameWithType: XmlElement.SetAttributeNode
- uid: System.Xml.XmlElement.WriteContentTo*
  parent: System.Xml.XmlElement
  isExternal: false
  name: WriteContentTo
  nameWithType: XmlElement.WriteContentTo
- uid: System.Xml.XmlElement.WriteTo*
  parent: System.Xml.XmlElement
  isExternal: false
  name: WriteTo
  nameWithType: XmlElement.WriteTo
