### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.MdbDataFileEditor
  id: MdbDataFileEditor
  children:
  - System.Web.UI.Design.MdbDataFileEditor.#ctor
  - System.Web.UI.Design.MdbDataFileEditor.Caption
  - System.Web.UI.Design.MdbDataFileEditor.Filter
  langs:
  - csharp
  name: MdbDataFileEditor
  nameWithType: MdbDataFileEditor
  fullName: System.Web.UI.Design.MdbDataFileEditor
  type: Class
  summary: "Fornece uma interface de usuário em tempo de design para selecionar um arquivo de banco de dados do Microsoft Access."
  remarks: "Um objeto de MdbDataFileEditor é usado em tempo de design para selecionar e editar uma URL para um arquivo de banco de dados do Microsoft Access (. mdb) e, em seguida, atribua o URL para uma propriedade de controle. Por exemplo, o <xref:System.Web.UI.WebControls.AccessDataSource>controle usa a classe de MdbDataFileEditor em tempo de design para definir o valor de <xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A>propriedade.</xref:System.Web.UI.WebControls.AccessDataSource.DataFile%2A> </xref:System.Web.UI.WebControls.AccessDataSource>       Use o <xref:System.ComponentModel.EditorAttribute>atributo para associar o MdbDataFileEditor com uma propriedade.</xref:System.ComponentModel.EditorAttribute> Quando a propriedade associada é editada na superfície de design, o host de designer chama o <xref:System.Web.UI.Design.UrlEditor.EditValue%2A>método.</xref:System.Web.UI.Design.UrlEditor.EditValue%2A> O <xref:System.Web.UI.Design.UrlEditor.EditValue%2A>método usa o <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>método, que por sua vez exibe uma interface do usuário para selecionar a URL e, em seguida, retorna a URL selecionada pelo usuário.</xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> </xref:System.Web.UI.Design.UrlEditor.EditValue%2A> O <xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A>método indica o estilo de exibição da interface do usuário.</xref:System.Web.UI.Design.UrlEditor.GetEditStyle%2A>       Derive uma classe de MdbDataFileEditor para definir um editor personalizado para uma propriedade de URL de banco de dados do Access. Por exemplo, uma classe derivada pode substituir o <xref:System.Web.UI.Design.UrlEditor.EditValue%2A>método e, em seguida, chame o <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>método com um personalizado <xref:System.Web.UI.Design.MdbDataFileEditor.Filter%2A>ou <xref:System.Web.UI.Design.MdbDataFileEditor.Caption%2A>valor.</xref:System.Web.UI.Design.MdbDataFileEditor.Caption%2A> </xref:System.Web.UI.Design.MdbDataFileEditor.Filter%2A> </xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> </xref:System.Web.UI.Design.UrlEditor.EditValue%2A>"
  example:
  - "The following code example demonstrates how to associate an instance of the MdbDataFileEditor class with a property that is contained within a custom control. When you edit the control property on the design surface, the MdbDataFileEditor class provides the user interface to select and edit an Access database file name for the property value.  \n  \n [!code-cs[WebDesigner.MdbDataFileEditor#1](~/add/codesnippet/csharp/t-system.web.ui.design.m_1_1.cs)]\n [!code-vb[WebDesigner.MdbDataFileEditor#1](~/add/codesnippet/visualbasic/t-system.web.ui.design.m_1_1.vb)]"
  syntax:
    content: 'public class MdbDataFileEditor : System.Web.UI.Design.UrlEditor'
  inheritance:
  - System.Object
  - System.Drawing.Design.UITypeEditor
  - System.Web.UI.Design.UrlEditor
  implements: []
  inheritedMembers:
  - System.Drawing.Design.UITypeEditor.EditValue(System.IServiceProvider,System.Object)
  - System.Drawing.Design.UITypeEditor.GetEditStyle
  - System.Drawing.Design.UITypeEditor.GetPaintValueSupported
  - System.Drawing.Design.UITypeEditor.GetPaintValueSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.Drawing.Design.UITypeEditor.IsDropDownResizable
  - System.Drawing.Design.UITypeEditor.PaintValue(System.Drawing.Design.PaintValueEventArgs)
  - System.Drawing.Design.UITypeEditor.PaintValue(System.Object,System.Drawing.Graphics,System.Drawing.Rectangle)
  - System.Web.UI.Design.UrlEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)
  - System.Web.UI.Design.UrlEditor.GetEditStyle(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.Design.UrlEditor.Options
  platform:
  - net462
- uid: System.Web.UI.Design.MdbDataFileEditor.#ctor
  id: '#ctor'
  parent: System.Web.UI.Design.MdbDataFileEditor
  langs:
  - csharp
  name: MdbDataFileEditor()
  nameWithType: MdbDataFileEditor.MdbDataFileEditor()
  fullName: System.Web.UI.Design.MdbDataFileEditor.MdbDataFileEditor()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.Design.MdbDataFileEditor&quot;> </xref> classe."
  syntax:
    content: public MdbDataFileEditor ();
    parameters: []
  overload: System.Web.UI.Design.MdbDataFileEditor.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.MdbDataFileEditor.Caption
  id: Caption
  parent: System.Web.UI.Design.MdbDataFileEditor
  langs:
  - csharp
  name: Caption
  nameWithType: MdbDataFileEditor.Caption
  fullName: System.Web.UI.Design.MdbDataFileEditor.Caption
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Obtém a legenda a ser exibida na caixa de diálogo de seleção."
  remarks: "A cadeia de caracteres de legenda é usada pelo <xref:System.Web.UI.Design.UrlEditor.EditValue%2A>método ao chamar o <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A>método, que exibe a caixa de diálogo de seleção de URL para o usuário em tempo de design.</xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> </xref:System.Web.UI.Design.UrlEditor.EditValue%2A>"
  syntax:
    content: protected override string Caption { get; }
    return:
      type: System.String
      description: "O texto da legenda para exibir a caixa de diálogo de seleção."
  overload: System.Web.UI.Design.MdbDataFileEditor.Caption*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.MdbDataFileEditor.Filter
  id: Filter
  parent: System.Web.UI.Design.MdbDataFileEditor
  langs:
  - csharp
  name: Filter
  nameWithType: MdbDataFileEditor.Filter
  fullName: System.Web.UI.Design.MdbDataFileEditor.Filter
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Obtém as opções de filtro de URL para o editor, que é usado para filtrar os itens que aparecem na caixa de diálogo de seleção de URL."
  remarks: "The Filter property is used by the <xref:System.Web.UI.Design.UrlEditor.EditValue%2A> method when calling the <xref:System.Web.UI.Design.UrlBuilder.BuildUrl%2A> method, which displays the URL selection dialog box to the user at design time.  \n  \n The Filter property default value indicates two URL filters for the dialog box: one for Microsoft Access database files (*.mdb) and another for all files (\\*.\\*).  \n  \n To specify a custom filter string, derive a class from the <xref:System.Web.UI.Design.MdbDataFileEditor> class and override the Filter property to return the custom filter string.  \n  \n A filter string contains one or more filter options. Each filter option contains a description of the filter, followed by the vertical bar (&#124;) and the filter pattern. The strings for different filtering options are separated by the vertical bar.  \n  \n The following is an example of a filter string that contains two filter options:  \n  \n \"`Microsoft Access Databases (*.mdb)|*.mdb|All Files (*.*)|*.*`\".  \n  \n You can specify several filter patterns in a filter option by separating the filter patterns with semicolons. The following is an example of a filter string in which the first filter option specifies two filter patterns:  \n  \n \"`Custom Database Files (*.db1; *.db2)|*.db1;*.db2|All Files (*.*)|*.*`\"."
  syntax:
    content: protected override string Filter { get; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa uma ou mais opções de filtro de URL para a caixa de diálogo."
  overload: System.Web.UI.Design.MdbDataFileEditor.Filter*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Design.UrlEditor
  isExternal: false
  name: System.Web.UI.Design.UrlEditor
- uid: System.Web.UI.Design.MdbDataFileEditor.#ctor
  parent: System.Web.UI.Design.MdbDataFileEditor
  isExternal: false
  name: MdbDataFileEditor()
  nameWithType: MdbDataFileEditor.MdbDataFileEditor()
  fullName: System.Web.UI.Design.MdbDataFileEditor.MdbDataFileEditor()
- uid: System.Web.UI.Design.MdbDataFileEditor.Caption
  parent: System.Web.UI.Design.MdbDataFileEditor
  isExternal: false
  name: Caption
  nameWithType: MdbDataFileEditor.Caption
  fullName: System.Web.UI.Design.MdbDataFileEditor.Caption
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Design.MdbDataFileEditor.Filter
  parent: System.Web.UI.Design.MdbDataFileEditor
  isExternal: false
  name: Filter
  nameWithType: MdbDataFileEditor.Filter
  fullName: System.Web.UI.Design.MdbDataFileEditor.Filter
- uid: System.Web.UI.Design.MdbDataFileEditor.#ctor*
  parent: System.Web.UI.Design.MdbDataFileEditor
  isExternal: false
  name: MdbDataFileEditor
  nameWithType: MdbDataFileEditor.MdbDataFileEditor
- uid: System.Web.UI.Design.MdbDataFileEditor.Caption*
  parent: System.Web.UI.Design.MdbDataFileEditor
  isExternal: false
  name: Caption
  nameWithType: MdbDataFileEditor.Caption
- uid: System.Web.UI.Design.MdbDataFileEditor.Filter*
  parent: System.Web.UI.Design.MdbDataFileEditor
  isExternal: false
  name: Filter
  nameWithType: MdbDataFileEditor.Filter
