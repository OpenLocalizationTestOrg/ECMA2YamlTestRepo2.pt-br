### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Contexts.IContributeEnvoySink
  id: IContributeEnvoySink
  children:
  - System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)
  langs:
  - csharp
  name: IContributeEnvoySink
  nameWithType: IContributeEnvoySink
  fullName: System.Runtime.Remoting.Contexts.IContributeEnvoySink
  type: Interface
  summary: "Contribui com um coletor envoy de mensagem no lado do cliente."
  remarks: "A interface IContributeEnvoySink é implementada por propriedades de contexto do servidor <xref:System.Runtime.Remoting.Contexts.Context>classe que deseja contribuir um coletor envoy de mensagem no lado do cliente.</xref:System.Runtime.Remoting.Contexts.Context> A cadeia de envoy do servidor é composta dessas propriedades de contexto que implementam IContributeEnvoySink. A cadeia envoy reside no lado do cliente e atua como um representante da mensagem correspondente Coletores de propriedades de contexto do servidor."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IContributeEnvoySink
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)
  id: GetEnvoySink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.IContributeEnvoySink
  langs:
  - csharp
  name: GetEnvoySink(MarshalByRefObject,IMessageSink)
  nameWithType: IContributeEnvoySink.GetEnvoySink(MarshalByRefObject,IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(MarshalByRefObject,IMessageSink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Usa o primeiro coletor da cadeia de Coletores composto até o momento e, em seguida, o coletor de mensagem na frente da cadeia já formada se encadeia."
  remarks: "O método GetEnvoySink é usado como uma otimização para criar um coletor envoy quando o destino for um contexto diferente no mesmo domínio do aplicativo e é usado pela operação Wrap."
  syntax:
    content: public System.Runtime.Remoting.Messaging.IMessageSink GetEnvoySink (MarshalByRefObject obj, System.Runtime.Remoting.Messaging.IMessageSink nextSink);
    parameters:
    - id: obj
      type: System.MarshalByRefObject
      description: "O objeto de servidor para o qual a cadeia está sendo criada."
    - id: nextSink
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "A cadeia de Coletores composto até o momento."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "A cadeia de composição de coletor."
  overload: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(System.MarshalByRefObject,System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.IContributeEnvoySink
  isExternal: false
  name: GetEnvoySink(MarshalByRefObject,IMessageSink)
  nameWithType: IContributeEnvoySink.GetEnvoySink(MarshalByRefObject,IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink(MarshalByRefObject,IMessageSink)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.MarshalByRefObject
  parent: System
  isExternal: false
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Runtime.Remoting.Contexts.IContributeEnvoySink.GetEnvoySink*
  parent: System.Runtime.Remoting.Contexts.IContributeEnvoySink
  isExternal: false
  name: GetEnvoySink
  nameWithType: IContributeEnvoySink.GetEnvoySink
