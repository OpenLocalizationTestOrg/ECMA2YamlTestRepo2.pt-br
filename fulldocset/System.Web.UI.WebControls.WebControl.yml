### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebControl
  id: WebControl
  children:
  - System.Web.UI.WebControls.WebControl.#ctor
  - System.Web.UI.WebControls.WebControl.#ctor(System.String)
  - System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  langs:
  - csharp
  name: WebControl
  nameWithType: WebControl
  fullName: System.Web.UI.WebControls.WebControl
  type: Class
  summary: "Serve como a classe base que define os métodos, propriedades e eventos comuns a todos os controles no <xref href=&quot;System.Web.UI.WebControls&quot;> </xref> namespace."
  remarks: "A classe WebControl fornece as propriedades, métodos e eventos que são comuns a todos os controles de servidor Web. Você pode controlar a aparência e comportamento de um controle de servidor Web, definindo as propriedades definidas nesta classe. Por exemplo, a cor do plano de fundo e a cor da fonte de um controle são controladas por meio de <xref:System.Web.UI.WebControls.WebControl.BackColor%2A>e <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>Propriedades, respectivamente.</xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> </xref:System.Web.UI.WebControls.WebControl.BackColor%2A> Em controles que podem exibir uma borda, você pode controlar a largura da borda, o estilo de borda e a cor da borda, definindo o <xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A>, <xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A>, e <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>Propriedades.</xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> </xref:System.Web.UI.WebControls.WebControl.BorderStyle%2A> </xref:System.Web.UI.WebControls.WebControl.BorderWidth%2A> O tamanho de um controle de servidor Web pode ser especificado usando o <xref:System.Web.UI.WebControls.WebControl.Height%2A>e <xref:System.Web.UI.WebControls.WebControl.Width%2A>Propriedades.</xref:System.Web.UI.WebControls.WebControl.Width%2A> </xref:System.Web.UI.WebControls.WebControl.Height%2A>       O comportamento do controle pode ser especificado definindo determinadas propriedades. Você pode habilitar e desabilitar um controle definindo o <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>propriedade.</xref:System.Web.UI.WebControls.WebControl.Enabled%2A> O local do controle na ordem de tabulação é controlado pela configuração de <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>propriedade.</xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> Você pode especificar uma dica de ferramenta para o controle definindo o <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>propriedade.</xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>      > [!NOTE] > Nem todos os controles oferecem suporte a cada propriedade definida nesta classe. Para obter informações específicas sobre se há suporte para uma propriedade, consulte a documentação para o controle específico.      > [!NOTE] > Algumas propriedades dessa classe processam de maneira diferente, dependendo do navegador. Algumas propriedades não serão renderizados, enquanto outros processam, mas não têm nenhum efeito. O <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A>propriedade o <xref:System.Web.HttpBrowserCapabilities>objeto determina a maneira na qual um controle de servidor Web processa.</xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> Para navegadores que oferecem suporte a HTML 4.0, o <xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A>propriedade conterá uma regular <xref:System.Web.HttpBrowserCapabilities>objeto e a maioria das propriedades será renderizado usando os atributos de estilo HTML 4.0.</xref:System.Web.HttpBrowserCapabilities> </xref:System.Web.Configuration.HttpCapabilitiesBase.TagWriter%2A> Navegadores que não há suporte a HTML 4.0 usará o <xref:System.Web.UI.Html32TextWriter>objeto.</xref:System.Web.UI.Html32TextWriter> Isso mapeará automaticamente os atributos de estilo para os atributos de marca HTML 3.2 relevantes. Em alguns casos, como com o <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>propriedade, os atributos de estilo serão convertidos em marcas adicionais, como `<font>` marcas.</xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> Em alguns casos, não haverá nenhum mapeamento foi executada. Para obter informações específicas sobre como uma propriedade é renderizada em diferentes navegadores, consulte a documentação para a propriedade específica.       Para obter uma lista de valores de propriedade inicial para uma instância do WebControl, consulte o <xref:System.Web.UI.WebControls.WebControl.%23ctor%2A>construtor.</xref:System.Web.UI.WebControls.WebControl.%23ctor%2A>"
  example:
  - >-
    [!code-cs[WebControlAddAttributesToRender#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_324_1.cs)]
     [!code-vb[WebControlAddAttributesToRender#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_324_1.vb)]
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      [System.Web.UI.Themeable(true)]

      public class WebControl : System.Web.UI.Control, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: WebControl()
  nameWithType: WebControl.WebControl()
  fullName: System.Web.UI.WebControls.WebControl.WebControl()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.WebControl&quot;> </xref> a classe que representa um <xref uid=&quot;langword_csharp_Span&quot; name=&quot;Span&quot; href=&quot;&quot;> </xref> tag HTML."
  remarks: "Este construtor é usado para inicializar uma nova instância do <xref:System.Web.UI.WebControls.WebControl>a classe que representa um `Span` elemento HTML.</xref:System.Web.UI.WebControls.WebControl>       A tabela a seguir mostra o valor da propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.WebControl>.</xref:System.Web.UI.WebControls.WebControl>      | Propriedade | Valor inicial |   |--------------|-------------------|   | `TagKey`| O valor de enumeração <xref:System.Web.UI.HtmlTextWriterTag>. |      > [!NOTE] > Este construtor não é chamado diretamente.</xref:System.Web.UI.HtmlTextWriterTag> Em vez disso, ele geralmente é chamado pelo construtor de uma classe derivada para inicializar o <xref:System.Web.UI.WebControls.WebControl.TagKey%2A>propriedade para o <xref:System.Web.UI.HtmlTextWriterTag>valor de enumeração.</xref:System.Web.UI.HtmlTextWriterTag> </xref:System.Web.UI.WebControls.WebControl.TagKey%2A>"
  syntax:
    content: protected WebControl ();
    parameters: []
  overload: System.Web.UI.WebControls.WebControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: WebControl(String)
  nameWithType: WebControl.WebControl(String)
  fullName: System.Web.UI.WebControls.WebControl.WebControl(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.WebControl&quot;> </xref> classe usando a marca HTML especificada."
  remarks: "Use este construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.WebControls.WebControl>classe usando a marca HTML especificada.</xref:System.Web.UI.WebControls.WebControl>       A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.WebControl>.</xref:System.Web.UI.WebControls.WebControl>      | Propriedade | Valor inicial |   |--------------|-------------------|   | `TagKey`| O valor de enumeração <xref:System.Web.UI.HtmlTextWriterTag>. |   | `TagName`| O valor de `tag` parâmetro. |      > [!NOTE] > Este construtor não é chamado diretamente.</xref:System.Web.UI.HtmlTextWriterTag> Em vez disso, ele geralmente é chamado pelo construtor de uma classe derivada para inicializar o <xref:System.Web.UI.WebControls.WebControl.TagKey%2A>e <xref:System.Web.UI.WebControls.WebControl.TagName%2A>Propriedades.</xref:System.Web.UI.WebControls.WebControl.TagName%2A> </xref:System.Web.UI.WebControls.WebControl.TagKey%2A>"
  syntax:
    content: protected WebControl (string tag);
    parameters:
    - id: tag
      type: System.String
      description: "Uma marca HTML."
  overload: System.Web.UI.WebControls.WebControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)
  id: '#ctor(System.Web.UI.HtmlTextWriterTag)'
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: WebControl(HtmlTextWriterTag)
  nameWithType: WebControl.WebControl(HtmlTextWriterTag)
  fullName: System.Web.UI.WebControls.WebControl.WebControl(HtmlTextWriterTag)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.WebControl&quot;> </xref> classe usando a marca HTML especificada."
  remarks: "Use este construtor para criar e inicializar uma nova instância do <xref:System.Web.UI.WebControls.WebControl>classe usando especificado <xref:System.Web.UI.HtmlTextWriterTag?displayProperty=fullName>valor.</xref:System.Web.UI.HtmlTextWriterTag?displayProperty=fullName> </xref:System.Web.UI.WebControls.WebControl>       A tabela a seguir mostra o valor da propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.WebControl>.</xref:System.Web.UI.WebControls.WebControl>      | Propriedade | Valor inicial |   |--------------|-------------------|   | `TagKey`| O <xref:System.Web.UI.HtmlTextWriterTag>especificado pelo valor da enumeração de `tag` parâmetro. |</xref:System.Web.UI.HtmlTextWriterTag>"
  example:
  - "The following example demonstrates how to use the constructor for the <xref:System.Web.UI.WebControls.WebControl> class to create a `TextArea` HTML element and display it on the Web Forms page.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx file name extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic WebControl.WebControl Example#1](~/add/codesnippet/csharp/f14f48ff-56ff-441a-acce-_1.aspx)]\n [!code-vb[Classic WebControl.WebControl Example#1](~/add/codesnippet/visualbasic/f14f48ff-56ff-441a-acce-_1.aspx)]"
  syntax:
    content: public WebControl (System.Web.UI.HtmlTextWriterTag tag);
    parameters:
    - id: tag
      type: System.Web.UI.HtmlTextWriterTag
      description: "Uma da <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> valores."
  overload: System.Web.UI.WebControls.WebControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.AccessKey
  id: AccessKey
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: AccessKey
  nameWithType: WebControl.AccessKey
  fullName: System.Web.UI.WebControls.WebControl.AccessKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a chave de acesso que permite que você navegue rapidamente para o controle de servidor Web."
  remarks: "Use a propriedade AccessKey para especificar o atalho de teclado para o controle de servidor Web. Isso permite que você navegue rapidamente para o controle pressionando a tecla ALT e a chave para o caractere especificado no teclado. Por exemplo, definindo a chave de acesso de um controle para a cadeia de caracteres `&quot;D&quot;` indica que o usuário pode navegar para o controle pressionando ALT + D.       Somente uma única cadeia de caracteres é permitida para a propriedade AccessKey. Se você tentar definir essa propriedade como um valor que não é nem `null`, <xref:System.String>, nem uma única cadeia de caracteres, uma exceção será lançada.</xref:System.String>      > [!NOTE] > Essa propriedade é suportada apenas no Internet Explorer 4.0 e posterior."
  example:
  - "The following example illustrates how to set and use the AccessKey property of a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic WebControl.AccessKey Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_842_1.aspx)]\n [!code-vb[Classic WebControl.AccessKey Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_842_1.aspx)]"
  syntax:
    content: public virtual string AccessKey { get; set; }
    return:
      type: System.String
      description: "A chave de acesso de navegação rápida para o controle de servidor Web. O valor padrão é <xref:System.String>, que indica se esta propriedade não está definida.</xref:System.String>"
  overload: System.Web.UI.WebControls.WebControl.AccessKey*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A chave de acesso especificado não é nem <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, <xref:System.String>nem uma cadeia de caracteres único.</xref:System.String>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: WebControl.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adiciona os atributos HTML e estilos que precisam ser renderizadas especificado <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref>. Esse método é usado principalmente por desenvolvedores de controle."
  remarks: "Para processar atributos e estilos de um controle de servidor Web no cliente, normalmente você chama o <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A>e <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName>métodos para inserir cada atributo e Estilizar individualmente para o <xref:System.Web.UI.HtmlTextWriter>fluxo de saída.</xref:System.Web.UI.HtmlTextWriter> </xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName> </xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A> Para simplificar o processo, este método encapsula todas as chamadas para o <xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=fullName>e <xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName>métodos para cada atributo e o estilo associado ao controle de servidor Web.</xref:System.Web.UI.HtmlTextWriter.AddStyleAttribute%2A?displayProperty=fullName> </xref:System.Web.UI.HtmlTextWriter.AddAttribute%2A?displayProperty=fullName> Todos os atributos e estilos são inseridos a <xref:System.Web.UI.HtmlTextWriter>fluxo de saída em uma única chamada de método.</xref:System.Web.UI.HtmlTextWriter> Normalmente, esse método é substituído por desenvolvedores de controle em classes derivadas para inserir os atributos apropriados e estilos para o <xref:System.Web.UI.HtmlTextWriter>fluxo de saída para a classe.</xref:System.Web.UI.HtmlTextWriter>      > [!NOTE] > AddAttributesToRender o método não pode ser usado para inserir o script de cliente. Para usar o script de cliente, consulte a <xref:System.Web.UI.ClientScriptManager>classe.</xref:System.Web.UI.ClientScriptManager>"
  example:
  - "The following example demonstrates how to create a class that derives from the <xref:System.Web.UI.WebControls.WebControl> class. The base implementation of the AddAttributesToRender method is overridden to add attributes appropriate to the derived class in the <xref:System.Web.UI.HtmlTextWriter> output stream.  \n  \n [!code-cs[WebControlAddAttributesToRender#1](~/add/codesnippet/csharp/d4294fb1-e347-43c5-b4eb-_1.cs)]\n [!code-vb[WebControlAddAttributesToRender#1](~/add/codesnippet/visualbasic/d4294fb1-e347-43c5-b4eb-_1.vb)]"
  syntax:
    content: protected virtual void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída para renderizar HTML conteúdo no cliente."
  overload: System.Web.UI.WebControls.WebControl.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  id: ApplyStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: ApplyStyle(Style)
  nameWithType: WebControl.ApplyStyle(Style)
  fullName: System.Web.UI.WebControls.WebControl.ApplyStyle(Style)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia qualquer não vazios elementos do estilo especificado para o controle da Web, substituindo os elementos de estilo existentes do controle. Esse método é usado principalmente por desenvolvedores de controle."
  remarks: ''
  example:
  - "The following example demonstrates how to use the ApplyStyle method to apply a style to a <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebControlApplyStyle#1](~/add/codesnippet/csharp/7479ba8d-e90a-4a61-ae1c-_1.aspx)]\n [!code-vb[WebControlApplyStyle#1](~/add/codesnippet/visualbasic/7479ba8d-e90a-4a61-ae1c-_1.aspx)]"
  syntax:
    content: public void ApplyStyle (System.Web.UI.WebControls.Style s);
    parameters:
    - id: s
      type: System.Web.UI.WebControls.Style
      description: "Um <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> que representa o estilo a ser copiado."
  overload: System.Web.UI.WebControls.WebControl.ApplyStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Attributes
  id: Attributes
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Attributes
  nameWithType: WebControl.Attributes
  fullName: System.Web.UI.WebControls.WebControl.Attributes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de atributos arbitrários (para renderizar somente) que não correspondem às propriedades do controle."
  remarks: "A coleção de atributos contém uma coleção de todos os atributos declarados na marca de abertura de um controle de servidor Web. Isso permite que você controle programaticamente os atributos associados a um controle de servidor Web. Você pode adicionar atributos à coleção ou remover atributos da coleção.      > [!NOTE] > Essa propriedade é processada com todos os atributos da coleção na marca de abertura do controle, independentemente das configurações de navegador. Nem todos os navegadores dão suporte a cada atributo que é renderizado. Não há suporte para atributos geralmente são ignorados pelo navegador.      > [!NOTE] > Não é possível adicionar script do lado do cliente para um <xref:System.Web.UI.WebControls.WebControl>instância usando a coleção de atributos.</xref:System.Web.UI.WebControls.WebControl> Para adicionar um script do lado do cliente, use o <xref:System.Web.UI.Page.ClientScript%2A>propriedade o <xref:System.Web.UI.Page>controle.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.ClientScript%2A>"
  example:
  - "The following example illustrates how the Attributes property of a <xref:System.Web.UI.WebControls.WebControl> can be used to run a JavaScript command when the <xref:System.Web.UI.WebControls.TextBox> control loses focus.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebControl.Attributes Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1256_1.aspx)]\n [!code-cs[Classic WebControl.Attributes Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1256_1.aspx)]"
  syntax:
    content: public System.Web.UI.AttributeCollection Attributes { get; }
    return:
      type: System.Web.UI.AttributeCollection
      description: "Um <xref href=&quot;System.Web.UI.AttributeCollection&quot;> </xref> de pares de nome e valor."
  overload: System.Web.UI.WebControls.WebControl.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.BackColor
  id: BackColor
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: BackColor
  nameWithType: WebControl.BackColor
  fullName: System.Web.UI.WebControls.WebControl.BackColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cor de plano de fundo do controle do servidor Web."
  remarks: "Use a propriedade BackColor para especificar a cor de plano de fundo do controle do servidor Web. Essa propriedade é definida usando um <xref:System.Drawing.Color?displayProperty=fullName>objeto.</xref:System.Drawing.Color?displayProperty=fullName>      > [!NOTE] > Essa propriedade será renderizado para somente certos controles. Por exemplo, <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, e <xref:System.Web.UI.WebControls.ValidationSummary>processará essa propriedade.</xref:System.Web.UI.WebControls.ValidationSummary> </xref:System.Web.UI.WebControls.Calendar> </xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.Panel> </xref:System.Web.UI.WebControls.Table> Ele também funciona para <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList>e <xref:System.Web.UI.WebControls.DataList>se seus `RepeatLayout` é de propriedade `RepeatLayout.Table`, não `RepeatLayout.Flow`.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.RadioButtonList> </xref:System.Web.UI.WebControls.CheckBoxList>       Em geral, apenas controles que processam como um `<table>` marca pode exibir uma cor de plano de fundo em HTML 3.2, enquanto quase qualquer controle pode em HTML 4.0.       Para controles que processam como um `<span>` marca (incluindo <xref:System.Web.UI.WebControls.Label>, todos os controles de validação e controles de lista com seus `RepeatLayout` propriedade definida como `RepeatLayout.Flow`), essa propriedade funcionarão no Microsoft Internet Explorer versão 5 e posterior, mas não no Microsoft Internet Explorer versão 4.</xref:System.Web.UI.WebControls.Label>"
  example:
  - "The following example illustrates how to set the BackColor property of the <xref:System.Web.UI.WebControls.Table> control, which is inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-vb[Classic WebControl.BackColor Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_15_1.aspx)]\n [!code-cs[Classic WebControl.BackColor Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_15_1.aspx)]"
  syntax:
    content: public virtual System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> que representa a cor de plano de fundo do controle. O padrão é <xref href=&quot;System.Drawing.Color&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.WebControl.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.BorderColor
  id: BorderColor
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: BorderColor
  nameWithType: WebControl.BorderColor
  fullName: System.Web.UI.WebControls.WebControl.BorderColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cor da borda do controle da Web."
  remarks: "Use a propriedade BorderColor para especificar a cor da borda do controle do servidor Web. Essa propriedade é definida usando um <xref:System.Drawing.Color>objeto.</xref:System.Drawing.Color>      > [!NOTE] > Propriedade BorderColor a processará apenas para determinados controles. Por exemplo, o <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.Panel>, <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.Calendar>, e <xref:System.Web.UI.WebControls.ValidationSummary>controles processará essa propriedade.</xref:System.Web.UI.WebControls.ValidationSummary> </xref:System.Web.UI.WebControls.Calendar> </xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.Panel> </xref:System.Web.UI.WebControls.Table> Também funcionará para o <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList>, e <xref:System.Web.UI.WebControls.DataList>controla, se seus `RepeatLayout` está definida como `RepeatLayout.Table`, não `RepeatLayout.Flow`.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.RadioButtonList> </xref:System.Web.UI.WebControls.CheckBoxList> No entanto, ela é processada como o `bordercolor` atributo, que não é parte do HTML 3.2 padrão. O `bordercolor` atributo funciona para o Microsoft Internet Explorer versão 3.0 ou posterior, mas não a maioria dos outros navegadores.       Quando a propriedade BorderColor não está definida, o navegador usará a cor de borda padrão. Consulte seu navegador para determinar seu esquema de cores padrão."
  example:
  - "The following example illustrates how to set the BorderColor property of the <xref:System.Web.UI.WebControls.Table> control, which is inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-cs[Classic WebControl.BorderColor Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_211_1.aspx)]\n [!code-vb[Classic WebControl.BorderColor Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_211_1.aspx)]  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_211_2.aspx)]\n [!code-cs[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_211_2.aspx)]  \n[!code-vb[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_211_3.aspx)]\n[!code-cs[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_211_3.aspx)]"
  syntax:
    content: public virtual System.Drawing.Color BorderColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> que representa a cor da borda do controle. O padrão é <xref href=&quot;System.Drawing.Color&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.WebControl.BorderColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.BorderStyle
  id: BorderStyle
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: BorderStyle
  nameWithType: WebControl.BorderStyle
  fullName: System.Web.UI.WebControls.WebControl.BorderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o estilo da borda do controle do servidor Web."
  remarks: "Use a propriedade BorderStyle para especificar o estilo de borda para o controle de servidor Web. Essa propriedade é definida usando um do <xref:System.Web.UI.WebControls.BorderStyle>valores de enumeração.</xref:System.Web.UI.WebControls.BorderStyle> A tabela a seguir lista os valores possíveis.      | Estilo da borda | Descrição |   |------------------|-----------------|   | `NotSet`| O estilo de borda não está definido. |   | `None`| Nenhuma borda |   | `Dotted`| Uma borda de linha pontilhada. |   | `Dashed`| Uma borda de linha tracejada. |   | `Solid`| Uma borda de linha sólida. |   | `Double`| Uma borda de uma linha sólida dupla. |   | `Groove`| Uma borda grooved para uma aparência de borda em baixo relevo. |   | `Ridge`| Uma borda ondulada para uma aparência de borda. |   | `Inset`| Uma borda em baixo relevo para uma aparência de controle em baixo-relevo. |   | `Outset`| Uma borda de início para uma aparência de controle gerado. |      > [!NOTE] > Essa propriedade não será renderizado em navegadores anteriores ao Microsoft Internet Explorer 4 para qualquer controle de servidor Web. Não há nenhum equivalente em HTML 3.2."
  example:
  - "The following example illustrates how to set the BorderStyle property of the <xref:System.Web.UI.WebControls.Table> control, which is inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-cs[Classic WebControl.BorderStyle Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_769_1.aspx)]\n [!code-vb[Classic WebControl.BorderStyle Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_769_1.aspx)]  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_769_2.aspx)]\n [!code-cs[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_769_2.aspx)]  \n[!code-vb[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_769_3.aspx)]\n[!code-cs[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_769_3.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.BorderStyle BorderStyle { get; set; }
    return:
      type: System.Web.UI.WebControls.BorderStyle
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.BorderStyle&quot;> </xref> valores de enumeração. O padrão é <xref uid=&quot;langword_csharp_NotSet&quot; name=&quot;NotSet&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebControl.BorderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.BorderWidth
  id: BorderWidth
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: BorderWidth
  nameWithType: WebControl.BorderWidth
  fullName: System.Web.UI.WebControls.WebControl.BorderWidth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a largura da borda do controle do servidor Web."
  remarks: "Use a propriedade BorderWidth para especificar uma largura de borda para um controle.      > [!NOTE] > Esta propriedade não funciona com todos os controles de servidor Web. Aplica-se somente a controles que são exibidos como uma tabela, como <xref:System.Web.UI.WebControls.Table>e <xref:System.Web.UI.WebControls.DataGrid>.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.Table>       Essa propriedade é definida com um <xref:System.Web.UI.WebControls.Unit>objeto.</xref:System.Web.UI.WebControls.Unit> Se o <xref:System.Web.UI.WebControls.Unit.Value%2A>propriedade o <xref:System.Web.UI.WebControls.Unit>contém um número negativo, uma exceção será lançada.</xref:System.Web.UI.WebControls.Unit> </xref:System.Web.UI.WebControls.Unit.Value%2A>      > [!NOTE] > A largura de borda pode ser expresso apenas em pixels para navegadores anteriores ao Microsoft Internet Explorer versão 5. Todos os tipos de unidade têm suporte no Microsoft Internet Explorer versão 5 e posterior. Consulte o controle específico para obter detalhes."
  example:
  - "The following example illustrates how to set the BorderWidth property of the <xref:System.Web.UI.WebControls.Table> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-cs[Classic WebControl.BorderWidth Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_555_1.aspx)]\n [!code-vb[Classic WebControl.BorderWidth Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_555_1.aspx)]  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_555_2.aspx)]\n [!code-cs[System.Web.UI.WebControl.BorderProperties#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_555_2.aspx)]  \n[!code-vb[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_555_3.aspx)]\n[!code-cs[System.Web.UI.WebControl.BorderProperties#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_555_3.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.Unit BorderWidth { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "Um <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref> que representa a largura da borda de um controle de servidor Web. O valor padrão é <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.WebControl.BorderWidth*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A largura de borda especificado é um valor negativo."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.ControlStyle
  id: ControlStyle
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: ControlStyle
  nameWithType: WebControl.ControlStyle
  fullName: System.Web.UI.WebControls.WebControl.ControlStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o estilo do controle do servidor Web. Esta propriedade é usada principalmente por desenvolvedores de controle."
  remarks: "A propriedade ControlStyle encapsula todas as propriedades da <xref:System.Web.UI.WebControls.WebControl>classe que especificam a aparência do controle, como <xref:System.Web.UI.WebControls.WebControl.BorderColor%2A>e <xref:System.Web.UI.WebControls.WebControl.Font%2A>.</xref:System.Web.UI.WebControls.WebControl.Font%2A> </xref:System.Web.UI.WebControls.WebControl.BorderColor%2A> </xref:System.Web.UI.WebControls.WebControl>"
  syntax:
    content: public System.Web.UI.WebControls.Style ControlStyle { get; }
    return:
      type: System.Web.UI.WebControls.Style
      description: "Um <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> que encapsula as propriedades de aparência do controle do servidor Web."
  overload: System.Web.UI.WebControls.WebControl.ControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.ControlStyleCreated
  id: ControlStyleCreated
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: ControlStyleCreated
  nameWithType: WebControl.ControlStyleCreated
  fullName: System.Web.UI.WebControls.WebControl.ControlStyleCreated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se um <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> objeto foi criado para o <xref:System.Web.UI.WebControls.WebControl.ControlStyle*>propriedade.</xref:System.Web.UI.WebControls.WebControl.ControlStyle*> Essa propriedade é usada principalmente por desenvolvedores de controle."
  syntax:
    content: public bool ControlStyleCreated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> objeto foi criado para o <xref:System.Web.UI.WebControls.WebControl.ControlStyle*>propriedade; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebControl.ControlStyle*>"
  overload: System.Web.UI.WebControls.WebControl.ControlStyleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  id: CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: CopyBaseAttributes(WebControl)
  nameWithType: WebControl.CopyBaseAttributes(WebControl)
  fullName: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(WebControl)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia as propriedades que não é encapsuladas pelo <xref:System.Web.UI.WebControls.WebControl.Style*>objeto de controle do servidor Web especificado para o controle de servidor Web que este método é chamado de.</xref:System.Web.UI.WebControls.WebControl.Style*> Esse método é usado principalmente por desenvolvedores de controle."
  remarks: "O método de CopyBaseAttributes copia o <xref:System.Web.UI.WebControls.WebControl.AccessKey%2A>, <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>, <xref:System.Web.UI.WebControls.WebControl.ToolTip%2A>, <xref:System.Web.UI.WebControls.WebControl.TabIndex%2A>, e <xref:System.Web.UI.WebControls.WebControl.Attributes%2A>as propriedades de controle do servidor Web especificado para o controle de servidor Web que este método é chamado de.</xref:System.Web.UI.WebControls.WebControl.Attributes%2A> </xref:System.Web.UI.WebControls.WebControl.TabIndex%2A> </xref:System.Web.UI.WebControls.WebControl.ToolTip%2A> </xref:System.Web.UI.WebControls.WebControl.Enabled%2A> </xref:System.Web.UI.WebControls.WebControl.AccessKey%2A> Isso é normalmente usado em casos onde um controle de servidor da Web funciona criando novos controles dinamicamente enquanto está usando os controles e renderização. Esse método é útil nessa situação, pois ele copia todas as propriedades do servidor Web não é encapsulado pelo <xref:System.Web.UI.WebControls.Style>objeto, para que possam ser colocados no controle externo de uma marca que está sendo processado.</xref:System.Web.UI.WebControls.Style>"
  syntax:
    content: public void CopyBaseAttributes (System.Web.UI.WebControls.WebControl controlSrc);
    parameters:
    - id: controlSrc
      type: System.Web.UI.WebControls.WebControl
      description: "Um <xref href=&quot;System.Web.UI.WebControls.WebControl&quot;> </xref> que representa o controle de origem com as propriedades a serem copiados para o controle de servidor Web que este método é chamado de."
  overload: System.Web.UI.WebControls.WebControl.CopyBaseAttributes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>controlSrc</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: WebControl.CreateControlStyle()
  fullName: System.Web.UI.WebControls.WebControl.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria o objeto de estilo que é usado internamente pelo <xref href=&quot;System.Web.UI.WebControls.WebControl&quot;> </xref> propriedades relacionadas a classe para implementar todos os estilos. Esse método é usado principalmente por desenvolvedores de controle."
  remarks: "O CreateControlStyle método é usado para criar o objeto de estilo que é usado internamente para implementar todas as propriedades relacionadas de estilo. Classes derivadas podem substituir este método para criar um estilo que é apropriado para a classe. Esse método é usado principalmente por desenvolvedores de controle.       **Observação** os desenvolvedores de controle devem retornar um <xref:System.Web.UI.WebControls.Style>que deriva o <xref:System.Web.UI.WebControls.Style>que retorna o controle base.</xref:System.Web.UI.WebControls.Style> </xref:System.Web.UI.WebControls.Style> Ele não é possível supor que o <xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>é de um tipo específico de estilo, como um controle derivado pode retornar um tipo diferente.</xref:System.Web.UI.WebControls.WebControl.ControlStyle%2A>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "Um <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> que é usado para implementar todas as propriedades relacionadas a estilo do controle."
  overload: System.Web.UI.WebControls.WebControl.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.CssClass
  id: CssClass
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: CssClass
  nameWithType: WebControl.CssClass
  fullName: System.Web.UI.WebControls.WebControl.CssClass
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a classe de folha de estilo em cascata (CSS) processada pelo controle de servidor da Web no cliente."
  remarks: "Use a propriedade CssClass para especificar a classe CSS para renderizar no cliente para o controle de servidor Web. Essa propriedade será renderizado em navegadores para todos os controles. Ele sempre será processado como o atributo de classe, independentemente do navegador.      > [!IMPORTANT] > Neste exemplo tem uma caixa de texto que aceita a entrada do usuário, que é uma possível ameaça à segurança. Por padrão, a páginas da Web ASP.NET validam a entrada do usuário não inclui elementos HTML ou script. Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md).       Por exemplo, suponha que você tem a seguinte declaração de controle de servidor Web: ```   <asp:TextBox id=&quot;TextBox1&quot; ForeColor=&quot;Red&quot; CssClass=&quot;class1&quot; />   ``` HTML a seguir é renderizado no cliente para a declaração anterior de controle de servidor Web: ```   <input type=text class=&quot;class1&quot; style=&quot;ForeColor:red&quot;>   ``` se você usar folhas de estilo em cascata (CSS) para personalizar a aparência de um controle, use estilos internos ou um arquivo separado CSS, mas não ambos. Usando estilos internos e um arquivo separado CSS pode causar resultados inesperados.      > [!NOTE] > Em navegadores que não dão suporte a CSS, definindo a propriedade CssClass não terá efeito."
  example:
  - "The following example illustrates how to use the CssClass property to change the style of a <xref:System.Web.UI.WebControls.HyperLink> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-xml[Classic WebControl.CssClass Example#1](~/add/codesnippet/xml/p-system.web.ui.webcontr_267_1.xml)]\n [!code-vb[Classic WebControl.CssClass Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_267_1.aspx)]\n [!code-cs[Classic WebControl.CssClass Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_267_1.aspx)]"
  syntax:
    content: public virtual string CssClass { get; set; }
    return:
      type: System.String
      description: "A classe CSS renderizada pelo controle de servidor Web no cliente. O padrão é <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.WebControls.WebControl.CssClass*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.DisabledCssClass
  id: DisabledCssClass
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: DisabledCssClass
  nameWithType: WebControl.DisabledCssClass
  fullName: System.Web.UI.WebControls.WebControl.DisabledCssClass
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a classe CSS para aplicar ao elemento HTML renderizado quando o controle está desabilitado."
  remarks: "Essa propriedade pode ser usada para alterar o nome que é renderizado para a propriedade DisabledCssClass de controles da Web individuais. Por padrão, essa propriedade retorna &quot;aspNetDisabled&quot;.       Quando <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>é substituído em uma classe derivada para retornar `false`, o valor da propriedade DisabledCssClass é processado como o valor da `class` atributo do elemento HTML para o controle.</xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> Nesse caso, se houver um valor de <xref:System.Web.UI.WebControls.WebControl.CssClass%2A>propriedade, ambas as classes CSS serão aplicadas ao elemento HTML renderizado.</xref:System.Web.UI.WebControls.WebControl.CssClass%2A> O `class` atributo consistirá o valor da propriedade DisabledCssClass seguido pelo valor da <xref:System.Web.UI.WebControls.WebControl.CssClass%2A>propriedade, separada por um espaço.</xref:System.Web.UI.WebControls.WebControl.CssClass%2A>       Essa propriedade é estática, o que significa que você pode defini-la somente para a <xref:System.Web.UI.WebControls.WebControl>classe.</xref:System.Web.UI.WebControls.WebControl> Qualquer valor que você defina-a como é usado para todos os controles em um aplicativo Web. Não é possível especificar valores diferentes para os controles individuais.       Se você quiser usar um nome de classe diferente do valor padrão de &quot;aspNetDisabled&quot;, você normalmente coloque o código para fazer isso no `Application_Start` método do arquivo global. asax, conforme mostrado no exemplo a seguir:```vb#   Private Sub Application_Start(       ByVal sender As Object, ByVal e As EventArgs)       WebControl.DisabledCssClass = &quot;customDisabledClassName&quot;   End Sub   ```      ```c#   void Application_Start(object sender, EventArgs e)   {       WebControl.DisabledCssClass = &quot;customDisabledClassName&quot;;   }   ```"
  example:
  - "The following example shows rendered HTML for a disabled <xref:System.Web.UI.WebControls.Label> control when the <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> property is `false`, when the DisabledCssClass property has its default value, and when the <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property is empty.  \n  \n `<span id=\"Label1\" class=\"aspNetDisabled\">Test</span>`  \n  \n The following example shows rendered HTML under the same conditions except that the <xref:System.Web.UI.WebControls.WebControl.CssClass%2A> property has the value \"SampleStyle\"`:`  \n  \n `<span id=\"Label1\" class=\"aspNetDisabled SampleStyle\">Test</span>`  \n  \n For more information, see the <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A> property."
  syntax:
    content: public static string DisabledCssClass { get; set; }
    return:
      type: System.String
      description: "A classe CSS que deve ser aplicada ao elemento HTML renderizado quando o controle está desabilitado. O valor padrão é &quot;aspNetDisabled&quot;."
  overload: System.Web.UI.WebControls.WebControl.DisabledCssClass*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Enabled
  id: Enabled
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Enabled
  nameWithType: WebControl.Enabled
  fullName: System.Web.UI.WebControls.WebControl.Enabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o controle de servidor Web está habilitado."
  remarks: "Quando a propriedade Enabled de um controle é definida como `false`, normalmente, o controle aparece esmaecido. Se o controle é um elemento de entrada, o navegador impede que o usuário clicando ou digitando nele. Elementos HTML que são renderizados para um controle de servidor são marcados como desativado, definindo suas `disabled` atributo ou o CSS `class` atributo. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>e <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.</xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A> </xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>       Essa propriedade se propaga para baixo a hierarquia de controle. Se você desabilitar um controle de contêiner, os controles filho dentro do contêiner também são desabilitados. Para obter mais informações, consulte o <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>propriedade.</xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>      > [!NOTE] > Em um controle composto personalizado, esse comportamento de herança não se aplica a controles que ainda não tem criado seu filho controles. Você deve definir o estado habilitado do filho controles quando eles são criados ou substituiem a propriedade Enabled para chamar o <xref:System.Web.UI.Control.EnsureChildControls%2A>método.</xref:System.Web.UI.Control.EnsureChildControls%2A>      > [!NOTE] > Desabilitar um controle impede apenas a interação com o controle de usuário por meio do navegador da interface do usuário. É possível que um usuário crie uma solicitação que envia um postback que é processado pela página, mesmo se os controles na página estão desabilitados. Antes de processar uma solicitação de postback, verifique para certificar-se de que o controle está visível e habilitado.       Nem todos os controles oferecem suporte a essa propriedade. Consulte os controles individuais para obter detalhes.       Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [capas e temas do ASP.NET](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following example illustrates how to enable and disable a <xref:System.Web.UI.WebControls.TextBox> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class, by setting its Enabled property programmatically.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebControl.Enabled Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_515_1.aspx)]\n [!code-cs[Classic WebControl.Enabled Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_515_1.aspx)]"
  syntax:
    content: public virtual bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle estiver habilitado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebControl.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: EnableTheming
  nameWithType: WebControl.EnableTheming
  fullName: System.Web.UI.WebControls.WebControl.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se os temas se aplicam a este controle."
  remarks: "A propriedade EnableTheming indica se os temas estão habilitados para um controle especificado. Quando a propriedade EnableTheming for `true`, o diretório de tema para o aplicativo é procurado capas de controle aplicar. Se nenhuma capa de controle específico existe no diretório do tema, capas não são aplicadas.       Quando a propriedade EnableTheming for `false`, o diretório de tema não é pesquisado e o conteúdo do <xref:System.Web.UI.WebControls.WebControl.SkinID%2A>propriedade não é usada.</xref:System.Web.UI.WebControls.WebControl.SkinID%2A>       Um controle pode substituir o valor de EnableTheming definido por seu controle pai ou o conteúdo da página. Por exemplo, se um controle pai tem a propriedade EnableTheming definida como `false`, você pode aplicar seletivamente os temas para controles filhos que estão contidos dentro do pai, definindo a propriedade EnableTheming para `true` nos controles filho individuais.       Temas podem ser habilitados na página, o contêiner ou o nível de controle. Quando o tema está desabilitado no nível de página ou contêiner, temas estão desabilitados para todos os controles que estão contidos no página ou contêiner."
  syntax:
    content: public override bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>usar temas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebControl.EnableTheming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Font
  id: Font
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Font
  nameWithType: WebControl.Font
  fullName: System.Web.UI.WebControls.WebControl.Font
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém as propriedades de fonte associadas com o controle de servidor Web."
  remarks: "Use a propriedade de fonte para especificar as propriedades de fonte do controle do servidor Web. Essa propriedade inclui subpropriedades que podem ser acessadas declarativamente na forma de `Property-Subproperty` (por exemplo `Font-Bold`) ou por meio de programação na forma de `Property.Subproperty` (por exemplo `Font.Bold`).       Apenas um subpropriedade será renderizado em navegadores antes do Microsoft Internet Explorer versão 4 para todos os controles. Eles são: <xref:System.Web.UI.WebControls.FontInfo.Bold%2A>, <xref:System.Web.UI.WebControls.FontInfo.Italic%2A>, <xref:System.Web.UI.WebControls.FontInfo.Name%2A>, <xref:System.Web.UI.WebControls.FontInfo.Names%2A>, <xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A>, <xref:System.Web.UI.WebControls.FontInfo.Underline%2A>, e <xref:System.Web.UI.WebControls.FontInfo.Size%2A>(mas só chamado tamanhos de fonte, como `Small`, `Smaller`e assim por diante, funcionará).</xref:System.Web.UI.WebControls.FontInfo.Size%2A> </xref:System.Web.UI.WebControls.FontInfo.Underline%2A> </xref:System.Web.UI.WebControls.FontInfo.Strikeout%2A> </xref:System.Web.UI.WebControls.FontInfo.Names%2A> </xref:System.Web.UI.WebControls.FontInfo.Name%2A> </xref:System.Web.UI.WebControls.FontInfo.Italic%2A> </xref:System.Web.UI.WebControls.FontInfo.Bold%2A>      > [!NOTE] > Embora esses subpropriedades renderizam em navegadores antes da versão 4 do Microsoft Internet Explorer, o HTML que é renderizado é diferente de navegadores mais recentes. Em vez de renderização como atributos de estilo, esses subpropriedades são renderizadas como elementos HTML, como `<b>` e `<font>`.       Uma subpropriedade que não será renderizado em navegadores anteriores para todos os controles é <xref:System.Web.UI.WebControls.FontInfo.Overline%2A>.</xref:System.Web.UI.WebControls.FontInfo.Overline%2A>"
  example:
  - "The following example illustrates how to use the Font property to gather font information from a <xref:System.Web.UI.WebControls.Label> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebControl.Font Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_725_1.aspx)]\n [!code-cs[Classic WebControl.Font Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_725_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FontInfo Font { get; }
    return:
      type: System.Web.UI.WebControls.FontInfo
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FontInfo&quot;> </xref> que representa as propriedades de fonte do controle do servidor Web."
  overload: System.Web.UI.WebControls.WebControl.Font*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.ForeColor
  id: ForeColor
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: ForeColor
  nameWithType: WebControl.ForeColor
  fullName: System.Web.UI.WebControls.WebControl.ForeColor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cor de primeiro plano (normalmente, a cor do texto) de controle do servidor Web."
  remarks: "Use a propriedade de cor de primeiro plano para especificar a cor de primeiro plano do controle do servidor Web. Normalmente, a cor de primeiro plano é a cor do texto. Essa propriedade será renderizado em navegadores anteriores ao Microsoft Internet Explorer versão 4 para todos os controles, exceto o <xref:System.Web.UI.WebControls.Image> <xref:System.Web.UI.WebControls.AdRotator> <xref:System.Web.UI.WebControls.HyperLink>e <xref:System.Web.UI.WebControls.LinkButton>.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.AdRotator> </xref:System.Web.UI.WebControls.Image>      > [!NOTE] > Em navegadores anteriores ao Microsoft Internet Explorer versão 4, essa propriedade é processada como `<font>` marcas."
  example:
  - "The following example illustrates how to set the ForeColor property of the <xref:System.Web.UI.WebControls.Table> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-cs[Classic WebControl.ForeColor Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_658_1.aspx)]\n [!code-vb[Classic WebControl.ForeColor Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_658_1.aspx)]"
  syntax:
    content: public virtual System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> que representa a cor de primeiro plano do controle. O padrão é <xref href=&quot;System.Drawing.Color&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebControl.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.HasAttributes
  id: HasAttributes
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: HasAttributes
  nameWithType: WebControl.HasAttributes
  fullName: System.Web.UI.WebControls.WebControl.HasAttributes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o controle tem atributos definida."
  remarks: "A propriedade retorna HasAttributes `true` quando o <xref:System.Web.UI.WebControls.WebControl>instância tem pares de nome/valor do atributo.</xref:System.Web.UI.WebControls.WebControl> Os pares de atributo podem ser definidos na propriedade ou no estado de exibição."
  syntax:
    content: public bool HasAttributes { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle tem atributos definido; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebControl.HasAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Height
  id: Height
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Height
  nameWithType: WebControl.Height
  fullName: System.Web.UI.WebControls.WebControl.Height
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a altura do controle do servidor Web."
  remarks: "Use a propriedade de altura para especificar a altura do controle do servidor Web.      > [!NOTE] > Essa propriedade não será renderizado para todos os controles em navegadores anteriores ao Microsoft Internet Explorer versão 4. Controles que não processam essa propriedade em navegadores anteriores incluem <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>e os controles de validação.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.Label> O <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList>e <xref:System.Web.UI.WebControls.DataList>também não processam essa propriedade em navegadores anteriores quando seus `RepeatLayout` está definida como `RepeatLayout.Flow`.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.RadioButtonList> </xref:System.Web.UI.WebControls.CheckBoxList> Além disso, somente os tipos de unidade de `Pixel` e `Percentage` são suportados em navegadores anteriores.       Como essa propriedade é HTML padrão, controles de servidor Web que mostram como uma tabela, como <xref:System.Web.UI.WebControls.Table>e <xref:System.Web.UI.WebControls.DataGrid>, não dão suporte a essa propriedade em navegadores anteriores ao Microsoft Internet Explorer versão 4.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.Table>      > [!NOTE] > Para definir a altura de propriedade a uma unidade de tipo diferente do padrão de `Pixel`, você deve criar um novo tipo de unidade específica para o tipo de unidade que você deseja. Por exemplo, para definir a propriedade de altura do controle como um valor de porcentagem de 100, você pode fazer o seguinte: >> `myWebControl.Width = Unit.Percentage(100);` >> para obter mais informações sobre os tipos de unidade disponíveis para a propriedade de altura, consulte a <xref:System.Web.UI.WebControls.Unit>classe.</xref:System.Web.UI.WebControls.Unit>"
  example:
  - "The following example illustrates how to declaratively set the Height property of the <xref:System.Web.UI.WebControls.Table> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-cs[Classic WebControl.Height Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_740_1.aspx)]\n [!code-vb[Classic WebControl.Height Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_740_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.Unit Height { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "Um <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref> que representa a altura do controle. O padrão é <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebControl.Height*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A altura foi definida como um valor negativo."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.IsEnabled
  id: IsEnabled
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: IsEnabled
  nameWithType: WebControl.IsEnabled
  fullName: System.Web.UI.WebControls.WebControl.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o controle está habilitado."
  remarks: "Esta é uma propriedade somente leitura. Se você quiser desabilitar um controle, você definir sua <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>propriedade `false`.</xref:System.Web.UI.WebControls.WebControl.Enabled%2A>       Se um controle não está contido por outro controle, o valor da propriedade IsEnabled é sempre o mesmo que o valor da <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>propriedade.</xref:System.Web.UI.WebControls.WebControl.Enabled%2A>       A propriedade IsEnabled tem um valor que é diferente de <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>propriedade se um controle é um filho de outro controle e se todas as circunstâncias a seguir forem verdadeiras:-o valor da <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>é de propriedade ou a propriedade IsEnabled do controle pai `false`.</xref:System.Web.UI.WebControls.WebControl.Enabled%2A> </xref:System.Web.UI.WebControls.WebControl.Enabled%2A>      -A <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>propriedade do controle filho é definida como `true`.</xref:System.Web.UI.WebControls.WebControl.Enabled%2A>       Nessa situação, o controle filho herda o estado desabilitado do controle pai. Retorna a propriedade IsEnabled do controle filho `false` para indicar que o controle é desabilitado, embora o controle filho não foi desabilitado explicitamente, definindo seu <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>propriedade `false`.</xref:System.Web.UI.WebControls.WebControl.Enabled%2A> O controle pai propriamente dito pode ter seu <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>propriedade definida como `true` , mas pode herdar o estado desabilitado de seu pai e assim por diante.</xref:System.Web.UI.WebControls.WebControl.Enabled%2A>       Quando o ASP.NET processa elementos HTML para um controle de servidor, ele marca os elementos como desativado, definindo suas `disabled` atributo ou o CSS `class` atributo. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>e <xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A>.</xref:System.Web.Configuration.PagesSection.ControlRenderingCompatibilityVersion%2A> </xref:System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute%2A>"
  syntax:
    content: protected bool IsEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.WebControls.WebControl&quot;> </xref> objeto estiver habilitada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebControl.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: WebControl.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WebControl.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restaura as informações de estado de exibição de uma solicitação anterior que foi salva com o <xref:System.Web.UI.WebControls.WebControl.SaveViewState*>método.</xref:System.Web.UI.WebControls.WebControl.SaveViewState*>"
  remarks: "Esse método é usado basicamente pela infraestrutura do .NET Framework e não se destina a ser usado diretamente no seu código. No entanto, os desenvolvedores de controle podem substituir este método para especificar como um controle de servidor personalizado restaura o estado de exibição. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md).       O método LoadViewState restaura as informações de estado de exibição que foi salvo durante anterior <xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A>solicitação.</xref:System.Web.UI.WebControls.WebControl.SaveViewState%2A> O <xref:System.Web.UI.WebControls.WebControl>classe substitui a base de <xref:System.Web.UI.Control.LoadViewState%2A>método para tratar o <xref:System.Web.UI.Control.ViewState%2A>, <xref:System.Web.UI.WebControls.WebControl.Style%2A>, e <xref:System.Web.UI.WebControls.WebControl.Attributes%2A>Propriedades.</xref:System.Web.UI.WebControls.WebControl.Attributes%2A> </xref:System.Web.UI.WebControls.WebControl.Style%2A> </xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.Control.LoadViewState%2A> </xref:System.Web.UI.WebControls.WebControl>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um objeto que representa o estado de controle para restaurar."
  overload: System.Web.UI.WebControls.WebControl.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  id: MergeStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: MergeStyle(Style)
  nameWithType: WebControl.MergeStyle(Style)
  fullName: System.Web.UI.WebControls.WebControl.MergeStyle(Style)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cópias de qualquer elemento não vazia do estilo especificado para a Web controle, mas não substituirá os elementos de estilo existentes do controle. Esse método é usado principalmente por desenvolvedores de controle."
  remarks: ''
  example:
  - "The following example demonstrates how to use the MergeStyle method to merge a style with the style of a <xref:System.Web.UI.WebControls.DataGrid> control.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebControlMergeStyle#1](~/add/codesnippet/csharp/e45b1a42-f3d8-4239-ac7e-_1.aspx)]\n [!code-vb[WebControlMergeStyle#1](~/add/codesnippet/visualbasic/e45b1a42-f3d8-4239-ac7e-_1.aspx)]"
  syntax:
    content: public void MergeStyle (System.Web.UI.WebControls.Style s);
    parameters:
    - id: s
      type: System.Web.UI.WebControls.Style
      description: "Um <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> que representa o estilo a ser copiado."
  overload: System.Web.UI.WebControls.WebControl.MergeStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: WebControl.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renderiza o controle para o gravador HTML especificado."
  remarks: "O método de renderização é usado principalmente por desenvolvedores de controle.       O método de renderização envia o controle da Web especificado <xref:System.Web.UI.HtmlTextWriter>instância.</xref:System.Web.UI.HtmlTextWriter> Substitua este método para enviar seu controle de servidor personalizado para o cliente.       O primeiro método de renderização chama o <xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A>método, então o <xref:System.Web.UI.WebControls.WebControl.RenderContents%2A>método e, finalmente, o <xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A>para enviar o controle ao cliente.</xref:System.Web.UI.WebControls.WebControl.RenderEndTag%2A> </xref:System.Web.UI.WebControls.WebControl.RenderContents%2A> </xref:System.Web.UI.WebControls.WebControl.RenderBeginTag%2A>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto que recebe o conteúdo do controle."
  overload: System.Web.UI.WebControls.WebControl.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  id: RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: WebControl.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.RenderBeginTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renderiza o HTML abrindo a marca do controle para o gravador especificado. Esse método é usado principalmente por desenvolvedores de controle."
  remarks: "Isso se torna público para que outros controles podem processar vários controles entre as marcas de abertura e fechamento de um controle de servidor Web."
  syntax:
    content: public virtual void RenderBeginTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída para renderizar HTML conteúdo no cliente."
  overload: System.Web.UI.WebControls.WebControl.RenderBeginTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: WebControl.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renderiza o conteúdo do controle para o gravador especificado. Esse método é usado principalmente por desenvolvedores de controle."
  remarks: "Substitua o método RenderContents para renderizar o conteúdo do controle entre as marcas de início e de término. A implementação padrão desse método processa qualquer filho controles.       Se o controle tem controles filho, você deve chamar o método RenderContents base ou a chamada a <xref:System.Web.UI.Control.RenderChildren%2A>no ponto onde você deseja que os controles filho a ser renderizada para o gravador de texto.</xref:System.Web.UI.Control.RenderChildren%2A>"
  syntax:
    content: protected virtual void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída para renderizar HTML conteúdo no cliente."
  overload: System.Web.UI.WebControls.WebControl.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  id: RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: RenderEndTag(HtmlTextWriter)
  nameWithType: WebControl.RenderEndTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.RenderEndTag(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renderiza o HTML que marca do controle de fechamento para o gravador especificado. Esse método é usado principalmente por desenvolvedores de controle."
  remarks: "Isso se torna público para que outros controles podem processar vários controles entre as marcas de abertura e fechamento de um controle de servidor Web."
  syntax:
    content: public virtual void RenderEndTag (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída para renderizar HTML conteúdo no cliente."
  overload: System.Web.UI.WebControls.WebControl.RenderEndTag*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: WebControl.SaveViewState()
  fullName: System.Web.UI.WebControls.WebControl.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva qualquer estado que foi modificado após o <xref:System.Web.UI.WebControls.Style.TrackViewState*>método foi chamado.</xref:System.Web.UI.WebControls.Style.TrackViewState*>"
  remarks: "O método SaveViewState é usado principalmente por desenvolvedores de controle.       Estado de exibição é os cumulativos valores das propriedades de um controle de servidor. Esses valores são colocados automaticamente na <xref:System.Web.UI.Control.ViewState%2A>propriedade para o controle de servidor, que é uma ocorrência da <xref:System.Web.UI.StateBag>classe.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> O <xref:System.Web.UI.Control.ViewState%2A>o valor da propriedade, em seguida, é mantido em um objeto de cadeia de caracteres depois de salvar o estágio do ciclo de vida para o controle de servidor de estado.</xref:System.Web.UI.Control.ViewState%2A> Para obter mais informações, consulte [visão geral do ciclo de vida de página ASP.NET](~/add/includes/ajax-current-ext-md.md).       Quando o estado de exibição for salvo, esse objeto de cadeia de caracteres é retornado ao cliente como uma variável que é armazenada em uma HTML oculta `input` elemento. Quando você criar controles de servidor personalizado, você pode melhorar a eficiência, substituindo o método SaveViewState e modificando o <xref:System.Web.UI.Control.ViewState%2A>propriedade para o controle de servidor.</xref:System.Web.UI.Control.ViewState%2A> Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Um objeto que contém o estado de exibição atual do controle; Caso contrário, se não houver nenhum estado de exibição associado ao controle <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebControl.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.SkinID
  id: SkinID
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: SkinID
  nameWithType: WebControl.SkinID
  fullName: System.Web.UI.WebControls.WebControl.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a capa para aplicar ao controle."
  remarks: "Capas disponíveis para um controle estão contidas em um ou mais arquivos de capa em um diretório do tema. A propriedade SkinID Especifica qual essas capas para aplicar ao controle. Uma capa é específica para um determinado controle; não é possível compartilhar capa configuração entre os controles de tipos diferentes.       Se você não definir a propriedade SkinID, um controle usa a capa padrão, se um for definido. Por exemplo, se uma capa sem uma ID é definida para um <xref:System.Web.UI.WebControls.Image>de controle, em seguida, aquela aparência se aplica a todos os <xref:System.Web.UI.WebControls.Image>controles que fazem referência explicitamente uma capa por ID e que não estão definidas como desabilitar temas.</xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.WebControls.Image> Se uma capa com uma ID é definida para um <xref:System.Web.UI.WebControls.Image>controle, em seguida, capa aplica-se somente a <xref:System.Web.UI.WebControls.Image>controles cujo SkinID é definido para essa ID.</xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.WebControls.Image>       Se os arquivos de capa em um diretório de tema não contêm uma capa com a SkinID especificada, um <xref:System.ArgumentException>exceção em tempo de execução.</xref:System.ArgumentException>"
  syntax:
    content: public override string SkinID { get; set; }
    return:
      type: System.String
      description: "O nome da capa para aplicar ao controle. O padrão é <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.WebControls.WebControl.SkinID*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A capa especificada na propriedade SkinID não existe no tema."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Style
  id: Style
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Style
  nameWithType: WebControl.Style
  fullName: System.Web.UI.WebControls.WebControl.Style
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma coleção de atributos de texto será renderizado como um atributo de estilo na marca externa do controle do servidor Web."
  remarks: "Use a coleção de estilo para gerenciar os atributos de estilo processados na marca externa do controle do servidor Web. Essa propriedade será renderizado em todos os navegadores para todos os controles.      > [!NOTE] > Navegadores que não oferecem suporte a atributos de estilo ignorará o HTML renderizado.       Quaisquer valores de estilo é definido por meio das propriedades de estilo com rigidez de tipos (por exemplo, `BackColor=&quot;Red&quot;`) substituirá automaticamente um valor correspondente na coleção.       Valores definidos nesta coleção não são refletidos automaticamente pelas propriedades de estilo com rigidez de tipos."
  example:
  - "The following example illustrates how to use the Style property to hide or display a <xref:System.Web.UI.WebControls.Label> control on a page.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebControl.Style Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1246_1.aspx)]\n [!code-cs[Classic WebControl.Style Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1246_1.aspx)]"
  syntax:
    content: public System.Web.UI.CssStyleCollection Style { get; }
    return:
      type: System.Web.UI.CssStyleCollection
      description: "Um <xref href=&quot;System.Web.UI.CssStyleCollection&quot;> </xref> que contém os atributos de estilo HTML para renderizar na marca externa do controle do servidor Web."
  overload: System.Web.UI.WebControls.WebControl.Style*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  id: SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: SupportsDisabledAttribute
  nameWithType: WebControl.SupportsDisabledAttribute
  fullName: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o controle deve definir o <xref uid=&quot;langword_csharp_disabled&quot; name=&quot;disabled&quot; href=&quot;&quot;> </xref> atributo do elemento HTML renderizado para &quot;desativado&quot; quando o controle <xref:System.Web.UI.WebControls.WebControl.IsEnabled*>é de propriedade <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.WebControl.IsEnabled*>"
  remarks: "Em classes derivadas, essa propriedade indica como ASP.NET devem renderizar HTML para um controle quando o controle está desabilitado.      ## Desabilitando o ASP.NET Web controla quando o <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>propriedade de um controle ASP.NET está definida como `false` (ou seja, quando o controle é desabilitado), a intenção é que ASP.NET deve processar o controle na página, mas exibi-lo em um estado desabilitado (esmaecido normalmente).</xref:System.Web.UI.WebControls.WebControl.Enabled%2A> Se um controle pai estiver desabilitado, filhos desse controle também são exibidos como desabilitado. Nesse caso, o controle filho <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>está definida como `false`, mesmo que seu <xref:System.Web.UI.WebControls.WebControl.Enabled%2A>propriedade pode ser definida como `true`.</xref:System.Web.UI.WebControls.WebControl.Enabled%2A> </xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>       No ASP.NET 3.5 e versões anteriores, quando um controle <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>é de propriedade `false`, ASP.NET define o `disabled` atributo como &quot;desabilitado&quot; no elemento HTML que ele renderiza para o controle.</xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> No entanto, o padrão do HTML 4.01 permite que o `disabled` atributo apenas em determinados elementos que são usados para entrada do usuário. Por exemplo, o `disabled` atributo é permitido para `input` elementos, mas não para `span` elementos.       A maioria dos navegadores suportam uma aparência padrão desativado para somente exibição elementos que têm `disabled` atributos. No entanto, para estar em conformidade com padrões HTML, por padrão o ASP.NET 4 omite atributos inválidos.      ## Como a propriedade SupportsDisabledAttribute é usado se a propriedade SupportsDisabledAttribute é `true`, o ASP.NET processa um `disabled` atributo quando o controle está desabilitado. Se essa propriedade for `false`, o ASP.NET processa um `class` atributo quando o controle está desabilitado.       Classes derivadas substituem essa propriedade para retornar `false` se todas as seguintes condições forem verdadeiras:-controle renderiza um elemento HTML que não oferece suporte a `disabled` atributo.      -A <xref:System.Web.UI.Control.RenderingCompatibility%2A>propriedade indica um número de versão do ASP.NET inferior à 4.0.</xref:System.Web.UI.Control.RenderingCompatibility%2A>       A propriedade SupportsDisabledAttribute não necessariamente indica se o elemento HTML que é renderizado para um controle oferece suporte (permite) o `disabled` atributo. Se um controle <xref:System.Web.UI.Control.RenderingCompatibility%2A>propriedade indica um número de versão do ASP.NET inferior à 4.0, o valor da propriedade de SupportsDisabledAttribute do controle pode retornar `true` mesmo se o HTML renderizado não oferece suporte a `disabled` atributo.</xref:System.Web.UI.Control.RenderingCompatibility%2A>      ## Compatibilidade com versões anteriores para controles desabilitado quando você usa o Visual Studio para atualizar um projeto da Web para ASP.NET 4 de uma versão anterior, o Visual Studio define automaticamente o `controlRenderingCompatibilityVersion` atributo no arquivo Web. config (que define o <xref:System.Web.UI.Control.RenderingCompatibility%2A>propriedade) para o número da versão anterior.</xref:System.Web.UI.Control.RenderingCompatibility%2A> Porque a propriedade SupportsDisabledAttribute sempre retorna `true` quando o <xref:System.Web.UI.Control.RenderingCompatibility%2A>é inferior à 4.0, isso faz com que os controles da Web renderizar HTML para controles desabilitados como ocorria na versão anterior.</xref:System.Web.UI.Control.RenderingCompatibility%2A> Se você quiser um site atualizado para renderizar HTML usando o algoritmo introduzido no ASP.NET 4, você pode alterar ou remover o `controlRenderingCompatibilityVersion` atributo. Para obter mais informações, consulte o <xref:System.Web.UI.Control.RenderingCompatibility%2A>propriedade.</xref:System.Web.UI.Control.RenderingCompatibility%2A>      ## Definir um desabilitado aparência por usando CSS se a propriedade SupportsDisabledAttribute de um controle é `false` e o controle é desabilitado, o ASP.NET define o `class` atributo do elemento HTML renderizado para o valor da <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName>propriedade.</xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName> O valor padrão de <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName>propriedade é &quot;aspNetDisabled&quot;.</xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName>       Para fornecer uma aparência desativada para controles desabilitados, você deve definir uma regra de CSS para a classe que é representada pelo valor de <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName>propriedade.</xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A?displayProperty=fullName>       O elemento HTML que é renderizado para um controle pode ter mais de um valor em seu `class` atributo se houver um valor em seu <xref:System.Web.UI.WebControls.WebControl.CssClass%2A>propriedade.</xref:System.Web.UI.WebControls.WebControl.CssClass%2A> Para obter mais informações, consulte o <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>propriedade.</xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A>"
  example:
  - "The following example shows markup for a disabled <xref:System.Web.UI.WebControls.Label> control:  \n  \n `<asp:Label id=\"Label1\" runat=\"server\" Text=\"Test\" Enabled=\"false\"/>`  \n  \n In ASP.NET 3.5 and earlier versions, this markup renders the following HTML:  \n  \n `<span id=\"Label1\" disabled=\"disabled\">Test</span>`  \n  \n In ASP.NET 4, if the value of the <xref:System.Web.UI.Control.RenderingCompatibility%2A> property is 4.0 or greater, and if the <xref:System.Web.UI.WebControls.WebControl.DisabledCssClass%2A> property is set to its default value, the same markup renders the following HTML:  \n  \n `<span id=\"Label1\" class=\"aspNetDisabled\">Test</span>`"
  syntax:
    content: public virtual bool SupportsDisabledAttribute { get; }
    return:
      type: System.Boolean
      description: "Always <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  id: System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)
  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  fullName: System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um atributo do controle da Web com o nome especificado."
  remarks: "O método IAttributeAccessor.GetAttribute é uma implementação de membro de interface explícita. Ele pode ser usado somente quando a instância do <xref:System.Web.UI.WebControls.WebControl>classe é convertida em um <xref:System.Web.UI.IAttributeAccessor>interface.</xref:System.Web.UI.IAttributeAccessor> </xref:System.Web.UI.WebControls.WebControl>"
  syntax:
    content: string IAttributeAccessor.GetAttribute (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do atributo."
    return:
      type: System.String
      description: "O valor do atributo."
  overload: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  id: System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  isEii: true
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  fullName: System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Define um atributo do controle da Web para o nome especificado e o valor."
  remarks: "O método IAttributeAccessor.SetAttribute é uma implementação de membro de interface explícita. Ele pode ser usado somente quando a instância do <xref:System.Web.UI.WebControls.WebControl>classe é convertida em um <xref:System.Web.UI.IAttributeAccessor>interface.</xref:System.Web.UI.IAttributeAccessor> </xref:System.Web.UI.WebControls.WebControl>"
  syntax:
    content: void IAttributeAccessor.SetAttribute (string name, string value);
    parameters:
    - id: name
      type: System.String
      description: "O componente de nome do par de nome/valor do atributo."
    - id: value
      type: System.String
      description: "O componente de valor do par de nome/valor do atributo."
  overload: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.TabIndex
  id: TabIndex
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: TabIndex
  nameWithType: WebControl.TabIndex
  fullName: System.Web.UI.WebControls.WebControl.TabIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o índice de tabulação do controle do servidor Web."
  remarks: "Use a propriedade TabIndex para especificar ou determinar o índice do guia de um controle de servidor Web na página de Web Forms. Quando você pressiona o `Tab` chave, a ordem na qual o servidor Web recebe o foco é determinada pela propriedade TabIndex de cada controle. Quando uma página for carregada inicialmente, o primeiro item que recebe foco quando a `Tab` tecla é pressionada a barra de endereço. Em seguida, os controles na página de Web Forms com guias para em ordem crescente, com base no valor da propriedade TabIndex de cada controle, começando com o valor positivo menor, diferente de zero. Se vários controles compartilharem o mesmo índice do guia, os controles irá receber foco na ordem em que eles são declarados na página de Web Forms. Por fim, controles que têm um índice de tabulação do zero com guias na ordem em que eles são declarados.      > [!NOTE] > Somente controles com um índice de tabulação diferente de zero processará o `tabindex` atributo.       Você pode remover um controle de servidor Web da ordem de tabulação, definindo a propriedade TabIndex como um valor negativo.      > [!NOTE] > Essa propriedade é suportada apenas no Internet Explorer 4 e posterior."
  example:
  - "The following example illustrates how to use the TabIndex property of the <xref:System.Web.UI.WebControls.WebControl> to set the tab order of controls on the page.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic WebControl.TabIndex Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1094_1.aspx)]\n [!code-cs[Classic WebControl.TabIndex Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1094_1.aspx)]"
  syntax:
    content: public virtual short TabIndex { get; set; }
    return:
      type: System.Int16
      description: "O índice de tabulação do controle do servidor Web. O padrão é <xref uid=&quot;langword_csharp_0&quot; name=&quot;0&quot; href=&quot;&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.WebControl.TabIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O índice de tabulação especificada não está entre -32768 e 32767."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: TagKey
  nameWithType: WebControl.TagKey
  fullName: System.Web.UI.WebControls.WebControl.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> valor que corresponde a este controle de servidor Web. Esta propriedade é usada principalmente por desenvolvedores de controle."
  remarks: "Use a propriedade TagKey para determinar o <xref:System.Web.UI.HtmlTextWriterTag>valor que está associado este controle de servidor Web.</xref:System.Web.UI.HtmlTextWriterTag> Esta propriedade é usada principalmente por desenvolvedores de controle."
  syntax:
    content: protected virtual System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "Uma da <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> valores de enumeração."
  overload: System.Web.UI.WebControls.WebControl.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.TagName
  id: TagName
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: TagName
  nameWithType: WebControl.TagName
  fullName: System.Web.UI.WebControls.WebControl.TagName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o nome da marca do controle. Esta propriedade é usada principalmente por desenvolvedores de controle."
  remarks: "Use a propriedade TagName para determinar o nome da marca do controle associado a este controle de servidor Web. Esta propriedade é usada principalmente por desenvolvedores de controle."
  syntax:
    content: protected virtual string TagName { get; }
    return:
      type: System.String
      description: "O nome da marca do controle."
  overload: System.Web.UI.WebControls.WebControl.TagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: ToolTip
  nameWithType: WebControl.ToolTip
  fullName: System.Web.UI.WebControls.WebControl.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto exibido quando o ponteiro do mouse passa sobre o controle de servidor Web."
  remarks: "Use a propriedade de dica de ferramenta para especificar o texto personalizado que é exibido quando o ponteiro do mouse passa sobre o controle de servidor Web.      > [!NOTE] > Essa propriedade é processada para todos os navegadores. No entanto, somente o Microsoft Internet Explorer exibirá essa propriedade como uma dica de ferramenta. Todos os outros navegadores irá ignorar essa propriedade.       O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example illustrates how to set the ToolTip property on the <xref:System.Web.UI.WebControls.Button> control, which is inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n> [!NOTE]\n>  The following code sample uses the single-file code model and may not work correctly if copied directly into a code-behind file. This code sample must be copied into an empty text file that has an .aspx extension. For more information on the Web Forms code model, see [ASP.NET Web Forms Page Code Model](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic WebControl.ToolTip Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1206_1.aspx)]\n [!code-vb[Classic WebControl.ToolTip Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1206_1.aspx)]"
  syntax:
    content: public virtual string ToolTip { get; set; }
    return:
      type: System.String
      description: "O texto exibido quando o ponteiro do mouse passa sobre o controle de servidor Web. O padrão é &lt;xref:System.String?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.WebControl.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: WebControl.TrackViewState()
  fullName: System.Web.UI.WebControls.WebControl.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Faz com que o controle controlar alterações em seu estado de exibição para que eles podem ser armazenados no objeto de <xref:System.Web.UI.Control.ViewState*>propriedade.</xref:System.Web.UI.Control.ViewState*>"
  remarks: "O método TrackViewState é usado principalmente por desenvolvedores de controle.       O TrackViewState marca o ponto de partida no qual começar a rastreamento e salvar as alterações para o estado de exibição para o controle. O método TrackViewState é chamado automaticamente pelo ASP.NET quando um controle de servidor é inicializado."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.WebControl.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebControl.Width
  id: Width
  parent: System.Web.UI.WebControls.WebControl
  langs:
  - csharp
  name: Width
  nameWithType: WebControl.Width
  fullName: System.Web.UI.WebControls.WebControl.Width
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a largura do controle do servidor Web."
  remarks: "Use a propriedade Width para especificar a largura do controle do servidor Web.      > [!NOTE] > Essa propriedade não será renderizado para todos os controles em navegadores anteriores ao Microsoft Internet Explorer versão 4. Controles que não processam essa propriedade em navegadores anteriores incluem <xref:System.Web.UI.WebControls.Label>, <xref:System.Web.UI.WebControls.HyperLink>, <xref:System.Web.UI.WebControls.LinkButton>e os controles de validação.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.HyperLink> </xref:System.Web.UI.WebControls.Label> O <xref:System.Web.UI.WebControls.CheckBoxList>, <xref:System.Web.UI.WebControls.RadioButtonList>e <xref:System.Web.UI.WebControls.DataList>também não processam essa propriedade em navegadores anteriores quando seus `RepeatLayout` está definida como `RepeatLayout.Flow`.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.RadioButtonList> </xref:System.Web.UI.WebControls.CheckBoxList> Além disso, somente os tipos de unidade de `Pixel` e `Percentage` são suportados em navegadores anteriores.       Como essa propriedade é HTML padrão, controles de servidor Web que mostram como uma tabela, como <xref:System.Web.UI.WebControls.Table>e <xref:System.Web.UI.WebControls.DataGrid>, não dão suporte a essa propriedade em navegadores anteriores ao Microsoft Internet Explorer versão 4.</xref:System.Web.UI.WebControls.DataGrid> </xref:System.Web.UI.WebControls.Table>      > [!NOTE] > Para definir a largura da propriedade declarativamente a uma unidade de tipo diferente do padrão de `Pixel`, você deve criar um novo tipo de unidade específica para o tipo de unidade que você deseja. Por exemplo, para definir a propriedade Width do controle como um valor de porcentagem de 100, você pode fazer o seguinte: >> `myWebControl.width = Unit.Percentage(100);` >> para obter mais informações sobre os tipos de unidade disponíveis para a propriedade Width, consulte a <xref:System.Web.UI.WebControls.Unit>classe.</xref:System.Web.UI.WebControls.Unit>"
  example:
  - "The following example illustrates how to declaratively set the Width property of the <xref:System.Web.UI.WebControls.Table> control, inherited from the <xref:System.Web.UI.WebControls.WebControl> base class.  \n  \n [!code-cs[Classic WebControl.Width Example#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_671_1.aspx)]\n [!code-vb[Classic WebControl.Width Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_671_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.Unit Width { get; set; }
    return:
      type: System.Web.UI.WebControls.Unit
      description: "Um <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref> que representa a largura do controle. O padrão é <xref href=&quot;System.Web.UI.WebControls.Unit&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebControl.Width*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A largura do controle do servidor Web foi definida como um valor negativo."
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebControl.#ctor
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: WebControl()
  nameWithType: WebControl.WebControl()
  fullName: System.Web.UI.WebControls.WebControl.WebControl()
- uid: System.Web.UI.WebControls.WebControl.#ctor(System.String)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: WebControl(String)
  nameWithType: WebControl.WebControl(String)
  fullName: System.Web.UI.WebControls.WebControl.WebControl(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebControl.#ctor(System.Web.UI.HtmlTextWriterTag)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: WebControl(HtmlTextWriterTag)
  nameWithType: WebControl.WebControl(HtmlTextWriterTag)
  fullName: System.Web.UI.WebControls.WebControl.WebControl(HtmlTextWriterTag)
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.WebControl.AccessKey
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: AccessKey
  nameWithType: WebControl.AccessKey
  fullName: System.Web.UI.WebControls.WebControl.AccessKey
- uid: System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: WebControl.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ApplyStyle(Style)
  nameWithType: WebControl.ApplyStyle(Style)
  fullName: System.Web.UI.WebControls.WebControl.ApplyStyle(Style)
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.WebControl.Attributes
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Attributes
  nameWithType: WebControl.Attributes
  fullName: System.Web.UI.WebControls.WebControl.Attributes
- uid: System.Web.UI.AttributeCollection
  parent: System.Web.UI
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.Web.UI.AttributeCollection
- uid: System.Web.UI.WebControls.WebControl.BackColor
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BackColor
  nameWithType: WebControl.BackColor
  fullName: System.Web.UI.WebControls.WebControl.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Web.UI.WebControls.WebControl.BorderColor
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderColor
  nameWithType: WebControl.BorderColor
  fullName: System.Web.UI.WebControls.WebControl.BorderColor
- uid: System.Web.UI.WebControls.WebControl.BorderStyle
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderStyle
  nameWithType: WebControl.BorderStyle
  fullName: System.Web.UI.WebControls.WebControl.BorderStyle
- uid: System.Web.UI.WebControls.BorderStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: BorderStyle
  nameWithType: BorderStyle
  fullName: System.Web.UI.WebControls.BorderStyle
- uid: System.Web.UI.WebControls.WebControl.BorderWidth
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderWidth
  nameWithType: WebControl.BorderWidth
  fullName: System.Web.UI.WebControls.WebControl.BorderWidth
- uid: System.Web.UI.WebControls.Unit
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Unit
  nameWithType: Unit
  fullName: System.Web.UI.WebControls.Unit
- uid: System.Web.UI.WebControls.WebControl.ControlStyle
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ControlStyle
  nameWithType: WebControl.ControlStyle
  fullName: System.Web.UI.WebControls.WebControl.ControlStyle
- uid: System.Web.UI.WebControls.WebControl.ControlStyleCreated
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ControlStyleCreated
  nameWithType: WebControl.ControlStyleCreated
  fullName: System.Web.UI.WebControls.WebControl.ControlStyleCreated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CopyBaseAttributes(WebControl)
  nameWithType: WebControl.CopyBaseAttributes(WebControl)
  fullName: System.Web.UI.WebControls.WebControl.CopyBaseAttributes(WebControl)
- uid: System.Web.UI.WebControls.WebControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: WebControl
  nameWithType: WebControl
  fullName: System.Web.UI.WebControls.WebControl
- uid: System.Web.UI.WebControls.WebControl.CreateControlStyle
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CreateControlStyle()
  nameWithType: WebControl.CreateControlStyle()
  fullName: System.Web.UI.WebControls.WebControl.CreateControlStyle()
- uid: System.Web.UI.WebControls.WebControl.CssClass
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CssClass
  nameWithType: WebControl.CssClass
  fullName: System.Web.UI.WebControls.WebControl.CssClass
- uid: System.Web.UI.WebControls.WebControl.DisabledCssClass
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: DisabledCssClass
  nameWithType: WebControl.DisabledCssClass
  fullName: System.Web.UI.WebControls.WebControl.DisabledCssClass
- uid: System.Web.UI.WebControls.WebControl.Enabled
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Enabled
  nameWithType: WebControl.Enabled
  fullName: System.Web.UI.WebControls.WebControl.Enabled
- uid: System.Web.UI.WebControls.WebControl.EnableTheming
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: EnableTheming
  nameWithType: WebControl.EnableTheming
  fullName: System.Web.UI.WebControls.WebControl.EnableTheming
- uid: System.Web.UI.WebControls.WebControl.Font
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Font
  nameWithType: WebControl.Font
  fullName: System.Web.UI.WebControls.WebControl.Font
- uid: System.Web.UI.WebControls.FontInfo
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FontInfo
  nameWithType: FontInfo
  fullName: System.Web.UI.WebControls.FontInfo
- uid: System.Web.UI.WebControls.WebControl.ForeColor
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ForeColor
  nameWithType: WebControl.ForeColor
  fullName: System.Web.UI.WebControls.WebControl.ForeColor
- uid: System.Web.UI.WebControls.WebControl.HasAttributes
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: HasAttributes
  nameWithType: WebControl.HasAttributes
  fullName: System.Web.UI.WebControls.WebControl.HasAttributes
- uid: System.Web.UI.WebControls.WebControl.Height
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Height
  nameWithType: WebControl.Height
  fullName: System.Web.UI.WebControls.WebControl.Height
- uid: System.Web.UI.WebControls.WebControl.IsEnabled
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: IsEnabled
  nameWithType: WebControl.IsEnabled
  fullName: System.Web.UI.WebControls.WebControl.IsEnabled
- uid: System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: WebControl.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.WebControl.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: MergeStyle(Style)
  nameWithType: WebControl.MergeStyle(Style)
  fullName: System.Web.UI.WebControls.WebControl.MergeStyle(Style)
- uid: System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: WebControl.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.Render(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderBeginTag(HtmlTextWriter)
  nameWithType: WebControl.RenderBeginTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.RenderBeginTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: WebControl.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderEndTag(HtmlTextWriter)
  nameWithType: WebControl.RenderEndTag(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.WebControl.RenderEndTag(HtmlTextWriter)
- uid: System.Web.UI.WebControls.WebControl.SaveViewState
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SaveViewState()
  nameWithType: WebControl.SaveViewState()
  fullName: System.Web.UI.WebControls.WebControl.SaveViewState()
- uid: System.Web.UI.WebControls.WebControl.SkinID
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SkinID
  nameWithType: WebControl.SkinID
  fullName: System.Web.UI.WebControls.WebControl.SkinID
- uid: System.Web.UI.WebControls.WebControl.Style
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Style
  nameWithType: WebControl.Style
  fullName: System.Web.UI.WebControls.WebControl.Style
- uid: System.Web.UI.CssStyleCollection
  parent: System.Web.UI
  isExternal: false
  name: CssStyleCollection
  nameWithType: CssStyleCollection
  fullName: System.Web.UI.CssStyleCollection
- uid: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: WebControl.SupportsDisabledAttribute
  fullName: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)
  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  fullName: System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.GetAttribute(String)
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  fullName: System.Web.UI.WebControls.WebControl.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
- uid: System.Web.UI.WebControls.WebControl.TabIndex
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TabIndex
  nameWithType: WebControl.TabIndex
  fullName: System.Web.UI.WebControls.WebControl.TabIndex
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Web.UI.WebControls.WebControl.TagKey
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TagKey
  nameWithType: WebControl.TagKey
  fullName: System.Web.UI.WebControls.WebControl.TagKey
- uid: System.Web.UI.WebControls.WebControl.TagName
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TagName
  nameWithType: WebControl.TagName
  fullName: System.Web.UI.WebControls.WebControl.TagName
- uid: System.Web.UI.WebControls.WebControl.ToolTip
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ToolTip
  nameWithType: WebControl.ToolTip
  fullName: System.Web.UI.WebControls.WebControl.ToolTip
- uid: System.Web.UI.WebControls.WebControl.TrackViewState
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TrackViewState()
  nameWithType: WebControl.TrackViewState()
  fullName: System.Web.UI.WebControls.WebControl.TrackViewState()
- uid: System.Web.UI.WebControls.WebControl.Width
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Width
  nameWithType: WebControl.Width
  fullName: System.Web.UI.WebControls.WebControl.Width
- uid: System.Web.UI.WebControls.WebControl.#ctor*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: WebControl
  nameWithType: WebControl.WebControl
- uid: System.Web.UI.WebControls.WebControl.AccessKey*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: AccessKey
  nameWithType: WebControl.AccessKey
- uid: System.Web.UI.WebControls.WebControl.AddAttributesToRender*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: AddAttributesToRender
  nameWithType: WebControl.AddAttributesToRender
- uid: System.Web.UI.WebControls.WebControl.ApplyStyle*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ApplyStyle
  nameWithType: WebControl.ApplyStyle
- uid: System.Web.UI.WebControls.WebControl.Attributes*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Attributes
  nameWithType: WebControl.Attributes
- uid: System.Web.UI.WebControls.WebControl.BackColor*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BackColor
  nameWithType: WebControl.BackColor
- uid: System.Web.UI.WebControls.WebControl.BorderColor*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderColor
  nameWithType: WebControl.BorderColor
- uid: System.Web.UI.WebControls.WebControl.BorderStyle*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderStyle
  nameWithType: WebControl.BorderStyle
- uid: System.Web.UI.WebControls.WebControl.BorderWidth*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: BorderWidth
  nameWithType: WebControl.BorderWidth
- uid: System.Web.UI.WebControls.WebControl.ControlStyle*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ControlStyle
  nameWithType: WebControl.ControlStyle
- uid: System.Web.UI.WebControls.WebControl.ControlStyleCreated*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ControlStyleCreated
  nameWithType: WebControl.ControlStyleCreated
- uid: System.Web.UI.WebControls.WebControl.CopyBaseAttributes*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CopyBaseAttributes
  nameWithType: WebControl.CopyBaseAttributes
- uid: System.Web.UI.WebControls.WebControl.CreateControlStyle*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CreateControlStyle
  nameWithType: WebControl.CreateControlStyle
- uid: System.Web.UI.WebControls.WebControl.CssClass*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: CssClass
  nameWithType: WebControl.CssClass
- uid: System.Web.UI.WebControls.WebControl.DisabledCssClass*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: DisabledCssClass
  nameWithType: WebControl.DisabledCssClass
- uid: System.Web.UI.WebControls.WebControl.Enabled*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Enabled
  nameWithType: WebControl.Enabled
- uid: System.Web.UI.WebControls.WebControl.EnableTheming*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: EnableTheming
  nameWithType: WebControl.EnableTheming
- uid: System.Web.UI.WebControls.WebControl.Font*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Font
  nameWithType: WebControl.Font
- uid: System.Web.UI.WebControls.WebControl.ForeColor*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ForeColor
  nameWithType: WebControl.ForeColor
- uid: System.Web.UI.WebControls.WebControl.HasAttributes*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: HasAttributes
  nameWithType: WebControl.HasAttributes
- uid: System.Web.UI.WebControls.WebControl.Height*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Height
  nameWithType: WebControl.Height
- uid: System.Web.UI.WebControls.WebControl.IsEnabled*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: IsEnabled
  nameWithType: WebControl.IsEnabled
- uid: System.Web.UI.WebControls.WebControl.LoadViewState*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: LoadViewState
  nameWithType: WebControl.LoadViewState
- uid: System.Web.UI.WebControls.WebControl.MergeStyle*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: MergeStyle
  nameWithType: WebControl.MergeStyle
- uid: System.Web.UI.WebControls.WebControl.Render*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Render
  nameWithType: WebControl.Render
- uid: System.Web.UI.WebControls.WebControl.RenderBeginTag*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderBeginTag
  nameWithType: WebControl.RenderBeginTag
- uid: System.Web.UI.WebControls.WebControl.RenderContents*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderContents
  nameWithType: WebControl.RenderContents
- uid: System.Web.UI.WebControls.WebControl.RenderEndTag*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: RenderEndTag
  nameWithType: WebControl.RenderEndTag
- uid: System.Web.UI.WebControls.WebControl.SaveViewState*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SaveViewState
  nameWithType: WebControl.SaveViewState
- uid: System.Web.UI.WebControls.WebControl.SkinID*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SkinID
  nameWithType: WebControl.SkinID
- uid: System.Web.UI.WebControls.WebControl.Style*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Style
  nameWithType: WebControl.Style
- uid: System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: SupportsDisabledAttribute
  nameWithType: WebControl.SupportsDisabledAttribute
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.GetAttribute
  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.GetAttribute
- uid: System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.SetAttribute
  nameWithType: WebControl.System.Web.UI.IAttributeAccessor.SetAttribute
- uid: System.Web.UI.WebControls.WebControl.TabIndex*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TabIndex
  nameWithType: WebControl.TabIndex
- uid: System.Web.UI.WebControls.WebControl.TagKey*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TagKey
  nameWithType: WebControl.TagKey
- uid: System.Web.UI.WebControls.WebControl.TagName*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TagName
  nameWithType: WebControl.TagName
- uid: System.Web.UI.WebControls.WebControl.ToolTip*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: ToolTip
  nameWithType: WebControl.ToolTip
- uid: System.Web.UI.WebControls.WebControl.TrackViewState*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: TrackViewState
  nameWithType: WebControl.TrackViewState
- uid: System.Web.UI.WebControls.WebControl.Width*
  parent: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: Width
  nameWithType: WebControl.Width
