### YamlMime:ManagedReference
items:
- uid: System.Runtime.Hosting.ApplicationActivator
  id: ApplicationActivator
  children:
  - System.Runtime.Hosting.ApplicationActivator.#ctor
  - System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)
  - System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])
  - System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)
  langs:
  - csharp
  name: ApplicationActivator
  nameWithType: ApplicationActivator
  fullName: System.Runtime.Hosting.ApplicationActivator
  type: Class
  summary: "Fornece a classe base para a ativação de assemblies de manifesto."
  remarks: "Há uma única instância designada da classe ApplicationActivator em cada <xref:System.AppDomain>para que a ativação todas as chamadas são roteadas.</xref:System.AppDomain> O <xref:System.AppDomainManager>atual <xref:System.AppDomain>pode fornecer sua própria ApplicationActivator personalizado para essa finalidade.</xref:System.AppDomain> </xref:System.AppDomainManager> Se não for fornecido um ApplicationActivator personalizado, uma instância padrão do ApplicationActivator é criado.       As etapas a seguir descrevem o comportamento padrão do <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A>implementação do método: 1.</xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A>  Verifica se o <xref:System.ActivationContext>do suplemento para ser ativadas correspondências a <xref:System.ActivationContext>do atual domínio; caso contrário, vai para a etapa 2.</xref:System.ActivationContext> </xref:System.ActivationContext> Caso contrário, o assembly é executado e retorna o resultado encapsulado em um identificador de objeto.      2.  Ativa o suplemento em um novo <xref:System.AppDomain>.</xref:System.AppDomain> As etapas a seguir são aplicadas para inicializar uma nova <xref:System.AppDomain>usando o <xref:System.Runtime.Hosting.ActivationArguments>add-in.</xref:System.Runtime.Hosting.ActivationArguments> </xref:System.AppDomain>          1.  Cria um novo <xref:System.AppDomainSetup>objeto usando um <xref:System.Runtime.Hosting.ActivationArguments>objeto que contém o contexto de ativação para o suplemento.</xref:System.Runtime.Hosting.ActivationArguments> </xref:System.AppDomainSetup>          2.  Chama o <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>método para criar um novo domínio usando o <xref:System.AppDomainSetup>objeto.</xref:System.AppDomainSetup> </xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>          3.  O <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>método chama o <xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName>método para adquirir um <xref:System.Security.Policy.ApplicationTrust>objeto para o suplemento.</xref:System.Security.Policy.ApplicationTrust> </xref:System.Security.HostSecurityManager.DetermineApplicationTrust%2A?displayProperty=fullName> </xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> Se o <xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A>propriedade retorna `true`, o suplemento é executado.</xref:System.Security.Policy.ApplicationTrust.IsApplicationTrustedToRun%2A> Caso contrário, <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>lança um <xref:System.Security.Policy.PolicyException>indicando que não foi possível adquirir as permissões de execução.</xref:System.Security.Policy.PolicyException> </xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>          4.  Se o suplemento é confiável para execução, em seguida, um novo <xref:System.AppDomain>é criado e configurado para o <xref:System.ActivationContext>do add-in, e o suplemento é carregado e executado.</xref:System.ActivationContext> </xref:System.AppDomain>          5.  O resultado da ativação do suplemento é retornado, encapsulado em um identificador de objeto.       Um ativador personalizado pode adaptar a ativação de um suplemento para um determinado conjunto de circunstâncias. Por exemplo, um ativador personalizado foi possível encontrar um existente <xref:System.AppDomain>para ativar esse suplemento em vez de criar um novo domínio de cada vez.</xref:System.AppDomain>       As etapas a seguir descrevem o comportamento de um ApplicationActivator personalizado que ativa um suplemento em existente <xref:System.AppDomain>: 1.</xref:System.AppDomain>  O ativador personalizado localiza um domínio que tenha o mesmo <xref:System.ActivationContext>como o suplemento que está sendo ativado.</xref:System.ActivationContext>      2.  Se o <xref:System.ActivationContext>nunca foi observado antes do processo, o ativador personalizado cria um novo <xref:System.AppDomain>para este <xref:System.ActivationContext>chamando o <xref:System.AppDomain.CreateDomain%2A>método diretamente, ou delegar essa atividade a <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A>na classe base</xref:System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper%2A> </xref:System.AppDomain.CreateDomain%2A> </xref:System.ActivationContext> </xref:System.AppDomain> </xref:System.ActivationContext>      3.  Se houver um domínio existente com o mesmo <xref:System.ActivationContext>, em seguida, o ativador pode delegar a <xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A>chamada de método ApplicationActivator no domínio de destino.</xref:System.Runtime.Hosting.ApplicationActivator.CreateInstance%2A> </xref:System.ActivationContext> Observe que isso seria uma chamada de domínio cruzado para um ApplicationActivator que reside no destino <xref:System.AppDomain>.</xref:System.AppDomain>"
  example:
  - "The following code example shows how to obtain an ApplicationActivator object from the current <xref:System.AppDomain.DomainManager%2A> for a manifest-based application.  \n  \n [!code-vb[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/visualbasic/t-system.runtime.hosting_0_1.vb)]\n [!code-cs[System.Runtime.Hosting.ApplicationActivator#1](~/add/codesnippet/csharp/t-system.runtime.hosting_0_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ApplicationActivator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ApplicationActivator.#ctor
  id: '#ctor'
  parent: System.Runtime.Hosting.ApplicationActivator
  langs:
  - csharp
  name: ApplicationActivator()
  nameWithType: ApplicationActivator.ApplicationActivator()
  fullName: System.Runtime.Hosting.ApplicationActivator.ApplicationActivator()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Hosting.ApplicationActivator&quot;> </xref> classe."
  syntax:
    content: public ApplicationActivator ();
    parameters: []
  overload: System.Runtime.Hosting.ApplicationActivator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)
  id: CreateInstance(System.ActivationContext)
  parent: System.Runtime.Hosting.ApplicationActivator
  langs:
  - csharp
  name: CreateInstance(ActivationContext)
  nameWithType: ApplicationActivator.CreateInstance(ActivationContext)
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Cria uma instância do aplicativo a ser ativado, usando o contexto de ativação especificado."
  remarks: "Este método destina-se a ativação baseada no manifesto de aplicativos."
  syntax:
    content: public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "Um <xref href=&quot;System.ActivationContext&quot;> </xref> que identifica o aplicativo para ativar."
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "Um <xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref> que é um wrapper para o valor de retorno da execução do aplicativo. O valor de retorno deve ser desencapsulamento para acessar o objeto real."
  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])
  id: CreateInstance(System.ActivationContext,System.String[])
  parent: System.Runtime.Hosting.ApplicationActivator
  langs:
  - csharp
  name: CreateInstance(ActivationContext,String[])
  nameWithType: ApplicationActivator.CreateInstance(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Cria uma instância do aplicativo a ser ativado, usando o contexto de ativação especificado e os dados de ativação personalizado."
  remarks: "Este método destina-se a ativação baseada no manifesto de aplicativos. Os dados de ativação consistem em informações como a parte da cadeia de caracteres de consulta de uma URL."
  syntax:
    content: public virtual System.Runtime.Remoting.ObjectHandle CreateInstance (ActivationContext activationContext, string[] activationCustomData);
    parameters:
    - id: activationContext
      type: System.ActivationContext
      description: "Um <xref href=&quot;System.ActivationContext&quot;> </xref> que identifica o aplicativo para ativar."
    - id: activationCustomData
      type: System.String[]
      description: "Dados de ativação personalizado."
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "Um <xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref> que é um wrapper para o valor de retorno da execução do aplicativo. O valor de retorno deve ser desencapsulamento para acessar o objeto real."
  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activationContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)
  id: CreateInstanceHelper(System.AppDomainSetup)
  parent: System.Runtime.Hosting.ApplicationActivator
  langs:
  - csharp
  name: CreateInstanceHelper(AppDomainSetup)
  nameWithType: ApplicationActivator.CreateInstanceHelper(AppDomainSetup)
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(AppDomainSetup)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Hosting
  summary: "Cria uma instância de um aplicativo usando especificado <xref href=&quot;System.AppDomainSetup&quot;> </xref> objeto."
  remarks: "Este método destina-se a ativação baseada no manifesto de aplicativos."
  syntax:
    content: protected static System.Runtime.Remoting.ObjectHandle CreateInstanceHelper (AppDomainSetup adSetup);
    parameters:
    - id: adSetup
      type: System.AppDomainSetup
      description: "Um <xref href=&quot;System.AppDomainSetup&quot;> </xref> do objeto cuja <xref:System.AppDomainSetup.ActivationArguments*>propriedade identifica o aplicativo para ativar.</xref:System.AppDomainSetup.ActivationArguments*>"
    return:
      type: System.Runtime.Remoting.ObjectHandle
      description: "Um <xref href=&quot;System.Runtime.Remoting.ObjectHandle&quot;> </xref> que é um wrapper para o valor de retorno da execução do aplicativo. O valor de retorno deve ser desencapsulamento para acessar o objeto real."
  overload: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.AppDomainSetup.ActivationArguments*> property of <code>adSetup </code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.AppDomainSetup.ActivationArguments*>"
  - type: System.Security.Policy.PolicyException
    commentId: T:System.Security.Policy.PolicyException
    description: "A instância do aplicativo falha ao executar porque as configurações de política no domínio do aplicativo atual não tiver permissão para este aplicativo seja executado."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Security.Policy.PolicyException
  parent: System.Security.Policy
  isExternal: false
  name: PolicyException
  nameWithType: PolicyException
  fullName: System.Security.Policy.PolicyException
- uid: System.Runtime.Hosting.ApplicationActivator.#ctor
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: ApplicationActivator()
  nameWithType: ApplicationActivator.ApplicationActivator()
  fullName: System.Runtime.Hosting.ApplicationActivator.ApplicationActivator()
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext)
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstance(ActivationContext)
  nameWithType: ApplicationActivator.CreateInstance(ActivationContext)
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext)
- uid: System.Runtime.Remoting.ObjectHandle
  parent: System.Runtime.Remoting
  isExternal: false
  name: ObjectHandle
  nameWithType: ObjectHandle
  fullName: System.Runtime.Remoting.ObjectHandle
- uid: System.ActivationContext
  parent: System
  isExternal: false
  name: ActivationContext
  nameWithType: ActivationContext
  fullName: System.ActivationContext
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance(System.ActivationContext,System.String[])
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstance(ActivationContext,String[])
  nameWithType: ApplicationActivator.CreateInstance(ActivationContext,String[])
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstance(ActivationContext,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(System.AppDomainSetup)
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstanceHelper(AppDomainSetup)
  nameWithType: ApplicationActivator.CreateInstanceHelper(AppDomainSetup)
  fullName: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper(AppDomainSetup)
- uid: System.AppDomainSetup
  parent: System
  isExternal: false
  name: AppDomainSetup
  nameWithType: AppDomainSetup
  fullName: System.AppDomainSetup
- uid: System.Runtime.Hosting.ApplicationActivator.#ctor*
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: ApplicationActivator
  nameWithType: ApplicationActivator.ApplicationActivator
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstance*
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstance
  nameWithType: ApplicationActivator.CreateInstance
- uid: System.Runtime.Hosting.ApplicationActivator.CreateInstanceHelper*
  parent: System.Runtime.Hosting.ApplicationActivator
  isExternal: false
  name: CreateInstanceHelper
  nameWithType: ApplicationActivator.CreateInstanceHelper
