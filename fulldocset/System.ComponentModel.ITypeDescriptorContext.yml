### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ITypeDescriptorContext
  id: ITypeDescriptorContext
  children:
  - System.ComponentModel.ITypeDescriptorContext.Container
  - System.ComponentModel.ITypeDescriptorContext.Instance
  - System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  - System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  - System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  langs:
  - csharp
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
  type: Interface
  summary: "Fornece informações contextuais sobre um componente, como seu contêiner e descritor de propriedade."
  remarks: "A interface ITypeDescriptorContext fornece informações contextuais sobre um componente. ITypeDescriptorContext normalmente é usado em tempo de design para fornecer informações sobre um contêiner de tempo de design. Esta interface é geralmente usada na conversão de tipo. Para obter detalhes, consulte <xref:System.ComponentModel.TypeConverter>.</xref:System.ComponentModel.TypeConverter>      > [!NOTE] > Não confie na presença desta interface quando você projeta um conversor de tipo. Se uma interface específica, a propriedade ou o serviço é necessária, mas não está disponível, o conversor de tipo deve retornar `null` em vez de lançar uma exceção. Podem retornar propriedades de interface `null` a qualquer momento, e você deve planejar isso."
  example:
  - "The following code example demonstrates how to use the ITypeDescriptorContext interface to support type conversion.  \n  \n [!code-cpp[InstanceDescriptorSample#1](~/add/codesnippet/cpp/t-system.componentmodel._73_1.cpp)]\n [!code-vb[InstanceDescriptorSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._73_1.vb)]\n [!code-cs[InstanceDescriptorSample#1](~/add/codesnippet/csharp/t-system.componentmodel._73_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface ITypeDescriptorContext : IServiceProvider
  implements:
  - System.IServiceProvider
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.Container
  id: Container
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: Container
  nameWithType: ITypeDescriptorContext.Container
  fullName: System.ComponentModel.ITypeDescriptorContext.Container
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o contêiner que representa este <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> solicitação."
  remarks: "A propriedade recipiente obtém o contêiner lógico do componente associado ao descritor de tipo."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; }
    return:
      type: System.ComponentModel.IContainer
      description: "Um <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> com o conjunto de objetos para este <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhum contêiner ou se o <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref> não usa objetos externos."
  overload: System.ComponentModel.ITypeDescriptorContext.Container*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.Instance
  id: Instance
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
  fullName: System.ComponentModel.ITypeDescriptorContext.Instance
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o objeto que está conectado com esta solicitação de descritor de tipo."
  remarks: "A propriedade de instância obtém o objeto que está invocando o <xref:System.ComponentModel.ITypeDescriptorContext>interface.</xref:System.ComponentModel.ITypeDescriptorContext> Por exemplo, se um conversor de tipo é fornecido um <xref:System.Drawing.Color>que para converter, instância retorna a instância atual do controle que está usando <xref:System.Drawing.Color>.</xref:System.Drawing.Color> </xref:System.Drawing.Color> Posteriormente, você pode consultar o controle para obter mais informações sobre seus serviços e seus <xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>.</xref:System.ComponentModel.ITypeDescriptorContext.Container%2A>"
  syntax:
    content: public object Instance { get; }
    return:
      type: System.Object
      description: "O objeto que chama o método sobre o <xref href=&quot;System.ComponentModel.TypeDescriptor&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhum objeto responsável pela chamada."
  overload: System.ComponentModel.ITypeDescriptorContext.Instance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  id: OnComponentChanged
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: OnComponentChanged()
  nameWithType: ITypeDescriptorContext.OnComponentChanged()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Gera o <xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanged&quot;> </xref> eventos."
  remarks: "Use o método OnComponentChanged para enviar notificação que uma instância de um objeto foi alterado.       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnComponentChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: public void OnComponentChanged ();
    parameters: []
  overload: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  id: OnComponentChanging
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: OnComponentChanging()
  nameWithType: ITypeDescriptorContext.OnComponentChanging()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Gera o <xref href=&quot;System.ComponentModel.Design.IComponentChangeService.ComponentChanging&quot;> </xref> eventos."
  remarks: "Use o método OnComponentChanging para enviar a notificação de que uma instância de um objeto está prestes a ser alterado. Esse método também retorna um valor que indica se este objeto pode ser alterado. Quando `false` é retornado, não altere o objeto.       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnComponentChanging também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: public bool OnComponentChanging ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esse objeto pode ser alterado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  id: PropertyDescriptor
  parent: System.ComponentModel.ITypeDescriptorContext
  langs:
  - csharp
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
  fullName: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém o <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> que é associado ao item de contexto fornecido."
  syntax:
    content: public System.ComponentModel.PropertyDescriptor PropertyDescriptor { get; }
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "O <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> que descreve o contexto determinado item; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhum <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> responsável pela chamada."
  overload: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ITypeDescriptorContext.Container
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Container
  nameWithType: ITypeDescriptorContext.Container
  fullName: System.ComponentModel.ITypeDescriptorContext.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.ITypeDescriptorContext.Instance
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
  fullName: System.ComponentModel.ITypeDescriptorContext.Instance
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanged()
  nameWithType: ITypeDescriptorContext.OnComponentChanged()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged()
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanging()
  nameWithType: ITypeDescriptorContext.OnComponentChanging()
  fullName: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
  fullName: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.ITypeDescriptorContext.Container*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Container
  nameWithType: ITypeDescriptorContext.Container
- uid: System.ComponentModel.ITypeDescriptorContext.Instance*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: Instance
  nameWithType: ITypeDescriptorContext.Instance
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanged*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanged
  nameWithType: ITypeDescriptorContext.OnComponentChanged
- uid: System.ComponentModel.ITypeDescriptorContext.OnComponentChanging*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: OnComponentChanging
  nameWithType: ITypeDescriptorContext.OnComponentChanging
- uid: System.ComponentModel.ITypeDescriptorContext.PropertyDescriptor*
  parent: System.ComponentModel.ITypeDescriptorContext
  isExternal: false
  name: PropertyDescriptor
  nameWithType: ITypeDescriptorContext.PropertyDescriptor
