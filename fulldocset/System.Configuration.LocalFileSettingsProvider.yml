### YamlMime:ManagedReference
items:
- uid: System.Configuration.LocalFileSettingsProvider
  id: LocalFileSettingsProvider
  children:
  - System.Configuration.LocalFileSettingsProvider.#ctor
  - System.Configuration.LocalFileSettingsProvider.ApplicationName
  - System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  - System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  - System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  - System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  - System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  langs:
  - csharp
  name: LocalFileSettingsProvider
  nameWithType: LocalFileSettingsProvider
  fullName: System.Configuration.LocalFileSettingsProvider
  type: Class
  summary: "Fornece a persistência para classes de configurações do aplicativo."
  remarks: "Provedores de configuração definem um mecanismo para armazenar dados de configuração usados na arquitetura de configurações do aplicativo. O [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] contém um provedor de configurações padrão único, LocalFileSettingsProvider, que armazena dados de configuração para o sistema de arquivos local. Uma propriedade de configurações do aplicativo ou grupo de propriedades associadas a um provedor de configurações específicas com o uso de <xref:System.Configuration.SettingsProviderAttribute>.</xref:System.Configuration.SettingsProviderAttribute>       Normalmente, o programa cliente não explicitamente acessar essa classe. em vez disso, a arquitetura de configurações do aplicativo chama automaticamente o provedor de configurações apropriadas quando seus serviços são necessários. Por exemplo, muitos dos membros de <xref:System.Configuration.ApplicationSettingsBase>Delegar seu trabalho para o provedor de configurações associadas.</xref:System.Configuration.ApplicationSettingsBase>       LocalFileSettingsProvider persiste configurações nos arquivos de configuração com a extensão `.config`. O conteúdo dos arquivos de configuração é estruturado como documentos XML. Dependendo se a configuração tem seu escopo definida no nível do aplicativo ou no nível de usuário, os dados de configuração são armazenados como elementos dentro de um `<applicationSettings>` ou um `<userSettings>` seção grupo, respectivamente. Cada um desses grupos de seção é representado por uma <xref:System.Configuration.AppSettingsSection>ou <xref:System.Configuration.ClientSettingsSection>, respectivamente.</xref:System.Configuration.ClientSettingsSection> </xref:System.Configuration.AppSettingsSection> Cada objeto de seção é de propriedade e administrado por um manipulador de seção de configuração, que é um objeto do tipo <xref:System.Configuration.IConfigurationSectionHandler>.</xref:System.Configuration.IConfigurationSectionHandler>       Configurações de escopo do aplicativo e as configurações do escopo do usuário são armazenadas em um arquivo chamado `application.exe.config`, que é criado no mesmo diretório que o arquivo executável. Definições de configuração do aplicativo são somente leitura. Dados específicos do usuário são armazenados em um arquivo chamado `user.config`, armazenado na pasta base do usuário. Se os perfis móveis estão habilitados, podem existir duas versões do arquivo de configuração de usuário. Nesse caso, as entradas na versão móvel prevalecerão sobre as entradas duplicadas no arquivo de configuração de usuário local.       Para obter mais informações sobre configurações de aplicativo, consulte [configurações de aplicativo para o Windows Forms](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class LocalFileSettingsProvider : System.Configuration.SettingsProvider, System.Configuration.IApplicationSettingsProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Configuration.SettingsProvider
  implements:
  - System.Configuration.IApplicationSettingsProvider
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: LocalFileSettingsProvider()
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider()
  fullName: System.Configuration.LocalFileSettingsProvider.LocalFileSettingsProvider()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.LocalFileSettingsProvider&quot;> </xref> classe."
  remarks: "O construtor padrão define a <xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A>propriedade <xref:System.String.Empty>.</xref:System.String.Empty> </xref:System.Configuration.LocalFileSettingsProvider.ApplicationName%2A>"
  syntax:
    content: public LocalFileSettingsProvider ();
    parameters: []
  overload: System.Configuration.LocalFileSettingsProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName
  id: ApplicationName
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
  fullName: System.Configuration.LocalFileSettingsProvider.ApplicationName
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define o nome do aplicativo em execução no momento."
  remarks: "ApplicationName e <xref:System.Configuration.Provider.ProviderBase.Name%2A>Propriedades ajudam para resolver a ambiguidade, da mesma forma, as propriedades de configuração nomeado em diferentes aplicativos.</xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public override string ApplicationName { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o nome para exibição do aplicativo."
  overload: System.Configuration.LocalFileSettingsProvider.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  id: GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Retorna o valor da propriedade nomeada configurações para a versão anterior do mesmo aplicativo."
  remarks: "O método GetPreviousVersion geralmente é usado em conjunto com o <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>método ao migrar as configurações do aplicativo durante a instalação de uma nova versão de um aplicativo.</xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A> Para obter mais informações, consulte o <xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>método.</xref:System.Configuration.LocalFileSettingsProvider.Upgrade%2A>"
  syntax:
    content: public System.Configuration.SettingsPropertyValue GetPreviousVersion (System.Configuration.SettingsContext context, System.Configuration.SettingsProperty property);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Um <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> que descreve onde a propriedade de configurações do aplicativo é usada."
    - id: property
      type: System.Configuration.SettingsProperty
      description: "O <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> cujo valor será retornado."
    return:
      type: System.Configuration.SettingsPropertyValue
      description: "Um <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> que representa a configuração de aplicativo encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Retorna a coleção de definir valores de propriedade para o grupo de propriedade de instância e configurações do aplicativo especificado."
  remarks: "O método GetPropertyValues também gerencia o tipo de configurações de aplicativo especial <xref:System.Configuration.SpecialSetting>.</xref:System.Configuration.SpecialSetting> Cadeias de Conexão são armazenadas em uma seção especial do arquivo de configuração, delimitado pelo elemento `<connectionstrings>`.      > [!CAUTION] > <xref:System.Configuration.LocalFileSettingsProvider>não usa criptografia para manter as configurações.</xref:System.Configuration.LocalFileSettingsProvider> Portanto, não armazene senhas de texto sem formatação ou outras informações confidenciais usando este provedor sem tomar precauções adicionais, como a criptografia separadamente as informações no arquivo de configuração. Para obter mais informações, consulte [Criptografando informações de configuração usando configuração protegida](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override System.Configuration.SettingsPropertyValueCollection GetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Um <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> que descreve o uso do aplicativo atual."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "Um <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> que contém o grupo de propriedade de configurações cujos valores devem ser recuperados."
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Um <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> que contém os valores para o grupo de propriedade de configurações especificadas."
  overload: System.Configuration.LocalFileSettingsProvider.GetPropertyValues*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Foi encontrada uma configuração no escopo do usuário, mas a configuração atual oferece suporte apenas a configurações no escopo do aplicativo."
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa o provedor."
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection values);
    parameters:
    - id: name
      type: System.String
      description: "O nome amigável do provedor."
    - id: values
      type: System.Collections.Specialized.NameValueCollection
      description: "Uma coleção dos pares de nome/valor que representa os atributos específicos do provedor especificados na configuração para esse provedor."
  overload: System.Configuration.LocalFileSettingsProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  id: Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Reset(SettingsContext)
  nameWithType: LocalFileSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.LocalFileSettingsProvider.Reset(SettingsContext)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Redefine todas as propriedades de configurações do aplicativo associadas com o aplicativo especificado com seus valores padrão."
  remarks: "O método Reset restaura os valores armazenados do grupo de configurações do aplicativo especificado. A ação de reinicialização depende do escopo da propriedade de configurações do aplicativo:-configurações no escopo do aplicativo não são afetadas.      -Configurações no escopo do usuário são redefinidas para os valores padrão que são armazenados como entradas de somente leitura no arquivo de configuração do aplicativo, `application.exe.config`. Se os perfis móveis estão sendo usados, quaisquer valores de configurações de aplicativo no perfil móvel prevalecerão sobre duplicações encontradas no perfil local.       Observe que se perfis móveis são usados, pode haver duas `user.config` arquivos, uma para as configurações do local e outra para o perfil móvel."
  syntax:
    content: public void Reset (System.Configuration.SettingsContext context);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Um <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> que descreve o uso do aplicativo atual."
  overload: System.Configuration.LocalFileSettingsProvider.Reset*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Foi encontrada uma configuração no escopo do usuário, mas a configuração atual oferece suporte apenas a configurações no escopo do aplicativo."
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  id: SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Define os valores do grupo de configurações de propriedade especificado."
  remarks: "Uma classe de invólucro de configurações, derivada de <xref:System.Configuration.ApplicationSettingsBase>, contém o <xref:System.Configuration.ApplicationSettingsBase.Save%2A>método, que é chamado para manter os valores de todas as suas propriedades de configurações.</xref:System.Configuration.ApplicationSettingsBase.Save%2A> </xref:System.Configuration.ApplicationSettingsBase> Esse método enumera por todas as configurações de provedores com suas propriedades de configurações e chama o <xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>método para cada <xref:System.Configuration.SettingsProvider>para executar a operação de serialização real.</xref:System.Configuration.SettingsProvider> </xref:System.Configuration.SettingsProvider.SetPropertyValues%2A>       SetPropertyValues serializa individualmente cada propriedade de configurações do aplicativo no escopo do usuário para seu aplicativo correspondente configuração no respectivo `user.config` arquivo de configuração.       Por padrão, o método SetPropertyValues usa a seguinte sequência lógica para determinar o esquema de serialização, dependendo do tipo da propriedade configurações: 1.  Se o tipo tem um tipo de objeto <xref:System.ComponentModel.TypeConverter>com um <xref:System.ComponentModel.TypeConverter.ConvertToString%2A>implementação do método, essa conversão é usada.</xref:System.ComponentModel.TypeConverter.ConvertToString%2A> </xref:System.ComponentModel.TypeConverter>      2.  Serialização de XML é usada.       No entanto, você pode especificar um mecanismo preferencial de serialização usando <xref:System.Configuration.SettingsSerializeAsAttribute>.</xref:System.Configuration.SettingsSerializeAsAttribute> <xref:System.Configuration.LocalFileSettingsProvider>não oferece suporte a serialização binária em [!INCLUDE[vsprvslong](~/add/includes/ajax-current-ext-md.md)].</xref:System.Configuration.LocalFileSettingsProvider>       Se uma propriedade de configurações no escopo do usuário é alterada para seu valor padrão explicitamente, o provedor de configurações de arquivo local removerá a entrada para a configuração associada do arquivo de configuração de usuário. O próximo acesso de leitura para essa propriedade simplesmente usará o valor padrão.      > [!CAUTION] > <xref:System.Configuration.LocalFileSettingsProvider>não usa criptografia para manter as configurações.</xref:System.Configuration.LocalFileSettingsProvider> Portanto, não armazene senhas de texto sem formatação ou outras informações confidenciais usando este provedor sem tomar precauções adicionais, como a criptografia separadamente as informações no arquivo de configuração. Para obter mais informações, consulte [Criptografando informações de configuração usando configuração protegida](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public override void SetPropertyValues (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyValueCollection values);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Um <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> que descreve o uso do aplicativo atual."
    - id: values
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Um <xref href=&quot;System.Configuration.SettingsPropertyValueCollection&quot;> </xref> que representa o grupo de configurações de propriedade para definir."
  overload: System.Configuration.LocalFileSettingsProvider.SetPropertyValues*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Foi encontrada uma configuração no escopo do usuário, mas a configuração atual oferece suporte apenas a configurações no escopo do aplicativo.       - ou - houve uma falha geral ao salvar as configurações para o arquivo de configuração."
  platform:
  - net462
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  id: Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  langs:
  - csharp
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Tentativa de migrar configurações de escopo do usuário anteriores de uma versão anterior do mesmo aplicativo."
  remarks: "<xref:System.Configuration.LocalFileSettingsProvider>migra as configurações locais e móveis em operações separadas.</xref:System.Configuration.LocalFileSettingsProvider>       O método de atualização é suprimido para cada configuração de aplicativo que tem o <xref:System.Configuration.NoSettingsVersionUpgradeAttribute>aplicada a ele, ou para a classe de invólucro configurações inteira, derivada de <xref:System.Configuration.ApplicationSettingsBase>.</xref:System.Configuration.ApplicationSettingsBase> </xref:System.Configuration.NoSettingsVersionUpgradeAttribute>       Dessa forma, este método é chamado depende do tipo de aplicativo que está sendo atualizado:-cada versão de um [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicativo está armazenado em seu próprio diretório de instalação isolado. Depois de uma nova versão de um [!INCLUDE[ndptecclick](~/add/includes/ndptecclick-md.md)] aplicativo está instalado e quando a nova versão é executada pela primeira vez, a lógica interna automaticamente chamará atualização para migrar todas as configurações de aplicativo comuns para a nova versão. Para obter mais informações, consulte [ClickOnce e configurações de aplicativo](~/add/includes/ajax-current-ext-md.md).      -Padrão do Windows Forms e aplicativos de console manualmente devem chamar atualização, pois não há uma maneira geral, automática para determinar quando tal aplicativo é executado pela primeira vez. As duas maneiras de fazer isso são do programa de instalação ou usando do próprio aplicativo, usando uma propriedade persistente, geralmente chamado de algo como `IsFirstRun`.       Observe que para a versão mais recente migrar as configurações do aplicativo, ele deve ser capaz de carregar e ler a versão mais antiga de configurações do aplicativo também. Portanto, ele deve conter classes wrapper compatíveis com versões anteriores e nova do aplicativo."
  syntax:
    content: public void Upgrade (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "Um <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> que descreve o uso do aplicativo atual."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "Um <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> que contém o grupo de propriedade de configurações cujos valores devem ser recuperados."
  overload: System.Configuration.LocalFileSettingsProvider.Upgrade*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "Foi encontrada uma configuração no escopo do usuário, mas a configuração atual oferece suporte apenas a configurações no escopo do aplicativo.       - ou - a versão anterior do arquivo de configuração não pôde ser acessada."
  platform:
  - net462
references:
- uid: System.Configuration.SettingsProvider
  isExternal: false
  name: System.Configuration.SettingsProvider
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Configuration.LocalFileSettingsProvider.#ctor
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: LocalFileSettingsProvider()
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider()
  fullName: System.Configuration.LocalFileSettingsProvider.LocalFileSettingsProvider()
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
  fullName: System.Configuration.LocalFileSettingsProvider.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(System.Configuration.SettingsContext,System.Configuration.SettingsProperty)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPreviousVersion(SettingsContext,SettingsProperty)
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion(SettingsContext,SettingsProperty)
- uid: System.Configuration.SettingsPropertyValue
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.GetPropertyValues(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.LocalFileSettingsProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: LocalFileSettingsProvider.Initialize(String,NameValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Initialize(String,NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Configuration.LocalFileSettingsProvider.Reset(System.Configuration.SettingsContext)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Reset(SettingsContext)
  nameWithType: LocalFileSettingsProvider.Reset(SettingsContext)
  fullName: System.Configuration.LocalFileSettingsProvider.Reset(SettingsContext)
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyValueCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  nameWithType: LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.SetPropertyValues(SettingsContext,SettingsPropertyValueCollection)
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection)
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Upgrade(SettingsContext,SettingsPropertyCollection)
  nameWithType: LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
  fullName: System.Configuration.LocalFileSettingsProvider.Upgrade(SettingsContext,SettingsPropertyCollection)
- uid: System.Configuration.LocalFileSettingsProvider.#ctor*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: LocalFileSettingsProvider
  nameWithType: LocalFileSettingsProvider.LocalFileSettingsProvider
- uid: System.Configuration.LocalFileSettingsProvider.ApplicationName*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: ApplicationName
  nameWithType: LocalFileSettingsProvider.ApplicationName
- uid: System.Configuration.LocalFileSettingsProvider.GetPreviousVersion*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPreviousVersion
  nameWithType: LocalFileSettingsProvider.GetPreviousVersion
- uid: System.Configuration.LocalFileSettingsProvider.GetPropertyValues*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: GetPropertyValues
  nameWithType: LocalFileSettingsProvider.GetPropertyValues
- uid: System.Configuration.LocalFileSettingsProvider.Initialize*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Initialize
  nameWithType: LocalFileSettingsProvider.Initialize
- uid: System.Configuration.LocalFileSettingsProvider.Reset*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Reset
  nameWithType: LocalFileSettingsProvider.Reset
- uid: System.Configuration.LocalFileSettingsProvider.SetPropertyValues*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: SetPropertyValues
  nameWithType: LocalFileSettingsProvider.SetPropertyValues
- uid: System.Configuration.LocalFileSettingsProvider.Upgrade*
  parent: System.Configuration.LocalFileSettingsProvider
  isExternal: false
  name: Upgrade
  nameWithType: LocalFileSettingsProvider.Upgrade
