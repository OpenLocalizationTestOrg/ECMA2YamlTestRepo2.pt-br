### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Execution.BuildSubmission
  id: BuildSubmission
  children:
  - Microsoft.Build.Execution.BuildSubmission.AsyncContext
  - Microsoft.Build.Execution.BuildSubmission.BuildManager
  - Microsoft.Build.Execution.BuildSubmission.BuildResult
  - Microsoft.Build.Execution.BuildSubmission.Execute
  - Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)
  - Microsoft.Build.Execution.BuildSubmission.IsCompleted
  - Microsoft.Build.Execution.BuildSubmission.SubmissionId
  - Microsoft.Build.Execution.BuildSubmission.WaitHandle
  langs:
  - csharp
  name: BuildSubmission
  nameWithType: BuildSubmission
  fullName: Microsoft.Build.Execution.BuildSubmission
  type: Class
  summary: "Representa uma solicitação de compilação que foi enviada para o Gerenciador de compilação para processamento. Os métodos dessa classe podem ser usados para executar solicitações de compilação síncronas ou assíncronas e fornecer acesso aos resultados após a conclusão."
  remarks: "Essa classe é thread-safe."
  syntax:
    content: public class BuildSubmission
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.AsyncContext
  id: AsyncContext
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: AsyncContext
  nameWithType: BuildSubmission.AsyncContext
  fullName: Microsoft.Build.Execution.BuildSubmission.AsyncContext
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém ou define o contexto assíncrono fornecido para <xref:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync*>, se houver.</xref:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync*>"
  syntax:
    content: public object AsyncContext { get; }
    return:
      type: System.Object
      description: "Retorna o contexto assíncrono fornecido para <xref:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync*>.</xref:Microsoft.Build.Execution.BuildSubmission.ExecuteAsync*> Retorna null se nenhum contexto for fornecido."
  overload: Microsoft.Build.Execution.BuildSubmission.AsyncContext*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.BuildManager
  id: BuildManager
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: BuildManager
  nameWithType: BuildSubmission.BuildManager
  fullName: Microsoft.Build.Execution.BuildSubmission.BuildManager
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém ou define o Gerenciador de compilação, que o envio de compilação está associado."
  syntax:
    content: public Microsoft.Build.Execution.BuildManager BuildManager { get; }
    return:
      type: Microsoft.Build.Execution.BuildManager
      description: "Retorna o Gerenciador de compilação, que o envio de compilação está associado."
  overload: Microsoft.Build.Execution.BuildSubmission.BuildManager*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.BuildResult
  id: BuildResult
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: BuildResult
  nameWithType: BuildSubmission.BuildResult
  fullName: Microsoft.Build.Execution.BuildSubmission.BuildResult
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém ou define o resultado da compilação."
  remarks: "O resultado não é válido até <xref:Microsoft.Build.Execution.BuildSubmission.WaitHandle%2A>é sinalizado.</xref:Microsoft.Build.Execution.BuildSubmission.WaitHandle%2A>"
  syntax:
    content: public Microsoft.Build.Execution.BuildResult BuildResult { get; set; }
    return:
      type: Microsoft.Build.Execution.BuildResult
      description: "Retorna o resultado da compilação."
  overload: Microsoft.Build.Execution.BuildSubmission.BuildResult*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.Execute
  id: Execute
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: Execute()
  nameWithType: BuildSubmission.Execute()
  fullName: Microsoft.Build.Execution.BuildSubmission.Execute()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Inicia uma solicitação de compilação de forma síncrona e aguarda até que os resultados estão disponíveis."
  syntax:
    content: public Microsoft.Build.Execution.BuildResult Execute ();
    parameters: []
    return:
      type: Microsoft.Build.Execution.BuildResult
      description: "Retorna a solicitação de compilação."
  overload: Microsoft.Build.Execution.BuildSubmission.Execute*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A solicitação já foi iniciada ou já foi concluída."
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)
  id: ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: ExecuteAsync(BuildSubmissionCompleteCallback,Object)
  nameWithType: BuildSubmission.ExecuteAsync(BuildSubmissionCompleteCallback,Object)
  fullName: Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(BuildSubmissionCompleteCallback,Object)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Inicia uma solicitação de compilação e de forma assíncrona dentro do contexto especificado. Retorna o controle ao chamador."
  syntax:
    content: public void ExecuteAsync (Microsoft.Build.Execution.BuildSubmissionCompleteCallback callback, object context);
    parameters:
    - id: callback
      type: Microsoft.Build.Execution.BuildSubmissionCompleteCallback
      description: "O método de retorno de chamada para chamar quando o envio de compilação for concluído."
    - id: context
      type: System.Object
      description: "O contexto no qual ocorre o envio de compilação."
  overload: Microsoft.Build.Execution.BuildSubmission.ExecuteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A solicitação já foi iniciada ou já foi concluída."
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.IsCompleted
  id: IsCompleted
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: IsCompleted
  nameWithType: BuildSubmission.IsCompleted
  fullName: Microsoft.Build.Execution.BuildSubmission.IsCompleted
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Determina se o envio de compilação for concluído."
  syntax:
    content: public bool IsCompleted { get; }
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se o envio de compilação for concluído; FALSO caso contrário."
  overload: Microsoft.Build.Execution.BuildSubmission.IsCompleted*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.SubmissionId
  id: SubmissionId
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: SubmissionId
  nameWithType: BuildSubmission.SubmissionId
  fullName: Microsoft.Build.Execution.BuildSubmission.SubmissionId
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém ou define uma ID que identifica exclusivamente o envio de compilação."
  remarks: "Essa ID é usada para distinguir o envio de compilação de outros envios de compilação dentro do mesmo build."
  syntax:
    content: public int SubmissionId { get; }
    return:
      type: System.Int32
      description: "Retorna uma ID que identifica exclusivamente o envio de compilação."
  overload: Microsoft.Build.Execution.BuildSubmission.SubmissionId*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.BuildSubmission.WaitHandle
  id: WaitHandle
  parent: Microsoft.Build.Execution.BuildSubmission
  langs:
  - csharp
  name: WaitHandle
  nameWithType: BuildSubmission.WaitHandle
  fullName: Microsoft.Build.Execution.BuildSubmission.WaitHandle
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém um <xref:System.Threading.WaitHandle>objeto que será exibido quando a compilação for concluída.</xref:System.Threading.WaitHandle>"
  syntax:
    content: public System.Threading.WaitHandle WaitHandle { get; }
    return:
      type: System.Threading.WaitHandle
      description: "Retorna null até <> </> *> ou <> </> *> retorna, em seguida, retorna o objeto WaitHandle."
  overload: Microsoft.Build.Execution.BuildSubmission.WaitHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: Microsoft.Build.Execution.BuildSubmission.AsyncContext
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: AsyncContext
  nameWithType: BuildSubmission.AsyncContext
  fullName: Microsoft.Build.Execution.BuildSubmission.AsyncContext
- uid: Microsoft.Build.Execution.BuildSubmission.BuildManager
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: BuildManager
  nameWithType: BuildSubmission.BuildManager
  fullName: Microsoft.Build.Execution.BuildSubmission.BuildManager
- uid: Microsoft.Build.Execution.BuildManager
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildManager
  nameWithType: BuildManager
  fullName: Microsoft.Build.Execution.BuildManager
- uid: Microsoft.Build.Execution.BuildSubmission.BuildResult
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: BuildResult
  nameWithType: BuildSubmission.BuildResult
  fullName: Microsoft.Build.Execution.BuildSubmission.BuildResult
- uid: Microsoft.Build.Execution.BuildResult
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildResult
  nameWithType: BuildResult
  fullName: Microsoft.Build.Execution.BuildResult
- uid: Microsoft.Build.Execution.BuildSubmission.Execute
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: Execute()
  nameWithType: BuildSubmission.Execute()
  fullName: Microsoft.Build.Execution.BuildSubmission.Execute()
- uid: Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(Microsoft.Build.Execution.BuildSubmissionCompleteCallback,System.Object)
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: ExecuteAsync(BuildSubmissionCompleteCallback,Object)
  nameWithType: BuildSubmission.ExecuteAsync(BuildSubmissionCompleteCallback,Object)
  fullName: Microsoft.Build.Execution.BuildSubmission.ExecuteAsync(BuildSubmissionCompleteCallback,Object)
- uid: Microsoft.Build.Execution.BuildSubmissionCompleteCallback
  parent: Microsoft.Build.Execution
  isExternal: false
  name: BuildSubmissionCompleteCallback
  nameWithType: BuildSubmissionCompleteCallback
  fullName: Microsoft.Build.Execution.BuildSubmissionCompleteCallback
- uid: Microsoft.Build.Execution.BuildSubmission.IsCompleted
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: IsCompleted
  nameWithType: BuildSubmission.IsCompleted
  fullName: Microsoft.Build.Execution.BuildSubmission.IsCompleted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Execution.BuildSubmission.SubmissionId
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: SubmissionId
  nameWithType: BuildSubmission.SubmissionId
  fullName: Microsoft.Build.Execution.BuildSubmission.SubmissionId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: Microsoft.Build.Execution.BuildSubmission.WaitHandle
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: WaitHandle
  nameWithType: BuildSubmission.WaitHandle
  fullName: Microsoft.Build.Execution.BuildSubmission.WaitHandle
- uid: System.Threading.WaitHandle
  parent: System.Threading
  isExternal: true
  name: WaitHandle
  nameWithType: WaitHandle
  fullName: System.Threading.WaitHandle
- uid: Microsoft.Build.Execution.BuildSubmission.AsyncContext*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: AsyncContext
  nameWithType: BuildSubmission.AsyncContext
- uid: Microsoft.Build.Execution.BuildSubmission.BuildManager*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: BuildManager
  nameWithType: BuildSubmission.BuildManager
- uid: Microsoft.Build.Execution.BuildSubmission.BuildResult*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: BuildResult
  nameWithType: BuildSubmission.BuildResult
- uid: Microsoft.Build.Execution.BuildSubmission.Execute*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: Execute
  nameWithType: BuildSubmission.Execute
- uid: Microsoft.Build.Execution.BuildSubmission.ExecuteAsync*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: ExecuteAsync
  nameWithType: BuildSubmission.ExecuteAsync
- uid: Microsoft.Build.Execution.BuildSubmission.IsCompleted*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: IsCompleted
  nameWithType: BuildSubmission.IsCompleted
- uid: Microsoft.Build.Execution.BuildSubmission.SubmissionId*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: SubmissionId
  nameWithType: BuildSubmission.SubmissionId
- uid: Microsoft.Build.Execution.BuildSubmission.WaitHandle*
  parent: Microsoft.Build.Execution.BuildSubmission
  isExternal: false
  name: WaitHandle
  nameWithType: BuildSubmission.WaitHandle
