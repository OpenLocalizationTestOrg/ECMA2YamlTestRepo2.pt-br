### YamlMime:ManagedReference
items:
- uid: System.Windows.Data.MultiBinding
  id: MultiBinding
  children:
  - System.Windows.Data.MultiBinding.#ctor
  - System.Windows.Data.MultiBinding.Bindings
  - System.Windows.Data.MultiBinding.Converter
  - System.Windows.Data.MultiBinding.ConverterCulture
  - System.Windows.Data.MultiBinding.ConverterParameter
  - System.Windows.Data.MultiBinding.Mode
  - System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
  - System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
  - System.Windows.Data.MultiBinding.NotifyOnValidationError
  - System.Windows.Data.MultiBinding.ShouldSerializeBindings
  - System.Windows.Data.MultiBinding.ShouldSerializeValidationRules
  - System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)
  - System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)
  - System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
  - System.Windows.Data.MultiBinding.UpdateSourceTrigger
  - System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  - System.Windows.Data.MultiBinding.ValidatesOnExceptions
  - System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  - System.Windows.Data.MultiBinding.ValidationRules
  langs:
  - csharp
  name: MultiBinding
  nameWithType: MultiBinding
  fullName: System.Windows.Data.MultiBinding
  type: Class
  summary: "Descreve uma coleção de <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> objetos anexados a uma propriedade de destino de associação simples."
  remarks: "Você pode especificar várias associações em um objeto de MultiBinding. Quando você usa o objeto MultiBinding com um conversor, ele produz um valor final para o destino da associação com base nos valores dessas associações. Por exemplo, cor pode ser computada dos valores vermelhos, verdes e azuis, que podem ser valores de objetos de origem de associação iguais ou diferentes. Quando um valor é movido para as fontes do destino, o valor da propriedade de destino é convertido em um conjunto de valores que são inseridos novamente as associações.       Os valores de <xref:System.Windows.Data.MultiBinding.Mode%2A>e <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A>propriedades determinam a funcionalidade do MultiBinding e são usadas como valores padrão para todas as associações na coleção, a menos que uma associação individual substitui essas propriedades.</xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> </xref:System.Windows.Data.MultiBinding.Mode%2A> Por exemplo, se o <xref:System.Windows.Data.MultiBinding.Mode%2A>propriedade no objeto MultiBinding está definida como <xref:System.Windows.Data.BindingMode>, em seguida, todas as associações na coleção são consideradas <xref:System.Windows.Data.BindingMode>a menos que você defina um diferente <xref:System.Windows.Data.MultiBinding.Mode%2A>valor em uma das associações explicitamente.</xref:System.Windows.Data.MultiBinding.Mode%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.MultiBinding.Mode%2A> Para obter mais informações, consulte o <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>e <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName>Propriedades.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>       MultiBinding atualmente suporta apenas os objetos de tipo <xref:System.Windows.Data.Binding>e não MultiBinding ou <xref:System.Windows.Data.PriorityBinding>.</xref:System.Windows.Data.PriorityBinding> </xref:System.Windows.Data.Binding>"
  syntax:
    content: >-
      [System.Windows.Markup.ContentProperty("Bindings")]

      public class MultiBinding : System.Windows.Data.BindingBase, System.Windows.Markup.IAddChild
  inheritance:
  - System.Windows.Markup.MarkupExtension
  - System.Windows.Data.BindingBase
  implements:
  - System.Windows.Markup.IAddChild
  inheritedMembers:
  - System.Windows.Data.BindingBase.BindingGroupName
  - System.Windows.Data.BindingBase.Delay
  - System.Windows.Data.BindingBase.FallbackValue
  - System.Windows.Data.BindingBase.ProvideValue(System.IServiceProvider)
  - System.Windows.Data.BindingBase.ShouldSerializeFallbackValue
  - System.Windows.Data.BindingBase.ShouldSerializeTargetNullValue
  - System.Windows.Data.BindingBase.StringFormat
  - System.Windows.Data.BindingBase.TargetNullValue
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.#ctor
  id: '#ctor'
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: MultiBinding()
  nameWithType: MultiBinding.MultiBinding()
  fullName: System.Windows.Data.MultiBinding.MultiBinding()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> classe."
  syntax:
    content: public MultiBinding ();
    parameters: []
  overload: System.Windows.Data.MultiBinding.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.Bindings
  id: Bindings
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: Bindings
  nameWithType: MultiBinding.Bindings
  fullName: System.Windows.Data.MultiBinding.Bindings
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém a coleção de <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> objetos dentro deste <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> instância."
  remarks: "> [!NOTE]> Essa propriedade pode ser definida [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] usando a sintaxe mostrada ou acessar o objeto de coleção e usando seus vários métodos, como `Add`. A propriedade usada para acessar o objeto de coleção é somente leitura, enquanto a coleção em si é leitura/gravação.      <a name=&quot;xamlPropertyElementUsage_Bindings&quot;></a># # Uso do elemento de propriedade de XAML ```   <object>     oneOrMoreBindings   </object>      ``` <a name=&quot;xamlValues_Bindings&quot;> </a> # # XAML valores *oneOrMoreBindings* um ou mais <xref:System.Windows.Data.Binding>objetos.</xref:System.Windows.Data.Binding>      "
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Data.BindingBase> Bindings { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingBase}
      description: "Uma coleção de <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> objetos. <xref href=&quot;System.Windows.Data.MultiBinding&quot;></xref>atualmente suporta apenas os objetos do tipo <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> e não <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> ou <xref href=&quot;System.Windows.Data.PriorityBinding&quot;> </xref>. Adicionando um <xref href=&quot;System.Windows.Data.Binding&quot;> </xref> filho para uma <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> objeto implicitamente adiciona o filho para o <xref href=&quot;System.Windows.Data.BindingBase&quot;> </xref> coleta para o <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> objeto."
  overload: System.Windows.Data.MultiBinding.Bindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.Converter
  id: Converter
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: Converter
  nameWithType: MultiBinding.Converter
  fullName: System.Windows.Data.MultiBinding.Converter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define o conversor para usar para converter os valores de origem ou para o valor de destino."
  remarks: "Associações individuais na coleção podem ter seu próprio valor <xref:System.Windows.Data.Binding.Converter%2A>.</xref:System.Windows.Data.Binding.Converter%2A> Para obter mais informações, consulte <xref:System.Windows.Data.IValueConverter>.</xref:System.Windows.Data.IValueConverter>      <a name=&quot;xamlAttributeUsage_Converter&quot;></a># # Uso do atributo XAML ```   <object Converter=&quot;myConverter&quot;/>   ``` <a name=&quot;xamlValues_Converter&quot;> </a> # # XAML valores *myConverter* uma referência de recurso a uma classe que implementa o <xref:System.Windows.Data.IMultiValueConverter>interface, que inclui implementações da <xref:System.Windows.Data.IMultiValueConverter.Convert%2A>e <xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A>métodos.</xref:System.Windows.Data.IMultiValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IMultiValueConverter.Convert%2A> </xref:System.Windows.Data.IMultiValueConverter>       Para consultar um conversor de valor, use o [extensões de marcação e WPF XAML](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Windows.Data.IMultiValueConverter Converter { get; set; }
    return:
      type: System.Windows.Data.IMultiValueConverter
      description: "Um valor do tipo <xref href=&quot;System.Windows.Data.IMultiValueConverter&quot;> </xref> que indica o conversor para usar. O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.Converter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ConverterCulture
  id: ConverterCulture
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ConverterCulture
  nameWithType: MultiBinding.ConverterCulture
  fullName: System.Windows.Data.MultiBinding.ConverterCulture
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define o <xref:System.Globalization.CultureInfo>objeto que se aplica a qualquer conversor atribuído às associações encapsuladas pelo <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> ou no <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> em si.</xref:System.Globalization.CultureInfo>"
  remarks: "<a name=&quot;xamlAttributeUsage_ConverterCulture&quot;></a># # Uso do atributo XAML ```   <object ConverterCulture=&quot;ietfLanguageTag&quot;/>   ``` <a name=&quot;xamlValues_ConverterCulture&quot;> </a> # # XAML valores *ietfLanguageTag* uma cadeia de caracteres usada para definir o <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>       Essa cadeia de caracteres é usada para chamar internamente. <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A>.</xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A> Para obter detalhes sobre o formato de cadeia de caracteres, consulte <xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=fullName>.</xref:System.Globalization.CultureInfo.GetCultureInfoByIetfLanguageTag%2A?displayProperty=fullName>"
  syntax:
    content: public System.Globalization.CultureInfo ConverterCulture { get; set; }
    return:
      type: System.Globalization.CultureInfo
      description: "<xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> Válido"
  overload: System.Windows.Data.MultiBinding.ConverterCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ConverterParameter
  id: ConverterParameter
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ConverterParameter
  nameWithType: MultiBinding.ConverterParameter
  fullName: System.Windows.Data.MultiBinding.ConverterParameter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um parâmetro opcional para passar para um conversor de informações adicionais."
  remarks: "<a name=&quot;xamlPropertyElementUsage_ConverterParameter&quot;></a># # Uso do elemento de propriedade de XAML ```   <object>     <object.ConverterParameter>       converterParameter     </object.ConverterParameter>   </object>   ``` <a name=&quot;xamlAttributeUsage_ConverterParameter&quot;> </a> # # uso do atributo XAML ```   <object property=&quot;converterParameter&quot; />   ``` <a name=&quot;xamlValues_ConverterParameter&quot;> </a> # # XAML valores *converterParameter* um valor do tipo esperado pelo conversor, que pode ser um elemento de objeto ou uma cadeia de caracteres dependendo da definição e os recursos XAML que tanto a propriedade de tipo que está sendo usado e da implementação do conversor.             Usa o conversor desse tipo por meio de `parameter` parâmetro como definido pelo seu <xref:System.Windows.Data.IValueConverter.Convert%2A>e <xref:System.Windows.Data.IValueConverter.ConvertBack%2A>implementações.</xref:System.Windows.Data.IValueConverter.ConvertBack%2A> </xref:System.Windows.Data.IValueConverter.Convert%2A>"
  syntax:
    content: public object ConverterParameter { get; set; }
    return:
      type: System.Object
      description: "Um parâmetro para passar para um conversor. O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ConverterParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.Mode
  id: Mode
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: Mode
  nameWithType: MultiBinding.Mode
  fullName: System.Windows.Data.MultiBinding.Mode
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica a direção do fluxo de dados desta associação."
  remarks: "Os valores do modo e <xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A>propriedades determinam a funcionalidade do <xref:System.Windows.Data.MultiBinding>e são usados como valores padrão para todas as associações na coleção, a menos que uma associação individual substitui essas propriedades.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding.UpdateSourceTrigger%2A> Por exemplo, se a propriedade de modo no <xref:System.Windows.Data.MultiBinding>objeto é definido como <xref:System.Windows.Data.BindingMode>, em seguida, todas as associações na coleção são consideradas <xref:System.Windows.Data.BindingMode>, a menos que você definir um valor de modo diferente em uma das associações explicitamente.</xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.MultiBinding> Para obter mais informações, consulte o <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>e <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName>Propriedades.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Data.BindingMode Mode { get; set; }
    return:
      type: System.Windows.Data.BindingMode
      description: "Uma da <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref> valores. O valor padrão é <xref href=&quot;System.Windows.Data.BindingMode&quot;> </xref>, que retorna o valor da propriedade de dependência de destino do modo de associação padrão. No entanto, o valor padrão varia para cada propriedade de dependência. Nas propriedades do controle de usuário editável, geral, como &lt;xref:System.Windows.Controls.TextBox.Text%2A?displayProperty=fullName&gt;, bidirecionais associações padrão, ao passo que a maioria das outras propriedades padrão para a associação unidirecional.       É uma maneira de determinar se uma propriedade de dependência associa unidirecionais ou bidirecionais por padrão obter os metadados de propriedade da propriedade usando <> </> *> e verifique se o valor booliano de <> </> *> propriedade."
  overload: System.Windows.Data.MultiBinding.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
  id: NotifyOnSourceUpdated
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: NotifyOnSourceUpdated
  nameWithType: MultiBinding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve gerar o <xref href=&quot;System.Windows.FrameworkElement.SourceUpdated&quot;> </xref> eventos quando um valor é transferido de destino da associação para a fonte da associação."
  syntax:
    content: public bool NotifyOnSourceUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Windows.FrameworkElement.SourceUpdated&quot;> </xref> evento será gerado quando o valor de origem de associação é atualizada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
  id: NotifyOnTargetUpdated
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: NotifyOnTargetUpdated
  nameWithType: MultiBinding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve gerar o <xref href=&quot;System.Windows.FrameworkElement.TargetUpdated&quot;> </xref> eventos quando um valor é transferido da origem de associação para o destino da associação."
  syntax:
    content: public bool NotifyOnTargetUpdated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Windows.FrameworkElement.TargetUpdated&quot;> </xref> evento será gerado quando o valor de destino da associação é atualizado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.NotifyOnValidationError
  id: NotifyOnValidationError
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: NotifyOnValidationError
  nameWithType: MultiBinding.NotifyOnValidationError
  fullName: System.Windows.Data.MultiBinding.NotifyOnValidationError
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve gerar o <xref:System.Windows.Controls.Validation.Error>anexa no elemento associado.</xref:System.Windows.Controls.Validation.Error>"
  syntax:
    content: public bool NotifyOnValidationError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Windows.Controls.Validation.Error>evento anexado será gerado no elemento associado quando há um erro de validação durante as atualizações de origem; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Controls.Validation.Error> O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.NotifyOnValidationError*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ShouldSerializeBindings
  id: ShouldSerializeBindings
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ShouldSerializeBindings()
  nameWithType: MultiBinding.ShouldSerializeBindings()
  fullName: System.Windows.Data.MultiBinding.ShouldSerializeBindings()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Indica se o <xref:System.Windows.Data.MultiBinding.Bindings*>propriedade deve ser persistida.</xref:System.Windows.Data.MultiBinding.Bindings*>"
  remarks: "Isso `ShouldSerialize` método é fornecido, pois o <xref:System.Windows.Data.MultiBinding.Bindings%2A>propriedade não tem um valor padrão simples.</xref:System.Windows.Data.MultiBinding.Bindings%2A> Este método indica se a propriedade foi alterado do valor padrão. Normalmente você invoca esse método se você estiver desenvolvendo ou um designer para o <xref:System.Windows.Data.MultiBinding>ou desenvolvendo seu próprio controle incorporar <xref:System.Windows.Data.MultiBinding>.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding>"
  syntax:
    content: public bool ShouldSerializeBindings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor da propriedade foi alterado do padrão; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ShouldSerializeBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules
  id: ShouldSerializeValidationRules
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ShouldSerializeValidationRules()
  nameWithType: MultiBinding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Indica se o <xref:System.Windows.Data.MultiBinding.ValidationRules*>propriedade deve ser persistida.</xref:System.Windows.Data.MultiBinding.ValidationRules*>"
  remarks: "Isso `ShouldSerialize` método é fornecido, pois o <xref:System.Windows.Data.MultiBinding.ValidationRules%2A>propriedade não tem um valor padrão simples.</xref:System.Windows.Data.MultiBinding.ValidationRules%2A> Este método indica se a propriedade foi alterado do valor padrão. Normalmente você invoca esse método se você estiver desenvolvendo ou um designer para o <xref:System.Windows.Data.MultiBinding>ou desenvolvendo seu próprio controle incorporar <xref:System.Windows.Data.MultiBinding>.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding>"
  syntax:
    content: public bool ShouldSerializeValidationRules ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor da propriedade foi alterado do padrão; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)
  id: System#Windows#Markup#IAddChild#AddChild(System.Object)
  isEii: true
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddChild(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Adiciona um objeto filho."
  syntax:
    content: void IAddChild.AddChild (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto filho para adicionar."
  overload: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)
  id: System#Windows#Markup#IAddChild#AddText(System.String)
  isEii: true
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddText(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Adiciona o conteúdo de texto de um nó para o objeto."
  syntax:
    content: void IAddChild.AddText (string text);
    parameters:
    - id: text
      type: System.String
      description: "O texto a ser adicionado ao objeto."
  overload: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
  id: UpdateSourceExceptionFilter
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: UpdateSourceExceptionFilter
  nameWithType: MultiBinding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um manipulador, que você pode usar para fornecer lógica personalizada para tratamento de exceções que encontra o mecanismo de associação durante a atualização do valor de origem de associação. Isso é aplicável somente se você tiver associado a <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref> com seus <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref> objeto."
  remarks: "O <xref:System.Windows.Controls.ExceptionValidationRule>classe representa uma regra de validação interna que verifica para exceções geradas durante a atualização das propriedades da fonte de associação.</xref:System.Windows.Controls.ExceptionValidationRule> Se você tiver associado a <xref:System.Windows.Controls.ExceptionValidationRule>do objeto com o <xref:System.Windows.Data.MultiBinding>do objeto, você pode usar essa propriedade para definir um manipulador para fornecer lógica personalizada para tratar essas exceções.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Controls.ExceptionValidationRule>       Para obter um exemplo, consulte <xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=fullName>.</xref:System.Windows.Data.Binding.UpdateSourceExceptionFilter%2A?displayProperty=fullName>       Para obter mais informações sobre o processo de validação para <xref:System.Windows.Data.MultiBinding>objetos, consulte o <xref:System.Windows.Data.MultiBinding.ValidationRules%2A>propriedade.</xref:System.Windows.Data.MultiBinding.ValidationRules%2A> </xref:System.Windows.Data.MultiBinding>"
  syntax:
    content: public System.Windows.Data.UpdateSourceExceptionFilterCallback UpdateSourceExceptionFilter { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceExceptionFilterCallback
      description: "Um método que fornece a lógica personalizada para tratamento de exceções que encontra o mecanismo de associação durante a atualização do valor de origem de associação."
  overload: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.UpdateSourceTrigger
  id: UpdateSourceTrigger
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: UpdateSourceTrigger
  nameWithType: MultiBinding.UpdateSourceTrigger
  fullName: System.Windows.Data.MultiBinding.UpdateSourceTrigger
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que determina o tempo de atualizações de fonte de associação."
  remarks: "Os valores da <xref:System.Windows.Data.MultiBinding.Mode%2A>e as propriedades de UpdateSourceTrigger determinam a funcionalidade do <xref:System.Windows.Data.MultiBinding>e são usados como valores padrão para todas as associações na coleção, a menos que uma associação individual substitui essas propriedades.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding.Mode%2A> Por exemplo, se o <xref:System.Windows.Data.MultiBinding.Mode%2A>propriedade no <xref:System.Windows.Data.MultiBinding>objeto é definido como <xref:System.Windows.Data.BindingMode>, e em seguida, todas as associações na coleção são consideradas <xref:System.Windows.Data.BindingMode>a menos que você defina outro <xref:System.Windows.Data.MultiBinding.Mode%2A>valor em uma das associações explicitamente.</xref:System.Windows.Data.MultiBinding.Mode%2A> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.BindingMode> </xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.MultiBinding.Mode%2A> Para obter mais informações, consulte o <xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>e <xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName>Propriedades.</xref:System.Windows.Data.Binding.UpdateSourceTrigger%2A?displayProperty=fullName> </xref:System.Windows.Data.Binding.Mode%2A?displayProperty=fullName>"
  syntax:
    content: public System.Windows.Data.UpdateSourceTrigger UpdateSourceTrigger { get; set; }
    return:
      type: System.Windows.Data.UpdateSourceTrigger
      description: "Uma da <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> valores. O valor padrão é <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>, que retorna o padrão <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref> valor da propriedade de dependência de destino. No entanto, o valor padrão para a maioria das propriedades de dependência é <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>, enquanto o <> </> *> propriedade tem um valor padrão de <xref href=&quot;System.Windows.Data.UpdateSourceTrigger&quot;> </xref>.       Uma maneira de determinar o padrão <> </> *> valor de uma propriedade de dependência é obter os metadados da propriedade da propriedade usando <> </> *> e, em seguida, verifique o valor da <> </> *> propriedade."
  overload: System.Windows.Data.MultiBinding.UpdateSourceTrigger*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  id: ValidatesOnDataErrors
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ValidatesOnDataErrors
  nameWithType: MultiBinding.ValidatesOnDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve incluir o <xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>."
  remarks: "Definir esta propriedade fornece uma alternativa ao uso de <xref:System.Windows.Controls.DataErrorValidationRule>elemento explicitamente.</xref:System.Windows.Controls.DataErrorValidationRule> O <xref:System.Windows.Controls.DataErrorValidationRule>é uma regra de validação interna que verifica os erros que são gerados pelo <xref:System.ComponentModel.IDataErrorInfo>implementação do objeto de origem.</xref:System.ComponentModel.IDataErrorInfo> </xref:System.Windows.Controls.DataErrorValidationRule> Se um erro for gerado, o mecanismo de associação cria um <xref:System.Windows.Controls.ValidationError>com o erro e adiciona-o para o <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>coleção do elemento associado.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> A falta de um erro limpa esses comentários de validação, a menos que outra regra gera um problema de validação.       Para obter mais informações sobre o processo de validação para <xref:System.Windows.Data.MultiBinding>objetos, consulte o <xref:System.Windows.Data.MultiBinding.ValidationRules%2A>propriedade.</xref:System.Windows.Data.MultiBinding.ValidationRules%2A> </xref:System.Windows.Data.MultiBinding>       ValidatesOnDataErrors é introduzido no .NET Framework versão 3.5.  Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ValidatesOnDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir o <xref href=&quot;System.Windows.Controls.DataErrorValidationRule&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ValidatesOnDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ValidatesOnExceptions
  id: ValidatesOnExceptions
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ValidatesOnExceptions
  nameWithType: MultiBinding.ValidatesOnExceptions
  fullName: System.Windows.Data.MultiBinding.ValidatesOnExceptions
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve incluir o <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>."
  remarks: "Definir esta propriedade fornece uma alternativa ao uso de <xref:System.Windows.Controls.ExceptionValidationRule>elemento explicitamente.</xref:System.Windows.Controls.ExceptionValidationRule> O <xref:System.Windows.Controls.ExceptionValidationRule>é uma regra de validação interna que verifica para exceções geradas durante a atualização da propriedade source.</xref:System.Windows.Controls.ExceptionValidationRule> Se uma exceção for lançada, o mecanismo de associação cria um <xref:System.Windows.Controls.ValidationError>com a exceção e adiciona-o para o <xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName>coleção do elemento associado.</xref:System.Windows.Controls.Validation.Errors%2A?displayProperty=fullName> </xref:System.Windows.Controls.ValidationError> A falta de um erro limpa esses comentários de validação, a menos que outra regra gera um problema de validação.       Para obter mais informações sobre o processo de validação para <xref:System.Windows.Data.MultiBinding>objetos, consulte o <xref:System.Windows.Data.MultiBinding.ValidationRules%2A>propriedade.</xref:System.Windows.Data.MultiBinding.ValidationRules%2A> </xref:System.Windows.Data.MultiBinding>       ValidatesOnExceptions é introduzido no .NET Framework versão 3.5.  Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool ValidatesOnExceptions { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir o <xref href=&quot;System.Windows.Controls.ExceptionValidationRule&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ValidatesOnExceptions*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  id: ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ValidatesOnNotifyDataErrors
  nameWithType: MultiBinding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém ou define um valor que indica se deve incluir o <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>."
  remarks: "Quando for ValidatesOnNotifyDataErrors `true`, a associação verifica e relata erros que são gerados por uma fonte de dados que implementa <xref:System.ComponentModel.INotifyDataErrorInfo>.</xref:System.ComponentModel.INotifyDataErrorInfo>"
  syntax:
    content: public bool ValidatesOnNotifyDataErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir o <xref href=&quot;System.Windows.Controls.NotifyDataErrorValidationRule&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Data.MultiBinding.ValidationRules
  id: ValidationRules
  parent: System.Windows.Data.MultiBinding
  langs:
  - csharp
  name: ValidationRules
  nameWithType: MultiBinding.ValidationRules
  fullName: System.Windows.Data.MultiBinding.ValidationRules
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Data
  summary: "Obtém a coleção de <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objetos para esta instância de <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>."
  remarks: "Você pode definir regras de validação em ambos os <xref:System.Windows.Data.MultiBinding>objeto e o indivíduo <xref:System.Windows.Data.Binding>objetos no <xref:System.Windows.Data.MultiBinding>objeto.</xref:System.Windows.Data.MultiBinding> </xref:System.Windows.Data.Binding> </xref:System.Windows.Data.MultiBinding> O mecanismo de associação avalia a ValidationRules no <xref:System.Windows.Data.MultiBinding>objeto quando passa um valor da propriedade de destino de associação para o <xref:System.Windows.Data.IMultiValueConverter>objeto.</xref:System.Windows.Data.IMultiValueConverter> </xref:System.Windows.Data.MultiBinding> Depois disso, quando um valor move do conversor para a propriedade de fonte de associação de uma associação individual, o mecanismo de associação avalia o <xref:System.Windows.Data.Binding.ValidationRules%2A>naquele <xref:System.Windows.Data.Binding>objeto.</xref:System.Windows.Data.Binding> </xref:System.Windows.Data.Binding.ValidationRules%2A>       Para obter mais informações sobre o processo de validação e como fornecer comentários visuais na invalidação, consulte &quot;Validação de dados&quot; em [visão geral de associação de dados](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Essa propriedade pode ser definida [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] usando a sintaxe mostrada ou acessar o objeto de coleção e usando seus vários métodos, como `Add`. A propriedade usada para acessar o objeto de coleção é somente leitura, enquanto a coleção em si é leitura / gravação.      <a name=&quot;xamlPropertyElementUsage_ValidationRules&quot;></a># # Uso do elemento de propriedade de XAML ```   <object>     <object.ValidationRules>       oneOrMoreValidationRules     </object.ValidationRules>   </object>   ``` <a name=&quot;xamlValues_ValidationRules&quot;> </a> # # XAML valores *oneOrMoreValidationRules* um ou mais <xref:System.Windows.Controls.ValidationRule>objetos.</xref:System.Windows.Controls.ValidationRule>       Você pode usar a <xref:System.Windows.Controls.ExceptionValidationRule>classe ou criar suas regras personalizadas por subclasses de <xref:System.Windows.Controls.ValidationRule>classe.</xref:System.Windows.Controls.ValidationRule> </xref:System.Windows.Controls.ExceptionValidationRule>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule> ValidationRules { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
      description: "A coleção de <xref href=&quot;System.Windows.Controls.ValidationRule&quot;> </xref> objetos para esta instância de <xref href=&quot;System.Windows.Data.MultiBinding&quot;> </xref>."
  overload: System.Windows.Data.MultiBinding.ValidationRules*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Data.BindingBase
  isExternal: false
  name: System.Windows.Data.BindingBase
- uid: System.Windows.Data.MultiBinding.#ctor
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: MultiBinding()
  nameWithType: MultiBinding.MultiBinding()
  fullName: System.Windows.Data.MultiBinding.MultiBinding()
- uid: System.Windows.Data.MultiBinding.Bindings
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Bindings
  nameWithType: MultiBinding.Bindings
  fullName: System.Windows.Data.MultiBinding.Bindings
- uid: System.Collections.ObjectModel.Collection{System.Windows.Data.BindingBase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<BindingBase>
  nameWithType: Collection<BindingBase>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Data.BindingBase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Data.BindingBase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Data.BindingBase
    name: BindingBase
    nameWithType: BindingBase
    fullName: BindingBase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.MultiBinding.Converter
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Converter
  nameWithType: MultiBinding.Converter
  fullName: System.Windows.Data.MultiBinding.Converter
- uid: System.Windows.Data.IMultiValueConverter
  parent: System.Windows.Data
  isExternal: false
  name: IMultiValueConverter
  nameWithType: IMultiValueConverter
  fullName: System.Windows.Data.IMultiValueConverter
- uid: System.Windows.Data.MultiBinding.ConverterCulture
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ConverterCulture
  nameWithType: MultiBinding.ConverterCulture
  fullName: System.Windows.Data.MultiBinding.ConverterCulture
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Windows.Data.MultiBinding.ConverterParameter
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ConverterParameter
  nameWithType: MultiBinding.ConverterParameter
  fullName: System.Windows.Data.MultiBinding.ConverterParameter
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Data.MultiBinding.Mode
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Mode
  nameWithType: MultiBinding.Mode
  fullName: System.Windows.Data.MultiBinding.Mode
- uid: System.Windows.Data.BindingMode
  parent: System.Windows.Data
  isExternal: false
  name: BindingMode
  nameWithType: BindingMode
  fullName: System.Windows.Data.BindingMode
- uid: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: MultiBinding.NotifyOnSourceUpdated
  fullName: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: MultiBinding.NotifyOnTargetUpdated
  fullName: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated
- uid: System.Windows.Data.MultiBinding.NotifyOnValidationError
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: MultiBinding.NotifyOnValidationError
  fullName: System.Windows.Data.MultiBinding.NotifyOnValidationError
- uid: System.Windows.Data.MultiBinding.ShouldSerializeBindings
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ShouldSerializeBindings()
  nameWithType: MultiBinding.ShouldSerializeBindings()
  fullName: System.Windows.Data.MultiBinding.ShouldSerializeBindings()
- uid: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ShouldSerializeValidationRules()
  nameWithType: MultiBinding.ShouldSerializeValidationRules()
  fullName: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules()
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild(System.Object)
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild(Object)
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddChild(Object)
  fullName: System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddChild(Object)
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText(System.String)
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText(String)
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddText(String)
  fullName: System.Windows.Data.MultiBinding.System.Windows.Markup.IAddChild.AddText(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: MultiBinding.UpdateSourceExceptionFilter
  fullName: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.UpdateSourceExceptionFilterCallback
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceExceptionFilterCallback
  nameWithType: UpdateSourceExceptionFilterCallback
  fullName: System.Windows.Data.UpdateSourceExceptionFilterCallback
- uid: System.Windows.Data.MultiBinding.UpdateSourceTrigger
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: MultiBinding.UpdateSourceTrigger
  fullName: System.Windows.Data.MultiBinding.UpdateSourceTrigger
- uid: System.Windows.Data.UpdateSourceTrigger
  parent: System.Windows.Data
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: UpdateSourceTrigger
  fullName: System.Windows.Data.UpdateSourceTrigger
- uid: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: MultiBinding.ValidatesOnDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnDataErrors
- uid: System.Windows.Data.MultiBinding.ValidatesOnExceptions
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: MultiBinding.ValidatesOnExceptions
  fullName: System.Windows.Data.MultiBinding.ValidatesOnExceptions
- uid: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: MultiBinding.ValidatesOnNotifyDataErrors
  fullName: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.MultiBinding.ValidationRules
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidationRules
  nameWithType: MultiBinding.ValidationRules
  fullName: System.Windows.Data.MultiBinding.ValidationRules
- uid: System.Collections.ObjectModel.Collection{System.Windows.Controls.ValidationRule}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ValidationRule>
  nameWithType: Collection<ValidationRule>
  fullName: System.Collections.ObjectModel.Collection<System.Windows.Controls.ValidationRule>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Windows.Controls.ValidationRule>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Controls.ValidationRule
    name: ValidationRule
    nameWithType: ValidationRule
    fullName: ValidationRule
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Data.MultiBinding.#ctor*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: MultiBinding
  nameWithType: MultiBinding.MultiBinding
- uid: System.Windows.Data.MultiBinding.Bindings*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Bindings
  nameWithType: MultiBinding.Bindings
- uid: System.Windows.Data.MultiBinding.Converter*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Converter
  nameWithType: MultiBinding.Converter
- uid: System.Windows.Data.MultiBinding.ConverterCulture*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ConverterCulture
  nameWithType: MultiBinding.ConverterCulture
- uid: System.Windows.Data.MultiBinding.ConverterParameter*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ConverterParameter
  nameWithType: MultiBinding.ConverterParameter
- uid: System.Windows.Data.MultiBinding.Mode*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: Mode
  nameWithType: MultiBinding.Mode
- uid: System.Windows.Data.MultiBinding.NotifyOnSourceUpdated*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnSourceUpdated
  nameWithType: MultiBinding.NotifyOnSourceUpdated
- uid: System.Windows.Data.MultiBinding.NotifyOnTargetUpdated*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnTargetUpdated
  nameWithType: MultiBinding.NotifyOnTargetUpdated
- uid: System.Windows.Data.MultiBinding.NotifyOnValidationError*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: NotifyOnValidationError
  nameWithType: MultiBinding.NotifyOnValidationError
- uid: System.Windows.Data.MultiBinding.ShouldSerializeBindings*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ShouldSerializeBindings
  nameWithType: MultiBinding.ShouldSerializeBindings
- uid: System.Windows.Data.MultiBinding.ShouldSerializeValidationRules*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ShouldSerializeValidationRules
  nameWithType: MultiBinding.ShouldSerializeValidationRules
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddChild*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddChild
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddChild
- uid: System.Windows.Data.MultiBinding.System#Windows#Markup#IAddChild#AddText*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: System.Windows.Markup.IAddChild.AddText
  nameWithType: MultiBinding.System.Windows.Markup.IAddChild.AddText
- uid: System.Windows.Data.MultiBinding.UpdateSourceExceptionFilter*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: UpdateSourceExceptionFilter
  nameWithType: MultiBinding.UpdateSourceExceptionFilter
- uid: System.Windows.Data.MultiBinding.UpdateSourceTrigger*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: UpdateSourceTrigger
  nameWithType: MultiBinding.UpdateSourceTrigger
- uid: System.Windows.Data.MultiBinding.ValidatesOnDataErrors*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnDataErrors
  nameWithType: MultiBinding.ValidatesOnDataErrors
- uid: System.Windows.Data.MultiBinding.ValidatesOnExceptions*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnExceptions
  nameWithType: MultiBinding.ValidatesOnExceptions
- uid: System.Windows.Data.MultiBinding.ValidatesOnNotifyDataErrors*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidatesOnNotifyDataErrors
  nameWithType: MultiBinding.ValidatesOnNotifyDataErrors
- uid: System.Windows.Data.MultiBinding.ValidationRules*
  parent: System.Windows.Data.MultiBinding
  isExternal: false
  name: ValidationRules
  nameWithType: MultiBinding.ValidationRules
