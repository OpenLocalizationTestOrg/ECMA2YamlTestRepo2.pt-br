### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.CacheItemPolicy
  id: CacheItemPolicy
  children:
  - System.Runtime.Caching.CacheItemPolicy.#ctor
  - System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration
  - System.Runtime.Caching.CacheItemPolicy.ChangeMonitors
  - System.Runtime.Caching.CacheItemPolicy.Priority
  - System.Runtime.Caching.CacheItemPolicy.RemovedCallback
  - System.Runtime.Caching.CacheItemPolicy.SlidingExpiration
  - System.Runtime.Caching.CacheItemPolicy.UpdateCallback
  langs:
  - csharp
  name: CacheItemPolicy
  nameWithType: CacheItemPolicy
  fullName: System.Runtime.Caching.CacheItemPolicy
  type: Class
  summary: "Representa um conjunto de detalhes de remoção e expiração de uma entrada de cache específico."
  remarks: "Uma instância de CacheItemPolicy contém informações que podem ser associadas uma entrada de cache. Por exemplo, quando uma entrada de cache está prestes a ser removido do cache, um <xref:System.Runtime.Caching.CacheEntryUpdateArguments>objeto é passado para um método de retorno de chamada.</xref:System.Runtime.Caching.CacheEntryUpdateArguments> O <xref:System.Runtime.Caching.CacheEntryUpdateArguments.UpdatedCacheItemPolicy%2A>propriedade o <xref:System.Runtime.Caching.CacheEntryUpdateArguments>objeto pode passar uma referência a uma instância de CacheItemPolicy que pode incluir a remoção e vencimento detalhes sobre a entrada de cache.</xref:System.Runtime.Caching.CacheEntryUpdateArguments> </xref:System.Runtime.Caching.CacheEntryUpdateArguments.UpdatedCacheItemPolicy%2A>       Alguns métodos na <xref:System.Runtime.Caching.MemoryCache>e <xref:System.Runtime.Caching.ObjectCache>classes aceitam uma instância de CacheItemPolicy para descrever a política de remoção ou expiração.</xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.MemoryCache>"
  example:
  - "The following example shows how to create an in-memory cache item that monitors the path for a text file. The cache creates a CacheItemPolicy object and sets the <xref:System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration%2A> property to evict the cache after 60 seconds.  \n  \n [Visual Basic]  \n  \n```  \nProtected Sub Button1_Click(ByVal sender As Object, _  \n            ByVal e As System.EventArgs) Handles Button1.Click  \n    Dim cache As ObjectCache = MemoryCache.Default  \n    Dim fileContents As String = TryCast(cache(\"filecontents\"), _  \n            String)  \n    If fileContents Is Nothing Then  \n        Dim policy As New CacheItemPolicy()  \n        policy.AbsoluteExpiration = _  \n            DateTimeOffset.Now.AddSeconds(60.0)  \n        Dim filePaths As New List(Of String)()  \n     Dim cachedFilePath As String = Server.MapPath(\"~\") & _  \n         \"\\cacheText.txt\"  \n        filePaths.Add(cachedFilePath)  \n        policy.ChangeMonitors.Add(New _  \n            HostFileChangeMonitor(filePaths))  \n  \n        ' Fetch the file contents.  \n        fileContents = File.ReadAllText(cachedFilePath)  \n        cache.Set(\"filecontents\", fileContents, policy)  \n    End If  \n    Label1.Text = fileContents  \nEnd Sub  \n```  \n  \n [C#]  \n  \n```  \nprotected void Button1_Click(object sender, EventArgs e)  \n    {  \n        ObjectCache cache = MemoryCache.Default;  \n            string fileContents = cache[\"filecontents\"] as string;  \n            if (fileContents == null)  \n            {  \n                CacheItemPolicy policy = new CacheItemPolicy();  \n                policy.AbsoluteExpiration =   \n                    DateTimeOffset.Now.AddSeconds(60.0);  \n  \n                List<string> filePaths = new List<string>();  \n             string cachedFilePath = Server.MapPath(\"~\") +   \n                 \"\\\\cacheText.txt\";  \n             filePaths.Add(cachedFilePath);  \n  \n                policy.ChangeMonitors.Add(new   \n                    HostFileChangeMonitor(filePaths));  \n  \n                // Fetch the file contents.  \n                fileContents = File.ReadAllText(cachedFilePath);  \n  \n                cache.Set(\"filecontents\", fileContents, policy);  \n  \n            }  \n  \n            Label1.Text = fileContents;  \n        }  \n```"
  syntax:
    content: public class CacheItemPolicy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.#ctor
  id: '#ctor'
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: CacheItemPolicy()
  nameWithType: CacheItemPolicy.CacheItemPolicy()
  fullName: System.Runtime.Caching.CacheItemPolicy.CacheItemPolicy()
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Caching.CacheItemPolicy&quot;> </xref> classe."
  syntax:
    content: public CacheItemPolicy ();
    parameters: []
  overload: System.Runtime.Caching.CacheItemPolicy.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration
  id: AbsoluteExpiration
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: AbsoluteExpiration
  nameWithType: CacheItemPolicy.AbsoluteExpiration
  fullName: System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Obtém ou define um valor que indica se uma entrada de cache deve ser removida após um período especificado."
  syntax:
    content: public DateTimeOffset AbsoluteExpiration { get; set; }
    return:
      type: System.DateTimeOffset
      description: "O período de tempo que deve decorrer antes que uma entrada de cache é removida. O valor padrão é <xref href=&quot;System.Runtime.Caching.ObjectCache.InfiniteAbsoluteExpiration&quot;> </xref>, o que significa que a entrada não expira."
  overload: System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.ChangeMonitors
  id: ChangeMonitors
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: ChangeMonitors
  nameWithType: CacheItemPolicy.ChangeMonitors
  fullName: System.Runtime.Caching.CacheItemPolicy.ChangeMonitors
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Obtém uma coleção de <xref href=&quot;System.Runtime.Caching.ChangeMonitor&quot;> </xref> objetos que estão associados com uma entrada de cache."
  remarks: "Você pode adicionar ou remover os monitores de alteração que estão associados uma entrada de cache. No entanto, o conjunto de monitores de alteração deve ser concluído antes de você passar um <xref:System.Runtime.Caching.CacheItemPolicy>de instância para um <xref:System.Runtime.Caching.ObjectCache>implementação.</xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.CacheItemPolicy> Se você alterar o conjunto de monitores de alteração em um <xref:System.Runtime.Caching.CacheItemPolicy>do objeto após o <xref:System.Runtime.Caching.CacheItemPolicy>objeto foi passado para um <xref:System.Runtime.Caching.ObjectCache>implementação, as alterações não terão efeito.</xref:System.Runtime.Caching.ObjectCache> </xref:System.Runtime.Caching.CacheItemPolicy> </xref:System.Runtime.Caching.CacheItemPolicy>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Runtime.Caching.ChangeMonitor> ChangeMonitors { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Runtime.Caching.ChangeMonitor}
      description: "Uma coleção de monitores de alteração. O padrão é uma coleção vazia."
  overload: System.Runtime.Caching.CacheItemPolicy.ChangeMonitors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.Priority
  id: Priority
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: Priority
  nameWithType: CacheItemPolicy.Priority
  fullName: System.Runtime.Caching.CacheItemPolicy.Priority
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Obtém ou define uma configuração de prioridade é usada para determinar se deseja remover uma entrada de cache."
  remarks: "No ASP.NET, a enumeração de prioridades tem apenas duas prioridades possíveis: <xref:System.Runtime.Caching.CacheItemPriority>(o que não significa nenhuma prioridade) e <xref:System.Runtime.Caching.CacheItemPriority>(que significa que a entrada não pode ser removido).</xref:System.Runtime.Caching.CacheItemPriority> </xref:System.Runtime.Caching.CacheItemPriority> Portanto, a prioridade só pode ser definida é se uma entrada de cache deve permanecer no cache para sempre.      > [!IMPORTANT] > Adicionando uma entrada ao cache com um nível de prioridade de <xref:System.Runtime.Caching.CacheItemPriority>pode fazer com que o cache de estouro com as entradas que nunca podem ser removidas.</xref:System.Runtime.Caching.CacheItemPriority> Implementações de cache devem definir o <xref:System.Runtime.Caching.CacheItemPriority>prioridade para uma entrada de cache somente se a implementação de cache fornece maneiras para remover entradas do cache e para gerenciar o número de entradas de cache.</xref:System.Runtime.Caching.CacheItemPriority>"
  syntax:
    content: public System.Runtime.Caching.CacheItemPriority Priority { get; set; }
    return:
      type: System.Runtime.Caching.CacheItemPriority
      description: "Um dos valores de enumeração que indica a prioridade para remoção. O valor de prioridade padrão é <xref href=&quot;System.Runtime.Caching.CacheItemPriority&quot;> </xref>, que não significa que nenhuma prioridade."
  overload: System.Runtime.Caching.CacheItemPolicy.Priority*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.RemovedCallback
  id: RemovedCallback
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: RemovedCallback
  nameWithType: CacheItemPolicy.RemovedCallback
  fullName: System.Runtime.Caching.CacheItemPolicy.RemovedCallback
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Obtém ou define uma referência para um <xref href=&quot;System.Runtime.Caching.CacheEntryRemovedCallback&quot;> </xref> representante que é chamado depois que uma entrada é removida do cache."
  remarks: "Depois que uma entrada de cache foi removida do cache, o cache invoca o objeto de retorno de chamada que é referenciado pela propriedade RemovedCallback. Uma implementação de cache pode usar esse retorno de chamada para notificar o método de chamada que uma entrada de cache foi removida."
  syntax:
    content: public System.Runtime.Caching.CacheEntryRemovedCallback RemovedCallback { get; set; }
    return:
      type: System.Runtime.Caching.CacheEntryRemovedCallback
      description: "Uma referência a um delegado que é chamado por uma implementação de cache."
  overload: System.Runtime.Caching.CacheItemPolicy.RemovedCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.SlidingExpiration
  id: SlidingExpiration
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: SlidingExpiration
  nameWithType: CacheItemPolicy.SlidingExpiration
  fullName: System.Runtime.Caching.CacheItemPolicy.SlidingExpiration
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Obtém ou define um valor que indica se uma entrada de cache deve ser removida se não tiver sido acessada em um determinado período de tempo."
  syntax:
    content: public TimeSpan SlidingExpiration { get; set; }
    return:
      type: System.TimeSpan
      description: "Um período de tempo no qual uma entrada de cache deve ser acessada antes da entrada do cache é removida do cache. O padrão é <xref href=&quot;System.Runtime.Caching.ObjectCache.NoSlidingExpiration&quot;> </xref>, o que significa que o item não deve ser expirado com base em um período de tempo."
  overload: System.Runtime.Caching.CacheItemPolicy.SlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.CacheItemPolicy.UpdateCallback
  id: UpdateCallback
  parent: System.Runtime.Caching.CacheItemPolicy
  langs:
  - csharp
  name: UpdateCallback
  nameWithType: CacheItemPolicy.UpdateCallback
  fullName: System.Runtime.Caching.CacheItemPolicy.UpdateCallback
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Obtém ou define uma referência para um <xref href=&quot;System.Runtime.Caching.CacheEntryUpdateCallback&quot;> </xref> delegado que é chamado antes de uma entrada de cache é removida do cache."
  syntax:
    content: public System.Runtime.Caching.CacheEntryUpdateCallback UpdateCallback { get; set; }
    return:
      type: System.Runtime.Caching.CacheEntryUpdateCallback
      description: "Uma referência a um delegado que é chamado por uma implementação de cache."
  overload: System.Runtime.Caching.CacheItemPolicy.UpdateCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Caching.CacheItemPolicy.#ctor
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: CacheItemPolicy()
  nameWithType: CacheItemPolicy.CacheItemPolicy()
  fullName: System.Runtime.Caching.CacheItemPolicy.CacheItemPolicy()
- uid: System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: AbsoluteExpiration
  nameWithType: CacheItemPolicy.AbsoluteExpiration
  fullName: System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Runtime.Caching.CacheItemPolicy.ChangeMonitors
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: ChangeMonitors
  nameWithType: CacheItemPolicy.ChangeMonitors
  fullName: System.Runtime.Caching.CacheItemPolicy.ChangeMonitors
- uid: System.Collections.ObjectModel.Collection{System.Runtime.Caching.ChangeMonitor}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ChangeMonitor>
  nameWithType: Collection<ChangeMonitor>
  fullName: System.Collections.ObjectModel.Collection<System.Runtime.Caching.ChangeMonitor>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Runtime.Caching.ChangeMonitor>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.Caching.ChangeMonitor
    name: ChangeMonitor
    nameWithType: ChangeMonitor
    fullName: ChangeMonitor
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.CacheItemPolicy.Priority
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: Priority
  nameWithType: CacheItemPolicy.Priority
  fullName: System.Runtime.Caching.CacheItemPolicy.Priority
- uid: System.Runtime.Caching.CacheItemPriority
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheItemPriority
  nameWithType: CacheItemPriority
  fullName: System.Runtime.Caching.CacheItemPriority
- uid: System.Runtime.Caching.CacheItemPolicy.RemovedCallback
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: RemovedCallback
  nameWithType: CacheItemPolicy.RemovedCallback
  fullName: System.Runtime.Caching.CacheItemPolicy.RemovedCallback
- uid: System.Runtime.Caching.CacheEntryRemovedCallback
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheEntryRemovedCallback
  nameWithType: CacheEntryRemovedCallback
  fullName: System.Runtime.Caching.CacheEntryRemovedCallback
- uid: System.Runtime.Caching.CacheItemPolicy.SlidingExpiration
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: SlidingExpiration
  nameWithType: CacheItemPolicy.SlidingExpiration
  fullName: System.Runtime.Caching.CacheItemPolicy.SlidingExpiration
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Runtime.Caching.CacheItemPolicy.UpdateCallback
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: UpdateCallback
  nameWithType: CacheItemPolicy.UpdateCallback
  fullName: System.Runtime.Caching.CacheItemPolicy.UpdateCallback
- uid: System.Runtime.Caching.CacheEntryUpdateCallback
  parent: System.Runtime.Caching
  isExternal: false
  name: CacheEntryUpdateCallback
  nameWithType: CacheEntryUpdateCallback
  fullName: System.Runtime.Caching.CacheEntryUpdateCallback
- uid: System.Runtime.Caching.CacheItemPolicy.#ctor*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: CacheItemPolicy
  nameWithType: CacheItemPolicy.CacheItemPolicy
- uid: System.Runtime.Caching.CacheItemPolicy.AbsoluteExpiration*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: AbsoluteExpiration
  nameWithType: CacheItemPolicy.AbsoluteExpiration
- uid: System.Runtime.Caching.CacheItemPolicy.ChangeMonitors*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: ChangeMonitors
  nameWithType: CacheItemPolicy.ChangeMonitors
- uid: System.Runtime.Caching.CacheItemPolicy.Priority*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: Priority
  nameWithType: CacheItemPolicy.Priority
- uid: System.Runtime.Caching.CacheItemPolicy.RemovedCallback*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: RemovedCallback
  nameWithType: CacheItemPolicy.RemovedCallback
- uid: System.Runtime.Caching.CacheItemPolicy.SlidingExpiration*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: SlidingExpiration
  nameWithType: CacheItemPolicy.SlidingExpiration
- uid: System.Runtime.Caching.CacheItemPolicy.UpdateCallback*
  parent: System.Runtime.Caching.CacheItemPolicy
  isExternal: false
  name: UpdateCallback
  nameWithType: CacheItemPolicy.UpdateCallback
