### YamlMime:ManagedReference
items:
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute
  id: SqlMethodAttribute
  children:
  - Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor
  - Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull
  - Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator
  - Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall
  langs:
  - csharp
  name: SqlMethodAttribute
  nameWithType: SqlMethodAttribute
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute
  type: Class
  summary: "Indica as propriedades de acesso de determinismo e dados de um método ou propriedade em um tipo definido pelo usuário (UDT). As propriedades do atributo refletem as características físicas que são usadas quando o tipo é registrado com o SQL Server."
  remarks: "Para uma propriedade, o SqlMethodAttribute deve ser usado em setter ou getter diretamente.       SqlMethodAttribute herda de uma <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>, portanto, SqlMethodAttribute herda o `FillRowMethodName` e `TableDefinition` campos de <xref:Microsoft.SqlServer.Server.SqlFunctionAttribute>.</xref:Microsoft.SqlServer.Server.SqlFunctionAttribute> </xref:Microsoft.SqlServer.Server.SqlFunctionAttribute> Observe que não é possível escrever um método com valor de tabela, embora os nomes desses campos podem sugerir que é possível."
  example:
  - "The following example shows a UDT method that is attributed to indicate that the method will not be invoked on null instances of the type, that the method will not change the state of the type, and that the method will not be called when `null` parameters are supplied to the method invocation.  \n  \n [!code-cs[DataWorks SqlMethodAttribute Sample#1](~/add/codesnippet/csharp/t-microsoft.sqlserver.se_1_1.cs)]\n [!code-vb[DataWorks SqlMethodAttribute Sample#1](~/add/codesnippet/visualbasic/t-microsoft.sqlserver.se_1_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Method, AllowMultiple=false, Inherited=false)]

      public sealed class SqlMethodAttribute : Microsoft.SqlServer.Server.SqlFunctionAttribute
  inheritance:
  - System.Attribute
  - Microsoft.SqlServer.Server.SqlFunctionAttribute
  implements: []
  inheritedMembers:
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.DataAccess
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.FillRowMethodName
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.IsDeterministic
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.IsPrecise
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.Name
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.SystemDataAccess
  - Microsoft.SqlServer.Server.SqlFunctionAttribute.TableDefinition
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor
  id: '#ctor'
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  langs:
  - csharp
  name: SqlMethodAttribute()
  nameWithType: SqlMethodAttribute.SqlMethodAttribute()
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.SqlMethodAttribute()
  type: Constructor
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Um atributo em um tipo definido pelo usuário (UDT), usado para indicar as propriedades de acesso de determinismo e dados de um método ou uma propriedade em um UDT."
  syntax:
    content: public SqlMethodAttribute ();
    parameters: []
  overload: Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull
  id: InvokeIfReceiverIsNull
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  langs:
  - csharp
  name: InvokeIfReceiverIsNull
  nameWithType: SqlMethodAttribute.InvokeIfReceiverIsNull
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Indica se o SQL Server deve chamar o método em instâncias nulas."
  remarks: "O valor padrão para a propriedade InvokeIfReceiverIsNull é `false`.       Ou seja, o método não é invocado em uma instância nula. Se InvokeIfReceiverIsNull for true, o valor de retorno do método depende de seu tipo. Se o tipo de retorno do método for nulo, o valor diferenciado nulo para o tipo será retornado. Se o tipo de retorno é não nulo, o valor CLR de padrão para o tipo será retornado. O valor padrão para tipos de referência é nulo. O valor padrão para um tipo de valor é o valor que é retornado ao chamar o construtor padrão para o tipo."
  syntax:
    content: public bool InvokeIfReceiverIsNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o SQL Server deve chamar o método em instâncias nulas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se o método não pode ser invocado (devido a um atributo no método), o [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] <xref uid=&quot;langword_csharp_DbNull&quot; name=&quot;DbNull&quot; href=&quot;&quot;> </xref> é retornado."
  overload: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator
  id: IsMutator
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  langs:
  - csharp
  name: IsMutator
  nameWithType: SqlMethodAttribute.IsMutator
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Indica se um método em um tipo definido pelo usuário (UDT) é um modificador."
  remarks: "Se a propriedade IsMutator está definida como `true` e o tipo de retorno do método é `void`, SQL Server marca o método como um modificador. Um método modificador é aquele que faz com que uma alteração de estado na instância da UDT. Métodos de modificador podem ser chamados em instruções de atribuição ou instruções de modificação de dados, mas não podem ser usados em consultas. Se um método é marcado como um modificador, mas não retorna void, CREATE TYPE falha com um erro. Embora um retornados valor diferente de `void` faz não gerar um erro, o valor retornado não está acessível e não pode ser usado.       O valor padrão da propriedade IsMutator é `false`.       Uma propriedade pode ser um modificador se <xref:Microsoft.SqlServer.Server.SqlMethodAttribute>é usada em setter e IsMutator é definido como `true`.</xref:Microsoft.SqlServer.Server.SqlMethodAttribute> No entanto, um setter de propriedade implicitamente é tratado como um modificador, portanto, não é necessário definir a propriedade IsMutator a <xref:Microsoft.SqlServer.Server.SqlMethodAttribute>para `true`.</xref:Microsoft.SqlServer.Server.SqlMethodAttribute>"
  syntax:
    content: public bool IsMutator { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o método é um modificador; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall
  id: OnNullCall
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  langs:
  - csharp
  name: OnNullCall
  nameWithType: SqlMethodAttribute.OnNullCall
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall
  type: Property
  assemblies:
  - System.Data
  namespace: Microsoft.SqlServer.Server
  summary: "Indica se o método em um tipo definido pelo usuário (UDT) é chamado quando <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> argumentos de entrada são especificados na invocação de método."
  remarks: "O valor padrão da propriedade OnNullCall é `true`."
  syntax:
    content: public bool OnNullCall { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o método é chamado quando <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> argumentos de entrada estão especificados na invocação de método; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o método retorna um <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> valor quando qualquer um dos seus parâmetros de entrada são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Se o método não pode ser invocado (devido a um atributo no método), o [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] <xref uid=&quot;langword_csharp_DbNull&quot; name=&quot;DbNull&quot; href=&quot;&quot;> </xref> é retornado."
  overload: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.SqlServer.Server.SqlFunctionAttribute
  isExternal: false
  name: Microsoft.SqlServer.Server.SqlFunctionAttribute
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: SqlMethodAttribute()
  nameWithType: SqlMethodAttribute.SqlMethodAttribute()
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.SqlMethodAttribute()
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: InvokeIfReceiverIsNull
  nameWithType: SqlMethodAttribute.InvokeIfReceiverIsNull
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: IsMutator
  nameWithType: SqlMethodAttribute.IsMutator
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: OnNullCall
  nameWithType: SqlMethodAttribute.OnNullCall
  fullName: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.#ctor*
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: SqlMethodAttribute
  nameWithType: SqlMethodAttribute.SqlMethodAttribute
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.InvokeIfReceiverIsNull*
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: InvokeIfReceiverIsNull
  nameWithType: SqlMethodAttribute.InvokeIfReceiverIsNull
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.IsMutator*
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: IsMutator
  nameWithType: SqlMethodAttribute.IsMutator
- uid: Microsoft.SqlServer.Server.SqlMethodAttribute.OnNullCall*
  parent: Microsoft.SqlServer.Server.SqlMethodAttribute
  isExternal: false
  name: OnNullCall
  nameWithType: SqlMethodAttribute.OnNullCall
