### YamlMime:ManagedReference
items:
- uid: System.Net.PeerToPeer.PeerNameResolver
  id: PeerNameResolver
  children:
  - System.Net.PeerToPeer.PeerNameResolver.#ctor
  - System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  - System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  - System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  - System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  - System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  langs:
  - csharp
  name: PeerNameResolver
  nameWithType: PeerNameResolver
  fullName: System.Net.PeerToPeer.PeerNameResolver
  type: Class
  summary: "Especifica os valores que resolvam um <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> para um <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> usando o protocolo PNRP API do provedor de Namespace."
  remarks: "Um <xref:System.Net.PeerToPeer.PeerNameRecord>que contém todas as informações para o <xref:System.Net.PeerToPeer.PeerName>que foi publicado no <xref:System.Net.PeerToPeer.Cloud>ou cloud(s) que foram consultados durante o processo de resolução.</xref:System.Net.PeerToPeer.Cloud> </xref:System.Net.PeerToPeer.PeerName> </xref:System.Net.PeerToPeer.PeerNameRecord>"
  syntax:
    content: public class PeerNameResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor
  id: '#ctor'
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: PeerNameResolver()
  nameWithType: PeerNameResolver.PeerNameResolver()
  fullName: System.Net.PeerToPeer.PeerNameResolver.PeerNameResolver()
  type: Constructor
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicializa uma nova instância padrão do <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver&quot;> </xref> classe."
  remarks: "Depois de resolver com êxito um <xref:System.Net.PeerToPeer.PeerName>, o <xref:System.Net.PeerToPeer.PeerNameRecord>contém todas as informações de especificado <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A>que foram publicada a cloud(s) foram consultados durante a <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>operação.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameRecord.PeerName%2A> </xref:System.Net.PeerToPeer.PeerNameRecord> </xref:System.Net.PeerToPeer.PeerName>"
  syntax:
    content: public PeerNameResolver ();
    parameters: []
  overload: System.Net.PeerToPeer.PeerNameResolver.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  id: OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: OnResolveCompleted(ResolveCompletedEventArgs)
  nameWithType: PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Retorna dados de resolução após o ponto a ponto o <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&quot;> </xref> é gerado."
  remarks: "Esse método é um retorno de chamada assíncrono usado para processar os dados de resolução de nome de ponto a ponto, após a resolução de ponto a ponto.       Tipos derivados podem substituir esse método para executar mais tarefas quando a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>é gerado pelo objeto resolvedor peer.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: protected void OnResolveCompleted (System.Net.PeerToPeer.ResolveCompletedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.ResolveCompletedEventArgs
      description: "O <xref href=&quot;System.Net.PeerToPeer.ResolveCompletedEventArgs&quot;> </xref> objeto que contém os dados retornados pelo <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted&quot;> </xref> eventos."
  overload: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  id: OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  nameWithType: PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Retorna dados de progresso de resolução ponto a ponto quando o <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&quot;> </xref> é gerado."
  remarks: "Esse método é um retorno de chamada assíncrono usado para processar os dados de resolução de pares após a solicitação do progresso de resolução de ponto a ponto.       Tipos derivados podem substituir esse método para executar mais tarefas quando a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>evento ocorre.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>"
  syntax:
    content: protected void OnResolveProgressChanged (System.Net.PeerToPeer.ResolveProgressChangedEventArgs e);
    parameters:
    - id: e
      type: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
      description: "<xref href=&quot;System.Net.PeerToPeer.ResolveProgressChangedEventArgs&quot;></xref>objeto que contém informações de progresso do par nome resolução retornadas pelo <xref href=&quot;System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged&quot;> </xref> eventos."
  overload: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  id: Resolve(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName)
  nameWithType: PeerNameResolver.Resolve(PeerName)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Resolve especificado <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> em todas as nuvens conhecidas para o par de chamada."
  remarks: "Esse método associa um nome de ponto a ponto para nuvens. Todas as nuvens são consultadas para <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> Se o nome de ponto a ponto não pode ser resolvido ou é `null`, uma <xref:System.Net.PeerToPeer.PeerToPeerException>é gerada.</xref:System.Net.PeerToPeer.PeerToPeerException>       Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem.       Chamar o <xref:System.Net.PeerToPeer.PeerNameResolver>método é semelhante a chamar o <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>método para cada registro de nome de par de <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</xref:System.Net.PeerToPeer.PeerNameRecordCollection> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver> Observe que usando o método de resolução em um registro de nome de ponto a ponto individuais não invalidará resolver vários nomes de ponto a ponto.       Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono.       Se o <xref:System.Net.PeerToPeer.Cloud>parâmetro não for fornecido, o método usa o <xref:System.Net.PeerToPeer.Cloud.Available>atalho para preencher os parâmetros de nuvem.</xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento será gerado se a operação resolver é concluído em erro ou for cancelada.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  example:
  - "The following code example illustrates how to resolve a <xref:System.Net.PeerToPeer.PeerName> published in any <xref:System.Net.PeerToPeer.Cloud>.  \n  \n [!code-cs[NCLPNRPPeerNameResolver#1](~/add/codesnippet/csharp/m-system.net.peertopeer._2_1.cs)]"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "O <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> para resolver."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "Um <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> que contém todos os registros de nome de ponto a ponto (representado como <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> objetos) associado com o nome de ponto especificado. Para nomes de ponto a ponto segura, o mesmo <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> podem ser registrados por usuários diferentes no mesmo <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>e associados a diferentes pontos de extremidade."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "O nome do par especificado não pode ser resolvido."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Resolve o nome de ponto especificado em todas as nuvens conhecido para o par de chamada, retornando não mais do que o número especificado de <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> objetos."
  remarks: "Esse método associa um nome de ponto a ponto para nuvens. Todas as nuvens são consultadas para o nome do par. Para nomes de ponto a ponto segura, o mesmo nome de ponto a ponto pode ser registrado por usuários diferentes no mesmo <xref:System.Net.PeerToPeer.Cloud>e associados a diferentes pontos de extremidade.</xref:System.Net.PeerToPeer.Cloud> Se o <xref:System.Net.PeerToPeer.PeerName>não pode ser resolvido (por exemplo, o nome de ponto a ponto não está publicado) um <xref:System.Net.PeerToPeer.PeerToPeerException>é gerada.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerName>       Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono.       O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento será gerado se a operação resolver é concluído em erro ou for cancelada.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, int maxRecords);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "O <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> para resolver."
    - id: maxRecords
      type: System.Int32
      description: "O número máximo de <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> objetos para obter todos <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> objetos para fornecido `peerName`."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "Um <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> cujo tamanho é menor ou igual a <code> maxRecords </code> entradas. Esta coleção contém registros de nome de ponto a ponto associados a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> que foi resolvido."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O <code> maxRecords </code> parâmetro é menor ou igual a zero."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "O nome do par fornecido não pode ser resolvido."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Cloud)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Resolve especificado <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>especificado na <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "Se o <xref:System.Net.PeerToPeer.PeerName>não pode ser resolvido (ou seja, o nome do par não está publicado) um <xref:System.Net.PeerToPeer.PeerToPeerException>é gerada.</xref:System.Net.PeerToPeer.PeerToPeerException> </xref:System.Net.PeerToPeer.PeerName>       Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem.       Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono.       Se o <xref:System.Net.PeerToPeer.Cloud>parâmetro é `null`, o <xref:System.Net.PeerToPeer.PeerNameResolver>usa o <xref:System.Net.PeerToPeer.Cloud.Available>atalho para preencher o <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameResolver> </xref:System.Net.PeerToPeer.Cloud>       O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento será gerado se a operação resolver é concluído em erro ou for cancelada.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "O <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> para resolver."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "O <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> no qual resolver o nome de ponto a ponto."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "<xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;></xref>que contém todos os registros de nome de ponto a ponto (representado como <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> objetos) associado com o nome de ponto especificado. Para nomes de ponto a ponto segura, o mesmo <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> podem ser registrados por usuários diferentes no mesmo <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>e associados a diferentes pontos de extremidade."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "O nome do par fornecido não pode ser resolvido."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  id: Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: Resolve(PeerName,Cloud,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Resolve especificado <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>especificado na <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>, retornando não mais do que o número especificado de <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> objetos.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem. Se o nome de ponto a ponto não pode ser resolvido, um <xref:System.Net.PeerToPeer.PeerToPeerException>é gerada.</xref:System.Net.PeerToPeer.PeerToPeerException>       Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>  Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono.       Se o <xref:System.Net.PeerToPeer.Cloud>parâmetro é `null`, o <xref:System.Net.PeerToPeer.PeerNameResolver>usa o <xref:System.Net.PeerToPeer.Cloud.Available>atalho para preencher o <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.PeerNameResolver> </xref:System.Net.PeerToPeer.Cloud>       O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento será gerado se a operação resolver é concluído em erro ou for cancelada.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public System.Net.PeerToPeer.PeerNameRecordCollection Resolve (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "O <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> para resolver."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "O <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> no qual resolver o `peerName`."
    - id: maxRecords
      type: System.Int32
      description: "O número máximo de objetos de registro de nome ponto a ponto para obter a nuvem especificada especificado `peerName`."
    return:
      type: System.Net.PeerToPeer.PeerNameRecordCollection
      description: "Um <xref href=&quot;System.Net.PeerToPeer.PeerNameRecordCollection&quot;> </xref> cujo tamanho é menor ou igual a <code> maxRecords </code> entradas. Esta coleção contém registros de nome de ponto a ponto associados a <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> que foi resolvido."
  overload: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>peerName</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O <code> maxRecords </code> parâmetro é menor ou igual a zero."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "O nome do par fornecido não pode ser resolvido."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicia uma operação de resolução de nome de ponto assíncrono especificado <xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>em todas as nuvens conhecidas para o par de chamada.</xref:System.Net.PeerToPeer.PeerNameRecord.PeerName*>"
  remarks: "Esse método assincronamente associa um nome de ponto a ponto para nuvens. Todas as nuvens são consultadas para <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> Ele gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ou, ele gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Se o nome de ponto a ponto não pode ser resolvido, um <xref:System.Net.PeerToPeer.PeerToPeerException>é gerada.</xref:System.Net.PeerToPeer.PeerToPeerException>       Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem.       Chamar o <xref:System.Net.PeerToPeer.PeerNameResolver>método é semelhante a chamar o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>método para cada registro de nome de par de <xref:System.Net.PeerToPeer.PeerNameRecordCollection>.</xref:System.Net.PeerToPeer.PeerNameRecordCollection> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A> </xref:System.Net.PeerToPeer.PeerNameResolver> Observe que usando o método de resolução em um registro de nome de ponto a ponto individuais não invalidará resolver vários nomes de ponto a ponto.       Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono e o método de solução destina-se ao processamento síncrono.       Todas as referências assíncronas para o objeto de resolvedor sejam coordenadas com um token de identificador exclusivo. Isso `userState` identificador de token ou mensagem permite que um sistema operacional para entregar uma mensagem para um único processo de recebimento depois que a mensagem foi colocada na fila de mensagens.       O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento será gerado se a operação resolver é concluído em erro ou for cancelada.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "O <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> para resolver."
    - id: userState
      type: System.Object
      description: "Um objeto definido pelo usuário que contém informações de estado sobre a operação de resolução de nome de ponto a ponto."
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma ou ambas as <code> peerName </code> e <code> userState </code> parâmetros são definidos como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicia uma operação de resolução de nome de ponto assíncrono especificado <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> em todas as nuvens conhecidas para o par de chamada, retornando não mais de <code> maxRecords </code> entradas para o nome do par."
  remarks: "Esse método assincronamente associa um nome de ponto a ponto para nuvens. Todas as nuvens são consultadas para <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem. Se o nome de ponto a ponto não pode ser resolvido ou é `null`, uma <xref:System.Net.PeerToPeer.PeerToPeerException>é gerada.</xref:System.Net.PeerToPeer.PeerToPeerException>       Este método gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ou, ele gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono e o método de solução destina-se ao processamento síncrono.       Todas as referências assíncronas para o objeto de resolvedor sejam coordenadas com um token de identificador exclusivo <xref:System.Object>.</xref:System.Object> Isso `userState` identificador de token ou mensagem permite que um sistema operacional para entregar uma mensagem para um único processo de recebimento depois que a mensagem foi colocada na fila de mensagens.       O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento será gerado se a operação resolver é concluído em erro ou for cancelada.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, int maxRecords, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "O <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> para resolver."
    - id: maxRecords
      type: System.Int32
      description: "O número máximo de registros para obter o nome do par."
    - id: userState
      type: System.Object
      description: "Um objeto definido pelo usuário que contém informações sobre a operação resolver."
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma ou ambas as <code> peerName </code> e <code> userState </code> parâmetros são definidos como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O <code> maxRecords </code> parâmetro é menor ou igual a zero."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Cloud,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicia uma operação de resolução de nome de ponto assíncrono especificado <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> do <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>."
  remarks: "Este método gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ou, ele gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem.       Se o <xref:System.Net.PeerToPeer.Cloud>parâmetro é `null`, o nome é resolvido usando o <xref:System.Net.PeerToPeer.Cloud.Available>atalho, que inicializa valores padrão para o <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>Propriedades.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono e o método de solução destina-se ao processamento síncrono.       Todas as referências assíncronas para o objeto de resolvedor sejam coordenadas com um token de identificador exclusivo. Isso `userState` identificador de token ou mensagem permite que um sistema operacional para entregar uma mensagem para um único processo de recebimento depois que a mensagem foi colocada na fila de mensagens.       O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento será gerado se a operação resolver é concluído em erro ou for cancelada.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "O <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> para resolver."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "O <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref> no qual resolver o `peerName`."
    - id: userState
      type: System.Object
      description: "Um usuário definido <xref:System.Object>que contém informações sobre a operação de resolução de nome de ponto a ponto.</xref:System.Object>"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma ou ambas as <code> peerName </code> e <code> userState </code> parâmetros são definidos como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  id: ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsync(PeerName,Cloud,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Inicia uma operação de resolução de nome de ponto assíncrono especificado <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref> do <xref href=&quot;System.Net.PeerToPeer.Cloud&quot;> </xref>.  A operação de resolução resolverá não mais de <code> maxRecords </code> entradas para o nome de ponto especificado."
  remarks: "Para nomes de ponto a ponto segura, o mesmo nome pode ser registrado (e associado a diferentes pontos de extremidade) por diferentes pares na mesma nuvem.       Este método gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted> Ou, ele gera o <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>evento, que chama o <xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Se o <xref:System.Net.PeerToPeer.Cloud>parâmetro é `null`, o nome é resolvido usando o <xref:System.Net.PeerToPeer.Cloud.Available>atalho, que inicializa valores padrão para o <xref:System.Net.PeerToPeer.Cloud.Name%2A>, <xref:System.Net.PeerToPeer.Cloud.Scope%2A>, e <xref:System.Net.PeerToPeer.Cloud.ScopeId%2A>Propriedades.</xref:System.Net.PeerToPeer.Cloud.ScopeId%2A> </xref:System.Net.PeerToPeer.Cloud.Scope%2A> </xref:System.Net.PeerToPeer.Cloud.Name%2A> </xref:System.Net.PeerToPeer.Cloud.Available> </xref:System.Net.PeerToPeer.Cloud>       Para cada <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>método, há um equivalente <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>método.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A> </xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync%2A>  Suas listas de parâmetros são idênticas, exceto que o método ResolveAsync inclui um token do sistema para manipulação de eventos assíncrono e o método de solução destina-se ao processamento síncrono.       Todas as referências assíncronas para o objeto de resolvedor peer sejam coordenadas com um token de identificador exclusivo <xref:System.Object>.</xref:System.Object> Isso `userState` identificador de token ou mensagem permite que um sistema operacional para entregar uma mensagem para um único processo de recebimento depois que a mensagem foi colocada na fila de mensagens.       O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento será gerado se a operação resolver é concluído em erro ou for cancelada.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>"
  syntax:
    content: public void ResolveAsync (System.Net.PeerToPeer.PeerName peerName, System.Net.PeerToPeer.Cloud cloud, int maxRecords, object userState);
    parameters:
    - id: peerName
      type: System.Net.PeerToPeer.PeerName
      description: "O `peerName` para resolver."
    - id: cloud
      type: System.Net.PeerToPeer.Cloud
      description: "O `cloud` no qual resolver `peerName`."
    - id: maxRecords
      type: System.Int32
      description: "O número máximo de registros a serem obtidos `cloud` para `peerName`."
    - id: userState
      type: System.Object
      description: "Um objeto definido pelo usuário que contém informações sobre a operação de resolução de nome de ponto a ponto."
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Uma ou ambas as <code> peerName </code> e <code> userState </code> parâmetros são definidos como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um ou mais parâmetros fornecidos são inválidos."
  - type: System.Net.PeerToPeer.PeerToPeerException
    commentId: T:System.Net.PeerToPeer.PeerToPeerException
    description: "A conclusão bem-sucedida dessa operação requer pelo menos um manipulador de eventos."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O <code> maxRecords </code> parâmetro é menor ou igual a zero."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  id: ResolveAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveAsyncCancel(Object)
  nameWithType: PeerNameResolver.ResolveAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(Object)
  type: Method
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Cancelar a solicitação de resolução de nome de par assíncrona especificada."
  remarks: "Chamar esse método garante que o sistema não tentará obter registros adicionais para o <xref:System.Net.PeerToPeer.PeerName>.</xref:System.Net.PeerToPeer.PeerName> especificado  Se esse método é chamado quando uma operação de resolução de nome do par assíncrona não estiver pendente, ele atua como uma &quot;nenhuma operação&quot; (não operações).       O `userState` objeto deve ser fornecido, pois ele é usado para rastrear uma chamada assíncrona específica quando várias chamadas estão em andamento. Esse objeto fornecido pelo chamador é exclusivo para cada solicitação de resolução de nome de ponto a ponto.       Esse método retornará imediatamente, mas a operação pode ou não pode cancelar imediatamente. Os argumentos do evento retornados pelo <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>evento contém um campo que pode ser controlado por clientes para determinar se o cancelamento tenha ocorrido.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted>       Chamar esse método garante que o evento ResolveCompleted será sinalizado assim que possível com o argumento do evento <xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>definido como `true`.</xref:System.ComponentModel.AsyncCompletedEventArgs.Cancelled%2A>"
  syntax:
    content: public void ResolveAsyncCancel (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: "O objeto fornecido para a <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>instância de método que iniciou a operação resolver.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
  overload: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> userState </code> parâmetros não podem ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  id: ResolveCompleted
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveCompleted
  nameWithType: PeerNameResolver.ResolveCompleted
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "O evento ResolveCompleted é sinalizado quando uma solicitação de resolução de nome de ponto a ponto para um determinado <xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>foi concluída.</xref:System.Net.PeerToPeer.PeerNameRegistration.PeerName*>"
  remarks: "O <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>evento será gerado uma vez para cada ponto de extremidade encontrado e esse evento será gerado apenas uma vez quando todos os pontos de extremidade foram encontrados.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged>       Esse evento também será gerado se o <xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>operação realizada em erro ou for cancelada.</xref:System.Net.PeerToPeer.PeerNameResolver.Resolve%2A>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs> ResolveCompleted;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.ResolveCompletedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  id: ResolveProgressChanged
  parent: System.Net.PeerToPeer.PeerNameResolver
  langs:
  - csharp
  name: ResolveProgressChanged
  nameWithType: PeerNameResolver.ResolveProgressChanged
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  type: Event
  assemblies:
  - System.Net
  namespace: System.Net.PeerToPeer
  summary: "Esse evento é sinalizado sempre que um <xref href=&quot;System.Net.PeerToPeer.PeerNameRecord&quot;> </xref> objeto for localizado em resposta a um <xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>operação para um determinado <xref href=&quot;System.Net.PeerToPeer.PeerName&quot;> </xref>.</xref:System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*>"
  remarks: "Se vários <xref:System.Net.PeerToPeer.PeerName>objetos existem no cloud(s) que está sendo consultada, esse evento é sinalizado uma vez para cada <xref:System.Net.PeerToPeer.PeerNameRecord>encontrado.</xref:System.Net.PeerToPeer.PeerNameRecord> </xref:System.Net.PeerToPeer.PeerName>"
  syntax:
    content: public event EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs> ResolveProgressChanged;
    return:
      type: System.EventHandler{System.Net.PeerToPeer.ResolveProgressChangedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Net.PeerToPeer.PeerToPeerException
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerToPeerException
  nameWithType: PeerToPeerException
  fullName: System.Net.PeerToPeer.PeerToPeerException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: PeerNameResolver()
  nameWithType: PeerNameResolver.PeerNameResolver()
  fullName: System.Net.PeerToPeer.PeerNameResolver.PeerNameResolver()
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(System.Net.PeerToPeer.ResolveCompletedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveCompleted(ResolveCompletedEventArgs)
  nameWithType: PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted(ResolveCompletedEventArgs)
- uid: System.Net.PeerToPeer.ResolveCompletedEventArgs
  parent: System.Net.PeerToPeer
  isExternal: false
  name: ResolveCompletedEventArgs
  nameWithType: ResolveCompletedEventArgs
  fullName: System.Net.PeerToPeer.ResolveCompletedEventArgs
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(System.Net.PeerToPeer.ResolveProgressChangedEventArgs)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  nameWithType: PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
  fullName: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged(ResolveProgressChangedEventArgs)
- uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
  parent: System.Net.PeerToPeer
  isExternal: false
  name: ResolveProgressChangedEventArgs
  nameWithType: ResolveProgressChangedEventArgs
  fullName: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName)
  nameWithType: PeerNameResolver.Resolve(PeerName)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName)
- uid: System.Net.PeerToPeer.PeerNameRecordCollection
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerNameRecordCollection
  nameWithType: PeerNameRecordCollection
  fullName: System.Net.PeerToPeer.PeerNameRecordCollection
- uid: System.Net.PeerToPeer.PeerName
  parent: System.Net.PeerToPeer
  isExternal: false
  name: PeerName
  nameWithType: PeerName
  fullName: System.Net.PeerToPeer.PeerName
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Cloud)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud)
- uid: System.Net.PeerToPeer.Cloud
  parent: System.Net.PeerToPeer
  isExternal: false
  name: Cloud
  nameWithType: Cloud
  fullName: System.Net.PeerToPeer.Cloud
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve(PeerName,Cloud,Int32)
  nameWithType: PeerNameResolver.Resolve(PeerName,Cloud,Int32)
  fullName: System.Net.PeerToPeer.PeerNameResolver.Resolve(PeerName,Cloud,Int32)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Int32,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Cloud,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(System.Net.PeerToPeer.PeerName,System.Net.PeerToPeer.Cloud,System.Int32,System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync(PeerName,Cloud,Int32,Object)
  nameWithType: PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync(PeerName,Cloud,Int32,Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(System.Object)
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsyncCancel(Object)
  nameWithType: PeerNameResolver.ResolveAsyncCancel(Object)
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel(Object)
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveCompleted
  nameWithType: PeerNameResolver.ResolveCompleted
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveCompleted
- uid: System.EventHandler{System.Net.PeerToPeer.ResolveCompletedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ResolveCompletedEventArgs>
  nameWithType: EventHandler<ResolveCompletedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.ResolveCompletedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.ResolveCompletedEventArgs
    name: ResolveCompletedEventArgs
    nameWithType: ResolveCompletedEventArgs
    fullName: ResolveCompletedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveProgressChanged
  nameWithType: PeerNameResolver.ResolveProgressChanged
  fullName: System.Net.PeerToPeer.PeerNameResolver.ResolveProgressChanged
- uid: System.EventHandler{System.Net.PeerToPeer.ResolveProgressChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ResolveProgressChangedEventArgs>
  nameWithType: EventHandler<ResolveProgressChangedEventArgs>
  fullName: System.EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Net.PeerToPeer.ResolveProgressChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.PeerToPeer.ResolveProgressChangedEventArgs
    name: ResolveProgressChangedEventArgs
    nameWithType: ResolveProgressChangedEventArgs
    fullName: ResolveProgressChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.PeerToPeer.PeerNameResolver.#ctor*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: PeerNameResolver
  nameWithType: PeerNameResolver.PeerNameResolver
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveCompleted*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveCompleted
  nameWithType: PeerNameResolver.OnResolveCompleted
- uid: System.Net.PeerToPeer.PeerNameResolver.OnResolveProgressChanged*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: OnResolveProgressChanged
  nameWithType: PeerNameResolver.OnResolveProgressChanged
- uid: System.Net.PeerToPeer.PeerNameResolver.Resolve*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: Resolve
  nameWithType: PeerNameResolver.Resolve
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsync*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsync
  nameWithType: PeerNameResolver.ResolveAsync
- uid: System.Net.PeerToPeer.PeerNameResolver.ResolveAsyncCancel*
  parent: System.Net.PeerToPeer.PeerNameResolver
  isExternal: false
  name: ResolveAsyncCancel
  nameWithType: PeerNameResolver.ResolveAsyncCancel
