### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty
  id: CallbackContextMessageProperty
  children:
  - System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  - System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})
  - System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(System.ServiceModel.Channels.Message)
  - System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)
  - System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress
  - System.ServiceModel.Channels.CallbackContextMessageProperty.Context
  - System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(System.Uri)
  - System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy
  - System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)
  - System.ServiceModel.Channels.CallbackContextMessageProperty.Name
  - System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  - System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  langs:
  - csharp
  name: CallbackContextMessageProperty
  nameWithType: CallbackContextMessageProperty
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty
  type: Class
  summary: "Representa o conteúdo do <xref uid=&quot;langword_csharp_wsc:CallbackContext&quot; name=&quot;wsc:CallbackContext&quot; href=&quot;&quot;> </xref> cabeçalho da mensagem ao usar um canal que suporta o protocolo de intercâmbio de contexto."
  remarks: "O protocolo de intercâmbio de contexto permite comunicação duplex entre serviços duráveis."
  syntax:
    content: 'public class CallbackContextMessageProperty : System.ServiceModel.Channels.IMessageProperty'
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.Channels.IMessageProperty
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CallbackContextMessageProperty(IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(IDictionary<String,String>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> classe com o contexto especificado."
  syntax:
    content: public CallbackContextMessageProperty (System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Informações contidas na mensagem que pode ser identificada pelo cliente e a instância do serviço entre os quais a comunicação está em andamento."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CallbackContextMessageProperty(EndpointAddress)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> classe com o <xref:System.ServiceModel.EndpointAddress>.</xref:System.ServiceModel.EndpointAddress> especificado"
  remarks: "O endereço de retorno de chamada é o endereço de ponto de extremidade que o serviço usa para chamar de volta ao cliente."
  syntax:
    content: public CallbackContextMessageProperty (System.ServiceModel.EndpointAddress callbackAddress);
    parameters:
    - id: callbackAddress
      type: System.ServiceModel.EndpointAddress
      description: "O endereço de retorno de chamada."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CallbackContextMessageProperty(EndpointAddress,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress,IDictionary<String,String>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> classe com especificado <xref:System.ServiceModel.EndpointAddress>e um &lt;xref:System.Collections.Generic.IDictionary%602&gt; que contém informações de contexto.</xref:System.ServiceModel.EndpointAddress>"
  remarks: "As informações de contexto podem incluir informações de instância e a conversa do cliente."
  syntax:
    content: public CallbackContextMessageProperty (System.ServiceModel.EndpointAddress listenAddress, System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: listenAddress
      type: System.ServiceModel.EndpointAddress
      description: "O endereço de ponto de extremidade do cliente ouve."
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Informações contidas na mensagem que pode ser identificada pelo cliente e a instância do serviço entre os quais a comunicação está em andamento."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CallbackContextMessageProperty(String,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(String,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(String,IDictionary<String,String>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> classe com especificado escutar informações de endereço e contexto."
  syntax:
    content: public CallbackContextMessageProperty (string listenAddress, System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: listenAddress
      type: System.String
      description: "O endereço de ponto de extremidade do cliente ouve."
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Informações contidas na mensagem que pode ser identificada pelo cliente e a instância do serviço entre os quais a comunicação está em andamento."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})
  id: '#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})'
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CallbackContextMessageProperty(Uri,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(Uri,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(Uri,IDictionary<String,String>)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> classe com especificado escutar informações de endereço e contexto."
  syntax:
    content: public CallbackContextMessageProperty (Uri listenAddress, System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: listenAddress
      type: System.Uri
      description: "O endereço de ponto de extremidade do cliente ouve."
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Informações contidas na mensagem que pode ser identificada pelo cliente e a instância do serviço entre os quais a comunicação está em andamento."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(System.ServiceModel.Channels.Message)
  id: AddOrReplaceInMessage(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: AddOrReplaceInMessage(Message)
  nameWithType: CallbackContextMessageProperty.AddOrReplaceInMessage(Message)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(Message)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Adiciona ou substitui atual <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> instância dentro da mensagem especificada."
  syntax:
    content: public void AddOrReplaceInMessage (System.ServiceModel.Channels.Message message);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "A mensagem para adicionar ou substituir a propriedade de mensagem de contexto de retorno de chamada."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)
  id: AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: AddOrReplaceInMessageProperties(MessageProperties)
  nameWithType: CallbackContextMessageProperty.AddOrReplaceInMessageProperties(MessageProperties)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(MessageProperties)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Adiciona ou substitui atual <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> instância dentro da coleção de propriedades de mensagem especificada."
  syntax:
    content: public void AddOrReplaceInMessageProperties (System.ServiceModel.Channels.MessageProperties properties);
    parameters:
    - id: properties
      type: System.ServiceModel.Channels.MessageProperties
      description: "A coleção de propriedades de mensagem para adicionar a propriedade de mensagem de contexto de retorno de chamada para."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress
  id: CallbackAddress
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CallbackAddress
  nameWithType: CallbackContextMessageProperty.CallbackAddress
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém o endereço de retorno de chamada."
  remarks: "O endereço de retorno de chamada é o endereço do ponto de extremidade que o servidor usa para chamar o cliente."
  syntax:
    content: public System.ServiceModel.EndpointAddress CallbackAddress { get; }
    return:
      type: System.ServiceModel.EndpointAddress
      description: "Um <xref:System.ServiceModel.EndpointAddress>que contém o endereço de retorno de chamada.</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.Context
  id: Context
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: Context
  nameWithType: CallbackContextMessageProperty.Context
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.Context
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém o contexto associado a <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref>."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Context { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "O contexto."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.Context*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(System.Uri)
  id: CreateCallbackAddress(System.Uri)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CreateCallbackAddress(Uri)
  nameWithType: CallbackContextMessageProperty.CreateCallbackAddress(Uri)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Mescla do cliente <code> listenAddress </code> e o contexto em um endereço de retorno de chamada única que é enviado para o serviço."
  syntax:
    content: public System.ServiceModel.EndpointAddress CreateCallbackAddress (Uri listenAddress);
    parameters:
    - id: listenAddress
      type: System.Uri
      description: "O URI de escuta"
    return:
      type: System.ServiceModel.EndpointAddress
      description: "Um <xref:System.ServiceModel.EndpointAddress>instância.</xref:System.ServiceModel.EndpointAddress>"
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy
  id: CreateCopy
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: CreateCopy()
  nameWithType: CallbackContextMessageProperty.CreateCopy()
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Cria uma cópia do <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> instância."
  syntax:
    content: public System.ServiceModel.Channels.IMessageProperty CreateCopy ();
    parameters: []
    return:
      type: System.ServiceModel.Channels.IMessageProperty
      description: "Uma cópia do <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> instância."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)
  id: GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: GetListenAddressAndContext(EndpointAddress,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.GetListenAddressAndContext(EndpointAddress,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(EndpointAddress,IDictionary<String,String>)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém os dados de endereço e o contexto de escuta do <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> instância."
  syntax:
    content: public void GetListenAddressAndContext (out System.ServiceModel.EndpointAddress listenAddress, out System.Collections.Generic.IDictionary<string,string> context);
    parameters:
    - id: listenAddress
      type: System.ServiceModel.EndpointAddress
      description: "Uma referência para armazenar o endereço de escuta."
    - id: context
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Informações contidas na mensagem que pode ser identificada pelo cliente e a instância do serviço entre os quais a comunicação está em andamento."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.Name
  id: Name
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: Name
  nameWithType: CallbackContextMessageProperty.Name
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.Name
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Obtém o nome da propriedade para o <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> classe."
  syntax:
    content: public static string Name { get; }
    return:
      type: System.String
      description: "O nome da propriedade."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.Name*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  id: TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: TryGet(Message,CallbackContextMessageProperty)
  nameWithType: CallbackContextMessageProperty.TryGet(Message,CallbackContextMessageProperty)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(Message,CallbackContextMessageProperty)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Tenta obter um <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> instância da mensagem especificada."
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.Message message, out System.ServiceModel.Channels.CallbackContextMessageProperty contextMessageProperty);
    parameters:
    - id: message
      type: System.ServiceModel.Channels.Message
      description: "A mensagem para obter a propriedade de mensagem de contexto de retorno de chamada de."
    - id: contextMessageProperty
      type: System.ServiceModel.Channels.CallbackContextMessageProperty
      description: "Uma referência para armazenar a instância de propriedade de mensagem de contexto de retorno de chamada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a propriedade de mensagem de contexto de retorno de chamada é recuperada com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  id: TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  langs:
  - csharp
  name: TryGet(MessageProperties,CallbackContextMessageProperty)
  nameWithType: CallbackContextMessageProperty.TryGet(MessageProperties,CallbackContextMessageProperty)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(MessageProperties,CallbackContextMessageProperty)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "Tenta obter um <xref href=&quot;System.ServiceModel.Channels.CallbackContextMessageProperty&quot;> </xref> instância das propriedades de mensagem especificada."
  syntax:
    content: public static bool TryGet (System.ServiceModel.Channels.MessageProperties properties, out System.ServiceModel.Channels.CallbackContextMessageProperty contextMessageProperty);
    parameters:
    - id: properties
      type: System.ServiceModel.Channels.MessageProperties
      description: "A coleção de propriedades de mensagem para obter a propriedade de mensagem de contexto de retorno de chamada de."
    - id: contextMessageProperty
      type: System.ServiceModel.Channels.CallbackContextMessageProperty
      description: "Uma referência para armazenar a instância de propriedade de mensagem de contexto de retorno de chamada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a propriedade de mensagem de contexto de retorno de chamada é recuperada com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackContextMessageProperty(IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(IDictionary<String,String>)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackContextMessageProperty(EndpointAddress)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.ServiceModel.EndpointAddress,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackContextMessageProperty(EndpointAddress,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(EndpointAddress,IDictionary<String,String>)
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackContextMessageProperty(String,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(String,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(String,IDictionary<String,String>)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor(System.Uri,System.Collections.Generic.IDictionary{System.String,System.String})
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackContextMessageProperty(Uri,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty(Uri,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackContextMessageProperty(Uri,IDictionary<String,String>)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(System.ServiceModel.Channels.Message)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: AddOrReplaceInMessage(Message)
  nameWithType: CallbackContextMessageProperty.AddOrReplaceInMessage(Message)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage(Message)
- uid: System.ServiceModel.Channels.Message
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Message
  nameWithType: Message
  fullName: System.ServiceModel.Channels.Message
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(System.ServiceModel.Channels.MessageProperties)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: AddOrReplaceInMessageProperties(MessageProperties)
  nameWithType: CallbackContextMessageProperty.AddOrReplaceInMessageProperties(MessageProperties)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties(MessageProperties)
- uid: System.ServiceModel.Channels.MessageProperties
  parent: System.ServiceModel.Channels
  isExternal: true
  name: MessageProperties
  nameWithType: MessageProperties
  fullName: System.ServiceModel.Channels.MessageProperties
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackAddress
  nameWithType: CallbackContextMessageProperty.CallbackAddress
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.Context
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: Context
  nameWithType: CallbackContextMessageProperty.Context
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.Context
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(System.Uri)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CreateCallbackAddress(Uri)
  nameWithType: CallbackContextMessageProperty.CreateCallbackAddress(Uri)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress(Uri)
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CreateCopy()
  nameWithType: CallbackContextMessageProperty.CreateCopy()
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy()
- uid: System.ServiceModel.Channels.IMessageProperty
  parent: System.ServiceModel.Channels
  isExternal: true
  name: IMessageProperty
  nameWithType: IMessageProperty
  fullName: System.ServiceModel.Channels.IMessageProperty
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(System.ServiceModel.EndpointAddress@,System.Collections.Generic.IDictionary{System.String,System.String}@)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: GetListenAddressAndContext(EndpointAddress,IDictionary<String,String>)
  nameWithType: CallbackContextMessageProperty.GetListenAddressAndContext(EndpointAddress,IDictionary<String,String>)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext(EndpointAddress,IDictionary<String,String>)
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.Name
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: Name
  nameWithType: CallbackContextMessageProperty.Name
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.Name
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.Message,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: TryGet(Message,CallbackContextMessageProperty)
  nameWithType: CallbackContextMessageProperty.TryGet(Message,CallbackContextMessageProperty)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(Message,CallbackContextMessageProperty)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty
  parent: System.ServiceModel.Channels
  isExternal: false
  name: CallbackContextMessageProperty
  nameWithType: CallbackContextMessageProperty
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(System.ServiceModel.Channels.MessageProperties,System.ServiceModel.Channels.CallbackContextMessageProperty@)
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: TryGet(MessageProperties,CallbackContextMessageProperty)
  nameWithType: CallbackContextMessageProperty.TryGet(MessageProperties,CallbackContextMessageProperty)
  fullName: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet(MessageProperties,CallbackContextMessageProperty)
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.#ctor*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackContextMessageProperty
  nameWithType: CallbackContextMessageProperty.CallbackContextMessageProperty
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessage*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: AddOrReplaceInMessage
  nameWithType: CallbackContextMessageProperty.AddOrReplaceInMessage
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.AddOrReplaceInMessageProperties*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: AddOrReplaceInMessageProperties
  nameWithType: CallbackContextMessageProperty.AddOrReplaceInMessageProperties
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CallbackAddress*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CallbackAddress
  nameWithType: CallbackContextMessageProperty.CallbackAddress
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.Context*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: Context
  nameWithType: CallbackContextMessageProperty.Context
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCallbackAddress*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CreateCallbackAddress
  nameWithType: CallbackContextMessageProperty.CreateCallbackAddress
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.CreateCopy*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: CreateCopy
  nameWithType: CallbackContextMessageProperty.CreateCopy
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.GetListenAddressAndContext*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: GetListenAddressAndContext
  nameWithType: CallbackContextMessageProperty.GetListenAddressAndContext
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.Name*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: Name
  nameWithType: CallbackContextMessageProperty.Name
- uid: System.ServiceModel.Channels.CallbackContextMessageProperty.TryGet*
  parent: System.ServiceModel.Channels.CallbackContextMessageProperty
  isExternal: false
  name: TryGet
  nameWithType: CallbackContextMessageProperty.TryGet
