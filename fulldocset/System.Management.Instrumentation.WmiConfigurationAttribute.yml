### YamlMime:ManagedReference
items:
- uid: System.Management.Instrumentation.WmiConfigurationAttribute
  id: WmiConfigurationAttribute
  children:
  - System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)
  - System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup
  - System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel
  - System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel
  - System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity
  - System.Management.Instrumentation.WmiConfigurationAttribute.Scope
  - System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction
  langs:
  - csharp
  name: WmiConfigurationAttribute
  nameWithType: WmiConfigurationAttribute
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute
  type: Class
  summary: "O atributo WmiConfiguration indica que um assembly contém o código que implementa um provedor WMI usando o modelo WMI.NET provedor extensões. O atributo aceita parâmetros que estabelecer a configuração de alto nível do provedor WMI do implementado.       Observação: as bibliotecas .NET do WMI são consideradas no estado final e não um desenvolvimento adicional, aprimoramentos ou atualizações estarão disponíveis não-relacionados para problemas de segurança que afetam essas bibliotecas. O [MI APIs](https://msdn.microsoft.com/en-us/library/jj152383%28v=vs.80%29.aspx) deve ser usado para todos os novos desenvolvimentos."
  remarks: "A tabela a seguir lista os parâmetros aceitos por esse atributo juntamente com que aspecto da configuração do provedor ele permite que você controle.      | Parâmetro | Configura |   |---------------|----------------|   | [Scope](~/add/includes/ajax-current-ext-md.md)| O namespace no qual o provedor expõe classes. |   | [NamespaceSecurity](~/add/includes/ajax-current-ext-md.md)|-a segurança (DACL) no namespace usado. |   | [HostingModel](~/add/includes/ajax-current-ext-md.md)|-modelo de hospedagem que será usado pelo provedor. |   | [IdentifyLevel](~/add/includes/ajax-current-ext-md.md)|-o modo de representação do provedor. |   | [HostingGroup](~/add/includes/ajax-current-ext-md.md)| O grupo de hospedagem que o provedor pertence. Esse parâmetro só se aplica a provedores de processo. |   | [SecurityRestriction](~/add/includes/ajax-current-ext-md.md)| A segurança (DACL) no provedor WMI. |"
  example:
  - "```  \n// Specify that this assembly contains code that implements a WMI  \n// Provider. Use the assembly:WmiConfiguration attribute to define  \n// the WMI namespace, the hosting model, and the impersonation mode  \n// of the WMI provider.  \n// The attribute below specifies that the class this provider  \n// exposes to WMI will be in the root/MortgageCalc namespace, will  \n// use the decoupled hosting model and will not allow the provider  \n// to impersonate its callers.  \n  \n[assembly: WmiConfiguration(\"root/MortgageCalc\",HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false)]  \n```"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly)]

      public sealed class WmiConfigurationAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: WmiConfigurationAttribute(String)
  nameWithType: WmiConfigurationAttribute.WmiConfigurationAttribute(String)
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.WmiConfigurationAttribute(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Inicializa uma nova instância do <xref:System.Management.WmiConfigurationAttribute>classe que especifica o namespace do WMI no qual o provedor WMI irá expor classes.</xref:System.Management.WmiConfigurationAttribute>"
  remarks: "Um provedor WMI deve expor suas classes em um namespace. É por isso que o construtor requer escopo como um parâmetro."
  syntax:
    content: public WmiConfigurationAttribute (string scope);
    parameters:
    - id: scope
      type: System.String
      description: "O namespace do WMI no qual o provedor vai expor classes. Por exemplo, &quot;root\\MyProviderNamespace&quot;."
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup
  id: HostingGroup
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: HostingGroup
  nameWithType: WmiConfigurationAttribute.HostingGroup
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Obtém ou define o grupo de hospedagem para o provedor WMI."
  remarks: "Grupos de hospedagem se aplicam somente aos provedores que são hospedados em processo. O valor é ignorado para provedores separados.       Um grupo de host é um conjunto de provedores no processo que são que todos atribuídos o mesmo nome de grupo de hospedagem. O nome do grupo de hospedagem é uma cadeia de caracteres que você define para agrupar logicamente os provedores. Todos os provedores em processo no mesmo grupo de hospedagem em execução no mesmo contexto de segurança são hospedados em uma única instância do processo de Wmiprvse.exe. Assim, os provedores que compartilham o mesmo contexto de segurança e de grupo de hospedagem compartilham o mesmo processo de host de serviço."
  example:
  - "In the following example, the <xref:System.Management.Instrumentation.WmiConfigurationAttribute> is used to indicate that the assembly it is contained in implements an in-process provider that runs under the NetworkService security context and is hosted in a instance of the Wmiprvse.exe process that also hosts any other in-process providers in the same hosting group that also run within the NetworkService security context.  \n  \n```  \n[assembly: WmiConfiguration(\"root\\\\NVPair\", HostingModel = ManagementHostingModel.NetworkService), HostingGroup = \"MyProviders\"]  \n```"
  syntax:
    content: public string HostingGroup { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.String>valor que indica o grupo de hospedagem para o provedor WMI.</xref:System.String>"
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel
  id: HostingModel
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: HostingModel
  nameWithType: WmiConfigurationAttribute.HostingModel
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Obtém ou define o modelo de hospedagem para o provedor WMI."
  remarks: "Provedores WMI podem ser hospedados por um aplicativo ou o serviço WMI. Provedores WMI hospedados por um aplicativo são chamados de provedores separados. Hospedados pelo serviço do WMI são chamados de provedores no processo. O valor do modelo de hospedagem determina os dois a hospedagem de modelo e, no caso de provedores em processo, a conta (contexto de segurança) em que o provedor é executado. Para obter mais detalhes sobre os valores possíveis de HostingModel, consulte <xref:System.Management.Instrumentation.ManagementHostingModel>.</xref:System.Management.Instrumentation.ManagementHostingModel>       Para saber mais sobre hospedagem de modelos, consulte o [provedor de hospedagem e segurança](http://go.microsoft.com/fwlink/?LinkId=100075) tópico no SDK do WMI no MSDN."
  example:
  - "In the following example, the <xref:System.Management.Instrumentation.WmiConfigurationAttribute> is used to indicate that the assembly it is contained in implements a provider that is exposed through the root\\NVPair namespace. Because the hosting model is not <xref:System.Management.Instrumentation.ManagementHostingModel>, it is an in-process provider. The value <xref:System.Management.Instrumentation.ManagementHostingModel> indicates that the in-process provider runs under the NetworkService security context.  \n  \n```  \n[assembly: WmiConfiguration(\"root\\\\NVPair\", HostingModel = ManagementHostingModel.NetworkService)]  \n```  \n  \n In the next example, the <xref:System.Management.Instrumentation.WmiConfigurationAttribute> is used to indicate that the assembly it is contained in implements a provider that is exposed through the root\\NVPair namespace. The value <xref:System.Management.Instrumentation.ManagementHostingModel> indicates that it is a decoupled provider.  \n  \n```  \n[assembly: WmiConfiguration(\"root\\\\NVPair\", HostingModel = ManagementHostingModel.Decoupled)]  \n```"
  syntax:
    content: public System.Management.Instrumentation.ManagementHostingModel HostingModel { get; set; }
    return:
      type: System.Management.Instrumentation.ManagementHostingModel
      description: "Um <xref href=&quot;System.Management.Instrumentation.ManagementHostingModel&quot;> </xref> valor que indica o modelo de host do provedor WMI."
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel
  id: IdentifyLevel
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: IdentifyLevel
  nameWithType: WmiConfigurationAttribute.IdentifyLevel
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Obtém ou define um valor que especifica se o provedor WMI pode representar seus chamadores. Se o valor for false, o provedor não pode representar e se o valor for true, o provedor pode representar."
  remarks: "Para obter mais informações, consulte o tópico &quot;Provedor de hospedagem e segurança&quot; na biblioteca do MSDN online em [http://www.msdn.com](http://www.msdn.com/)."
  example:
  - "The following example demonstrates how to use the IdentifyLevel parameter to indicate that the provider can impersonate its callers.  \n  \n```  \n[assembly: WmiConfiguration(\"root/MyProv\", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = true]  \n```"
  syntax:
    content: public bool IdentifyLevel { get; set; }
    return:
      type: System.Boolean
      description: "Um valor booliano que indica se um provedor pode ou não pode representar seus chamadores. Se o valor for false, o provedor não pode representar e se o valor for true, o provedor pode representar."
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity
  id: NamespaceSecurity
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: NamespaceSecurity
  nameWithType: WmiConfigurationAttribute.NamespaceSecurity
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Obtém ou define uma cadeia de caracteres de linguagem de definição do descritor de segurança (SDDL) que especifica o descritor de segurança no namespace no qual o provedor expõe objetos de gerenciamento."
  remarks: "Para obter mais informações sobre como representam os descritores de segurança no formato SDDL, consulte o [formato de cadeia de caracteres do descritor de segurança](http://go.microsoft.com/fwlink/?LinkId=100763) tópico na biblioteca MSDN online."
  example:
  - "The following example demonstrates how to use the NamespaceSecurity parameter to set the security descriptor on the root/SDTest namespace in which the provider implemented in this assembly exposes WMI classes.  \n  \n```  \n[assembly: WmiConfiguration(\"root/SDTest\", HostingModel = ManagementHostingModel.Decoupled, IdentifyLevel = false, NamespaceSecurity = \"O:BAG:BAD:(A;CI;0x60003;;;WD)\")]  \n```"
  syntax:
    content: public string NamespaceSecurity { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres SDDL que representa o descritor de segurança no namespace no qual o provedor expõe objetos de gerenciamento."
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.Scope
  id: Scope
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: Scope
  nameWithType: WmiConfigurationAttribute.Scope
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.Scope
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Obtém ou define o namespace do WMI no qual o provedor WMI expõe classes."
  remarks: "Um namespace do WMI é uma categoria de dentro do repositório WMI. O namespace root/cimv2 comumente usados contém classes que descrevem o modelo de informação comum, versão 2, definido pelo Consórcio Desktop Management Task Force (DMTF). Você só deve expor seus provedores no namespace se você expandindo o modelo CIM standand. Caso contrário, você deve criar um namespace apropriado que deixa claro para os usuários do tipo de classes WMI pode esperar encontrar no namespace."
  syntax:
    content: public string Scope { get; }
    return:
      type: System.String
      description: "Um <xref:System.String>valor que indica o namespace no qual o provedor WMI expõe classes.</xref:System.String>"
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.Scope*
  exceptions: []
  platform:
  - net462
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction
  id: SecurityRestriction
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  langs:
  - csharp
  name: SecurityRestriction
  nameWithType: WmiConfigurationAttribute.SecurityRestriction
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction
  type: Property
  assemblies:
  - System.Core
  namespace: System.Management.Instrumentation
  summary: "Obtém ou define um descritor de segurança para o provedor WMI. Para obter mais informações, consulte as informações de propriedade SecurityDescriptor no tópico &quot;__Win32Provider&quot; na biblioteca MSDN online em [http://www.msdn.com](http://www.msdn.com/)."
  syntax:
    content: public string SecurityRestriction { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.String>valor que contém o descritor de segurança para o provedor WMI.</xref:System.String>"
  overload: System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.#ctor(System.String)
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: WmiConfigurationAttribute(String)
  nameWithType: WmiConfigurationAttribute.WmiConfigurationAttribute(String)
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.WmiConfigurationAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: HostingGroup
  nameWithType: WmiConfigurationAttribute.HostingGroup
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: HostingModel
  nameWithType: WmiConfigurationAttribute.HostingModel
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel
- uid: System.Management.Instrumentation.ManagementHostingModel
  parent: System.Management.Instrumentation
  isExternal: false
  name: ManagementHostingModel
  nameWithType: ManagementHostingModel
  fullName: System.Management.Instrumentation.ManagementHostingModel
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: IdentifyLevel
  nameWithType: WmiConfigurationAttribute.IdentifyLevel
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: NamespaceSecurity
  nameWithType: WmiConfigurationAttribute.NamespaceSecurity
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.Scope
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: Scope
  nameWithType: WmiConfigurationAttribute.Scope
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.Scope
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: SecurityRestriction
  nameWithType: WmiConfigurationAttribute.SecurityRestriction
  fullName: System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.#ctor*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: WmiConfigurationAttribute
  nameWithType: WmiConfigurationAttribute.WmiConfigurationAttribute
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.HostingGroup*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: HostingGroup
  nameWithType: WmiConfigurationAttribute.HostingGroup
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.HostingModel*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: HostingModel
  nameWithType: WmiConfigurationAttribute.HostingModel
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.IdentifyLevel*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: IdentifyLevel
  nameWithType: WmiConfigurationAttribute.IdentifyLevel
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.NamespaceSecurity*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: NamespaceSecurity
  nameWithType: WmiConfigurationAttribute.NamespaceSecurity
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.Scope*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: Scope
  nameWithType: WmiConfigurationAttribute.Scope
- uid: System.Management.Instrumentation.WmiConfigurationAttribute.SecurityRestriction*
  parent: System.Management.Instrumentation.WmiConfigurationAttribute
  isExternal: false
  name: SecurityRestriction
  nameWithType: WmiConfigurationAttribute.SecurityRestriction
