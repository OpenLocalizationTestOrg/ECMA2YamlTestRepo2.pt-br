### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ViewStateException
  id: ViewStateException
  children:
  - System.Web.UI.ViewStateException.#ctor
  - System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.UI.ViewStateException.IsConnected
  - System.Web.UI.ViewStateException.Message
  - System.Web.UI.ViewStateException.Path
  - System.Web.UI.ViewStateException.PersistedState
  - System.Web.UI.ViewStateException.Referer
  - System.Web.UI.ViewStateException.RemoteAddress
  - System.Web.UI.ViewStateException.RemotePort
  - System.Web.UI.ViewStateException.UserAgent
  langs:
  - csharp
  name: ViewStateException
  nameWithType: ViewStateException
  fullName: System.Web.UI.ViewStateException
  type: Class
  summary: "Representa a exceção que é lançada quando o estado de exibição não pode ser carregado ou validado. Essa classe não pode ser herdada."
  remarks: "Se uma exceção ocorre quando a página carrega as informações de estado de exibição, a página cria um objeto de ViewStateException e passá-lo como uma exceção interna dentro de um <xref:System.Web.HttpException>exceção.</xref:System.Web.HttpException> O <xref:System.Web.HttpException>exceção é lançada novamente para ser tratada pelo aplicativo.</xref:System.Web.HttpException>       A classe ViewStateException armazena informações sobre a exceção no <xref:System.Web.UI.ViewStateException.Message%2A>propriedade.</xref:System.Web.UI.ViewStateException.Message%2A> Se a solicitação tiver permissão para acessar o <xref:System.Web.HttpRequest.ServerVariables%2A>propriedade, em seguida, o <xref:System.Web.UI.ViewStateException.Message%2A>propriedade contém os valores retornados do <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, e <xref:System.Web.UI.ViewStateException.Path%2A>Propriedades; caso contrário, o <xref:System.Web.UI.ViewStateException.Message%2A>propriedade contém uma mensagem de erro genérica do estado de exibição.</xref:System.Web.UI.ViewStateException.Message%2A> </xref:System.Web.UI.ViewStateException.Path%2A> </xref:System.Web.UI.ViewStateException.Referer%2A> </xref:System.Web.UI.ViewStateException.PersistedState%2A> </xref:System.Web.UI.ViewStateException.UserAgent%2A> </xref:System.Web.UI.ViewStateException.RemotePort%2A> </xref:System.Web.UI.ViewStateException.RemoteAddress%2A> </xref:System.Web.UI.ViewStateException.Message%2A> </xref:System.Web.HttpRequest.ServerVariables%2A>       Uma exceção de estado de exibição pode ser o resultado de um erro de validação de códigos de autenticação de mensagem (MAC). Se o atributo de página `enableViewStateMac` é definido como `true`, informações de estado de exibição são codificadas com um identificador de MAC. Quando as informações de estado de exibição são postadas para o servidor, a página verifica a codificação para garantir que ele não foi alterado pelo usuário. Se a página não é possível validar a codificação MAC nas informações de estado de exibição, ela irá gerar um <xref:System.Web.HttpException>exceção com o objeto ViewStateException como uma exceção interna.</xref:System.Web.HttpException>       Para validação de MAC seja bem-sucedida, as informações de estado de exibição devem ser hash pela mesma chave quando ele é enviado e recebido. Em um Web farm, a chave de máquina em cada servidor deve ser definida como uma chave comum."
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a ViewStateException object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the ViewStateException object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/t-system.web.ui.viewstat_0_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/t-system.web.ui.viewstat_0_1.vb)]"
  syntax:
    content: 'public sealed class ViewStateException : Exception'
  inheritance:
  - System.Exception
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.#ctor
  id: '#ctor'
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: ViewStateException()
  nameWithType: ViewStateException.ViewStateException()
  fullName: System.Web.UI.ViewStateException.ViewStateException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.ViewStateException&quot;> </xref> classe."
  syntax:
    content: public ViewStateException ();
    parameters: []
  overload: System.Web.UI.ViewStateException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.ViewStateException&quot;> </xref> classe com os dados serializados."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O objeto que contém os dados do objeto serializado."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "As informações contextuais sobre a origem ou destino."
  overload: System.Web.UI.ViewStateException.GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.IsConnected
  id: IsConnected
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: IsConnected
  nameWithType: ViewStateException.IsConnected
  fullName: System.Web.UI.ViewStateException.IsConnected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o cliente está atualmente conectado ao servidor."
  remarks: "Essa propriedade retorna o mesmo valor como chamar o <xref:System.Web.HttpResponse.IsClientConnected%2A>propriedade.</xref:System.Web.HttpResponse.IsClientConnected%2A>"
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_0_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_0_1.vb)]"
  syntax:
    content: public bool IsConnected { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cliente ainda está conectado ao servidor. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ViewStateException.IsConnected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.Message
  id: Message
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: Message
  nameWithType: ViewStateException.Message
  fullName: System.Web.UI.ViewStateException.Message
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém informações sobre a solicitação HTTP que resultou em uma exceção de estado de exibição de depuração."
  remarks: "Se a solicitação não tem permissão para acessar as variáveis de servidor, essa propriedade retorna uma mensagem de erro genérica do estado de exibição. Se a solicitação tem permissão para acessar variáveis de servidor, a propriedade de mensagem contém os valores retornados do <xref:System.Web.UI.ViewStateException.RemoteAddress%2A>, <xref:System.Web.UI.ViewStateException.RemotePort%2A>, <xref:System.Web.UI.ViewStateException.UserAgent%2A>, <xref:System.Web.UI.ViewStateException.PersistedState%2A>, <xref:System.Web.UI.ViewStateException.Referer%2A>, e <xref:System.Web.UI.ViewStateException.Path%2A>Propriedades.</xref:System.Web.UI.ViewStateException.Path%2A> </xref:System.Web.UI.ViewStateException.Referer%2A> </xref:System.Web.UI.ViewStateException.PersistedState%2A> </xref:System.Web.UI.ViewStateException.UserAgent%2A> </xref:System.Web.UI.ViewStateException.RemotePort%2A> </xref:System.Web.UI.ViewStateException.RemoteAddress%2A>"
  syntax:
    content: public override string Message { get; }
    return:
      type: System.String
      description: "Um <xref:System.String>que contém a mensagem formatada com informações sobre a exceção.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.Message*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.Path
  id: Path
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: Path
  nameWithType: ViewStateException.Path
  fullName: System.Web.UI.ViewStateException.Path
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o caminho da solicitação HTTP que resultou em uma exceção de estado de exibição."
  remarks: "Essa propriedade retorna o mesmo valor que o `PATH_INFO` variável o <xref:System.Web.HttpRequest.ServerVariables%2A>propriedade.</xref:System.Web.HttpRequest.ServerVariables%2A> Ele retorna a parte do caminho após o nome do host. Por exemplo, no http://www.contoso.com/virdir/page.html URL, caminho retornaria /virdir/page.html."
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_2_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_2_1.vb)]"
  syntax:
    content: public string Path { get; }
    return:
      type: System.String
      description: "Um <xref:System.String>que contém o caminho da solicitação.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.Path*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.PersistedState
  id: PersistedState
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: PersistedState
  nameWithType: ViewStateException.PersistedState
  fullName: System.Web.UI.ViewStateException.PersistedState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o conteúdo da cadeia de estado de exibição que, ao ler, causou a exceção de estado de exibição."
  syntax:
    content: public string PersistedState { get; }
    return:
      type: System.String
      description: "Um <xref:System.String>que causou a exceção de estado de exibição que contém o estado de exibição de valores.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.PersistedState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.Referer
  id: Referer
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: Referer
  nameWithType: ViewStateException.Referer
  fullName: System.Web.UI.ViewStateException.Referer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a URL da página que é vinculada à página onde ocorreu a exceção de estado de exibição."
  remarks: "Essa propriedade retorna o mesmo valor que o `HTTP_REFERER` variável o <xref:System.Web.HttpRequest.ServerVariables%2A>propriedade.</xref:System.Web.HttpRequest.ServerVariables%2A> O valor é uma cadeia de caracteres vazia (&quot;&quot;) se nenhuma solicitação anterior vinculada à página."
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_3_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_3_1.vb)]"
  syntax:
    content: public string Referer { get; }
    return:
      type: System.String
      description: "Um <xref:System.String>que contém o referenciador HTTP.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.Referer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.RemoteAddress
  id: RemoteAddress
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: RemoteAddress
  nameWithType: ViewStateException.RemoteAddress
  fullName: System.Web.UI.ViewStateException.RemoteAddress
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o endereço IP da solicitação HTTP que resultou em uma exceção de estado de exibição."
  remarks: "Essa propriedade retorna o mesmo valor que o `REMOTE_ADDR` variável o <xref:System.Web.HttpRequest.ServerVariables%2A>propriedade.</xref:System.Web.HttpRequest.ServerVariables%2A>"
  syntax:
    content: public string RemoteAddress { get; }
    return:
      type: System.String
      description: "Um <xref:System.String>que contém o endereço IP remoto do cliente.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.RemoteAddress*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.RemotePort
  id: RemotePort
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: RemotePort
  nameWithType: ViewStateException.RemotePort
  fullName: System.Web.UI.ViewStateException.RemotePort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o número de porta da solicitação HTTP que resultou em uma exceção de estado de exibição."
  remarks: "Essa propriedade retorna o mesmo valor que o `REMOTE_PORT` variável o <xref:System.Web.HttpRequest.ServerVariables%2A>propriedade.</xref:System.Web.HttpRequest.ServerVariables%2A>"
  syntax:
    content: public string RemotePort { get; }
    return:
      type: System.String
      description: "Um <xref:System.String>que contém o número de porta remota.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.RemotePort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ViewStateException.UserAgent
  id: UserAgent
  parent: System.Web.UI.ViewStateException
  langs:
  - csharp
  name: UserAgent
  nameWithType: ViewStateException.UserAgent
  fullName: System.Web.UI.ViewStateException.UserAgent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o tipo de navegador da solicitação HTTP que resultou em uma exceção de estado de exibição."
  remarks: "Essa propriedade retorna o mesmo valor que o `HTTP_USER_AGENT` variável o <xref:System.Web.HttpRequest.ServerVariables%2A>propriedade.</xref:System.Web.HttpRequest.ServerVariables%2A>"
  example:
  - "The following code example demonstrates how to implement a method that deserializes a base64-encoded string and returns an <xref:System.Collections.ICollection> collection of property settings. The <xref:System.Web.UI.ObjectStateFormatter.Deserialize%2A> method can throw an <xref:System.Web.HttpException> exception that contains a <xref:System.Web.UI.ViewStateException> object as an inner exception. The example shows how you can catch an <xref:System.Web.HttpException> exception and retrieve the properties from the <xref:System.Web.UI.ViewStateException> object.  \n  \n [!code-cs[System.Web.UI.ViewStateException#2](~/add/codesnippet/csharp/p-system.web.ui.viewstat_1_1.cs)]\n [!code-vb[System.Web.UI.ViewStateException#2](~/add/codesnippet/visualbasic/p-system.web.ui.viewstat_1_1.vb)]"
  syntax:
    content: public string UserAgent { get; }
    return:
      type: System.String
      description: "Um <xref:System.String>que contém o agente do usuário, que normalmente é o tipo de navegador.</xref:System.String>"
  overload: System.Web.UI.ViewStateException.UserAgent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Exception
  isExternal: false
  name: System.Exception
- uid: System.Web.UI.ViewStateException.#ctor
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: ViewStateException()
  nameWithType: ViewStateException.ViewStateException()
  fullName: System.Web.UI.ViewStateException.ViewStateException()
- uid: System.Web.UI.ViewStateException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Web.UI.ViewStateException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Web.UI.ViewStateException.IsConnected
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: IsConnected
  nameWithType: ViewStateException.IsConnected
  fullName: System.Web.UI.ViewStateException.IsConnected
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ViewStateException.Message
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Message
  nameWithType: ViewStateException.Message
  fullName: System.Web.UI.ViewStateException.Message
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ViewStateException.Path
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Path
  nameWithType: ViewStateException.Path
  fullName: System.Web.UI.ViewStateException.Path
- uid: System.Web.UI.ViewStateException.PersistedState
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: PersistedState
  nameWithType: ViewStateException.PersistedState
  fullName: System.Web.UI.ViewStateException.PersistedState
- uid: System.Web.UI.ViewStateException.Referer
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Referer
  nameWithType: ViewStateException.Referer
  fullName: System.Web.UI.ViewStateException.Referer
- uid: System.Web.UI.ViewStateException.RemoteAddress
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemoteAddress
  nameWithType: ViewStateException.RemoteAddress
  fullName: System.Web.UI.ViewStateException.RemoteAddress
- uid: System.Web.UI.ViewStateException.RemotePort
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemotePort
  nameWithType: ViewStateException.RemotePort
  fullName: System.Web.UI.ViewStateException.RemotePort
- uid: System.Web.UI.ViewStateException.UserAgent
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: UserAgent
  nameWithType: ViewStateException.UserAgent
  fullName: System.Web.UI.ViewStateException.UserAgent
- uid: System.Web.UI.ViewStateException.#ctor*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: ViewStateException
  nameWithType: ViewStateException.ViewStateException
- uid: System.Web.UI.ViewStateException.GetObjectData*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: GetObjectData
  nameWithType: ViewStateException.GetObjectData
- uid: System.Web.UI.ViewStateException.IsConnected*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: IsConnected
  nameWithType: ViewStateException.IsConnected
- uid: System.Web.UI.ViewStateException.Message*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Message
  nameWithType: ViewStateException.Message
- uid: System.Web.UI.ViewStateException.Path*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Path
  nameWithType: ViewStateException.Path
- uid: System.Web.UI.ViewStateException.PersistedState*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: PersistedState
  nameWithType: ViewStateException.PersistedState
- uid: System.Web.UI.ViewStateException.Referer*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: Referer
  nameWithType: ViewStateException.Referer
- uid: System.Web.UI.ViewStateException.RemoteAddress*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemoteAddress
  nameWithType: ViewStateException.RemoteAddress
- uid: System.Web.UI.ViewStateException.RemotePort*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: RemotePort
  nameWithType: ViewStateException.RemotePort
- uid: System.Web.UI.ViewStateException.UserAgent*
  parent: System.Web.UI.ViewStateException
  isExternal: false
  name: UserAgent
  nameWithType: ViewStateException.UserAgent
