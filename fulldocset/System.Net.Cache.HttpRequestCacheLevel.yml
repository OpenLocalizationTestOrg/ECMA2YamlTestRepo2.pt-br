### YamlMime:ManagedReference
items:
- uid: System.Net.Cache.HttpRequestCacheLevel
  id: HttpRequestCacheLevel
  children:
  - System.Net.Cache.HttpRequestCacheLevel.BypassCache
  - System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  - System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  - System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  - System.Net.Cache.HttpRequestCacheLevel.Default
  - System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  - System.Net.Cache.HttpRequestCacheLevel.Refresh
  - System.Net.Cache.HttpRequestCacheLevel.Reload
  - System.Net.Cache.HttpRequestCacheLevel.Revalidate
  langs:
  - csharp
  name: HttpRequestCacheLevel
  nameWithType: HttpRequestCacheLevel
  fullName: System.Net.Cache.HttpRequestCacheLevel
  type: Enum
  summary: "Especifica o comportamento de cache para recursos obtidos usando o protocolo HTTP (HTTP)."
  remarks: "Essa enumeração é usada para definir o nível de cache especificado pelo <xref:System.Net.Cache.HttpRequestCachePolicy>objetos.</xref:System.Net.Cache.HttpRequestCachePolicy>       Esse valor de BypassCache é o comportamento de cache padrão especificado no arquivo de configuração da máquina é fornecido com o .NET Framework. Nenhuma entrada é tomada de caches, adicionada aos caches ou removida de caches entre o cliente e servidor.       O <xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName>propriedade é usada para obter ou definir a política de cache padrão para <xref:System.Net.HttpWebRequest>instâncias.</xref:System.Net.HttpWebRequest> </xref:System.Net.HttpWebRequest.DefaultCachePolicy%2A?displayProperty=fullName> O <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>propriedade é usada para obter ou definir a política de cache padrão para um <xref:System.Net.WebRequest>instâncias.</xref:System.Net.WebRequest> </xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName> O <xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>propriedade é usada para obter ou definir a política de cache para uma solicitação específica.</xref:System.Net.WebRequest.CachePolicy%2A?displayProperty=fullName>       Uma cópia de um recurso só é adicionada ao cache se o fluxo de resposta para o recurso for recuperado e ler até o final do fluxo. Para que outra solicitação para o mesmo recurso pode usar uma cópia armazenada em cache, dependendo do nível de política de cache padrão para esta solicitação."
  example:
  - "The following code example sets the application domain's caching policy to Default.  \n  \n [!code-cpp[NCLSimpleCache#2](~/add/codesnippet/cpp/t-system.net.cache.httpr_1_1.cpp)]\n [!code-cs[NCLSimpleCache#2](~/add/codesnippet/csharp/t-system.net.cache.httpr_1_1.cs)]"
  syntax:
    content: public enum HttpRequestCacheLevel
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.BypassCache
  id: BypassCache
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: BypassCache
  nameWithType: HttpRequestCacheLevel.BypassCache
  fullName: System.Net.Cache.HttpRequestCacheLevel.BypassCache
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "De acordo com uma solicitação usando o servidor. Nenhuma entrada é tomada de caches, adicionada aos caches ou removida de caches entre o cliente e servidor. Nenhuma entrada é tomada de caches, adicionada aos caches ou removida de caches entre o cliente e servidor. Este é o comportamento de cache padrão especificado no arquivo de configuração da máquina é fornecido com o .NET Framework."
  syntax:
    content: BypassCache
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  id: CacheIfAvailable
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: CacheIfAvailable
  nameWithType: HttpRequestCacheLevel.CacheIfAvailable
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Atenda a uma solicitação para um recurso do cache se o recurso está disponível. Caso contrário, envia uma solicitação para um recurso para o servidor. Se o item solicitado está disponível em qualquer cache entre o cliente e o servidor, a solicitação pode ser atendida pelo cache intermediário."
  syntax:
    content: CacheIfAvailable
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  id: CacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: CacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Atenda a uma solicitação usando o recurso armazenado em cache localmente. não enviar uma solicitação para um item que não está no cache. Quando esse nível de política de cache é especificado, um <xref:System.Net.WebException>exceção é gerada se o item não está no cache do cliente.</xref:System.Net.WebException>"
  syntax:
    content: CacheOnly
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  id: CacheOrNextCacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: CacheOrNextCacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOrNextCacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "De acordo com uma solicitação para um recurso do cache do computador local ou um cache remoto na rede local. Se a solicitação não pode ser atendida, uma <xref:System.Net.WebException>exceção será lançada.</xref:System.Net.WebException> O protocolo de cache de HTTP, isso é conseguido usando o <xref uid=&quot;langword_csharp_only-if-cached&quot; name=&quot;only-if-cached&quot; href=&quot;&quot;> </xref> diretiva de controle de cache."
  syntax:
    content: CacheOrNextCacheOnly
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Default
  id: Default
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Default
  nameWithType: HttpRequestCacheLevel.Default
  fullName: System.Net.Cache.HttpRequestCacheLevel.Default
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Atenda a uma solicitação para um recurso usando a cópia armazenada em cache do recurso ou enviando uma solicitação para o recurso para o servidor. A ação realizada é determinada pela política de cache atual e a idade do conteúdo no cache. Este é o nível de cache que deve ser usado pela maioria dos aplicativos."
  syntax:
    content: Default
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  id: NoCacheNoStore
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: NoCacheNoStore
  nameWithType: HttpRequestCacheLevel.NoCacheNoStore
  fullName: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Nunca atende a uma solicitação, usando os recursos do cache e não recursos de cache. Se o recurso está presente no cache local, ele será removido. Esse nível de política indica para caches intermediários que eles devem remover o recurso. O protocolo de cache de HTTP, isso é conseguido usando a diretiva de controle de cache sem cache."
  syntax:
    content: NoCacheNoStore
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Refresh
  id: Refresh
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Refresh
  nameWithType: HttpRequestCacheLevel.Refresh
  fullName: System.Net.Cache.HttpRequestCacheLevel.Refresh
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "De acordo com uma solicitação usando o servidor ou um cache que não seja o cache local. Antes da solicitação pode ser atendida por um cache intermediário, o cache deve revalidar sua entrada em cache com o servidor. O protocolo de cache de HTTP, isso é conseguido usando o max-age = diretiva de controle de cache 0 e o cache não <xref uid=&quot;langword_csharp_Pragma&quot; name=&quot;Pragma&quot; href=&quot;&quot;> </xref> cabeçalho."
  syntax:
    content: Refresh
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Reload
  id: Reload
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Reload
  nameWithType: HttpRequestCacheLevel.Reload
  fullName: System.Net.Cache.HttpRequestCacheLevel.Reload
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "De acordo com uma solicitação usando o servidor. A resposta pode ser salvo no cache. O protocolo de cache de HTTP, isso é conseguido usando a diretiva de controle de cache sem cache e o cache não <xref uid=&quot;langword_csharp_Pragma&quot; name=&quot;Pragma&quot; href=&quot;&quot;> </xref> cabeçalho."
  syntax:
    content: Reload
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Cache.HttpRequestCacheLevel.Revalidate
  id: Revalidate
  parent: System.Net.Cache.HttpRequestCacheLevel
  langs:
  - csharp
  name: Revalidate
  nameWithType: HttpRequestCacheLevel.Revalidate
  fullName: System.Net.Cache.HttpRequestCacheLevel.Revalidate
  type: Field
  assemblies:
  - System
  namespace: System.Net.Cache
  summary: "Compara a cópia do recurso no cache com a cópia no servidor. Se a cópia no servidor for mais recente, ele é usado para satisfazer a solicitação e substituirá a cópia no cache. Se a cópia em cache é o mesmo que a cópia do servidor, a cópia armazenada em cache será usada. O protocolo de cache de HTTP, isso é conseguido usando uma solicitação condicional."
  syntax:
    content: Revalidate
    return:
      type: System.Net.Cache.HttpRequestCacheLevel
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Net.Cache.HttpRequestCacheLevel.BypassCache
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: BypassCache
  nameWithType: HttpRequestCacheLevel.BypassCache
  fullName: System.Net.Cache.HttpRequestCacheLevel.BypassCache
- uid: System.Net.Cache.HttpRequestCacheLevel
  parent: System.Net.Cache
  isExternal: false
  name: HttpRequestCacheLevel
  nameWithType: HttpRequestCacheLevel
  fullName: System.Net.Cache.HttpRequestCacheLevel
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: CacheIfAvailable
  nameWithType: HttpRequestCacheLevel.CacheIfAvailable
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheIfAvailable
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: CacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOnly
- uid: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: CacheOrNextCacheOnly
  nameWithType: HttpRequestCacheLevel.CacheOrNextCacheOnly
  fullName: System.Net.Cache.HttpRequestCacheLevel.CacheOrNextCacheOnly
- uid: System.Net.Cache.HttpRequestCacheLevel.Default
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Default
  nameWithType: HttpRequestCacheLevel.Default
  fullName: System.Net.Cache.HttpRequestCacheLevel.Default
- uid: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: NoCacheNoStore
  nameWithType: HttpRequestCacheLevel.NoCacheNoStore
  fullName: System.Net.Cache.HttpRequestCacheLevel.NoCacheNoStore
- uid: System.Net.Cache.HttpRequestCacheLevel.Refresh
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Refresh
  nameWithType: HttpRequestCacheLevel.Refresh
  fullName: System.Net.Cache.HttpRequestCacheLevel.Refresh
- uid: System.Net.Cache.HttpRequestCacheLevel.Reload
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Reload
  nameWithType: HttpRequestCacheLevel.Reload
  fullName: System.Net.Cache.HttpRequestCacheLevel.Reload
- uid: System.Net.Cache.HttpRequestCacheLevel.Revalidate
  parent: System.Net.Cache.HttpRequestCacheLevel
  isExternal: false
  name: Revalidate
  nameWithType: HttpRequestCacheLevel.Revalidate
  fullName: System.Net.Cache.HttpRequestCacheLevel.Revalidate
