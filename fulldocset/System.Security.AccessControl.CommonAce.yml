### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonAce
  id: CommonAce
  children:
  - System.Security.AccessControl.CommonAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Boolean,System.Byte[])
  - System.Security.AccessControl.CommonAce.BinaryLength
  - System.Security.AccessControl.CommonAce.GetBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.CommonAce.MaxOpaqueLength(System.Boolean)
  langs:
  - csharp
  name: CommonAce
  nameWithType: CommonAce
  fullName: System.Security.AccessControl.CommonAce
  type: Class
  summary: "Representa uma entrada de controle de acesso (ACE)."
  remarks: "A classe CommonAce representa os oito tipos mais comuns de ACE:- <xref:System.Security.AccessControl.AceType>- <xref:System.Security.AccessControl.AceType>- <xref:System.Security.AccessControl.AceType>- <xref:System.Security.AccessControl.AceType>- <xref:System.Security.AccessControl.AceType>- <xref:System.Security.AccessControl.AceType>- <xref:System.Security.AccessControl.AceType>- <xref:System.Security.AccessControl.AceType></xref:System.Security.AccessControl.AceType> </xref:System.Security.AccessControl.AceType> </xref:System.Security.AccessControl.AceType> </xref:System.Security.AccessControl.AceType> </xref:System.Security.AccessControl.AceType> </xref:System.Security.AccessControl.AceType> </xref:System.Security.AccessControl.AceType> </xref:System.Security.AccessControl.AceType>"
  syntax:
    content: 'public sealed class CommonAce : System.Security.AccessControl.QualifiedAce'
  inheritance:
  - System.Object
  - System.Security.AccessControl.GenericAce
  - System.Security.AccessControl.KnownAce
  - System.Security.AccessControl.QualifiedAce
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.GenericAce.AceFlags
  - System.Security.AccessControl.GenericAce.AceType
  - System.Security.AccessControl.GenericAce.AuditFlags
  - System.Security.AccessControl.GenericAce.Copy
  - System.Security.AccessControl.GenericAce.CreateFromBinaryForm(System.Byte[],System.Int32)
  - System.Security.AccessControl.GenericAce.Equals(System.Object)
  - System.Security.AccessControl.GenericAce.GetHashCode
  - System.Security.AccessControl.GenericAce.InheritanceFlags
  - System.Security.AccessControl.GenericAce.IsInherited
  - System.Security.AccessControl.GenericAce.op_Equality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.op_Inequality(System.Security.AccessControl.GenericAce,System.Security.AccessControl.GenericAce)
  - System.Security.AccessControl.GenericAce.PropagationFlags
  - System.Security.AccessControl.KnownAce.AccessMask
  - System.Security.AccessControl.KnownAce.SecurityIdentifier
  - System.Security.AccessControl.QualifiedAce.AceQualifier
  - System.Security.AccessControl.QualifiedAce.GetOpaque
  - System.Security.AccessControl.QualifiedAce.IsCallback
  - System.Security.AccessControl.QualifiedAce.OpaqueLength
  - System.Security.AccessControl.QualifiedAce.SetOpaque(System.Byte[])
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Boolean,System.Byte[])
  id: '#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Boolean,System.Byte[])'
  parent: System.Security.AccessControl.CommonAce
  langs:
  - csharp
  name: CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])
  nameWithType: CommonAce.CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])
  fullName: System.Security.AccessControl.CommonAce.CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> classe."
  syntax:
    content: public CommonAce (System.Security.AccessControl.AceFlags flags, System.Security.AccessControl.AceQualifier qualifier, int accessMask, System.Security.Principal.SecurityIdentifier sid, bool isCallback, byte[] opaque);
    parameters:
    - id: flags
      type: System.Security.AccessControl.AceFlags
      description: "Sinalizadores que especificam informações sobre a herança, a propagação de herança e auditar as condições para a nova entrada de controle de acesso (ACE)."
    - id: qualifier
      type: System.Security.AccessControl.AceQualifier
      description: "O uso da nova ACE."
    - id: accessMask
      type: System.Int32
      description: "A máscara de acesso para a ACE."
    - id: sid
      type: System.Security.Principal.SecurityIdentifier
      description: "O <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> associado com a nova ACE."
    - id: isCallback
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para especificar que o novo ACE é um tipo de retorno de chamada ACE."
    - id: opaque
      type: System.Byte[]
      description: "Dados opacos associados com a nova ACE. Dados opacos só são permitidos para tipos ACE de retorno de chamada. O comprimento dessa matriz não deve ser maior que o valor de retorno de <xref:System.Security.AccessControl.CommonAce.MaxOpaqueLength*>método.</xref:System.Security.AccessControl.CommonAce.MaxOpaqueLength*>"
  overload: System.Security.AccessControl.CommonAce.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAce.BinaryLength
  id: BinaryLength
  parent: System.Security.AccessControl.CommonAce
  langs:
  - csharp
  name: BinaryLength
  nameWithType: CommonAce.BinaryLength
  fullName: System.Security.AccessControl.CommonAce.BinaryLength
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Obtém o comprimento, em bytes, da representação binária da atual <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> objeto. Usar este comprimento com o <xref:System.Security.AccessControl.CommonAce.GetBinaryForm*>método antes do empacotamento a ACL em uma matriz binária.</xref:System.Security.AccessControl.CommonAce.GetBinaryForm*>"
  syntax:
    content: public override int BinaryLength { get; }
    return:
      type: System.Int32
      description: "O comprimento, em bytes, da representação binária da atual <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> objeto."
  overload: System.Security.AccessControl.CommonAce.BinaryLength*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAce.GetBinaryForm(System.Byte[],System.Int32)
  id: GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAce
  langs:
  - csharp
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CommonAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CommonAce.GetBinaryForm(Byte[],Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Controla o conteúdo a <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> o objeto para o início da matriz de bytes especificada no deslocamento especificado."
  syntax:
    content: public override void GetBinaryForm (byte[] binaryForm, int offset);
    parameters:
    - id: binaryForm
      type: System.Byte[]
      description: "A matriz de bytes no qual o conteúdo de <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> é realizar marshaling do objeto."
    - id: offset
      type: System.Int32
      description: "O deslocamento no qual iniciar a realização de marshaling."
  overload: System.Security.AccessControl.CommonAce.GetBinaryForm*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>offset</code>é negativa ou muito alto para permitir todo o <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> sejam copiados para o <code>binaryForm</code> matriz."
  platform:
  - net462
- uid: System.Security.AccessControl.CommonAce.MaxOpaqueLength(System.Boolean)
  id: MaxOpaqueLength(System.Boolean)
  parent: System.Security.AccessControl.CommonAce
  langs:
  - csharp
  name: MaxOpaqueLength(Boolean)
  nameWithType: CommonAce.MaxOpaqueLength(Boolean)
  fullName: System.Security.AccessControl.CommonAce.MaxOpaqueLength(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Obtém o comprimento máximo permitido de um BLOB de dados opaco para entradas de controle de acesso (ACEs) do retorno de chamada."
  syntax:
    content: public static int MaxOpaqueLength (bool isCallback);
    parameters:
    - id: isCallback
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para especificar que o <xref href=&quot;System.Security.AccessControl.CommonAce&quot;> </xref> objeto é um tipo de ACE de retorno de chamada."
    return:
      type: System.Int32
      description: "O comprimento permitido de um BLOB de dados opaco."
  overload: System.Security.AccessControl.CommonAce.MaxOpaqueLength*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.QualifiedAce
  isExternal: false
  name: System.Security.AccessControl.QualifiedAce
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Security.AccessControl.CommonAce.#ctor(System.Security.AccessControl.AceFlags,System.Security.AccessControl.AceQualifier,System.Int32,System.Security.Principal.SecurityIdentifier,System.Boolean,System.Byte[])
  parent: System.Security.AccessControl.CommonAce
  isExternal: false
  name: CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])
  nameWithType: CommonAce.CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])
  fullName: System.Security.AccessControl.CommonAce.CommonAce(AceFlags,AceQualifier,Int32,SecurityIdentifier,Boolean,Byte[])
- uid: System.Security.AccessControl.AceFlags
  parent: System.Security.AccessControl
  isExternal: false
  name: AceFlags
  nameWithType: AceFlags
  fullName: System.Security.AccessControl.AceFlags
- uid: System.Security.AccessControl.AceQualifier
  parent: System.Security.AccessControl
  isExternal: false
  name: AceQualifier
  nameWithType: AceQualifier
  fullName: System.Security.AccessControl.AceQualifier
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Principal.SecurityIdentifier
  parent: System.Security.Principal
  isExternal: false
  name: SecurityIdentifier
  nameWithType: SecurityIdentifier
  fullName: System.Security.Principal.SecurityIdentifier
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.AccessControl.CommonAce.BinaryLength
  parent: System.Security.AccessControl.CommonAce
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAce.BinaryLength
  fullName: System.Security.AccessControl.CommonAce.BinaryLength
- uid: System.Security.AccessControl.CommonAce.GetBinaryForm(System.Byte[],System.Int32)
  parent: System.Security.AccessControl.CommonAce
  isExternal: false
  name: GetBinaryForm(Byte[],Int32)
  nameWithType: CommonAce.GetBinaryForm(Byte[],Int32)
  fullName: System.Security.AccessControl.CommonAce.GetBinaryForm(Byte[],Int32)
- uid: System.Security.AccessControl.CommonAce.MaxOpaqueLength(System.Boolean)
  parent: System.Security.AccessControl.CommonAce
  isExternal: false
  name: MaxOpaqueLength(Boolean)
  nameWithType: CommonAce.MaxOpaqueLength(Boolean)
  fullName: System.Security.AccessControl.CommonAce.MaxOpaqueLength(Boolean)
- uid: System.Security.AccessControl.CommonAce.#ctor*
  parent: System.Security.AccessControl.CommonAce
  isExternal: false
  name: CommonAce
  nameWithType: CommonAce.CommonAce
- uid: System.Security.AccessControl.CommonAce.BinaryLength*
  parent: System.Security.AccessControl.CommonAce
  isExternal: false
  name: BinaryLength
  nameWithType: CommonAce.BinaryLength
- uid: System.Security.AccessControl.CommonAce.GetBinaryForm*
  parent: System.Security.AccessControl.CommonAce
  isExternal: false
  name: GetBinaryForm
  nameWithType: CommonAce.GetBinaryForm
- uid: System.Security.AccessControl.CommonAce.MaxOpaqueLength*
  parent: System.Security.AccessControl.CommonAce
  isExternal: false
  name: MaxOpaqueLength
  nameWithType: CommonAce.MaxOpaqueLength
