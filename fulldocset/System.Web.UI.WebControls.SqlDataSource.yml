### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.SqlDataSource
  id: SqlDataSource
  children:
  - System.Web.UI.WebControls.SqlDataSource.#ctor
  - System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)
  - System.Web.UI.WebControls.SqlDataSource.CacheDuration
  - System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy
  - System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency
  - System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter
  - System.Web.UI.WebControls.SqlDataSource.ConflictDetection
  - System.Web.UI.WebControls.SqlDataSource.ConnectionString
  - System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)
  - System.Web.UI.WebControls.SqlDataSource.DataSourceMode
  - System.Web.UI.WebControls.SqlDataSource.Delete
  - System.Web.UI.WebControls.SqlDataSource.DeleteCommand
  - System.Web.UI.WebControls.SqlDataSource.DeleteCommandType
  - System.Web.UI.WebControls.SqlDataSource.Deleted
  - System.Web.UI.WebControls.SqlDataSource.DeleteParameters
  - System.Web.UI.WebControls.SqlDataSource.Deleting
  - System.Web.UI.WebControls.SqlDataSource.EnableCaching
  - System.Web.UI.WebControls.SqlDataSource.FilterExpression
  - System.Web.UI.WebControls.SqlDataSource.Filtering
  - System.Web.UI.WebControls.SqlDataSource.FilterParameters
  - System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory
  - System.Web.UI.WebControls.SqlDataSource.GetView(System.String)
  - System.Web.UI.WebControls.SqlDataSource.GetViewNames
  - System.Web.UI.WebControls.SqlDataSource.Insert
  - System.Web.UI.WebControls.SqlDataSource.InsertCommand
  - System.Web.UI.WebControls.SqlDataSource.InsertCommandType
  - System.Web.UI.WebControls.SqlDataSource.Inserted
  - System.Web.UI.WebControls.SqlDataSource.Inserting
  - System.Web.UI.WebControls.SqlDataSource.InsertParameters
  - System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)
  - System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString
  - System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.SqlDataSource.ProviderName
  - System.Web.UI.WebControls.SqlDataSource.SaveViewState
  - System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.SqlDataSource.SelectCommand
  - System.Web.UI.WebControls.SqlDataSource.SelectCommandType
  - System.Web.UI.WebControls.SqlDataSource.Selected
  - System.Web.UI.WebControls.SqlDataSource.Selecting
  - System.Web.UI.WebControls.SqlDataSource.SelectParameters
  - System.Web.UI.WebControls.SqlDataSource.SortParameterName
  - System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency
  - System.Web.UI.WebControls.SqlDataSource.TrackViewState
  - System.Web.UI.WebControls.SqlDataSource.Update
  - System.Web.UI.WebControls.SqlDataSource.UpdateCommand
  - System.Web.UI.WebControls.SqlDataSource.UpdateCommandType
  - System.Web.UI.WebControls.SqlDataSource.Updated
  - System.Web.UI.WebControls.SqlDataSource.UpdateParameters
  - System.Web.UI.WebControls.SqlDataSource.Updating
  langs:
  - csharp
  name: SqlDataSource
  nameWithType: SqlDataSource
  fullName: System.Web.UI.WebControls.SqlDataSource
  type: Class
  summary: "Representa um banco de dados SQL para controles associados a dados."
  remarks: "Neste tópico:- [Introdução](#introduction)      -   [conexões de dados](#data_connections)      -   [executando operações de dados](#performing_data_operations)      -   [provedor de dados](#data_provider)      -   [cache](#caching)      -   [recursos adicionais](#additional_features)      -   [exibição da fonte de dados](#data_source_view)      -   [sintaxe declarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # controle SqlDataSource a introdução de fonte de dados representa dados em um banco de dados relacional do SQL para controles associados a dados.       Você pode usar o controle SqlDataSource em conjunto com um controle associado a dados para recuperar dados de um banco de dados relacional e para exibir, editar e classificar dados em uma página da Web com pouco ou nenhum código.      <a name=&quot;data_connections&quot;></a># # Conexões de dados para se conectar a um banco de dados, você deve definir o <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>propriedade como uma cadeia de caracteres de conexão válido.</xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> O SqlDataSource pode dar suporte a qualquer SQL banco de dados relacional que pode ser conectado usando um provedor ADO.NET, como o `SqlClient`, `OleDb`, `Odbc`, ou `OracleClient` provedor. Para obter informações sobre como proteger as cadeias de caracteres de conexão, consulte [How To: cadeias de caracteres de Conexão segura quando a fonte de dados usando controles](~/add/includes/ajax-current-ext-md.md).       Para recuperar dados de um banco de dados subjacente, defina o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>propriedade com uma consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Se o banco de dados associado a SqlDataSource dá suporte a procedimentos armazenados, você pode definir o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>propriedade para o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> A consulta SQL que você especificar também pode ser uma consulta parametrizada. Você pode adicionar <xref:System.Web.UI.WebControls.Parameter>objetos que estão associados com uma consulta parametrizada para o <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>coleção.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.Parameter> Para obter mais informações sobre consultas SQL parametrizadas e sua sintaxe, consulte [usando parâmetros com controles de fonte de dados para a filtragem](~/add/includes/ajax-current-ext-md.md).       O controle SqlDataSource recupera dados sempre que o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método é chamado.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Esse método fornece acesso programático para o método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> O <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método é chamado automaticamente por todos os controles que estão associados a SqlDataSource quando seus <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>método é chamado.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Se você definir o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A>propriedade de um controle associado a dados, o controle automaticamente associa aos dados da fonte de dados, conforme necessário.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSourceID%2A> Definindo o `DataSourceID` propriedade é o método recomendado para a associação de um <xref:System.Web.UI.WebControls.ObjectDataSource>controle a um controle associado a dados.</xref:System.Web.UI.WebControls.ObjectDataSource> Como alternativa, você pode usar o `DataSource` propriedade, mas, em seguida, você deve chamar explicitamente o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>método do controle associado a dados.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> Alguns exemplos de controles associados a dados que podem usar SqlDataSource <xref:System.Web.UI.WebControls.DataGrid>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.DataList>e <xref:System.Web.UI.WebControls.DropDownList>.</xref:System.Web.UI.WebControls.DropDownList> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DataGrid> Você pode chamar o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método programaticamente a qualquer momento para recuperar dados do banco de dados subjacente.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       Em cenários ASP.NET programáticos e declarativos, você pode definir o <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>propriedade do controle associado a dados para a ID do controle SqlDataSource.</xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> Você também pode atribuir uma instância da classe SqlDataSource para o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>propriedade do controle associado a dados.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> Para obter mais informações sobre o controle de associação de dados de associação para controles de fonte de dados, consulte [opções acesso a dados ASP.NET](http://msdn.microsoft.com/en-us/a5ff235e-397f-4bbe-9bfe-2720b6e7ab9d).      <a name=&quot;performing_data_operations&quot;></a># # Executar operações de dados, dependendo dos recursos de subjacente banco de dados do produto e a configuração da instância da classe SqlDataSource, você pode executar operações de dados, como atualizações, inserções e exclusões. Para executar essas operações de dados, defina o texto de comando apropriado e quaisquer parâmetros associados para a operação que você deseja executar. Por exemplo, para uma operação de atualização, defina o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>propriedade como uma cadeia de caracteres SQL ou o nome de um procedimento armazenado e adicione os parâmetros necessários para o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>coleção.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> A atualização é executada quando o <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>método é chamado explicitamente por seu código ou automaticamente por um controle associado a dados.</xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> O mesmo padrão geral é seguido para <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>e <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>operações.</xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> </xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>       As consultas SQL e os comandos que você use o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>, e <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>Propriedades podem ser parametrizadas.</xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Isso significa que o comando ou consulta pode usar espaços reservados em vez de valores literais e vincular os espaços reservados para o aplicativo ou as variáveis definidas pelo usuário. Você pode associar parâmetros em consultas SQL para variáveis de sessão, os valores que são passados na cadeia de caracteres de consulta para uma página Web Forms, os valores de propriedade de outros controles de servidor e muito mais. Para obter mais informações sobre como usar parâmetros em consultas SQL com o SqlDataSource, consulte [usando parâmetros com controles de fonte de dados para a filtragem](../Topic/Using%20Parameters%20with%20Data%20Source%20Controls%20for%20Filtering.md) e [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Por padrão, se um dos parâmetros é `null` quando você executa um `Select` de comando, nenhum dado será retornado e nenhuma exceção será lançada. Você pode alterar esse comportamento, definindo a <xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>propriedade `false`.</xref:System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter%2A>      <a name=&quot;data_provider&quot;></a># # Dados provedor por padrão, o controle SqlDataSource funciona com o .NET Framework Data Provider para SQL Server, mas SqlDataSource não é Microsoft SQL Server específico. Você pode conectar o controle SqlDataSource com qualquer produto de banco de dados para o qual há um provedor gerenciado do ADO.NET. Quando usado com o <xref:System.Data.OleDb?displayProperty=fullName>provedor, o SqlDataSource pode trabalhar com qualquer banco de dados compatíveis com OLE DB.</xref:System.Data.OleDb?displayProperty=fullName> Quando usado com o <xref:System.Data.Odbc?displayProperty=fullName>provedor, o SqlDataSource pode ser usado com qualquer driver ODBC e o banco de dados, inclusive IBM DB2, MySQL e PostgreSQL.</xref:System.Data.Odbc?displayProperty=fullName> Quando usado com o <xref:System.Data.OracleClient?displayProperty=fullName>provedor, o SqlDataSource pode trabalhar com bancos de dados Oracle 8.1.7 e versões posteriores.</xref:System.Data.OracleClient?displayProperty=fullName> A lista de provedores permitidos é registrada no `DbProviderFactories` seção do arquivo de configuração, ou no arquivo Machine. config ou Web. config. Para obter mais informações, consulte [selecionando dados usando o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;caching&quot;></a># # Cache se você exibir os dados em sua página usando um controle SqlDataSource, você pode aumentar o desempenho da página, usando os recursos do controle de fonte de dados de cache de dados. O cache reduz a carga de processamento nos servidores de banco de dados, às custas de memória no servidor Web. Na maioria dos casos, isso é uma boa troca. O SqlDataSource automaticamente os dados em cache quando o <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>estiver definida como `true` e o <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>propriedade é definida como o número de segundos que o cache armazena os dados antes da entrada de cache é descartada.</xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> Você também pode especificar um <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>e um recurso opcional <xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A>valor.</xref:System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>      <a name=&quot;additional_features&quot;></a># # Mais recursos e o SqlDataSource fornece recursos adicionais, conforme listado na tabela a seguir.      | Recurso | Requisitos de |   |----------------|------------------|   | Cache | Defina a propriedade <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>como o valor de <xref:System.Web.UI.WebControls.SqlDataSourceMode>, a propriedade <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>para `true`e o <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>e propriedades de <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>de acordo com o comportamento de cache desejado para os dados armazenados em cache. |   | Excluindo | Definir o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>propriedade para uma instrução SQL usada para excluir dados.</xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> Essa instrução normalmente é parametrizada. |   | Filtragem | Definir o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>propriedade para o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> Defina a propriedade <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>como uma expressão de filtragem usada para filtrar os dados quando o método <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>é chamado. |   | Inserindo | Definir o <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>propriedade para uma instrução SQL usada para inserir dados.</xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Essa instrução normalmente é parametrizada. |   | Paginação | Não há suportada atualmente por SqlDataSource, no entanto, alguns controles associados a dados, como <xref:System.Web.UI.WebControls.GridView>, oferecem suporte à paginação quando você definir a propriedade <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>como o valor de <xref:System.Web.UI.WebControls.SqlDataSourceMode>. |   | Selecionar | Defina a propriedade <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>como uma instrução SQL usada para recuperar dados. |   | Classificando | Defina a propriedade <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>para <xref:System.Web.UI.WebControls.SqlDataSourceMode>. |   | Atualizando | Definir o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>propriedade para uma instrução SQL usada para atualizar dados.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Web.UI.WebControls.GridView> Essa instrução normalmente é parametrizada. |      <a name=&quot;data_source_view&quot;> </a> # # Dados de origem visualizar como com todos os controles de fonte de dados, o controle SqlDataSource está associado uma classe de exibição de fonte de dados. O controle SqlDataSource tem apenas um associado <xref:System.Web.UI.WebControls.SqlDataSourceView>, e sempre é denominada `Table`.</xref:System.Web.UI.WebControls.SqlDataSourceView>       Não há nenhum processamento visual do controle SqlDataSource; ele é implementado como um controle de forma que você pode criá-lo declarativamente e, opcionalmente, para permitir que ele participe de gerenciamento de estado. Como resultado, o SqlDataSource não oferece suporte a recursos visuais, como aqueles que são fornecidos pelo <xref:System.Web.UI.DataSourceControl.EnableTheming%2A>ou <xref:System.Web.UI.DataSourceControl.SkinID%2A>propriedade.</xref:System.Web.UI.DataSourceControl.SkinID%2A> </xref:System.Web.UI.DataSourceControl.EnableTheming%2A>      <a name=&quot;declarative_syntax&quot;></a>    ## Declarative Syntax      ```   <asp:SqlDataSource       CacheDuration=&quot;string|Infinite&quot;       CacheExpirationPolicy=&quot;Absolute|Sliding&quot;       CacheKeyDependency=&quot;string&quot;       CancelSelectOnNullParameter=&quot;True|False&quot;       ConflictDetection=&quot;OverwriteChanges|CompareAllValues&quot;       ConnectionString=&quot;string&quot;       DataSourceMode=&quot;DataReader|DataSet&quot;       DeleteCommand=&quot;string&quot;       DeleteCommandType=&quot;Text|StoredProcedure&quot;       EnableCaching=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       FilterExpression=&quot;string&quot;       ID=&quot;string&quot;       InsertCommand=&quot;string&quot;       InsertCommandType=&quot;Text|StoredProcedure&quot;       OldValuesParameterFormatString=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDeleted=&quot;Deleted event handler&quot;       OnDeleting=&quot;Deleting event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnFiltering=&quot;Filtering event handler&quot;       OnInit=&quot;Init event handler&quot;       OnInserted=&quot;Inserted event handler&quot;       OnInserting=&quot;Inserting event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnSelected=&quot;Selected event handler&quot;       OnSelecting=&quot;Selecting event handler&quot;       OnUnload=&quot;Unload event handler&quot;       OnUpdated=&quot;Updated event handler&quot;       OnUpdating=&quot;Updating event handler&quot;       ProviderName=&quot;string|System.Data.Odbc|System.Data.OleDb|           System.Data.OracleClient|System.Data.SqlClient|           Microsoft.SqlServerCe.Client&quot;       runat=&quot;server&quot;       SelectCommand=&quot;string&quot;       SelectCommandType=&quot;Text|StoredProcedure&quot;       SkinID=&quot;string&quot;       SortParameterName=&quot;string&quot;       SqlCacheDependency=&quot;string&quot;       UpdateCommand=&quot;string&quot;       UpdateCommandType=&quot;Text|StoredProcedure&quot;       Visible=&quot;True|False&quot;   >           <DeleteParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </DeleteParameters>           <FilterParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </FilterParameters>           <InsertParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </InsertParameters>           <SelectParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </SelectParameters>           <UpdateParameters>                   <asp:ControlParameter                       ControlID=&quot;string&quot;                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:CookieParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       CookieName=&quot;string&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:FormParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       FormField=&quot;string&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:Parameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:ProfileParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       PropertyName=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:QueryStringParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       QueryStringField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />                   <asp:SessionParameter                       ConvertEmptyStringToNull=&quot;True|False&quot;                       DefaultValue=&quot;string&quot;                       Direction=&quot;Input|Output|InputOutput|ReturnValue&quot;                       Name=&quot;string&quot;                       SessionField=&quot;string&quot;                       Size=&quot;integer&quot;                       Type=&quot;Empty|Object|DBNull|Boolean|Char|SByte|                           Byte|Int16|UInt16|Int32|UInt32|Int64|UInt64|                           Single|Double|Decimal|DateTime|String&quot;                   />           </UpdateParameters>   </asp:SqlDataSource>   ```"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192424).  \n  \n This section contains four code examples:  \n  \n-   The first code example demonstrates how to display data from SQL Server in a <xref:System.Web.UI.WebControls.GridView> control using declarative syntax.  \n  \n-   The second code example demonstrates how to display data from an ODBC-compliant database in a <xref:System.Web.UI.WebControls.GridView> control using declarative syntax.  \n  \n-   The third code example demonstrates how to display and update data in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n-   The fourth code example demonstrates how to display and update data in a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n    > [!NOTE]\n    >  These examples show how to use declarative syntax for data access. For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example demonstrates how to use a SqlDataSource control declaratively to retrieve data from SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_58_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_58_1.aspx)]  \n  \n The following code example demonstrates how to use a SqlDataSource control declaratively to retrieve data from an ODBC-compliant database and display it in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is the name of the .NET Framework Data Provider for ODBC, which is <xref:System.Data.Odbc?displayProperty=fullName>.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_58_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_3odbc#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_58_2.aspx)]  \n  \n The following code example demonstrates a common display and update scenario with the <xref:System.Web.UI.WebControls.GridView> control. As with the previous examples, data from the Northwind database is displayed in the <xref:System.Web.UI.WebControls.GridView> control. Additionally, because an <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is specified and the <xref:System.Web.UI.WebControls.GridView.AutoGenerateEditButton%2A> property is set to `true`, you can edit and update the records with no additional code. The <xref:System.Web.UI.WebControls.GridView> control automatically handles adding parameters to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method when the **Update** button in the <xref:System.Web.UI.WebControls.GridView> control is clicked.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_58_3.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_5sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_58_3.aspx)]  \n  \n The following code example demonstrates a common display and update scenario with the <xref:System.Web.UI.WebControls.DropDownList> and <xref:System.Web.UI.WebControls.TextBox> controls. The <xref:System.Web.UI.WebControls.DropDownList> control does not automatically add update parameters to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection nor call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method, so you must do so. The update parameters are specified declaratively and you can add an event handler to perform the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> operation when an event is raised.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_58_4.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_58_4.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Selecting")]

      [System.ComponentModel.DefaultProperty("SelectQuery")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.SqlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.SqlDataSource))]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class SqlDataSource : System.Web.UI.DataSourceControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.DataSourceControl
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.DataSourceControl.ClientID
  - System.Web.UI.DataSourceControl.ClientIDMode
  - System.Web.UI.DataSourceControl.Controls
  - System.Web.UI.DataSourceControl.CreateControlCollection
  - System.Web.UI.DataSourceControl.EnableTheming
  - System.Web.UI.DataSourceControl.FindControl(System.String)
  - System.Web.UI.DataSourceControl.Focus
  - System.Web.UI.DataSourceControl.HasControls
  - System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)
  - System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.DataSourceControl.SkinID
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.DataSourceControl.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SqlDataSource()
  nameWithType: SqlDataSource.SqlDataSource()
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlDataSource()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> classe."
  syntax:
    content: public SqlDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SqlDataSource(String,String)
  nameWithType: SqlDataSource.SqlDataSource(String,String)
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlDataSource(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> classe com a cadeia de conexão especificado e o comando Select."
  remarks: "Como produtos de banco de dados diferente usam tipos diferentes de SQL, a sintaxe para `selectCommand` depende do provedor ADO.NET atual que está sendo usado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se a cadeia de caracteres SQL é uma consulta parametrizada ou um comando, o espaço reservado do parâmetro também depende do provedor ADO.NET que está sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o espaço reservado do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou o <xref:System.Data.OleDb?displayProperty=fullName>, o espaço reservado do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       O <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>valor pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>"
  example:
  - "The following code example demonstrates how to create a <xref:System.Web.UI.WebControls.SqlDataSource> control using the SqlDataSource constructor. The example is unusual in that the <xref:System.Web.UI.WebControls.SqlDataSource> control is being used not on a Web Forms page, but in the implementation of a middle-tier object as a simple way for a business object to interact with a database. The example uses a connection string that is stored in the Web.config file.  \n  \n This code example is part of a larger example provided for the <xref:System.Web.UI.WebControls.ObjectDataSource> class.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#3](~/add/codesnippet/csharp/m-system.web.ui.webcontr_142_1.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_142_1.vb)]"
  syntax:
    content: public SqlDataSource (string connectionString, string selectCommand);
    parameters:
    - id: connectionString
      type: System.String
      description: "A cadeia de conexão usada para se conectar ao banco de dados subjacente."
    - id: selectCommand
      type: System.String
      description: "A consulta SQL usada para recuperar dados do banco de dados subjacente. Se a consulta SQL é uma cadeia de caracteres SQL com parâmetros, você precisa adicionar <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> objetos para o <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>coleção.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>"
  overload: System.Web.UI.WebControls.SqlDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SqlDataSource(String,String,String)
  nameWithType: SqlDataSource.SqlDataSource(String,String,String)
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlDataSource(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> classe com a cadeia de conexão especificado e o comando Select."
  remarks: "Como produtos de banco de dados diferente usam tipos diferentes de SQL, a sintaxe de `selectCommand` depende do provedor ADO.NET atual que está sendo usado, que é identificado pelo `providerName` parâmetro. Se a cadeia de caracteres SQL é uma consulta parametrizada ou um comando, o espaço reservado do parâmetro também depende do provedor ADO.NET que está sendo usado. Por exemplo, se o provedor é <xref:System.Data.SqlClient?displayProperty=fullName>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o espaço reservado do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou o <xref:System.Data.OleDb?displayProperty=fullName>, o espaço reservado do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       O <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>propriedade pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>"
  syntax:
    content: public SqlDataSource (string providerName, string connectionString, string selectCommand);
    parameters:
    - id: providerName
      type: System.String
      description: "O nome do provedor de dados que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> usa. Se nenhum provedor foi definido, o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> usa o provedor ADO.NET para o Microsoft SQL Server, por padrão."
    - id: connectionString
      type: System.String
      description: "A cadeia de conexão usada para se conectar ao banco de dados subjacente."
    - id: selectCommand
      type: System.String
      description: "A consulta SQL usada para recuperar dados do banco de dados subjacente. Se a consulta SQL é uma cadeia de caracteres SQL com parâmetros, você precisa adicionar <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> objetos para o <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>coleção.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>"
  overload: System.Web.UI.WebControls.SqlDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.CacheDuration
  id: CacheDuration
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: CacheDuration
  nameWithType: SqlDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.SqlDataSource.CacheDuration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o período de tempo, em segundos, que o controle de fonte de dados armazena em cache os dados recuperados com o <xref:System.Web.UI.WebControls.SqlDataSource.Select*>método.</xref:System.Web.UI.WebControls.SqlDataSource.Select*>"
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSource>controle oferece suporte ao cache de dados.</xref:System.Web.UI.WebControls.SqlDataSource> Enquanto os dados em cache, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método recupera dados do cache em vez de banco de dados subjacente.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Quando o cache expira, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método recupera dados do banco de dados subjacente e os armazena em cache os dados novamente.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       O <xref:System.Web.UI.WebControls.SqlDataSource>controle automaticamente os dados em cache quando o <xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A>estiver definida como `true` e a propriedade CacheDuration é definida como um valor maior que 0, que indica o número de segundos que o cache armazena os dados antes da entrada de cache é descartada.</xref:System.Web.UI.WebControls.SqlDataSource.EnableCaching%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Um valor de 0 indica um cache infinitamente longo.       O comportamento do cache é determinado por uma combinação da duração e o <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> Se o <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>estiver definida como o <xref:System.Web.UI.DataSourceCacheExpiry>valor, o <xref:System.Web.UI.WebControls.SqlDataSource>armazena em cache dados a primeira operação de recuperação de dados, ele mantém na memória para, no máximo, a quantidade de tempo que é especificado pela propriedade CacheDuration.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> Os dados podem ser liberados antes da hora de duração, se a memória é necessária. Em seguida, o cache é atualizado durante a próxima operação. Se o <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>estiver definida como o <xref:System.Web.UI.DataSourceCacheExpiry>valor, o controle de fonte de dados armazena em cache dados a primeira operação de recuperação de dados, mas redefine a janela de tempo que mantém o cache para cada operação subsequente.</xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> O cache expira, se não houver nenhuma atividade de uma vez que é igual ao valor CacheDuration desde a última <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>operação.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       O <xref:System.Web.UI.WebControls.SqlDataSource>controle pode armazenar em cache dados somente quando ele está em <xref:System.Web.UI.WebControls.SqlDataSourceMode>modo.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource> Um <xref:System.NotSupportedException>exceção é lançada pelo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método, se o <xref:System.Web.UI.WebControls.SqlDataSource>controle está definido o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor e o cache também está habilitado.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.NotSupportedException>      > [!IMPORTANT] > Quando você estiver usando representação de cliente com a autenticação do Microsoft Windows, os dados em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que mais de um usuário para acessar os dados, e você desejar cada recuperação para os dados a ser verificada pelas configurações de segurança para o banco de dados, não use o cache."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, with data caching enabled. The CacheDuration is set to 20 seconds and, because the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry> value by default, users of this page will see fresh data every 20 seconds.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_599_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_599_1.aspx)]"
  syntax:
    content: public virtual int CacheDuration { get; set; }
    return:
      type: System.Int32
      description: "O número de segundos que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> armazena em cache os resultados de uma <xref:System.Web.UI.WebControls.SqlDataSource.Select*>operação.</xref:System.Web.UI.WebControls.SqlDataSource.Select*> O padrão é 0. O valor não pode ser negativo."
  overload: System.Web.UI.WebControls.SqlDataSource.CacheDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy
  id: CacheExpirationPolicy
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: CacheExpirationPolicy
  nameWithType: SqlDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o comportamento de expiração de cache que, quando combinados com a duração, descreve o comportamento do cache que usa o controle de fonte de dados."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSource>controle oferece suporte ao cache de dados.</xref:System.Web.UI.WebControls.SqlDataSource> Enquanto os dados em cache, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método recupera dados do cache em vez de banco de dados subjacente.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Quando o cache expira, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método recupera dados do banco de dados subjacente e os armazena em cache os dados novamente.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       O comportamento do cache é determinado por uma combinação da <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>e configurações CacheExpirationPolicy.</xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> Se a propriedade CacheExpirationPolicy é definida como o <xref:System.Web.UI.DataSourceCacheExpiry>valor, o <xref:System.Web.UI.WebControls.SqlDataSource>armazena em cache dados a primeira operação de recuperação de dados, mantém na memória pelo período de tempo especificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>propriedade e, em seguida, descarta-lo depois que o tempo expirou.</xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> Em seguida, o cache é atualizado durante a próxima operação. Se a propriedade CacheExpirationPolicy é definida como o <xref:System.Web.UI.DataSourceCacheExpiry>valor, o controle de fonte de dados armazena em cache dados a primeira operação de recuperação de dados, mas redefine a janela de tempo que mantém o cache para cada operação subsequente.</xref:System.Web.UI.DataSourceCacheExpiry> O cache expira, se não houver nenhuma atividade por um período que seja igual de <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>valor desde a última <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>operação.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>       O <xref:System.Web.UI.WebControls.SqlDataSource>controle pode armazenar em cache dados somente quando estiver no <xref:System.Web.UI.WebControls.SqlDataSourceMode>modo.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource> Um <xref:System.NotSupportedException>exceção é lançada pelo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método, se o <xref:System.Web.UI.WebControls.SqlDataSource>controle está definido o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor e o cache também está habilitado.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.NotSupportedException>      > [!IMPORTANT] > Quando você estiver usando representação de cliente com a autenticação do Microsoft Windows, os dados em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que mais de um usuário para acessar os dados, e você desejar cada recuperação para os dados a ser verificada pelas configurações de segurança para o banco de dados, não use o cache."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, with data caching enabled. Because the CacheExpirationPolicy property is set to the <xref:System.Web.UI.DataSourceCacheExpiry> value, users will not see fresh data even though the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> value is 20 seconds. The cached data is refreshed only if there is no activity on the page for more than 20 seconds since the last page load.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_249_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_19sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_249_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }
    return:
      type: System.Web.UI.DataSourceCacheExpiry
      description: "Uma da <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref> valores. O padrão é o <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency
  id: CacheKeyDependency
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: CacheKeyDependency
  nameWithType: SqlDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma dependência de chave definidas pelo usuário que está vinculada a dados de todos os objetos de cache que são criados pelo controle da fonte de dados. Todos os objetos de cache explicitamente expirados quando a chave tiver expirada."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSource>controle oferece suporte ao cache de dados.</xref:System.Web.UI.WebControls.SqlDataSource> Enquanto os dados em cache, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método recupera dados do cache em vez de banco de dados subjacente.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Quando o cache expira, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método recupera dados do banco de dados subjacente e os armazena em cache os dados novamente.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       Você pode definir a propriedade CacheKeyDependency para criar uma dependência entre todas as entradas de cache que são criados pelo <xref:System.Web.UI.WebControls.SqlDataSource>controle e a chave.</xref:System.Web.UI.WebControls.SqlDataSource> Você programaticamente pode expirar todas as entradas de cache a qualquer momento por meio da expiração da chave.       O <xref:System.Web.UI.WebControls.SqlDataSource>controle pode armazenar em cache dados somente quando estiver no <xref:System.Web.UI.WebControls.SqlDataSourceMode>modo.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource> Um <xref:System.NotSupportedException>exceção é lançada pelo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método, se o <xref:System.Web.UI.WebControls.SqlDataSource>controle está definido o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor e o cache também está habilitado.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.NotSupportedException>       Uma entrada de cache exclusivo é criada para cada combinação da <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>, <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A>, e <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>Propriedades.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Vários <xref:System.Web.UI.WebControls.SqlDataSource>controles podem usar as mesmas entradas de cache em cenários onde os controles de carregar os mesmos dados do mesmo banco de dados subjacente.</xref:System.Web.UI.WebControls.SqlDataSource>      > [!IMPORTANT] > Quando você estiver usando representação de cliente com a autenticação do Microsoft Windows, os dados em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que mais de um usuário para acessar os dados, e você desejar cada recuperação para os dados a ser verificada pelas configurações de segurança para o banco de dados, não use o cache."
  syntax:
    content: public virtual string CacheKeyDependency { get; set; }
    return:
      type: System.String
      description: "Uma chave que identifica todos os objetos de cache criado pelo <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter
  id: CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSource.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se uma operação de recuperação de dados é cancelada quando qualquer parâmetro que está contida no <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>coleção é avaliada como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>"
  remarks: "O valor a CancelSelectOnNullParameter propriedade é armazenado na exibição estado."
  syntax:
    content: public virtual bool CancelSelectOnNullParameter { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma operação de recuperação de dados é cancelada quando dentro de um parâmetro de <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*>coleção é avaliada como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters*> O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: SqlDataSource.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSource.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica como o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle executa as atualizações e exclusões quando dados em uma linha de base de banco de dados as alterações durante o tempo da operação."
  remarks: "A propriedade ConflictDetection determina se os parâmetros para os valores novos e antigos são aplicados para o `Update` método. Por exemplo, se o comando que é especificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>propriedade retorna um <xref:System.Data.DataTable>objeto com as colunas `Name` e `Number` e a propriedade ConflictDetection é definida como o <xref:System.Web.UI.ConflictOptions>valor, os parâmetros são criados para `Name` e `Number` para o `Update` método.</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> Se a propriedade ConflictDetection é definida como o <xref:System.Web.UI.ConflictOptions>valor, os parâmetros são criados para `Name`, `Number`, `original_Name`, e `original_Number`.</xref:System.Web.UI.ConflictOptions> (O nome exato dos parâmetros para os valores originais depende do <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>propriedade.)</xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> O <xref:System.Web.UI.WebControls.SqlDataSource>controle, em seguida, determina se o `Update` método especificado no <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>propriedade tem parâmetros que correspondam.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       Controle de simultaneidade é uma técnica de repositórios de dados usam para controlar como os dados é lida e alterados no repositório quando vários clientes estão acessando e manipulando os mesmos dados. Por exemplo, um cliente lê os dados e apresenta-as para um usuário, enquanto outro cliente lê os mesmos dados e apresenta-as para um usuário diferente. Se ambos os usuários atualizam os dados e enviá-lo para o armazenamento de dados, alguns resultados inesperados poderão ocorrer, pois ambos os clientes podem atualizar valores diferentes para os mesmos dados. Isso é considerado um conflito. Definindo a propriedade ConflictDetection o <xref:System.Web.UI.ConflictOptions>valor, o `Update` método pode comparar os valores antigos e novos para a fonte de dados original para detectar conflitos e tratá-los, conforme necessário.</xref:System.Web.UI.ConflictOptions>       A propriedade ConflictDetection delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>propriedade do <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>"
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "Uma da <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valores. O padrão é o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSource.ConflictDetection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.ConnectionString
  id: ConnectionString
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: ConnectionString
  nameWithType: SqlDataSource.ConnectionString
  fullName: System.Web.UI.WebControls.SqlDataSource.ConnectionString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia de caracteres de conexão específicos do provedor ADO.NET que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle usa para se conectar a um banco de dados subjacente."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSource>controle pode ser usado com uma variedade de provedores ADO.NET e a sintaxe da cadeia de conexão que é usada para se conectar a uma fonte de dados subjacente é específica ao provedor.</xref:System.Web.UI.WebControls.SqlDataSource>       Quando você configura um <xref:System.Web.UI.WebControls.SqlDataSource>controle, defina o <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade para o tipo de banco de dados (o padrão é <xref:System.Data.SqlClient?displayProperty=fullName>), e você definir a propriedade ConnectionString como uma cadeia de caracteres de conexão que inclui as informações necessárias para conectar-se ao banco de dados.</xref:System.Data.SqlClient?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> </xref:System.Web.UI.WebControls.SqlDataSource> O conteúdo de uma cadeia de caracteres de conexão são diferentes dependendo do tipo de banco de dados que está acessando o controle de fonte de dados. Por exemplo, o <xref:System.Web.UI.WebControls.SqlDataSource>controle requer um nome de servidor, nome do banco de dados (catálogo) e obter informações sobre como autenticar o usuário ao se conectar a um SQL Server.</xref:System.Web.UI.WebControls.SqlDataSource> Para obter informações sobre o conteúdo de cadeias de caracteres de conexão, consulte a <xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>propriedade de <xref:System.Data.SqlClient.SqlConnection>classe, a <xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A>propriedade para a <xref:System.Data.OracleClient.OracleConnection>classe de <xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A>propriedade de <xref:System.Data.OleDb.OleDbConnection>classe, ou a <xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A>propriedade para a <xref:System.Data.Odbc.OdbcConnection>classe.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcConnection.ConnectionString%2A> </xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbConnection.ConnectionString%2A> </xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleConnection.ConnectionString%2A> </xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlConnection.ConnectionString%2A>       Se você alterar a propriedade ConnectionString, o <xref:System.Web.UI.IDataSource.DataSourceChanged>é gerado, fazendo com que todos os controles que estão associados ao <xref:System.Web.UI.WebControls.SqlDataSource>controle para reassociar.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.IDataSource.DataSourceChanged>      > [!IMPORTANT] > Para obter informações sobre como armazenar uma cadeia de caracteres de conexão, consulte [How To: cadeias de Conexão segura quando a fonte de dados usando controles](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the ConnectionString property to connect to a Microsoft SQL Server database and display the results of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property in a <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates a more complex scenario, where a <xref:System.Web.UI.WebControls.SqlDataSource> control is used to display and update data in a password-protected Microsoft Access database. In each case, the `connectionStrings` element of the Web.config file is shown first, followed by the ASP.NET page that contains the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n The following code example demonstrates how to set the ConnectionString property to connect to a SQL Server database and display the results of the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_749_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_3sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_749_2.aspx)]  \n  \n The following code example demonstrates a more complex scenario than the preceding code example, where a <xref:System.Web.UI.WebControls.SqlDataSource> control is used to display and update data in a password-protected Access database. Because the <xref:System.Web.UI.WebControls.SqlDataSource> is used with Access, the <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> property is set to the <xref:System.Data.OleDb> provider, and the ConnectionString property is set to an appropriate connection string for a UNC-shared Access database. A <xref:System.Web.UI.WebControls.GridView> control displays orders with shipment dates. You can update an order by checking the appropriate check box, and then clicking the **Update** button.  \n  \n> [!IMPORTANT]\n>  This example includes a password in plain text only for illustration purposes. In a production application, connection strings that include passwords should be encrypted. For more information, see [Protecting Connection Information](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_749_3.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_22sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_749_3.aspx)]  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_749_4.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_22sql#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_749_4.aspx)]"
  syntax:
    content: public virtual string ConnectionString { get; set; }
    return:
      type: System.String
      description: "Um específicos do provedor de dados do .NET Framework de cadeia de caracteres que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> usa para se conectar ao banco de dados SQL que ele representa. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.SqlDataSource.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)
  id: CreateDataSourceView(System.String)
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: CreateDataSourceView(String)
  nameWithType: SqlDataSource.CreateDataSourceView(String)
  fullName: System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria um objeto de exibição de fonte de dados que está associado com o controle de fonte de dados."
  remarks: "Classes que derivam de <xref:System.Web.UI.WebControls.SqlDataSource>classe pode substituir o método CreateDataSourceView para retornar os objetos de exibição de fonte de dados fortemente tipados.</xref:System.Web.UI.WebControls.SqlDataSource>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.SqlDataSourceView CreateDataSourceView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "O nome da exibição da fonte de dados."
    return:
      type: System.Web.UI.WebControls.SqlDataSourceView
      description: "Um <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> que está associado a <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.DataSourceMode
  id: DataSourceMode
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: DataSourceMode
  nameWithType: SqlDataSource.DataSourceMode
  fullName: System.Web.UI.WebControls.SqlDataSource.DataSourceMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o modo de recuperação de dados que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle usa para buscar dados."
  remarks: "Identifica o modo de recuperação de dados como um <xref:System.Web.UI.WebControls.SqlDataSource>controle recupera dados do banco de dados subjacente.</xref:System.Web.UI.WebControls.SqlDataSource>       Quando a propriedade DataSourceMode está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor, os dados são carregados em um <xref:System.Data.DataSet>objeto e armazenado na memória no servidor.</xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.SqlDataSourceMode> Isso possibilita cenários em que a interface do usuário controles, como <xref:System.Web.UI.WebControls.GridView>, oferecem recursos de paginação, filtragem e classificação.</xref:System.Web.UI.WebControls.GridView>       Quando a propriedade DataSourceMode está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor, os dados são recuperados por um <xref:System.Data.IDataReader>objeto, que é um cursor de somente avanço, somente leitura.</xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceMode> O tipo específico do <xref:System.Data.IDataReader>objeto depende do provedor de dados na rede que o <xref:System.Web.UI.WebControls.SqlDataSource>usa, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> </xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.IDataReader> Por padrão, o <xref:System.Web.UI.WebControls.SqlDataSource>controle usa o provedor do Microsoft SQL Server, o <xref:System.Data.SqlClient?displayProperty=fullName>, e o leitor de dados é um <xref:System.Data.SqlClient.SqlDataReader>objeto.</xref:System.Data.SqlClient.SqlDataReader> </xref:System.Data.SqlClient?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource>       Se você alterar a propriedade DataSourceMode, o <xref:System.Web.UI.IDataSource.DataSourceChanged>é gerado, fazendo com que todos os controles que estão associados ao <xref:System.Web.UI.WebControls.SqlDataSource>para reassociar.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.IDataSource.DataSourceChanged>       O valor da propriedade DataSourceMode armazenados na exibição de estado."
  example:
  - "The following code example demonstrates how to set the DataSourceMode property of the <xref:System.Web.UI.WebControls.SqlDataSource> control to the <xref:System.Web.UI.WebControls.SqlDataSourceMode> value for a scenario with a <xref:System.Web.UI.WebControls.ListBox> control that requires no sorting, paging, nor filtering.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_5_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_5_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceMode DataSourceMode { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceMode
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref> valores. O padrão é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSource.DataSourceMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "A propriedade DataSourceMode não é um dos valores definidos no <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Delete
  id: Delete
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Delete()
  nameWithType: SqlDataSource.Delete()
  fullName: System.Web.UI.WebControls.SqlDataSource.Delete()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de exclusão usando a <> </> *> cadeia de caracteres SQL e os parâmetros que estão no <> </> *> coleção."
  remarks: "Antes da operação de exclusão é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Deleting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de uma operação de exclusão.       Após a conclusão da operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Deleted>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Deleted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleted%2A> Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento.       O método Delete é fornecido para o acesso programático para o `Delete` método. Se o <xref:System.Web.UI.WebControls.SqlDataSource>controle está associado um controle associado a dados, o controle de associação de dados chama automaticamente o **excluir** método.</xref:System.Web.UI.WebControls.SqlDataSource>       O método Delete delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A>método do <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.Delete%2A> Para executar a operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView>cria um <xref:System.Data.Common.DbCommand>objeto usando o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>texto e associados <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A>valores e, em seguida, executa o <xref:System.Data.Common.DbCommand>no banco de dados subjacente.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView>"
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database. Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control. You must explicitly declare the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> property and call the Delete method when using data-bound controls, such as the <xref:System.Web.UI.WebControls.DropDownList> (unlike other controls, such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call the Delete method on a data source control). In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private `OnDelete` event handler, which explicitly calls the Delete method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_3_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_3_1.aspx)]"
  syntax:
    content: public int Delete ();
    parameters: []
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas excluídas do banco de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSource.Delete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> não é possível estabelecer uma conexão com a fonte de dados subjacente."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteCommand
  id: DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: DeleteCommand
  nameWithType: SqlDataSource.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.DeleteCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia de caracteres SQL que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle usa para excluir dados do banco de dados subjacente."
  remarks: "DeleteCommand representa uma consulta SQL ou o nome de um procedimento armazenado e é usado pelo <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>método.</xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A>       Como produtos de banco de dados diferente usam tipos diferentes de SQL, a sintaxe da cadeia de caracteres SQL depende do provedor ADO.NET atual que está sendo usado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se a cadeia de caracteres SQL é uma consulta parametrizada ou um comando, a sintaxe do parâmetro também depende do provedor ADO.NET que está sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, a sintaxe do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou <xref:System.Data.OleDb?displayProperty=fullName>, o espaço reservado do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       A propriedade DeleteCommand pode ser uma cadeia de caracteres SQL ou procedimentos armazenados de nome de um procedimento armazenado, se o banco de dados oferece suporte.       A propriedade DeleteCommand delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommand%2A>      > [!IMPORTANT] > Para fins de segurança, DeleteCommand não é de propriedade armazenados na exibição de estado. Como é possível decodificar o conteúdo do estado de exibição no cliente, armazenando informações confidenciais sobre a estrutura de banco de dados no modo de exibição estado pode resultar em uma vulnerabilidade de divulgação de informações."
  example:
  - "The following code example demonstrates how to set the DeleteCommand text to delete an order from the Northwind database Orders table. Data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> renders a **Delete** button automatically when the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`. Additionally, when the **Delete** button is clicked, the <xref:System.Web.UI.WebControls.GridView> control automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteParameters%2A> collection and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method. Finally, because this code example deletes data, an event handler is added to attempt to back up the database to disk before the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_45_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_45_1.aspx)]"
  syntax:
    content: public string DeleteCommand { get; set; }
    return:
      type: System.String
      description: "Um SQL de cadeia de caracteres que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> usa para excluir dados."
  overload: System.Web.UI.WebControls.SqlDataSource.DeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteCommandType
  id: DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: DeleteCommandType
  nameWithType: SqlDataSource.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.DeleteCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o texto do <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand*>propriedade é uma instrução SQL ou o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand*>"
  remarks: "A propriedade DeleteCommandType delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteCommandType%2A>"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType DeleteCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores. O padrão é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSource.DeleteCommandType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Deleted
  nameWithType: SqlDataSource.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSource.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma operação de exclusão for concluída."
  remarks: "Manipule o evento excluído para examinar os valores de parâmetros de saída após uma operação de exclusão. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: SqlDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são usados pelo <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand*>propriedade o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto que está associado com o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle.</xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand*>"
  remarks: "Se o <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>propriedade contém uma consulta SQL parametrizada, a coleção DeleteParameters contém qualquer <xref:System.Web.UI.WebControls.Parameter>objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A>      > [!NOTE] > Certifique-se de que nenhum <xref:System.Web.UI.WebControls.BoundField>controles no controle associado a dados que você associar ao <xref:System.Web.UI.WebControls.SqlDataSource>controle têm nomes que correspondem a qualquer nome de parâmetro na coleção DeleteParameters.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.BoundField> Parâmetros que têm o mesmo nome como campos associados são excluídos do comando SQL e um erro &quot;não foi fornecido pelo parâmetro&quot; podem resultar.       Se o <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>estiver definida como o <xref:System.Web.UI.ConflictOptions>valor, os parâmetros são criados para os valores antigos e novos dados.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> Os parâmetros para os valores antigos são nomeados de acordo com o <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>       Dependendo do provedor ADO.NET, a ordem dos parâmetros na coleção DeleteParameters pode ser importante. O <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>provedores associar os parâmetros na coleção de acordo com a ordem na qual os parâmetros aparecem na consulta SQL parametrizada.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> O <xref:System.Data.SqlClient?displayProperty=fullName>provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com o espaço reservado na consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       O recupera de propriedade DeleteParameters o <xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>propriedade contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.DeleteParameters%2A>      > [!IMPORTANT] > Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Deleting>evento para validar valores de parâmetro antes de executar a consulta.</xref:System.Web.UI.WebControls.SqlDataSource.Deleting> Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand%2A> text to delete an order from the Northwind database. Initially, data is retrieved from the Orders table and displayed in a <xref:System.Web.UI.WebControls.DropDownList> control. You must explicitly declare DeleteParameters property and call the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method when using data-bound controls, such as <xref:System.Web.UI.WebControls.DropDownList> (unlike other controls, such as <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView>, which automatically populate the parameters and call <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> on a data source control). In this example, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is delegated to the private `OnDelete` event handler, which explicitly calls the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> method of the <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_121_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_11sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_121_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros usados pelo <xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.DeleteCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSource.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Deleting
  nameWithType: SqlDataSource.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSource.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de exclusão."
  remarks: "Manipular o evento de exclusão para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.SqlDataSource>controle executa a operação de exclusão.</xref:System.Web.UI.WebControls.SqlDataSource>       A conexão à fonte de dados subjacente não ainda estiver aberto quando o delegado de manipulador de eventos é chamado. Portanto, você não pode cancelar a operação diretamente ao chamar o <xref:System.Data.Common.DbCommand.Cancel%2A>método no <xref:System.Data.Common.DbCommand>objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objeto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> No entanto, você pode cancelar a operação de banco de dados, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>do objeto para `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to handle the Deleting event that is raised before a <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operation occurs. Because this example deletes data from the Northwind database, an <xref:System.Web.UI.WebControls.SqlDataSourceView.OnDeleting%2A> handler is added to attempt to back up the database to disk before the <xref:System.Web.UI.WebControls.SqlDataSource.Delete%2A> operation is performed.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_101_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_10sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_101_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.EnableCaching
  id: EnableCaching
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: EnableCaching
  nameWithType: SqlDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.SqlDataSource.EnableCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle tem o cache de dados habilitada."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSource>controle oferece suporte ao cache de dados.</xref:System.Web.UI.WebControls.SqlDataSource> Enquanto os dados em cache, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método recupera dados do cache em vez de banco de dados subjacente.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Quando o cache expira, o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método recupera dados do banco de dados subjacente e os armazena em cache os dados novamente.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>       O <xref:System.Web.UI.WebControls.SqlDataSource>controle automaticamente os dados em cache quando a propriedade EnableCaching é definida como `true` e <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>propriedade é definida como um valor maior que 0, que indica o número de segundos que o cache armazena os dados antes de recuperar um conjunto novo.</xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.SqlDataSource>      > [!IMPORTANT] > Quando você estiver usando representação de cliente com a autenticação do Microsoft Windows, os dados em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que mais de um usuário para acessar os dados, e você desejar cada recuperação para os dados a ser verificada pelas configurações de segurança para o banco de dados, não use o cache."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control, with data caching enabled. The EnableCaching property is set to `true` and the <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A> is set to 20 seconds. Because the <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> property is set to the <xref:System.Web.UI.DataSourceCacheExpiry> field by default, users of this page will see fresh data every 20 seconds.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_591_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_18sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_591_1.aspx)]"
  syntax:
    content: public virtual bool EnableCaching { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cache de dados está habilitado para o controle de fonte de dados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.EnableCaching*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A propriedade EnableCaching é definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> quando o cache não oferece suporte a <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: FilterExpression
  nameWithType: SqlDataSource.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSource.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma expressão de filtragem que é aplicado quando o <xref:System.Web.UI.WebControls.SqlDataSource.Select*>método é chamado.</xref:System.Web.UI.WebControls.SqlDataSource.Select*>"
  remarks: "O valor da propriedade FilterExpression é uma expressão de cadeia de caracteres de formato (uma cadeia de caracteres que é processada pelo <xref:System.String.Format%2A?displayProperty=fullName>método) que usa os valores na coleção FilterExpression para parâmetros de substituição incluídos na cadeia de caracteres.</xref:System.String.Format%2A?displayProperty=fullName> A sintaxe de expressão de filtro é a mesma sintaxe que é aceito pelo <xref:System.Data.DataView.RowFilter%2A>propriedade, porque a expressão de filtro é aplicada para o <xref:System.Data.DataView.RowFilter%2A>propriedade do <xref:System.Data.DataView>objeto que é retornado de execução a <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataView.RowFilter%2A> </xref:System.Data.DataView.RowFilter%2A> Para obter mais informações, consulte <xref:System.Data.DataColumn.Expression%2A>.</xref:System.Data.DataColumn.Expression%2A>       Se você adicionar parâmetros para o <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>coleção, você também pode incluir espaços reservados de cadeia de caracteres de formato (por exemplo, `&quot;{0}&quot;)` na expressão para substituir valores de parâmetro.</xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Os espaços reservados são substituídos de acordo com o índice do parâmetro no <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>coleção.</xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> Se um objeto de <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>coleção é `null`, o objeto será substituído por uma cadeia de caracteres vazia.</xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>       Você pode incluir parâmetros na propriedade FilterExpression. Se o parâmetro é um tipo de cadeia de caracteres ou caractere, coloque o parâmetro entre aspas. Aspas não são necessárias, se o parâmetro é um tipo numérico. O <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>coleção contém os parâmetros que são avaliados para os espaços reservados que são encontrados na propriedade FilterExpression.</xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>       O <xref:System.Web.UI.WebControls.SqlDataSource>controle oferece suporte à filtragem de dados somente quando estiver no <xref:System.Web.UI.WebControls.SqlDataSourceMode>modo.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource>       A propriedade FilterExpression delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterExpression%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using a FilterExpression string and the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. The FilterExpression property is applied any time the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the FilterExpression contains a placeholder for a filter parameter, which is contained in the <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> collection. In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the selection for the <xref:System.Web.UI.WebControls.DropDownList> control causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_89_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_89_1.aspx)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa uma expressão de filtragem aplicada quando os dados são recuperados usando o <xref:System.Web.UI.WebControls.SqlDataSource.Select*>método.</xref:System.Web.UI.WebControls.SqlDataSource.Select*>"
  overload: System.Web.UI.WebControls.SqlDataSource.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A propriedade FilterExpression foi definida e o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> está em <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceMode&quot;> </xref> modo."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Filtering
  nameWithType: SqlDataSource.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSource.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de filtro."
  remarks: "Manipular o evento de filtragem para executar operações de validação em valores de parâmetro de filtro antes do <xref:System.Web.UI.WebControls.SqlDataSource>controle executa uma operação de filtro.</xref:System.Web.UI.WebControls.SqlDataSource> Você pode cancelar o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs>do objeto para `true`.</xref:System.Web.UI.WebControls.SqlDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> O evento é gerado apenas se o <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>está definida.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>       O evento de filtragem delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=fullName>eventos do <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.Filtering?displayProperty=fullName>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: FilterParameters
  nameWithType: SqlDataSource.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma coleção de parâmetros que estão associados a quaisquer espaços reservados de parâmetros que estão na <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression*>cadeia de caracteres.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression*>"
  remarks: "Os parâmetros na coleção FilterParameters estão associados com os parâmetros que são especificados no <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> Os espaços reservados de parâmetro que são especificados no <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>propriedade correspondem a ordem para objetos de parâmetro na coleção FilterParameters quando o <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método é chamado.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> </xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>       A FilterParameters propriedade recupera o <xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>propriedade contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.FilterParameters%2A>      > [!IMPORTANT] > Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento para validar valores de parâmetro antes de executar a consulta.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database and filter it using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and FilterParameters properties. The <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property of the <xref:System.Web.UI.WebControls.SqlDataSource> control is applied anytime the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method is executed to retrieve data. In this example, the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> property contains a placeholder for a filter parameter, which is contained in the FilterParameters collection. In addition, the filter parameter is a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the <xref:System.Web.UI.WebControls.ListControl.SelectedValue%2A> property of the <xref:System.Web.UI.WebControls.DropDownList> control. Because the <xref:System.Web.UI.WebControls.DropDownList> control has its <xref:System.Web.UI.WebControls.ListControl.AutoPostBack%2A> property set to `true`, any change in the <xref:System.Web.UI.WebControls.DropDownList> selection causes the page to post information back to the server and the <xref:System.Web.UI.WebControls.GridView> control to rebind to the data source control with the new filter.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1207_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_17sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1207_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém um conjunto de parâmetros associados a quaisquer espaços reservados de parâmetros encontrados no <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression*>"
  overload: System.Web.UI.WebControls.SqlDataSource.FilterParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory
  id: GetDbProviderFactory
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: GetDbProviderFactory()
  nameWithType: SqlDataSource.GetDbProviderFactory()
  fullName: System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retorna o <xref href=&quot;System.Data.Common.DbProviderFactory&quot;> </xref> objeto que está associado com o provedor ADO.NET que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName*>"
  remarks: "O <xref:System.Data.Common.DbProviderFactory>propriedade é usada pelo <xref:System.Web.UI.WebControls.SqlDataSource>controle para criar os objetos de conexão, o comando e o parâmetro ADO.NET corretos ao interagir com um banco de dados.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.Common.DbProviderFactory>"
  syntax:
    content: protected virtual System.Data.Common.DbProviderFactory GetDbProviderFactory ();
    parameters: []
    return:
      type: System.Data.Common.DbProviderFactory
      description: "Um <xref href=&quot;System.Data.Common.DbProviderFactory&quot;> </xref> que representa o provedor ADO.NET identificado; caso contrário e a instância do <xref href=&quot;System.Data.SqlClient&quot;> </xref>, se nenhum provedor foi definido."
  overload: System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: SqlDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.SqlDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a exibição da fonte de dados nomeada que está associada com o controle de fonte de dados."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSource>controle oferece suporte à exibição da fonte de dados de apenas um.</xref:System.Web.UI.WebControls.SqlDataSource> Assim como acontece com todos os objetos de exibição de fonte de dados, o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o controle de fonte de dados define seus recursos, executa todo o trabalho que é necessário para recuperar dados do banco de dados subjacente e executa operações, como classificação, inserção, exclusão e atualização.</xref:System.Web.UI.WebControls.SqlDataSourceView>"
  syntax:
    content: protected override System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "O nome do modo de exibição para recuperar. Porque o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> oferece suporte a apenas um modo de exibição, `viewName` será ignorado."
    return:
      type: System.Web.UI.DataSourceView
      description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> chamado &quot;Table&quot; que está associado com o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.GetView*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>viewName</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou algo diferente de `Table`."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: SqlDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.SqlDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma coleção de nomes que representa a lista de objetos de exibição que estão associados a <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSource>controle oferece suporte a apenas uma exibição em seus dados subjacentes, denominados `&quot;Table&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> O método GetViewNames retorna uma coleção de elemento único desse nome de um modo de exibição."
  syntax:
    content: protected override System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que contém os nomes das exibições associadas a <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.SqlDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Insert
  id: Insert
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Insert()
  nameWithType: SqlDataSource.Insert()
  fullName: System.Web.UI.WebControls.SqlDataSource.Insert()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de inserção usando o <> </> *> cadeia de caracteres SQL e os parâmetros que estão no <> </> *> coleção."
  remarks: "Antes da operação de inserção é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Inserting>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Inserting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes da operação de inserção. Para executar uma operação de inserção, o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto compilações um <xref:System.Data.Common.DbCommand>objeto usando o <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>texto e associados <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A>Propriedades e, em seguida, executa o <xref:System.Data.Common.DbCommand>objeto no banco de dados subjacente.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView>       Após a conclusão da operação, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Inserted>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Inserted> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento.       O método de inserção é fornecido para o acesso programático para o `Insert` método. Se o <xref:System.Web.UI.WebControls.SqlDataSource>controle está associado um controle associado a dados, o controle de associação de dados chama automaticamente o `Insert` método.</xref:System.Web.UI.WebControls.SqlDataSource>       O método de inserção delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>método do <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.Insert%2A>      > [!IMPORTANT] > Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento para validar valores de parâmetro antes de executar a consulta.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the Data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database, and then the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat and values are inserted into parameters without validation, which is also a potential security threat. Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n> [!NOTE]\n>  This example shows how to use declarative syntax for data access. For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_101_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_101_1.aspx)]"
  syntax:
    content: public int Insert ();
    parameters: []
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas inseridas no banco de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSource.Insert*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> não é possível estabelecer uma conexão com a fonte de dados subjacente."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.InsertCommand
  id: InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: InsertCommand
  nameWithType: SqlDataSource.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.InsertCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia de caracteres SQL que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> usa o controle para inserir dados no banco de dados subjacente."
  remarks: "InsertCommand representa uma consulta SQL ou o nome de um procedimento armazenado e é usado pelo <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>método.</xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A>       Como produtos de banco de dados diferente usam tipos diferentes de SQL, a sintaxe da cadeia de caracteres SQL depende do provedor ADO.NET atual que está sendo usado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se a cadeia de caracteres SQL é uma consulta parametrizada ou um comando, o espaço reservado do parâmetro também depende do provedor ADO.NET que está sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o espaço reservado do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou <xref:System.Data.OleDb?displayProperty=fullName>, o espaço reservado do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       InsertCommand pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.       Essa propriedade delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView>que está associado a <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommand%2A>      > [!IMPORTANT] > Para fins de segurança, InsertCommand não será armazenada é o estado de exibição. Como é possível decodificar o conteúdo do estado de exibição no cliente, armazenando informações confidenciais sobre a estrutura de banco de dados no modo de exibição estado pode resultar em uma vulnerabilidade de divulgação de informações.      > [!IMPORTANT] > Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento para validar valores de parâmetro antes de executar a consulta.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The second code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row into the <xref:System.Web.UI.WebControls.GridView> control and as a form to insert new records.  \n  \n> [!NOTE]\n>  These examples show how to use declarative syntax for data access. For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the Data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values into the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database, and the <xref:System.Web.UI.WebControls.DropDownList> control is refreshed.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat. Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_805_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_805_1.aspx)]  \n  \n The following code example demonstrates how to retrieve data from SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> control and as a form to insert new records.  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensures that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_805_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_805_2.aspx)]"
  syntax:
    content: public string InsertCommand { get; set; }
    return:
      type: System.String
      description: "Um SQL de cadeia de caracteres que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> usa para inserir dados."
  overload: System.Web.UI.WebControls.SqlDataSource.InsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.InsertCommandType
  id: InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: InsertCommandType
  nameWithType: SqlDataSource.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.InsertCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o texto do <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand*>propriedade é uma instrução SQL ou o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand*>"
  remarks: "A propriedade InsertCommandType delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertCommandType%2A>"
  example:
  - "The following code example demonstrates how to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.GridView> control. It also demonstrates how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n The <xref:System.Web.UI.WebControls.GridView> control displays a set of data and the <xref:System.Web.UI.WebControls.DetailsView> displays the details for a particular row. If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. The stored procedure name is set in the <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A> property and identified as a stored procedure by setting the InsertCommandType property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value.  \n  \n After data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_948_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_948_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType InsertCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores. O padrão é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSource.InsertCommandType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Inserted
  nameWithType: SqlDataSource.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSource.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma operação de inserção é concluída."
  remarks: "Manipule o evento Inserted para examinar os valores de parâmetros de saída após uma operação de inserção. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n> [!NOTE]\n>  This example shows how to use declarative syntax for data access. For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](~/add/includes/ajax-current-ext-md.md).  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensures that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> object when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the Inserted event, the value of the primary key of the inserted row is displayed, and the <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_73_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_73_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Inserting
  nameWithType: SqlDataSource.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSource.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de inserção."
  remarks: "Manipular o evento inserindo para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.SqlDataSource>controle executa a operação de inserção.</xref:System.Web.UI.WebControls.SqlDataSource> A conexão à fonte de dados subjacente não ainda estiver aberto quando o delegado de manipulador de eventos é chamado. Portanto, você não pode cancelar a operação diretamente ao chamar o <xref:System.Data.Common.DbCommand.Cancel%2A>método no <xref:System.Data.Common.DbCommand>objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> No entanto, você pode cancelar a operação de banco de dados, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>do objeto para `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to retrieve data from Microsoft SQL Server and display it in a <xref:System.Web.UI.WebControls.GridView> control and how to use a <xref:System.Web.UI.WebControls.DetailsView> control to see details of a selected row in the <xref:System.Web.UI.WebControls.GridView> and as a form to insert new records.  \n  \n> [!NOTE]\n>  This example shows how to use declarative syntax for data access. For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](~/add/includes/ajax-current-ext-md.md).  \n  \n Initially, the data is displayed in the <xref:System.Web.UI.WebControls.GridView> control, and the selected row of the <xref:System.Web.UI.WebControls.GridView> is also displayed in the <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.GridView> and <xref:System.Web.UI.WebControls.DetailsView> controls use different data source controls; the one that is associated with the <xref:System.Web.UI.WebControls.DetailsView> has the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties, which ensures that the selected row of the <xref:System.Web.UI.WebControls.GridView> is displayed.  \n  \n If you click the automatically generated **Insert** button of the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.DetailsView> shows a different user interface, which is used to insert a new record. The example uses a stored procedure to insert records and returns the primary key of the inserted row. If you insert a record, the <xref:System.Web.UI.WebControls.DetailsView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.InsertParameters%2A> collection with values from the bound columns and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Insert%2A> method. The <xref:System.Web.UI.WebControls.DetailsView> can infer the correct parameters from any <xref:System.Web.UI.WebControls.BoundField> object and a parameter for the <xref:System.Web.UI.WebControls.TemplateField> when the ASP.NET two-way data-binding syntax is used. In this example, an additional parameter is added in the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserting%2A> event handler to handle the primary key that is returned by the stored procedure.  \n  \n Finally, after data is inserted into the database by the <xref:System.Web.UI.WebControls.DetailsView> control, the <xref:System.Web.UI.WebControls.SqlDataSourceView.OnInserted%2A> event handler is called to handle the <xref:System.Web.UI.WebControls.SqlDataSource.Inserted> event, the value of the primary key of the inserted row is displayed, and the `DataBind` method of the <xref:System.Web.UI.WebControls.GridView> control is called explicitly to refresh the data.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_151_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_15sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_151_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: InsertParameters
  nameWithType: SqlDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são usados pelo <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand*>propriedade o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto que está associado com o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle.</xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand*>"
  remarks: "A coleção InsertParameters propriedade recupera o <xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>propriedade está contida pelo <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.InsertParameters%2A>       Se o <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>propriedade contém uma consulta SQL parametrizada, a coleção InsertParameters contém qualquer <xref:System.Web.UI.WebControls.Parameter>objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand%2A>       Dependendo do provedor ADO.NET, a ordem dos parâmetros na coleção InsertParameters pode ser importante. O <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>provedores associar os parâmetros na coleção de acordo com a ordem em que os parâmetros aparecem na consulta SQL parametrizada.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> O <xref:System.Data.SqlClient?displayProperty=fullName>provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com um alias de espaço reservado na consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).      > [!IMPORTANT] > Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento para validar valores de parâmetro antes de executar a consulta.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple Web Forms page. The current data in the Data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls, and then clicking the **Insert** button. When the **Insert** button is clicked, the specified values are inserted into the database, and the <xref:System.Web.UI.WebControls.DropDownList> control is refreshed.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat. Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n> [!NOTE]\n>  This example shows how to use declarative syntax for data access. For information about how to access data by using code instead of markup, see [Accessing data in Visual Studio](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_596_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_596_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros usados pelo <xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.InsertCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSource.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: SqlDataSource.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSource.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carrega o estado das propriedades de <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle que precisam ser persistente."
  remarks: "O método LoadViewState é usado para carregar o estado de exibição salvo anteriormente do <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um objeto que representa o estado de <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSource.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma cadeia de caracteres de formato para aplicar aos nomes de quaisquer parâmetros que são passados para o <> </> *> ou <> </> *> método."
  remarks: "A cadeia de caracteres de formato OldValuesParameterFormatString é aplicada somente a chaves primárias, como aqueles que são identificados pelo `DataKeyNames` propriedade do controle de associação de dados associado ou em Excluir e cenários de atualização em que o <xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A>estiver definida como o <xref:System.Web.UI.ConflictOptions>valor e um conjunto de `oldValues` são passados para o método de dados correspondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSourceView.ConflictDetection%2A> Nesse caso, a cadeia de caracteres de formato é aplicada a cada nome de parâmetro no `oldValues` coleção.       Dois cenários comuns em que você pode alterar a propriedade OldValuesParameterFormatString são os seguintes: - para diferenciar entre os valores novos e antigos em atualizações. Quando o <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>estiver definida como o <xref:System.Web.UI.ConflictOptions>valor parâmetros para os valores originais e novos são adicionados para o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> Sem a cadeia de caracteres de formatação, dois parâmetros com o mesmo nome seriam criados para cada campo de dados. Alterando o nome do parâmetro de valor original, você pode comparar os dados para a fonte de dados original para detectar conflitos e comparar valores de chave.      -Alguns designers visuais implementam um esquema de nomenclatura específico para as chaves e valores originais."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa uma cadeia de caracteres de formato aplicada aos nomes de qualquer <code> oldValues </code> parâmetros passados para o <> </> *> ou <> </> *> métodos. O padrão é &quot;{0}&quot;."
  overload: System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: SqlDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSource.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adiciona um <xref href=&quot;System.Web.UI.Page.LoadComplete&quot;> </xref> manipulador de eventos para o <xref href=&quot;System.Web.UI.Page&quot;> </xref> controle que contém o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle."
  remarks: "O manipulador de eventos é adicionado, o <xref:System.Web.UI.WebControls.SqlDataSource>atualizações do objeto de <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>e <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>valores.</xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource> Se os valores são atualizados, o <xref:System.Web.UI.IDataSource.DataSourceChanged>é gerado, fazendo com que todos os controles que estão associados ao <xref:System.Web.UI.WebControls.SqlDataSource>controle para reassociar.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.IDataSource.DataSourceChanged>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.SqlDataSource.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.ProviderName
  id: ProviderName
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: ProviderName
  nameWithType: SqlDataSource.ProviderName
  fullName: System.Web.UI.WebControls.SqlDataSource.ProviderName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do provedor de dados .NET Framework que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle usa para se conectar a uma fonte de dados subjacente."
  remarks: "O .NET Framework inclui os seguintes provedores de dados: - o <xref:System.Data.SqlClient?displayProperty=fullName>provedor é o padrão do .NET Framework Data Provider para SQL Server.</xref:System.Data.SqlClient?displayProperty=fullName>      -O <xref:System.Data.OleDb?displayProperty=fullName>provedor é o provedor de dados .NET Framework para OLE DB.</xref:System.Data.OleDb?displayProperty=fullName>      -O <xref:System.Data.Odbc?displayProperty=fullName>provedor é o provedor de dados .NET Framework para ODBC.</xref:System.Data.Odbc?displayProperty=fullName>      -O <xref:System.Data.OracleClient?displayProperty=fullName>provedor é o provedor de dados .NET Framework para Oracle.</xref:System.Data.OracleClient?displayProperty=fullName>       A propriedade ProviderName nunca é definida como o nome de um provedor gerenciado do ADO.NET, como `MSDAORA`. Para obter mais informações, consulte [selecionando dados usando o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       Se você alterar a propriedade ProviderName, o <xref:System.Web.UI.IDataSource.DataSourceChanged>é gerado, fazendo com que todos os controles que estão associados ao <xref:System.Web.UI.WebControls.SqlDataSource>para reassociar.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.IDataSource.DataSourceChanged>       Uma lista de provedores disponíveis é especificada no `DbProviderFactories` subseção do `system.data` seção do arquivo Machine. config."
  example:
  - "This section contains two code examples. The first code demonstrates how to connect to a SQL Server database using the default .NET Framework Data Provider for SQL Server for the <xref:System.Web.UI.WebControls.SqlDataSource> control, the <xref:System.Data.SqlClient?displayProperty=fullName>. The second code example demonstrates how to connect to an ODBC database using the .NET Framework Data Provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>.  \n  \n The following code example demonstrates how to connect to a SQL Server database using the default data provider for the <xref:System.Web.UI.WebControls.SqlDataSource> control, the <xref:System.Data.SqlClient?displayProperty=fullName>. Whenever the ProviderName property is not explicitly set, the default provider is used. The <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is provider-specific.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1309_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_1sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1309_1.aspx)]  \n  \n The following code example, which is functionally the same as the preceding code example, demonstrates how to connect to an ODBC database using the .NET Framework Data Provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>. The <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN) that is used to connect to the ODBC database.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1309_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_1odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1309_2.aspx)]"
  syntax:
    content: public virtual string ProviderName { get; set; }
    return:
      type: System.String
      description: "O nome do provedor de dados que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> usa; caso contrário, o provedor ADO.NET do Microsoft SQL Server, se nenhum provedor foi definido. O padrão é o provedor ADO.NET para o Microsoft SQL Server."
  overload: System.Web.UI.WebControls.SqlDataSource.ProviderName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: SqlDataSource.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSource.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva o estado de exibição atual do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle."
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Um objeto que contém o estado salvo do <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref>."
  overload: System.Web.UI.WebControls.SqlDataSource.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSource.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSource.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera dados do banco de dados subjacente usando a <> </> *> cadeia de caracteres SQL e os parâmetros que estão no <> </> *> coleção."
  remarks: "O método Select é chamado automaticamente durante o <xref:System.Web.UI.Control.PreRender>fase do ciclo de vida da página.</xref:System.Web.UI.Control.PreRender> Ele é chamado por controles de associação de dados que foi anexados a um <xref:System.Web.UI.WebControls.SqlDataSource>controlar por meio de seus <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>propriedade.</xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> </xref:System.Web.UI.WebControls.SqlDataSource>       O <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método retorna um <xref:System.Data.DataView>objeto se a <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.DataView> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> O <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método retorna um <xref:System.Data.IDataReader>objeto se a <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>está definida como o <xref:System.Web.UI.WebControls.SqlDataSourceMode>valor.</xref:System.Web.UI.WebControls.SqlDataSourceMode> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> </xref:System.Data.IDataReader> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Fechar o <xref:System.Data.IDataReader>quando você terminar de ler os dados do objeto.</xref:System.Data.IDataReader>       Antes da operação Select é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Selecting> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelecting%2A> Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer processamento antes da operação Select.       Após a operação de seleção, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Selected>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Selected> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnSelected%2A> Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento.       Se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>está definida como <xref:System.Web.UI.WebControls.SqlDataSourceMode?displayProperty=fullName>e o cache está habilitado, o <xref:System.Web.UI.WebControls.SqlDataSource>objeto recupera e salva os dados em cache durante a operação Select.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceMode?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A> O cache é criado, descartado ou atualizada com base no comportamento de cache que é especificado pela combinação da <xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>e <xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A>Propriedades.</xref:System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.SqlDataSource.CacheDuration%2A>      > [!IMPORTANT] > Quando você estiver usando representação de cliente com a autenticação do Microsoft Windows, os dados em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que mais de um usuário para acessar os dados e você deseja que cada recuperação de dados a ser verificada pelas configurações de segurança para o banco de dados, não use o cache.       Se o <xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>está definida como <xref:System.Web.UI.WebControls.SqlDataSourceMode?displayProperty=fullName>e um <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A>propriedade foi especificada, a expressão de filtro é avaliada com qualquer fornecido <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A>Propriedades e o filtro resultante é aplicada à lista de dados durante a operação Select.</xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> </xref:System.Web.UI.WebControls.SqlDataSourceMode?displayProperty=fullName> </xref:System.Web.UI.WebControls.SqlDataSource.DataSourceMode%2A>       O método Select delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A>método do <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.Select%2A> Para executar uma operação de recuperação de dados, o <xref:System.Web.UI.WebControls.SqlDataSourceView>cria um <xref:System.Data.Common.DbCommand>objeto usando o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>texto e associados <xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A>valores e, em seguida, executa o <xref:System.Data.Common.DbCommand>no banco de dados subjacente.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView>      > [!IMPORTANT] > Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento para validar valores de parâmetro antes de executar a consulta.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples show how to programmatically call the Select method and set values based on the result of the query. The following example shows the declarative code for the Web controls.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource.Select#1](~/add/codesnippet/csharp/475f4e1e-4832-4407-9121-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#1](~/add/codesnippet/visualbasic/475f4e1e-4832-4407-9121-_1.aspx)]  \n  \n The following example shows how to programmatically call the Select method. The <xref:System.Web.UI.WebControls.SqlDataSource> control returns an integer. The value of the integer is used to set the text of a <xref:System.Web.UI.WebControls.Label> control and to determine whether to display a <xref:System.Web.UI.WebControls.HyperLink> control.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource.Select#2](~/add/codesnippet/visualbasic/475f4e1e-4832-4407-9121-_2.vb)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource.Select#2](~/add/codesnippet/csharp/475f4e1e-4832-4407-9121-_2.cs)]"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "Um <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> objeto que é usado para solicitar operações nos dados além da recuperação de dados básico."
    return:
      type: System.Collections.IEnumerable
      description: "Um <xref:System.Collections.IEnumerable>lista de linhas de dados.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.SqlDataSource.Select*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> objeto não é possível estabelecer uma conexão com a fonte de dados subjacente."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.SelectCommand
  id: SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SelectCommand
  nameWithType: SqlDataSource.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.SelectCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia de caracteres SQL que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle usa para recuperar dados do banco de dados subjacente."
  remarks: "A propriedade SelectCommand representa uma consulta SQL ou o nome de um procedimento armazenado e é usada pelo <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A>método para recuperar dados de um banco de dados do SQL Server.</xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> Se você usar um asterisco (*) no comando Select para selecionar todas as colunas e se você usar a geração automática de código para executar a atualização ou exclusão de operações, verifique se nenhuma coluna tiver espaços em seus nomes.       Como produtos de banco de dados diferente usam tipos diferentes de SQL, a sintaxe da cadeia de caracteres SQL depende do provedor ADO.NET atual que está sendo usado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se a cadeia de caracteres SQL é uma consulta parametrizada ou um comando, o espaço reservado do parâmetro também depende do provedor ADO.NET que está sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o espaço reservado do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou <xref:System.Data.OleDb?displayProperty=fullName>, o espaço reservado do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       A propriedade SelectCommand pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.       A propriedade SelectCommand delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>      > [!IMPORTANT] > Para fins de segurança, SelectCommand não será armazenada é o estado de exibição. Como é possível decodificar o conteúdo do estado de exibição no cliente, armazenando informações confidenciais sobre a estrutura de banco de dados no modo de exibição estado pode resultar em uma vulnerabilidade de divulgação de informações.      > [!IMPORTANT] > Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento para validar valores de parâmetro antes de executar a consulta.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the SelectCommand text to a basic SQL query to retrieve data from an ODBC-compliant database and display it in a <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates how to set the SelectCommand text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n In both examples, there is no need to explicitly call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method because the data-bound controls that are attached to the data source control through the <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> property will automatically call the <xref:System.Web.UI.WebControls.SqlDataSource.Select%2A> method during the <xref:System.Web.UI.Control.PreRender> phase.  \n  \n The following code example demonstrates how to set the SelectCommand text to a basic SQL query to retrieve data from an ODBC-compliant database and display it in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1253_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_4odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1253_1.aspx)]  \n  \n The following code example demonstrates how to set the SelectCommand text to the name of a stored procedure and the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommandType%2A> property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value to retrieve data from a SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control. The SelectCommand property can be an SQL query or the name of a stored procedure, if the data source supports stored procedures.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1253_2.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1253_2.aspx)]"
  syntax:
    content: public string SelectCommand { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres SQL ou o nome de um procedimento armazenado que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> usa para recuperar dados."
  overload: System.Web.UI.WebControls.SqlDataSource.SelectCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.SelectCommandType
  id: SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SelectCommandType
  nameWithType: SqlDataSource.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.SelectCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o texto do <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand*>propriedade é uma consulta SQL ou o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand*>"
  remarks: "A propriedade SelectCommandType delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommandType%2A>"
  example:
  - "The following code example demonstrates how to set the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> text to the name of a stored procedure and the SelectCommandType property to the <xref:System.Web.UI.WebControls.SqlDataSourceCommandType> value, in order to retrieve data from a Microsoft SQL Server database and display it in a <xref:System.Web.UI.WebControls.DropDownList> control.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_358_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_14sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_358_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType SelectCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores. O padrão é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSource.SelectCommandType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Selected
  id: Selected
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Selected
  nameWithType: SqlDataSource.Selected
  fullName: System.Web.UI.WebControls.SqlDataSource.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma operação de recuperação de dados foi concluída."
  remarks: "Manipule o evento selecionado para examinar os valores de parâmetros de saída depois de uma operação de recuperação de dados foi concluída. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Selecting
  nameWithType: SqlDataSource.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSource.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de recuperação de dados."
  remarks: "Manipular o evento Selecting para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.SqlDataSource>controle executa a operação select.</xref:System.Web.UI.WebControls.SqlDataSource> Os argumentos selecionados estão disponíveis a <xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.SqlDataSourceSelectingEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SelectParameters
  nameWithType: SqlDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são usados pelo <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand*>propriedade o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> objeto que está associado com o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand*>"
  remarks: "Se o <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>propriedade contém uma consulta SQL parametrizada, coleção SelectParameters contém qualquer <xref:System.Web.UI.WebControls.Parameter>objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A>       Dependendo do provedor ADO.NET, a ordem dos parâmetros na coleção SelectParameters pode ser importante. O <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>provedores associar os parâmetros na coleção de acordo com a ordem em que os parâmetros aparecem na consulta SQL parametrizada.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> O <xref:System.Data.SqlClient?displayProperty=fullName>provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com um alias de espaço reservado na consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       O recupera de propriedade SelectParameters o <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>propriedade contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.SelectParameters%2A>      > [!IMPORTANT] > Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Selecting>evento para validar valores de parâmetro antes de executar a consulta.</xref:System.Web.UI.WebControls.SqlDataSource.Selecting> Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to retrieve data from the Northwind database in Microsoft SQL Server by setting the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property to an SQL query. The SQL query is parameterized and the placeholder in the <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand%2A> property is matched to the <xref:System.Web.UI.WebControls.ControlParameter> object that is added to the SelectParameters collection. The <xref:System.Web.UI.WebControls.DropDownList> control, which the <xref:System.Web.UI.WebControls.ControlParameter> is bound to, acts as a filter for what is displayed in the <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n For information about other types of parameters you can use, see the <xref:System.Web.UI.WebControls.Parameter> class overview.  \n  \n> [!NOTE]\n>  Because the parameter is used in a WHERE clause, the use of the SelectParameters property in the code example is functionally equivalent to using the <xref:System.Web.UI.WebControls.SqlDataSource.FilterExpression%2A> and <xref:System.Web.UI.WebControls.SqlDataSource.FilterParameters%2A> properties.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1230_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_2sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1230_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros usados pelo <xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.SelectCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSource.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SortParameterName
  nameWithType: SqlDataSource.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSource.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome de um parâmetro de procedimento armazenado que é usado para classificar os dados recuperados quando a recuperação de dados é executada usando um procedimento armazenado."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>propriedade é avaliada somente quando o SQL que é de comando contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A>propriedade é o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSourceView.SelectCommand%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> Nesse caso, se a propriedade SortParameterName for definida, ele contém o nome de um parâmetro que é usado para classificar os resultados do procedimento armazenado.       Se o <xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>estiver definida, ele é anexado ao <xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSourceView.SortParameterName%2A> </xref:System.Web.UI.WebControls.SqlDataSourceView.ParameterPrefix%2A>"
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "O nome de um parâmetro de procedimento armazenado usado para classificar os dados recuperados quando a recuperação de dados é executada usando um procedimento armazenado."
  overload: System.Web.UI.WebControls.SqlDataSource.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency
  id: SqlCacheDependency
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: SqlCacheDependency
  nameWithType: SqlDataSource.SqlCacheDependency
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma cadeia de caracteres separada por ponto-e-vírgula que indica quais bancos de dados e tabelas a serem usadas para a dependência de cache do Microsoft SQL Server."
  remarks: "O <xref:System.Web.UI.WebControls.SqlDataSource>controle oferece suporte a uma política de expiração opcional com base no <xref:System.Web.Caching.SqlCacheDependency>objeto para o cache de dados (o serviço deve ser configurado para o servidor de banco de dados).</xref:System.Web.Caching.SqlCacheDependency> </xref:System.Web.UI.WebControls.SqlDataSource>       A cadeia de caracteres SqlCacheDependency identifica bancos de dados e tabelas de acordo com o mesmo formato que é usado pelo `@ Page` diretiva, onde a primeira parte da cadeia de caracteres é uma cadeia de caracteres de conexão para um banco de dados do Microsoft SQL Server, seguido por um delimitador de vírgula e, finalmente, o nome da tabela de banco de dados (por exemplo, `&quot;connectionstring1:table1&quot;`). Se a propriedade SqlCacheDependency depende de mais de uma tabela, os pares de nome de tabela e de cadeia de caracteres de conexão são separados por ponto e vírgula (por exemplo, `&quot;connectionstring1:table1&quot;;connectionstring2:table2&quot;`).      > [!IMPORTANT] > Quando você estiver usando representação de cliente com a autenticação do Microsoft Windows, os dados em cache quando o primeiro usuário que acessa os dados. Se outro usuário solicita os mesmos dados, os dados são recuperados do cache. Os dados não serão recuperados fazendo outra chamada para o banco de dados para verificar o acesso do usuário aos dados. Se você espera que mais de um usuário para acessar os dados, e você desejar cada recuperação para os dados a ser verificada pelas configurações de segurança para o banco de dados, não use o cache."
  example:
  - "The following code example demonstrates how to create a SQL Server cache dependency and set the SqlCacheDependency property of a <xref:System.Web.UI.WebControls.SqlDataSource> control. In this example, the database is polled every 120 seconds. If the data in the Northwind Traders Employees table changes during that time, any data that is cached by the <xref:System.Web.UI.WebControls.SqlDataSource> control and displayed by the <xref:System.Web.UI.WebControls.GridView> control is refreshed by the <xref:System.Web.UI.WebControls.SqlDataSource> control the next time the database is polled.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_795_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_23sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_795_1.aspx)]"
  syntax:
    content: public virtual string SqlCacheDependency { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que indica quais bancos de dados e tabelas para usar para a dependência de cache do SQL Server."
  overload: System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: SqlDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSource.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Rastreia exibir alterações de estado para o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controlar de forma que as alterações podem ser armazenadas na <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> objeto para o controle."
  remarks: "O método TrackViewState é substituído para marcar o ponto de partida para iniciar o rastreamento e salvar alterações para o controle como parte do estado de exibição para o controle."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.SqlDataSource.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Update
  id: Update
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Update()
  nameWithType: SqlDataSource.Update()
  fullName: System.Web.UI.WebControls.SqlDataSource.Update()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de atualização usando o <> </> *> cadeia de caracteres SQL e os parâmetros que estão no <> </> *> coleção."
  remarks: "O método de atualização é chamado automaticamente <xref:System.Web.UI.WebControls.GridView>, <xref:System.Web.UI.WebControls.DetailsView>, e <xref:System.Web.UI.WebControls.FormView>controla durante um postback, se os dados foram alterados.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Para dados que foram alterados em outros controles, o método de atualização pode ser chamado explicitamente no postback durante o <xref:System.Windows.Forms.Form.Load>evento.</xref:System.Windows.Forms.Form.Load>       Antes da operação de atualização é executada, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Updating>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Updating> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdating%2A> Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de uma operação de atualização.       Após a conclusão da operação de atualização, o <xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.SqlDataSource.Updated>evento.</xref:System.Web.UI.WebControls.SqlDataSource.Updated> </xref:System.Web.UI.WebControls.SqlDataSourceView.OnUpdated%2A> Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e executar qualquer pós-processamento.       O método Update delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A>método do <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.Update%2A> Para executar uma operação de atualização, o <xref:System.Web.UI.WebControls.SqlDataSourceView>cria um <xref:System.Data.Common.DbCommand>objeto usando o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>texto e associados <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A>Propriedades e, em seguida, executa o <xref:System.Data.Common.DbCommand>objeto no banco de dados subjacente.</xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> </xref:System.Data.Common.DbCommand> </xref:System.Web.UI.WebControls.SqlDataSourceView>      > [!IMPORTANT] > Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Updating>evento para validar valores de parâmetro antes de executar a consulta.</xref:System.Web.UI.WebControls.SqlDataSource.Updating> Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The second code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> property is set with a parameterized SQL statement, and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the Update method explicitly.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_109_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_109_1.aspx)]  \n  \n The following code example demonstrates how to display data that is retrieved from a SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_109_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_109_2.aspx)]"
  syntax:
    content: public int Update ();
    parameters: []
    return:
      type: System.Int32
      description: "Um valor que representa o número de linhas atualizadas no banco de dados subjacente."
  overload: System.Web.UI.WebControls.SqlDataSource.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> não é possível estabelecer uma conexão com a fonte de dados subjacente."
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateCommand
  id: UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: UpdateCommand
  nameWithType: SqlDataSource.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.UpdateCommand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia de caracteres SQL que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> usa o controle para atualizar dados no banco de dados subjacente."
  remarks: "UpdateCommand representa uma consulta SQL ou o nome de um procedimento armazenado e é usado pelo <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>método.</xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>       Como produtos de banco de dados diferente usam tipos diferentes de SQL, a sintaxe da cadeia de caracteres SQL depende do provedor ADO.NET atual que está sendo usado, que é identificado pelo <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> Se a cadeia de caracteres SQL é uma consulta parametrizada ou um comando, o espaço reservado do parâmetro também depende do provedor ADO.NET que está sendo usado. Por exemplo, se o provedor é o <xref:System.Data.SqlClient?displayProperty=fullName>, que é o provedor padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>classe, o espaço reservado do parâmetro é `&quot;@parameterName&quot;`.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> No entanto, se o provedor está definido como o <xref:System.Data.Odbc?displayProperty=fullName>ou <xref:System.Data.OleDb?displayProperty=fullName>, o espaço reservado do parâmetro é `&quot;?&quot;`.</xref:System.Data.OleDb?displayProperty=fullName> </xref:System.Data.Odbc?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       A propriedade UpdateCommand pode ser uma cadeia de caracteres SQL ou o nome de um procedimento armazenado, se a fonte de dados oferece suporte a procedimentos armazenados.       A propriedade UpdateCommand delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommand%2A>      > [!IMPORTANT] > Para fins de segurança, UpdateCommand não será armazenada é o estado de exibição. Como é possível decodificar o conteúdo do estado de exibição no cliente, armazenando informações confidenciais sobre a estrutura de banco de dados no modo de exibição estado pode resultar em uma vulnerabilidade de divulgação de informações.      > [!IMPORTANT] > Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento para validar valores de parâmetro antes de executar a consulta.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to set the UpdateCommand property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a Microsoft SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The second code example demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n The following code example demonstrates how to set the UpdateCommand property of the <xref:System.Web.UI.WebControls.SqlDataSource> control and update data in a SQL Server database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.GridView> automatically populates the <xref:System.Web.UI.WebControls.SqlDataSource.UpdateParameters%2A> collection, inferring the parameters from the <xref:System.Web.UI.WebControls.BoundField> objects, and calls the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method when the **Update** link on the editable <xref:System.Web.UI.WebControls.GridView> is selected. This example also includes some post-processing: after a record is updated, a notification e-mail message is sent.  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_301_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_301_1.aspx)]  \n  \n The following code example, which is functionally identical to the preceding code example, demonstrates how to update data in an ODBC database using the <xref:System.Web.UI.WebControls.GridView> control. The <xref:System.Web.UI.WebControls.SqlDataSource.ProviderName%2A> is set to the ADO.NET provider for ODBC, the <xref:System.Data.Odbc?displayProperty=fullName>, and the <xref:System.Web.UI.WebControls.SqlDataSource.ConnectionString%2A> property is set to the name of an ODBC data source name (DSN).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_301_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_301_2.aspx)]"
  syntax:
    content: public string UpdateCommand { get; set; }
    return:
      type: System.String
      description: "Um SQL de cadeia de caracteres que o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> usa para atualizar dados."
  overload: System.Web.UI.WebControls.SqlDataSource.UpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateCommandType
  id: UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: UpdateCommandType
  nameWithType: SqlDataSource.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.UpdateCommandType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o texto do <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand*>propriedade é uma instrução SQL ou o nome de um procedimento armazenado.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand*>"
  remarks: "A propriedade UpdateCommandType delega para o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateCommandType%2A>"
  syntax:
    content: public System.Web.UI.WebControls.SqlDataSourceCommandType UpdateCommandType { get; set; }
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandType
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valores. O padrão é o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceCommandType&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.SqlDataSource.UpdateCommandType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Updated
  id: Updated
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Updated
  nameWithType: SqlDataSource.Updated
  fullName: System.Web.UI.WebControls.SqlDataSource.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma operação de atualização é concluída."
  remarks: "Manipule o evento Updated para examinar os valores de parâmetros de saída depois de uma operação de atualização foi concluída. Os parâmetros de saída estão disponíveis no <xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.SqlDataSourceStatusEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to display and update data that is retrieved from an ODBC database in a <xref:System.Web.UI.WebControls.GridView> control. After a record is successfully updated, the Updated event is handled by an event handler to perform a post-processing step where an e-mail notification is sent.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_103_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_7odbc#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_103_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: SqlDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são usados pelo <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand*>propriedade o <xref href=&quot;System.Web.UI.WebControls.SqlDataSourceView&quot;> </xref> controle que está associado com o <xref href=&quot;System.Web.UI.WebControls.SqlDataSource&quot;> </xref> controle.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand*>"
  remarks: "Se o <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>propriedade contém uma consulta SQL parametrizada, a coleção UpdateParameters contém qualquer <xref:System.Web.UI.WebControls.Parameter>objetos que correspondem aos espaços reservados de parâmetro na cadeia de caracteres SQL.</xref:System.Web.UI.WebControls.Parameter> </xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A>       Nomes de parâmetro podem ser afetados pelo <xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A>propriedade, especificamente se o nome identifica uma chave primária, como uma chave especificada usando o `DataKeyNames` propriedade do controle associado a dados, ou em Excluir e cenários de atualização onde o <xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A>está definida como o <xref:System.Web.UI.ConflictOptions>valor e um conjunto de `oldValues` são passados para o método de dados correspondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.SqlDataSource.ConflictDetection%2A> </xref:System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString%2A> Nesse caso, a cadeia de caracteres de formato é aplicada a cada nome de parâmetro no `oldValues` coleção.       A ordem dos parâmetros na coleção UpdateParameters pode ser importante, dependendo do provedor ADO.NET. O <xref:System.Data.OleDb?displayProperty=fullName>e <xref:System.Data.Odbc?displayProperty=fullName>provedores associar os parâmetros na coleção de acordo com a ordem em que os parâmetros aparecem na consulta SQL parametrizada.</xref:System.Data.Odbc?displayProperty=fullName> </xref:System.Data.OleDb?displayProperty=fullName> O <xref:System.Data.SqlClient?displayProperty=fullName>provedor, que é o provedor ADO.NET padrão para o <xref:System.Web.UI.WebControls.SqlDataSource>controlar, associa parâmetros na coleção por correspondente ao nome do parâmetro com um alias de espaço reservado na consulta SQL.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Data.SqlClient?displayProperty=fullName> Para obter mais informações sobre comandos e consultas SQL parametrizadas, consulte [usando parâmetros com o controle SqlDataSource](~/add/includes/ajax-current-ext-md.md).       A UpdateParameters propriedade recupera o <xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>propriedade contido pelo <xref:System.Web.UI.WebControls.SqlDataSourceView>objeto que está associado com o <xref:System.Web.UI.WebControls.SqlDataSource>controle.</xref:System.Web.UI.WebControls.SqlDataSource> </xref:System.Web.UI.WebControls.SqlDataSourceView> </xref:System.Web.UI.WebControls.SqlDataSourceView.UpdateParameters%2A>      > [!IMPORTANT] > Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o <xref:System.Web.UI.WebControls.SqlDataSource.Filtering>evento para validar valores de parâmetro antes de executar a consulta.</xref:System.Web.UI.WebControls.SqlDataSource.Filtering> Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.SqlDataSource> control to display data in a <xref:System.Web.UI.WebControls.DropDownList> control and update data when the **Submit** button is clicked. The <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand%2A> is set with a parameterized SQL statement and two <xref:System.Web.UI.WebControls.ControlParameter> parameters are added to the UpdateParameters collection. When the **Submit** button is clicked, the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event is handled to call the <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> method explicitly.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat, and values are inserted into parameters without validation, which is also a potential security threat. Use the <xref:System.Web.UI.WebControls.SqlDataSource.Inserting> event to validate parameter values before executing the query. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n [!code-cs[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1200_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.SqlDataSource_8sql#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1200_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros usados pelo <xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand*>propriedade.</xref:System.Web.UI.WebControls.SqlDataSource.UpdateCommand*>"
  overload: System.Web.UI.WebControls.SqlDataSource.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.SqlDataSource.Updating
  id: Updating
  parent: System.Web.UI.WebControls.SqlDataSource
  langs:
  - csharp
  name: Updating
  nameWithType: SqlDataSource.Updating
  fullName: System.Web.UI.WebControls.SqlDataSource.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de atualização."
  remarks: "Manipular o evento de atualização para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.SqlDataSource>controle executa a operação de atualização.</xref:System.Web.UI.WebControls.SqlDataSource> A conexão à fonte de dados subjacente não ainda estiver aberto quando o delegado de manipulador de eventos é chamado. Portanto, você não pode cancelar diretamente o <xref:System.Web.UI.WebControls.SqlDataSource.Update%2A>operação de banco de dados chamando o <xref:System.Data.Common.DbCommand.Cancel%2A>método o <xref:System.Data.Common.DbCommand>objeto que é exposto pelo <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>objeto.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommand.Cancel%2A> </xref:System.Web.UI.WebControls.SqlDataSource.Update%2A> No entanto, você pode cancelar a operação de banco de dados, definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs>para `true`.</xref:System.Web.UI.WebControls.SqlDataSourceCommandEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).      > [!IMPORTANT] > Valores são inseridos em parâmetros sem validação, que é uma possível ameaça à segurança. Use o evento de atualização para validar valores de parâmetro antes de executar a consulta. Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to display data that is retrieved from a Microsoft SQL Server database in a <xref:System.Web.UI.WebControls.DropDownList> control and update the record using a <xref:System.Web.UI.WebControls.TextBox> control. The example shows how you can use a <xref:System.Data.Common.DbTransaction> object to add transaction context when using the <xref:System.Web.UI.WebControls.SqlDataSource> control to update data.  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_75_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_9sql#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_75_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.SqlDataSourceCommandEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.Web.UI.DataSourceControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SqlDataSource()
  nameWithType: SqlDataSource.SqlDataSource()
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlDataSource()
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SqlDataSource(String,String)
  nameWithType: SqlDataSource.SqlDataSource(String,String)
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlDataSource(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor(System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SqlDataSource(String,String,String)
  nameWithType: SqlDataSource.SqlDataSource(String,String,String)
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlDataSource(String,String,String)
- uid: System.Web.UI.WebControls.SqlDataSource.CacheDuration
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: SqlDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.SqlDataSource.CacheDuration
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: SqlDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy
- uid: System.Web.UI.DataSourceCacheExpiry
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCacheExpiry
  nameWithType: DataSourceCacheExpiry
  fullName: System.Web.UI.DataSourceCacheExpiry
- uid: System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: SqlDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSource.CancelSelectOnNullParameter
  fullName: System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.SqlDataSource.ConflictDetection
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSource.ConflictDetection
  fullName: System.Web.UI.WebControls.SqlDataSource.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.SqlDataSource.ConnectionString
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: ConnectionString
  nameWithType: SqlDataSource.ConnectionString
  fullName: System.Web.UI.WebControls.SqlDataSource.ConnectionString
- uid: System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(System.String)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CreateDataSourceView(String)
  nameWithType: SqlDataSource.CreateDataSourceView(String)
  fullName: System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView(String)
- uid: System.Web.UI.WebControls.SqlDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceView
  nameWithType: SqlDataSourceView
  fullName: System.Web.UI.WebControls.SqlDataSourceView
- uid: System.Web.UI.WebControls.SqlDataSource.DataSourceMode
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DataSourceMode
  nameWithType: SqlDataSource.DataSourceMode
  fullName: System.Web.UI.WebControls.SqlDataSource.DataSourceMode
- uid: System.Web.UI.WebControls.SqlDataSourceMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceMode
  nameWithType: SqlDataSourceMode
  fullName: System.Web.UI.WebControls.SqlDataSourceMode
- uid: System.Web.UI.WebControls.SqlDataSource.Delete
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Delete()
  nameWithType: SqlDataSource.Delete()
  fullName: System.Web.UI.WebControls.SqlDataSource.Delete()
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSource.DeleteCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSource.DeleteCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSourceCommandType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandType
  nameWithType: SqlDataSourceCommandType
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.Deleted
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Deleted
  nameWithType: SqlDataSource.Deleted
  fullName: System.Web.UI.WebControls.SqlDataSource.Deleted
- uid: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceStatusEventHandler
  nameWithType: SqlDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.SqlDataSource.Deleting
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Deleting
  nameWithType: SqlDataSource.Deleting
  fullName: System.Web.UI.WebControls.SqlDataSource.Deleting
- uid: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceCommandEventHandler
  nameWithType: SqlDataSourceCommandEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceCommandEventHandler
- uid: System.Web.UI.WebControls.SqlDataSource.EnableCaching
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: SqlDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.SqlDataSource.EnableCaching
- uid: System.Web.UI.WebControls.SqlDataSource.FilterExpression
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSource.FilterExpression
  fullName: System.Web.UI.WebControls.SqlDataSource.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSource.Filtering
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Filtering
  nameWithType: SqlDataSource.Filtering
  fullName: System.Web.UI.WebControls.SqlDataSource.Filtering
- uid: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceFilteringEventHandler
  nameWithType: SqlDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.SqlDataSource.FilterParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSource.FilterParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: GetDbProviderFactory()
  nameWithType: SqlDataSource.GetDbProviderFactory()
  fullName: System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory()
- uid: System.Data.Common.DbProviderFactory
  parent: System.Data.Common
  isExternal: false
  name: DbProviderFactory
  nameWithType: DbProviderFactory
  fullName: System.Data.Common.DbProviderFactory
- uid: System.Web.UI.WebControls.SqlDataSource.GetView(System.String)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: SqlDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.SqlDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.SqlDataSource.GetViewNames
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: SqlDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.SqlDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.SqlDataSource.Insert
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Insert()
  nameWithType: SqlDataSource.Insert()
  fullName: System.Web.UI.WebControls.SqlDataSource.Insert()
- uid: System.Web.UI.WebControls.SqlDataSource.InsertCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSource.InsertCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSource.InsertCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSource.InsertCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.Inserted
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Inserted
  nameWithType: SqlDataSource.Inserted
  fullName: System.Web.UI.WebControls.SqlDataSource.Inserted
- uid: System.Web.UI.WebControls.SqlDataSource.Inserting
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Inserting
  nameWithType: SqlDataSource.Inserting
  fullName: System.Web.UI.WebControls.SqlDataSource.Inserting
- uid: System.Web.UI.WebControls.SqlDataSource.InsertParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSource.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: SqlDataSource.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.SqlDataSource.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSource.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSource.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: SqlDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.SqlDataSource.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.SqlDataSource.ProviderName
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: ProviderName
  nameWithType: SqlDataSource.ProviderName
  fullName: System.Web.UI.WebControls.SqlDataSource.ProviderName
- uid: System.Web.UI.WebControls.SqlDataSource.SaveViewState
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SaveViewState()
  nameWithType: SqlDataSource.SaveViewState()
  fullName: System.Web.UI.WebControls.SqlDataSource.SaveViewState()
- uid: System.Web.UI.WebControls.SqlDataSource.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: SqlDataSource.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.SqlDataSource.Select(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.SqlDataSource.SelectCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSource.SelectCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSource.SelectCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSource.SelectCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.Selected
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Selected
  nameWithType: SqlDataSource.Selected
  fullName: System.Web.UI.WebControls.SqlDataSource.Selected
- uid: System.Web.UI.WebControls.SqlDataSource.Selecting
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Selecting
  nameWithType: SqlDataSource.Selecting
  fullName: System.Web.UI.WebControls.SqlDataSource.Selecting
- uid: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: SqlDataSourceSelectingEventHandler
  nameWithType: SqlDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.SqlDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.SqlDataSource.SelectParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSource.SortParameterName
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSource.SortParameterName
  fullName: System.Web.UI.WebControls.SqlDataSource.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SqlCacheDependency
  nameWithType: SqlDataSource.SqlCacheDependency
  fullName: System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency
- uid: System.Web.UI.WebControls.SqlDataSource.TrackViewState
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: TrackViewState()
  nameWithType: SqlDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.SqlDataSource.TrackViewState()
- uid: System.Web.UI.WebControls.SqlDataSource.Update
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Update()
  nameWithType: SqlDataSource.Update()
  fullName: System.Web.UI.WebControls.SqlDataSource.Update()
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateCommand
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSource.UpdateCommand
  fullName: System.Web.UI.WebControls.SqlDataSource.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateCommandType
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSource.UpdateCommandType
  fullName: System.Web.UI.WebControls.SqlDataSource.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.Updated
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Updated
  nameWithType: SqlDataSource.Updated
  fullName: System.Web.UI.WebControls.SqlDataSource.Updated
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateParameters
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.SqlDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.SqlDataSource.Updating
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Updating
  nameWithType: SqlDataSource.Updating
  fullName: System.Web.UI.WebControls.SqlDataSource.Updating
- uid: System.Web.UI.WebControls.SqlDataSource.#ctor*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SqlDataSource
  nameWithType: SqlDataSource.SqlDataSource
- uid: System.Web.UI.WebControls.SqlDataSource.CacheDuration*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: SqlDataSource.CacheDuration
- uid: System.Web.UI.WebControls.SqlDataSource.CacheExpirationPolicy*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: SqlDataSource.CacheExpirationPolicy
- uid: System.Web.UI.WebControls.SqlDataSource.CacheKeyDependency*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: SqlDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.SqlDataSource.CancelSelectOnNullParameter*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CancelSelectOnNullParameter
  nameWithType: SqlDataSource.CancelSelectOnNullParameter
- uid: System.Web.UI.WebControls.SqlDataSource.ConflictDetection*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: ConflictDetection
  nameWithType: SqlDataSource.ConflictDetection
- uid: System.Web.UI.WebControls.SqlDataSource.ConnectionString*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: ConnectionString
  nameWithType: SqlDataSource.ConnectionString
- uid: System.Web.UI.WebControls.SqlDataSource.CreateDataSourceView*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: CreateDataSourceView
  nameWithType: SqlDataSource.CreateDataSourceView
- uid: System.Web.UI.WebControls.SqlDataSource.DataSourceMode*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DataSourceMode
  nameWithType: SqlDataSource.DataSourceMode
- uid: System.Web.UI.WebControls.SqlDataSource.Delete*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Delete
  nameWithType: SqlDataSource.Delete
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteCommand*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DeleteCommand
  nameWithType: SqlDataSource.DeleteCommand
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteCommandType*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DeleteCommandType
  nameWithType: SqlDataSource.DeleteCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.DeleteParameters*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: SqlDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.SqlDataSource.EnableCaching*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: SqlDataSource.EnableCaching
- uid: System.Web.UI.WebControls.SqlDataSource.FilterExpression*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: FilterExpression
  nameWithType: SqlDataSource.FilterExpression
- uid: System.Web.UI.WebControls.SqlDataSource.FilterParameters*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: FilterParameters
  nameWithType: SqlDataSource.FilterParameters
- uid: System.Web.UI.WebControls.SqlDataSource.GetDbProviderFactory*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: GetDbProviderFactory
  nameWithType: SqlDataSource.GetDbProviderFactory
- uid: System.Web.UI.WebControls.SqlDataSource.GetView*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: GetView
  nameWithType: SqlDataSource.GetView
- uid: System.Web.UI.WebControls.SqlDataSource.GetViewNames*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: SqlDataSource.GetViewNames
- uid: System.Web.UI.WebControls.SqlDataSource.Insert*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Insert
  nameWithType: SqlDataSource.Insert
- uid: System.Web.UI.WebControls.SqlDataSource.InsertCommand*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: InsertCommand
  nameWithType: SqlDataSource.InsertCommand
- uid: System.Web.UI.WebControls.SqlDataSource.InsertCommandType*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: InsertCommandType
  nameWithType: SqlDataSource.InsertCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.InsertParameters*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: SqlDataSource.InsertParameters
- uid: System.Web.UI.WebControls.SqlDataSource.LoadViewState*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: LoadViewState
  nameWithType: SqlDataSource.LoadViewState
- uid: System.Web.UI.WebControls.SqlDataSource.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: SqlDataSource.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.SqlDataSource.OnInit*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: OnInit
  nameWithType: SqlDataSource.OnInit
- uid: System.Web.UI.WebControls.SqlDataSource.ProviderName*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: ProviderName
  nameWithType: SqlDataSource.ProviderName
- uid: System.Web.UI.WebControls.SqlDataSource.SaveViewState*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SaveViewState
  nameWithType: SqlDataSource.SaveViewState
- uid: System.Web.UI.WebControls.SqlDataSource.Select*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Select
  nameWithType: SqlDataSource.Select
- uid: System.Web.UI.WebControls.SqlDataSource.SelectCommand*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SelectCommand
  nameWithType: SqlDataSource.SelectCommand
- uid: System.Web.UI.WebControls.SqlDataSource.SelectCommandType*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SelectCommandType
  nameWithType: SqlDataSource.SelectCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.SelectParameters*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: SqlDataSource.SelectParameters
- uid: System.Web.UI.WebControls.SqlDataSource.SortParameterName*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SortParameterName
  nameWithType: SqlDataSource.SortParameterName
- uid: System.Web.UI.WebControls.SqlDataSource.SqlCacheDependency*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: SqlCacheDependency
  nameWithType: SqlDataSource.SqlCacheDependency
- uid: System.Web.UI.WebControls.SqlDataSource.TrackViewState*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: TrackViewState
  nameWithType: SqlDataSource.TrackViewState
- uid: System.Web.UI.WebControls.SqlDataSource.Update*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: Update
  nameWithType: SqlDataSource.Update
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateCommand*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: UpdateCommand
  nameWithType: SqlDataSource.UpdateCommand
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateCommandType*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: UpdateCommandType
  nameWithType: SqlDataSource.UpdateCommandType
- uid: System.Web.UI.WebControls.SqlDataSource.UpdateParameters*
  parent: System.Web.UI.WebControls.SqlDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: SqlDataSource.UpdateParameters
