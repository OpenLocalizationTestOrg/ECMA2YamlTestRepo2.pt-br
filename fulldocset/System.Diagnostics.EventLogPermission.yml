### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.EventLogPermission
  id: EventLogPermission
  children:
  - System.Diagnostics.EventLogPermission.#ctor
  - System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])
  - System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)
  - System.Diagnostics.EventLogPermission.PermissionEntries
  langs:
  - csharp
  name: EventLogPermission
  nameWithType: EventLogPermission
  fullName: System.Diagnostics.EventLogPermission
  type: Class
  summary: "Controla as permissões de acesso do código para o log de eventos."
  remarks: "Não conceda EventLogPermission para código parcialmente confiável. A capacidade de ler e gravar no log de eventos permite que o código executar ações como emitir mensagens de log de eventos no nome de outro aplicativo.      > [!NOTE] > Se o evento de origem que é especificado pelo <xref:System.Diagnostics.EventLog.Source%2A?displayProperty=fullName>propriedade para o log de eventos não existe, uma nova fonte de evento é criada.</xref:System.Diagnostics.EventLog.Source%2A?displayProperty=fullName> Para criar uma fonte de evento no Windows Vista e versões posteriores do Windows ou Windows Server 2003, você deve ter privilégios administrativos.   >> O motivo disso é que todos os logs de eventos, incluindo segurança, devem ser pesquisados para determinar se a origem do evento é exclusiva. Começando com o Windows Vista, os usuários não tem permissão para acessar o log de segurança; Portanto, um <xref:System.Security.SecurityException>é gerada.</xref:System.Security.SecurityException>   >> Iniciando com o Windows Vista, controle de conta de usuário (UAC) determina os privilégios de um usuário. Se você for um membro do grupo Administradores interno, são atribuídos dois tokens de acesso de tempo de execução: um token de acesso de usuário padrão e um token de acesso de administrador. Por padrão, você está na função de usuário padrão. Para executar o código que acessa o log de segurança, primeiro elevar seus privilégios de usuário padrão para o administrador. Você pode fazer isso quando você iniciar um aplicativo clicando duas vezes no ícone do aplicativo e que indica que você deseja executar como administrador."
  syntax:
    content: 'public sealed class EventLogPermission : System.Security.Permissions.ResourcePermissionBase'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  - System.Security.Permissions.ResourcePermissionBase
  implements: []
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  - System.Security.Permissions.ResourcePermissionBase.AddPermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  - System.Security.Permissions.ResourcePermissionBase.Any
  - System.Security.Permissions.ResourcePermissionBase.Clear
  - System.Security.Permissions.ResourcePermissionBase.Copy
  - System.Security.Permissions.ResourcePermissionBase.FromXml(System.Security.SecurityElement)
  - System.Security.Permissions.ResourcePermissionBase.GetPermissionEntries
  - System.Security.Permissions.ResourcePermissionBase.Intersect(System.Security.IPermission)
  - System.Security.Permissions.ResourcePermissionBase.IsSubsetOf(System.Security.IPermission)
  - System.Security.Permissions.ResourcePermissionBase.IsUnrestricted
  - System.Security.Permissions.ResourcePermissionBase.Local
  - System.Security.Permissions.ResourcePermissionBase.PermissionAccessType
  - System.Security.Permissions.ResourcePermissionBase.RemovePermissionAccess(System.Security.Permissions.ResourcePermissionBaseEntry)
  - System.Security.Permissions.ResourcePermissionBase.TagNames
  - System.Security.Permissions.ResourcePermissionBase.ToXml
  - System.Security.Permissions.ResourcePermissionBase.Union(System.Security.IPermission)
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.#ctor
  id: '#ctor'
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: EventLogPermission()
  nameWithType: EventLogPermission.EventLogPermission()
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission()
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.EventLogPermission&quot;> </xref> classe."
  syntax:
    content: public EventLogPermission ();
    parameters: []
  overload: System.Diagnostics.EventLogPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])
  id: '#ctor(System.Diagnostics.EventLogPermissionEntry[])'
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: EventLogPermission(EventLogPermissionEntry[])
  nameWithType: EventLogPermission.EventLogPermission(EventLogPermissionEntry[])
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(EventLogPermissionEntry[])
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.EventLogPermission&quot;> </xref> classe com as entradas de permissão especificado."
  syntax:
    content: public EventLogPermission (System.Diagnostics.EventLogPermissionEntry[] permissionAccessEntries);
    parameters:
    - id: permissionAccessEntries
      type: System.Diagnostics.EventLogPermissionEntry[]
      description: "Uma matriz de objetos que representam as entradas de permissão. O <xref:System.Diagnostics.EventLogPermission.PermissionEntries*>propriedade é definida para esse valor.</xref:System.Diagnostics.EventLogPermission.PermissionEntries*>"
  overload: System.Diagnostics.EventLogPermission.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>permissionAccessEntries</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: EventLogPermission(PermissionState)
  nameWithType: EventLogPermission.EventLogPermission(PermissionState)
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(PermissionState)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.EventLogPermission&quot;> </xref> classe com o estado de permissão especificado."
  syntax:
    content: public EventLogPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "Um dos valores de enumeração que especifica o estado de permissão (acesso total ou sem acesso aos recursos)."
  overload: System.Diagnostics.EventLogPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> state </code> parâmetro não é um valor válido de <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>."
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)
  id: '#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)'
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: EventLogPermission(EventLogPermissionAccess,String)
  nameWithType: EventLogPermission.EventLogPermission(EventLogPermissionAccess,String)
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(EventLogPermissionAccess,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.EventLogPermission&quot;> </xref> classe com os níveis de acesso especificado e o nome do computador a ser usado."
  syntax:
    content: public EventLogPermission (System.Diagnostics.EventLogPermissionAccess permissionAccess, string machineName);
    parameters:
    - id: permissionAccess
      type: System.Diagnostics.EventLogPermissionAccess
      description: "Um dos valores de enumeração que especifica um nível de acesso."
    - id: machineName
      type: System.String
      description: "O nome do computador no qual ler ou gravar eventos."
  overload: System.Diagnostics.EventLogPermission.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.EventLogPermission.PermissionEntries
  id: PermissionEntries
  parent: System.Diagnostics.EventLogPermission
  langs:
  - csharp
  name: PermissionEntries
  nameWithType: EventLogPermission.PermissionEntries
  fullName: System.Diagnostics.EventLogPermission.PermissionEntries
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém a coleção de entradas de permissão para esta solicitação de permissões."
  syntax:
    content: public System.Diagnostics.EventLogPermissionEntryCollection PermissionEntries { get; }
    return:
      type: System.Diagnostics.EventLogPermissionEntryCollection
      description: "Uma coleção que contém as entradas de permissão para esta solicitação de permissões."
  overload: System.Diagnostics.EventLogPermission.PermissionEntries*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.ResourcePermissionBase
  isExternal: false
  name: System.Security.Permissions.ResourcePermissionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Diagnostics.EventLogPermission.#ctor
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission()
  nameWithType: EventLogPermission.EventLogPermission()
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission()
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionEntry[])
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission(EventLogPermissionEntry[])
  nameWithType: EventLogPermission.EventLogPermission(EventLogPermissionEntry[])
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(EventLogPermissionEntry[])
- uid: System.Diagnostics.EventLogPermissionEntry[]
  parent: System.Diagnostics
  isExternal: false
  name: EventLogPermissionEntry
  nameWithType: EventLogPermissionEntry
  fullName: System.Diagnostics.EventLogPermissionEntry[]
  spec.csharp:
  - uid: System.Diagnostics.EventLogPermissionEntry
    name: EventLogPermissionEntry
    nameWithType: EventLogPermissionEntry
    fullName: EventLogPermissionEntry[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission(PermissionState)
  nameWithType: EventLogPermission.EventLogPermission(PermissionState)
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Diagnostics.EventLogPermission.#ctor(System.Diagnostics.EventLogPermissionAccess,System.String)
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission(EventLogPermissionAccess,String)
  nameWithType: EventLogPermission.EventLogPermission(EventLogPermissionAccess,String)
  fullName: System.Diagnostics.EventLogPermission.EventLogPermission(EventLogPermissionAccess,String)
- uid: System.Diagnostics.EventLogPermissionAccess
  parent: System.Diagnostics
  isExternal: false
  name: EventLogPermissionAccess
  nameWithType: EventLogPermissionAccess
  fullName: System.Diagnostics.EventLogPermissionAccess
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.EventLogPermission.PermissionEntries
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: PermissionEntries
  nameWithType: EventLogPermission.PermissionEntries
  fullName: System.Diagnostics.EventLogPermission.PermissionEntries
- uid: System.Diagnostics.EventLogPermissionEntryCollection
  parent: System.Diagnostics
  isExternal: false
  name: EventLogPermissionEntryCollection
  nameWithType: EventLogPermissionEntryCollection
  fullName: System.Diagnostics.EventLogPermissionEntryCollection
- uid: System.Diagnostics.EventLogPermission.#ctor*
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: EventLogPermission
  nameWithType: EventLogPermission.EventLogPermission
- uid: System.Diagnostics.EventLogPermission.PermissionEntries*
  parent: System.Diagnostics.EventLogPermission
  isExternal: false
  name: PermissionEntries
  nameWithType: EventLogPermission.PermissionEntries
