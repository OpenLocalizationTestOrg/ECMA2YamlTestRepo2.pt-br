### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor
  id: InstanceDescriptor
  children:
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  - System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  langs:
  - csharp
  name: InstanceDescriptor
  nameWithType: InstanceDescriptor
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor
  type: Class
  summary: "Fornece as informações necessárias para criar uma instância de um objeto. Essa classe não pode ser herdada."
  remarks: "InstanceDescriptor pode armazenar informações que descrevem a uma instância de um objeto. Essas informações podem ser usadas para criar uma instância do objeto.       Alguns serializadores personalizados usam InstanceDescriptor para representar objetos serializáveis. Vários métodos de um <xref:System.ComponentModel.TypeDescriptor>usar InstanceDescriptor para representar ou instanciar objetos.</xref:System.ComponentModel.TypeDescriptor>       Um InstanceDescriptor fornece os seguintes membros:: um <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>propriedade que descreve este objeto.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>      -Um <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments%2A>propriedade consiste os argumentos de construtor que podem ser usados para criar uma instância deste objeto.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments%2A>      -Um valor booleano <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete%2A>propriedade que indica se o objeto completamente é representado pelas informações atuais.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete%2A>      -Um <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke%2A>método que pode ser usado para criar uma instância do objeto representado.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke%2A>"
  example:
  - "The following code example illustrates how to use a type converter that participates in code generation through the use of instance descriptors.  \n  \n [!code-cpp[InstanceDescriptorSample#1](~/add/codesnippet/cpp/t-system.componentmodel._121_1.cpp)]\n [!code-vb[InstanceDescriptorSample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._121_1.vb)]\n [!code-cs[InstanceDescriptorSample#1](~/add/codesnippet/csharp/t-system.componentmodel._121_1.cs)]"
  syntax:
    content: public sealed class InstanceDescriptor
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)
  id: '#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)'
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: InstanceDescriptor(MemberInfo,ICollection)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref> classe usando os argumentos e as informações do membro especificado."
  syntax:
    content: public InstanceDescriptor (System.Reflection.MemberInfo member, System.Collections.ICollection arguments);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "As informações de membro para o descritor. This can be a <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.ConstructorInfo>, <xref:System.Reflection.FieldInfo>, or <xref:System.Reflection.PropertyInfo>.</xref:System.Reflection.PropertyInfo></xref:System.Reflection.FieldInfo></xref:System.Reflection.ConstructorInfo></xref:System.Reflection.MethodInfo> Se esse for um <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.FieldInfo>, ou <xref:System.Reflection.PropertyInfo>, ele deve representar um <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> membro.</xref:System.Reflection.PropertyInfo> </xref:System.Reflection.FieldInfo> </xref:System.Reflection.MethodInfo>"
    - id: arguments
      type: System.Collections.ICollection
      description: "A coleção de argumentos para passar para o membro. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma coleção vazia se não houver nenhum argumento. A coleção também pode consistir em outras instâncias do <xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>member</code>é do tipo <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.FieldInfo>, ou <xref:System.Reflection.PropertyInfo>, e ele não representa um <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> membro.       <code>member</code>é do tipo <xref:System.Reflection.PropertyInfo> e não é legível.       <code>member</code>é do tipo <xref:System.Reflection.MethodInfo> ou <xref:System.Reflection.ConstructorInfo>e o número de argumentos em <code>arguments</code> não coincide com a assinatura de <code>member.</code> <code>member</code> é do tipo <xref:System.Reflection.ConstructorInfo> e representa um <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> membro.       <code>member</code>é do tipo <xref:System.Reflection.FieldInfo>e o número de argumentos em <code>arguments</code> não é zero."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)
  id: '#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)'
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: InstanceDescriptor(MemberInfo,ICollection,Boolean)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref> usando as informações do membro especificado, argumentos e valor que indica se as informações especificadas descrevem completamente a instância de classe."
  syntax:
    content: public InstanceDescriptor (System.Reflection.MemberInfo member, System.Collections.ICollection arguments, bool isComplete);
    parameters:
    - id: member
      type: System.Reflection.MemberInfo
      description: "As informações de membro para o descritor. This can be a <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.ConstructorInfo>, <xref:System.Reflection.FieldInfo>, or <xref:System.Reflection.PropertyInfo>.</xref:System.Reflection.PropertyInfo></xref:System.Reflection.FieldInfo></xref:System.Reflection.ConstructorInfo></xref:System.Reflection.MethodInfo> Se esse for um <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.FieldInfo>, ou <xref:System.Reflection.PropertyInfo>, ele deve representar um <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> membro.</xref:System.Reflection.PropertyInfo> </xref:System.Reflection.FieldInfo> </xref:System.Reflection.MethodInfo>"
    - id: arguments
      type: System.Collections.ICollection
      description: "A coleção de argumentos para passar para o membro. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma coleção vazia se não houver nenhum argumento. A coleção também pode consistir em outras instâncias do <xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref>."
    - id: isComplete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as informações especificadas descrevem completamente a instância; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>member</code>é do tipo <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.FieldInfo>, ou <xref:System.Reflection.PropertyInfo>, e ele não representa um <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> membro <code>member</code> é do tipo <xref:System.Reflection.PropertyInfo> e não é legível.       <code>member</code>é do tipo <xref:System.Reflection.MethodInfo> ou <xref:System.Reflection.ConstructorInfo> e o número de argumentos em <code>arguments</code> não coincide com a assinatura de <code>member</code>.       <code>member</code>é do tipo <xref:System.Reflection.ConstructorInfo> e representa um <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> membro <code>member</code> é do tipo <xref:System.Reflection.FieldInfo>e o número de argumentos em <code>arguments</code> não é zero."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  id: Arguments
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: Arguments
  nameWithType: InstanceDescriptor.Arguments
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém a coleção de argumentos que podem ser usados para reconstruir uma instância do objeto que representa esse descritor de instância."
  syntax:
    content: public System.Collections.ICollection Arguments { get; }
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>de argumentos que podem ser usados para criar o objeto.</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
  id: Invoke
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: Invoke()
  nameWithType: InstanceDescriptor.Invoke()
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Invoca esse descritor de instância e retorna que o objeto descritor descreve."
  remarks: "Esse método cria uma nova instância do objeto indicado pelo <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>propriedade, usando os argumentos especificados para criar esse tipo específico de instância.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo%2A>"
  syntax:
    content: public object Invoke ();
    parameters: []
    return:
      type: System.Object
      description: "O objeto que descreve esse descritor de instância."
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  id: IsComplete
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: IsComplete
  nameWithType: InstanceDescriptor.IsComplete
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém um valor que indica se o conteúdo desse <xref href=&quot;System.ComponentModel.Design.Serialization.InstanceDescriptor&quot;> </xref> completamente identificar a instância."
  remarks: "Normalmente, um <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>descreve uma determinada instância.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor> No entanto, alguns objetos são muito complexos para um único método ou construtor para representar. IsComplete indica se um <xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>estiver incompleta, para que um usuário possa identificar esses objetos e executar processamento adicional, se necessário, para mais descrever seu estado.</xref:System.ComponentModel.Design.Serialization.InstanceDescriptor>"
  syntax:
    content: public bool IsComplete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a instância é descrita completamente; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  id: MemberInfo
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  langs:
  - csharp
  name: MemberInfo
  nameWithType: InstanceDescriptor.MemberInfo
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém as informações de membro que descreve a instância que esse descritor está associado."
  remarks: "O valor dessa propriedade pode ser um <xref:System.Reflection.MethodInfo>, <xref:System.Reflection.ConstructorInfo>, <xref:System.Reflection.FieldInfo>, ou <xref:System.Reflection.PropertyInfo>.</xref:System.Reflection.PropertyInfo> </xref:System.Reflection.FieldInfo> </xref:System.Reflection.ConstructorInfo> </xref:System.Reflection.MethodInfo>"
  syntax:
    content: public System.Reflection.MemberInfo MemberInfo { get; }
    return:
      type: System.Reflection.MemberInfo
      description: "Um <xref:System.Reflection.MemberInfo>que descreve a instância que esse objeto é associado.</xref:System.Reflection.MemberInfo>"
  overload: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: InstanceDescriptor(MemberInfo,ICollection)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection)
- uid: System.Reflection.MemberInfo
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor(System.Reflection.MemberInfo,System.Collections.ICollection,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: InstanceDescriptor(MemberInfo,ICollection,Boolean)
  nameWithType: InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.InstanceDescriptor(MemberInfo,ICollection,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Arguments
  nameWithType: InstanceDescriptor.Arguments
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Invoke()
  nameWithType: InstanceDescriptor.Invoke()
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke()
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: IsComplete
  nameWithType: InstanceDescriptor.IsComplete
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: MemberInfo
  nameWithType: InstanceDescriptor.MemberInfo
  fullName: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.#ctor*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: InstanceDescriptor
  nameWithType: InstanceDescriptor.InstanceDescriptor
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Arguments*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Arguments
  nameWithType: InstanceDescriptor.Arguments
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.Invoke*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: Invoke
  nameWithType: InstanceDescriptor.Invoke
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.IsComplete*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: IsComplete
  nameWithType: InstanceDescriptor.IsComplete
- uid: System.ComponentModel.Design.Serialization.InstanceDescriptor.MemberInfo*
  parent: System.ComponentModel.Design.Serialization.InstanceDescriptor
  isExternal: false
  name: MemberInfo
  nameWithType: InstanceDescriptor.MemberInfo
