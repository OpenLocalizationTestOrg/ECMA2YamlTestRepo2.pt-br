### YamlMime:ManagedReference
items:
- uid: System.Messaging.ReceiveCompletedEventArgs
  id: ReceiveCompletedEventArgs
  children:
  - System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  - System.Messaging.ReceiveCompletedEventArgs.Message
  langs:
  - csharp
  name: ReceiveCompletedEventArgs
  nameWithType: ReceiveCompletedEventArgs
  fullName: System.Messaging.ReceiveCompletedEventArgs
  type: Class
  summary: "Fornece dados para o <xref href=&quot;System.Messaging.MessageQueue.ReceiveCompleted&quot;> </xref> eventos. Ao recebe seu assíncrona operação chama um manipulador de eventos, uma instância dessa classe é passada para o manipulador."
  remarks: "Quando você usa a notificação de eventos para receber mensagens da fila de forma assíncrona, você deve criar um método que manipula o processamento de mensagem. Seu código deve chamar <xref:System.Messaging.MessageQueue.BeginReceive%2A>para iniciar o processamento assíncrono.</xref:System.Messaging.MessageQueue.BeginReceive%2A> Quando uma mensagem é recebida, o aplicativo é notificado por meio do <xref:System.Messaging.MessageQueue.ReceiveCompleted>evento.</xref:System.Messaging.MessageQueue.ReceiveCompleted> Uma instância de ReceiveCompletedEventArgs é passada para o delegado de evento que chama o manipulador de eventos. Os dados associados a <xref:System.Messaging.MessageQueue.ReceiveCompleted>evento está contido no delegado <xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A>parâmetro.</xref:System.Messaging.ReceiveCompletedEventArgs.AsyncResult%2A> </xref:System.Messaging.MessageQueue.ReceiveCompleted>       Há duas maneiras de fornecer notificação de evento de conclusão: notificação de eventos e retornos de chamada. ReceiveCompletedEventArgs é usado somente com a notificação de eventos. Para obter informações sobre como comparar os retornos de chamada e notificação de eventos, consulte &quot;eventos vs. Retornos de chamada&quot;no MSDN.       ReceiveCompletedEventArgs fornece acesso para a mensagem que iniciou o fim do receber operação, por meio de <xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A>membro.</xref:System.Messaging.ReceiveCompletedEventArgs.Message%2A> Isso é um alternativo de acesso para a mensagem e se comporta semelhante a uma chamada para <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>.</xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>"
  example:
  - "The following code example creates an event handler for the <xref:System.Messaging.MessageQueue.ReceiveCompleted> event and associates it with the event delegate by using the <xref:System.Messaging.ReceiveCompletedEventHandler>. The event handler, `MyReceiveCompleted`, receives a message from a queue and writes its body to the screen.  \n  \n [!code-cs[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/csharp/t-system.messaging.recei_1_1.cs)]\n [!code-cpp[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/cpp/t-system.messaging.recei_1_1.cpp)]\n [!code-vb[MessageQueue.ReceiveCompleted#1](~/add/codesnippet/visualbasic/t-system.messaging.recei_1_1.vb)]"
  syntax:
    content: 'public class ReceiveCompletedEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  id: AsyncResult
  parent: System.Messaging.ReceiveCompletedEventArgs
  langs:
  - csharp
  name: AsyncResult
  nameWithType: ReceiveCompletedEventArgs.AsyncResult
  fullName: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define o resultado da operação assíncrona solicitada."
  remarks: "AsyncResult identifica as operações assíncronas em andamento ou concluídas. A propriedade contém dados que ajudam a determinar qual várias operações assíncronas potenciais para ser concluída, e quando passados para o manipulador de eventos, permite <xref:System.Messaging.MessageQueue.EndReceive%2A>para acessar a mensagem associada à operação concluída.</xref:System.Messaging.MessageQueue.EndReceive%2A>       Quando você chama <xref:System.Messaging.MessageQueue.BeginReceive%2A>, um <xref:System.IAsyncResult>é retornado imediatamente, mesmo que uma mensagem, se houver, tem ainda não foram recuperada porque não é possível concluir a operação.</xref:System.IAsyncResult> </xref:System.Messaging.MessageQueue.BeginReceive%2A> O AsyncResult indica o estado da operação assíncrona. <xref:System.Messaging.MessageQueue.BeginReceive%2A>cria o objeto, que é modificado durante a operação até a <xref:System.Messaging.MessageQueue.EndReceive%2A>conclusão do proprietário.</xref:System.Messaging.MessageQueue.EndReceive%2A></xref:System.Messaging.MessageQueue.BeginReceive%2A>"
  syntax:
    content: public IAsyncResult AsyncResult { get; set; }
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que contém os dados associados com a operação de recebimento.</xref:System.IAsyncResult>"
  overload: System.Messaging.ReceiveCompletedEventArgs.AsyncResult*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.ReceiveCompletedEventArgs.Message
  id: Message
  parent: System.Messaging.ReceiveCompletedEventArgs
  langs:
  - csharp
  name: Message
  nameWithType: ReceiveCompletedEventArgs.Message
  fullName: System.Messaging.ReceiveCompletedEventArgs.Message
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém a mensagem associada com o assíncrona a operação de recebimento."
  remarks: "A propriedade de mensagem fornece um meio para recuperar a mensagem que iniciou o fim do operação de recebimento.       <xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>é chamado na primeira vez em que a propriedade de mensagem é lida, portanto, não é necessário chamar <xref:System.Messaging.MessageQueue.EndReceive%2A>antes de obter o valor dessa propriedade.</xref:System.Messaging.MessageQueue.EndReceive%2A></xref:System.Messaging.MessageQueue.EndReceive%2A?displayProperty=fullName>"
  syntax:
    content: public System.Messaging.Message Message { get; }
    return:
      type: System.Messaging.Message
      description: "Um <xref href=&quot;System.Messaging.Message&quot;> </xref> que representa o fim do resultado da operação de recebimento."
  overload: System.Messaging.ReceiveCompletedEventArgs.Message*
  exceptions:
  - type: System.Messaging.MessageQueueException
    commentId: T:System.Messaging.MessageQueueException
    description: "A mensagem não pôde ser recuperada. O tempo limite em que a operação assíncrona pode ter expirado."
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Messaging.MessageQueueException
  parent: System.Messaging
  isExternal: false
  name: MessageQueueException
  nameWithType: MessageQueueException
  fullName: System.Messaging.MessageQueueException
- uid: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: AsyncResult
  nameWithType: ReceiveCompletedEventArgs.AsyncResult
  fullName: System.Messaging.ReceiveCompletedEventArgs.AsyncResult
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Messaging.ReceiveCompletedEventArgs.Message
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: Message
  nameWithType: ReceiveCompletedEventArgs.Message
  fullName: System.Messaging.ReceiveCompletedEventArgs.Message
- uid: System.Messaging.Message
  parent: System.Messaging
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Messaging.Message
- uid: System.Messaging.ReceiveCompletedEventArgs.AsyncResult*
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: AsyncResult
  nameWithType: ReceiveCompletedEventArgs.AsyncResult
- uid: System.Messaging.ReceiveCompletedEventArgs.Message*
  parent: System.Messaging.ReceiveCompletedEventArgs
  isExternal: false
  name: Message
  nameWithType: ReceiveCompletedEventArgs.Message
