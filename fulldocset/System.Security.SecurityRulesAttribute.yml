### YamlMime:ManagedReference
items:
- uid: System.Security.SecurityRulesAttribute
  id: SecurityRulesAttribute
  children:
  - System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)
  - System.Security.SecurityRulesAttribute.RuleSet
  - System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
  langs:
  - csharp
  name: SecurityRulesAttribute
  nameWithType: SecurityRulesAttribute
  fullName: System.Security.SecurityRulesAttribute
  type: Class
  summary: "Indica o conjunto de regras de segurança que do common language runtime deve impor para um assembly."
  remarks: "Essa classe indica qual conjunto de regras de segurança que do common language runtime deve impor para um assembly. Por exemplo, um assembly que está marcado com `[SecurityRules(SecurityRuleSet.Level1)]` usa as regras de transparência do .NET Framework versão 2.0, onde críticas de segurança tipos e membros públicas são tratados como safe-crítico de segurança fora do assembly. Isso requer tipos críticos de segurança e membros executar uma solicitação de link de confiança total para impor um comportamento de segurança crítica quando eles são acessados por chamadores externos. Normalmente, as regras de nível 1 devem ser usadas somente para compatibilidade, como para assemblies da versão 2.0. Para obter mais informações sobre o comportamento de nível 1, consulte [código transparente de segurança, nível 1](~/add/includes/ajax-current-ext-md.md). Para obter informações sobre o comportamento de nível 2, consulte [código transparente de segurança, nível 2](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly, AllowMultiple=false)]

      public sealed class SecurityRulesAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)
  id: '#ctor(System.Security.SecurityRuleSet)'
  parent: System.Security.SecurityRulesAttribute
  langs:
  - csharp
  name: SecurityRulesAttribute(SecurityRuleSet)
  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)
  fullName: System.Security.SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.SecurityRulesAttribute&quot;> </xref> classe usando o valor do conjunto de regra especificada."
  remarks: "Quando você especifica o `ruleSet` parâmetro, use <xref:System.Security.SecurityRuleSet>para as regras do .NET Framework versão 2.0 ou <xref:System.Security.SecurityRuleSet>para [!INCLUDE[net_v40_short](~/add/includes/net-v40-short-md.md)] regras.</xref:System.Security.SecurityRuleSet> </xref:System.Security.SecurityRuleSet> Para obter mais informações sobre <xref:System.Security.SecurityRuleSet>comportamento, consulte [código transparente de segurança, nível 1](~/add/includes/ajax-current-ext-md.md).</xref:System.Security.SecurityRuleSet> Para obter informações sobre <xref:System.Security.SecurityRuleSet>comportamento, consulte [código transparente de segurança, nível 2](~/add/includes/ajax-current-ext-md.md).</xref:System.Security.SecurityRuleSet>"
  syntax:
    content: public SecurityRulesAttribute (System.Security.SecurityRuleSet ruleSet);
    parameters:
    - id: ruleSet
      type: System.Security.SecurityRuleSet
      description: "Um dos valores de enumeração que especifica as regras de transparência definido."
  overload: System.Security.SecurityRulesAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityRulesAttribute.RuleSet
  id: RuleSet
  parent: System.Security.SecurityRulesAttribute
  langs:
  - csharp
  name: RuleSet
  nameWithType: SecurityRulesAttribute.RuleSet
  fullName: System.Security.SecurityRulesAttribute.RuleSet
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Obtém o conjunto de regras para ser aplicada."
  syntax:
    content: public System.Security.SecurityRuleSet RuleSet { get; }
    return:
      type: System.Security.SecurityRuleSet
      description: "Um dos valores de enumeração que especifica as regras de transparência a ser aplicado."
  overload: System.Security.SecurityRulesAttribute.RuleSet*
  exceptions: []
  platform:
  - net462
- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
  id: SkipVerificationInFullTrust
  parent: System.Security.SecurityRulesAttribute
  langs:
  - csharp
  name: SkipVerificationInFullTrust
  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust
  fullName: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security
  summary: "Determina se o código totalmente confiável de transparência deve ignorar verificação do Microsoft intermediate language (MSIL)."
  remarks: "Essa propriedade deve ser usada somente para a otimização, porque as garantias de segurança feitas para o código transparente não podem ser aplicadas se o código não é verificável.       Se você usar essa propriedade para ignorar a verificação de MSIL para um assembly, use o `transparent` opção o estaticamente verificar que o assembly&quot;s transparente código atende digite requisitos de segurança."
  syntax:
    content: public bool SkipVerificationInFullTrust { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a verificação de MSIL deve ser ignorada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Security.SecurityRulesAttribute.#ctor(System.Security.SecurityRuleSet)
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: SecurityRulesAttribute(SecurityRuleSet)
  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)
  fullName: System.Security.SecurityRulesAttribute.SecurityRulesAttribute(SecurityRuleSet)
- uid: System.Security.SecurityRuleSet
  parent: System.Security
  isExternal: false
  name: SecurityRuleSet
  nameWithType: SecurityRuleSet
  fullName: System.Security.SecurityRuleSet
- uid: System.Security.SecurityRulesAttribute.RuleSet
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: RuleSet
  nameWithType: SecurityRulesAttribute.RuleSet
  fullName: System.Security.SecurityRulesAttribute.RuleSet
- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: SkipVerificationInFullTrust
  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust
  fullName: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.SecurityRulesAttribute.#ctor*
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: SecurityRulesAttribute
  nameWithType: SecurityRulesAttribute.SecurityRulesAttribute
- uid: System.Security.SecurityRulesAttribute.RuleSet*
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: RuleSet
  nameWithType: SecurityRulesAttribute.RuleSet
- uid: System.Security.SecurityRulesAttribute.SkipVerificationInFullTrust*
  parent: System.Security.SecurityRulesAttribute
  isExternal: false
  name: SkipVerificationInFullTrust
  nameWithType: SecurityRulesAttribute.SkipVerificationInFullTrust
