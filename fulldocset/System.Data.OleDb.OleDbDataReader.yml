### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbDataReader
  id: OleDbDataReader
  children:
  - System.Data.OleDb.OleDbDataReader.Close
  - System.Data.OleDb.OleDbDataReader.Depth
  - System.Data.OleDb.OleDbDataReader.FieldCount
  - System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetData(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetEnumerator
  - System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetName(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)
  - System.Data.OleDb.OleDbDataReader.GetSchemaTable
  - System.Data.OleDb.OleDbDataReader.GetString(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)
  - System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])
  - System.Data.OleDb.OleDbDataReader.HasRows
  - System.Data.OleDb.OleDbDataReader.IsClosed
  - System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)
  - System.Data.OleDb.OleDbDataReader.Item(System.Int32)
  - System.Data.OleDb.OleDbDataReader.Item(System.String)
  - System.Data.OleDb.OleDbDataReader.NextResult
  - System.Data.OleDb.OleDbDataReader.Read
  - System.Data.OleDb.OleDbDataReader.RecordsAffected
  - System.Data.OleDb.OleDbDataReader.VisibleFieldCount
  langs:
  - csharp
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
  type: Class
  summary: "Fornece uma maneira de leitura de um fluxo somente de encaminhamento de linhas de dados de uma fonte de dados. Essa classe não pode ser herdada."
  remarks: "Para criar um OleDbDataReader, você deve chamar o <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>método de <xref:System.Data.OleDb.OleDbCommand>objeto, em vez de usar um construtor diretamente.</xref:System.Data.OleDb.OleDbCommand> </xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>       Antes de fechar o <xref:System.Data.OleDb.OleDbConnection>, feche primeiro o objeto OleDbDataReader.</xref:System.Data.OleDb.OleDbConnection> Você também deve fechar o objeto OleDbDataReader se você planeja resuse um objeto <xref:System.Data.OleDb.OleDbCommand>. Por exemplo, você não poderá recuperar parâmetros de saída até depois de chamar <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.</xref:System.Data.OleDb.OleDbDataReader.Close%2A> </xref:System.Data.OleDb.OleDbCommand>       As alterações feitas em um conjunto de resultados por outro processo ou thread enquanto dados estão sendo lidos podem estar visíveis para o usuário do OleDbDataReader. No entanto, o comportamento preciso depende do tempo.       <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A>e <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>são as únicas propriedades que você pode chamar após o OleDbDataReader está fechado.</xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A></xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A> Embora o <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>propriedade pode ser acessado enquanto o OleDbDataReader existe, sempre chamar <xref:System.Data.OleDb.OleDbDataReader.Close%2A>antes de retornar o valor de <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>para garantir um valor de retorno exato.</xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A> </xref:System.Data.OleDb.OleDbDataReader.Close%2A> </xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an OleDbDataReader. The example reads through the data, writing it out to the console. Finally, the example closes the OleDbDataReader and then the <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-vb[Classic WebData OleDbDataReader Example#1](~/add/codesnippet/visualbasic/t-system.data.oledb.oled_2_1.vb)]\n [!code-cs[Classic WebData OleDbDataReader Example#1](~/add/codesnippet/csharp/t-system.data.oledb.oled_2_1.cs)]"
  syntax:
    content: 'public sealed class OleDbDataReader : System.Data.Common.DbDataReader'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Data.Common.DbDataReader
  implements: []
  inheritedMembers:
  - System.Data.Common.DbDataReader.Dispose
  - System.Data.Common.DbDataReader.Dispose(System.Boolean)
  - System.Data.Common.DbDataReader.GetFieldValue``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32)
  - System.Data.Common.DbDataReader.GetFieldValueAsync``1(System.Int32,System.``0hreading.Cancellation``0oken)
  - System.Data.Common.DbDataReader.GetProviderSpecificFieldType(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValue(System.Int32)
  - System.Data.Common.DbDataReader.GetProviderSpecificValues(System.Object[])
  - System.Data.Common.DbDataReader.GetStream(System.Int32)
  - System.Data.Common.DbDataReader.GetTextReader(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32)
  - System.Data.Common.DbDataReader.IsDBNullAsync(System.Int32,System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.NextResultAsync
  - System.Data.Common.DbDataReader.NextResultAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.ReadAsync
  - System.Data.Common.DbDataReader.ReadAsync(System.Threading.CancellationToken)
  - System.Data.Common.DbDataReader.System#Data#IDataRecord#GetData(System.Int32)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Close
  id: Close
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Close()
  nameWithType: OleDbDataReader.Close()
  fullName: System.Data.OleDb.OleDbDataReader.Close()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Fecha o <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> objeto."
  remarks: "Você deve chamar explicitamente o método Close quando você estiver usando o <xref:System.Data.OleDb.OleDbDataReader>usar associado <xref:System.Data.OleDb.OleDbConnection>para qualquer outra finalidade.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbDataReader>      > [!CAUTION] > Não chame **fechar** ou **Dispose** em uma Conexão, um DataReader ou qualquer objeto gerenciado no **Finalize** método de sua classe. Em um finalizador, você só deve liberar recursos não gerenciados que sua classe possui diretamente. Se sua classe não possui todos os recursos não gerenciados, não inclua um **Finalize** método em sua definição de classe. Para obter mais informações, consulte [coleta de lixo](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader>, and then the <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_24_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_24_1.vb)]"
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Data.OleDb.OleDbDataReader.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Depth
  id: Depth
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Depth
  nameWithType: OleDbDataReader.Depth
  fullName: System.Data.OleDb.OleDbDataReader.Depth
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém um valor que indica a profundidade de aninhamento da linha atual."
  remarks: "A tabela externa tem uma profundidade de zero."
  syntax:
    content: public override int Depth { get; }
    return:
      type: System.Int32
      description: "A profundidade de aninhamento da linha atual."
  overload: System.Data.OleDb.OleDbDataReader.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.FieldCount
  id: FieldCount
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: FieldCount
  nameWithType: OleDbDataReader.FieldCount
  fullName: System.Data.OleDb.OleDbDataReader.FieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o número de colunas na linha atual."
  remarks: "Inclui campos ocultos. Use <xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A>para excluir os campos ocultos.</xref:System.Data.OleDb.OleDbDataReader.VisibleFieldCount%2A>       Depois de executar uma consulta que não retorna linhas, FieldCount retornará 0."
  syntax:
    content: public override int FieldCount { get; }
    return:
      type: System.Int32
      description: "Quando não posicionado em um conjunto de registros válido, 0; Caso contrário, o número de colunas no registro atual. O padrão é -1."
  overload: System.Data.OleDb.OleDbDataReader.FieldCount*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não há nenhuma conexão atual para uma fonte de dados."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)
  id: GetBoolean(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetBoolean(Int32)
  nameWithType: OleDbDataReader.GetBoolean(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetBoolean(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como um valor booleano."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um booliano ou uma exceção será gerada.       Chamar <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>para procurar por valores nulos antes de chamar esse método.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override bool GetBoolean (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Boolean
      description: "O valor da coluna."
  overload: System.Data.OleDb.OleDbDataReader.GetBoolean*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)
  id: GetByte(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetByte(Int32)
  nameWithType: OleDbDataReader.GetByte(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetByte(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como um byte."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um byte.       Chamar <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>para procurar por valores nulos antes de chamar esse método.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override byte GetByte (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Byte
      description: "O valor da coluna especificada como um byte."
  overload: System.Data.OleDb.OleDbDataReader.GetByte*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  id: GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lê um fluxo de bytes do deslocamento de coluna especificado no buffer como uma matriz, começando no deslocamento de buffer fornecido."
  remarks: "GetBytes retorna o número de bytes disponíveis no campo. Na maioria das vezes, isso é o comprimento exato do campo. No entanto, o número retornado pode ser menor que o comprimento real do campo se `GetBytes` já foi usado para obter os bytes do campo. Isso pode ser o caso, por exemplo, quando o <xref:System.Data.OleDb.OleDbDataReader>está lendo uma estrutura de dados grande em um buffer.</xref:System.Data.OleDb.OleDbDataReader> Para obter mais informações, consulte o `SequentialAccess` configuração <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       Se você passar um buffer que está `null`, GetBytes retorna o comprimento do campo em bytes.       Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser uma matriz de bytes."
  syntax:
    content: public override long GetBytes (int ordinal, long dataIndex, byte[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    - id: dataIndex
      type: System.Int64
      description: "O índice dentro do campo no qual iniciar a operação de leitura."
    - id: buffer
      type: System.Byte[]
      description: "O buffer no qual ler o fluxo de bytes."
    - id: bufferIndex
      type: System.Int32
      description: "O índice dentro de `buffer` onde a operação de gravação é iniciar."
    - id: length
      type: System.Int32
      description: "O comprimento máximo para copiar para o buffer."
    return:
      type: System.Int64
      description: "O número real de bytes lidos."
  overload: System.Data.OleDb.OleDbDataReader.GetBytes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)
  id: GetChar(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetChar(Int32)
  nameWithType: OleDbDataReader.GetChar(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetChar(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como um caractere."
  remarks: "Não tem suporte para <xref:System.Data.OleDb>.</xref:System.Data.OleDb>"
  syntax:
    content: public override char GetChar (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Char
      description: "O valor da coluna especificada."
  overload: System.Data.OleDb.OleDbDataReader.GetChar*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  id: GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Lê um fluxo de caracteres do deslocamento de coluna especificado no buffer como uma matriz, começando no deslocamento de buffer fornecido."
  remarks: "GetChars retorna o número de caracteres disponíveis no campo. Na maioria das vezes, isso é o comprimento exato do campo. No entanto, o número retornado pode ser menor que o comprimento real do campo se `GetChars` já foi usado para obter caracteres do campo. Isso pode ser o caso, por exemplo, quando o <xref:System.Data.OleDb.OleDbDataReader>está lendo uma estrutura de dados grande em um buffer.</xref:System.Data.OleDb.OleDbDataReader> Para obter mais informações, consulte o `SequentialAccess` configuração <xref:System.Data.CommandBehavior>.</xref:System.Data.CommandBehavior>       Se você passar um buffer que está `null`, GetChars retorna o comprimento do campo em caracteres.       Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser uma matriz de caracteres."
  syntax:
    content: public override long GetChars (int ordinal, long dataIndex, char[] buffer, int bufferIndex, int length);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    - id: dataIndex
      type: System.Int64
      description: "O índice dentro da linha na qual iniciar a operação de leitura."
    - id: buffer
      type: System.Char[]
      description: "O buffer no qual copiar dados."
    - id: bufferIndex
      type: System.Int32
      description: "O índice dentro de `buffer` onde a operação de gravação é iniciar."
    - id: length
      type: System.Int32
      description: "O número de caracteres a serem lidos."
    return:
      type: System.Int64
      description: "O número real de caracteres lidos."
  overload: System.Data.OleDb.OleDbDataReader.GetChars*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetData(System.Int32)
  id: GetData(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetData(Int32)
  nameWithType: OleDbDataReader.GetData(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetData(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retorna um <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> objeto para o ordinal da coluna solicitada."
  remarks: "O <xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>chamará GetData se o provedor retorna um <xref:System.Data.IDataReader>que tenha uma coluna que dá suporte a <xref:System.Data.IDataReader>.</xref:System.Data.IDataReader> </xref:System.Data.IDataReader> </xref:System.Data.OleDb.OleDbDataAdapter.Fill%2A>"
  syntax:
    content: public System.Data.OleDb.OleDbDataReader GetData (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Um <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> objeto."
  overload: System.Data.OleDb.OleDbDataReader.GetData*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)
  id: GetDataTypeName(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDataTypeName(Int32)
  nameWithType: OleDbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDataTypeName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o nome do tipo de dados de origem."
  syntax:
    content: public override string GetDataTypeName (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.String
      description: "O nome do tipo de dados de back-end. Para obter mais informações, consulte [tipos de dados do SQL Server](http://go.microsoft.com/fwlink/?LinkId=198032) ou [acessar tipos de dados](http://go.microsoft.com/fwlink/?LinkId=198033)."
  overload: System.Data.OleDb.OleDbDataReader.GetDataTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)
  id: GetDateTime(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDateTime(Int32)
  nameWithType: OleDbDataReader.GetDateTime(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDateTime(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como uma <xref:System.DateTime>objeto.</xref:System.DateTime>"
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um <xref:System.DateTime>objeto.</xref:System.DateTime>       Chamar <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>para procurar por valores nulos antes de chamar esse método.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override DateTime GetDateTime (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.DateTime
      description: "O valor da coluna especificada."
  overload: System.Data.OleDb.OleDbDataReader.GetDateTime*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)
  id: GetDbDataReader(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDbDataReader(Int32)
  nameWithType: OleDbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDbDataReader(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  syntax:
    content: protected override System.Data.Common.DbDataReader GetDbDataReader (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A ser adicionado."
    return:
      type: System.Data.Common.DbDataReader
      description: "A ser adicionado."
  overload: System.Data.OleDb.OleDbDataReader.GetDbDataReader*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)
  id: GetDecimal(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDecimal(Int32)
  nameWithType: OleDbDataReader.GetDecimal(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDecimal(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como uma <xref:System.Decimal>objeto.</xref:System.Decimal>"
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um <xref:System.Decimal>objeto.</xref:System.Decimal>       Chamar <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>para procurar por valores nulos antes de chamar esse método.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override decimal GetDecimal (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Decimal
      description: "O valor da coluna especificada."
  overload: System.Data.OleDb.OleDbDataReader.GetDecimal*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)
  id: GetDouble(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetDouble(Int32)
  nameWithType: OleDbDataReader.GetDouble(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDouble(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como um número de ponto flutuante de precisão dupla."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um número de ponto flutuante de precisão dupla.       Chamar <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>para procurar por valores nulos antes de chamar esse método.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override double GetDouble (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Double
      description: "O valor da coluna especificada."
  overload: System.Data.OleDb.OleDbDataReader.GetDouble*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetEnumerator
  id: GetEnumerator
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: OleDbDataReader.GetEnumerator()
  fullName: System.Data.OleDb.OleDbDataReader.GetEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retorna um <xref:System.Collections.IEnumerator>que pode ser usado para iterar pelas linhas no leitor de dados.</xref:System.Collections.IEnumerator>"
  remarks: "Embora você possa usar esse método para recuperar um enumerador explícito, em idiomas que dão suporte a um `foreach` construção, é mais simples usar a construção de loop diretamente para percorrer as linhas no leitor de dados."
  syntax:
    content: public override System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>que pode ser usado para iterar pelas linhas no leitor de dados.</xref:System.Collections.IEnumerator>"
  overload: System.Data.OleDb.OleDbDataReader.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)
  id: GetFieldType(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetFieldType(Int32)
  nameWithType: OleDbDataReader.GetFieldType(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetFieldType(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o <xref:System.Type>que é o tipo de dados do objeto.</xref:System.Type>"
  syntax:
    content: public override Type GetFieldType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Type
      description: "O <xref:System.Type>que é o tipo de dados do objeto.</xref:System.Type>"
  overload: System.Data.OleDb.OleDbDataReader.GetFieldType*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)
  id: GetFloat(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetFloat(Int32)
  nameWithType: OleDbDataReader.GetFloat(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetFloat(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como um número de ponto flutuante de precisão simples."
  remarks: "Nenhuma conversão é executada. Portanto, os dados recuperados já devem ser um número de ponto flutuante de precisão simples.       Chamar <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>para procurar por valores nulos antes de chamar esse método.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override float GetFloat (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Single
      description: "O valor da coluna especificada."
  overload: System.Data.OleDb.OleDbDataReader.GetFloat*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)
  id: GetGuid(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetGuid(Int32)
  nameWithType: OleDbDataReader.GetGuid(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetGuid(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como um identificador global exclusivo (GUID)."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um identificador globalmente exclusivo.       Chamar <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>para procurar por valores nulos antes de chamar esse método.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override Guid GetGuid (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Guid
      description: "O valor da coluna especificada."
  overload: System.Data.OleDb.OleDbDataReader.GetGuid*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)
  id: GetInt16(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetInt16(Int32)
  nameWithType: OleDbDataReader.GetInt16(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt16(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como um inteiro assinado de 16 bits."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um inteiro assinado de 16 bits.       Chamar <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>para procurar por valores nulos antes de chamar esse método.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override short GetInt16 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Int16
      description: "O valor da coluna especificada."
  overload: System.Data.OleDb.OleDbDataReader.GetInt16*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)
  id: GetInt32(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetInt32(Int32)
  nameWithType: OleDbDataReader.GetInt32(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt32(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como um inteiro assinado de 32 bits."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um inteiro assinado de 32 bits.       Chamar <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>para procurar por valores nulos antes de chamar esse método.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override int GetInt32 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Int32
      description: "O valor da coluna especificada."
  overload: System.Data.OleDb.OleDbDataReader.GetInt32*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)
  id: GetInt64(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetInt64(Int32)
  nameWithType: OleDbDataReader.GetInt64(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt64(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como um inteiro assinado de 64 bits."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um inteiro assinado de 64 bits.       Chamar <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>para procurar por valores nulos antes de chamar esse método.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override long GetInt64 (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Int64
      description: "O valor da coluna especificada."
  overload: System.Data.OleDb.OleDbDataReader.GetInt64*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetName(System.Int32)
  id: GetName(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetName(Int32)
  nameWithType: OleDbDataReader.GetName(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o nome da coluna especificada."
  syntax:
    content: public override string GetName (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.String
      description: "O nome da coluna especificada."
  overload: System.Data.OleDb.OleDbDataReader.GetName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)
  id: GetOrdinal(System.String)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetOrdinal(String)
  nameWithType: OleDbDataReader.GetOrdinal(String)
  fullName: System.Data.OleDb.OleDbDataReader.GetOrdinal(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém a coluna ordinal, considerando o nome da coluna."
  remarks: "GetOrdinal executa uma pesquisa diferencia maiusculas de minúsculas primeiro. Se ele falhar, é feita uma segunda pesquisa diferencia maiusculas de minúsculas. O método gera uma `IndexOutOfRange` exceptionif o ordinal baseado em zero da coluna não foi encontrada.       GetOrdinal é diferenciação de kana largura.       Como pesquisas baseadas em ordinais são mais eficientes do que pesquisas por nome, é ineficiente chamar GetOrdinal dentro de um loop. Economiza tempo chamando GetOrdinal uma vez e atribuindo os resultados para uma variável de inteiro para uso dentro do loop."
  example:
  - "The following example demonstrates how to use the GetOrdinal method.  \n  \n [!code-vb[Classic WebData OleDbDataReader.GetOrdinal#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_9_1.vb)]\n [!code-cs[Classic WebData OleDbDataReader.GetOrdinal#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_9_1.cs)]"
  syntax:
    content: public override int GetOrdinal (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da coluna."
    return:
      type: System.Int32
      description: "A coluna com base em zero ordinal."
  overload: System.Data.OleDb.OleDbDataReader.GetOrdinal*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O nome especificado não é um nome de coluna válido."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetSchemaTable
  id: GetSchemaTable
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetSchemaTable()
  nameWithType: OleDbDataReader.GetSchemaTable()
  fullName: System.Data.OleDb.OleDbDataReader.GetSchemaTable()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retorna um <xref href=&quot;System.Data.DataTable&quot;> </xref> que descreve os metadados da coluna de <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref>."
  remarks: "O método GetSchemaTable mapeia para o banco de dados OLE **Getcolumnsrowset** método e retorna metadados sobre cada coluna na seguinte ordem: | Coluna de DataReader | ID da coluna de banco de dados OLE | Descrição |   |-----------------------|----------------------|-----------------|   | ColumnName | DBCOLUMN_NAME | O nome da coluna; Isso pode não ser exclusivo. Se isso não puder ser determinado, um valor nulo será retornado. Este nome sempre reflete a renomeação mais recente da coluna no texto do comando ou da exibição atual. |   | ColumnOrdinal | DBCOLUMN_NUMBER | O ordinal baseado em zero da coluna. Esta coluna não pode conter um valor nulo. |   | ColumnSize | DBCOLUMN_COLUMNSIZE | O comprimento máximo possível de um valor na coluna. Para colunas que usam um tipo de dados de comprimento fixo, esse é o tamanho do tipo de dados. |   | NumericPrecision | DBCOLUMN_PRECISION | Se o DbType é um tipo de dados numérico, essa é a precisão máxima da coluna. A precisão de colunas com um tipo de dados de DBTYPE_DECIMAL ou DBTYPE_NUMERIC depende da definição da coluna. Se o DbType não é um tipo de dados numérico, esse é um valor nulo. |   | NumericScale | DBCOLUMN_SCALE | Se o DbType é DBTYPE_DECIMAL ou DBTYPE_NUMERIC, isso é o número de dígitos à direita da vírgula decimal. Caso contrário, isso é um valor nulo. |   | Tipo de dados | Nenhum | Mapeia para o tipo do .NET Framework da coluna. |   | ProviderType | DBCOLUMN_TYPE | O indicador de tipo de dados da coluna. Se o tipo de dados da coluna varia de uma linha para outra, ela deve ser DBTYPE_VARIANT. Esta coluna não pode conter um valor nulo. |   | IsLong | DBCOLUMNFLAGS_ISLONG | O provedor define DBCOLUMNFLAGS_ISLONG se a coluna contiver um longo BLOB (objeto binário) que contém dados muito longos. A definição de dados muito longos é específica do provedor. A configuração desse sinalizador corresponde ao valor da coluna IS_LONG no conjunto de linhas PROVIDER_TYPES para o tipo de dados. |   | AllowDBNull | DBCOLUMNFLAGS_ISNULLABLE | O provedor define DBCOLUMNFLAGS_ISNULLABLE se o consumidor pode definir a coluna com um valor nulo, ou se o provedor não pode determinar se o consumidor pode definir a coluna com um valor nulo. Uma coluna pode conter valores nulos, mesmo se ele não pode ser definido como um valor nulo. |   | IsReadOnly | DBCOLUMNFLAGS_WRITE | `true` se a coluna não pode ser modificada; caso contrário `false`. A coluna deve para ser gravável, se o provedor tiver definido o sinalizador de DBCOLUMNFLAGS_WRITE ou DBCOLUMNFLAGS_WRITEUNKNOWN. |   | IsRowVersion | DBCOLUMNFLAGS_ISROWID | O provedor define DBCOLUMNFLAGS_ISROWID se a coluna contém um identificador de linha persistente que não pode ser gravado e não tem valor significativo exceto a identidade da linha. |   | IsUnique | DBCOLUMN_ISUNIQUE | VARIANT_TRUE: Há duas linhas na tabela base: a tabela retornada em BaseTableName pode tem o mesmo valor nesta coluna. IsUnique é garantido para ser VARIANT_TRUE se a coluna representa uma chave por si só ou se houver uma restrição de tipo UNIQUE que se aplica somente a esta coluna.<br /><br /> VARIANT_FALSE: A coluna pode conter valores duplicados na tabela base. O padrão desta coluna é VARIANT_FALSE. |   | IsKey | DBCOLUMN_KEYCOLUMN | VARIANT_TRUE: A coluna é parte de um conjunto de colunas no conjunto de linhas que, juntas, identificam exclusivamente a linha. O conjunto de colunas com IsKey definida como VARIANT_TRUE deve identificar exclusivamente uma linha no conjunto de linhas. Não há nenhum requisito de que esse conjunto de colunas é um conjunto mínimo de colunas. Esse conjunto de colunas pode ser gerado por uma chave primária da tabela base, uma restrição exclusiva ou um índice exclusivo.<br /><br /> VARIANT_FALSE: A coluna não é necessário para identificar exclusivamente a linha. |   | IsAutoIncrement | DBCOLUMN_ISAUTOINCREMENT | VARIANT_TRUE: A coluna atribui valores a novas linhas em incrementos fixos.<br /><br /> VARIANT_FALSE: A coluna não atribui valores a novas linhas em incrementos fixos. O padrão desta coluna é VARIANT_FALSE. |   | BaseSchemaName | DBCOLUMN_BASESCHEMANAME | O nome do esquema no repositório de dados que contém a coluna. Um valor nulo se o nome do esquema de base não pode ser determinado. O padrão desta coluna é um valor nulo. |   | BaseCatalogName | DBCOLUMN_BASECATALOGNAME | O nome do catálogo no repositório de dados que contém a coluna. Um valor nulo se o nome do catálogo de base não pode ser determinado. O padrão desta coluna é um valor nulo. |   | BaseTableName | DBCOLUMN_BASETABLENAME | O nome da tabela ou exibição no repositório de dados que contém a coluna. Um valor nulo se o nome da tabela base não pode ser determinado. O padrão desta coluna é um valor nulo. |   | BaseColumnName | DBCOLUMN_BASECOLUMNNAME | O nome da coluna no repositório de dados. Isso pode ser diferente do nome da coluna retornado na coluna ColumnName se um alias foi usado. Um valor nulo se o nome da coluna base não pode ser determinado ou se a coluna do conjunto de linhas for derivada, mas não idêntica à, uma coluna nos dados de armazenamento. O padrão desta coluna é um valor nulo. |      > [!NOTE] > Para certificar-se de que as colunas de metadados retornarem as informações corretas, você deve chamar <xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A>com o `behavior` parâmetro definido como `KeyInfo`.</xref:System.Data.OleDb.OleDbCommand.ExecuteReader%2A> Caso contrário, algumas das colunas na tabela de esquema podem retornar dados nulos ou incorreto do padrão."
  syntax:
    content: public override System.Data.DataTable GetSchemaTable ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> que descreve os metadados da coluna."
  overload: System.Data.OleDb.OleDbDataReader.GetSchemaTable*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> está fechado."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetString(System.Int32)
  id: GetString(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetString(Int32)
  nameWithType: OleDbDataReader.GetString(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetString(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como uma cadeia de caracteres."
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser uma cadeia de caracteres.       Chamar <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>para procurar por valores nulos antes de chamar esse método.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public override string GetString (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.String
      description: "O valor da coluna especificada."
  overload: System.Data.OleDb.OleDbDataReader.GetString*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)
  id: GetTimeSpan(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetTimeSpan(Int32)
  nameWithType: OleDbDataReader.GetTimeSpan(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetTimeSpan(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada como uma <xref:System.TimeSpan>objeto.</xref:System.TimeSpan>"
  remarks: "Nenhuma conversão é executada; Portanto, os dados recuperados já devem ser um <xref:System.TimeSpan>objeto.</xref:System.TimeSpan>       Chamar <xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>para procurar por valores nulos antes de chamar esse método.</xref:System.Data.OleDb.OleDbDataReader.IsDBNull%2A>"
  syntax:
    content: public TimeSpan GetTimeSpan (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.TimeSpan
      description: "O valor da coluna especificada."
  overload: System.Data.OleDb.OleDbDataReader.GetTimeSpan*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "A conversão especificada não é válida."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)
  id: GetValue(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetValue(Int32)
  nameWithType: OleDbDataReader.GetValue(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetValue(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna no ordinal especificado em seu formato nativo."
  remarks: "Este método retorna <xref:System.DBNull>para colunas de banco de dados nulo.</xref:System.DBNull>"
  syntax:
    content: public override object GetValue (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Object
      description: "O valor a ser retornado."
  overload: System.Data.OleDb.OleDbDataReader.GetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])
  id: GetValues(System.Object[])
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: GetValues(Object[])
  nameWithType: OleDbDataReader.GetValues(Object[])
  fullName: System.Data.OleDb.OleDbDataReader.GetValues(Object[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Preenche uma matriz de objetos com os valores da coluna da linha atual."
  remarks: "Para a maioria dos aplicativos, o método GetValues fornece uma forma eficiente para recuperar todas as colunas, em vez de recuperar cada coluna individualmente.       Você pode passar um <xref:System.Object>matriz que contém menos do que o número de colunas que estão contidos na linha resultante.</xref:System.Object> Somente a quantidade de dados a <xref:System.Object>matriz contém é copiado para a matriz.</xref:System.Object> Você também pode passar um <xref:System.Object>matriz cujo tamanho é maior que o número de colunas que estão contidos na linha resultante.</xref:System.Object>       Este método retorna <xref:System.DBNull>para colunas de banco de dados nulo.</xref:System.DBNull>"
  example:
  - >-
    [!code-cs[OleDbDataReader_GetValues#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_12_1.cs)]
     [!code-vb[OleDbDataReader_GetValues#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_12_1.vb)]
  syntax:
    content: public override int GetValues (object[] values);
    parameters:
    - id: values
      type: System.Object[]
      description: "Uma matriz de <xref:System.Object>na qual copiar as colunas de atributo.</xref:System.Object>"
    return:
      type: System.Int32
      description: "O número de instâncias de <xref:System.Object>na matriz.</xref:System.Object>"
  overload: System.Data.OleDb.OleDbDataReader.GetValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.HasRows
  id: HasRows
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: HasRows
  nameWithType: OleDbDataReader.HasRows
  fullName: System.Data.OleDb.OleDbDataReader.HasRows
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> contém uma ou mais linhas."
  syntax:
    content: public override bool HasRows { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> contém uma ou mais linhas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OleDb.OleDbDataReader.HasRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.IsClosed
  id: IsClosed
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: IsClosed
  nameWithType: OleDbDataReader.IsClosed
  fullName: System.Data.OleDb.OleDbDataReader.IsClosed
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Indica se o leitor de dados está fechado."
  remarks: "IsClosed e <xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>são as únicas propriedades que você pode chamar após o <xref:System.Data.OleDb.OleDbDataReader>está fechado.</xref:System.Data.OleDb.OleDbDataReader> </xref:System.Data.OleDb.OleDbDataReader.RecordsAffected%2A>"
  syntax:
    content: public override bool IsClosed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> estiver fechado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OleDb.OleDbDataReader.IsClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)
  id: IsDBNull(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: IsDBNull(Int32)
  nameWithType: OleDbDataReader.IsDBNull(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.IsDBNull(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém um valor que indica se a coluna contém valores que não existentes ou está ausentes."
  remarks: "Chame este método para procurar por valores de coluna nulos antes de chamar com tipo a métodos get (por exemplo, <xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>, <xref:System.Data.OleDb.OleDbDataReader.GetChar%2A>e assim por diante) para evitar gerar um erro.</xref:System.Data.OleDb.OleDbDataReader.GetChar%2A> </xref:System.Data.OleDb.OleDbDataReader.GetByte%2A>"
  syntax:
    content: public override bool IsDBNull (int ordinal);
    parameters:
    - id: ordinal
      type: System.Int32
      description: "A coluna com base em zero ordinal."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor da coluna especificada for equivalente a <xref href=&quot;System.DBNull&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OleDb.OleDbDataReader.IsDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: OleDbDataReader.Item(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada em seu formato nativo, dado o ordinal da coluna."
  syntax:
    content: public override object this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O ordinal da coluna."
    return:
      type: System.Object
      description: "O valor da coluna especificada em seu formato nativo."
  overload: System.Data.OleDb.OleDbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O índice passado estava fora do intervalo de 0 a <xref:System.Data.IDataRecord.FieldCount*>.</xref:System.Data.IDataRecord.FieldCount*>"
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Item(System.String)
  id: Item(System.String)
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Item(String)
  nameWithType: OleDbDataReader.Item(String)
  fullName: System.Data.OleDb.OleDbDataReader.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o valor da coluna especificada em seu formato nativo, considerando o nome da coluna."
  remarks: "Uma pesquisa diferencia maiusculas de minúsculas é executada pela primeira vez. Se ele falhar, é feita uma segunda pesquisa diferencia maiusculas de minúsculas.       Esse método é não diferencia caracteres kana-largura."
  syntax:
    content: public override object this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "O nome da coluna."
    return:
      type: System.Object
      description: "O valor da coluna especificada em seu formato nativo."
  overload: System.Data.OleDb.OleDbDataReader.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "Não foi encontrada nenhuma coluna com o nome especificado."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.NextResult
  id: NextResult
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: NextResult()
  nameWithType: OleDbDataReader.NextResult()
  fullName: System.Data.OleDb.OleDbDataReader.NextResult()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Avança o leitor de dados para o próximo resultado ao ler os resultados de instruções SQL de lote."
  remarks: "Usado para processar vários resultados que podem ser gerados executando instruções SQL de lote.       Por padrão, o leitor de dados é posicionado no primeiro resultado."
  syntax:
    content: public override bool NextResult ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se houver mais conjuntos de resultados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OleDb.OleDbDataReader.NextResult*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.Read
  id: Read
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: Read()
  nameWithType: OleDbDataReader.Read()
  fullName: System.Data.OleDb.OleDbDataReader.Read()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Avança o <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> para o próximo registro."
  remarks: "A posição padrão da <xref:System.Data.OleDb.OleDbDataReader>é antes do primeiro registro.</xref:System.Data.OleDb.OleDbDataReader> Portanto, você deve chamar Read para começar a acessar os dados.       Enquanto o <xref:System.Data.OleDb.OleDbDataReader>está sendo usado, o associado <xref:System.Data.OleDb.OleDbConnection>está ocupado atendendo a ele até que você chame <xref:System.Data.OleDb.OleDbDataReader.Close%2A>.</xref:System.Data.OleDb.OleDbDataReader.Close%2A> </xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbDataReader>"
  example:
  - "The following example creates an <xref:System.Data.OleDb.OleDbConnection>, an <xref:System.Data.OleDb.OleDbCommand>, and an <xref:System.Data.OleDb.OleDbDataReader>. The example reads through the data, writing it out to the console. Finally, the example closes the <xref:System.Data.OleDb.OleDbDataReader> and then the <xref:System.Data.OleDb.OleDbConnection>.  \n  \n [!code-cs[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/csharp/m-system.data.oledb.oled_6_1.cs)]\n [!code-vb[Classic WebData IDataReader.Read Example#1](~/add/codesnippet/visualbasic/m-system.data.oledb.oled_6_1.vb)]"
  syntax:
    content: public override bool Read ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se houver mais linhas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.OleDb.OleDbDataReader.Read*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.RecordsAffected
  id: RecordsAffected
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: RecordsAffected
  nameWithType: OleDbDataReader.RecordsAffected
  fullName: System.Data.OleDb.OleDbDataReader.RecordsAffected
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o número de linhas alteradas, inseridas ou excluídas pela execução da instrução SQL."
  remarks: "A propriedade RecordsAffected não é definida até que todas as linhas são lidas e fechar <xref:System.Data.OleDb.OleDbDataReader>.</xref:System.Data.OleDb.OleDbDataReader>       O valor dessa propriedade é cumulativo. Por exemplo, se os dois registros são inseridos no modo de lote, o valor de RecordsAffected é dois.       <xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A>e RecordsAffected são as únicas propriedades que você pode chamar após o <xref:System.Data.OleDb.OleDbDataReader>está fechado.</xref:System.Data.OleDb.OleDbDataReader></xref:System.Data.OleDb.OleDbDataReader.IsClosed%2A>"
  syntax:
    content: public override int RecordsAffected { get; }
    return:
      type: System.Int32
      description: "O número de linhas alteradas, inseridas ou excluídas; 0 se nenhuma linha foi afetada ou a instrução falhou; e -1 para instruções SELECT."
  overload: System.Data.OleDb.OleDbDataReader.RecordsAffected*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbDataReader.VisibleFieldCount
  id: VisibleFieldCount
  parent: System.Data.OleDb.OleDbDataReader
  langs:
  - csharp
  name: VisibleFieldCount
  nameWithType: OleDbDataReader.VisibleFieldCount
  fullName: System.Data.OleDb.OleDbDataReader.VisibleFieldCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Obtém o número de campos de <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> que não estão ocultos."
  remarks: "Esse valor é usado para determinar quantos campos no <xref:System.Data.OleDb.OleDbDataReader>são visíveis.</xref:System.Data.OleDb.OleDbDataReader> Por exemplo, uma seleção em uma chave primária parcial retorna as partes restantes da chave como campos ocultos. Os campos ocultos são acrescentados sempre atrás os campos visíveis."
  syntax:
    content: public override int VisibleFieldCount { get; }
    return:
      type: System.Int32
      description: "O número de campos que não estão ocultos."
  overload: System.Data.OleDb.OleDbDataReader.VisibleFieldCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Data.Common.DbDataReader
  isExternal: false
  name: System.Data.Common.DbDataReader
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.OleDb.OleDbDataReader.Close
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Close()
  nameWithType: OleDbDataReader.Close()
  fullName: System.Data.OleDb.OleDbDataReader.Close()
- uid: System.Data.OleDb.OleDbDataReader.Depth
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Depth
  nameWithType: OleDbDataReader.Depth
  fullName: System.Data.OleDb.OleDbDataReader.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.OleDb.OleDbDataReader.FieldCount
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OleDbDataReader.FieldCount
  fullName: System.Data.OleDb.OleDbDataReader.FieldCount
- uid: System.Data.OleDb.OleDbDataReader.GetBoolean(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetBoolean(Int32)
  nameWithType: OleDbDataReader.GetBoolean(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetBoolean(Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.OleDb.OleDbDataReader.GetByte(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetByte(Int32)
  nameWithType: OleDbDataReader.GetByte(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetByte(Int32)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.OleDb.OleDbDataReader.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetBytes(Int32,Int64,Byte[],Int32,Int32)
  nameWithType: OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetBytes(Int32,Int64,Byte[],Int32,Int32)
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbDataReader.GetChar(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetChar(Int32)
  nameWithType: OleDbDataReader.GetChar(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetChar(Int32)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Data.OleDb.OleDbDataReader.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetChars(Int32,Int64,Char[],Int32,Int32)
  nameWithType: OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetChars(Int32,Int64,Char[],Int32,Int32)
- uid: System.Char[]
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char[]
  spec.csharp:
  - uid: System.Char
    name: Char
    nameWithType: Char
    fullName: Char[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbDataReader.GetData(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetData(Int32)
  nameWithType: OleDbDataReader.GetData(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetData(Int32)
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Data.OleDb.OleDbDataReader.GetDataTypeName(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDataTypeName(Int32)
  nameWithType: OleDbDataReader.GetDataTypeName(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDataTypeName(Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.OleDb.OleDbDataReader.GetDateTime(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDateTime(Int32)
  nameWithType: OleDbDataReader.GetDateTime(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDateTime(Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Data.OleDb.OleDbDataReader.GetDbDataReader(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDbDataReader(Int32)
  nameWithType: OleDbDataReader.GetDbDataReader(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDbDataReader(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetDecimal(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDecimal(Int32)
  nameWithType: OleDbDataReader.GetDecimal(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDecimal(Int32)
- uid: System.Decimal
  parent: System
  isExternal: true
  name: Decimal
  nameWithType: Decimal
  fullName: System.Decimal
- uid: System.Data.OleDb.OleDbDataReader.GetDouble(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDouble(Int32)
  nameWithType: OleDbDataReader.GetDouble(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetDouble(Int32)
- uid: System.Double
  parent: System
  isExternal: true
  name: Double
  nameWithType: Double
  fullName: System.Double
- uid: System.Data.OleDb.OleDbDataReader.GetEnumerator
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetEnumerator()
  nameWithType: OleDbDataReader.GetEnumerator()
  fullName: System.Data.OleDb.OleDbDataReader.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Data.OleDb.OleDbDataReader.GetFieldType(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetFieldType(Int32)
  nameWithType: OleDbDataReader.GetFieldType(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetFieldType(Int32)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OleDb.OleDbDataReader.GetFloat(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetFloat(Int32)
  nameWithType: OleDbDataReader.GetFloat(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetFloat(Int32)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Data.OleDb.OleDbDataReader.GetGuid(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetGuid(Int32)
  nameWithType: OleDbDataReader.GetGuid(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetGuid(Int32)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Data.OleDb.OleDbDataReader.GetInt16(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt16(Int32)
  nameWithType: OleDbDataReader.GetInt16(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt16(Int32)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Data.OleDb.OleDbDataReader.GetInt32(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt32(Int32)
  nameWithType: OleDbDataReader.GetInt32(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt32(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetInt64(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt64(Int32)
  nameWithType: OleDbDataReader.GetInt64(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetInt64(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetName(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetName(Int32)
  nameWithType: OleDbDataReader.GetName(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetName(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetOrdinal(System.String)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetOrdinal(String)
  nameWithType: OleDbDataReader.GetOrdinal(String)
  fullName: System.Data.OleDb.OleDbDataReader.GetOrdinal(String)
- uid: System.Data.OleDb.OleDbDataReader.GetSchemaTable
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetSchemaTable()
  nameWithType: OleDbDataReader.GetSchemaTable()
  fullName: System.Data.OleDb.OleDbDataReader.GetSchemaTable()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OleDb.OleDbDataReader.GetString(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetString(Int32)
  nameWithType: OleDbDataReader.GetString(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetString(Int32)
- uid: System.Data.OleDb.OleDbDataReader.GetTimeSpan(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetTimeSpan(Int32)
  nameWithType: OleDbDataReader.GetTimeSpan(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetTimeSpan(Int32)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Data.OleDb.OleDbDataReader.GetValue(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetValue(Int32)
  nameWithType: OleDbDataReader.GetValue(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.GetValue(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.OleDb.OleDbDataReader.GetValues(System.Object[])
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetValues(Object[])
  nameWithType: OleDbDataReader.GetValues(Object[])
  fullName: System.Data.OleDb.OleDbDataReader.GetValues(Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.OleDb.OleDbDataReader.HasRows
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: HasRows
  nameWithType: OleDbDataReader.HasRows
  fullName: System.Data.OleDb.OleDbDataReader.HasRows
- uid: System.Data.OleDb.OleDbDataReader.IsClosed
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OleDbDataReader.IsClosed
  fullName: System.Data.OleDb.OleDbDataReader.IsClosed
- uid: System.Data.OleDb.OleDbDataReader.IsDBNull(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: IsDBNull(Int32)
  nameWithType: OleDbDataReader.IsDBNull(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.IsDBNull(Int32)
- uid: System.Data.OleDb.OleDbDataReader.Item(System.Int32)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Item(Int32)
  nameWithType: OleDbDataReader.Item(Int32)
  fullName: System.Data.OleDb.OleDbDataReader.Item(Int32)
- uid: System.Data.OleDb.OleDbDataReader.Item(System.String)
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Item(String)
  nameWithType: OleDbDataReader.Item(String)
  fullName: System.Data.OleDb.OleDbDataReader.Item(String)
- uid: System.Data.OleDb.OleDbDataReader.NextResult
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: NextResult()
  nameWithType: OleDbDataReader.NextResult()
  fullName: System.Data.OleDb.OleDbDataReader.NextResult()
- uid: System.Data.OleDb.OleDbDataReader.Read
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Read()
  nameWithType: OleDbDataReader.Read()
  fullName: System.Data.OleDb.OleDbDataReader.Read()
- uid: System.Data.OleDb.OleDbDataReader.RecordsAffected
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OleDbDataReader.RecordsAffected
  fullName: System.Data.OleDb.OleDbDataReader.RecordsAffected
- uid: System.Data.OleDb.OleDbDataReader.VisibleFieldCount
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: OleDbDataReader.VisibleFieldCount
  fullName: System.Data.OleDb.OleDbDataReader.VisibleFieldCount
- uid: System.Data.OleDb.OleDbDataReader.Close*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Close
  nameWithType: OleDbDataReader.Close
- uid: System.Data.OleDb.OleDbDataReader.Depth*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Depth
  nameWithType: OleDbDataReader.Depth
- uid: System.Data.OleDb.OleDbDataReader.FieldCount*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: FieldCount
  nameWithType: OleDbDataReader.FieldCount
- uid: System.Data.OleDb.OleDbDataReader.GetBoolean*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetBoolean
  nameWithType: OleDbDataReader.GetBoolean
- uid: System.Data.OleDb.OleDbDataReader.GetByte*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetByte
  nameWithType: OleDbDataReader.GetByte
- uid: System.Data.OleDb.OleDbDataReader.GetBytes*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetBytes
  nameWithType: OleDbDataReader.GetBytes
- uid: System.Data.OleDb.OleDbDataReader.GetChar*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetChar
  nameWithType: OleDbDataReader.GetChar
- uid: System.Data.OleDb.OleDbDataReader.GetChars*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetChars
  nameWithType: OleDbDataReader.GetChars
- uid: System.Data.OleDb.OleDbDataReader.GetData*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetData
  nameWithType: OleDbDataReader.GetData
- uid: System.Data.OleDb.OleDbDataReader.GetDataTypeName*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDataTypeName
  nameWithType: OleDbDataReader.GetDataTypeName
- uid: System.Data.OleDb.OleDbDataReader.GetDateTime*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDateTime
  nameWithType: OleDbDataReader.GetDateTime
- uid: System.Data.OleDb.OleDbDataReader.GetDbDataReader*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDbDataReader
  nameWithType: OleDbDataReader.GetDbDataReader
- uid: System.Data.OleDb.OleDbDataReader.GetDecimal*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDecimal
  nameWithType: OleDbDataReader.GetDecimal
- uid: System.Data.OleDb.OleDbDataReader.GetDouble*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetDouble
  nameWithType: OleDbDataReader.GetDouble
- uid: System.Data.OleDb.OleDbDataReader.GetEnumerator*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetEnumerator
  nameWithType: OleDbDataReader.GetEnumerator
- uid: System.Data.OleDb.OleDbDataReader.GetFieldType*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetFieldType
  nameWithType: OleDbDataReader.GetFieldType
- uid: System.Data.OleDb.OleDbDataReader.GetFloat*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetFloat
  nameWithType: OleDbDataReader.GetFloat
- uid: System.Data.OleDb.OleDbDataReader.GetGuid*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetGuid
  nameWithType: OleDbDataReader.GetGuid
- uid: System.Data.OleDb.OleDbDataReader.GetInt16*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt16
  nameWithType: OleDbDataReader.GetInt16
- uid: System.Data.OleDb.OleDbDataReader.GetInt32*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt32
  nameWithType: OleDbDataReader.GetInt32
- uid: System.Data.OleDb.OleDbDataReader.GetInt64*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetInt64
  nameWithType: OleDbDataReader.GetInt64
- uid: System.Data.OleDb.OleDbDataReader.GetName*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetName
  nameWithType: OleDbDataReader.GetName
- uid: System.Data.OleDb.OleDbDataReader.GetOrdinal*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetOrdinal
  nameWithType: OleDbDataReader.GetOrdinal
- uid: System.Data.OleDb.OleDbDataReader.GetSchemaTable*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetSchemaTable
  nameWithType: OleDbDataReader.GetSchemaTable
- uid: System.Data.OleDb.OleDbDataReader.GetString*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetString
  nameWithType: OleDbDataReader.GetString
- uid: System.Data.OleDb.OleDbDataReader.GetTimeSpan*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetTimeSpan
  nameWithType: OleDbDataReader.GetTimeSpan
- uid: System.Data.OleDb.OleDbDataReader.GetValue*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetValue
  nameWithType: OleDbDataReader.GetValue
- uid: System.Data.OleDb.OleDbDataReader.GetValues*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: GetValues
  nameWithType: OleDbDataReader.GetValues
- uid: System.Data.OleDb.OleDbDataReader.HasRows*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: HasRows
  nameWithType: OleDbDataReader.HasRows
- uid: System.Data.OleDb.OleDbDataReader.IsClosed*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: IsClosed
  nameWithType: OleDbDataReader.IsClosed
- uid: System.Data.OleDb.OleDbDataReader.IsDBNull*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: IsDBNull
  nameWithType: OleDbDataReader.IsDBNull
- uid: System.Data.OleDb.OleDbDataReader.Item*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Item
  nameWithType: OleDbDataReader.Item
- uid: System.Data.OleDb.OleDbDataReader.NextResult*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: NextResult
  nameWithType: OleDbDataReader.NextResult
- uid: System.Data.OleDb.OleDbDataReader.Read*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: Read
  nameWithType: OleDbDataReader.Read
- uid: System.Data.OleDb.OleDbDataReader.RecordsAffected*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: RecordsAffected
  nameWithType: OleDbDataReader.RecordsAffected
- uid: System.Data.OleDb.OleDbDataReader.VisibleFieldCount*
  parent: System.Data.OleDb.OleDbDataReader
  isExternal: false
  name: VisibleFieldCount
  nameWithType: OleDbDataReader.VisibleFieldCount
