### YamlMime:ManagedReference
items:
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  id: SafeNCryptSecretHandle
  children:
  - Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor
  - Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle
  langs:
  - csharp
  name: SafeNCryptSecretHandle
  nameWithType: SafeNCryptSecretHandle
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  type: Class
  summary: "Fornece um identificador seguro que representa um valor de acordo secreto (NCRYPT_SECRET_HANDLE)."
  remarks: "Essa classe deve ser usada ao trabalhar com o código nativo que espera um NCRYPT_SECRET_HANDLE.      > [!IMPORTANT] > Este tipo implementa o <xref:System.IDisposable>interface.</xref:System.IDisposable> Quando você terminar de usar o tipo, descarte-direta ou indiretamente. Para descartar o tipo diretamente, chame seu <xref:System.IDisposable.Dispose%2A>método em um `try` / `catch` bloco.</xref:System.IDisposable.Dispose%2A> Para descartar indiretamente dele, use uma construção de linguagem, como `using` (em c#) ou `Using` (no Visual Basic). Para obter mais informações, consulte a seção &quot;Usando um objeto que implementa IDisposable&quot; o <xref:System.IDisposable>tópico da interface.</xref:System.IDisposable>"
  syntax:
    content: >-
      [System.Security.SecurityCritical(System.Security.SecurityCriticalScope.Everything)]

      public sealed class SafeNCryptSecretHandle : Microsoft.Win32.SafeHandles.SafeNCryptHandle
  inheritance:
  - System.Runtime.InteropServices.SafeHandle
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle
  implements: []
  inheritedMembers:
  - Microsoft.Win32.SafeHandles.SafeHandleZeroOrMinusOneIsInvalid.IsInvalid
  - Microsoft.Win32.SafeHandles.SafeNCryptHandle.ReleaseHandle
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor
  id: '#ctor'
  parent: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  langs:
  - csharp
  name: SafeNCryptSecretHandle()
  nameWithType: SafeNCryptSecretHandle.SafeNCryptSecretHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.SafeNCryptSecretHandle()
  type: Constructor
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  summary: "Inicializa uma nova instância do <xref href=&quot;Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle&quot;> </xref> classe."
  syntax:
    content: public SafeNCryptSecretHandle ();
    parameters: []
  overload: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle
  id: ReleaseNativeHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  langs:
  - csharp
  name: ReleaseNativeHandle()
  nameWithType: SafeNCryptSecretHandle.ReleaseNativeHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: Microsoft.Win32.SafeHandles
  syntax:
    content: protected override bool ReleaseNativeHandle ();
    parameters: []
    return:
      type: System.Boolean
      description: "A ser adicionado."
  overload: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Win32.SafeHandles.SafeNCryptHandle
  isExternal: false
  name: Microsoft.Win32.SafeHandles.SafeNCryptHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor
  parent: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  isExternal: false
  name: SafeNCryptSecretHandle()
  nameWithType: SafeNCryptSecretHandle.SafeNCryptSecretHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.SafeNCryptSecretHandle()
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle
  parent: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  isExternal: false
  name: ReleaseNativeHandle()
  nameWithType: SafeNCryptSecretHandle.ReleaseNativeHandle()
  fullName: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.#ctor*
  parent: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  isExternal: false
  name: SafeNCryptSecretHandle
  nameWithType: SafeNCryptSecretHandle.SafeNCryptSecretHandle
- uid: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle.ReleaseNativeHandle*
  parent: Microsoft.Win32.SafeHandles.SafeNCryptSecretHandle
  isExternal: false
  name: ReleaseNativeHandle
  nameWithType: SafeNCryptSecretHandle.ReleaseNativeHandle
