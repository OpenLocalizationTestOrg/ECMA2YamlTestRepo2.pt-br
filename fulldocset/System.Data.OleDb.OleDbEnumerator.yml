### YamlMime:ManagedReference
items:
- uid: System.Data.OleDb.OleDbEnumerator
  id: OleDbEnumerator
  children:
  - System.Data.OleDb.OleDbEnumerator.#ctor
  - System.Data.OleDb.OleDbEnumerator.GetElements
  - System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  - System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  langs:
  - csharp
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator
  fullName: System.Data.OleDb.OleDbEnumerator
  type: Class
  summary: "Fornece um mecanismo para enumerar todos os provedores OLE DB disponíveis dentro da rede local."
  syntax:
    content: public sealed class OleDbEnumerator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  id: '#ctor'
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Cria uma instância de <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> classe."
  syntax:
    content: public OleDbEnumerator ();
    parameters: []
  overload: System.Data.OleDb.OleDbEnumerator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  id: GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Recupera um <xref href=&quot;System.Data.DataTable&quot;> </xref> que contém informações sobre todos os provedores OLE DB visíveis."
  remarks: "A tabela que é retornada por este método contém as seguintes colunas, que contêm cadeias de caracteres: | O Ordinal da coluna | Coluna | Descrição |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | O nome invariável da fonte de dados OLE DB nativo ou no enumerador. |   |&1; | SOURCES_PARSENAME | Um nome legível que pode ser convertido em um identificador de origem usando a interface COM nativo IParseDisplayName. Corresponde à coluna SOURCES_PARSENAME retornada pelo conjunto de linhas de fontes de OLE DB nativo. |   |&2; | SOURCES_DESCRIPTION | Descrição da fonte de dados OLE DB nativo. Corresponde à coluna SOURCES_DESCRIPTION retornada pelo conjunto de linhas de fontes de OLE DB nativo. |   |&3; | SOURCES_TYPE | Um dos seguintes membros de enumeração: associador (0), DataSource_MDP (1), DataSource_TDP (2), (3) do enumerador. Eles correspondem aos valores retornados na coluna do conjunto de linhas de fontes de OLE DB nativo SOURCES_TYPE. |   |&4; | SOURCES_ISPARENT | Aplicável somente enumeradores. Se `true`, indica que a entrada se aplica ao mesmo enumerador no qual GetSourcesRowset foi chamado, indicando que também está incluído na enumeração sub. Corresponde à coluna do conjunto de linhas de fontes de OLE DB nativo SOURCES_ISPARENT |   |&5; | SOURCES_CLSID | Um nome legível, que pode ser convertido em um identificador de origem usando a interface COM nativa IParseDisplayName. Corresponde à coluna SOURCES_CLSID retornada pelo conjunto de linhas de fontes de OLE DB nativo. |"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \nSub Main()  \n  Dim enumerator As New OleDbEnumerator  \n  Dim table As System.Data.DataTable = enumerator.GetElements()  \n  \n  DisplayData(table)  \n  \n   Console.WriteLine(\"Press any key to continue.\")  \n   Console.ReadKey()  \n End Sub  \n  \n Private Sub DisplayData(ByVal table As DataTable)  \n   For Each row As DataRow In table.Rows  \n     For Each col As DataColumn In table.Columns  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row(col))  \n     Next  \n     Console.WriteLine(\"==================================\")  \n   Next  \n End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbEnumerator enumerator = new OleDbEnumerator();  \n   DataTable table = enumerator.GetElements();  \n  \n   DisplayData(table);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(DataTable table)  \n {  \n   foreach (DataRow row in table.Rows)  \n   {  \n     foreach (DataColumn col in table.Columns)  \n     {  \n       Console.WriteLine(\"{0} = {1}\", col.ColumnName, row[col]);  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public System.Data.DataTable GetElements ();
    parameters: []
    return:
      type: System.Data.DataTable
      description: "Retorna um <xref href=&quot;System.Data.DataTable&quot;> </xref> que contém informações sobre os provedores OLE DB visíveis."
  overload: System.Data.OleDb.OleDbEnumerator.GetElements*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O provedor não oferece suporte a ISourcesRowset da."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Ocorreu uma exceção no provedor subjacente."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  id: GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Usa um enumerador de OLE DB específico para retornar um <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> que contém informações sobre os provedores OLE DB instalados no momento, sem a necessidade de uma instância do <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> classe."
  remarks: "O leitor que é retornado por este método contém as seguintes colunas, que contêm cadeias de caracteres: | O ordinal da coluna | Coluna | Descrição |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | O nome invariável da fonte de dados OLE DB nativo ou no enumerador. |   |&1; | SOURCES_PARSENAME | Um nome legível que pode ser convertido em um identificador de origem usando a interface COM nativo **IParseDisplayName**. Corresponde à coluna SOURCES_PARSENAME retornada pelo conjunto de linhas de fontes de OLE DB nativo. |   |&2; | SOURCES_DESCRIPTION | Descrição da fonte de dados OLE DB nativo. Corresponde à coluna SOURCES_DESCRIPTION retornada pelo conjunto de linhas de fontes de OLE DB nativo. |   |&3; | SOURCES_TYPE | Um dos seguintes membros de enumeração: associador (0), DataSource_MDP (1), DataSource_TDP (2), (3) do enumerador. Eles correspondem aos valores retornados na coluna do conjunto de linhas de fontes de OLE DB nativo SOURCES_TYPE. |   |&4; | SOURCES_ISPARENT | Aplicável somente enumeradores. Se `true`, indica que a entrada se aplica ao mesmo enumerador no qual **GetSourcesRowset** foi chamado, indicando que também está incluído na enumeração sub. Corresponde à coluna do conjunto de linhas de fontes de OLE DB nativo SOURCES_ISPARENT |       OLE DB fornece vários componentes de enumerador, incluindo MSDAENUM, MSDASQL enumerador, SQLNCLI enumerador, enumerador SQLOLEDB e outros. Para obter mais informações sobre os componentes de enumerador e como usá-los, consulte o [referência do programador de DB OLE](http://go.microsoft.com/fwlink/?LinkId=45232)."
  example:
  - "The following console application uses the MSDAENUM component to retrieve information about all the OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = _  \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"))  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader =   \n     OleDbEnumerator.GetEnumerator(Type.GetTypeFromProgID(\"MSDAENUM\"));  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetEnumerator (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Retorna um <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> que contém informações sobre os provedores OLE DB solicitados, usando o enumerador de OLE DB especificado."
  overload: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O provedor não oferece suporte **ISourcesRowset da**."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Exceção no provedor subjacente."
  platform:
  - net462
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  id: GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  langs:
  - csharp
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.OleDb
  summary: "Retorna um <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> que contém informações sobre os provedores OLE DB instalados no momento, sem a necessidade de uma instância do <xref href=&quot;System.Data.OleDb.OleDbEnumerator&quot;> </xref> classe."
  remarks: "O leitor retornado por este método contém as seguintes colunas, que contêm cadeias de caracteres: | O Ordinal da coluna | Coluna | Descrição |   |--------------------|------------|-----------------|   |&0; | SOURCES_NAME | O nome invariável da fonte de dados OLE DB nativo ou no enumerador. |   |&1; | SOURCES_PARSENAME | Um nome legível que pode ser convertido em um identificador de origem usando a interface COM nativa IParseDisplayName. Corresponde à coluna SOURCES_PARSENAME retornada pelo conjunto de linhas de fontes de OLE DB nativo. |   |&2; | SOURCES_DESCRIPTION | Descrição da fonte de dados OLE DB nativo. Corresponde à coluna SOURCES_DESCRIPTION retornada pelo conjunto de linhas de fontes de OLE DB nativo. |   |&3; | SOURCES_TYPE | Um dos seguintes membros de enumeração: associador (0), DataSource_MDP (1), DataSource_TDP (2), (3) do enumerador. Eles correspondem aos valores retornados na coluna do conjunto de linhas de fontes de OLE DB nativo SOURCES_TYPE. |   |&4; | SOURCES_ISPARENT | Aplicável somente enumeradores. Se `true`, indica que a entrada se aplica ao mesmo enumerador no qual GetSourcesRowset foi chamado, indicando que também está incluído na enumeração sub. Corresponde à coluna do conjunto de linhas de fontes de OLE DB nativo SOURCES_ISPARENT |   |&5; | SOURCES_CLSID | Um nome legível, que pode ser convertido em um identificador de origem usando a interface COM nativa IParseDisplayName. Corresponde à coluna SOURCES_CLSID retornada pelo conjunto de linhas de fontes de OLE DB nativo. |"
  example:
  - "The following console application retrieves information about all the visible OLE DB providers and displays the information in the console window.  \n  \n```vb#  \nImports System.Data  \nImports System.Data.OleDb  \n  \nModule Module1  \n  \n  Sub Main()  \n    Dim enumerator As New OleDbEnumerator  \n    Dim reader As OleDbDataReader = OleDbEnumerator.GetRootEnumerator()  \n  \n    DisplayData(reader)  \n  \n    Console.WriteLine(\"Press any key to continue.\")  \n    Console.ReadKey()  \n  End Sub  \n  \n  Private Sub DisplayData(ByVal reader As OleDbDataReader)  \n    While reader.Read()  \n      For i As Integer = 0 To reader.FieldCount - 1  \n        Console.WriteLine(\"{0} = {1}\", _  \n         reader.GetName(i), reader.GetValue(i))  \n      Next  \n      Console.WriteLine(\"==================================\")  \n    End While  \n  \n  End Sub  \nEnd Module  \n```  \n  \n```c#  \nusing System;  \nusing System.Data;  \nusing System.Data.OleDb;  \n  \nclass Program  \n{  \n static void Main()  \n {  \n   OleDbDataReader reader = OleDbEnumerator.GetRootEnumerator();  \n  \n   DisplayData(reader);  \n  \n   Console.WriteLine(\"Press any key to continue.\");  \n   Console.ReadKey();  \n }  \n  \n static void DisplayData(OleDbDataReader reader)  \n {  \n   while (reader.Read())  \n   {  \n     for (int i = 0; i < reader.FieldCount; i++)  \n     {  \n       Console.WriteLine(\"{0} = {1}\",  \n        reader.GetName(i), reader.GetValue(i));  \n     }  \n     Console.WriteLine(\"==================================\");  \n   }  \n }  \n}  \n```"
  syntax:
    content: public static System.Data.OleDb.OleDbDataReader GetRootEnumerator ();
    parameters: []
    return:
      type: System.Data.OleDb.OleDbDataReader
      description: "Retorna um <xref href=&quot;System.Data.OleDb.OleDbDataReader&quot;> </xref> que contém informações sobre os provedores OLE DB visíveis."
  overload: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  exceptions:
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O provedor não oferece suporte a ISourcesRowset da."
  - type: System.Data.OleDb.OleDbException
    commentId: T:System.Data.OleDb.OleDbException
    description: "Ocorreu uma exceção no provedor subjacente."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Data.OleDb.OleDbException
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbException
  nameWithType: OleDbException
  fullName: System.Data.OleDb.OleDbException
- uid: System.Data.OleDb.OleDbEnumerator.#ctor
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator()
  nameWithType: OleDbEnumerator.OleDbEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.OleDbEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.GetElements
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements()
  nameWithType: OleDbEnumerator.GetElements()
  fullName: System.Data.OleDb.OleDbEnumerator.GetElements()
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator(System.Type)
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator(Type)
  nameWithType: OleDbEnumerator.GetEnumerator(Type)
  fullName: System.Data.OleDb.OleDbEnumerator.GetEnumerator(Type)
- uid: System.Data.OleDb.OleDbDataReader
  parent: System.Data.OleDb
  isExternal: false
  name: OleDbDataReader
  nameWithType: OleDbDataReader
  fullName: System.Data.OleDb.OleDbDataReader
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator()
  nameWithType: OleDbEnumerator.GetRootEnumerator()
  fullName: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator()
- uid: System.Data.OleDb.OleDbEnumerator.#ctor*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: OleDbEnumerator
  nameWithType: OleDbEnumerator.OleDbEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetElements*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetElements
  nameWithType: OleDbEnumerator.GetElements
- uid: System.Data.OleDb.OleDbEnumerator.GetEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetEnumerator
  nameWithType: OleDbEnumerator.GetEnumerator
- uid: System.Data.OleDb.OleDbEnumerator.GetRootEnumerator*
  parent: System.Data.OleDb.OleDbEnumerator
  isExternal: false
  name: GetRootEnumerator
  nameWithType: OleDbEnumerator.GetRootEnumerator
