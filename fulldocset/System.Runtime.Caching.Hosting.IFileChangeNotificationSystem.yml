### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  id: IFileChangeNotificationSystem
  children:
  - System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  - System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)
  langs:
  - csharp
  name: IFileChangeNotificationSystem
  nameWithType: IFileChangeNotificationSystem
  fullName: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  type: Interface
  summary: "Define uma maneira de expor um personalizado <xref href=&quot;System.Runtime.Caching.FileChangeMonitor&quot;> </xref> objeto para uma implementação de cache."
  remarks: "No ASP.NET, a interface IFileChangeNotificationSystem fornece acesso ao gerenciamento de notificação de alteração de arquivo interno.       A interface IFileChangeNotificationSystem é usada internamente pela <xref:System.Runtime.Caching.HostFileChangeMonitor>classe.</xref:System.Runtime.Caching.HostFileChangeMonitor>       Quando uma implementação de cache é executado em um domínio de aplicativo do ASP.NET, ASP.NET implementa uma interface IFileChangeNotificationSystem por meio de <xref:System.Runtime.Caching.ObjectCache.Host%2A>propriedade.</xref:System.Runtime.Caching.ObjectCache.Host%2A> O <xref:System.Runtime.Caching.HostFileChangeMonitor>detecta essa propriedade de classe e usa o sistema de notificação de alteração de arquivo do ASP.NET para remover entradas de cache com base na notificação de alteração de arquivo.</xref:System.Runtime.Caching.HostFileChangeMonitor>       Em aplicativos não-ASP.NET, não há nenhum ambiente de host que implementa uma interface IFileChangeNotificationSystem personalizada. Como resultado, o <xref:System.Runtime.Caching.HostFileChangeMonitor>classe usa a <xref:System.IO.FileSystemWatcher>classe do CLR.</xref:System.IO.FileSystemWatcher> </xref:System.Runtime.Caching.HostFileChangeMonitor>"
  syntax:
    content: public interface IFileChangeNotificationSystem
  implements: []
  platform:
  - net462
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  id: StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  langs:
  - csharp
  name: StartMonitoring(String,OnChangedCallback,Object,DateTimeOffset,Int64)
  nameWithType: IFileChangeNotificationSystem.StartMonitoring(String,OnChangedCallback,Object,DateTimeOffset,Int64)
  fullName: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(String,OnChangedCallback,Object,DateTimeOffset,Int64)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Hosting
  summary: "Registra um caminho de arquivo para monitorar o ambiente de host."
  remarks: "Esse método é usado por objetos do cache personalizado e monitores que implementam o ambiente de host de alteração personalizada <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>interface para registrar os caminhos de arquivo para monitoramento com o ambiente de host.</xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem> O método StartMonitoring é chamado pelo implementadores do <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>interface para registrar um arquivo ou diretório para o monitoramento de alteração.</xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem>"
  syntax:
    content: public void StartMonitoring (string filePath, System.Runtime.Caching.OnChangedCallback onChangedCallback, out object state, out DateTimeOffset lastWriteTime, out long fileSize);
    parameters:
    - id: filePath
      type: System.String
      description: "O caminho físico totalmente qualificado de um diretório ou arquivo para monitorar as alterações."
    - id: onChangedCallback
      type: System.Runtime.Caching.OnChangedCallback
      description: "Uma referência a um método que implementa o <xref href=&quot;System.Runtime.Caching.OnChangedCallback&quot;> </xref> delegate. Quando o diretório ou arquivo monitorado for alterada, a implementação do ambiente de host do <xref href=&quot;System.Runtime.Caching.Hosting.IFileChangeNotificationSystem&quot;> </xref> interface gera um evento chamando o <xref href=&quot;System.Runtime.Caching.OnChangedCallback&quot;> </xref> classe."
    - id: state
      type: System.Object
      description: "O estado que é fornecido pelo ambiente de host. Implementações de cache e os monitores de alteração personalizada devem tratar o valor de estado como opaco. No entanto, o estado deve ser armazenado para que possa ser enviada para o ambiente de host quando a implementação de cache chama o <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*>método.</xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*>"
    - id: lastWriteTime
      type: System.DateTimeOffset
      description: "Quando este método retorna, contém a última data e hora em que ocorreu uma operação de gravação em `filePath`. Esse parâmetro é passado não inicializado. Esse parâmetro é retornado do ambiente de host."
    - id: fileSize
      type: System.Int64
      description: "Quando este método retorna, contém o tamanho total de monitorados `filePath`. Esse parâmetro é passado não inicializado. Esse parâmetro é retornado do ambiente de host."
  overload: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)
  id: StopMonitoring(System.String,System.Object)
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  langs:
  - csharp
  name: StopMonitoring(String,Object)
  nameWithType: IFileChangeNotificationSystem.StopMonitoring(String,Object)
  fullName: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(String,Object)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching.Hosting
  summary: "Extremidades alterar de monitoramento."
  remarks: "O método StopMonitoring deve ser chamado por caches personalizados e monitores de alteração personalizada que estão sendo descartados pelo ambiente de host para interromper o monitoramento de diretórios e caminhos de arquivo."
  syntax:
    content: public void StopMonitoring (string filePath, object state);
    parameters:
    - id: filePath
      type: System.String
      description: "O caminho do arquivo ou pasta para interromper o monitoramento. Isso deve corresponder a um valor de caminho de arquivo que foi passado uma chamada anterior para o <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*>método.</xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*>"
    - id: state
      type: System.Object
      description: "As informações de estado que foi originalmente fornecidas pelo ambiente de host durante uma chamada anterior para o <xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*>método.</xref:System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*>"
  overload: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(System.String,System.Runtime.Caching.OnChangedCallback,System.Object@,System.DateTimeOffset@,System.Int64@)
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  isExternal: false
  name: StartMonitoring(String,OnChangedCallback,Object,DateTimeOffset,Int64)
  nameWithType: IFileChangeNotificationSystem.StartMonitoring(String,OnChangedCallback,Object,DateTimeOffset,Int64)
  fullName: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring(String,OnChangedCallback,Object,DateTimeOffset,Int64)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.OnChangedCallback
  parent: System.Runtime.Caching
  isExternal: false
  name: OnChangedCallback
  nameWithType: OnChangedCallback
  fullName: System.Runtime.Caching.OnChangedCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(System.String,System.Object)
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  isExternal: false
  name: StopMonitoring(String,Object)
  nameWithType: IFileChangeNotificationSystem.StopMonitoring(String,Object)
  fullName: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring(String,Object)
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StartMonitoring*
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  isExternal: false
  name: StartMonitoring
  nameWithType: IFileChangeNotificationSystem.StartMonitoring
- uid: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem.StopMonitoring*
  parent: System.Runtime.Caching.Hosting.IFileChangeNotificationSystem
  isExternal: false
  name: StopMonitoring
  nameWithType: IFileChangeNotificationSystem.StopMonitoring
