### YamlMime:ManagedReference
items:
- uid: System.Media.SoundPlayer
  id: SoundPlayer
  children:
  - System.Media.SoundPlayer.#ctor
  - System.Media.SoundPlayer.#ctor(System.IO.Stream)
  - System.Media.SoundPlayer.#ctor(System.String)
  - System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Media.SoundPlayer.IsLoadCompleted
  - System.Media.SoundPlayer.Load
  - System.Media.SoundPlayer.LoadAsync
  - System.Media.SoundPlayer.LoadCompleted
  - System.Media.SoundPlayer.LoadTimeout
  - System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  - System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)
  - System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)
  - System.Media.SoundPlayer.Play
  - System.Media.SoundPlayer.PlayLooping
  - System.Media.SoundPlayer.PlaySync
  - System.Media.SoundPlayer.SoundLocation
  - System.Media.SoundPlayer.SoundLocationChanged
  - System.Media.SoundPlayer.Stop
  - System.Media.SoundPlayer.Stream
  - System.Media.SoundPlayer.StreamChanged
  - System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Media.SoundPlayer.Tag
  langs:
  - csharp
  name: SoundPlayer
  nameWithType: SoundPlayer
  fullName: System.Media.SoundPlayer
  type: Class
  summary: "Controla a reprodução de um som de um arquivo."
  remarks: "A classe SoundPlayer fornece uma interface simples para carregar e reproduzir um arquivo. A classe SoundPlayer dá suporte ao carregamento de um arquivo de um caminho de arquivo, uma URL, um <xref:System.IO.Stream>que contém um arquivo. wav ou um recurso incorporado que contém um arquivo. wav.</xref:System.IO.Stream>       Para executar um som usando a classe SoundPlayer, configure um SoundPlayer com um caminho para o arquivo. wav e chame um dos métodos de execução. Você pode identificar o arquivo. wav reproduzir usando um dos construtores ou configuração de <xref:System.Media.SoundPlayer.SoundLocation%2A>ou <xref:System.Media.SoundPlayer.Stream%2A>propriedade.</xref:System.Media.SoundPlayer.Stream%2A> </xref:System.Media.SoundPlayer.SoundLocation%2A> O arquivo pode ser carregado antes da reprodução, usando um dos métodos de carga ou carregamento pode ser adiado até que um dos métodos play seja chamado. Um SoundPlayer configurado para carregar um arquivo de um <xref:System.IO.Stream>ou a URL deve carregar o arquivo. wav na memória antes do início da reprodução.</xref:System.IO.Stream>       Você pode carregar ou executar um arquivo de forma síncrona ou assíncrona. Se você chamar uma carga síncrona ou executar o método, o thread de chamada aguardará até que o método retorna, o que pode fazer com que os eventos de pintura e outros seja interrompida. Ligar para o carregamento assíncrono ou método play permitirá que o thread de chamada continuar sem interrupções. Para obter mais informações sobre chamadas de método assíncrono, consulte [como: executar uma operação em segundo plano](~/add/includes/ajax-current-ext-md.md).       Quando um SoundPlayer terminou de carregar um arquivo, ele gera o <xref:System.Media.SoundPlayer.LoadCompleted>evento.</xref:System.Media.SoundPlayer.LoadCompleted> Você pode examinar o <xref:System.ComponentModel.AsyncCompletedEventArgs>no seu manipulador de eventos para determinar se a carga de êxito ou falha.</xref:System.ComponentModel.AsyncCompletedEventArgs> O <xref:System.Media.SoundPlayer.SoundLocationChanged>é gerado quando a fonte de áudio é definida como um novo caminho do arquivo ou URL.</xref:System.Media.SoundPlayer.SoundLocationChanged> O <xref:System.Media.SoundPlayer.StreamChanged>evento é gerado quando a fonte de áudio é definida como um novo <xref:System.IO.Stream>.</xref:System.IO.Stream> </xref:System.Media.SoundPlayer.StreamChanged> Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Para obter mais informações sobre SoundPlayer, consulte [visão geral da classe SoundPlayer](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > SoundPlayer a classe não pode executar outros tipos de arquivo, como. wma ou. mp3. Se você quiser executar outros tipos de arquivo, você pode usar o controle do Windows Media Player. Para obter mais informações, consulte [usando os controles do Windows Media Player em uma solução do .NET Framework](http://go.microsoft.com/fwlink/?LinkId=131267) e [referência de modelo de objeto do Windows Media Player para .NET de Visual Basic e c#](http://go.microsoft.com/fwlink/?LinkId=131269) no Windows Media Player SDK."
  example:
  - "The following code example demonstrates the use of the SoundPlayer class for playing .wav files from a local path or a Uniform Resource Identifier (URI).  \n  \n [!code-vb[System.Windows.Forms.Sound#1](~/add/codesnippet/visualbasic/t-system.media.soundplayer_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#1](~/add/codesnippet/cpp/t-system.media.soundplayer_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#1](~/add/codesnippet/csharp/t-system.media.soundplayer_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.ToolboxItem(false)]

      public class SoundPlayer : System.ComponentModel.Component, System.Runtime.Serialization.ISerializable
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Runtime.Serialization.ISerializable
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor
  id: '#ctor'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer()
  nameWithType: SoundPlayer.SoundPlayer()
  fullName: System.Media.SoundPlayer.SoundPlayer()
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> classe."
  remarks: "Este construtor inicializa um <xref:System.Media.SoundPlayer>sem fonte de áudio.</xref:System.Media.SoundPlayer> Até que ele está configurado com um caminho de origem de áudio, o <xref:System.Media.SoundPlayer>reproduzirá um som som quando um dos seus métodos de reprodução é chamado.</xref:System.Media.SoundPlayer>"
  syntax:
    content: public SoundPlayer ();
    parameters: []
  overload: System.Media.SoundPlayer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer(Stream)
  nameWithType: SoundPlayer.SoundPlayer(Stream)
  fullName: System.Media.SoundPlayer.SoundPlayer(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> classe e anexa o arquivo. wav em <xref:System.IO.Stream>.</xref:System.IO.Stream> especificado"
  remarks: "O <xref:System.IO.Stream>passado para o `stream` parâmetro deve ser um <xref:System.IO.Stream>que contém um arquivo. wav.</xref:System.IO.Stream> </xref:System.IO.Stream> Os dados retornados pelo <xref:System.IO.Stream.Read%2A>método o <xref:System.IO.Stream>devem ser os dados dentro de um arquivo. wav.</xref:System.IO.Stream> </xref:System.IO.Stream.Read%2A>"
  syntax:
    content: public SoundPlayer (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "Um <xref:System.IO.Stream>para um arquivo. wav.</xref:System.IO.Stream>"
  overload: System.Media.SoundPlayer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer(String)
  nameWithType: SoundPlayer.SoundPlayer(String)
  fullName: System.Media.SoundPlayer.SoundPlayer(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> classe e anexa o arquivo especificado."
  remarks: "A cadeia de caracteres passada para o `soundLocation` parâmetro pode ser um caminho de arquivo ou uma URL para um arquivo. Se o caminho ou URL não é válido, o <xref:System.Media.SoundPlayer>ainda será construídas, mas subsequentes chamadas para uma carga ou método play falhará.</xref:System.Media.SoundPlayer>"
  syntax:
    content: public SoundPlayer (string soundLocation);
    parameters:
    - id: soundLocation
      type: System.String
      description: "O local de um arquivo para carregar."
  overload: System.Media.SoundPlayer.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "O valor de URL especificado por <code> soundLocation </code> não pode ser resolvido."
  platform:
  - net462
- uid: System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundPlayer(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - System
  namespace: System.Media
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> classe."
  syntax:
    content: protected SoundPlayer (System.Runtime.Serialization.SerializationInfo serializationInfo, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: serializationInfo
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> a ser usado para desserialização."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O destino a ser usado para desserialização."
  overload: System.Media.SoundPlayer.#ctor*
  exceptions:
  - type: System.UriFormatException
    commentId: T:System.UriFormatException
    description: "O <xref:System.Media.SoundPlayer.SoundLocation*>especificado em <code> serializationInfo </code> não pode ser resolvido.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.IsLoadCompleted
  id: IsLoadCompleted
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: IsLoadCompleted
  nameWithType: SoundPlayer.IsLoadCompleted
  fullName: System.Media.SoundPlayer.IsLoadCompleted
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "Obtém um valor que indica se o carregamento de um arquivo. wav foi concluída com êxito."
  syntax:
    content: public bool IsLoadCompleted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um arquivo for carregado; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se um arquivo. wav ainda não foram carregado."
  overload: System.Media.SoundPlayer.IsLoadCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Load
  id: Load
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Load()
  nameWithType: SoundPlayer.Load()
  fullName: System.Media.SoundPlayer.Load()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Carrega um som de forma síncrona."
  remarks: "O método Load usa o thread atual para carregar um arquivo, impedindo que o thread de manipulação de outras mensagens até que a carga seja concluída.      > [!CAUTION] > Método a carga pode produzir um atraso ao carregar um arquivo grande. Além disso, eventos de pintura e serão bloqueados até que a carga seja concluída. Use o <xref:System.Media.SoundPlayer.LoadAsync%2A>método para carregar um som de forma assíncrona, que permite que o thread de chamada continuar sem interrupções.</xref:System.Media.SoundPlayer.LoadAsync%2A>       Este método gera o <xref:System.Media.SoundPlayer.LoadCompleted>eventos durante o carregamento for concluído, mesmo se a carga não foi bem-sucedida.</xref:System.Media.SoundPlayer.LoadCompleted>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.LoadAsync%2A> method to attach a .wav file to an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#2](~/add/codesnippet/visualbasic/m-system.media.soundplay_2_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#2](~/add/codesnippet/cpp/m-system.media.soundplay_2_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#2](~/add/codesnippet/csharp/m-system.media.soundplay_2_1.cs)]"
  syntax:
    content: public void Load ();
    parameters: []
  overload: System.Media.SoundPlayer.Load*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "O tempo decorrido durante o carregamento exceder o tempo, em milissegundos, especificado pelo <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado por <xref:System.Media.SoundPlayer.SoundLocation*>não pode ser encontrado.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.LoadAsync
  id: LoadAsync
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: LoadAsync()
  nameWithType: SoundPlayer.LoadAsync()
  fullName: System.Media.SoundPlayer.LoadAsync()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Carrega um arquivo de um fluxo ou um recurso da Web usando um novo thread."
  remarks: "Se um <xref:System.Media.SoundPlayer>for configurada para carregar um arquivo de um <xref:System.IO.Stream>ou recurso da Web, este método começa a carregar um arquivo do local usando um novo thread.</xref:System.IO.Stream> </xref:System.Media.SoundPlayer>       Este método gera o <xref:System.Media.SoundPlayer.LoadCompleted>eventos durante o carregamento for concluído, mesmo se a carga não foi bem-sucedida.</xref:System.Media.SoundPlayer.LoadCompleted>       Se um <xref:System.Media.SoundPlayer>está configurado para carregar um arquivo de um caminho de arquivo local, esse método não fará nada, porque o carregamento é adiado até que a execução começa.</xref:System.Media.SoundPlayer>       Para obter mais informações sobre o carregamento assíncrono, consulte [como: carregar um som assincronamente dentro de um formulário do Windows](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the LoadAsync method to asynchronously load a .wav file for use by an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#3](~/add/codesnippet/visualbasic/m-system.media.soundplay_3_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#3](~/add/codesnippet/cpp/m-system.media.soundplay_3_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#3](~/add/codesnippet/csharp/m-system.media.soundplay_3_1.cs)]"
  syntax:
    content: public void LoadAsync ();
    parameters: []
  overload: System.Media.SoundPlayer.LoadAsync*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "O tempo decorrido durante o carregamento exceder o tempo, em milissegundos, especificado pelo <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado por <xref:System.Media.SoundPlayer.SoundLocation*>não pode ser encontrado.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.LoadCompleted
  id: LoadCompleted
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: LoadCompleted
  nameWithType: SoundPlayer.LoadCompleted
  fullName: System.Media.SoundPlayer.LoadCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Media
  summary: "Ocorre quando um arquivo foi com êxito ou não carregado."
  remarks: "Esse evento é gerado quando o carregamento de um arquivo. wav é concluído. Os argumentos do evento indicam se a carga do som foi concluída com êxito ou falha.       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnLoadCompleted%2A> event handler to receive a notification indicating that the contents of a .wav file have been loaded. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#8](~/add/codesnippet/visualbasic/e-system.media.soundplay_1_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#8](~/add/codesnippet/cpp/e-system.media.soundplay_1_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#8](~/add/codesnippet/csharp/e-system.media.soundplay_1_1.cs)]"
  syntax:
    content: public event System.ComponentModel.AsyncCompletedEventHandler LoadCompleted;
    return:
      type: System.ComponentModel.AsyncCompletedEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.LoadTimeout
  id: LoadTimeout
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: LoadTimeout
  nameWithType: SoundPlayer.LoadTimeout
  fullName: System.Media.SoundPlayer.LoadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "Obtém ou define o tempo, em milissegundos, em que o arquivo. wav deve carregar."
  remarks: "Após esse período, o carregamento será cancelado e um <xref:System.ServiceProcess.TimeoutException>exceção será lançada.</xref:System.ServiceProcess.TimeoutException>"
  syntax:
    content: public int LoadTimeout { get; set; }
    return:
      type: System.Int32
      description: "O número de milissegundos de espera. O padrão é 10000 (10 segundos)."
  overload: System.Media.SoundPlayer.LoadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  id: OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: OnLoadCompleted(AsyncCompletedEventArgs)
  nameWithType: SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
  fullName: System.Media.SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Gera o <xref href=&quot;System.Media.SoundPlayer.LoadCompleted&quot;> </xref> eventos."
  remarks: "Esse método é chamado quando o carregamento de um arquivo. wav é concluído.       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnLoadCompleted também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnLoadCompleted (System.ComponentModel.AsyncCompletedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.AsyncCompletedEventArgs
      description: "Um <xref:System.ComponentModel.AsyncCompletedEventArgs>que contém os dados de evento.</xref:System.ComponentModel.AsyncCompletedEventArgs>"
  overload: System.Media.SoundPlayer.OnLoadCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)
  id: OnSoundLocationChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: OnSoundLocationChanged(EventArgs)
  nameWithType: SoundPlayer.OnSoundLocationChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnSoundLocationChanged(EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Gera o <xref href=&quot;System.Media.SoundPlayer.SoundLocationChanged&quot;> </xref> eventos."
  remarks: "Este método é chamado quando um novo caminho de origem de áudio para este <xref:System.Media.SoundPlayer>foi definida.</xref:System.Media.SoundPlayer>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte como: funcionalidade fornecer eventos e [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnSoundLocationChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSoundLocationChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Media.SoundPlayer.OnSoundLocationChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)
  id: OnStreamChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: OnStreamChanged(EventArgs)
  nameWithType: SoundPlayer.OnStreamChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnStreamChanged(EventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Gera o <xref href=&quot;System.Media.SoundPlayer.StreamChanged&quot;> </xref> eventos."
  remarks: "Este método é chamado quando um novo <xref:System.IO.Stream>para essa fonte de áudio <xref:System.Media.SoundPlayer>foi definida.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnStreamChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnStreamChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Media.SoundPlayer.OnStreamChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Play
  id: Play
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Play()
  nameWithType: SoundPlayer.Play()
  fullName: System.Media.SoundPlayer.Play()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Executa o arquivo WAV usando um novo thread e carrega o arquivo. wav primeiro se ele não foi carregado."
  remarks: "O método Play toca o som usando um novo thread. Se você chamar Play antes do arquivo foi carregado na memória, o arquivo será carregado antes do início da reprodução. Você pode usar o <xref:System.Media.SoundPlayer.LoadAsync%2A>ou <xref:System.Media.SoundPlayer.Load%2A>método para carregar o arquivo de WAV para a memória com antecedência.</xref:System.Media.SoundPlayer.Load%2A> </xref:System.Media.SoundPlayer.LoadAsync%2A> Após um wav arquivo é carregado com êxito de um <xref:System.IO.Stream>ou URL, futuras chamadas para métodos de reprodução para o <xref:System.Media.SoundPlayer>não será necessário recarregar o arquivo. wav até o caminho para que as alterações de som.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       Se o arquivo não foi especificado ou carregamento falhar, o método Play reproduzirá o aviso sonoro do som."
  example:
  - "The following code example demonstrates the use of the Play method to asynchronously play a .wav file. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#5](~/add/codesnippet/visualbasic/m-system.media.soundplay_0_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#5](~/add/codesnippet/cpp/m-system.media.soundplay_0_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#5](~/add/codesnippet/csharp/m-system.media.soundplay_0_1.cs)]"
  syntax:
    content: public void Play ();
    parameters: []
  overload: System.Media.SoundPlayer.Play*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "O tempo decorrido durante o carregamento exceder o tempo, em milissegundos, especificado pelo <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado por <xref:System.Media.SoundPlayer.SoundLocation*>não pode ser encontrado.</xref:System.Media.SoundPlayer.SoundLocation*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O cabeçalho. wav está corrompido; o arquivo especificado por <xref:System.Media.SoundPlayer.SoundLocation*>não é um arquivo. wav PCM.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.PlayLooping
  id: PlayLooping
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: PlayLooping()
  nameWithType: SoundPlayer.PlayLooping()
  fullName: System.Media.SoundPlayer.PlayLooping()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Executa loops o arquivo WAV usando um novo thread e carrega o arquivo. wav primeiro se ele não foi carregado."
  remarks: "O método PlayLooping desempenha e loops de som usando um novo thread. Se você chamar PlayLooping antes do arquivo foi carregado na memória, o arquivo será carregado antes do início da reprodução. Você pode usar o <xref:System.Media.SoundPlayer.LoadAsync%2A>ou <xref:System.Media.SoundPlayer.Load%2A>método para carregar o arquivo de WAV para a memória com antecedência.</xref:System.Media.SoundPlayer.Load%2A> </xref:System.Media.SoundPlayer.LoadAsync%2A> Após um wav arquivo é carregado com êxito de um <xref:System.IO.Stream>ou URL, futuras chamadas para métodos de reprodução para o <xref:System.Media.SoundPlayer>não será necessário recarregar o arquivo. wav até o caminho para que as alterações de som.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       Se o arquivo não foi especificado ou carregamento falhar, o método PlayLooping reproduzirá o aviso sonoro do som.       Para obter mais informações sobre PlayLooping, consulte [como: Loop um som reproduzido em um Windows Form](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of the PlayLooping method to repeatedly play a .wav file. The .wav will be played until the <xref:System.Media.SoundPlayer.Stop%2A> method is called. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#6](~/add/codesnippet/visualbasic/m-system.media.soundplay_1_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#6](~/add/codesnippet/cpp/m-system.media.soundplay_1_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#6](~/add/codesnippet/csharp/m-system.media.soundplay_1_1.cs)]"
  syntax:
    content: public void PlayLooping ();
    parameters: []
  overload: System.Media.SoundPlayer.PlayLooping*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "O tempo decorrido durante o carregamento exceder o tempo, em milissegundos, especificado pelo <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado por <xref:System.Media.SoundPlayer.SoundLocation*>não pode ser encontrado.</xref:System.Media.SoundPlayer.SoundLocation*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O cabeçalho. wav está corrompido; o arquivo especificado por <xref:System.Media.SoundPlayer.SoundLocation*>não é um arquivo. wav PCM.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.PlaySync
  id: PlaySync
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: PlaySync()
  nameWithType: SoundPlayer.PlaySync()
  fullName: System.Media.SoundPlayer.PlaySync()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Executa o arquivo. wav e carrega o arquivo. wav primeiro se ele não foi carregado."
  remarks: "O método PlaySync usa o thread atual para reproduzir um arquivo. wav, impedindo que o thread de manipulação de outras mensagens até que a carga seja concluída. Você pode usar o <xref:System.Media.SoundPlayer.LoadAsync%2A>ou <xref:System.Media.SoundPlayer.Load%2A>método para carregar o arquivo de WAV para a memória com antecedência.</xref:System.Media.SoundPlayer.Load%2A> </xref:System.Media.SoundPlayer.LoadAsync%2A> Após um wav arquivo é carregado com êxito de um <xref:System.IO.Stream>ou URL, futuras chamadas para métodos de reprodução para o <xref:System.Media.SoundPlayer>não será necessário recarregar o arquivo. wav até o caminho para que as alterações de som.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       Se o arquivo não foi especificado ou carregamento falhar, o método PlaySync reproduzirá o aviso sonoro do som."
  example:
  - "The following code example demonstrates the use of the PlaySync method to synchronously play a .wav file.  \n  \n [!code-cs[System.Windows.Forms.PlaySync#1](~/add/codesnippet/csharp/m-system.media.soundplay_4_1.cs)]\n [!code-cpp[System.Windows.Forms.PlaySync#1](~/add/codesnippet/cpp/m-system.media.soundplay_4_1.cpp)]\n [!code-vb[System.Windows.Forms.PlaySync#1](~/add/codesnippet/visualbasic/m-system.media.soundplay_4_1.vb)]"
  syntax:
    content: public void PlaySync ();
    parameters: []
  overload: System.Media.SoundPlayer.PlaySync*
  exceptions:
  - type: System.ServiceProcess.TimeoutException
    commentId: T:System.ServiceProcess.TimeoutException
    description: "O tempo decorrido durante o carregamento exceder o tempo, em milissegundos, especificado pelo <xref:System.Media.SoundPlayer.LoadTimeout*>.</xref:System.Media.SoundPlayer.LoadTimeout*>"
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado por <xref:System.Media.SoundPlayer.SoundLocation*>não pode ser encontrado.</xref:System.Media.SoundPlayer.SoundLocation*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O cabeçalho. wav está corrompido; o arquivo especificado por <xref:System.Media.SoundPlayer.SoundLocation*>não é um arquivo. wav PCM.</xref:System.Media.SoundPlayer.SoundLocation*>"
  platform:
  - net462
- uid: System.Media.SoundPlayer.SoundLocation
  id: SoundLocation
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundLocation
  nameWithType: SoundPlayer.SoundLocation
  fullName: System.Media.SoundPlayer.SoundLocation
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "Obtém ou define o caminho do arquivo ou a URL do arquivo WAV para carregar."
  remarks: "Essa propriedade é definida como <xref:System.String?displayProperty=fullName>quando a <xref:System.Media.SoundPlayer.Stream%2A>propriedade é definida como <xref:System.IO.Stream>.</xref:System.IO.Stream> </xref:System.Media.SoundPlayer.Stream%2A> </xref:System.String?displayProperty=fullName>"
  example:
  - "The following code example demonstrates the use of the SoundLocation property to assign the .wav file source to an instance of the <xref:System.Media.SoundPlayer> class. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#2](~/add/codesnippet/visualbasic/p-system.media.soundplay_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#2](~/add/codesnippet/cpp/p-system.media.soundplay_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#2](~/add/codesnippet/csharp/p-system.media.soundplay_1.cs)]"
  syntax:
    content: public string SoundLocation { get; set; }
    return:
      type: System.String
      description: "O caminho do arquivo ou a URL da qual carregar um arquivo, ou &lt;xref:System.String?displayProperty=fullName&gt; se nenhum caminho de arquivo estiver presente. O padrão é &lt;xref:System.String?displayProperty=fullName&gt;."
  overload: System.Media.SoundPlayer.SoundLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.SoundLocationChanged
  id: SoundLocationChanged
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: SoundLocationChanged
  nameWithType: SoundPlayer.SoundLocationChanged
  fullName: System.Media.SoundPlayer.SoundLocationChanged
  type: Event
  assemblies:
  - System
  namespace: System.Media
  summary: "Ocorre quando um novo caminho de origem de áudio para este <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> foi definido."
  remarks: "Esse evento é gerado quando um novo caminho de origem de áudio para este <xref:System.Media.SoundPlayer>foi definida.</xref:System.Media.SoundPlayer>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates the use of the <xref:System.Media.SoundPlayer.OnSoundLocationChanged%2A> event handler to receive a notification when the <xref:System.Media.SoundPlayer> has been attached to a different .wav file. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#9](~/add/codesnippet/visualbasic/e-system.media.soundplay_0_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#9](~/add/codesnippet/cpp/e-system.media.soundplay_0_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#9](~/add/codesnippet/csharp/e-system.media.soundplay_0_1.cs)]"
  syntax:
    content: public event EventHandler SoundLocationChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Stop
  id: Stop
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Stop()
  nameWithType: SoundPlayer.Stop()
  fullName: System.Media.SoundPlayer.Stop()
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Reprodução de paradas do som se reprodução estiver ocorrendo."
  remarks: ''
  example:
  - "The following code example demonstrates the use of the Stop method to halt a .wav file that is currently playing. This code example is part of a larger example provided for the <xref:System.Media.SoundPlayer> class.  \n  \n [!code-vb[System.Windows.Forms.Sound#7](~/add/codesnippet/visualbasic/m-system.media.soundplay_5_1.vb)]\n [!code-cpp[System.Windows.Forms.Sound#7](~/add/codesnippet/cpp/m-system.media.soundplay_5_1.cpp)]\n [!code-cs[System.Windows.Forms.Sound#7](~/add/codesnippet/csharp/m-system.media.soundplay_5_1.cs)]"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Media.SoundPlayer.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Stream
  id: Stream
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Stream
  nameWithType: SoundPlayer.Stream
  fullName: System.Media.SoundPlayer.Stream
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "Obtém ou define o <xref:System.IO.Stream>da qual carregar o arquivo. wav.</xref:System.IO.Stream>"
  remarks: "Essa propriedade é definida como `null` quando o <xref:System.Media.SoundPlayer.SoundLocation%2A>propriedade é definida como um local de som novo e válido.</xref:System.Media.SoundPlayer.SoundLocation%2A>"
  syntax:
    content: public System.IO.Stream Stream { get; set; }
    return:
      type: System.IO.Stream
      description: "Um <xref:System.IO.Stream>da qual carregar o arquivo. wav ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum fluxo está disponível.</xref:System.IO.Stream> O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Media.SoundPlayer.Stream*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.StreamChanged
  id: StreamChanged
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: StreamChanged
  nameWithType: SoundPlayer.StreamChanged
  fullName: System.Media.SoundPlayer.StreamChanged
  type: Event
  assemblies:
  - System
  namespace: System.Media
  summary: "Ocorre quando um novo <xref:System.IO.Stream>para essa fonte de áudio <xref href=&quot;System.Media.SoundPlayer&quot;> </xref> foi definida.</xref:System.IO.Stream>"
  remarks: "Esse evento é gerado quando um novo <xref:System.IO.Stream>para essa fonte de áudio <xref:System.Media.SoundPlayer>foi definida.</xref:System.Media.SoundPlayer> </xref:System.IO.Stream>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler StreamChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  isEii: true
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System
  namespace: System.Media
  summary: "Para obter uma descrição desse membro, consulte o &lt;xref:System.Runtime.Serialization.ISerializable.GetObjectData%2A?displayProperty=fullName&gt; método."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Media.SoundPlayer>instância é convertida em um <xref:System.Runtime.Serialization.ISerializable>interface.</xref:System.Runtime.Serialization.ISerializable> </xref:System.Media.SoundPlayer>"
  syntax:
    content: void ISerializable.GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> para popular com dados."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O destino (consulte <xref:System.Runtime.Serialization.StreamingContext>) desta serialização.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData*
  exceptions: []
  platform:
  - net462
- uid: System.Media.SoundPlayer.Tag
  id: Tag
  parent: System.Media.SoundPlayer
  langs:
  - csharp
  name: Tag
  nameWithType: SoundPlayer.Tag
  fullName: System.Media.SoundPlayer.Tag
  type: Property
  assemblies:
  - System
  namespace: System.Media
  summary: "Obtém ou define o <xref:System.Object>que contém dados sobre o <xref href=&quot;System.Media.SoundPlayer&quot;> </xref>.</xref:System.Object>"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém dados sobre o <xref href=&quot;System.Media.SoundPlayer&quot;> </xref>.</xref:System.Object>"
  overload: System.Media.SoundPlayer.Tag*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.UriFormatException
  isExternal: true
  name: System.UriFormatException
- uid: System.ServiceProcess.TimeoutException
  parent: System.ServiceProcess
  isExternal: false
  name: TimeoutException
  nameWithType: TimeoutException
  fullName: System.ServiceProcess.TimeoutException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Media.SoundPlayer.#ctor
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer()
  nameWithType: SoundPlayer.SoundPlayer()
  fullName: System.Media.SoundPlayer.SoundPlayer()
- uid: System.Media.SoundPlayer.#ctor(System.IO.Stream)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer(Stream)
  nameWithType: SoundPlayer.SoundPlayer(Stream)
  fullName: System.Media.SoundPlayer.SoundPlayer(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Media.SoundPlayer.#ctor(System.String)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer(String)
  nameWithType: SoundPlayer.SoundPlayer(String)
  fullName: System.Media.SoundPlayer.SoundPlayer(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Media.SoundPlayer.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.SoundPlayer(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Media.SoundPlayer.IsLoadCompleted
  parent: System.Media.SoundPlayer
  isExternal: false
  name: IsLoadCompleted
  nameWithType: SoundPlayer.IsLoadCompleted
  fullName: System.Media.SoundPlayer.IsLoadCompleted
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Media.SoundPlayer.Load
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Load()
  nameWithType: SoundPlayer.Load()
  fullName: System.Media.SoundPlayer.Load()
- uid: System.Media.SoundPlayer.LoadAsync
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadAsync()
  nameWithType: SoundPlayer.LoadAsync()
  fullName: System.Media.SoundPlayer.LoadAsync()
- uid: System.Media.SoundPlayer.LoadCompleted
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadCompleted
  nameWithType: SoundPlayer.LoadCompleted
  fullName: System.Media.SoundPlayer.LoadCompleted
- uid: System.ComponentModel.AsyncCompletedEventHandler
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventHandler
  nameWithType: AsyncCompletedEventHandler
  fullName: System.ComponentModel.AsyncCompletedEventHandler
- uid: System.Media.SoundPlayer.LoadTimeout
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadTimeout
  nameWithType: SoundPlayer.LoadTimeout
  fullName: System.Media.SoundPlayer.LoadTimeout
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Media.SoundPlayer.OnLoadCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnLoadCompleted(AsyncCompletedEventArgs)
  nameWithType: SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
  fullName: System.Media.SoundPlayer.OnLoadCompleted(AsyncCompletedEventArgs)
- uid: System.ComponentModel.AsyncCompletedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Media.SoundPlayer.OnSoundLocationChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnSoundLocationChanged(EventArgs)
  nameWithType: SoundPlayer.OnSoundLocationChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnSoundLocationChanged(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Media.SoundPlayer.OnStreamChanged(System.EventArgs)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnStreamChanged(EventArgs)
  nameWithType: SoundPlayer.OnStreamChanged(EventArgs)
  fullName: System.Media.SoundPlayer.OnStreamChanged(EventArgs)
- uid: System.Media.SoundPlayer.Play
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Play()
  nameWithType: SoundPlayer.Play()
  fullName: System.Media.SoundPlayer.Play()
- uid: System.Media.SoundPlayer.PlayLooping
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlayLooping()
  nameWithType: SoundPlayer.PlayLooping()
  fullName: System.Media.SoundPlayer.PlayLooping()
- uid: System.Media.SoundPlayer.PlaySync
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlaySync()
  nameWithType: SoundPlayer.PlaySync()
  fullName: System.Media.SoundPlayer.PlaySync()
- uid: System.Media.SoundPlayer.SoundLocation
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundLocation
  nameWithType: SoundPlayer.SoundLocation
  fullName: System.Media.SoundPlayer.SoundLocation
- uid: System.Media.SoundPlayer.SoundLocationChanged
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundLocationChanged
  nameWithType: SoundPlayer.SoundLocationChanged
  fullName: System.Media.SoundPlayer.SoundLocationChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Media.SoundPlayer.Stop
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stop()
  nameWithType: SoundPlayer.Stop()
  fullName: System.Media.SoundPlayer.Stop()
- uid: System.Media.SoundPlayer.Stream
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stream
  nameWithType: SoundPlayer.Stream
  fullName: System.Media.SoundPlayer.Stream
- uid: System.Media.SoundPlayer.StreamChanged
  parent: System.Media.SoundPlayer
  isExternal: false
  name: StreamChanged
  nameWithType: SoundPlayer.StreamChanged
  fullName: System.Media.SoundPlayer.StreamChanged
- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Media.SoundPlayer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Media.SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Media.SoundPlayer.Tag
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Tag
  nameWithType: SoundPlayer.Tag
  fullName: System.Media.SoundPlayer.Tag
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Media.SoundPlayer.#ctor*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundPlayer
  nameWithType: SoundPlayer.SoundPlayer
- uid: System.Media.SoundPlayer.IsLoadCompleted*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: IsLoadCompleted
  nameWithType: SoundPlayer.IsLoadCompleted
- uid: System.Media.SoundPlayer.Load*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Load
  nameWithType: SoundPlayer.Load
- uid: System.Media.SoundPlayer.LoadAsync*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadAsync
  nameWithType: SoundPlayer.LoadAsync
- uid: System.Media.SoundPlayer.LoadTimeout*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: LoadTimeout
  nameWithType: SoundPlayer.LoadTimeout
- uid: System.Media.SoundPlayer.OnLoadCompleted*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnLoadCompleted
  nameWithType: SoundPlayer.OnLoadCompleted
- uid: System.Media.SoundPlayer.OnSoundLocationChanged*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnSoundLocationChanged
  nameWithType: SoundPlayer.OnSoundLocationChanged
- uid: System.Media.SoundPlayer.OnStreamChanged*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: OnStreamChanged
  nameWithType: SoundPlayer.OnStreamChanged
- uid: System.Media.SoundPlayer.Play*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Play
  nameWithType: SoundPlayer.Play
- uid: System.Media.SoundPlayer.PlayLooping*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlayLooping
  nameWithType: SoundPlayer.PlayLooping
- uid: System.Media.SoundPlayer.PlaySync*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: PlaySync
  nameWithType: SoundPlayer.PlaySync
- uid: System.Media.SoundPlayer.SoundLocation*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: SoundLocation
  nameWithType: SoundPlayer.SoundLocation
- uid: System.Media.SoundPlayer.Stop*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stop
  nameWithType: SoundPlayer.Stop
- uid: System.Media.SoundPlayer.Stream*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Stream
  nameWithType: SoundPlayer.Stream
- uid: System.Media.SoundPlayer.System#Runtime#Serialization#ISerializable#GetObjectData*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: System.Runtime.Serialization.ISerializable.GetObjectData
  nameWithType: SoundPlayer.System.Runtime.Serialization.ISerializable.GetObjectData
- uid: System.Media.SoundPlayer.Tag*
  parent: System.Media.SoundPlayer
  isExternal: false
  name: Tag
  nameWithType: SoundPlayer.Tag
