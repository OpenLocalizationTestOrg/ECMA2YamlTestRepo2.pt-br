### YamlMime:ManagedReference
items:
- uid: System.Text.RegularExpressions.RegexCompilationInfo
  id: RegexCompilationInfo
  children:
  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  - System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  - System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  - System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  - System.Text.RegularExpressions.RegexCompilationInfo.Name
  - System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  - System.Text.RegularExpressions.RegexCompilationInfo.Options
  - System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  langs:
  - csharp
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo
  fullName: System.Text.RegularExpressions.RegexCompilationInfo
  type: Class
  summary: "Fornece informações sobre uma expressão regular que é usada para compilar uma expressão regular para um assembly autônomo."
  remarks: "Uma matriz de objetos RegexCompilationInfo é passada para o <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>método para fornecer informações sobre cada expressão regular a ser incluído no assembly.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> Cada expressão regular compilado que está incluído no conjunto é representada como uma classe derivada de <xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex> As propriedades do tipo RegexCompilationInfo definem o nome da classe da expressão regular, o nome totalmente qualificado (ou seja, o seu namespace e o seu nome de tipo), o padrão de expressão regular, quaisquer opções adicionais (como se a expressão regular diferencia maiusculas de minúsculas) e um intervalo de tempo limite que especifica quanto tempo o mecanismo de expressão regular deve procurar uma correspondência.       Você pode instanciar um objeto RegexCompilationInfo chamando o construtor de classe sobrecarregados."
  syntax:
    content: public class RegexCompilationInfo
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)'
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Text.RegularExpressions.RegexCompilationInfo&quot;> </xref> classe que contém informações sobre uma expressão regular a ser incluído em um assembly."
  remarks: "Cada parâmetro do construtor RegexCompilationInfo corresponde diretamente a uma propriedade da <xref:System.Text.RegularExpressions.RegexCompilationInfo>classe.</xref:System.Text.RegularExpressions.RegexCompilationInfo> Como todas as propriedades são somente leitura, seus valores também podem ser atribuídos diretamente.       O <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>método gera um assembly que contém expressões regulares compiladas.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> Portanto, você não deve especificar <xref:System.Text.RegularExpressions.RegexOptions>como um dos valores de `options`.</xref:System.Text.RegularExpressions.RegexOptions>       Se `ispublic` é `true`, a classe de expressão regular compilados tem acessibilidade pública. Ou seja, ele poderá ser instanciado de código que é executado em qualquer assembly. Se `ispublic` é `false`, receberá a classe de expressão regular compilados `internal` (em c#) ou `Friend` (no Visual Basic) acessibilidade. Ou seja, ele poderá ser instanciado somente de código que é executado no mesmo assembly como a classe de expressão regular."
  example:
  - "The following example creates and uses a compiled regular expression in two steps.  \n  \n In the first step, compile and execute the following code example. The RegexCompilationInfo constructor in the code example defines a compiled regular expression. The result of executing the code is an assembly named FishRegex.dll that contains a compiled regular expression type named `FishRegex`.  \n  \n [!code-cs[sys.txt.rgxCompInfo#1](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_1.cs)]\n [!code-vb[sys.txt.rgxCompInfo#1](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_1.vb)]  \n  \n In the second step, compile the following code example using a reference to FishRegex.dll, and then run the resulting executable file. The executable file matches a target string by using the `FishRegex` type, and displays the match, group, capture group, and index position of the matches in the target string.  \n  \n [!code-vb[sys.txt.rgxCompInfo#2](~/add/codesnippet/visualbasic/7e273a6c-e154-4435-ab93-_2.vb)]\n [!code-cs[sys.txt.rgxCompInfo#2](~/add/codesnippet/csharp/7e273a6c-e154-4435-ab93-_2.cs)]"
  syntax:
    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic);
    parameters:
    - id: pattern
      type: System.String
      description: "A expressão regular para compilar."
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: "As opções de expressão regular a ser usado ao compilar a expressão regular."
    - id: name
      type: System.String
      description: "O nome do tipo que representa a expressão regular compilada."
    - id: fullnamespace
      type: System.String
      description: "O namespace ao qual pertence o novo tipo."
    - id: ispublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para tornar a expressão regular compilada publicamente visível; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>é &lt;xref:System.String?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pattern</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>fullnamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  id: '#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)'
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  type: Constructor
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Text.RegularExpressions.RegexCompilationInfo&quot;> </xref> classe que contém informações sobre uma expressão regular com um valor de tempo limite especificado para ser incluído em um assembly."
  remarks: "Cada parâmetro do <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29>construtor diretamente corresponde a uma propriedade da <xref:System.Text.RegularExpressions.RegexCompilationInfo>classe.</xref:System.Text.RegularExpressions.RegexCompilationInfo> </xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%29> Como todas as propriedades são somente leitura, seus valores também podem ser atribuídos diretamente.       O <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>método gera um assembly que contém expressões regulares compiladas.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> Portanto, você não deve especificar <xref:System.Text.RegularExpressions.RegexOptions>como um dos valores de `options`.</xref:System.Text.RegularExpressions.RegexOptions>       Se `ispublic` é `true`, a classe de expressão regular compilados tem acessibilidade pública. Ou seja, ele poderá ser instanciado de código que é executado em qualquer assembly. Se `ispublic` é `false`, receberá a classe de expressão regular compilados `internal` (em c#) ou `Friend` (no Visual Basic) acessibilidade. Ou seja, ele poderá ser instanciado somente de código que é executado no mesmo assembly como a classe de expressão regular.       O `matchTimeout` parâmetro define o intervalo de tempo limite padrão para a expressão regular compilado. Esse valor representa a quantidade aproximada de tempo que um objeto de expressão regular compilada será executado uma única operação de correspondência antes da operação de tempo limite e o mecanismo de expressão regular gera um <xref:System.Text.RegularExpressions.RegexMatchTimeoutException>exceção durante sua próxima verificação de intervalo.</xref:System.Text.RegularExpressions.RegexMatchTimeoutException> Para obter informações adicionais sobre o valor de tempo limite, consulte o <xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>propriedade.</xref:System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout%2A>      > [!IMPORTANT] > É recomendável que você sempre defina um valor de tempo limite padrão para uma expressão regular compilado. Os consumidores de sua biblioteca de expressão regular podem substituir esse valor de tempo limite, passando um <xref:System.TimeSpan>valor que representa o novo intervalo de tempo limite para essa sobrecarga de construtor.</xref:System.TimeSpan>"
  example:
  - "The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_1.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_1.vb)]  \n  \n The regular expression pattern `(\\w)\\1+` is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w)`|Match any word character and assign it to the first capturing group.|  \n|`\\1+`|Match one or more occurrences of the value of the first captured group.|  \n  \n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/caa070a5-44ee-405f-81e7-_2.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/caa070a5-44ee-405f-81e7-_2.vb)]"
  syntax:
    content: public RegexCompilationInfo (string pattern, System.Text.RegularExpressions.RegexOptions options, string name, string fullnamespace, bool ispublic, TimeSpan matchTimeout);
    parameters:
    - id: pattern
      type: System.String
      description: "A expressão regular para compilar."
    - id: options
      type: System.Text.RegularExpressions.RegexOptions
      description: "As opções de expressão regular a ser usado ao compilar a expressão regular."
    - id: name
      type: System.String
      description: "O nome do tipo que representa a expressão regular compilada."
    - id: fullnamespace
      type: System.String
      description: "O namespace ao qual pertence o novo tipo."
    - id: ispublic
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para tornar a expressão regular compilada publicamente visível; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: matchTimeout
      type: System.TimeSpan
      description: "O intervalo de tempo limite padrão para a expressão regular."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>name</code>é &lt;xref:System.String?displayProperty=fullName&gt;."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>pattern</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>name</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>fullnamespace</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>matchTimeout</code>for negativo, zero, ou maior que aproximadamente 24 dias."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  id: IsPublic
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Obtém ou define um valor que indica se a expressão regular compilada tem visibilidade pública."
  remarks: "Se a propriedade IsPublic for `false`, a classe de expressão regular definida pela instância atual pode ser instanciada somente pelo código que está em execução no assembly que contém a classe. No entanto, como o <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName>método gera um assembly que contém somente as expressões regulares compiladas e não permite que o código adicional a ser adicionado, geralmente, não há nenhum motivo para atribuir esta propriedade um valor de `false`.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPublic { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a expressão regular tem visibilidade pública; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  id: MatchTimeout
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Obtém ou define o intervalo de tempo limite padrão de expressão regular."
  remarks: "A propriedade MatchTimeout define o intervalo de tempo limite padrão para a expressão regular compilado. Esse valor representa a quantidade aproximada de tempo que uma expressão regular compilada executará uma única operação de correspondência antes da operação de tempo limite e o mecanismo de expressão regular gera um <xref:System.Text.RegularExpressions.RegexMatchTimeoutException>exceção durante sua próxima verificação de intervalo.</xref:System.Text.RegularExpressions.RegexMatchTimeoutException>      > [!IMPORTANT] > É recomendável que você sempre defina um valor de tempo limite padrão para uma expressão regular compilado. Os consumidores de sua biblioteca de expressão regular podem substituir esse valor de tempo limite, passando um <xref:System.TimeSpan>valor que representa o novo intervalo de tempo limite para o construtor de classe da expressão regular compilados.</xref:System.TimeSpan>       Você pode atribuir um valor de tempo limite padrão para um <xref:System.Text.RegularExpressions.RegexCompilationInfo>objeto em qualquer uma das seguintes maneiras: - chamando o <xref:System.AppDomain.SetData%2A?displayProperty=fullName>método e fornecer a representação de cadeia de caracteres de uma <xref:System.TimeSpan>valor para a propriedade &quot;REGEX_DEFAULT_MATCH_TIMEOUT&quot;.</xref:System.TimeSpan> </xref:System.AppDomain.SetData%2A?displayProperty=fullName> </xref:System.Text.RegularExpressions.RegexCompilationInfo>      -Chamando o <xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29>construtor e fornecer um valor para o `matchTimeout` parâmetro.</xref:System.Text.RegularExpressions.RegexCompilationInfo.%23ctor%28System.String%2CSystem.Text.RegularExpressions.RegexOptions%2CSystem.String%2CSystem.String%2CSystem.Boolean%2CSystem.TimeSpan%29>      -Definindo o valor dessa propriedade.       Para definir um intervalo de tempo limite razoável, considere os seguintes fatores:-o comprimento e a complexidade do padrão de expressão regular. Expressões regulares mais longas e complexas requerem mais tempo do que aqueles menores e mais simples.      -A carga esperada máquina. Processamento leva mais tempo em sistemas com alta utilização de CPU e memória."
  example:
  - "The following example defines a single compiled regular expression named `DuplicateChars` that identifies two or more occurrences of the same character in an input string. The compiled regular expression has a default time-out of 2 seconds. When you execute the example, it creates a class library named RegexLib.dll that contains the compiled regular expression.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/csharp/p-system.text.regularexp_1.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#1](~/add/codesnippet/visualbasic/p-system.text.regularexp_1.vb)]  \n  \n The regular expression pattern `(\\w)\\1+` is defined as shown in the following table.  \n  \n|Pattern|Description|  \n|-------------|-----------------|  \n|`(\\w)`|Match any word character and assign it to the first capturing group.|  \n|`\\1+`|Match one or more occurrences of the value of the first captured group.|  \n  \n The following example uses the `DuplicatedChars` regular expression to identify duplicate characters in a string array. When it calls the `DuplicatedChars` constructor, it changes the time-out interval to .5 seconds.  \n  \n [!code-cs[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/csharp/p-system.text.regularexp_2.cs)]\n [!code-vb[System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout#2](~/add/codesnippet/visualbasic/p-system.text.regularexp_2.vb)]"
  syntax:
    content: public TimeSpan MatchTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "O intervalo de tempo máximo que pode decorrer em uma operação de correspondência antes de um <xref:System.Text.RegularExpressions.RegexMatchTimeoutException>for lançada, ou &lt;xref:System.Text.RegularExpressions.Regex.InfiniteMatchTimeout?displayProperty=fullName&gt; se tempos limite está desabilitado.</xref:System.Text.RegularExpressions.RegexMatchTimeoutException>"
  overload: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name
  id: Name
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Name
  nameWithType: RegexCompilationInfo.Name
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Obtém ou define o nome do tipo que representa a expressão regular compilada."
  remarks: "A <xref:System.Text.RegularExpressions.RegexCompilationInfo>classe é usada para definir uma expressão regular compilada, que é representada como uma classe derivada de <xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex> </xref:System.Text.RegularExpressions.RegexCompilationInfo> A propriedade Name define o nome da classe do tipo de expressão regular e o <xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>e propriedades de nome juntas definem o nome totalmente qualificado.</xref:System.Text.RegularExpressions.RegexCompilationInfo.Namespace%2A>"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome do novo tipo."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Name*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor dessa propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor dessa propriedade é uma cadeia de caracteres vazia."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  id: Namespace
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Obtém ou define o namespace ao qual pertence o novo tipo."
  remarks: "A <xref:System.Text.RegularExpressions.RegexCompilationInfo>classe é usada para definir uma expressão regular compilada, que é representada como uma classe derivada de <xref:System.Text.RegularExpressions.Regex>.</xref:System.Text.RegularExpressions.Regex> </xref:System.Text.RegularExpressions.RegexCompilationInfo> A propriedade Namespace define o namespace que contém o tipo de expressão regular compilado e o Namespace e <xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>propriedades juntas definem o nome totalmente qualificado.</xref:System.Text.RegularExpressions.RegexCompilationInfo.Name%2A>"
  syntax:
    content: public string Namespace { get; set; }
    return:
      type: System.String
      description: "O namespace do novo tipo."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor dessa propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options
  id: Options
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Options
  nameWithType: RegexCompilationInfo.Options
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Obtém ou define as opções para usar ao compilar a expressão regular."
  remarks: "O <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>método gera um assembly que contém expressões regulares compiladas.</xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A> Portanto, você não precisa especificar <xref:System.Text.RegularExpressions.RegexOptions>como um dos valores da propriedade.</xref:System.Text.RegularExpressions.RegexOptions> Se estiver presente, o <xref:System.Text.RegularExpressions.RegexOptions>opção será ignorada.</xref:System.Text.RegularExpressions.RegexOptions>"
  syntax:
    content: public System.Text.RegularExpressions.RegexOptions Options { get; set; }
    return:
      type: System.Text.RegularExpressions.RegexOptions
      description: "Uma combinação bit a bit dos valores de enumeração."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Options*
  exceptions: []
  platform:
  - net462
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  id: Pattern
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  langs:
  - csharp
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  type: Property
  assemblies:
  - System
  namespace: System.Text.RegularExpressions
  summary: "Obtém ou define a expressão regular para compilar."
  remarks: "A propriedade padrão pode conter qualquer expressão regular válida. Se o valor da propriedade padrão não é um padrão de expressão regular sintaticamente correto, a chamada para o <xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>método lança um <xref:System.ArgumentException>.</xref:System.ArgumentException> </xref:System.Text.RegularExpressions.Regex.CompileToAssembly%2A>"
  syntax:
    content: public string Pattern { get; set; }
    return:
      type: System.String
      description: "A expressão regular para compilar."
  overload: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor dessa propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean)
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Text.RegularExpressions.RegexOptions
  parent: System.Text.RegularExpressions
  isExternal: true
  name: RegexOptions
  nameWithType: RegexOptions
  fullName: System.Text.RegularExpressions.RegexOptions
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor(System.String,System.Text.RegularExpressions.RegexOptions,System.String,System.String,System.Boolean,System.TimeSpan)
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  nameWithType: RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.RegexCompilationInfo(String,RegexOptions,String,String,Boolean,TimeSpan)
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Name
  nameWithType: RegexCompilationInfo.Name
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Name
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Namespace
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Options
  nameWithType: RegexCompilationInfo.Options
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Options
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
  fullName: System.Text.RegularExpressions.RegexCompilationInfo.Pattern
- uid: System.Text.RegularExpressions.RegexCompilationInfo.#ctor*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: RegexCompilationInfo
  nameWithType: RegexCompilationInfo.RegexCompilationInfo
- uid: System.Text.RegularExpressions.RegexCompilationInfo.IsPublic*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: IsPublic
  nameWithType: RegexCompilationInfo.IsPublic
- uid: System.Text.RegularExpressions.RegexCompilationInfo.MatchTimeout*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: MatchTimeout
  nameWithType: RegexCompilationInfo.MatchTimeout
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Name*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Name
  nameWithType: RegexCompilationInfo.Name
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Namespace*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Namespace
  nameWithType: RegexCompilationInfo.Namespace
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Options*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Options
  nameWithType: RegexCompilationInfo.Options
- uid: System.Text.RegularExpressions.RegexCompilationInfo.Pattern*
  parent: System.Text.RegularExpressions.RegexCompilationInfo
  isExternal: false
  name: Pattern
  nameWithType: RegexCompilationInfo.Pattern
