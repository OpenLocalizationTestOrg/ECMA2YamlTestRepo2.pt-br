### YamlMime:ManagedReference
items:
- uid: System.Web.Security.Membership
  id: Membership
  children:
  - System.Web.Security.Membership.ApplicationName
  - System.Web.Security.Membership.CreateUser(System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  - System.Web.Security.Membership.DeleteUser(System.String)
  - System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  - System.Web.Security.Membership.EnablePasswordReset
  - System.Web.Security.Membership.EnablePasswordRetrieval
  - System.Web.Security.Membership.FindUsersByEmail(System.String)
  - System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.FindUsersByName(System.String)
  - System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  - System.Web.Security.Membership.GetAllUsers
  - System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  - System.Web.Security.Membership.GetNumberOfUsersOnline
  - System.Web.Security.Membership.GetUser
  - System.Web.Security.Membership.GetUser(System.Boolean)
  - System.Web.Security.Membership.GetUser(System.Object)
  - System.Web.Security.Membership.GetUser(System.String)
  - System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  - System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  - System.Web.Security.Membership.GetUserNameByEmail(System.String)
  - System.Web.Security.Membership.HashAlgorithmType
  - System.Web.Security.Membership.MaxInvalidPasswordAttempts
  - System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  - System.Web.Security.Membership.MinRequiredPasswordLength
  - System.Web.Security.Membership.PasswordAttemptWindow
  - System.Web.Security.Membership.PasswordStrengthRegularExpression
  - System.Web.Security.Membership.Provider
  - System.Web.Security.Membership.Providers
  - System.Web.Security.Membership.RequiresQuestionAndAnswer
  - System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  - System.Web.Security.Membership.UserIsOnlineTimeWindow
  - System.Web.Security.Membership.ValidateUser(System.String,System.String)
  - System.Web.Security.Membership.ValidatingPassword
  langs:
  - csharp
  name: Membership
  nameWithType: Membership
  fullName: System.Web.Security.Membership
  type: Class
  summary: "Valida as credenciais do usuário e gerencia as configurações do usuário. Essa classe não pode ser herdada."
  remarks: "A classe de associação é usada em aplicativos ASP.NET para validar as credenciais do usuário e gerenciar configurações de usuário, como senhas e endereços de email. A classe de associação pode ser usada por conta própria, ou em conjunto com o <xref:System.Web.Security.FormsAuthentication>para criar um sistema completo para autenticar usuários de um aplicativo Web ou site.</xref:System.Web.Security.FormsAuthentication> O <xref:System.Web.UI.WebControls.Login>controle encapsula a classe de associação para fornecer um mecanismo prático para validar usuários.</xref:System.Web.UI.WebControls.Login>      > [!NOTE] > Se você não estiver familiarizado com os recursos de associação do ASP.NET, consulte [Introdução a associação](~/add/includes/ajax-current-ext-md.md) antes de continuar. Para obter uma lista de outros tópicos relacionados a associação, consulte [Gerenciando usuários com o uso de associações](~/add/includes/ajax-current-ext-md.md).       A classe de associação fornece recursos para:-criar novos usuários.      -Armazenamento de informações de associação (nomes de usuário, senhas, endereços de email e dados de suporte) no Microsoft SQL Server ou em um repositório de dados alternativo.      -Autenticação de usuários que visitam seu site. Você pode autenticar os usuários programaticamente, ou você pode usar o <xref:System.Web.UI.WebControls.Login>controle para criar um sistema completo de autenticação que exige pouco ou nenhum código.</xref:System.Web.UI.WebControls.Login>      -Gerenciamento de senhas, que inclui criar, alterar, recuperando e redefini-los e assim por diante. Opcionalmente, você pode configurar a associação ASP.NET para exigir uma pergunta de senha e resposta para autenticar solicitações de recuperação ou redefinição de senha para usuários que esqueceram suas senhas.       Embora a associação do ASP.NET é um recurso independentes do ASP.NET para autenticação, ele pode ser integrado com o gerenciamento de função ASP.NET para fornecer serviços de autorização para seu site. Associação também pode ser integrada com o usuário do ASP.NET <xref:System.Web.Profile>para fornecer personalização específica do aplicativo que pode ser ajustada para usuários individuais.</xref:System.Web.Profile> Para obter detalhes, consulte [Noções básicas sobre gerenciamento de função](~/add/includes/ajax-current-ext-md.md) e [visão geral de propriedades de perfil ASP.NET](~/add/includes/ajax-current-ext-md.md).       A classe de associação depende de provedores de associação para se comunicar com uma fonte de dados. O .NET Framework inclui um <xref:System.Web.Security.SqlMembershipProvider>, que armazena informações de usuário em um banco de dados do Microsoft SQL Server e um <xref:System.Web.Security.ActiveDirectoryMembershipProvider>, que permite que você armazene informações de usuário em um servidor do Active Directory ou aplicativo modo ADAM (Active Directory).</xref:System.Web.Security.ActiveDirectoryMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider> Você também pode implementar um provedor de associação personalizado para se comunicar com uma fonte de dados alternativo que pode ser usada pela classe de associação. Provedores de associação personalizada herdam a <xref:System.Web.Security.MembershipProvider>classe abstrata.</xref:System.Web.Security.MembershipProvider> Para obter mais informações, consulte [implementando um provedor de associação](~/add/includes/ajax-current-ext-md.md).       Por padrão, a associação ASP.NET está habilitada para todos os aplicativos ASP.NET. O provedor de associação padrão é o <xref:System.Web.Security.SqlMembershipProvider>e é especificado na configuração do computador com o nome `AspNetSqlProvider`.</xref:System.Web.Security.SqlMembershipProvider> A instância padrão do <xref:System.Web.Security.SqlMembershipProvider>está configurado para se conectar a uma instância local do Microsoft SQL Server.</xref:System.Web.Security.SqlMembershipProvider>       Você pode modificar as configurações padrão para especificar um <xref:System.Web.Security.SqlMembershipProvider>que o `AspNetSqlProvider` a instância como o provedor padrão ou especificar uma instância de um provedor personalizado como o provedor padrão para seu aplicativo ASP.NET usando o arquivo Web. config.</xref:System.Web.Security.SqlMembershipProvider> Você pode especificar a configuração de associação do ASP.NET para o aplicativo Web usando a seção de configuração no arquivo Web. config. Você pode usar o `providers` a subseção para especificar um provedor de associação que não seja um dos provedores padrão. Por exemplo, a seção a seguir remove os provedores de associação padrão da configuração do aplicativo atual e adiciona um novo provedor com um nome de `SqlProvider` que se conecta a uma instância do SQL Server denominada `AspSqlServer`.      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=AspSqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />           <add name=&quot;SqlProvider&quot;             type=&quot;System.Web.Security.SqlMembershipProvider&quot;             connectionStringName=&quot;SqlServices&quot;             enablePasswordRetrieval=&quot;false&quot;             enablePasswordReset=&quot;true&quot;             requiresQuestionAndAnswer=&quot;true&quot;             passwordFormat=&quot;Hashed&quot;             applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL using the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!NOTE]\n>  The ASP.NET login controls (<xref:System.Web.UI.WebControls.Login>, <xref:System.Web.UI.WebControls.LoginView>, <xref:System.Web.UI.WebControls.LoginStatus>, <xref:System.Web.UI.WebControls.LoginName>, and <xref:System.Web.UI.WebControls.PasswordRecovery>) encapsulate virtually all of the logic required to prompt users for credentials and validate the credentials in the membership system and can be used in place of programmatic checking using the Membership class.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.me_1.aspx)]"
  syntax:
    content: public static class Membership
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ApplicationName
  id: ApplicationName
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém ou define o nome do aplicativo."
  remarks: "ApplicationName é usado para identificar usuários específicos a um aplicativo. Ou seja, o mesmo nome de usuário pode existir no banco de dados para vários aplicativos ASP.NET que especificam um ApplicationName diferente. Isso permite que vários aplicativos usar o mesmo banco de dados para armazenar informações do usuário sem exibir conflitos de nome de usuário duplicado. Como alternativa, vários aplicativos ASP.NET podem usar o mesmo banco de dados do usuário, especificando o mesmo ApplicationName. ApplicationName pode ser definido programaticamente ou declarativamente na configuração para o aplicativo Web.      > [!CAUTION] > Como uma instância do provedor de associação padrão único é usada para todas as solicitações atendidas por um <xref:System.Web.HttpApplication>do objeto, você pode ter várias solicitações de execução simultaneamente e a tentativa de definir o valor da propriedade ApplicationName.</xref:System.Web.HttpApplication> A propriedade ApplicationName não é thread-safe para várias gravações e alterar o valor da propriedade ApplicationName pode resultar em comportamento inesperado para vários usuários de um aplicativo. É recomendável que você evite escrever código que permite aos usuários definir a propriedade ApplicationName, a menos que você precisa. Um exemplo de um aplicativo em que pode ser necessário definir a propriedade ApplicationName é um aplicativo administrativo que gerencia os dados de associação para vários aplicativos. Esse aplicativo deve ser um aplicativo de usuário único e não é um aplicativo Web."
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use a <xref:System.Web.Security.SqlMembershipProvider> instance and sets the ApplicationName to `MyApplication`.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static string ApplicationName { get; set; }
    return:
      type: System.String
      description: "O nome do aplicativo."
  overload: System.Web.Security.Membership.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  id: CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Adiciona um novo usuário para o armazenamento de dados."
  remarks: "CreateUser adiciona um novo usuário para o armazenamento de dados e retorna um <xref:System.Web.Security.MembershipUser>objeto para o usuário recém-criado.</xref:System.Web.Security.MembershipUser> Se a criação de usuário falhar, um <xref:System.Web.Security.MembershipCreateUserException>é gerada.</xref:System.Web.Security.MembershipCreateUserException> Você pode recuperar um <xref:System.Web.Security.MembershipCreateStatus>valor o <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>propriedade do <xref:System.Web.Security.MembershipCreateUserException>que indica por que falha na criação do usuário.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       Depois que um usuário associado foi criado e se você tem uma referência a um <xref:System.Web.Security.MembershipUser>do objeto para o usuário, você pode modificar as configurações para o usuário com o <xref:System.Web.Security.MembershipUser>métodos públicos, como <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>para aplicativos onde <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>é `true`, ou definindo os valores de propriedade o <xref:System.Web.Security.MembershipUser>objeto e transmiti-los para o <xref:System.Web.Security.Membership.UpdateUser%2A>método.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Se um usuário já existe na fonte de dados para o aplicativo, você pode obter um <xref:System.Web.Security.MembershipUser>objeto para o usuário existente com o <xref:System.Web.Security.Membership.GetUser%2A>método.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       O <xref:System.Web.Security.SqlMembershipProvider>fornece uma opção para exigir um endereço de email exclusivo para cada usuário.</xref:System.Web.Security.SqlMembershipProvider> Se o <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A>é de propriedade `true`, você precisará usar uma das sobrecargas CreateUser que permite que você especifique um endereço de email para o usuário que está sendo criado.</xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> Caso contrário, um <xref:System.Web.Security.MembershipCreateUserException>será lançada.</xref:System.Web.Security.MembershipCreateUserException>       Espaços iniciais e finais são cortados de todos os valores de parâmetro."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.Membership#2](~/add/codesnippet/csharp/m-system.web.security.me_0_1.aspx)]\n [!code-vb[System.Web.Security.Membership#2](~/add/codesnippet/visualbasic/m-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "O nome de usuário para o novo usuário."
    - id: password
      type: System.String
      description: "A senha para o novo usuário."
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto para o usuário recém-criado.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "O usuário não foi criado. Verifique o <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>propriedade para um <xref:System.Web.Security.MembershipCreateStatus>valor.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  id: CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Adiciona um novo usuário com um endereço de email especificado para o armazenamento de dados."
  remarks: "<xref:System.Web.Security.Membership.CreateUser%2A>Adiciona um novo usuário para o armazenamento de dados e retorna um <xref:System.Web.Security.MembershipUser>objeto para o usuário recém-criado.</xref:System.Web.Security.MembershipUser></xref:System.Web.Security.Membership.CreateUser%2A> Se a criação de usuário falhar, um <xref:System.Web.Security.MembershipCreateUserException>é gerada.</xref:System.Web.Security.MembershipCreateUserException> Você pode recuperar um <xref:System.Web.Security.MembershipCreateStatus>valor o <xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A>propriedade do <xref:System.Web.Security.MembershipCreateUserException>que indica por que falha na criação do usuário.</xref:System.Web.Security.MembershipCreateUserException> </xref:System.Web.Security.MembershipCreateUserException.StatusCode%2A> </xref:System.Web.Security.MembershipCreateStatus>       Depois que um usuário associado foi criado e se você tem uma referência a um <xref:System.Web.Security.MembershipUser>do objeto para o usuário, você pode modificar as configurações para o usuário com o <xref:System.Web.Security.MembershipUser>métodos públicos, como <xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A>para aplicativos onde <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>é `true`, ou definindo os valores de propriedade o <xref:System.Web.Security.MembershipUser>objeto e transmiti-los para o <xref:System.Web.Security.Membership.UpdateUser%2A>método.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser.ChangePasswordQuestionAndAnswer%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Se um usuário já existe na fonte de dados para o aplicativo, você pode obter um <xref:System.Web.Security.MembershipUser>objeto para o usuário existente com o <xref:System.Web.Security.Membership.GetUser%2A>método.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Espaços iniciais e finais são cortados de todos os valores de parâmetro."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#1](~/add/codesnippet/visualbasic/8cf35595-ec0c-4c08-b671-_1.aspx)]\n [!code-cs[System.Web.Security.Membership#1](~/add/codesnippet/csharp/8cf35595-ec0c-4c08-b671-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email);
    parameters:
    - id: username
      type: System.String
      description: "O nome de usuário para o novo usuário."
    - id: password
      type: System.String
      description: "A senha para o novo usuário."
    - id: email
      type: System.String
      description: "O endereço de email para o novo usuário."
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto para o usuário recém-criado.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.CreateUser*
  exceptions:
  - type: System.Web.Security.MembershipCreateUserException
    commentId: T:System.Web.Security.MembershipCreateUserException
    description: "O usuário não foi criado. Verifique o <xref:System.Web.Security.MembershipCreateUserException.StatusCode*>propriedade para um <xref:System.Web.Security.MembershipCreateStatus>valor.</xref:System.Web.Security.MembershipCreateStatus> </xref:System.Web.Security.MembershipCreateUserException.StatusCode*>"
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Adiciona um novo usuário com valores de propriedade especificado para o repositório de dados e retorna um parâmetro de status indicando que o usuário foi criado com êxito ou falha do motivo pelo qual a criação de usuário."
  remarks: "CreateUser adiciona um novo usuário para o armazenamento de dados e retorna um <xref:System.Web.Security.MembershipUser>objeto para o usuário recém-criado.</xref:System.Web.Security.MembershipUser> Se a criação de usuário falhar, você pode recuperar um <xref:System.Web.Security.MembershipCreateStatus>valor o `status` parâmetro de saída que indica por que falha na criação do usuário.</xref:System.Web.Security.MembershipCreateStatus>       O método CreateUser retornará `null` se `password` é uma cadeia de caracteres vazia ou `null`, `username` é uma cadeia de caracteres vazia ou `null` ou contiver uma vírgula (,), `passwordQuestion` não é `null` e é uma cadeia de caracteres vazia ou `passwordAnswer` não é `null` e contém uma cadeia de caracteres vazia.       Depois que um usuário associado foi criado e se você tem uma referência a um <xref:System.Web.Security.MembershipUser>do objeto para o usuário, você pode modificar as configurações para o usuário com o <xref:System.Web.Security.MembershipUser>métodos públicos e definindo valores de propriedade do <xref:System.Web.Security.MembershipUser>objeto e, em seguida, passando o <xref:System.Web.Security.MembershipUser>do objeto para o <xref:System.Web.Security.Membership.UpdateUser%2A>método.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Se um usuário já existe na fonte de dados para o aplicativo, você pode obter um <xref:System.Web.Security.MembershipUser>objeto para o usuário existente com o <xref:System.Web.Security.Membership.GetUser%2A>método.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Espaços iniciais e finais são cortados de todos os valores de parâmetro de cadeia de caracteres."
  example:
  - "The following code example creates a new user for an ASP.NET application configured to use forms authentication and ASP.NET membership. If the user is not created successfully, a message is displayed to the user. Otherwise, the user is redirected to the login page for the application.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/baa4c01c-297e-4ec6-a9d9-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/baa4c01c-297e-4ec6-a9d9-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "O nome de usuário para o novo usuário."
    - id: password
      type: System.String
      description: "A senha para o novo usuário."
    - id: email
      type: System.String
      description: "O endereço de email para o novo usuário."
    - id: passwordQuestion
      type: System.String
      description: "O valor da pergunta da senha do usuário da associação."
    - id: passwordAnswer
      type: System.String
      description: "O valor de resposta de senha do usuário da associação."
    - id: isApproved
      type: System.Boolean
      description: "Um booliano que indica se o novo usuário é aprovado para fazer logon."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "Um <xref:System.Web.Security.MembershipCreateStatus>indicando que o usuário foi criado com êxito ou o motivo pelo qual a falha na criação.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto para o usuário recém-criado.</xref:System.Web.Security.MembershipUser> Se nenhum usuário foi criado, este método retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  id: CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Adiciona um novo usuário com valores de propriedade especificado e um identificador exclusivo para o armazenamento de dados e retorna um parâmetro de status indicando que o usuário foi criado com êxito ou falha do motivo pelo qual a criação de usuário."
  remarks: "CreateUser adiciona um novo usuário para o armazenamento de dados e retorna um <xref:System.Web.Security.MembershipUser>objeto para o usuário recém-criado.</xref:System.Web.Security.MembershipUser> Se a criação de usuário falhar, você pode recuperar um <xref:System.Web.Security.MembershipCreateStatus>valor o `status` parâmetro de saída que indica por que falha na criação do usuário.</xref:System.Web.Security.MembershipCreateStatus> Você pode especificar um identificador exclusivo para o usuário, como um valor de chave primária para um banco de dados usando o `providerUserKey` parâmetro.       O método CreateUser retornará `null` se `password` é uma cadeia de caracteres vazia ou `null`, `username` é uma cadeia de caracteres vazia ou `null` ou contiver uma vírgula (,), `passwordQuestion` não é `null` e contém uma cadeia de caracteres vazia ou `passwordAnswer` não é `null` e contém uma cadeia de caracteres vazia.       Depois que um usuário associado foi criado e se você tem uma referência a um <xref:System.Web.Security.MembershipUser>do objeto para o usuário, você pode modificar as configurações para o usuário com o <xref:System.Web.Security.MembershipUser>métodos públicos e definindo valores de propriedade do <xref:System.Web.Security.MembershipUser>objeto e, em seguida, passando o <xref:System.Web.Security.MembershipUser>do objeto para o <xref:System.Web.Security.Membership.UpdateUser%2A>método.</xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>       Se um usuário já existe na fonte de dados para o aplicativo, você pode obter um <xref:System.Web.Security.MembershipUser>objeto para o usuário existente com o <xref:System.Web.Security.Membership.GetUser%2A>método.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser>       Espaços iniciais e finais são cortados de todos os valores de parâmetro de cadeia de caracteres."
  syntax:
    content: public static System.Web.Security.MembershipUser CreateUser (string username, string password, string email, string passwordQuestion, string passwordAnswer, bool isApproved, object providerUserKey, out System.Web.Security.MembershipCreateStatus status);
    parameters:
    - id: username
      type: System.String
      description: "O nome de usuário para o novo usuário."
    - id: password
      type: System.String
      description: "A senha para o novo usuário."
    - id: email
      type: System.String
      description: "O endereço de email para o novo usuário."
    - id: passwordQuestion
      type: System.String
      description: "O valor da pergunta da senha do usuário da associação."
    - id: passwordAnswer
      type: System.String
      description: "O valor de resposta de senha do usuário da associação."
    - id: isApproved
      type: System.Boolean
      description: "Um booliano que indica se o novo usuário é aprovado para fazer logon."
    - id: providerUserKey
      type: System.Object
      description: "O identificador de usuário para o usuário que deve ser armazenado no repositório de dados de associação."
    - id: status
      type: System.Web.Security.MembershipCreateStatus
      description: "Um <xref:System.Web.Security.MembershipCreateStatus>indicando que o usuário foi criado com êxito ou falha na criação do motivo.</xref:System.Web.Security.MembershipCreateStatus>"
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto para o usuário recém-criado.</xref:System.Web.Security.MembershipUser> Se nenhum usuário foi criado, este método retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.CreateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  id: DeleteUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Exclui um usuário e todos os dados relacionados de usuário do banco de dados."
  remarks: "Dados de usuário armazenados no banco de dados para o <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, ou <xref:System.Web.UI.WebControls.WebParts.WebPart>Personalização também é excluída quando você estiver usando o <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, e <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>objetos para armazenamento de dados.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-vb[System.Web.Security.Membership#8](~/add/codesnippet/visualbasic/m-system.web.security.me_11_1.aspx)]\n [!code-cs[System.Web.Security.Membership#8](~/add/codesnippet/csharp/m-system.web.security.me_11_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "O nome do usuário para excluir."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o usuário foi excluído; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>é uma cadeia de caracteres vazia ou contém uma vírgula (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>é<xref uid=&quot;langword_csharp_null.&quot; name=&quot;null.&quot; href=&quot;&quot;></xref>"
  platform:
  - net462
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  id: DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Exclui um usuário do banco de dados."
  remarks: "Usuários excluídos do banco de dados só são excluídos do configurado `applicationName`.       Se `deleteAllRelatedData` é `true`, dados de usuário armazenados no banco de dados para o <xref:System.Web.Security.Roles>, <xref:System.Web.HttpContext.Profile%2A>, ou <xref:System.Web.UI.WebControls.WebParts.WebPart>Personalização também é excluída quando você estiver usando o <xref:System.Web.Security.SqlRoleProvider>, <xref:System.Web.Profile.SqlProfileProvider>, e <xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider>objetos para armazenamento de dados.</xref:System.Web.UI.WebControls.WebParts.SqlPersonalizationProvider> </xref:System.Web.Profile.SqlProfileProvider> </xref:System.Web.Security.SqlRoleProvider> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Security.Roles>"
  example:
  - "The following code example deletes the currently logged-on user and all related data.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/csharp/m-system.web.security.me_12_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#6](~/add/codesnippet/visualbasic/m-system.web.security.me_12_1.aspx)]"
  syntax:
    content: public static bool DeleteUser (string username, bool deleteAllRelatedData);
    parameters:
    - id: username
      type: System.String
      description: "O nome do usuário para excluir."
    - id: deleteAllRelatedData
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para excluir dados relacionados ao usuário do banco de dados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para deixar os dados relacionados ao usuário no banco de dados."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o usuário foi excluído; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.DeleteUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>é uma cadeia de caracteres vazia ou contém uma vírgula (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordReset
  id: EnablePasswordReset
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o provedor de associação atual está configurado para permitir que os usuários redefinam suas senhas."
  remarks: "Senha é a capacidade de associação do ASP.NET substituir a senha atual de senha para um nome de usuário com uma nova gerada aleatoriamente quando um usuário tiver esquecido sua senha ou a senha atual não é mais válida. Isso é especialmente útil quando o formato da senha é definido como <xref:System.Web.Security.MembershipPasswordFormat>, conforme os usuários não podem recuperar valores de hash de senha.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordReset is `true`, then resets a user's password and returns the new, automatically generated password.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/csharp/p-system.web.security.me_2_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#8](~/add/codesnippet/visualbasic/p-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordReset { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o provedor de associação oferece suporte à redefinição de senha; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordReset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  id: EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o provedor de associação atual está configurado para permitir que os usuários recuperem suas senhas."
  remarks: "Se o EnablePasswordRetrieval é `false`, o provedor de associação subjacente pode gerar <xref:System.Web.HttpException>.</xref:System.Web.HttpException>       Os provedores que são incluídos com o .NET Framework oferecem suporte a vários formatos de senha para aumentar a segurança de senha. Se o formato da senha for definido como <xref:System.Web.Security.MembershipPasswordFormat>, em seguida, os usuários não poderão recuperar sua senha existente do banco de dados.</xref:System.Web.Security.MembershipPasswordFormat> O <xref:System.Web.Security.MembershipPasswordFormat>formato de senha fornece codificação unidirecional de valores de senha.</xref:System.Web.Security.MembershipPasswordFormat> As senhas são &quot;hash&quot; e comparadas aos valores armazenados no banco de dados para autenticação. &quot;Hash&quot; valores não podem ser decodificados para recuperar o valor da senha original. Para obter mais informações, consulte <xref:System.Web.Security.MembershipPasswordFormat>.</xref:System.Web.Security.MembershipPasswordFormat>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and enables password retrieval.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"false\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code example first verifies that EnablePasswordRetrieval is `true`, then retrieves the password for a specified user name and sends it to the e-mail address for the specified user.  \n  \n> [!IMPORTANT]\n>  Returning a password in clear text using e-mail is not recommended for sites that require a high level of security. For high-security sites, we recommend that you return passwords using encryption, such as SSL.  \n>   \n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/p-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/p-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static bool EnablePasswordRetrieval { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o provedor de associação oferece suporte à recuperação de senha; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.EnablePasswordRetrieval*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  id: FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de usuários da associação onde o endereço de email contém o endereço de email especificado para corresponder."
  remarks: "FindUsersByEmail retorna uma lista de usuários da associação em que o endereço de email corresponde fornecido `emailToMatch` configurado `applicationName`.       O <xref:System.Web.Security.SqlMembershipProvider>executa a pesquisa usando uma cláusula LIKE em relação a `emailToMatch` parâmetro.</xref:System.Web.Security.SqlMembershipProvider> Todos os curingas são suportados pelo SQL Server em que as cláusulas podem ser usadas no `emailToMatch` o valor do parâmetro."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#9](~/add/codesnippet/visualbasic/m-system.web.security.me_10_1.aspx)]\n [!code-cs[System.Web.Security.Membership#9](~/add/codesnippet/csharp/m-system.web.security.me_10_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "O endereço de email a ser pesquisado."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Um <xref:System.Web.Security.MembershipUserCollection>que contém todos os usuários que correspondem a <code> emailToMatch </code> parâmetro.</xref:System.Web.Security.MembershipUserCollection>       Espaços iniciais e finais são cortados do <code> emailToMatch </code> o valor do parâmetro."
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de usuários de associação em uma página de dados, em que o endereço de email contém o endereço de email especificado para corresponder."
  remarks: "FindUsersByEmail retorna uma lista de usuários da associação em que o endereço de email corresponde fornecido `emailToMatch` configurado `applicationName`.       O <xref:System.Web.Security.SqlMembershipProvider>executa a pesquisa usando uma cláusula LIKE em relação a `emailToMatch` parâmetro.</xref:System.Web.Security.SqlMembershipProvider> Todos os curingas são suportados pelo SQL Server em que as cláusulas podem ser usadas no `emailToMatch` o valor do parâmetro.       Os resultados retornados por FindUsersByEmail são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Security.MembershipUser>objetos a serem retornadas em <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> O `pageIndex` parâmetro identifica qual página de resultados a serem retornados, onde 0 identifica a primeira página. O `totalRecords` parâmetro é um `out` parâmetro que é definido como o número total de usuários associados que corresponderam a `emailToMatch` valor. Por exemplo, se forem encontrados 13 usuários onde `emailToMatch` corresponde a parte ou o endereço de e-mail inteiro e o `pageIndex` valor era 1 com um `pageSize` de 5, o <xref:System.Web.Security.MembershipUserCollection>retornado conteria o sexto ao décimo usuário retornado.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`deve ser definido como 13.       Espaços iniciais e finais são cortados do `emailToMatch` o valor do parâmetro."
  example:
  - "The following code example uses the FindUsersByEmail method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/csharp/1954016c-87a4-4acf-9d54-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#13](~/add/codesnippet/visualbasic/1954016c-87a4-4acf-9d54-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByEmail (string emailToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "O endereço de email a ser pesquisado."
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados a serem retornados. `pageIndex`é baseado em zero."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados a serem retornados."
    - id: totalRecords
      type: System.Int32
      description: "O número total de usuários correspondentes."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Um <xref:System.Web.Security.MembershipUserCollection>que contém uma página de <code> pageSize </code> <xref:System.Web.Security.MembershipUser>objetos começando na página especificada por <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.FindUsersByEmail*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>é menor que zero.       - ou - <code>pageSize</code> é menor que 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  id: FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de usuários da associação onde o nome de usuário contém o nome de usuário especificado para corresponder."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Retorna uma lista de usuários de associação onde o nome de usuário corresponde fornecido `usernameToMatch` configurado `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       O <xref:System.Web.Security.SqlMembershipProvider>executa a pesquisa usando uma cláusula LIKE em relação a `usernameToMatch` parâmetro.</xref:System.Web.Security.SqlMembershipProvider> Todos os curingas são suportados pelo SQL Server em que as cláusulas podem ser usadas no `usernameToMatch` o valor do parâmetro.       Espaços iniciais e finais são cortados de todos os valores de parâmetro."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#10](~/add/codesnippet/visualbasic/m-system.web.security.me_6_1.aspx)]\n [!code-cs[System.Web.Security.Membership#10](~/add/codesnippet/csharp/m-system.web.security.me_6_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "O nome de usuário a ser pesquisado."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Um <xref:System.Web.Security.MembershipUserCollection>que contém todos os usuários que correspondem a <code> usernameToMatch </code> parâmetro.</xref:System.Web.Security.MembershipUserCollection>       Espaços iniciais e finais são cortados do <code> usernameToMatch </code> o valor do parâmetro."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  id: FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de usuários de associação em uma página de dados, onde o nome de usuário contém o nome de usuário especificado para corresponder."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>Retorna uma lista de usuários de associação onde o nome de usuário corresponde fornecido `usernameToMatch` configurado `applicationName`.</xref:System.Web.Security.SqlMembershipProvider.FindUsersByName%2A>       O <xref:System.Web.Security.SqlMembershipProvider>executa a pesquisa usando uma cláusula LIKE em relação a `usernameToMatch` parâmetro.</xref:System.Web.Security.SqlMembershipProvider> Todos os curingas são suportados pelo SQL Server em que as cláusulas podem ser usadas no `usernameToMatch` o valor do parâmetro.       Os resultados retornados por FindUsersByName são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Security.MembershipUser>objetos a serem retornadas em <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> O `pageIndex` parâmetro identifica qual página de resultados a serem retornados, onde 0 identifica a primeira página. O `totalRecords` parâmetro é um `out` parâmetro que é definido como o número total de usuários associados que corresponderam a `usernameToMatch` valor. Por exemplo, se forem encontrados 13 usuários onde `usernameToMatch` corresponde a parte ou o nome de usuário inteiro e o `pageIndex` valor era 1 com um `pageSize` de 5, o <xref:System.Web.Security.MembershipUserCollection>retornado conteria o sexto ao décimo usuário retornado.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`deve ser definido como 13."
  example:
  - "The following code example uses the FindUsersByName method to retrieve membership user information from the membership database based on user input and displays the results in pages of data.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/csharp/4f01d951-55a8-446c-be57-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#12](~/add/codesnippet/visualbasic/4f01d951-55a8-446c-be57-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection FindUsersByName (string usernameToMatch, int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: usernameToMatch
      type: System.String
      description: "O nome de usuário a ser pesquisado."
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados a serem retornados. `pageIndex`é baseado em zero."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados a serem retornados."
    - id: totalRecords
      type: System.Int32
      description: "O número total de usuários correspondentes."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Um <xref:System.Web.Security.MembershipUserCollection>que contém uma página de <code> pageSize </code> <xref:System.Web.Security.MembershipUser>objetos começando na página especificada por <code> pageIndex </code>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>       Espaços iniciais e finais são cortados do <code> usernameToMatch </code> o valor do parâmetro."
  overload: System.Web.Security.Membership.FindUsersByName*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>usernameToMatch</code>é uma cadeia de caracteres vazia.       - ou - <code>pageIndex</code> é menor que zero.       - ou - <code>pageSize</code> é menor que 1."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>usernameToMatch</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  id: GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Gera uma senha aleatória com o comprimento especificado."
  remarks: "O método GeneratePassword é usado para gerar uma senha aleatória e é mais comumente usado pelo <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>método implementado por um provedor de associação para redefinir a senha para um usuário com uma nova senha temporária.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A>       A senha gerada contém apenas caracteres alfanuméricos e as seguintes marcas de pontuação: `!@#$%^&*()_-+=[{]};:<>|./?`. Nenhum caractere de controle oculto ou não imprimíveis é incluído na senha gerada.      > [!NOTE] > A senha aleatória criada pelo método GeneratePassword não é garantida para passar a expressão regular a <xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A>propriedade.</xref:System.Web.Security.Membership.PasswordStrengthRegularExpression%2A> No entanto, a senha aleatória atenderá aos critérios estabelecidos pelo <xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>propriedade e o `numberOfNonAlphanumericCharacters` parâmetro.</xref:System.Web.Security.Membership.MinRequiredPasswordLength%2A>"
  example:
  - "The following code example creates a new membership user and uses the GeneratePassword method to initialize the password for the new user to a random value, which is displayed to the user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.Membership#5](~/add/codesnippet/visualbasic/m-system.web.security.me_1_1.aspx)]\n [!code-cs[System.Web.Security.Membership#5](~/add/codesnippet/csharp/m-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static string GeneratePassword (int length, int numberOfNonAlphanumericCharacters);
    parameters:
    - id: length
      type: System.Int32
      description: "O número de caracteres na senha gerada. O comprimento deve estar entre 1 e 128 caracteres."
    - id: numberOfNonAlphanumericCharacters
      type: System.Int32
      description: 'O número mínimo de caracteres não alfanuméricos (por exemplo, @, #,!, %, &amp;e assim por diante) na senha gerada.'
    return:
      type: System.String
      description: "Uma senha aleatória do comprimento especificado."
  overload: System.Web.Security.Membership.GeneratePassword*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>length</code>é menor que 1 ou maior que 128 - ou - <code>numberOfNonAlphanumericCharacters</code> é menor que 0 ou maior que <code>length</code>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers
  id: GetAllUsers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de todos os usuários no banco de dados."
  remarks: "GetAllUsers retorna as informações para todos os usuários de associação para um aplicativo como uma coleção de <xref:System.Web.Security.MembershipUser>objetos.</xref:System.Web.Security.MembershipUser> Tenha cuidado ao usar o método GetAllUsers com bancos de dados de usuário muito grandes, como resultante <xref:System.Web.Security.MembershipUserCollection>no ASP.NET página pode degradar o desempenho do seu aplicativo.</xref:System.Web.Security.MembershipUserCollection>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_4_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_4_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Um <xref:System.Web.Security.MembershipUserCollection>de <xref:System.Web.Security.MembershipUser>objetos que representam todos os usuários no banco de dados.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  id: GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de todos os usuários no banco de dados em páginas de dados."
  remarks: "Os resultados retornados por GetAllUsers são restritas pelo `pageIndex` e `pageSize` parâmetros. O `pageSize` parâmetro identifica o número máximo de <xref:System.Web.Security.MembershipUser>objetos a serem retornadas em <xref:System.Web.Security.MembershipUserCollection>.</xref:System.Web.Security.MembershipUserCollection> </xref:System.Web.Security.MembershipUser> O `pageIndex` parâmetro identifica qual página de resultados a serem retornados, onde 0 identifica a primeira página. O `totalRecords` parâmetro é um `out` parâmetro que é definido como o número total de usuários de associação configurado `applicationName`. Por exemplo, se houver 13 usuários configurado `applicationName`e o `pageIndex` valor era 1 com um `pageSize` de 5, o <xref:System.Web.Security.MembershipUserCollection>retornado conteria o sexto ao décimo usuário retornado.</xref:System.Web.Security.MembershipUserCollection> `totalRecords`deve ser definido como 13."
  example:
  - "The following code example returns a list of users in pages of data with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/e84b0b6e-963c-4328-843a-_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/e84b0b6e-963c-4328-843a-_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUserCollection GetAllUsers (int pageIndex, int pageSize, out int totalRecords);
    parameters:
    - id: pageIndex
      type: System.Int32
      description: "O índice da página de resultados a serem retornados. Use 0 para indicar a primeira página."
    - id: pageSize
      type: System.Int32
      description: "O tamanho da página de resultados a serem retornados. `pageIndex`é baseado em zero."
    - id: totalRecords
      type: System.Int32
      description: "O número total de usuários."
    return:
      type: System.Web.Security.MembershipUserCollection
      description: "Um <xref:System.Web.Security.MembershipUserCollection>de <xref:System.Web.Security.MembershipUser>objetos que representam todos os usuários no banco de dados configurado <xref uid=&quot;langword_csharp_applicationName&quot; name=&quot;applicationName&quot; href=&quot;&quot;> </xref>.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUserCollection>"
  overload: System.Web.Security.Membership.GetAllUsers*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>pageIndex</code>é menor que zero.       - ou - <code>pageSize</code> é menor que 1."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  id: GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o número de usuários acessando um aplicativo."
  remarks: "<xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A>Retorna o número de usuários para o atual <xref:System.Web.Security.Membership.ApplicationName%2A>em que a data da última atividade é maior que a hora atual menos <xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A>.</xref:System.Web.Security.Membership.UserIsOnlineTimeWindow%2A> </xref:System.Web.Security.Membership.ApplicationName%2A></xref:System.Web.Security.SqlMembershipProvider.GetNumberOfUsersOnline%2A> A atividade mais recente carimbo de data/hora é atualizado para a data atual e a hora quando as credenciais do usuário são validadas por meio da <xref:System.Web.Security.Membership.ValidateUser%2A>ou <xref:System.Web.Security.Membership.UpdateUser%2A>método ou quando uma chamada para um <xref:System.Web.Security.Membership.GetUser%2A>sobrecarga que utiliza sem parâmetros ou um que usa o `userIsOnline` parâmetro para especificar que o carimbo de data/hora deve ser atualizado.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.UpdateUser%2A> </xref:System.Web.Security.Membership.ValidateUser%2A>"
  example:
  - "The following code example returns a list of users with a count of the number of users currently online.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/visualbasic/m-system.web.security.me_2_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#5](~/add/codesnippet/csharp/m-system.web.security.me_2_1.aspx)]"
  syntax:
    content: public static int GetNumberOfUsersOnline ();
    parameters: []
    return:
      type: System.Int32
      description: "O número de usuários acessando um aplicativo."
  overload: System.Web.Security.Membership.GetNumberOfUsersOnline*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser
  id: GetUser
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da fonte de dados e atualiza a atividade mais recente carimbo de data/hora para o usuário de associação de logon atual."
  remarks: "GetUser recupera as informações de usuário da fonte de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados retornados.</xref:System.Web.Security.MembershipUser> Se você usar uma das sobrecargas GetUser que não têm um `username` , GetUser retornará as informações do usuário da associação do logon atual. O usuário da associação de logon atual é identificado pela <xref:System.Security.Principal.IIdentity.Name%2A>do usuário atual <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Você também pode especificar se deseja GetUser para atualizar a atividade mais recente carimbo de data/hora para o usuário que está sendo recuperado usando o `userIsOnline` parâmetro. Do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não têm um `userIsOnline` parâmetro `GetUser()` implicitamente o carimbo de data/hora de atividade mais recente de atualizações para o usuário.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`e `GetUser(System.Object)` não."
  example:
  - "The following code example updates the last-activity date/time stamp for the current logged-on membership user and displays the user name in the ASP.NET page.  \n  \n [!code-cs[System.Web.Security.Membership#3](~/add/codesnippet/csharp/m-system.web.security.me_14_1.aspx)]\n [!code-vb[System.Web.Security.Membership#3](~/add/codesnippet/visualbasic/m-system.web.security.me_14_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser ();
    parameters: []
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto representando o usuário de logon atual.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nenhum usuário de associação está atualmente conectado."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  id: GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da fonte de dados do usuário da associação do logon atual. Carimbo de data/hora de atividade mais recente de atualizações para o usuário atual do logon associado, se especificado."
  remarks: "O método GetUser recupera as informações de usuário da fonte de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados retornados.</xref:System.Web.Security.MembershipUser> Se você usar uma da <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não têm um `username` parâmetro <xref:System.Web.Security.Membership.GetUser%2A>retorna as informações do usuário da associação do logon atual.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> O usuário da associação de logon atual é identificado pela <xref:System.Security.Principal.IIdentity.Name%2A>do usuário atual <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Você também pode especificar se deseja <xref:System.Web.Security.Membership.GetUser%2A>para atualizar a atividade mais recente carimbo de data/hora para o usuário que está sendo recuperado usando o `userIsOnline` parâmetro.</xref:System.Web.Security.Membership.GetUser%2A> Do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não têm um `userIsOnline` parâmetro `GetUser()` implicitamente o carimbo de data/hora de atividade mais recente de atualizações para o usuário.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`e `GetUser(System.Object)` não."
  example:
  - "The following code example displays the user name for the current logged-on membership user in the ASP.NET page without updating the last-activity date/time stamp for the user.  \n  \n [!code-cs[System.Web.Security.Membership#4](~/add/codesnippet/csharp/m-system.web.security.me_9_1.aspx)]\n [!code-vb[System.Web.Security.Membership#4](~/add/codesnippet/visualbasic/m-system.web.security.me_9_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (bool userIsOnline);
    parameters:
    - id: userIsOnline
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, carimbo de data/hora de atividade mais recente de atualizações para o usuário especificado."
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto representando o usuário de logon atual.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Nenhum usuário de associação está atualmente conectado."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object)
  id: GetUser(System.Object)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da fonte de dados do usuário da associação associado com o identificador exclusivo especificado."
  remarks: "O método GetUser recupera as informações de usuário da fonte de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados retornados.</xref:System.Web.Security.MembershipUser> O usuário é identificado usando o identificador exclusivo da fonte de dados especificado usando o `providerUserKey` parâmetro.       Você também pode especificar se deseja <xref:System.Web.Security.Membership.GetUser%2A>para atualizar a atividade mais recente carimbo de data/hora para o usuário que está sendo recuperado com o `userIsOnline` parâmetro.</xref:System.Web.Security.Membership.GetUser%2A> Do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não têm um `userIsOnline` parâmetro `GetUser()` implicitamente o carimbo de data/hora de atividade mais recente de atualizações para o usuário.</xref:System.Web.Security.Membership.GetUser%2A> `GetUser(System.String)`e `GetUser(System.Object)` não"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "O identificador exclusivo do usuário da fonte de dados de associação para o usuário."
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto representando o usuário associado com o identificador exclusivo especificado.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String)
  id: GetUser(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da fonte de dados para o usuário associado especificado."
  remarks: "O método GetUser recupera as informações de usuário da fonte de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados retornados.</xref:System.Web.Security.MembershipUser> Se você usar uma da <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não têm um `username` parâmetro <xref:System.Web.Security.Membership.GetUser%2A>retorna as informações do usuário da associação do logon atual.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> O usuário da associação de logon atual é identificado pela <xref:System.Security.Principal.IIdentity.Name%2A>do usuário atual <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Você também pode especificar se deseja <xref:System.Web.Security.Membership.GetUser%2A>para atualizar a atividade mais recente carimbo de data/hora para o usuário que está sendo recuperado com o `userIsOnline` parâmetro.</xref:System.Web.Security.Membership.GetUser%2A> Do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não têm um `userIsOnline` parâmetro <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>implicitamente o carimbo de data/hora de atividade mais recente de atualizações para o usuário.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> GetUser e <xref:System.Web.Security.Membership.GetUser%2A>não.</xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example uses the GetUser method to return a <xref:System.Web.Security.MembershipUser> object for the current logged-on user and updates the e-mail address for the user.  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username);
    parameters:
    - id: username
      type: System.String
      description: "O nome do usuário para recuperar."
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto representando o usuário especificado.</xref:System.Web.Security.MembershipUser> Se o <code> username </code> parâmetro não corresponde a um usuário existente, este método retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>contém uma vírgula (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  id: GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da fonte de dados do usuário da associação associado com o identificador exclusivo especificado. Carimbo de data/hora de atividade mais recente de atualizações para o usuário, se especificado."
  remarks: "O método GetUser recupera as informações de usuário da fonte de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados retornados.</xref:System.Web.Security.MembershipUser> O usuário é identificado com o identificador exclusivo da fonte de dados especificado no `providerUserKey` parâmetro."
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (object providerUserKey, bool userIsOnline);
    parameters:
    - id: providerUserKey
      type: System.Object
      description: "O identificador exclusivo do usuário da fonte de dados de associação para o usuário."
    - id: userIsOnline
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, carimbo de data/hora de atividade mais recente de atualizações para o usuário especificado."
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto representando o usuário associado com o identificador exclusivo especificado.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>providerUserKey</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  id: GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém as informações da fonte de dados para o usuário associado especificado. Carimbo de data/hora de atividade mais recente de atualizações para o usuário, se especificado."
  remarks: "O método GetUser recupera as informações de usuário da fonte de dados e cria um <xref:System.Web.Security.MembershipUser>objeto preenchido com os dados retornados.</xref:System.Web.Security.MembershipUser>       Se você usar uma da <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não têm um `username` parâmetro <xref:System.Web.Security.Membership.GetUser%2A>retorna as informações do usuário da associação do logon atual.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.Membership.GetUser%2A> O usuário da associação de logon atual é identificado pela <xref:System.Security.Principal.IIdentity.Name%2A>do usuário atual <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Security.Principal.IIdentity.Name%2A>       Você também pode especificar se deseja <xref:System.Web.Security.Membership.GetUser%2A>para atualizar a atividade mais recente carimbo de data/hora para o usuário que está sendo recuperado com o `userIsOnline` parâmetro.</xref:System.Web.Security.Membership.GetUser%2A> Do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas que não têm um `userIsOnline` parâmetro <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>implicitamente o carimbo de data/hora de atividade mais recente de atualizações para o usuário.</xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName> </xref:System.Web.Security.Membership.GetUser%2A> <xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>e <xref:System.Web.Security.Membership.GetUser%2A>não.</xref:System.Web.Security.Membership.GetUser%2A></xref:System.Web.Security.Membership.GetUser%2A?displayProperty=fullName>"
  example:
  - "The following code example retrieves the password for a specified user name and sends it to the e-mail address for the specified user. The call to <xref:System.Web.Security.Membership.GetUser%2A> specifies that the last-activity date/time stamp for the user not be updated.  \n  \n [!code-vb[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/visualbasic/m-system.web.security.me_13_1.aspx)]\n [!code-cs[System.Web.Security.SqlMembershipProvider#4](~/add/codesnippet/csharp/m-system.web.security.me_13_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipUser GetUser (string username, bool userIsOnline);
    parameters:
    - id: username
      type: System.String
      description: "O nome do usuário para recuperar."
    - id: userIsOnline
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, carimbo de data/hora de atividade mais recente de atualizações para o usuário especificado."
    return:
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto representando o usuário especificado.</xref:System.Web.Security.MembershipUser> Se o <code> username </code> parâmetro não corresponde a um usuário existente, este método retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.GetUser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>username</code>contém uma vírgula (,)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>username</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  id: GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um nome de usuário em que o endereço de email para o usuário corresponde ao endereço de email especificado."
  remarks: "GetUserNameByEmail pode ser usado para recuperar o nome de usuário para um usuário de associação no caso em que um usuário não souber o nome de usuário, mas souber seu endereço de email. Se mais de um usuário no repositório de dados tem o mesmo endereço de email, o primeiro nome de usuário encontrado será retornado.       Espaços iniciais e finais são cortados de todos os valores de parâmetro."
  example:
  - "The following code example retrieves the user name for a specified e-mail address.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/csharp/m-system.web.security.me_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#7](~/add/codesnippet/visualbasic/m-system.web.security.me_5_1.aspx)]"
  syntax:
    content: public static string GetUserNameByEmail (string emailToMatch);
    parameters:
    - id: emailToMatch
      type: System.String
      description: "O endereço de email a ser pesquisado."
    return:
      type: System.String
      description: "O nome de usuário em que o endereço de email para o usuário corresponde ao endereço de email especificado. Se nenhuma correspondência for encontrada, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é retornado."
  overload: System.Web.Security.Membership.GetUserNameByEmail*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.HashAlgorithmType
  id: HashAlgorithmType
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "O identificador do algoritmo usado para senhas de hash."
  remarks: "A propriedade HashAlgorithmType identifica o algoritmo de hash personalizado usado pela <xref:System.Web.Security.Membership>classe.</xref:System.Web.Security.Membership> Você definir a propriedade HashAlgorithmType usando o `hashAlgorithmType` atributo do elemento.       O .NET Framework permite que você configurar classes de criptografia personalizadas usando a seção de configuração do elemento. A propriedade HashAlgorithmType deve corresponder a `name` atributo do elemento em um elemento. Para obter mais informações, consulte [mapeamento de nomes de algoritmo para Classes de criptografia](~/add/includes/ajax-current-ext-md.md).       Se a propriedade HashAlgorithmType não está definida, a <xref:System.Web.Security.Membership>classe usa o algoritmo de hash definido `validation` atributo do elemento.</xref:System.Web.Security.Membership>"
  syntax:
    content: public static string HashAlgorithmType { get; }
    return:
      type: System.String
      description: "O identificador do algoritmo usado para as senhas hash, ou em branco para usar o algoritmo de hash padrão."
  overload: System.Web.Security.Membership.HashAlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  id: MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o número de senhas ou de resposta de senha inválidas permitidas antes que o usuário está bloqueado."
  remarks: "A propriedade MaxInvalidPasswordAttempts funciona em conjunto com o <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>propriedade para se proteger contra uma fonte indesejada usando repetidas tentativas de adivinhar a senha ou resposta de senha de um usuário da associação.</xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Se o número de senhas inválidas ou respostas de senha inserida para um usuário de associação é maior que ou igual ao valor da propriedade MaxInvalidPasswordAttempts dentro do número de minutos especificado pelo <xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>propriedade e, em seguida, o usuário está bloqueada para o site da Web, definindo o <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>propriedade `true` até que o usuário está desbloqueado por uma chamada para o <xref:System.Web.Security.MembershipUser.UnlockUser%2A>método.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A> </xref:System.Web.Security.Membership.PasswordAttemptWindow%2A>       Se uma senha válida ou uma resposta de senha é fornecida antes que o valor da propriedade MaxInvalidPasswordAttempts for atingido, o contador que rastreia o número de tentativas inválidas é definido como zero.       Tentativas de senha e resposta de senha inválidas é rastreadas separadamente. Por exemplo, se a propriedade MaxInvalidPasswordAttempts é definida como 5, o usuário tem para cinco tentativas de inserir uma senha correta e até cinco tentativas de inserir uma resposta de senha correta sem bloqueio.       O valor da propriedade MaxInvalidPasswordAttempts é definido na configuração do aplicativo usando o `maxInvalidPasswordAttempts` atributo do elemento de configuração.       Se o <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>é de propriedade `false`, tentativas de resposta de senha inválidas não são rastreadas.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of an application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MaxInvalidPasswordAttempts { get; }
    return:
      type: System.Int32
      description: "O número de senhas ou de resposta de senha inválidas permitidas antes que o usuário está bloqueado."
  overload: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  id: MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o número mínimo de caracteres especiais que devem estar presentes em uma senha válida."
  remarks: "A propriedade MinRequiredNonAlphanumericCharacters retorna o número mínimo de caracteres não alfanuméricos, especiais que devem ser inseridos para criar uma senha válida para o provedor de associação especificado no <xref:System.Web.Security.Membership.Provider%2A>propriedade.</xref:System.Web.Security.Membership.Provider%2A>       O valor da propriedade MinRequiredNonAlphanumericCharacters é definido na configuração do aplicativo usando o `minRequiredNonAlphanumericCharacters` atributo do elemento de configuração.       Um caractere não alfanumérico é um caractere para a qual o <xref:System.Char.IsLetterOrDigit%2A>método retornará `false`.</xref:System.Char.IsLetterOrDigit%2A>"
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredNonAlphanumericCharacters` attribute to 1 character.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredNonAlphanumericCharacters=\"1\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredNonAlphanumericCharacters { get; }
    return:
      type: System.Int32
      description: "O número mínimo de caracteres especiais que devem estar presentes em uma senha válida."
  overload: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  id: MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o comprimento mínimo necessário para uma senha."
  remarks: "A propriedade MinRequiredPasswordLength obtém o número mínimo de caracteres que deve ser inserido para criar uma senha válida para o provedor de associação especificado no <xref:System.Web.Security.Membership.Provider%2A>propriedade.</xref:System.Web.Security.Membership.Provider%2A>       O valor da propriedade MinRequiredPasswordLength é definido na configuração do aplicativo usando o `minRequiredPasswordLength` atributo do elemento de configuração."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `minRequiredPasswordLength` attribute to seven characters.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      minRequiredPasswordLength=\"7\"  \n      />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int MinRequiredPasswordLength { get; }
    return:
      type: System.Int32
      description: "O comprimento mínimo necessário para uma senha."
  overload: System.Web.Security.Membership.MinRequiredPasswordLength*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  id: PasswordAttemptWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a janela de tempo entre os quais consecutivas tentativas para fornecer uma senha válida ou uma resposta de senha é rastreadas."
  remarks: "A propriedade PasswordAttemptWindow funciona em conjunto com o <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>propriedade para ajudar a proteger contra uma fonte indesejada adivinhe a senha ou resposta de senha de um usuário da associação por meio de repetidas tentativas.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> Quando um usuário tenta fazer login, alterar ou redefinir sua senha, somente um determinado número de tentativas consecutivas é permitido dentro de uma janela de tempo especificado. O comprimento da janela de tempo é especificado na propriedade PasswordAttemptWindow, que identifica o número de minutos permitidos entre tentativas inválidas.       Se o número de tentativas com falha consecutivas que um usuário faz a redefinir sua ou a senha é igual ao valor armazenado na <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>propriedade e o tempo decorrido desde a última tentativa inválida é menor que o número de minutos especificado na propriedade PasswordAttemptWindow, em seguida, o usuário é bloqueado.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A> O usuário é bloqueado definindo o <xref:System.Web.Security.MembershipUser.IsLockedOut%2A>propriedade `true` até que o usuário está desbloqueado por uma chamada para o <xref:System.Web.Security.MembershipUser.UnlockUser%2A>método.</xref:System.Web.Security.MembershipUser.UnlockUser%2A> </xref:System.Web.Security.MembershipUser.IsLockedOut%2A>       Se o intervalo entre a falha na tentativa atual e a última tentativa com falha for maior que a configuração da propriedade PasswordAttemptWindow, a atual tentativa inválida é contada como o primeiro. Se uma resposta de senha válida for fornecida antes de atingir o número máximo de tentativas inválidas permitidas, a contagem de tentativas inválidas de resposta de senha está definida como 0 (zero). Se uma senha válida for fornecida antes que o número máximo de permissão inválido tentativas for atingido, a contagem de tentativas inválidas de senha e a contagem de tentativas de resposta de senha inválidas são definidos como 0 (zero).       Tentativas de senha e resposta de senha inválidas são acumuladas independentemente uma da outra. Por exemplo, se o <xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>está definido como 5 e três tentativas de senha inválidas são feitas seguidas por duas tentativas de resposta de senha inválidas, mais duas tentativas de senha inválida (ou mais três tentativas de resposta de senha inválidas) devem ser feitas em PasswordAttemptWindow do usuário da associação a ser bloqueada.</xref:System.Web.Security.Membership.MaxInvalidPasswordAttempts%2A>       O valor da propriedade PasswordAttemptWindow é definido na configuração do aplicativo usando o `passwordAttemptWindow` atributo da seção do elemento de configuração.       Se o <xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>está definida como `false`, não são rastreadas tentativas de resposta de senha inválida.</xref:System.Web.Security.Membership.RequiresQuestionAndAnswer%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `maxInvalidPasswordAttempts` attribute to five invalid attempts and the `passwordAttemptWindow` to 30 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"   \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      maxInvalidPasswordAttempts=\"5\"  \n      passwordAttemptWindow=\"30\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int PasswordAttemptWindow { get; }
    return:
      type: System.Int32
      description: "A janela de tempo, em minutos, durante o qual consecutivas não tenta fornecer uma senha válida ou resposta de senha são rastreadas. O padrão é de 10 minutos. Se o intervalo entre a falha na tentativa atual e a última tentativa com falha for maior que a configuração da propriedade PasswordAttemptWindow, cada tentativa com falha é tratada como se fosse a primeira tentativa com falha."
  overload: System.Web.Security.Membership.PasswordAttemptWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  id: PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a expressão regular usada para avaliar uma senha."
  remarks: "A propriedade PasswordStrengthRegularExpression obtém a expressão regular usada para avaliar a complexidade de senha do provedor especificado no <xref:System.Web.Security.Membership.Provider%2A>propriedade.</xref:System.Web.Security.Membership.Provider%2A>       A propriedade PasswordStrengthRegularExpression está definida na configuração do aplicativo usando o `passwordStrengthRegularExpression` atributo do elemento de configuração.       Para obter mais informações sobre expressões regulares, consulte [expressões regulares do .NET Framework](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows the  configuration element in the `system.web` section of the application's Web.config file. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> class to provide membership services, and sets the `passwordStrengthRegularExpression` attribute to a regular expression that validates the password meets the following criteria:  \n  \n-   Is greater than seven characters.  \n  \n-   Contains at least one digit.  \n  \n-   Contains at least one special (non-alphanumeric) character.  \n  \n If the password does not meet these criteria, the password is not accepted by the membership provider.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow = \"20>  \n  <providers>  \n    <add  \n      name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordStrengthRegularExpression=\" @\\\"(?=.{6,})(?=(.*\\d){1,})(?=(.*\\W){1,})\"  \n      />  \n   </providers>  \n</membership>  \n```"
  syntax:
    content: public static string PasswordStrengthRegularExpression { get; }
    return:
      type: System.String
      description: "Uma expressão regular usada para avaliar uma senha."
  overload: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Provider
  id: Provider
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma referência para o provedor de associação padrão para o aplicativo."
  remarks: "A propriedade do provedor permite que você referenciar o provedor de associação padrão para um aplicativo diretamente. Isso é normalmente usado para acessar membros personalizados do provedor de associação que não fazem parte de <xref:System.Web.Security.MembershipProvider>classe base abstrata.</xref:System.Web.Security.MembershipProvider>"
  example:
  - "The following code example accesses the default <xref:System.Web.Security.SqlMembershipProvider> enabled for the application using the Provider property in order to determine the value of the custom <xref:System.Web.Security.SqlMembershipProvider.RequiresUniqueEmail%2A> property.  \n  \n [!code-vb[System.Web.Security.Membership#6](~/add/codesnippet/visualbasic/p-system.web.security.me_0_1.aspx)]\n [!code-cs[System.Web.Security.Membership#6](~/add/codesnippet/csharp/p-system.web.security.me_0_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "O provedor de associação padrão para o aplicativo exposto usando a <xref:System.Web.Security.MembershipProvider>classe base abstrata.</xref:System.Web.Security.MembershipProvider>"
  overload: System.Web.Security.Membership.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.Providers
  id: Providers
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém uma coleção de provedores de associação para o aplicativo ASP.NET."
  remarks: "A propriedade provedores faz referência a todos os provedores de associação habilitados para um aplicativo, incluindo provedores adicionados no arquivo Web. config para o aplicativo e o arquivo Machine. config para todos os aplicativos. Você pode controlar quais membros provedores estão disponíveis para um aplicativo usando o `providers` elemento da seção de configuração de seu aplicativo. Por exemplo, o exemplo a seguir mostra a seção no arquivo Web. config para um aplicativo que remove o <xref:System.Web.Security.SqlMembershipProvider>instância (`AspNetSqlProvider`) especificado no arquivo de configuração da máquina e adiciona um <xref:System.Web.Security.SqlMembershipProvider>instância denominada `SqlProvider` como o provedor de associação padrão para o aplicativo.</xref:System.Web.Security.SqlMembershipProvider> </xref:System.Web.Security.SqlMembershipProvider>      ```   <configuration>     <connectionStrings>       <add name=&quot;SqlServices&quot; connectionString=&quot;Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;&quot; />     </connectionStrings>     <system.web>       <membership defaultProvider=&quot;SqlProvider&quot; userIsOnlineTimeWindow=&quot;20&quot;>         <providers>           <remove name=&quot;AspNetSqlProvider&quot; />             <add name=&quot;SqlProvider&quot;               type=&quot;System.Web.Security.SqlMembershipProvider&quot;               connectionStringName=&quot;SqlServices&quot;               enablePasswordRetrieval=&quot;false&quot;               enablePasswordReset=&quot;true&quot;               requiresQuestionAndAnswer=&quot;true&quot;               passwordFormat=&quot;Hashed&quot;               applicationName=&quot;/&quot; />         </providers>       </membership>     </system.web>   </configuration>   ```Ao especificar o [associação Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) seção, você deve especificar o `defaultProvider` atributo. Se você não especificar um [associação Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/b9c1ee8f-33ca-4361-8666-b42a0fe86049) são usados no seu Web. config, os valores de configuração do computador e o <xref:System.Web.Security.SqlMembershipProvider>instância nomeada `AspNetSqlProvider` for estabelecido como o `defaultProvider`.</xref:System.Web.Security.SqlMembershipProvider>       Você pode obter uma referência com rigidez de tipos para um provedor da coleção de provedores, o provedor de associação de indexação por nome e convertê-la como o tipo desejado."
  example:
  - "The following code example lists the providers enabled for an application and their respective types.  \n  \n [!code-cs[System.Web.Security.Membership#7](~/add/codesnippet/csharp/p-system.web.security.me_1_1.aspx)]\n [!code-vb[System.Web.Security.Membership#7](~/add/codesnippet/visualbasic/p-system.web.security.me_1_1.aspx)]"
  syntax:
    content: public static System.Web.Security.MembershipProviderCollection Providers { get; }
    return:
      type: System.Web.Security.MembershipProviderCollection
      description: "Um <xref:System.Web.Security.MembershipProviderCollection>dos provedores de associação configurados para o aplicativo ASP.NET.</xref:System.Web.Security.MembershipProviderCollection>"
  overload: System.Web.Security.Membership.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  id: RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o provedor de associação padrão exige que o usuário responder a uma pergunta de senha para redefinição de senha e recuperação."
  remarks: "Exigir uma pergunta de senha e resposta fornece uma camada adicional de segurança ao recuperar ou redefinir a senha do usuário. Os usuários podem fornecer uma pergunta e resposta quando seu nome de usuário é criado que eles podem usar mais tarde para recuperar ou redefinir uma senha esquecida.       RequiresQuestionAndAnswer é verificada quando <xref:System.Web.Security.MembershipUser.ResetPassword%2A>ou <xref:System.Web.Security.MembershipUser.GetPassword%2A>é chamado.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A> O provedor fornecido com o .NET Framework lança uma <xref:System.NotSupportedException>se for RequiresQuestionAndAnswer `true` e a resposta de senha fornecida é `null`.</xref:System.NotSupportedException>       Se <xref:System.Web.Security.Membership.EnablePasswordReset%2A>e <xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A>são ambos `false`, RequiresQuestionAndAnswer ainda pode ser usada para impor a criação de perguntas e respostas quando novos usuários são criados; no entanto, a pergunta e resposta serão não usados.</xref:System.Web.Security.Membership.EnablePasswordRetrieval%2A> </xref:System.Web.Security.Membership.EnablePasswordReset%2A> Você poderá recuperar a pergunta usando a <xref:System.Web.Security.MembershipUser>classe.</xref:System.Web.Security.MembershipUser>       Para obter mais informações, consulte <xref:System.Web.Security.MembershipUser.ResetPassword%2A>e <xref:System.Web.Security.MembershipUser.GetPassword%2A>.</xref:System.Web.Security.MembershipUser.GetPassword%2A> </xref:System.Web.Security.MembershipUser.ResetPassword%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider>, enables password reset, and requires a password answer when performing a reset.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"false\"  \n      enablePasswordReset=\"true\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Hashed\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```  \n  \n The following code sample checks the value of RequiresQuestionAndAnswer and adds the necessary controls for a password question and answer to be supplied when creating a user.  \n  \n> [!IMPORTANT]\n>  This example includes a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/csharp/p-system.web.security.me_3_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#2](~/add/codesnippet/visualbasic/p-system.web.security.me_3_1.aspx)]"
  syntax:
    content: public static bool RequiresQuestionAndAnswer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma resposta de senha é necessária para redefinição de senha e recuperação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  id: UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Atualiza o banco de dados com as informações para o usuário especificado."
  remarks: "UpdateUser utiliza, como entrada, um <xref:System.Web.Security.MembershipUser>populada com informações atuais do usuário da associação de objeto e atualiza a fonte de dados com os valores de propriedade de <xref:System.Web.Security.MembershipUser>objeto.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser> Você pode construir uma nova <xref:System.Web.Security.MembershipUser>, ou recuperar um <xref:System.Web.Security.MembershipUser>objeto preenchido com valores atuais na fonte de dados usando o <xref:System.Web.Security.Membership.GetUser%2A>, <xref:System.Web.Security.Membership.GetAllUsers%2A>, <xref:System.Web.Security.Membership.FindUsersByName%2A>, ou <xref:System.Web.Security.Membership.FindUsersByEmail%2A>métodos.</xref:System.Web.Security.Membership.FindUsersByEmail%2A> </xref:System.Web.Security.Membership.FindUsersByName%2A> </xref:System.Web.Security.Membership.GetAllUsers%2A> </xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser>"
  example:
  - "The following code example updates the e-mail address for the current logged-on user.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/csharp/m-system.web.security.me_8_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#11](~/add/codesnippet/visualbasic/m-system.web.security.me_8_1.aspx)]"
  syntax:
    content: public static void UpdateUser (System.Web.Security.MembershipUser user);
    parameters:
    - id: user
      type: System.Web.Security.MembershipUser
      description: "Um <xref:System.Web.Security.MembershipUser>objeto que representa o usuário a ser atualizado e as informações atualizadas para o usuário.</xref:System.Web.Security.MembershipUser>"
  overload: System.Web.Security.Membership.UpdateUser*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>user</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  id: UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Especifica o número de minutos depois que a atividade de última data/hora carimbo para um usuário durante o qual o usuário é considerado online."
  remarks: "O valor da propriedade UserIsOnlineTimeWindow é verificado durante a chamada para <xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A>.</xref:System.Web.Security.Membership.GetNumberOfUsersOnline%2A> Se o <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>para um usuário é maior que a data e hora atuais menos o valor de UserIsOnlineTimeWindow em minutos, o usuário é considerado online.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Você pode determinar se um usuário de associação é considerado online com a <xref:System.Web.Security.MembershipUser.IsOnline%2A>propriedade de <xref:System.Web.Security.MembershipUser>classe.</xref:System.Web.Security.MembershipUser> </xref:System.Web.Security.MembershipUser.IsOnline%2A>       O <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>para um usuário é atualizado quando as credenciais do usuário são validadas com êxito pelo <xref:System.Web.Security.Membership.ValidateUser%2A>método.</xref:System.Web.Security.Membership.ValidateUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Você também pode atualizar o <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>para um usuário associado ao chamar um do <xref:System.Web.Security.Membership.GetUser%2A>sobrecargas.</xref:System.Web.Security.Membership.GetUser%2A> </xref:System.Web.Security.MembershipUser.LastActivityDate%2A> Se você chamar um <xref:System.Web.Security.Membership.GetUser%2A>sobrecarga que utiliza um `userIsOnline` parâmetro, especifique um valor de `true` para atualizar o <xref:System.Web.Security.MembershipUser.LastActivityDate%2A>para o usuário.</xref:System.Web.Security.MembershipUser.LastActivityDate%2A> </xref:System.Web.Security.Membership.GetUser%2A>"
  example:
  - "The following code example shows the  element in the `system.web` section of the Web.config file for an ASP.NET application. It specifies that the application use an instance of the <xref:System.Web.Security.SqlMembershipProvider> and sets the `userIsOnlineTimeWindow` attribute to 20 minutes.  \n  \n```  \n<membership defaultProvider=\"SqlProvider\"  \n  userIsOnlineTimeWindow=\"20\">  \n  <providers>  \n    <add name=\"SqlProvider\"  \n      type=\"System.Web.Security.SqlMembershipProvider\"  \n      connectionStringName=\"SqlServices\"  \n      enablePasswordRetrieval=\"true\"  \n      enablePasswordReset=\"false\"  \n      requiresQuestionAndAnswer=\"true\"  \n      passwordFormat=\"Encrypted\"  \n      applicationName=\"MyApplication\" />  \n  </providers>  \n</membership>  \n```"
  syntax:
    content: public static int UserIsOnlineTimeWindow { get; }
    return:
      type: System.Int32
      description: "O número de minutos após a atividade de última data/hora carimbo para um usuário durante o qual o usuário é considerado online."
  overload: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  id: ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Verifica se o nome de usuário fornecido e a senha são válidos."
  remarks: "ValidateUser fornece uma maneira fácil de verificar um nome de usuário e senha da fonte de dados. Observe que, se o `username` parâmetro está vazio ou `null`, uma <xref:System.Web.HttpException>é gerada.</xref:System.Web.HttpException>"
  example:
  - "The following code example shows the login page for an ASP.NET application configured to use forms authentication and the <xref:System.Web.Security.Membership> class. If the supplied user credentials are invalid, a message is displayed to the user. Otherwise, the user is redirected to the originally requested URL by the <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/m-system.web.security.me_7_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/m-system.web.security.me_7_1.aspx)]"
  syntax:
    content: public static bool ValidateUser (string username, string password);
    parameters:
    - id: username
      type: System.String
      description: "O nome do usuário a ser validado."
    - id: password
      type: System.String
      description: "A senha para o usuário especificado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nome de usuário fornecido e a senha são válidos; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.Membership.ValidateUser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.Membership.ValidatingPassword
  id: ValidatingPassword
  parent: System.Web.Security.Membership
  langs:
  - csharp
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Ocorre quando um usuário é criado, uma senha é alterada ou uma senha é redefinida."
  remarks: "O <xref:System.Web.Security.MembershipProvider.ValidatingPassword>é gerado quando o <xref:System.Web.Security.MembershipProvider.CreateUser%2A>método, o <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>método, ou o <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>é chamado de método de um provedor de associação.</xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A> </xref:System.Web.Security.MembershipProvider.ValidatingPassword>       Você pode usar o <xref:System.Web.Security.MembershipProvider.ValidatingPassword>evento para validar valores de associação para usuários e formatos de senha.</xref:System.Web.Security.MembershipProvider.ValidatingPassword>       Você pode cancelar atual <xref:System.Web.Security.MembershipProvider.CreateUser%2A>, <xref:System.Web.Security.MembershipProvider.ChangePassword%2A>, ou <xref:System.Web.Security.MembershipProvider.ResetPassword%2A>ação definindo o <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>propriedade fornecido <xref:System.Web.Security.ValidatePasswordEventArgs>para `true` durante o <xref:System.Web.Security.MembershipProvider.ValidatingPassword>evento.</xref:System.Web.Security.MembershipProvider.ValidatingPassword> </xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> </xref:System.Web.Security.MembershipProvider.ResetPassword%2A> </xref:System.Web.Security.MembershipProvider.ChangePassword%2A> </xref:System.Web.Security.MembershipProvider.CreateUser%2A>       Se você cancelar a ação atual, definindo o <xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A>propriedade `true`, você pode definir o <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>propriedade fornecido <xref:System.Web.Security.ValidatePasswordEventArgs>a uma exceção que descreve o motivo da falha de validação de senha.</xref:System.Web.Security.ValidatePasswordEventArgs> </xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> </xref:System.Web.Security.ValidatePasswordEventArgs.Cancel%2A> O método de chamada lançará a exceção que o <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>estiver definida como.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A> Se o <xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>é de propriedade `null`, o chamador lançará uma exceção de falha de validação de senha genérica.</xref:System.Web.Security.ValidatePasswordEventArgs.FailureInformation%2A>"
  example:
  - "The following code example shows a <xref:System.Web.Security.MembershipProvider.ValidatingPassword> event that validates the format of the password for a user and cancels the action if the password does not match the required format.  \n  \n [!code-cs[System.Web.Security.Membership#11](~/add/codesnippet/csharp/e-system.web.security.me_1.aspx)]\n [!code-vb[System.Web.Security.Membership#11](~/add/codesnippet/visualbasic/e-system.web.security.me_1.aspx)]"
  syntax:
    content: public static event System.Web.Security.MembershipValidatePasswordEventHandler ValidatingPassword;
    return:
      type: System.Web.Security.MembershipValidatePasswordEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Security.MembershipCreateUserException
  isExternal: true
  name: System.Web.Security.MembershipCreateUserException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Security.Membership.ApplicationName
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
  fullName: System.Web.Security.Membership.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String)
  nameWithType: Membership.CreateUser(String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String)
- uid: System.Web.Security.MembershipUser
  parent: System.Web.Security
  isExternal: true
  name: MembershipUser
  nameWithType: MembershipUser
  fullName: System.Web.Security.MembershipUser
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String)
  nameWithType: Membership.CreateUser(String,String,String)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String)
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,MembershipCreateStatus)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Security.MembershipCreateStatus
  parent: System.Web.Security
  isExternal: true
  name: MembershipCreateStatus
  nameWithType: MembershipCreateStatus
  fullName: System.Web.Security.MembershipCreateStatus
- uid: System.Web.Security.Membership.CreateUser(System.String,System.String,System.String,System.String,System.String,System.Boolean,System.Object,System.Web.Security.MembershipCreateStatus@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  nameWithType: Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
  fullName: System.Web.Security.Membership.CreateUser(String,String,String,String,String,Boolean,Object,MembershipCreateStatus)
- uid: System.Web.Security.Membership.DeleteUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String)
  nameWithType: Membership.DeleteUser(String)
  fullName: System.Web.Security.Membership.DeleteUser(String)
- uid: System.Web.Security.Membership.DeleteUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser(String,Boolean)
  nameWithType: Membership.DeleteUser(String,Boolean)
  fullName: System.Web.Security.Membership.DeleteUser(String,Boolean)
- uid: System.Web.Security.Membership.EnablePasswordReset
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
  fullName: System.Web.Security.Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
  fullName: System.Web.Security.Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String)
  nameWithType: Membership.FindUsersByEmail(String)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String)
- uid: System.Web.Security.MembershipUserCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipUserCollection
  nameWithType: MembershipUserCollection
  fullName: System.Web.Security.MembershipUserCollection
- uid: System.Web.Security.Membership.FindUsersByEmail(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByEmail(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByEmail(String,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Security.Membership.FindUsersByName(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String)
  nameWithType: Membership.FindUsersByName(String)
  fullName: System.Web.Security.Membership.FindUsersByName(String)
- uid: System.Web.Security.Membership.FindUsersByName(System.String,System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName(String,Int32,Int32,Int32)
  nameWithType: Membership.FindUsersByName(String,Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.FindUsersByName(String,Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GeneratePassword(System.Int32,System.Int32)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword(Int32,Int32)
  nameWithType: Membership.GeneratePassword(Int32,Int32)
  fullName: System.Web.Security.Membership.GeneratePassword(Int32,Int32)
- uid: System.Web.Security.Membership.GetAllUsers
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers()
  nameWithType: Membership.GetAllUsers()
  fullName: System.Web.Security.Membership.GetAllUsers()
- uid: System.Web.Security.Membership.GetAllUsers(System.Int32,System.Int32,System.Int32@)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers(Int32,Int32,Int32)
  nameWithType: Membership.GetAllUsers(Int32,Int32,Int32)
  fullName: System.Web.Security.Membership.GetAllUsers(Int32,Int32,Int32)
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline()
  nameWithType: Membership.GetNumberOfUsersOnline()
  fullName: System.Web.Security.Membership.GetNumberOfUsersOnline()
- uid: System.Web.Security.Membership.GetUser
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser()
  nameWithType: Membership.GetUser()
  fullName: System.Web.Security.Membership.GetUser()
- uid: System.Web.Security.Membership.GetUser(System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Boolean)
  nameWithType: Membership.GetUser(Boolean)
  fullName: System.Web.Security.Membership.GetUser(Boolean)
- uid: System.Web.Security.Membership.GetUser(System.Object)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object)
  nameWithType: Membership.GetUser(Object)
  fullName: System.Web.Security.Membership.GetUser(Object)
- uid: System.Web.Security.Membership.GetUser(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String)
  nameWithType: Membership.GetUser(String)
  fullName: System.Web.Security.Membership.GetUser(String)
- uid: System.Web.Security.Membership.GetUser(System.Object,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(Object,Boolean)
  nameWithType: Membership.GetUser(Object,Boolean)
  fullName: System.Web.Security.Membership.GetUser(Object,Boolean)
- uid: System.Web.Security.Membership.GetUser(System.String,System.Boolean)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser(String,Boolean)
  nameWithType: Membership.GetUser(String,Boolean)
  fullName: System.Web.Security.Membership.GetUser(String,Boolean)
- uid: System.Web.Security.Membership.GetUserNameByEmail(System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail(String)
  nameWithType: Membership.GetUserNameByEmail(String)
  fullName: System.Web.Security.Membership.GetUserNameByEmail(String)
- uid: System.Web.Security.Membership.HashAlgorithmType
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
  fullName: System.Web.Security.Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
  fullName: System.Web.Security.Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
  fullName: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
  fullName: System.Web.Security.Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
  fullName: System.Web.Security.Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
  fullName: System.Web.Security.Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
  fullName: System.Web.Security.Membership.Provider
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Web.Security.Membership.Providers
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
  fullName: System.Web.Security.Membership.Providers
- uid: System.Web.Security.MembershipProviderCollection
  parent: System.Web.Security
  isExternal: true
  name: MembershipProviderCollection
  nameWithType: MembershipProviderCollection
  fullName: System.Web.Security.MembershipProviderCollection
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
  fullName: System.Web.Security.Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser(System.Web.Security.MembershipUser)
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser(MembershipUser)
  nameWithType: Membership.UpdateUser(MembershipUser)
  fullName: System.Web.Security.Membership.UpdateUser(MembershipUser)
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
  fullName: System.Web.Security.Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser(System.String,System.String)
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser(String,String)
  nameWithType: Membership.ValidateUser(String,String)
  fullName: System.Web.Security.Membership.ValidateUser(String,String)
- uid: System.Web.Security.Membership.ValidatingPassword
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidatingPassword
  nameWithType: Membership.ValidatingPassword
  fullName: System.Web.Security.Membership.ValidatingPassword
- uid: System.Web.Security.MembershipValidatePasswordEventHandler
  parent: System.Web.Security
  isExternal: true
  name: MembershipValidatePasswordEventHandler
  nameWithType: MembershipValidatePasswordEventHandler
  fullName: System.Web.Security.MembershipValidatePasswordEventHandler
- uid: System.Web.Security.Membership.ApplicationName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ApplicationName
  nameWithType: Membership.ApplicationName
- uid: System.Web.Security.Membership.CreateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: CreateUser
  nameWithType: Membership.CreateUser
- uid: System.Web.Security.Membership.DeleteUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: DeleteUser
  nameWithType: Membership.DeleteUser
- uid: System.Web.Security.Membership.EnablePasswordReset*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordReset
  nameWithType: Membership.EnablePasswordReset
- uid: System.Web.Security.Membership.EnablePasswordRetrieval*
  parent: System.Web.Security.Membership
  isExternal: false
  name: EnablePasswordRetrieval
  nameWithType: Membership.EnablePasswordRetrieval
- uid: System.Web.Security.Membership.FindUsersByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByEmail
  nameWithType: Membership.FindUsersByEmail
- uid: System.Web.Security.Membership.FindUsersByName*
  parent: System.Web.Security.Membership
  isExternal: false
  name: FindUsersByName
  nameWithType: Membership.FindUsersByName
- uid: System.Web.Security.Membership.GeneratePassword*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GeneratePassword
  nameWithType: Membership.GeneratePassword
- uid: System.Web.Security.Membership.GetAllUsers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetAllUsers
  nameWithType: Membership.GetAllUsers
- uid: System.Web.Security.Membership.GetNumberOfUsersOnline*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetNumberOfUsersOnline
  nameWithType: Membership.GetNumberOfUsersOnline
- uid: System.Web.Security.Membership.GetUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUser
  nameWithType: Membership.GetUser
- uid: System.Web.Security.Membership.GetUserNameByEmail*
  parent: System.Web.Security.Membership
  isExternal: false
  name: GetUserNameByEmail
  nameWithType: Membership.GetUserNameByEmail
- uid: System.Web.Security.Membership.HashAlgorithmType*
  parent: System.Web.Security.Membership
  isExternal: false
  name: HashAlgorithmType
  nameWithType: Membership.HashAlgorithmType
- uid: System.Web.Security.Membership.MaxInvalidPasswordAttempts*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MaxInvalidPasswordAttempts
  nameWithType: Membership.MaxInvalidPasswordAttempts
- uid: System.Web.Security.Membership.MinRequiredNonAlphanumericCharacters*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredNonAlphanumericCharacters
  nameWithType: Membership.MinRequiredNonAlphanumericCharacters
- uid: System.Web.Security.Membership.MinRequiredPasswordLength*
  parent: System.Web.Security.Membership
  isExternal: false
  name: MinRequiredPasswordLength
  nameWithType: Membership.MinRequiredPasswordLength
- uid: System.Web.Security.Membership.PasswordAttemptWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordAttemptWindow
  nameWithType: Membership.PasswordAttemptWindow
- uid: System.Web.Security.Membership.PasswordStrengthRegularExpression*
  parent: System.Web.Security.Membership
  isExternal: false
  name: PasswordStrengthRegularExpression
  nameWithType: Membership.PasswordStrengthRegularExpression
- uid: System.Web.Security.Membership.Provider*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Provider
  nameWithType: Membership.Provider
- uid: System.Web.Security.Membership.Providers*
  parent: System.Web.Security.Membership
  isExternal: false
  name: Providers
  nameWithType: Membership.Providers
- uid: System.Web.Security.Membership.RequiresQuestionAndAnswer*
  parent: System.Web.Security.Membership
  isExternal: false
  name: RequiresQuestionAndAnswer
  nameWithType: Membership.RequiresQuestionAndAnswer
- uid: System.Web.Security.Membership.UpdateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UpdateUser
  nameWithType: Membership.UpdateUser
- uid: System.Web.Security.Membership.UserIsOnlineTimeWindow*
  parent: System.Web.Security.Membership
  isExternal: false
  name: UserIsOnlineTimeWindow
  nameWithType: Membership.UserIsOnlineTimeWindow
- uid: System.Web.Security.Membership.ValidateUser*
  parent: System.Web.Security.Membership
  isExternal: false
  name: ValidateUser
  nameWithType: Membership.ValidateUser
