### YamlMime:ManagedReference
items:
- uid: System.Net.Mail.SmtpClient
  id: SmtpClient
  children:
  - System.Net.Mail.SmtpClient.#ctor
  - System.Net.Mail.SmtpClient.#ctor(System.String)
  - System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)
  - System.Net.Mail.SmtpClient.ClientCertificates
  - System.Net.Mail.SmtpClient.Credentials
  - System.Net.Mail.SmtpClient.DeliveryFormat
  - System.Net.Mail.SmtpClient.DeliveryMethod
  - System.Net.Mail.SmtpClient.Dispose
  - System.Net.Mail.SmtpClient.Dispose(System.Boolean)
  - System.Net.Mail.SmtpClient.EnableSsl
  - System.Net.Mail.SmtpClient.Host
  - System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  - System.Net.Mail.SmtpClient.PickupDirectoryLocation
  - System.Net.Mail.SmtpClient.Port
  - System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)
  - System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)
  - System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)
  - System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)
  - System.Net.Mail.SmtpClient.SendAsyncCancel
  - System.Net.Mail.SmtpClient.SendCompleted
  - System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  - System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)
  - System.Net.Mail.SmtpClient.ServicePoint
  - System.Net.Mail.SmtpClient.TargetName
  - System.Net.Mail.SmtpClient.Timeout
  - System.Net.Mail.SmtpClient.UseDefaultCredentials
  langs:
  - csharp
  name: SmtpClient
  nameWithType: SmtpClient
  fullName: System.Net.Mail.SmtpClient
  type: Class
  summary: "Permite que aplicativos enviar emails usando o SMTP Simple Mail Transfer Protocol ()."
  remarks: "The SmtpClient class is used to send e-mail to an SMTP server for delivery. The SMTP protocol is defined in RFC 2821, which is available at [http://www.ietf.org](http://www.ietf.org/).  \n  \n The classes shown in the following table are used to construct e-mail messages that can be sent using SmtpClient.  \n  \n|Class|Description|  \n|-----------|-----------------|  \n|<xref:System.Net.Mail.Attachment>|Represents file attachments. This class allows you to attach files, streams, or text to an e-mail message.|  \n|<xref:System.Net.Mail.MailAddress>|Represents the e-mail address of the sender and recipients.|  \n|<xref:System.Net.Mail.MailMessage>|Represents an e-mail message.|  \n  \n To construct and send an e-mail message by using SmtpClient, you must specify the following information:  \n  \n-   The SMTP host server that you use to send e-mail. See the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties.  \n  \n-   Credentials for authentication, if required by the SMTP server. See the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property.  \n  \n-   The e-mail address of the sender. See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `from` parameter. Also see the <xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName> property.  \n  \n-   The e-mail address or addresses of the recipients. See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `recipient` parameter. Also see the <xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName> property.  \n  \n-   The message content. See the <xref:System.Net.Mail.SmtpClient.Send%2A> and <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods that take a `body` parameter. Also see the <xref:System.Net.Mail.MailMessage.Body%2A?displayProperty=fullName> property.  \n  \n To include an attachment with an e-mail message, first create the attachment by using the <xref:System.Net.Mail.Attachment> class, and then add it to the message by using the <xref:System.Net.Mail.MailMessage.Attachments%2A?displayProperty=fullName> property. Depending on the e-mail reader used by the recipients and the file type of the attachment, some recipients might not be able to read the attachment. For clients that cannot display the attachment in its original form, you can specify alternate views by using the <xref:System.Net.Mail.MailMessage.AlternateViews%2A?displayProperty=fullName> property.  \n  \n You can use the application or machine configuration files to specify default host, port, and credentials values for all SmtpClient objects. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n To send the e-mail message and block while waiting for the e-mail to be transmitted to the SMTP server, use one of the synchronous <xref:System.Net.Mail.SmtpClient.Send%2A> methods. To allow your program's main thread to continue executing while the e-mail is transmitted, use one of the asynchronous <xref:System.Net.Mail.SmtpClient.SendAsync%2A> methods. The <xref:System.Net.Mail.SmtpClient.SendCompleted> event is raised when a <xref:System.Net.Mail.SmtpClient.SendAsync%2A> operation completes. To receive this event, you must add a <xref:System.Net.Mail.SendCompletedEventHandler> delegate to <xref:System.Net.Mail.SmtpClient.SendCompleted>. The <xref:System.Net.Mail.SendCompletedEventHandler> delegate must reference a callback method that handles notification of <xref:System.Net.Mail.SmtpClient.SendCompleted> events. To cancel an asynchronous e-mail transmission, use the <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> method.  \n  \n> [!NOTE]\n>  If there is an e-mail transmission in progress and you call <xref:System.Net.Mail.SmtpClient.SendAsync%2A> or <xref:System.Net.Mail.SmtpClient.Send%2A> again, you will receive an <xref:System.InvalidOperationException>.  \n  \n The connection established by the current instance of the SmtpClient class to the SMTP server may be re-used if an application wishes to send multiple messages to the same SMTP server. This is particularly useful when authentication or encryption are used establish a connection to the SMTP server. The process of authenticating and establishing a TLS session can be expensive operations. A requirement to re-establish a connection for each message when sending a large quantity of email to the same SMTP server could have a significant impact on performance. There are a number of high-volume email applications that send email status updates, newsletter distributions, or email alerts. Also many email client applications support an off-line mode where users can compose many email messages that are sent later when a connection to the SMTP server is established. It is typical for an email client to send all SMTP messages to a specific SMTP server (provided by the Internet service provider) that then forwards this email to other SMTP servers.  \n  \n The SmtpClient class implementation pools SMTP connections so that it can avoid the overhead of re-establishing a connection for every message to the same server. An application may re-use the same SmtpClient object to send many different emails to the same SMTP server and to many different SMTP servers. As a result, there is no way to determine when an application is finished using the SmtpClient object and it should be cleaned up.  \n  \n When an SMTP session is finished and the client wishes to terminate the connection, it must send a QUIT message to the server to indicate that it has no more messages to send. This allows the server to free up resources associated with the connection from the client and process the messages which were sent by the client.  \n  \n The SmtpClient class has no `Finalize` method, so an application must call <xref:System.Net.Mail.SmtpClient.Dispose%2A> to explicitly free up resources. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method iterates through all established connections to the SMTP server specified in the <xref:System.Net.Mail.SmtpClient.Host%2A> property and sends a QUIT message followed by gracefully ending the TCP connection. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method also releases the unmanaged resources used by the <xref:System.Net.Sockets.Socket> and optionally disposes of the managed resources.  \n  \n Call <xref:System.Net.Mail.SmtpClient.Dispose%2A> when you are finished using the SmtpClient. The <xref:System.Net.Mail.SmtpClient.Dispose%2A> method leaves the SmtpClient in an unusable state. After calling <xref:System.Net.Mail.SmtpClient.Dispose%2A>, you must release all references to the SmtpClient so the garbage collector can reclaim the memory that the SmtpClient was occupying."
  example:
  - "The following code example demonstrates sending an e-mail message asynchronously.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/t-system.net.mail.smtpcl_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/t-system.net.mail.smtpcl_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/t-system.net.mail.smtpcl_1.vb)]"
  syntax:
    content: 'public class SmtpClient : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.#ctor
  id: '#ctor'
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SmtpClient()
  nameWithType: SmtpClient.SmtpClient()
  fullName: System.Net.Mail.SmtpClient.SmtpClient()
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> classe usando o arquivo de configuração."
  remarks: "Este construtor inicializa o <xref:System.Net.Mail.SmtpClient.Host%2A>, <xref:System.Net.Mail.SmtpClient.Credentials%2A>, e <xref:System.Net.Mail.SmtpClient.Port%2A>Propriedades para o novo <xref:System.Net.Mail.SmtpClient>usando as configurações do aplicativo ou os arquivos de configuração de máquina.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Credentials%2A> </xref:System.Net.Mail.SmtpClient.Host%2A> Para obter mais informações, consulte [ \\&lt; mailSettings\\&gt; (Configurações de rede) do elemento](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md)."
  example:
  - "The following code example demonstrates sending an e-mail message.  \n  \n [!code-cpp[NclMailSync#4](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_4_1.cpp)]\n [!code-cs[NclMailSync#4](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_4_1.cs)]  \n  \n For an example of the \\<mailSettings> node in the application or machine configuration file, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md)."
  syntax:
    content: public SmtpClient ();
    parameters: []
  overload: System.Net.Mail.SmtpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SmtpClient(String)
  nameWithType: SmtpClient.SmtpClient(String)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> classe que envie email usando o servidor SMTP especificado."
  remarks: "The `host` parameter is used to initialize the value of the <xref:System.Net.Mail.SmtpClient.Host%2A> property. The <xref:System.Net.Mail.SmtpClient.Credentials%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties are initialized by using the settings in the application or machine configuration files. If `host` is `null` or equal to <xref:System.String.Empty?displayProperty=fullName>, <xref:System.Net.Mail.SmtpClient.Host%2A> is initialized using the settings in the application or machine configuration files.  \n  \n For more information about using the application and machine configuration files, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using <xref:System.Net.Mail.SmtpClient> constructors or properties, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#3](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_1_1.cpp)]\n [!code-cs[NclMailSync#3](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_1_1.cs)]"
  syntax:
    content: public SmtpClient (string host);
    parameters:
    - id: host
      type: System.String
      description: "Um <xref:System.String>que contém o nome ou endereço IP do computador host usado para transações SMTP.</xref:System.String>"
  overload: System.Net.Mail.SmtpClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)
  id: '#ctor(System.String,System.Int32)'
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SmtpClient(String,Int32)
  nameWithType: SmtpClient.SmtpClient(String,Int32)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String,Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> classe que envie email usando o servidor SMTP especificado e a porta."
  remarks: "The `host` and `port` parameters set the value of the <xref:System.Net.Mail.SmtpClient.Host%2A> and <xref:System.Net.Mail.SmtpClient.Port%2A> properties, respectively. If `host` is `null` or equal to <xref:System.String.Empty?displayProperty=fullName>, <xref:System.Net.Mail.SmtpClient.Host%2A> is initialized using the settings in the application or machine configuration files. If `port` is zero, <xref:System.Net.Mail.SmtpClient.Port%2A> is initialized using the settings in the application or machine configuration files. The <xref:System.Net.Mail.SmtpClient.Credentials%2A> property is initialized using the settings in the application or machine configuration files.  \n  \n For more information about using the application and machine configuration files, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using <xref:System.Net.Mail.SmtpClient> constructors or properties, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclMailSync#1](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_0_1.cpp)]\n [!code-cs[NclMailSync#1](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_0_1.cs)]"
  syntax:
    content: public SmtpClient (string host, int port);
    parameters:
    - id: host
      type: System.String
      description: "Um <xref:System.String>que contém o nome ou endereço IP do host usado para transações SMTP.</xref:System.String>"
    - id: port
      type: System.Int32
      description: "Um <xref:System.Int32>maior que zero que contém a porta a ser usada em `host`.</xref:System.Int32>"
  overload: System.Net.Mail.SmtpClient.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>port</code>não pode ser menor que zero."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.ClientCertificates
  id: ClientCertificates
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: SmtpClient.ClientCertificates
  fullName: System.Net.Mail.SmtpClient.ClientCertificates
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Especifica quais certificados devem ser usados para estabelecer a conexão Secure Sockets Layer (SSL)."
  remarks: "Certificados de cliente, por padrão, são opcional. No entanto, a configuração do servidor pode exigir que o cliente apresentar um certificado válido como parte da negociação de conexão inicial.      > [!NOTE] > O Framework armazena em cache as sessões SSL conforme eles são criados e tenta reutilizar uma sessão em cache para uma nova solicitação, se possível. Ao tentar reutilizar uma sessão SSL, a estrutura usa o primeiro elemento da ClientCertificates (se houver) ou tenta reutilizar um sessões anônimas se ClientCertificates está vazia."
  example:
  - "The following code example establishes an SSL connection with the SMTP server and uses the connection to send an email.  \n  \n [!code-cs[NclSSLMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_3_1.cs)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref>, mantendo um ou mais certificados de cliente. O valor padrão é derivado dos atributos de configuração do email em um arquivo de configuração."
  overload: System.Net.Mail.SmtpClient.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Credentials
  id: Credentials
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Credentials
  nameWithType: SmtpClient.Credentials
  fullName: System.Net.Mail.SmtpClient.Credentials
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Obtém ou define as credenciais usadas para autenticar o remetente."
  remarks: "Some SMTP servers require that the client be authenticated before the server will send e-mail on its behalf. To use your default network credentials, you can set the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> to `true` instead of setting this property. If the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> property is set to `false,` then the value set in the Credentials property will be used for the credentials when connecting to the server. If the <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A> property is set to `false` and the Credentials property has not been set, then mail is sent to the server anonymously.  \n  \n Credentials information can also be specified using the application and machine configuration files. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). If information is specified using the Credentials property, this information overrides the configuration file settings.  \n  \n> [!CAUTION]\n>  If you provide credentials for basic authentication, they are sent to the server in clear text. This can present a security issue because your credentials can be seen, and then used by others."
  example:
  - "The following code example demonstrates setting the credentials used to send an e-mail.  \n  \n [!code-cpp[NclMailSync#1](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_0_1.cpp)]\n [!code-cs[NclMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_0_1.cs)]"
  syntax:
    content: public System.Net.ICredentialsByHost Credentials { get; set; }
    return:
      type: System.Net.ICredentialsByHost
      description: "Um <xref:System.Net.ICredentialsByHost>que representa as credenciais a ser usado para autenticação; ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhuma credencial foi especificada.</xref:System.Net.ICredentialsByHost>"
  overload: System.Net.Mail.SmtpClient.Credentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando está sendo enviado um email, você não pode alterar o valor dessa propriedade."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.DeliveryFormat
  id: DeliveryFormat
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: DeliveryFormat
  nameWithType: SmtpClient.DeliveryFormat
  fullName: System.Net.Mail.SmtpClient.DeliveryFormat
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Obtém ou define o formato de entrega usado pelo <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> para enviar email."
  syntax:
    content: public System.Net.Mail.SmtpDeliveryFormat DeliveryFormat { get; set; }
    return:
      type: System.Net.Mail.SmtpDeliveryFormat
      description: "Returns <xref href=&quot;System.Net.Mail.SmtpDeliveryFormat&quot;></xref>.       O formato de entrega usado pelo <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref>."
  overload: System.Net.Mail.SmtpClient.DeliveryFormat*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.DeliveryMethod
  id: DeliveryMethod
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: DeliveryMethod
  nameWithType: SmtpClient.DeliveryMethod
  fullName: System.Net.Mail.SmtpClient.DeliveryMethod
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Especifica o email de saída como as mensagens são manipuladas."
  remarks: "Métodos de entrega incluem:-servidor SMTP um.      -Movendo o email para o diretório de retirada para o IIS, que, em seguida, envia a mensagem.      -Movendo o email para um diretório especificado por <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>para entrega posterior por outro aplicativo.</xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>       O valor padrão para essa propriedade também pode ser definido em uma máquina ou arquivo de configuração do aplicativo. Todas as alterações feitas a <xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>o arquivo de configuração de substituição de propriedade.</xref:System.Net.Mail.SmtpClient.PickupDirectoryLocation%2A>"
  syntax:
    content: public System.Net.Mail.SmtpDeliveryMethod DeliveryMethod { get; set; }
    return:
      type: System.Net.Mail.SmtpDeliveryMethod
      description: "Um <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> que indica como as mensagens de email são entregues."
  overload: System.Net.Mail.SmtpClient.DeliveryMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Dispose
  id: Dispose
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Dispose()
  nameWithType: SmtpClient.Dispose()
  fullName: System.Net.Mail.SmtpClient.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Envia uma mensagem QUIT para o servidor SMTP, normalmente termina a conexão TCP e libera todos os recursos usados pela instância atual do <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> classe."
  remarks: "A conexão estabelecida pela instância atual do <xref:System.Net.Mail.SmtpClient>classe para o servidor SMTP pode ser usado novamente, se um aplicativo quiser enviar várias mensagens para o mesmo servidor de SMTP.</xref:System.Net.Mail.SmtpClient> Isso é particularmente útil quando a autenticação ou criptografia são usadas estabelecer uma conexão com o servidor SMTP. O processo de autenticação e estabelecer uma sessão TLS pode ser operações caras. Um requisito para restabelecer uma conexão para cada mensagem ao enviar uma grande quantidade de email para o mesmo servidor de SMTP pode ter um impacto significativo no desempenho. Há um número de aplicativos de alto volume de email que enviar atualizações de status do email, distribuições de boletim informativo, ou alertas por email. Muitos aplicativos de cliente de email também suportam a um modo offline, em que os usuários podem compor muitas mensagens de email enviadas posteriormente quando é estabelecida uma conexão com o servidor SMTP. É comum para um cliente de email enviar todas as mensagens SMTP para um servidor SMTP específico (fornecido pelo provedor de serviços de Internet) que, em seguida, encaminha o email para outros servidores SMTP.       O <xref:System.Net.Mail.SmtpClient>implementação da classe de pools de conexões SMTP para que ele pode evitar a sobrecarga de restabelecer uma conexão para cada mensagem no mesmo servidor.</xref:System.Net.Mail.SmtpClient> Um aplicativo pode reutilizar a mesma <xref:System.Net.Mail.SmtpClient>objeto para enviar vários emails diferentes no mesmo servidor de SMTP e em muitos servidores SMTP diferentes.</xref:System.Net.Mail.SmtpClient> Como resultado, não há nenhuma maneira de determinar quando um aplicativo é concluído usando o <xref:System.Net.Mail.SmtpClient>objeto e devem ser limpos.</xref:System.Net.Mail.SmtpClient>       Quando uma sessão SMTP for concluída e o cliente quiser encerrar a conexão, ele deve enviar uma mensagem QUIT para o servidor para indicar que ele tem não mais mensagens para enviar. Isso permite que o servidor liberar os recursos associados à conexão do cliente e processar as mensagens que foram enviadas pelo cliente.       Chamar o método Dispose em um <xref:System.Net.Mail.SmtpClient>objeto que está em execução assíncrona <xref:System.Net.Mail.SmtpClient.SendAsync%2A>operação cancelará a operação de envio como se a <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>tivesse sido chamado de método.</xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient>       O <xref:System.Net.Mail.SmtpClient>classe não tiver nenhuma `Finalize` método.</xref:System.Net.Mail.SmtpClient> Portanto, um aplicativo deve chamar <xref:System.Net.Mail.SmtpClient.Dispose%2A>explicitamente liberar recursos.</xref:System.Net.Mail.SmtpClient.Dispose%2A>       O método Dispose itera todas as conexões estabelecidas para o servidor SMTP especificado no <xref:System.Net.Mail.SmtpClient.Host%2A>propriedade e envia uma mensagem QUIT seguida normalmente encerrando a conexão TCP.</xref:System.Net.Mail.SmtpClient.Host%2A> O método Dispose também libera os recursos não gerenciados usados pelo subjacente <xref:System.Net.Sockets.Socket>.</xref:System.Net.Sockets.Socket>       Chamada <xref:System.Net.Mail.SmtpClient.Dispose%2A>Quando terminar de usar o <xref:System.Net.Mail.SmtpClient>.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A> O <xref:System.Net.Mail.SmtpClient.Dispose%2A>método deixa o <xref:System.Net.Mail.SmtpClient>em um estado inutilizável.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A> Depois de chamar <xref:System.Net.Mail.SmtpClient.Dispose%2A>, você deve liberar todas as referências para o <xref:System.Net.Mail.SmtpClient>para o coletor de lixo possa recuperar a memória que o <xref:System.Net.Mail.SmtpClient>estava ocupando.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A>       Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamar <xref:System.Net.Mail.SmtpClient.Dispose%2A>antes de liberar sua última referência a <xref:System.Net.Mail.SmtpClient>.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A> Caso contrário, os recursos que está usando não serão liberados para que o coletor de lixo possa recuperar a memória."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Net.Mail.SmtpClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SmtpClient.Dispose(Boolean)
  fullName: System.Net.Mail.SmtpClient.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Envia uma mensagem QUIT para o servidor SMTP, normalmente termina a conexão TCP, libera todos os recursos usados pela instância atual do <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> classe e, opcionalmente, libera os recursos gerenciados."
  remarks: "A conexão estabelecida pela instância atual do <xref:System.Net.Mail.SmtpClient>classe para o servidor SMTP pode ser usado novamente, se um aplicativo quiser enviar várias mensagens para o mesmo servidor de SMTP.</xref:System.Net.Mail.SmtpClient> Isso é particularmente útil quando a autenticação ou criptografia são usadas estabelecer uma conexão com o servidor SMTP. O processo de autenticação e estabelecer uma sessão TLS pode ser operações caras. Um requisito para restabelecer uma conexão para cada mensagem ao enviar uma grande quantidade de email para o mesmo servidor de SMTP pode ter um impacto significativo no desempenho. Há um número de aplicativos de alto volume de email que enviar atualizações de status do email, distribuições de boletim informativo, ou alertas por email. Muitos aplicativos de cliente de email também suportam a um modo offline, em que os usuários podem compor muitas mensagens de email enviadas posteriormente quando é estabelecida uma conexão com o servidor SMTP. É comum para um cliente de email enviar todas as mensagens SMTP para um servidor SMTP específico (fornecido pelo provedor de serviços de Internet) que, em seguida, encaminha o email para outros servidores SMTP.       O <xref:System.Net.Mail.SmtpClient>implementação da classe de pools de conexões SMTP para que ele pode evitar a sobrecarga de restabelecer uma conexão para cada mensagem no mesmo servidor.</xref:System.Net.Mail.SmtpClient> Um aplicativo pode reutilizar a mesma <xref:System.Net.Mail.SmtpClient>objeto para enviar vários emails diferentes no mesmo servidor de SMTP e em muitos servidores SMTP diferentes.</xref:System.Net.Mail.SmtpClient> Como resultado, não há nenhuma maneira de determinar quando um aplicativo é concluído usando o <xref:System.Net.Mail.SmtpClient>objeto e devem ser limpos.</xref:System.Net.Mail.SmtpClient>       Quando uma sessão SMTP for concluída e o cliente quiser encerrar a conexão, ele deve enviar uma mensagem QUIT para o servidor para indicar que ele tem não mais mensagens para enviar. Isso permite que o servidor liberar os recursos associados à conexão do cliente e processar as mensagens que foram enviadas pelo cliente.       Chamar o método Dispose em um <xref:System.Net.Mail.SmtpClient>objeto que está em execução assíncrona <xref:System.Net.Mail.SmtpClient.SendAsync%2A>operação cancelará a operação de envio como se a <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>tivesse sido chamado de método.</xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient>       O <xref:System.Net.Mail.SmtpClient>classe não tiver nenhuma `Finalize` método.</xref:System.Net.Mail.SmtpClient> Portanto, um aplicativo deve chamar <xref:System.Net.Mail.SmtpClient.Dispose%2A>explicitamente liberar recursos.</xref:System.Net.Mail.SmtpClient.Dispose%2A>       O método Dispose itera todas as conexões estabelecidas para o servidor SMTP especificado no <xref:System.Net.Mail.SmtpClient.Host%2A>propriedade e envia uma mensagem QUIT seguida normalmente encerrando a conexão TCP.</xref:System.Net.Mail.SmtpClient.Host%2A> O método Dispose também libera os recursos não gerenciados usados pelo <xref:System.Net.Sockets.Socket>e, opcionalmente, libera os recursos gerenciados.</xref:System.Net.Sockets.Socket>       Chamada <xref:System.Net.Mail.SmtpClient.Dispose%2A>Quando terminar de usar o <xref:System.Net.Mail.SmtpClient>.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A> O <xref:System.Net.Mail.SmtpClient.Dispose%2A>método deixa o <xref:System.Net.Mail.SmtpClient>em um estado inutilizável.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A> Depois de chamar <xref:System.Net.Mail.SmtpClient.Dispose%2A>, você deve liberar todas as referências para o <xref:System.Net.Mail.SmtpClient>para o coletor de lixo possa recuperar a memória que o <xref:System.Net.Mail.SmtpClient>estava ocupando.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A>       Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamar <xref:System.Net.Mail.SmtpClient.Dispose%2A>antes de liberar sua última referência a <xref:System.Net.Mail.SmtpClient>.</xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Dispose%2A> Caso contrário, os recursos que está usando não serão liberados para que o coletor de lixo possa recuperar a memória."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> às versões apenas recursos não gerenciados."
  overload: System.Net.Mail.SmtpClient.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.EnableSsl
  id: EnableSsl
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: EnableSsl
  nameWithType: SmtpClient.EnableSsl
  fullName: System.Net.Mail.SmtpClient.EnableSsl
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Especifique se o <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> usa o protocolo (SSL) para criptografar a conexão."
  remarks: "A propriedade EnableSsl Especifica se o SSL é usado para acessar o servidor de email SMTP.       O valor padrão para essa propriedade também pode ser definido em uma máquina ou arquivo de configuração do aplicativo. Todas as alterações feitas à propriedade EnableSsl substituem o arquivo de configuração.       O <xref:System.Net.Mail.SmtpClient>classe só dá suporte à extensão do serviço SMTP para SMTP seguro em Transport Layer Security conforme definido na RFC 3207.</xref:System.Net.Mail.SmtpClient> Nesse modo, a sessão SMTP começa em um canal não criptografado, em seguida, um comando STARTTLS é emitido pelo cliente para o servidor para alternar para comunicações seguras usando SSL. Consulte RFC 3207 publicado pelo Engineering Task Force IETF (Internet) para obter mais informações.       Um método alternativo de conexão é em que uma sessão SSL é estabelecida com antecedência antes de qualquer protocolo de comandos são enviados. Esse método de conexão às vezes é chamado de SMTP/SSL, SMTP sobre SSL ou SMTPS e, por padrão usa a porta 465. Atualmente, não há suporte para esse método alternativo de conexão usando SSL.       Você pode usar <xref:System.Net.Mail.SmtpClient.ClientCertificates%2A>para especificar quais certificados de cliente devem ser usados para estabelecer a conexão SSL.</xref:System.Net.Mail.SmtpClient.ClientCertificates%2A> O <xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A>permite que você rejeite o certificado fornecido pelo servidor SMTP.</xref:System.Net.ServicePointManager.ServerCertificateValidationCallback%2A> O <xref:System.Net.ServicePointManager.SecurityProtocol%2A>propriedade permite que você especifique a versão do protocolo SSL para usar.</xref:System.Net.ServicePointManager.SecurityProtocol%2A>      > [!NOTE] > Se a propriedade EnableSsl está definida como `true`, e o servidor de email SMTP não anuncia STARTTLS na resposta para o EHLO comando, em seguida, uma chamada para o <xref:System.Net.Mail.SmtpClient.Send%2A>ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A>métodos lançará um <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A>"
  example:
  - "The following code example establishes an SSL connection with the SMTP server and uses the connection to send an email.  \n  \n [!code-cs[NclSSLMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_1_1.cs)]"
  syntax:
    content: public bool EnableSsl { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> usa SSL; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Mail.SmtpClient.EnableSsl*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Host
  id: Host
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Host
  nameWithType: SmtpClient.Host
  fullName: System.Net.Mail.SmtpClient.Host
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Obtém ou define o nome ou endereço IP do host usado para transações SMTP."
  remarks: "The value of the Host property can also be set using constructors or the application or machine configuration file. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n If information is specified using this property, this information overrides the configuration file settings."
  example:
  - "The following code example demonstrates sending an e-mail message by using the host and port specified in an application configuration file.  \n  \n [!code-cpp[NclMailSync#7](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_2_1.cpp)]\n [!code-cs[NclMailSync#7](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_2_1.cs)]"
  syntax:
    content: public string Host { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.String>que contém o nome ou endereço IP do computador a ser usado para transações SMTP.</xref:System.String>"
  overload: System.Net.Mail.SmtpClient.Host*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O valor especificado para uma operação de definição é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O valor especificado para uma operação de definição é igual a &lt;xref:System.String?displayProperty=fullName&gt; (&quot;&quot;)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando está sendo enviado um email, você não pode alterar o valor dessa propriedade."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  id: OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: OnSendCompleted(AsyncCompletedEventArgs)
  nameWithType: SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
  fullName: System.Net.Mail.SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Gera o <xref href=&quot;System.Net.Mail.SmtpClient.SendCompleted&quot;> </xref> eventos."
  remarks: "Classes que herdam o <xref:System.Net.Mail.SmtpClient>classe pode substituir o OnSendCompleted método adicional de executar as tarefas quando o <xref:System.Net.Mail.SmtpClient.SendCompleted>evento ocorre.</xref:System.Net.Mail.SmtpClient.SendCompleted> </xref:System.Net.Mail.SmtpClient>       OnSendCompleted também permite que classes derivadas tratar <xref:System.Net.Mail.SmtpClient.SendCompleted>sem anexar um representante.</xref:System.Net.Mail.SmtpClient.SendCompleted> Essa é a técnica preferida para tratar <xref:System.Net.Mail.SmtpClient.SendCompleted>na classe derivada.</xref:System.Net.Mail.SmtpClient.SendCompleted>"
  syntax:
    content: protected void OnSendCompleted (System.ComponentModel.AsyncCompletedEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.AsyncCompletedEventArgs
      description: "Um <xref:System.ComponentModel.AsyncCompletedEventArgs>que contém dados do evento.</xref:System.ComponentModel.AsyncCompletedEventArgs>"
  overload: System.Net.Mail.SmtpClient.OnSendCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.PickupDirectoryLocation
  id: PickupDirectoryLocation
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: PickupDirectoryLocation
  nameWithType: SmtpClient.PickupDirectoryLocation
  fullName: System.Net.Mail.SmtpClient.PickupDirectoryLocation
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Obtém ou define a pasta onde os aplicativos salvar mensagens de email a ser processada pelo servidor SMTP local."
  remarks: "Mensagens de email no diretório de recebimento são enviadas automaticamente por um servidor SMTP local (se houver), como o IIS.       O valor padrão para essa propriedade também pode ser definido em uma máquina ou arquivo de configuração do aplicativo. Todas as alterações feitas à propriedade PickupDirectoryLocation substituem o arquivo de configuração."
  syntax:
    content: public string PickupDirectoryLocation { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.String>que especifica o diretório de recebimento de mensagens de email.</xref:System.String>"
  overload: System.Net.Mail.SmtpClient.PickupDirectoryLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Port
  id: Port
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Port
  nameWithType: SmtpClient.Port
  fullName: System.Net.Mail.SmtpClient.Port
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Obtém ou define a porta usada para transações SMTP."
  remarks: "O valor da propriedade de porta também pode ser definido usando construtores ou o aplicativo ou arquivo de configuração de máquina. Para obter mais informações sobre como usar arquivos de configuração, consulte [ \\&lt; mailSettings\\&gt; (Configurações de rede) do elemento](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md). Se a informação é especificada usando essa propriedade, essas informações substituem o arquivo de configuração."
  example:
  - "The following code example demonstrates sending an e-mail message by using the host and port specified in an application configuration file.  \n  \n [!code-cpp[NclMailSync#7](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_5_1.cpp)]\n [!code-cs[NclMailSync#7](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_5_1.cs)]"
  syntax:
    content: public int Port { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>que contém o número da porta no host SMTP.</xref:System.Int32> O valor padrão é 25."
  overload: System.Net.Mail.SmtpClient.Port*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado para uma operação de definição é menor ou igual a zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando está sendo enviado um email, você não pode alterar o valor dessa propriedade."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)
  id: Send(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Send(MailMessage)
  nameWithType: SmtpClient.Send(MailMessage)
  fullName: System.Net.Mail.SmtpClient.Send(MailMessage)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Envia a mensagem especificada para um servidor SMTP para entrega."
  remarks: "Esse método bloqueia enquanto o email é transmitido. Você pode especificar um valor de tempo limite usando o <xref:System.Net.Mail.SmtpClient.Timeout%2A>propriedade para garantir que o método retorna após um período especificado de tempo ter decorrido.</xref:System.Net.Mail.SmtpClient.Timeout%2A>       Antes de chamar esse método, o <xref:System.Net.Mail.SmtpClient.Host%2A>e <xref:System.Net.Mail.SmtpClient.Port%2A>propriedades devem ser definidas por meio de arquivos de configuração, definindo as propriedades relevantes ou passando essas informações para o <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>construtor.</xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Host%2A>       Você não pode chamar esse método, se houver uma mensagem que está sendo enviada de forma assíncrona.       Se o host SMTP solicitar credenciais, você deve defini-las antes de chamar esse método. Para especificar credenciais, use o <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>ou <xref:System.Net.Mail.SmtpClient.Credentials%2A>Propriedades.</xref:System.Net.Mail.SmtpClient.Credentials%2A> </xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>       Se você receber um <xref:System.Net.Mail.SmtpException>exceção, verifique o <xref:System.Net.Mail.SmtpException.StatusCode%2A>propriedade para localizar o motivo pelo qual a operação falhou.</xref:System.Net.Mail.SmtpException.StatusCode%2A> </xref:System.Net.Mail.SmtpException> O <xref:System.Net.Mail.SmtpException>também pode conter uma exceção interna que indica o motivo da falha na operação.</xref:System.Net.Mail.SmtpException>       Ao enviar email usando <xref:System.Net.Mail.SmtpClient.Send%2A>para vários destinatários e o protocolo SMTP, o servidor aceita alguns destinatários como válido e rejeita a outras pessoas, <xref:System.Net.Mail.SmtpClient.Send%2A>envia email aos destinatários aceitos e, em seguida, um <xref:System.Net.Mail.SmtpFailedRecipientsException>é gerada.</xref:System.Net.Mail.SmtpFailedRecipientsException> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> A exceção contém uma lista de destinatários que foram rejeitadas.      > [!NOTE] > Se o <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>está definida como `true`, e o servidor de email SMTP não anuncia STARTTLS na resposta para o EHLO comando, em seguida, uma chamada para o <xref:System.Net.Mail.SmtpClient.Send%2A>ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A>métodos lançará um <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.EnableSsl%2A>"
  example:
  - "The following code example demonstrates using this method.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_2_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_2_1.cs)]"
  syntax:
    content: public void Send (System.Net.Mail.MailMessage message);
    parameters:
    - id: message
      type: System.Net.Mail.MailMessage
      description: "Um <xref href=&quot;System.Net.Mail.MailMessage&quot;> </xref> que contém a mensagem a enviar."
  overload: System.Net.Mail.SmtpClient.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Isso <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> tem um <> </> *> chamadas em andamento.       - ou - &lt;xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName&gt; é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       - ou - não há nenhum destinatário especificado em &lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;, &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;, e &lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt; propriedades.       -or-       <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <> </> *> está definida como <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> e <> </> *> é igual a cadeia de caracteres vazia (&quot;&quot;).       - ou - <> </> *> está definida como <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> e <xref:System.Net.Mail.SmtpClient.Port*>for zero, um negativo de número ou maior que 65.535.</xref:System.Net.Mail.SmtpClient.Port*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "Falha na conexão com o servidor SMTP.       - ou - falha na autenticação.       - ou - a operação atingiu o tempo limite.       -or-       <>*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       - ou - <xref:System.Net.Mail.SmtpClient.EnableSsl*>é definido como <xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;> </xref> , mas o servidor de email SMTP não anunciar STARTTLS na resposta para o comando EHLO.</xref:System.Net.Mail.SmtpClient.EnableSsl*>"
  - type: System.Net.Mail.SmtpFailedRecipientsException
    commentId: T:System.Net.Mail.SmtpFailedRecipientsException
    description: "O <code> message </code> não pôde ser entregue a um ou mais dos destinatários no &lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;, &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;, ou &lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)
  id: Send(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Send(String,String,String,String)
  nameWithType: SmtpClient.Send(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.Send(String,String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Envia a mensagem de email especificado para um servidor SMTP para entrega. O remetente da mensagem, os destinatários, assunto e corpo da mensagem são especificadas usando <xref:System.String>objetos.</xref:System.String>"
  remarks: "Esse método bloqueia enquanto o email é transmitido. Você pode especificar um valor de tempo limite usando o <xref:System.Net.Mail.SmtpClient.Timeout%2A>propriedade para garantir que o método retorna após um período especificado de tempo ter decorrido.</xref:System.Net.Mail.SmtpClient.Timeout%2A>       Antes de chamar esse método, o <xref:System.Net.Mail.SmtpClient.Host%2A>e <xref:System.Net.Mail.SmtpClient.Port%2A>propriedades devem ser definidas por meio de arquivos de configuração, definindo as propriedades relevantes ou passando essas informações para o <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>construtor.</xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Host%2A>       Você não pode chamar esse método, se houver uma mensagem que está sendo enviada de forma assíncrona.       Se o host SMTP solicitar credenciais, você deve defini-las antes de chamar esse método. Para especificar credenciais, use o <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>ou <xref:System.Net.Mail.SmtpClient.Credentials%2A>Propriedades.</xref:System.Net.Mail.SmtpClient.Credentials%2A> </xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>       Se você receber um <xref:System.Net.Mail.SmtpException>exceção, verifique o <xref:System.Net.Mail.SmtpException.StatusCode%2A>propriedade para localizar o motivo pelo qual a operação falhou.</xref:System.Net.Mail.SmtpException.StatusCode%2A> </xref:System.Net.Mail.SmtpException> O <xref:System.Net.Mail.SmtpException>também pode conter uma exceção interna que indica o motivo da falha na operação.</xref:System.Net.Mail.SmtpException>       Ao enviar email usando <xref:System.Net.Mail.SmtpClient.Send%2A>para vários destinatários e o protocolo SMTP, o servidor aceita alguns destinatários como válido e rejeita a outras pessoas, <xref:System.Net.Mail.SmtpClient.Send%2A>envia email aos destinatários aceitos e, em seguida, um <xref:System.Net.Mail.SmtpFailedRecipientsException>é gerada.</xref:System.Net.Mail.SmtpFailedRecipientsException> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> A exceção contém uma lista de destinatários que foram rejeitadas.      > [!NOTE] > Se o <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>está definida como `true`, e o servidor de email SMTP não anuncia STARTTLS na resposta para o EHLO comando, em seguida, uma chamada para o <xref:System.Net.Mail.SmtpClient.Send%2A>ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A>métodos lançará um <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.EnableSsl%2A>"
  syntax:
    content: public void Send (string from, string recipients, string subject, string body);
    parameters:
    - id: from
      type: System.String
      description: "Um <xref:System.String>que contém as informações de endereço do remetente da mensagem.</xref:System.String>"
    - id: recipients
      type: System.String
      description: "Um <xref:System.String>que contém os endereços que a mensagem é enviada para.</xref:System.String>"
    - id: subject
      type: System.String
      description: "Um <xref:System.String>que contém a linha de assunto da mensagem.</xref:System.String>"
    - id: body
      type: System.String
      description: "Um <xref:System.String>que contém o corpo da mensagem.</xref:System.String>"
  overload: System.Net.Mail.SmtpClient.Send*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>recipients</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String>.       -or-       <code>recipients</code> is <xref:System.String>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Isso <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> tem um <> </> *> chamadas em andamento.       -or-       <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <> </> *> está definida como <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> e <> </> *> é igual a cadeia de caracteres vazia (&quot;&quot;).       - ou - <> </> *> está definida como <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> e <xref:System.Net.Mail.SmtpClient.Port*>for zero, um negativo de número ou maior que 65.535.</xref:System.Net.Mail.SmtpClient.Port*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "Falha na conexão com o servidor SMTP.       - ou - falha na autenticação.       - ou - a operação atingiu o tempo limite.       -or-       <>*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       - ou - <xref:System.Net.Mail.SmtpClient.EnableSsl*>é definido como <xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;> </xref> , mas o servidor de email SMTP não anunciar STARTTLS na resposta para o comando EHLO.</xref:System.Net.Mail.SmtpClient.EnableSsl*>"
  - type: System.Net.Mail.SmtpFailedRecipientsException
    commentId: T:System.Net.Mail.SmtpFailedRecipientsException
    description: "A mensagem não pôde ser entregue a um ou mais dos destinatários no <code> recipients </code>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)
  id: SendAsync(System.Net.Mail.MailMessage,System.Object)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendAsync(MailMessage,Object)
  nameWithType: SmtpClient.SendAsync(MailMessage,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(MailMessage,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Envia a mensagem de email especificado para um servidor SMTP para entrega. Este método não bloqueia o thread de chamada e permite que o chamador passar um objeto para o método que é invocado quando a operação for concluída."
  remarks: "Para receber notificação quando o email foi enviado ou a operação foi cancelada, adicione um manipulador de eventos para o <xref:System.Net.Mail.SmtpClient.SendCompleted>evento.</xref:System.Net.Mail.SmtpClient.SendCompleted> Você pode cancelar um <xref:System.Net.Mail.SmtpClient.SendAsync%2A>operação chamando o <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>método.</xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> </xref:System.Net.Mail.SmtpClient.SendAsync%2A>       Depois de chamar <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, você deve aguardar a transmissão de email concluir antes de tentar enviar outra mensagem de email usando <xref:System.Net.Mail.SmtpClient.Send%2A>ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.</xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.SendAsync%2A>       Antes de chamar esse método, o <xref:System.Net.Mail.SmtpClient.Host%2A>e <xref:System.Net.Mail.SmtpClient.Port%2A>deve ser definido por meio de arquivos de configuração, definindo as propriedades relevantes ou passando essas informações para o <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>construtor.</xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Host%2A>       Se o host SMTP solicitar credenciais, você deve defini-las antes de chamar esse método. Para especificar credenciais, use o <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>ou <xref:System.Net.Mail.SmtpClient.Credentials%2A>Propriedades.</xref:System.Net.Mail.SmtpClient.Credentials%2A> </xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>       Se você receber um <xref:System.Net.Mail.SmtpException>exceção, verifique o <xref:System.Net.Mail.SmtpException.StatusCode%2A>propriedade para localizar o motivo pelo qual a operação falhou.</xref:System.Net.Mail.SmtpException.StatusCode%2A> </xref:System.Net.Mail.SmtpException> O <xref:System.Net.Mail.SmtpException>também pode conter uma exceção interna que indica o motivo da falha na operação.</xref:System.Net.Mail.SmtpException>       Ao enviar email usando <xref:System.Net.Mail.SmtpClient.SendAsync%2A>a vários destinatários, se o servidor SMTP aceita alguns destinatários como válido e rejeita a outras pessoas, um <xref:System.Net.Mail.SmtpException>será lançada com um <xref:System.NullReferenceException>para a exceção interna.</xref:System.NullReferenceException> </xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> Se isso ocorrer, <xref:System.Net.Mail.SmtpClient.SendAsync%2A>Falha ao enviar email para qualquer um dos destinatários.</xref:System.Net.Mail.SmtpClient.SendAsync%2A>       Seu aplicativo pode detectar um erro de validação de certificado de servidor, examinando o <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>propriedade passado para o <xref:System.Net.Mail.SendCompletedEventHandler>delegar.</xref:System.Net.Mail.SendCompletedEventHandler> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>       O <xref:System.Net.Mail.SmtpClient.Timeout%2A>propriedade não tem nenhum efeito um <xref:System.Net.Mail.SmtpClient.SendAsync%2A>chame.</xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Timeout%2A>       Para enviar email e bloco enquanto ele é transmitido para o servidor SMTP, use um do <xref:System.Net.Mail.SmtpClient.Send%2A>métodos.</xref:System.Net.Mail.SmtpClient.Send%2A>      > [!NOTE] > Se o <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>está definida como `true`, e o servidor de email SMTP não anuncia STARTTLS na resposta para o EHLO comando, em seguida, uma chamada para o <xref:System.Net.Mail.SmtpClient.Send%2A>ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A>métodos lançará um <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.EnableSsl%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/92b04d2f-ebb5-4da9-8cad-_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/92b04d2f-ebb5-4da9-8cad-_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/92b04d2f-ebb5-4da9-8cad-_1.vb)]"
  syntax:
    content: public void SendAsync (System.Net.Mail.MailMessage message, object userToken);
    parameters:
    - id: message
      type: System.Net.Mail.MailMessage
      description: "Um <xref href=&quot;System.Net.Mail.MailMessage&quot;> </xref> que contém a mensagem a enviar."
    - id: userToken
      type: System.Object
      description: "Um objeto definido pelo usuário que é passado para o método invocado quando a operação assíncrona é concluída."
  overload: System.Net.Mail.SmtpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - &lt;xref:System.Net.Mail.MailMessage.From%2A?displayProperty=fullName&gt; é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Isso <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> tem um <> </> *> chamadas em andamento.       - ou - não há nenhum destinatário especificado em &lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;, &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;, e &lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt; propriedades.       -or-       <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <> </> *> está definida como <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> e <> </> *> é igual a cadeia de caracteres vazia (&quot;&quot;).       - ou - <> </> *> está definida como <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> e <xref:System.Net.Mail.SmtpClient.Port*>for zero, um negativo de número ou maior que 65.535.</xref:System.Net.Mail.SmtpClient.Port*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "Falha na conexão com o servidor SMTP.       - ou - falha na autenticação.       - ou - a operação atingiu o tempo limite.       -or-       <>*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       - ou - <xref:System.Net.Mail.SmtpClient.EnableSsl*>é definido como <xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;> </xref> , mas o servidor de email SMTP não anunciar STARTTLS na resposta para o comando EHLO.</xref:System.Net.Mail.SmtpClient.EnableSsl*>       - ou - <code> message </code> não pôde ser entregue a um ou mais dos destinatários no &lt;xref:System.Net.Mail.MailMessage.To%2A?displayProperty=fullName&gt;, &lt;xref:System.Net.Mail.MailMessage.CC%2A?displayProperty=fullName&gt;, ou &lt;xref:System.Net.Mail.MailMessage.Bcc%2A?displayProperty=fullName&gt;."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)
  id: SendAsync(System.String,System.String,System.String,System.String,System.Object)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendAsync(String,String,String,String,Object)
  nameWithType: SmtpClient.SendAsync(String,String,String,String,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(String,String,String,String,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Envia uma mensagem de email para um servidor SMTP para entrega. O remetente da mensagem, os destinatários, assunto e corpo da mensagem são especificadas usando <xref:System.String>objetos.</xref:System.String> Este método não bloqueia o thread de chamada e permite que o chamador passar um objeto para o método que é invocado quando a operação for concluída."
  remarks: "Para receber notificação quando o email foi enviado ou a operação foi cancelada, adicione um manipulador de eventos para o <xref:System.Net.Mail.SmtpClient.SendCompleted>evento.</xref:System.Net.Mail.SmtpClient.SendCompleted> Você pode cancelar um <xref:System.Net.Mail.SmtpClient.SendAsync%2A>operação chamando o <xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A>método.</xref:System.Net.Mail.SmtpClient.SendAsyncCancel%2A> </xref:System.Net.Mail.SmtpClient.SendAsync%2A>       Depois de chamar <xref:System.Net.Mail.SmtpClient.SendAsync%2A>, você deve aguardar a transmissão de email concluir antes de tentar enviar outra mensagem de email usando <xref:System.Net.Mail.SmtpClient.Send%2A>ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A>.</xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.SendAsync%2A>       Antes de chamar esse método, o <xref:System.Net.Mail.SmtpClient.Host%2A>e <xref:System.Net.Mail.SmtpClient.Port%2A>propriedades devem ser definidas por meio de arquivos de configuração ou definindo as propriedades ou passando essas informações para o <xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29>construtor.</xref:System.Net.Mail.SmtpClient.%23ctor%28System.String%2CSystem.Int32%29> </xref:System.Net.Mail.SmtpClient.Port%2A> </xref:System.Net.Mail.SmtpClient.Host%2A>       Se o host SMTP solicitar credenciais, você deve defini-las antes de chamar esse método. Para especificar credenciais, use o <xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>ou <xref:System.Net.Mail.SmtpClient.Credentials%2A>propriedade.</xref:System.Net.Mail.SmtpClient.Credentials%2A> </xref:System.Net.Mail.SmtpClient.UseDefaultCredentials%2A>       Se você receber um <xref:System.Net.Mail.SmtpException>exceção, verifique o <xref:System.Net.Mail.SmtpException.StatusCode%2A>propriedade para localizar o motivo pelo qual a operação falhou.</xref:System.Net.Mail.SmtpException.StatusCode%2A> </xref:System.Net.Mail.SmtpException> O <xref:System.Net.Mail.SmtpException>também pode conter uma exceção interna que indica o motivo da falha na operação.</xref:System.Net.Mail.SmtpException>       Ao enviar email usando <xref:System.Net.Mail.SmtpClient.SendAsync%2A>a vários destinatários, se o servidor SMTP aceita alguns destinatários como válido e rejeita a outras pessoas, um <xref:System.Net.Mail.SmtpException>será lançada com um <xref:System.NullReferenceException>para a exceção interna.</xref:System.NullReferenceException> </xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> Se isso ocorrer, <xref:System.Net.Mail.SmtpClient.SendAsync%2A>Falha ao enviar email para qualquer um dos destinatários.</xref:System.Net.Mail.SmtpClient.SendAsync%2A>       Seu aplicativo pode detectar um erro de validação de certificado de servidor, examinando o <xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>propriedade passado para o <xref:System.Net.Mail.SendCompletedEventHandler>delegar.</xref:System.Net.Mail.SendCompletedEventHandler> </xref:System.ComponentModel.AsyncCompletedEventArgs.Error%2A>       O <xref:System.Net.Mail.SmtpClient.Timeout%2A>propriedade não tem nenhum efeito um <xref:System.Net.Mail.SmtpClient.SendAsync%2A>chame.</xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Timeout%2A>       Para enviar email e bloco enquanto ele é transmitido para o servidor SMTP, use um do <xref:System.Net.Mail.SmtpClient.Send%2A>métodos.</xref:System.Net.Mail.SmtpClient.Send%2A>      > [!NOTE] > Se o <xref:System.Net.Mail.SmtpClient.EnableSsl%2A>está definida como `true`, e o servidor de email SMTP não anuncia STARTTLS na resposta para o EHLO comando, em seguida, uma chamada para o <xref:System.Net.Mail.SmtpClient.Send%2A>ou <xref:System.Net.Mail.SmtpClient.SendAsync%2A>métodos lançará um <xref:System.Net.Mail.SmtpException>.</xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient.SendAsync%2A> </xref:System.Net.Mail.SmtpClient.Send%2A> </xref:System.Net.Mail.SmtpClient.EnableSsl%2A>"
  syntax:
    content: public void SendAsync (string from, string recipients, string subject, string body, object userToken);
    parameters:
    - id: from
      type: System.String
      description: "Um <xref:System.String>que contém as informações de endereço do remetente da mensagem.</xref:System.String>"
    - id: recipients
      type: System.String
      description: "Um <xref:System.String>que contém o endereço que a mensagem é enviada para.</xref:System.String>"
    - id: subject
      type: System.String
      description: "Um <xref:System.String>que contém a linha de assunto da mensagem.</xref:System.String>"
    - id: body
      type: System.String
      description: "Um <xref:System.String>que contém o corpo da mensagem.</xref:System.String>"
    - id: userToken
      type: System.Object
      description: "Um objeto definido pelo usuário que é passado para o método invocado quando a operação assíncrona é concluída."
  overload: System.Net.Mail.SmtpClient.SendAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>recipient</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String>.       -or-       <code>recipient</code> is <xref:System.String>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Isso <xref href=&quot;System.Net.Mail.SmtpClient&quot;> </xref> tem um <> </> *> chamadas em andamento.       -or-       <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <> </> *> está definida como <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> e <> </> *> é igual a cadeia de caracteres vazia (&quot;&quot;).       - ou - <> </> *> está definida como <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;> </xref> e <xref:System.Net.Mail.SmtpClient.Port*>for zero, um negativo de número ou maior que 65.535.</xref:System.Net.Mail.SmtpClient.Port*>"
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  - type: System.Net.Mail.SmtpException
    commentId: T:System.Net.Mail.SmtpException
    description: "Falha na conexão com o servidor SMTP.       - ou - falha na autenticação.       - ou - a operação atingiu o tempo limite.       -or-       <>*> is set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> but the <>*> property is set to <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref> or <xref href=&quot;System.Net.Mail.SmtpDeliveryMethod&quot;></xref>.       - ou - <xref:System.Net.Mail.SmtpClient.EnableSsl*>é definido como <xref uid=&quot;langword_csharp_true,&quot; name=&quot;true,&quot; href=&quot;&quot;> </xref> , mas o servidor de email SMTP não anunciar STARTTLS na resposta para o comando EHLO.</xref:System.Net.Mail.SmtpClient.EnableSsl*>       - ou - a mensagem não pôde ser entregue a um ou mais dos destinatários no <code> recipients </code>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendAsyncCancel
  id: SendAsyncCancel
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendAsyncCancel()
  nameWithType: SmtpClient.SendAsyncCancel()
  fullName: System.Net.Mail.SmtpClient.SendAsyncCancel()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Cancela uma operação assíncrona para enviar uma mensagem de email."
  remarks: "Use o método SendAsyncCancel para cancelar um pendente <xref:System.Net.Mail.SmtpClient.SendAsync%2A>operação.</xref:System.Net.Mail.SmtpClient.SendAsync%2A> Se não houver mensagens aguardando para serem enviadas, esse método libera recursos usados para armazenar o email. Se não houver nenhum email aguardando para serem enviadas, esse método não fará nada."
  example:
  - "The following code example demonstrates sending an e-mail message asynchronously. The user has the option to cancel the mail if it has not been sent.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/m-system.net.mail.smtpcl_3_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/m-system.net.mail.smtpcl_3_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/m-system.net.mail.smtpcl_3_1.vb)]"
  syntax:
    content: public void SendAsyncCancel ();
    parameters: []
  overload: System.Net.Mail.SmtpClient.SendAsyncCancel*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi descartado."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendCompleted
  id: SendCompleted
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendCompleted
  nameWithType: SmtpClient.SendCompleted
  fullName: System.Net.Mail.SmtpClient.SendCompleted
  type: Event
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Ocorre quando uma operação de envio de email assíncrona é concluída."
  remarks: "O evento SendCompleted é gerado sempre que uma mensagem de email é enviada assincronamente quando a operação de envio é concluído. Para enviar uma mensagem de email de forma assíncrona, use o <xref:System.Net.Mail.SmtpClient.SendAsync%2A>métodos.</xref:System.Net.Mail.SmtpClient.SendAsync%2A>       <xref:System.Net.Mail.SendCompletedEventHandler>é o representante para SendCompleted.</xref:System.Net.Mail.SendCompletedEventHandler> O <xref:System.ComponentModel.AsyncCompletedEventArgs>classe fornece o manipulador de eventos com dados de evento.</xref:System.ComponentModel.AsyncCompletedEventArgs>"
  example:
  - "The following code example demonstrates sending an e-mail message asynchronously.  \n  \n [!code-cs[NclMailAsync#1](~/add/codesnippet/csharp/e-system.net.mail.smtpcl_1.cs)]\n [!code-cpp[NclMailAsync#1](~/add/codesnippet/cpp/e-system.net.mail.smtpcl_1.cpp)]\n [!code-vb[NclMailAsync#1](~/add/codesnippet/visualbasic/e-system.net.mail.smtpcl_1.vb)]"
  syntax:
    content: public event System.Net.Mail.SendCompletedEventHandler SendCompleted;
    return:
      type: System.Net.Mail.SendCompletedEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  id: SendMailAsync(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendMailAsync(MailMessage)
  nameWithType: SmtpClient.SendMailAsync(MailMessage)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(MailMessage)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Envia a mensagem especificada para um servidor SMTP para entrega como uma operação assíncrona."
  remarks: "Essa operação não será bloqueada. Retornado <xref:System.Threading.Tasks.Task>> objeto será concluída quando a mensagem foi enviada.</xref:System.Threading.Tasks.Task>"
  syntax:
    content: public System.Threading.Tasks.Task SendMailAsync (System.Net.Mail.MailMessage message);
    parameters:
    - id: message
      type: System.Net.Mail.MailMessage
      description: "Um <xref href=&quot;System.Net.Mail.MailMessage&quot;> </xref> que contém a mensagem a enviar."
    return:
      type: System.Threading.Tasks.Task
      description: "Retorna <xref:System.Threading.Tasks.Task>.</xref:System.Threading.Tasks.Task>       O objeto de tarefa que representa a operação assíncrona."
  overload: System.Net.Mail.SmtpClient.SendMailAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>message</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)
  id: SendMailAsync(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: SendMailAsync(String,String,String,String)
  nameWithType: SmtpClient.SendMailAsync(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(String,String,String,String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Envia a mensagem especificada para um servidor SMTP para entrega como uma operação assíncrona. . O remetente da mensagem, os destinatários, assunto e corpo da mensagem são especificadas usando <xref:System.String>objetos.</xref:System.String>"
  remarks: "Essa operação não será bloqueada. Retornado <xref:System.Threading.Tasks.Task>> objeto será concluída quando a mensagem foi enviada.</xref:System.Threading.Tasks.Task>"
  syntax:
    content: public System.Threading.Tasks.Task SendMailAsync (string from, string recipients, string subject, string body);
    parameters:
    - id: from
      type: System.String
      description: "Um <xref:System.String>que contém as informações de endereço do remetente da mensagem.</xref:System.String>"
    - id: recipients
      type: System.String
      description: "Um <xref:System.String>que contém os endereços que a mensagem é enviada para.</xref:System.String>"
    - id: subject
      type: System.String
      description: "Um <xref:System.String>que contém a linha de assunto da mensagem.</xref:System.String>"
    - id: body
      type: System.String
      description: "Um <xref:System.String>que contém o corpo da mensagem.</xref:System.String>"
    return:
      type: System.Threading.Tasks.Task
      description: "Retorna <xref:System.Threading.Tasks.Task>.</xref:System.Threading.Tasks.Task>       O objeto de tarefa que representa a operação assíncrona."
  overload: System.Net.Mail.SmtpClient.SendMailAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>from</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>recipients</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>from</code>is <xref:System.String.Empty>.       -or-       <code>recipients</code> is <xref:System.String.Empty>."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.ServicePoint
  id: ServicePoint
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: ServicePoint
  nameWithType: SmtpClient.ServicePoint
  fullName: System.Net.Mail.SmtpClient.ServicePoint
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Obtém a conexão de rede usada para transmitir a mensagem de email."
  remarks: "As configurações para a propriedade de ServicePoint são criadas usando os padrões especificados no aplicativo ou arquivos de configuração de máquina e a <xref:System.Net.ServicePointManager>classe.</xref:System.Net.ServicePointManager>"
  example:
  - "The following code example demonstrates accessing the ServicePoint property.  \n  \n [!code-cpp[NclMailSync#1](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_7_1.cpp)]\n [!code-cs[NclMailSync#1](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_7_1.cs)]"
  syntax:
    content: public System.Net.ServicePoint ServicePoint { get; }
    return:
      type: System.Net.ServicePoint
      description: "Um <xref href=&quot;System.Net.ServicePoint&quot;> </xref> que se conecta ao <xref:System.Net.Mail.SmtpClient.Host*>propriedade usada para SMTP.</xref:System.Net.Mail.SmtpClient.Host*>"
  overload: System.Net.Mail.SmtpClient.ServicePoint*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<>*> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou cadeia de caracteres vazia (&quot;&quot;).       -or-       <>*> is zero."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.TargetName
  id: TargetName
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: TargetName
  nameWithType: SmtpClient.TargetName
  fullName: System.Net.Mail.SmtpClient.TargetName
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Obtém ou define o serviço provedor SPN (nome) a ser usada para autenticação com proteção estendida."
  remarks: "A propriedade TargetName é usada com a autenticação integrada do Windows quando um aplicativo estiver usando proteção estendida. O <xref:System.Net.Mail.SmtpClient>pode oferecer proteção estendida para garantir que as respostas de desafio de credencial contêm informações específicas do serviço (um SPN) e, se necessário, canal específicas informações (um token de associação de canal ou CBT).</xref:System.Net.Mail.SmtpClient> Com essas informações em trocas de credencial, os serviços são capazes de melhor proteção contra o uso de respostas de desafio de credencial que pode ter sido obtido incorretamente.       O valor padrão para essa propriedade também pode ser definido em uma máquina ou arquivo de configuração do aplicativo. Todas as alterações feitas à propriedade TargetName substituem o arquivo de configuração."
  syntax:
    content: public string TargetName { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.String>que especifica o SPN a ser usado para proteção estendida.</xref:System.String> O valor padrão para este SPN é do formulário &quot;SMTPSVC /&lt;host&gt;&quot; onde &lt;host&gt; é o nome do host do servidor de email SMTP."
  overload: System.Net.Mail.SmtpClient.TargetName*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.Timeout
  id: Timeout
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: Timeout
  nameWithType: SmtpClient.Timeout
  fullName: System.Net.Mail.SmtpClient.Timeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Obtém ou define um valor que especifica a quantidade de tempo após o qual um síncrono <xref:System.Net.Mail.SmtpClient.Send*>chamada expire.</xref:System.Net.Mail.SmtpClient.Send*>"
  remarks: "Por padrão, chama o <xref:System.Net.Mail.SmtpClient.Send%2A>Bloco de métodos até que a operação seja concluída.</xref:System.Net.Mail.SmtpClient.Send%2A> Se você definir a propriedade de tempo limite como um valor positivo e um <xref:System.Net.Mail.SmtpClient.Send%2A>não é possível concluir a operação no tempo alocado, a <xref:System.Net.Mail.SmtpClient>classe lança um <xref:System.Net.Mail.SmtpException>exceção.</xref:System.Net.Mail.SmtpException> </xref:System.Net.Mail.SmtpClient> </xref:System.Net.Mail.SmtpClient.Send%2A>       Para enviar uma mensagem e continuar em execução no thread do aplicativo, use o <xref:System.Net.Mail.SmtpClient.SendAsync%2A>método.</xref:System.Net.Mail.SmtpClient.SendAsync%2A>"
  example:
  - "The following code example demonstrates getting and setting the time-out value.  \n  \n [!code-cpp[NclMailSync#3](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_6_1.cpp)]\n [!code-cs[NclMailSync#3](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_6_1.cs)]"
  syntax:
    content: public int Timeout { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>que especifica o valor de tempo limite em milissegundos.</xref:System.Int32> O valor padrão é 100.000 (100 segundos)."
  overload: System.Net.Mail.SmtpClient.Timeout*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado para uma operação de definição menor que zero."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando está sendo enviado um email, você não pode alterar o valor dessa propriedade."
  platform:
  - net462
- uid: System.Net.Mail.SmtpClient.UseDefaultCredentials
  id: UseDefaultCredentials
  parent: System.Net.Mail.SmtpClient
  langs:
  - csharp
  name: UseDefaultCredentials
  nameWithType: SmtpClient.UseDefaultCredentials
  fullName: System.Net.Mail.SmtpClient.UseDefaultCredentials
  type: Property
  assemblies:
  - System
  namespace: System.Net.Mail
  summary: "Obtém ou define um <xref:System.Boolean>valor que controla se o <xref:System.Net.CredentialCache.DefaultCredentials*>enviado com solicitações.</xref:System.Net.CredentialCache.DefaultCredentials*> </xref:System.Boolean>"
  remarks: "Some SMTP servers require that the client be authenticated before the server sends e-mail on its behalf. Set this property to `true` when this <xref:System.Net.Mail.SmtpClient> object should, if requested by the server, authenticate using the default credentials of the currently logged on user. For client applications, this is the desired behavior in most scenarios.  \n  \n Credentials information can also be specified using the application and machine configuration files. For more information, see [\\&lt;mailSettings\\&gt; Element (Network Settings)](../Topic/%3CmailSettings%3E%20Element%20\\(Network%20Settings\\).md).  \n  \n If the UseDefaultCredentials property is set to `false,` then the value set in the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property will be used for the credentials when connecting to the server. If the UseDefaultCredentials property is set to `false` and the <xref:System.Net.Mail.SmtpClient.Credentials%2A> property has not been set, then mail is sent to the server anonymously.  \n  \n> [!CAUTION]\n>  If you provide credentials for basic authentication, they are sent to the server in clear text. This can present a security issue because your credentials can be seen, and then used by others."
  example:
  - "The following code example demonstrates using this property.  \n  \n [!code-cpp[NclMailSync#2](~/add/codesnippet/cpp/p-system.net.mail.smtpcl_4_1.cpp)]\n [!code-cs[NclMailSync#2](~/add/codesnippet/csharp/p-system.net.mail.smtpcl_4_1.cs)]"
  syntax:
    content: public bool UseDefaultCredentials { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as credenciais padrão são usadas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Mail.SmtpClient.UseDefaultCredentials*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando está sendo enviado um email, você não pode alterar o valor dessa propriedade."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.Net.Mail.SmtpException
  parent: System.Net.Mail
  isExternal: false
  name: SmtpException
  nameWithType: SmtpException
  fullName: System.Net.Mail.SmtpException
- uid: System.Net.Mail.SmtpFailedRecipientsException
  parent: System.Net.Mail
  isExternal: false
  name: SmtpFailedRecipientsException
  nameWithType: SmtpFailedRecipientsException
  fullName: System.Net.Mail.SmtpFailedRecipientsException
- uid: System.Net.Mail.SmtpClient.#ctor
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient()
  nameWithType: SmtpClient.SmtpClient()
  fullName: System.Net.Mail.SmtpClient.SmtpClient()
- uid: System.Net.Mail.SmtpClient.#ctor(System.String)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient(String)
  nameWithType: SmtpClient.SmtpClient(String)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Mail.SmtpClient.#ctor(System.String,System.Int32)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient(String,Int32)
  nameWithType: SmtpClient.SmtpClient(String,Int32)
  fullName: System.Net.Mail.SmtpClient.SmtpClient(String,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Mail.SmtpClient.ClientCertificates
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ClientCertificates
  nameWithType: SmtpClient.ClientCertificates
  fullName: System.Net.Mail.SmtpClient.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Net.Mail.SmtpClient.Credentials
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Credentials
  nameWithType: SmtpClient.Credentials
  fullName: System.Net.Mail.SmtpClient.Credentials
- uid: System.Net.ICredentialsByHost
  parent: System.Net
  isExternal: true
  name: ICredentialsByHost
  nameWithType: ICredentialsByHost
  fullName: System.Net.ICredentialsByHost
- uid: System.Net.Mail.SmtpClient.DeliveryFormat
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryFormat
  nameWithType: SmtpClient.DeliveryFormat
  fullName: System.Net.Mail.SmtpClient.DeliveryFormat
- uid: System.Net.Mail.SmtpDeliveryFormat
  parent: System.Net.Mail
  isExternal: false
  name: SmtpDeliveryFormat
  nameWithType: SmtpDeliveryFormat
  fullName: System.Net.Mail.SmtpDeliveryFormat
- uid: System.Net.Mail.SmtpClient.DeliveryMethod
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryMethod
  nameWithType: SmtpClient.DeliveryMethod
  fullName: System.Net.Mail.SmtpClient.DeliveryMethod
- uid: System.Net.Mail.SmtpDeliveryMethod
  parent: System.Net.Mail
  isExternal: false
  name: SmtpDeliveryMethod
  nameWithType: SmtpDeliveryMethod
  fullName: System.Net.Mail.SmtpDeliveryMethod
- uid: System.Net.Mail.SmtpClient.Dispose
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Dispose()
  nameWithType: SmtpClient.Dispose()
  fullName: System.Net.Mail.SmtpClient.Dispose()
- uid: System.Net.Mail.SmtpClient.Dispose(System.Boolean)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SmtpClient.Dispose(Boolean)
  fullName: System.Net.Mail.SmtpClient.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Mail.SmtpClient.EnableSsl
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: EnableSsl
  nameWithType: SmtpClient.EnableSsl
  fullName: System.Net.Mail.SmtpClient.EnableSsl
- uid: System.Net.Mail.SmtpClient.Host
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Host
  nameWithType: SmtpClient.Host
  fullName: System.Net.Mail.SmtpClient.Host
- uid: System.Net.Mail.SmtpClient.OnSendCompleted(System.ComponentModel.AsyncCompletedEventArgs)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: OnSendCompleted(AsyncCompletedEventArgs)
  nameWithType: SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
  fullName: System.Net.Mail.SmtpClient.OnSendCompleted(AsyncCompletedEventArgs)
- uid: System.ComponentModel.AsyncCompletedEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: AsyncCompletedEventArgs
  nameWithType: AsyncCompletedEventArgs
  fullName: System.ComponentModel.AsyncCompletedEventArgs
- uid: System.Net.Mail.SmtpClient.PickupDirectoryLocation
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: PickupDirectoryLocation
  nameWithType: SmtpClient.PickupDirectoryLocation
  fullName: System.Net.Mail.SmtpClient.PickupDirectoryLocation
- uid: System.Net.Mail.SmtpClient.Port
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Port
  nameWithType: SmtpClient.Port
  fullName: System.Net.Mail.SmtpClient.Port
- uid: System.Net.Mail.SmtpClient.Send(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Send(MailMessage)
  nameWithType: SmtpClient.Send(MailMessage)
  fullName: System.Net.Mail.SmtpClient.Send(MailMessage)
- uid: System.Net.Mail.MailMessage
  parent: System.Net.Mail
  isExternal: false
  name: MailMessage
  nameWithType: MailMessage
  fullName: System.Net.Mail.MailMessage
- uid: System.Net.Mail.SmtpClient.Send(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Send(String,String,String,String)
  nameWithType: SmtpClient.Send(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.Send(String,String,String,String)
- uid: System.Net.Mail.SmtpClient.SendAsync(System.Net.Mail.MailMessage,System.Object)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsync(MailMessage,Object)
  nameWithType: SmtpClient.SendAsync(MailMessage,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(MailMessage,Object)
- uid: System.Net.Mail.SmtpClient.SendAsync(System.String,System.String,System.String,System.String,System.Object)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsync(String,String,String,String,Object)
  nameWithType: SmtpClient.SendAsync(String,String,String,String,Object)
  fullName: System.Net.Mail.SmtpClient.SendAsync(String,String,String,String,Object)
- uid: System.Net.Mail.SmtpClient.SendAsyncCancel
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsyncCancel()
  nameWithType: SmtpClient.SendAsyncCancel()
  fullName: System.Net.Mail.SmtpClient.SendAsyncCancel()
- uid: System.Net.Mail.SmtpClient.SendCompleted
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendCompleted
  nameWithType: SmtpClient.SendCompleted
  fullName: System.Net.Mail.SmtpClient.SendCompleted
- uid: System.Net.Mail.SendCompletedEventHandler
  parent: System.Net.Mail
  isExternal: false
  name: SendCompletedEventHandler
  nameWithType: SendCompletedEventHandler
  fullName: System.Net.Mail.SendCompletedEventHandler
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.Net.Mail.MailMessage)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendMailAsync(MailMessage)
  nameWithType: SmtpClient.SendMailAsync(MailMessage)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(MailMessage)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Mail.SmtpClient.SendMailAsync(System.String,System.String,System.String,System.String)
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendMailAsync(String,String,String,String)
  nameWithType: SmtpClient.SendMailAsync(String,String,String,String)
  fullName: System.Net.Mail.SmtpClient.SendMailAsync(String,String,String,String)
- uid: System.Net.Mail.SmtpClient.ServicePoint
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ServicePoint
  nameWithType: SmtpClient.ServicePoint
  fullName: System.Net.Mail.SmtpClient.ServicePoint
- uid: System.Net.ServicePoint
  parent: System.Net
  isExternal: false
  name: ServicePoint
  nameWithType: ServicePoint
  fullName: System.Net.ServicePoint
- uid: System.Net.Mail.SmtpClient.TargetName
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: TargetName
  nameWithType: SmtpClient.TargetName
  fullName: System.Net.Mail.SmtpClient.TargetName
- uid: System.Net.Mail.SmtpClient.Timeout
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Timeout
  nameWithType: SmtpClient.Timeout
  fullName: System.Net.Mail.SmtpClient.Timeout
- uid: System.Net.Mail.SmtpClient.UseDefaultCredentials
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: SmtpClient.UseDefaultCredentials
  fullName: System.Net.Mail.SmtpClient.UseDefaultCredentials
- uid: System.Net.Mail.SmtpClient.#ctor*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SmtpClient
  nameWithType: SmtpClient.SmtpClient
- uid: System.Net.Mail.SmtpClient.ClientCertificates*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ClientCertificates
  nameWithType: SmtpClient.ClientCertificates
- uid: System.Net.Mail.SmtpClient.Credentials*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Credentials
  nameWithType: SmtpClient.Credentials
- uid: System.Net.Mail.SmtpClient.DeliveryFormat*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryFormat
  nameWithType: SmtpClient.DeliveryFormat
- uid: System.Net.Mail.SmtpClient.DeliveryMethod*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: DeliveryMethod
  nameWithType: SmtpClient.DeliveryMethod
- uid: System.Net.Mail.SmtpClient.Dispose*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Dispose
  nameWithType: SmtpClient.Dispose
- uid: System.Net.Mail.SmtpClient.EnableSsl*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: EnableSsl
  nameWithType: SmtpClient.EnableSsl
- uid: System.Net.Mail.SmtpClient.Host*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Host
  nameWithType: SmtpClient.Host
- uid: System.Net.Mail.SmtpClient.OnSendCompleted*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: OnSendCompleted
  nameWithType: SmtpClient.OnSendCompleted
- uid: System.Net.Mail.SmtpClient.PickupDirectoryLocation*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: PickupDirectoryLocation
  nameWithType: SmtpClient.PickupDirectoryLocation
- uid: System.Net.Mail.SmtpClient.Port*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Port
  nameWithType: SmtpClient.Port
- uid: System.Net.Mail.SmtpClient.Send*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Send
  nameWithType: SmtpClient.Send
- uid: System.Net.Mail.SmtpClient.SendAsync*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsync
  nameWithType: SmtpClient.SendAsync
- uid: System.Net.Mail.SmtpClient.SendAsyncCancel*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendAsyncCancel
  nameWithType: SmtpClient.SendAsyncCancel
- uid: System.Net.Mail.SmtpClient.SendMailAsync*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: SendMailAsync
  nameWithType: SmtpClient.SendMailAsync
- uid: System.Net.Mail.SmtpClient.ServicePoint*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: ServicePoint
  nameWithType: SmtpClient.ServicePoint
- uid: System.Net.Mail.SmtpClient.TargetName*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: TargetName
  nameWithType: SmtpClient.TargetName
- uid: System.Net.Mail.SmtpClient.Timeout*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: Timeout
  nameWithType: SmtpClient.Timeout
- uid: System.Net.Mail.SmtpClient.UseDefaultCredentials*
  parent: System.Net.Mail.SmtpClient
  isExternal: false
  name: UseDefaultCredentials
  nameWithType: SmtpClient.UseDefaultCredentials
