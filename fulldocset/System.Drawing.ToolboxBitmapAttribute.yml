### YamlMime:ManagedReference
items:
- uid: System.Drawing.ToolboxBitmapAttribute
  id: ToolboxBitmapAttribute
  children:
  - System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)
  - System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)
  - System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)
  - System.Drawing.ToolboxBitmapAttribute.Default
  - System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)
  - System.Drawing.ToolboxBitmapAttribute.GetHashCode
  - System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)
  - System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)
  - System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)
  - System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)
  - System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)
  - System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)
  langs:
  - csharp
  name: ToolboxBitmapAttribute
  nameWithType: ToolboxBitmapAttribute
  fullName: System.Drawing.ToolboxBitmapAttribute
  type: Class
  summary: "Permite que você especifique um ícone para representar um controle em um contêiner, como o Designer de formulário do Microsoft Visual Studio."
  remarks: "Você pode aplicar um ToolboxBitmapAttribute a um controle para que os contêineres, como o Microsoft Visual Studio Designer de formulário podem recuperar um ícone que representa o controle. O bitmap para o ícone pode estar em um arquivo por si só ou inserido no assembly que contém o controle. O tamanho do bitmap que você inserir no assembly de controle (ou armazenamento em um arquivo separado) deve ter 16 por 16. O <xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A>método de um objeto ToolboxBitmapAttribute pode retornar a imagem pequena 16 por 16 ou uma imagem de 32 x 32 grandes que ele cria, dimensionando a imagem pequena.</xref:System.Drawing.ToolboxBitmapAttribute.GetImage%2A>       Se você quiser usar versões diferentes do seus ícones com versões diferentes do seu assembly, você não precisa modificar ToolboxBitmapAttribute para cada versão. Em vez disso, você pode declarar o assembly com um <xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute>ou um <xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute>e especifique um <xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A>valor de configuração para cada versão do assembly.</xref:System.Drawing.Configuration.SystemDrawingSection.BitmapSuffix%2A> </xref:System.Drawing.BitmapSuffixInSatelliteAssemblyAttribute> </xref:System.Drawing.BitmapSuffixInSameAssemblyAttribute> Nesse caso, um nome de arquivo indicado por um ToolboxBitmapAttribute é interpretado com o sufixo de bitmap acrescentado."
  example:
  - "The following code example demonstrates how to use the ToolboxBitmapAttribute class to set `stop.bmp` as the toolbox icon for the `StopSignControl`. This example assumes the existence of a 16-by-16-pixel bitmap named `stop.bmp` at c:\\\\.  \n  \n [!code-cpp[System.Drawing.ToolBoxBitmapExamples#1](~/add/codesnippet/cpp/t-system.drawing.toolbox_1.cpp)]\n [!code-cs[System.Drawing.ToolBoxBitmapExamples#1](~/add/codesnippet/csharp/t-system.drawing.toolbox_1.cs)]\n [!code-vb[System.Drawing.ToolBoxBitmapExamples#1](~/add/codesnippet/visualbasic/t-system.drawing.toolbox_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class)]

      public class ToolboxBitmapAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Drawing.ToolboxBitmapAttribute
  langs:
  - csharp
  name: ToolboxBitmapAttribute(String)
  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute(String)
  fullName: System.Drawing.ToolboxBitmapAttribute.ToolboxBitmapAttribute(String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto com uma imagem de um arquivo especificado."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the ToolboxBitmapAttribute constructor to set `stop.bmp` as the toolbox icon for the `StopSignControl`. This example assumes the existence of a 16-by-16-pixel bitmap named `stop.bmp` at c:\\\\.  \n  \n [!code-cpp[System.Drawing.ToolBoxBitmapExamples#1](~/add/codesnippet/cpp/m-system.drawing.toolbox_2_1.cpp)]\n [!code-cs[System.Drawing.ToolBoxBitmapExamples#1](~/add/codesnippet/csharp/m-system.drawing.toolbox_2_1.cs)]\n [!code-vb[System.Drawing.ToolBoxBitmapExamples#1](~/add/codesnippet/visualbasic/m-system.drawing.toolbox_2_1.vb)]"
  syntax:
    content: public ToolboxBitmapAttribute (string imageFile);
    parameters:
    - id: imageFile
      type: System.String
      description: "O nome de um arquivo que contém um bitmap de 16 por 16."
  overload: System.Drawing.ToolboxBitmapAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Drawing.ToolboxBitmapAttribute
  langs:
  - csharp
  name: ToolboxBitmapAttribute(Type)
  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type)
  fullName: System.Drawing.ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto com base em um 16x16 bitmap que será inserido como um recurso em um assembly específico."
  remarks: "Este construtor procura um recurso inserido no assembly que define o tipo especificado pelo `t` parâmetro. O construtor procura um recurso chamado namespace.classname.bmp, onde o namespace é o namespace que contém a definição da classe especificada o `t` parâmetro. Por exemplo, se ControlA estiver em NamespaceA em AssemblyA.dll, o construtor de pesquisa AssemblyA.dll para um recurso chamado NamespaceA.ControlA.bmp."
  example:
  - "The following code example demonstrates how to use the ToolboxBitmapAttribute constructor to set the icon of the button control to the toolbox icon for a <xref:System.Windows.Forms.UserControl> named `StopSignControl3`.  \n  \n [!code-cpp[System.Drawing.ToolBoxBitmapExamples#3](~/add/codesnippet/cpp/m-system.drawing.toolbox_3_1.cpp)]\n [!code-cs[System.Drawing.ToolBoxBitmapExamples#3](~/add/codesnippet/csharp/m-system.drawing.toolbox_3_1.cs)]\n [!code-vb[System.Drawing.ToolBoxBitmapExamples#3](~/add/codesnippet/visualbasic/m-system.drawing.toolbox_3_1.vb)]"
  syntax:
    content: public ToolboxBitmapAttribute (Type t);
    parameters:
    - id: t
      type: System.Type
      description: "Um <xref:System.Type>cuja definição de assembly é pesquisada para o recurso de bitmap.</xref:System.Type>"
  overload: System.Drawing.ToolboxBitmapAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Drawing.ToolboxBitmapAttribute
  langs:
  - csharp
  name: ToolboxBitmapAttribute(Type,String)
  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type,String)
  fullName: System.Drawing.ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type,String)
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto com base em um bitmap de 16 por 16 será inserido como um recurso em um assembly específico."
  remarks: "Este construtor procura um recurso inserido no assembly que define o tipo especificado pelo `t` parâmetro. O construtor procura um recurso chamado namespace.name, onde o namespace é o namespace que contém a definição da classe especificada o `t` parâmetro. Por exemplo, suponha que ControlA é uma classe em NamespaceA em AssemblyA.dll e passou &quot;MyBitmap.bmp&quot; para o `name` parâmetro. Em seguida, o construtor de pesquisa AssemblyA.dll um recurso chamado NamespaceA.MyBitmap.bmp."
  example:
  - "'The following code example demonstrates how to use the ToolboxBitmapAttribute constructor to set `StopSignControl2.bmp` as a toolbox icon for the `StopSignControl2`. This example assumes the existence of a 16-by-16-pixel bitmap named `StopSignControl2.bmp` with its **BuildAction** property set to **EmbeddedResource**.  \n  \n [!code-cpp[System.Drawing.ToolBoxBitmapExamples#2](~/add/codesnippet/cpp/m-system.drawing.toolbox_0_1.cpp)]\n [!code-cs[System.Drawing.ToolBoxBitmapExamples#2](~/add/codesnippet/csharp/m-system.drawing.toolbox_0_1.cs)]\n [!code-vb[System.Drawing.ToolBoxBitmapExamples#2](~/add/codesnippet/visualbasic/m-system.drawing.toolbox_0_1.vb)]"
  syntax:
    content: public ToolboxBitmapAttribute (Type t, string name);
    parameters:
    - id: t
      type: System.Type
      description: "Um <xref:System.Type>cuja definição de assembly é pesquisada para o recurso de bitmap.</xref:System.Type>"
    - id: name
      type: System.String
      description: "O nome do recurso de bitmap inserido."
  overload: System.Drawing.ToolboxBitmapAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ToolboxBitmapAttribute.Default
  id: Default
  parent: System.Drawing.ToolboxBitmapAttribute
  langs:
  - csharp
  name: Default
  nameWithType: ToolboxBitmapAttribute.Default
  fullName: System.Drawing.ToolboxBitmapAttribute.Default
  type: Field
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Um <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto que tem sua imagem pequena e sua imagem grande definido como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public static readonly System.Drawing.ToolboxBitmapAttribute Default;
    return:
      type: System.Drawing.ToolboxBitmapAttribute
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Drawing.ToolboxBitmapAttribute
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ToolboxBitmapAttribute.Equals(Object)
  fullName: System.Drawing.ToolboxBitmapAttribute.Equals(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Indica se o objeto especificado é um <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> do objeto e são idênticos a este <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  syntax:
    content: public override bool Equals (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Para teste.</xref:System.Object>"
    return:
      type: System.Boolean
      description: "Este método retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se <code> value </code> é um <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> do objeto e são idênticos a este <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  overload: System.Drawing.ToolboxBitmapAttribute.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ToolboxBitmapAttribute.GetHashCode
  id: GetHashCode
  parent: System.Drawing.ToolboxBitmapAttribute
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ToolboxBitmapAttribute.GetHashCode()
  fullName: System.Drawing.ToolboxBitmapAttribute.GetHashCode()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém um código hash para este <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash para este <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  overload: System.Drawing.ToolboxBitmapAttribute.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)
  id: GetImage(System.Object)
  parent: System.Drawing.ToolboxBitmapAttribute
  langs:
  - csharp
  name: GetImage(Object)
  nameWithType: ToolboxBitmapAttribute.GetImage(Object)
  fullName: System.Drawing.ToolboxBitmapAttribute.GetImage(Object)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém o pequeno <xref href=&quot;System.Drawing.Image&quot;> </xref> associado a esta <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  remarks: "Este método pesquisa um recurso chamado namespace.classname.bmp, onde o namespace é o namespace que contém a definição do tipo de objeto especificado pelo `component` parâmetro. Por exemplo, suponha que você passar um objeto do tipo ControlA para o `component` parâmetro. Se for ControlA em NamespaceA em AssemblyA.dll, este método pesquisa AssemblyA.dll para um recurso chamado NamespaceA.ControlA.bmp."
  example:
  - "The following example demonstrates how to use the GetImage method.  \n  \n [!code-cpp[System.Drawing.ToolBoxBitmapExamples#4](~/add/codesnippet/cpp/m-system.drawing.toolbox_1_1.cpp)]\n [!code-cs[System.Drawing.ToolBoxBitmapExamples#4](~/add/codesnippet/csharp/m-system.drawing.toolbox_1_1.cs)]\n [!code-vb[System.Drawing.ToolBoxBitmapExamples#4](~/add/codesnippet/visualbasic/m-system.drawing.toolbox_1_1.vb)]"
  syntax:
    content: public System.Drawing.Image GetImage (object component);
    parameters:
    - id: component
      type: System.Object
      description: "Se este <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto ainda não tiver uma imagem pequena, esse método de pesquisa para um recurso de bitmap no assembly que define o tipo do objeto especificado pelo parâmetro de componente. Por exemplo, se você passar um objeto do tipo ControlA para o parâmetro de componente, este método pesquisa o assembly que define ControlA."
    return:
      type: System.Drawing.Image
      description: "O pequeno <xref href=&quot;System.Drawing.Image&quot;> </xref> associado a esta <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  overload: System.Drawing.ToolboxBitmapAttribute.GetImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)
  id: GetImage(System.Type)
  parent: System.Drawing.ToolboxBitmapAttribute
  langs:
  - csharp
  name: GetImage(Type)
  nameWithType: ToolboxBitmapAttribute.GetImage(Type)
  fullName: System.Drawing.ToolboxBitmapAttribute.GetImage(Type)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém o pequeno <xref href=&quot;System.Drawing.Image&quot;> </xref> associado a esta <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  remarks: "Este método pesquisa um recurso chamado namespace.classname.bmp, onde o namespace é o namespace que contém a definição do tipo especificado pelo `type` parâmetro. Por exemplo, suponha que você passar typeof(ControlA) para o `type` parâmetro. Se for ControlA em NamespaceA em AssemblyA.dll, este método pesquisa AssemblyA.dll para um recurso chamado NamespaceA.ControlA.bmp."
  syntax:
    content: public System.Drawing.Image GetImage (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Se este <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto ainda não tiver uma imagem pequena, esse método de pesquisa para um recurso de bitmap no assembly que define o tipo especificado pelo parâmetro de tipo. Por exemplo, se você passar typeof(ControlA) para o parâmetro de tipo, este método pesquisa o assembly que define ControlA."
    return:
      type: System.Drawing.Image
      description: "O pequeno <xref href=&quot;System.Drawing.Image&quot;> </xref> associado a esta <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  overload: System.Drawing.ToolboxBitmapAttribute.GetImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)
  id: GetImage(System.Object,System.Boolean)
  parent: System.Drawing.ToolboxBitmapAttribute
  langs:
  - csharp
  name: GetImage(Object,Boolean)
  nameWithType: ToolboxBitmapAttribute.GetImage(Object,Boolean)
  fullName: System.Drawing.ToolboxBitmapAttribute.GetImage(Object,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém o pequeno ou grande <xref href=&quot;System.Drawing.Image&quot;> </xref> associado a esta <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  remarks: "Este método pesquisa um recurso chamado namespace.classname.bmp, onde o namespace é o namespace que contém a definição do tipo de objeto especificado pelo `component` parâmetro. Por exemplo, suponha que você passar um objeto do tipo ControlA para o `component` parâmetro. Se for ControlA em NamespaceA em AssemblyA.dll, este método pesquisa AssemblyA.dll para um recurso chamado NamespaceA.ControlA.bmp.       Se este <xref:System.Drawing.ToolboxBitmapAttribute>objeto ainda não tiver uma imagem grande, este método cria uma imagem grande, dimensionando a imagem pequena.</xref:System.Drawing.ToolboxBitmapAttribute>"
  syntax:
    content: public System.Drawing.Image GetImage (object component, bool large);
    parameters:
    - id: component
      type: System.Object
      description: "Se este <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto ainda não tiver uma imagem pequena, esse método de pesquisa para um recurso de bitmap no assembly que define o tipo do objeto especificado pelo parâmetro de componente. Por exemplo, se você passar um objeto do tipo ControlA para o parâmetro de componente, este método pesquisa o assembly que define ControlA."
    - id: large
      type: System.Boolean
      description: "Especifica se esse método retorna uma imagem grande (<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>) ou uma imagem pequena (<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>). A imagem pequena é de 16 por 16, e a imagem grande é 32 por 32."
    return:
      type: System.Drawing.Image
      description: "Um <xref href=&quot;System.Drawing.Image&quot;> </xref> objeto associado a esta <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  overload: System.Drawing.ToolboxBitmapAttribute.GetImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)
  id: GetImage(System.Type,System.Boolean)
  parent: System.Drawing.ToolboxBitmapAttribute
  langs:
  - csharp
  name: GetImage(Type,Boolean)
  nameWithType: ToolboxBitmapAttribute.GetImage(Type,Boolean)
  fullName: System.Drawing.ToolboxBitmapAttribute.GetImage(Type,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém o pequeno ou grande <xref href=&quot;System.Drawing.Image&quot;> </xref> associado a esta <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  remarks: "Este método pesquisa um recurso chamado namespace.classname.bmp, onde o namespace é o namespace que contém a definição do tipo especificado pelo `type` parâmetro. Por exemplo, suponha que você passar um typeof(ControlA) para o `type` parâmetro. Se for ControlA em NamespaceA em AssemblyA.dll, este método pesquisa AssemblyA.dll para um recurso chamado NamespaceA.ControlA.bmp.       Se este <xref:System.Drawing.ToolboxBitmapAttribute>objeto ainda não tiver uma imagem grande, este método cria uma imagem grande, dimensionando a imagem pequena.</xref:System.Drawing.ToolboxBitmapAttribute>"
  syntax:
    content: public System.Drawing.Image GetImage (Type type, bool large);
    parameters:
    - id: type
      type: System.Type
      description: "Se este <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto ainda não tiver uma imagem pequena, esse método de pesquisa para um recurso de bitmap no assembly que define o tipo especificado pelo tipo de componente. Por exemplo, se você passar typeof(ControlA) para o parâmetro de tipo, este método pesquisa o assembly que define ControlA."
    - id: large
      type: System.Boolean
      description: "Especifica se esse método retorna uma imagem grande (<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>) ou uma imagem pequena (<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>). A imagem pequena é de 16 por 16, e a imagem grande é 32 por 32."
    return:
      type: System.Drawing.Image
      description: "Um <xref href=&quot;System.Drawing.Image&quot;> </xref> associado a esta <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  overload: System.Drawing.ToolboxBitmapAttribute.GetImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)
  id: GetImage(System.Type,System.String,System.Boolean)
  parent: System.Drawing.ToolboxBitmapAttribute
  langs:
  - csharp
  name: GetImage(Type,String,Boolean)
  nameWithType: ToolboxBitmapAttribute.GetImage(Type,String,Boolean)
  fullName: System.Drawing.ToolboxBitmapAttribute.GetImage(Type,String,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Obtém o pequeno ou grande <xref href=&quot;System.Drawing.Image&quot;> </xref> associado a esta <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  remarks: "Este método pesquisa um recurso chamado namespace.imgName, onde o namespace é o namespace que contém a definição do tipo especificado pelo `type` parâmetro. Por exemplo, suponha que você passar typeof(ControlA) para o `type` parâmetro e passou &quot;MyBitmap.bmp&quot; para o parâmetro imgName. Se for ControlA em NamespaceA em AssemblyA.dll, este método pesquisa AssemblyA.dll para um recurso chamado NamespaceA.MyBitmap.bmp.       Se este <xref:System.Drawing.ToolboxBitmapAttribute>objeto ainda não tiver uma imagem grande, este método cria uma imagem grande, dimensionando a imagem pequena.</xref:System.Drawing.ToolboxBitmapAttribute>"
  syntax:
    content: public System.Drawing.Image GetImage (Type type, string imgName, bool large);
    parameters:
    - id: type
      type: System.Type
      description: "Se este <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto ainda não tiver uma imagem pequena, esse método de pesquisa para um recurso de bitmap inserido no assembly que define o tipo especificado pelo tipo de componente. Por exemplo, se você passar typeof(ControlA) para o parâmetro de tipo, este método pesquisa o assembly que define ControlA."
    - id: imgName
      type: System.String
      description: "O nome do recurso de bitmap inserido."
    - id: large
      type: System.Boolean
      description: "Especifica se esse método retorna uma imagem grande (<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>) ou uma imagem pequena (<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>). A imagem pequena é de 16 por 16, e a imagem grande é 32 por 32."
    return:
      type: System.Drawing.Image
      description: "Um <xref href=&quot;System.Drawing.Image&quot;> </xref> associado a esta <xref href=&quot;System.Drawing.ToolboxBitmapAttribute&quot;> </xref> objeto."
  overload: System.Drawing.ToolboxBitmapAttribute.GetImage*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)
  id: GetImageFromResource(System.Type,System.String,System.Boolean)
  parent: System.Drawing.ToolboxBitmapAttribute
  langs:
  - csharp
  name: GetImageFromResource(Type,String,Boolean)
  nameWithType: ToolboxBitmapAttribute.GetImageFromResource(Type,String,Boolean)
  fullName: System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(Type,String,Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Retorna um <xref href=&quot;System.Drawing.Image&quot;> </xref> objeto com base em um recurso de bitmap é inserido em um assembly."
  remarks: "Este método pesquisa um recurso chamado namespace.imgName, onde o namespace é o namespace que contém a definição do tipo especificado pelo `t` parâmetro. Por exemplo, suponha que você passar typeof(ControlA) para o `t` parâmetro e você passa &quot;MyBitmap.bmp&quot; para o parâmetro imgName. Se for ControlA em NamespaceA em AssemblyA.dll, este método pesquisa AssemblyA.dll para um recurso chamado NamespaceA.MyBitmap.bmp.       Este método destina-se para recuperar um recurso de 16x16 bitmap é inserido em um assembly. No entanto, não há nenhum requisito de que o bitmap inserido tem um tamanho de 16 x 16. O bitmap que é recuperado do assembly (não importa que tamanho) é considerado a imagem pequena. A imagem grande é criada pelo dimensionar a imagem &quot;pequena&quot; a um tamanho de 32 x 32. Para que a imagem grande sempre seja 32 por 32, independentemente do tamanho do bitmap recuperado do assembly."
  syntax:
    content: public static System.Drawing.Image GetImageFromResource (Type t, string imageName, bool large);
    parameters:
    - id: t
      type: System.Type
      description: "Este método pesquisa um recurso de bitmap inserido no assembly que define o tipo especificado pelo parâmetro t. Por exemplo, se você passar typeof(ControlA) para o parâmetro t, este método pesquisa o assembly que define ControlA."
    - id: imageName
      type: System.String
      description: "O nome do recurso de bitmap inserido."
    - id: large
      type: System.Boolean
      description: "Especifica se esse método retorna uma imagem grande (true) ou uma imagem pequena (false). A imagem pequena é de 16 por 16, e a imagem grande é 32 x 32."
    return:
      type: System.Drawing.Image
      description: "Um <xref href=&quot;System.Drawing.Image&quot;> </xref> objeto com base no bitmap recuperado."
  overload: System.Drawing.ToolboxBitmapAttribute.GetImageFromResource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Drawing.ToolboxBitmapAttribute.#ctor(System.String)
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: ToolboxBitmapAttribute(String)
  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute(String)
  fullName: System.Drawing.ToolboxBitmapAttribute.ToolboxBitmapAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type)
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: ToolboxBitmapAttribute(Type)
  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type)
  fullName: System.Drawing.ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Drawing.ToolboxBitmapAttribute.#ctor(System.Type,System.String)
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: ToolboxBitmapAttribute(Type,String)
  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type,String)
  fullName: System.Drawing.ToolboxBitmapAttribute.ToolboxBitmapAttribute(Type,String)
- uid: System.Drawing.ToolboxBitmapAttribute.Default
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: Default
  nameWithType: ToolboxBitmapAttribute.Default
  fullName: System.Drawing.ToolboxBitmapAttribute.Default
- uid: System.Drawing.ToolboxBitmapAttribute
  parent: System.Drawing
  isExternal: false
  name: ToolboxBitmapAttribute
  nameWithType: ToolboxBitmapAttribute
  fullName: System.Drawing.ToolboxBitmapAttribute
- uid: System.Drawing.ToolboxBitmapAttribute.Equals(System.Object)
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: Equals(Object)
  nameWithType: ToolboxBitmapAttribute.Equals(Object)
  fullName: System.Drawing.ToolboxBitmapAttribute.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.ToolboxBitmapAttribute.GetHashCode
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: GetHashCode()
  nameWithType: ToolboxBitmapAttribute.GetHashCode()
  fullName: System.Drawing.ToolboxBitmapAttribute.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object)
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: GetImage(Object)
  nameWithType: ToolboxBitmapAttribute.GetImage(Object)
  fullName: System.Drawing.ToolboxBitmapAttribute.GetImage(Object)
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type)
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: GetImage(Type)
  nameWithType: ToolboxBitmapAttribute.GetImage(Type)
  fullName: System.Drawing.ToolboxBitmapAttribute.GetImage(Type)
- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Object,System.Boolean)
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: GetImage(Object,Boolean)
  nameWithType: ToolboxBitmapAttribute.GetImage(Object,Boolean)
  fullName: System.Drawing.ToolboxBitmapAttribute.GetImage(Object,Boolean)
- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.Boolean)
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: GetImage(Type,Boolean)
  nameWithType: ToolboxBitmapAttribute.GetImage(Type,Boolean)
  fullName: System.Drawing.ToolboxBitmapAttribute.GetImage(Type,Boolean)
- uid: System.Drawing.ToolboxBitmapAttribute.GetImage(System.Type,System.String,System.Boolean)
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: GetImage(Type,String,Boolean)
  nameWithType: ToolboxBitmapAttribute.GetImage(Type,String,Boolean)
  fullName: System.Drawing.ToolboxBitmapAttribute.GetImage(Type,String,Boolean)
- uid: System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(System.Type,System.String,System.Boolean)
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: GetImageFromResource(Type,String,Boolean)
  nameWithType: ToolboxBitmapAttribute.GetImageFromResource(Type,String,Boolean)
  fullName: System.Drawing.ToolboxBitmapAttribute.GetImageFromResource(Type,String,Boolean)
- uid: System.Drawing.ToolboxBitmapAttribute.#ctor*
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: ToolboxBitmapAttribute
  nameWithType: ToolboxBitmapAttribute.ToolboxBitmapAttribute
- uid: System.Drawing.ToolboxBitmapAttribute.Equals*
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: Equals
  nameWithType: ToolboxBitmapAttribute.Equals
- uid: System.Drawing.ToolboxBitmapAttribute.GetHashCode*
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: GetHashCode
  nameWithType: ToolboxBitmapAttribute.GetHashCode
- uid: System.Drawing.ToolboxBitmapAttribute.GetImage*
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: GetImage
  nameWithType: ToolboxBitmapAttribute.GetImage
- uid: System.Drawing.ToolboxBitmapAttribute.GetImageFromResource*
  parent: System.Drawing.ToolboxBitmapAttribute
  isExternal: false
  name: GetImageFromResource
  nameWithType: ToolboxBitmapAttribute.GetImageFromResource
