### YamlMime:ManagedReference
items:
- uid: System.Web.Compilation.ExpressionBuilder
  id: ExpressionBuilder
  children:
  - System.Web.Compilation.ExpressionBuilder.#ctor
  - System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  - System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  langs:
  - csharp
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder
  fullName: System.Web.Compilation.ExpressionBuilder
  type: Class
  summary: "Avalia expressões durante a análise da página."
  remarks: "A classe ExpressionBuilder é a classe base para construtores de expressão, como o <xref:System.Web.Compilation.AppSettingsExpressionBuilder>classe, criar expressões de código durante a análise da página.</xref:System.Web.Compilation.AppSettingsExpressionBuilder>       Construtores de expressões expressões declarativas de analisar e criar o código para recuperar valores associados a uma propriedade de controle. Em cenários de não-compilação, um construtor de expressões que dá suporte a um recurso de compilação não avalia a expressão em tempo de execução.       Quando o analisador de página encontra uma expressão que é delimitada com a cadeia de caracteres `<%$ %>`, ele cria um construtor de expressão para a expressão com base no prefixo na cadeia de caracteres. O prefixo é a parte da cadeia de caracteres que está à esquerda de dois-pontos (:). Por exemplo, quando o analisador encontra a cadeia de caracteres `<%$ ConnectionStrings:MessageDB %>`, ele cria um <xref:System.Web.Compilation.ConnectionStringsExpressionBuilder>objeto.</xref:System.Web.Compilation.ConnectionStringsExpressionBuilder> Os prefixos estão associados com construtores de expressões no arquivo Web. config no <xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>seção.</xref:System.Web.Configuration.CompilationSection.ExpressionBuilders%2A>       O lado direito da expressão declarativa é passado para o construtor de expressões para avaliação. Substituir o <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>método para gerar o código que será compilado com a página.</xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>       Se você quiser que o construtor de expressão personalizada ativos em páginas que não são compiladas, você também deve substituir o <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>método para retornar um objeto que representa os resultados da expressão.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> Você também deve substituir o <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>propriedade para indicar que o construtor de expressões personalizado oferece suporte a páginas de não-compilação.</xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>       Você pode definir um conjunto de propriedades e métodos para selecionar e avaliação de uma expressão que é associada uma propriedade de controle em tempo de design, Implementando um editor de expressão. O editor é marcado por meio de metadados de nível de classe, o construtor de expressões. Para obter mais informações, consulte <xref:System.Web.UI.Design.ExpressionEditor>.</xref:System.Web.UI.Design.ExpressionEditor>"
  example:
  - "The following code examples demonstrate how to build a custom expression builder by implementing the ExpressionBuilder abstract class. This implementation of ExpressionBuilder returns an evaluated statement that is passed to the expression. To run this example, you must first register the custom expression builder in the Web.config file. The first code example demonstrates how to register the custom expression builder in the Web.config file.  \n  \n```  \n<configuration>  \n    <system.web>  \n       <compilation>  \n          <expressionBuilders>  \n              <add expressionPrefix=\"MyCustomExpression\"  \n               type=\"MyCustomExpressionBuilder\"/>  \n          </expressionBuilders>  \n       </compilation>  \n    </system.web>  \n</configuration>  \n```  \n  \n The second code example demonstrates how to reference the expression in an .aspx file.  \n  \n```  \n<asp:Label ID=\"Label1\" runat=\"server\"   \nText=\"<%$ MyCustomExpression:Hello, world! %>\" />  \n```  \n  \n The third code example demonstrates how to develop a customized expression builder by deriving from ExpressionBuilder. To run this code example, you must place the class in the App_Code folder.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public abstract class ExpressionBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.#ctor
  id: '#ctor'
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: ExpressionBuilder()
  nameWithType: ExpressionBuilder.ExpressionBuilder()
  fullName: System.Web.Compilation.ExpressionBuilder.ExpressionBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> classe."
  remarks: "Porque o <xref:System.Web.Compilation.ExpressionBuilder>classe é abstrata, não é possível criar uma instância de <xref:System.Web.Compilation.ExpressionBuilder>diretamente usando o construtor ExpressionBuilder.</xref:System.Web.Compilation.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionBuilder>"
  syntax:
    content: protected ExpressionBuilder ();
    parameters: []
  overload: System.Web.Compilation.ExpressionBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Quando substituído em uma classe derivada, retorna um objeto que representa uma expressão avaliada."
  remarks: "Se você quiser que seu <xref:System.Web.Compilation.ExpressionBuilder>objeto ativo em uma página que suporta o recurso de não-compilação, você pode substituir o método EvaluateExpression e <xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A>propriedade.</xref:System.Web.Compilation.ExpressionBuilder.SupportsEvaluate%2A> </xref:System.Web.Compilation.ExpressionBuilder> O método EvaluateExpression deve retornar a avaliação da expressão atual."
  example:
  - "The following code example demonstrates how to use the overridden EvaluateExpression method to return an evaluated expression.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual object EvaluateExpression (object target, System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: target
      type: System.Object
      description: "O objeto que contém a expressão."
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "O objeto que representa informações sobre a propriedade associada pela expressão."
    - id: parsedData
      type: System.Object
      description: "O objeto que contém analisar dados como retornado por <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Informações contextuais para a avaliação da expressão."
    return:
      type: System.Object
      description: "Um objeto que representa a expressão avaliada; Caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o inheritor não implementar EvaluateExpression."
  overload: System.Web.Compilation.ExpressionBuilder.EvaluateExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  id: GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Quando substituído em uma classe derivada, retorna o código que é usado durante a execução da página para obter a expressão avaliada."
  remarks: "Classes que herdam o <xref:System.Web.Compilation.ExpressionBuilder>classe deve implementar o método abstrato GetCodeExpression.</xref:System.Web.Compilation.ExpressionBuilder>"
  example:
  - "The following code example demonstrates how to return a <xref:System.CodeDom.CodeExpression> object by overriding the GetCodeExpression method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public abstract System.CodeDom.CodeExpression GetCodeExpression (System.Web.UI.BoundPropertyEntry entry, object parsedData, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: entry
      type: System.Web.UI.BoundPropertyEntry
      description: "O objeto que representa informações sobre a propriedade associada pela expressão."
    - id: parsedData
      type: System.Object
      description: "O objeto que contém analisar dados como retornado por <xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>.</xref:System.Web.Compilation.ExpressionBuilder.ParseExpression*>"
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Informações contextuais para a avaliação da expressão."
    return:
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que é usado para atribuição de propriedade."
  overload: System.Web.Compilation.ExpressionBuilder.GetCodeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  id: ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Quando substituído em uma classe derivada, retorna um objeto que representa a expressão analisada."
  remarks: "Quando substituído em uma classe derivada, esse método analisa a expressão e retorna-o como um objeto que pode ser usado como o `parsedData` parâmetro em um <xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>ou <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>método.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A> </xref:System.Web.Compilation.ExpressionBuilder.GetCodeExpression%2A>"
  syntax:
    content: public virtual object ParseExpression (string expression, Type propertyType, System.Web.Compilation.ExpressionBuilderContext context);
    parameters:
    - id: expression
      type: System.String
      description: "O valor da expressão declarativa."
    - id: propertyType
      type: System.Type
      description: "O tipo da propriedade associada pela expressão."
    - id: context
      type: System.Web.Compilation.ExpressionBuilderContext
      description: "Informações contextuais para a avaliação da expressão."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém a representação analisada da expressão; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não for implementado ParseExpression.</xref:System.Object>"
  overload: System.Web.Compilation.ExpressionBuilder.ParseExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  id: SupportsEvaluate
  parent: System.Web.Compilation.ExpressionBuilder
  langs:
  - csharp
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Compilation
  summary: "Quando substituído em uma classe derivada, retorna um valor que indica se o atual <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> objeto oferece suporte a páginas de não-compilação."
  remarks: "O valor padrão para a propriedade SupportsEvaluate é `false`. Para dar suporte a páginas de não-compilação, você deve substituir o <xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>método e a propriedade SupportsEvaluate.</xref:System.Web.Compilation.ExpressionBuilder.EvaluateExpression%2A>"
  example:
  - "The following code example demonstrates how to use the SupportsEvaluate property.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual bool SupportsEvaluate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.Compilation.ExpressionBuilder&quot;> </xref> oferece suporte a avaliação de expressão; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Compilation.ExpressionBuilder.#ctor
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ExpressionBuilder()
  nameWithType: ExpressionBuilder.ExpressionBuilder()
  fullName: System.Web.Compilation.ExpressionBuilder.ExpressionBuilder()
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(System.Object,System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.EvaluateExpression(Object,BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.Web.UI.BoundPropertyEntry
  parent: System.Web.UI
  isExternal: false
  name: BoundPropertyEntry
  nameWithType: BoundPropertyEntry
  fullName: System.Web.UI.BoundPropertyEntry
- uid: System.Web.Compilation.ExpressionBuilderContext
  parent: System.Web.Compilation
  isExternal: false
  name: ExpressionBuilderContext
  nameWithType: ExpressionBuilderContext
  fullName: System.Web.Compilation.ExpressionBuilderContext
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(System.Web.UI.BoundPropertyEntry,System.Object,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.GetCodeExpression(BoundPropertyEntry,Object,ExpressionBuilderContext)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression(System.String,System.Type,System.Web.Compilation.ExpressionBuilderContext)
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ParseExpression(String,Type,ExpressionBuilderContext)
  nameWithType: ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
  fullName: System.Web.Compilation.ExpressionBuilder.ParseExpression(String,Type,ExpressionBuilderContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
  fullName: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Compilation.ExpressionBuilder.#ctor*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ExpressionBuilder
  nameWithType: ExpressionBuilder.ExpressionBuilder
- uid: System.Web.Compilation.ExpressionBuilder.EvaluateExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: EvaluateExpression
  nameWithType: ExpressionBuilder.EvaluateExpression
- uid: System.Web.Compilation.ExpressionBuilder.GetCodeExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: GetCodeExpression
  nameWithType: ExpressionBuilder.GetCodeExpression
- uid: System.Web.Compilation.ExpressionBuilder.ParseExpression*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: ParseExpression
  nameWithType: ExpressionBuilder.ParseExpression
- uid: System.Web.Compilation.ExpressionBuilder.SupportsEvaluate*
  parent: System.Web.Compilation.ExpressionBuilder
  isExternal: false
  name: SupportsEvaluate
  nameWithType: ExpressionBuilder.SupportsEvaluate
