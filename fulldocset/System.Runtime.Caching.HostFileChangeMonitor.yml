### YamlMime:ManagedReference
items:
- uid: System.Runtime.Caching.HostFileChangeMonitor
  id: HostFileChangeMonitor
  children:
  - System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  - System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  - System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  - System.Runtime.Caching.HostFileChangeMonitor.LastModified
  - System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  langs:
  - csharp
  name: HostFileChangeMonitor
  nameWithType: HostFileChangeMonitor
  fullName: System.Runtime.Caching.HostFileChangeMonitor
  type: Class
  summary: "Monitora diretórios e caminhos de arquivo e notifica o cache de alterações aos itens monitorados. Essa classe não pode ser herdada."
  remarks: "A classe HostFileChangeMonitor é uma implementação concreta do <xref:System.Runtime.Caching.FileChangeMonitor>tipo.</xref:System.Runtime.Caching.FileChangeMonitor> Essa classe é fechada, portanto não pode ser estendido. Essa classe é útil se você quiser usar uma implementação existente do cache e monitorar arquivos e diretórios para alterações.       Para cada caminho de diretório ou arquivo especificado, a classe HostFileChangeMonitor aciona uma notificação de alteração se ocorrer qualquer uma das seguintes alterações:-o nome do arquivo monitorado ou alterações de diretório.      -O arquivo ou diretório especificado não existia no momento em que o monitor foi criado, mas foi criado mais tarde. Em outras palavras, um arquivo ou pasta foi criada no escopo dos itens monitorados.      -O tamanho de um arquivo monitorado alterado.      -O conteúdo de um arquivo monitorado é alterado ou o conteúdo de um diretório monitorado é alterado.      -A lista de controle de acesso (ACL) do arquivo ou diretório foi alterada.      -Monitorado arquivo ou diretório foi excluído.       Se ocorrerem muitas alterações para o diretório ou arquivo monitorado ao mesmo tempo, a instância de HostFileChangeMonitor pode perder o controle de alterações específicas. Nesse cenário, a classe HostFileChangeMonitor aciona uma notificação de alteração. Esse cenário é mais provável de ocorrer quando a instância HostFileChangeMonitor monitora um diretório e muitas alterações ocorrerem no escopo da estrutura de diretório em um curto período de tempo.       Como o objetivo da classe HostFileChangeMonitor é apenas sinalizar que algo foi alterado entre o conjunto de diretórios e arquivos monitorados, ele não é considerado importante que os detalhes sobre uma alteração específica não são capturados. A finalidade da classe HostFileChangeMonitor é fornecer notificação de estado alterado para que uma entrada de cache (ou entradas) podem ser removidas. Porque a classe HostFileChangeMonitor não indica exatamente o que mudou, estouro de controle de alterações interna é irrelevante.       Ao fornecer caminhos para uma instância de HostFileChangeMonitor, os caminhos de arquivo e diretório devem ser caminhos completos para o arquivo ou diretório. Não são permitidos caminhos relativos e caracteres curinga em caminhos.       Quando a classe HostFileChangeMonitor é usada em um aplicativo ASP.NET, a identidade do Windows que é usada para acessar itens monitorados é a identidade de aplicativo para o aplicativo ASP.NET. Em outras palavras, a identidade do aplicativo será um dos seguintes:-a identidade do processo.      -A identidade do aplicativo configurado.      -A credencial UNC se o aplicativo é executado de um compartilhamento UNC.       Quando a classe HostFileChangeMonitor é usada em um aplicativo não-ASP.NET, o <xref:System.IO.FileSystemWatcher>classe é usada internamente para monitorar os arquivos.</xref:System.IO.FileSystemWatcher> Como resultado, qualquer lista de controle de acesso (ACL) aplica-se a um arquivo monitorado ou diretório é aplicado para a identidade do Windows do thread atual.      > [!NOTE] > Chamadores devem ter o nível apropriado de permissões de segurança (ACS) de acesso do código e deve ter permissões NTFS para monitorados todos os diretórios e caminhos."
  example:
  - "The following example creates a cache item that uses a HostFileChangeMonitor object to monitor the state of the source data (which is a file) on the file system. The cache entry is defined using a <xref:System.Runtime.Caching.CacheItemPolicy> object to provide eviction and expiration details for the cache entry.  \n  \n [!code-cs[CachingASPNetApplications#1](~/add/codesnippet/csharp/t-system.runtime.caching_2_1.cs)]\n [!code-vb[CachingASPNetApplications#1](~/add/codesnippet/visualbasic/t-system.runtime.caching_2_1.vb)]"
  syntax:
    content: 'public sealed class HostFileChangeMonitor : System.Runtime.Caching.FileChangeMonitor'
  inheritance:
  - System.Object
  - System.Runtime.Caching.ChangeMonitor
  - System.Runtime.Caching.FileChangeMonitor
  implements: []
  inheritedMembers:
  - System.Runtime.Caching.ChangeMonitor.Dispose
  - System.Runtime.Caching.ChangeMonitor.HasChanged
  - System.Runtime.Caching.ChangeMonitor.InitializationComplete
  - System.Runtime.Caching.ChangeMonitor.IsDisposed
  - System.Runtime.Caching.ChangeMonitor.NotifyOnChanged(System.Runtime.Caching.OnChangedCallback)
  - System.Runtime.Caching.ChangeMonitor.OnChanged(System.Object)
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  id: '#ctor(System.Collections.Generic.IList{System.String})'
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: HostFileChangeMonitor(IList<String>)
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  type: Constructor
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Caching.HostFileChangeMonitor&quot;> </xref> classe."
  remarks: "Chamadas para o construtor HostFileChangeMonitor devem fornecer um valor não nulo para o `filePaths` parâmetro. No mínimo, o construtor valida uma coleção de caminhos que é passada para ele e, em seguida, inicia o monitoramento para esses caminhos.      > [!NOTE] > Construtor executa a validação da cadeia de caracteres somente do nome do caminho. Não tornar canônicos os caminhos ou validar que os caminhos existem."
  syntax:
    content: public HostFileChangeMonitor (System.Collections.Generic.IList<string> filePaths);
    parameters:
    - id: filePaths
      type: System.Collections.Generic.IList{System.String}
      description: "Uma lista que contém um ou mais caminhos de diretório ou caminhos de arquivo para monitorar."
  overload: System.Runtime.Caching.HostFileChangeMonitor.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>filePaths</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>filePaths</code>contém zero itens.       Um caminho no - ou - o <code>filePaths</code> lista é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: HostFileChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Runtime.Caching.HostFileChangeMonitor.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  id: FilePaths
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
  fullName: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Obtém a coleção de diretórios e caminhos de arquivo que foi passado para o &lt;xref:System.Runtime.Caching.HostFileChangeMonitor.%23ctor%2A&gt; construtor."
  syntax:
    content: public override System.Collections.ObjectModel.ReadOnlyCollection<string> FilePaths { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Uma coleção de diretórios e caminhos de arquivo."
  overload: System.Runtime.Caching.HostFileChangeMonitor.FilePaths*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  id: LastModified
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
  fullName: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Obtém um valor somente leitura que indica o último tempo de gravação de um arquivo monitorado ou o caminho."
  remarks: "Se um monitor de alteração de arquivo está monitorando vários arquivos ou caminhos, essa propriedade retorna a hora mais recente de gravação no conjunto de todos os arquivos e caminhos."
  syntax:
    content: public override DateTimeOffset LastModified { get; }
    return:
      type: System.DateTimeOffset
      description: "A última hora de um arquivo monitorado ou o caminho de gravação."
  overload: System.Runtime.Caching.HostFileChangeMonitor.LastModified*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  id: UniqueId
  parent: System.Runtime.Caching.HostFileChangeMonitor
  langs:
  - csharp
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  type: Property
  assemblies:
  - System.Runtime.Caching
  namespace: System.Runtime.Caching
  summary: "Obtém um identificador para o <xref href=&quot;System.Runtime.Caching.HostFileChangeMonitor&quot;> </xref> instância com base no conjunto de pastas monitoradas e caminhos de arquivo."
  remarks: "A cadeia de caracteres que compõe o valor da propriedade UniqueId é construída com as seguintes partes:-um caminho de arquivo ou diretório.      -O mais recente tempo de gravação na hora de UTC, medido como tiques mas representado como uma cadeia de caracteres hexadecimal.      -O tamanho do arquivo, representado como uma cadeia de caracteres hexadecimal.       Se um monitor de alteração de arquivo está monitorando vários caminhos, as informações retornadas por esta propriedade são concatenadas em uma única cadeia de caracteres para todos os caminhos de arquivos e diretórios monitorados."
  syntax:
    content: public override string UniqueId { get; }
    return:
      type: System.String
      description: "Um identificador para o monitor de alteração."
  overload: System.Runtime.Caching.HostFileChangeMonitor.UniqueId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Caching.FileChangeMonitor
  isExternal: false
  name: System.Runtime.Caching.FileChangeMonitor
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor(System.Collections.Generic.IList{System.String})
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: HostFileChangeMonitor(IList<String>)
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.HostFileChangeMonitor(IList<String>)
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose(System.Boolean)
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: HostFileChangeMonitor.Dispose(Boolean)
  fullName: System.Runtime.Caching.HostFileChangeMonitor.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
  fullName: System.Runtime.Caching.HostFileChangeMonitor.FilePaths
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
  fullName: System.Runtime.Caching.HostFileChangeMonitor.LastModified
- uid: System.DateTimeOffset
  parent: System
  isExternal: true
  name: DateTimeOffset
  nameWithType: DateTimeOffset
  fullName: System.DateTimeOffset
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
  fullName: System.Runtime.Caching.HostFileChangeMonitor.UniqueId
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Caching.HostFileChangeMonitor.#ctor*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: HostFileChangeMonitor
  nameWithType: HostFileChangeMonitor.HostFileChangeMonitor
- uid: System.Runtime.Caching.HostFileChangeMonitor.Dispose*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: Dispose
  nameWithType: HostFileChangeMonitor.Dispose
- uid: System.Runtime.Caching.HostFileChangeMonitor.FilePaths*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: FilePaths
  nameWithType: HostFileChangeMonitor.FilePaths
- uid: System.Runtime.Caching.HostFileChangeMonitor.LastModified*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: LastModified
  nameWithType: HostFileChangeMonitor.LastModified
- uid: System.Runtime.Caching.HostFileChangeMonitor.UniqueId*
  parent: System.Runtime.Caching.HostFileChangeMonitor
  isExternal: false
  name: UniqueId
  nameWithType: HostFileChangeMonitor.UniqueId
