### YamlMime:ManagedReference
items:
- uid: System.Data.DataColumnCollection
  id: DataColumnCollection
  children:
  - System.Data.DataColumnCollection.Add
  - System.Data.DataColumnCollection.Add(System.Data.DataColumn)
  - System.Data.DataColumnCollection.Add(System.String)
  - System.Data.DataColumnCollection.Add(System.String,System.Type)
  - System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)
  - System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])
  - System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)
  - System.Data.DataColumnCollection.Clear
  - System.Data.DataColumnCollection.CollectionChanged
  - System.Data.DataColumnCollection.Contains(System.String)
  - System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)
  - System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)
  - System.Data.DataColumnCollection.IndexOf(System.String)
  - System.Data.DataColumnCollection.Item(System.Int32)
  - System.Data.DataColumnCollection.Item(System.String)
  - System.Data.DataColumnCollection.List
  - System.Data.DataColumnCollection.Remove(System.Data.DataColumn)
  - System.Data.DataColumnCollection.Remove(System.String)
  - System.Data.DataColumnCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: DataColumnCollection
  nameWithType: DataColumnCollection
  fullName: System.Data.DataColumnCollection
  type: Class
  summary: "Representa uma coleção de <xref href=&quot;System.Data.DataColumn&quot;> </xref> objetos para um <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "O DataColumnCollection define o esquema de um <xref:System.Data.DataTable>e determina o tipo de dados de cada <xref:System.Data.DataColumn>pode conter.</xref:System.Data.DataColumn> </xref:System.Data.DataTable> Você pode acessar a DataColumnCollection por meio de <xref:System.Data.DataTable.Columns%2A>propriedade do <xref:System.Data.DataTable>objeto.</xref:System.Data.DataTable> </xref:System.Data.DataTable.Columns%2A>       O DataColumnCollection usa o <xref:System.Data.DataColumnCollection.Add%2A>e <xref:System.Data.DataColumnCollection.Remove%2A>métodos para inserir e excluir <xref:System.Data.DataColumn>objetos.</xref:System.Data.DataColumn> </xref:System.Data.DataColumnCollection.Remove%2A> </xref:System.Data.DataColumnCollection.Add%2A> Use o <xref:System.Data.InternalDataCollectionBase.Count%2A>propriedade para determinar quantas <xref:System.Data.DataColumn>são objetos na coleção.</xref:System.Data.DataColumn> </xref:System.Data.InternalDataCollectionBase.Count%2A> Use o <xref:System.Data.DataColumnCollection.Contains%2A>método para verificar se um nome de índice ou coluna especificado existe na coleção.</xref:System.Data.DataColumnCollection.Contains%2A>"
  example:
  - "The following example iterates through a collection of <xref:System.Data.DataColumn> objects and prints various properties of each column in the collection.  \n  \n [!code-cs[Classic WebData DataColumnCollection Example#1](~/add/codesnippet/csharp/t-system.data.datacolumn_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.datacolumn_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ColumnsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class DataColumnCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add
  id: Add
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add()
  nameWithType: DataColumnCollection.Add()
  fullName: System.Data.DataColumnCollection.Add()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Cria e adiciona um <xref href=&quot;System.Data.DataColumn&quot;> </xref> o objeto para o <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Um nome padrão (&quot;Coluna1&quot;, &quot;Coluna2&quot; e assim por diante) é atribuído à coluna.       Se a coleção é alterada com êxito, adicionando ou removendo colunas, o <xref:System.Data.DataColumnCollection.CollectionChanged>evento ocorre.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to the <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add5 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_9_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add ();
    parameters: []
    return:
      type: System.Data.DataColumn
      description: "Recém-criado <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.Data.DataColumn)
  id: Add(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(DataColumn)
  nameWithType: DataColumnCollection.Add(DataColumn)
  fullName: System.Data.DataColumnCollection.Add(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Cria e adiciona o <xref href=&quot;System.Data.DataColumn&quot;> </xref> o objeto para o <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Se a coleção é alterada com êxito, adicionando ou removendo colunas, o <xref:System.Data.DataColumnCollection.CollectionChanged>evento ocorre.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_2_1.vb)]"
  syntax:
    content: public void Add (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "The <xref href=&quot;System.Data.DataColumn&quot;></xref> to add."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A coluna já pertence a esta coleção, ou a outra coleção."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A coleção já contém uma coluna com o nome especificado. (A comparação não diferencia maiusculas de minúsculas)."
  - type: System.Data.InvalidExpressionException
    commentId: T:System.Data.InvalidExpressionException
    description: "A expressão é inválida. Consulte o <xref:System.Data.DataColumn.Expression*>propriedade para obter mais informações sobre como criar expressões.</xref:System.Data.DataColumn.Expression*>"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.String)
  id: Add(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(String)
  nameWithType: DataColumnCollection.Add(String)
  fullName: System.Data.DataColumnCollection.Add(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Cria e adiciona um <xref href=&quot;System.Data.DataColumn&quot;> </xref> objeto que tem o nome especificado para o <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Por padrão, o <xref:System.Data.DataColumn.DataType%2A>para a nova coluna é `string`.</xref:System.Data.DataColumn.DataType%2A>       Se `null` ou uma cadeia de caracteres vazia (&quot;&quot;) é passado para o nome, um nome padrão (&quot;Coluna1&quot;, &quot;Coluna2&quot; e assim por diante) é atribuído à coluna.       Use o <xref:System.Data.DataColumnCollection.Contains%2A>método para determinar se uma coluna com o nome proposto já existe na coleção.</xref:System.Data.DataColumnCollection.Contains%2A>       Se a coleção é alterada com êxito, adicionando ou removendo colunas, o <xref:System.Data.DataColumnCollection.CollectionChanged>evento ocorre.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add4 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_11_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "O nome da coluna."
    return:
      type: System.Data.DataColumn
      description: "Recém-criado <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A coleção já contém uma coluna com o nome especificado. (A comparação não diferencia maiusculas de minúsculas)."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type)
  id: Add(System.String,System.Type)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(String,Type)
  nameWithType: DataColumnCollection.Add(String,Type)
  fullName: System.Data.DataColumnCollection.Add(String,Type)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Cria e adiciona um <xref href=&quot;System.Data.DataColumn&quot;> </xref> objeto que foi especificado name e type para o <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Se `null` ou uma cadeia de caracteres vazia (&quot;&quot;) é passado para o nome, um nome padrão (&quot;Coluna1&quot;, &quot;Coluna2&quot; e assim por diante) é atribuído à coluna.       Use o <xref:System.Data.DataColumnCollection.Contains%2A>método para determinar se uma coluna com o nome proposto já existe na coleção.</xref:System.Data.DataColumnCollection.Contains%2A>       Se a coleção é alterada com êxito, adicionando ou removendo colunas, o <xref:System.Data.DataColumnCollection.CollectionChanged>evento ocorre.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add2 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_7_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add (string columnName, Type type);
    parameters:
    - id: columnName
      type: System.String
      description: "O <xref:System.Data.DataColumn.ColumnName*>a ser usado ao criar a coluna.</xref:System.Data.DataColumn.ColumnName*>"
    - id: type
      type: System.Type
      description: "O <xref:System.Data.DataColumn.DataType*>da nova coluna.</xref:System.Data.DataColumn.DataType*>"
    return:
      type: System.Data.DataColumn
      description: "Recém-criado <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A coleção já contém uma coluna com o nome especificado. (A comparação não diferencia maiusculas de minúsculas)."
  - type: System.Data.InvalidExpressionException
    commentId: T:System.Data.InvalidExpressionException
    description: "A expressão é inválida. Consulte o <xref:System.Data.DataColumn.Expression*>propriedade para obter mais informações sobre como criar expressões.</xref:System.Data.DataColumn.Expression*>"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)
  id: Add(System.String,System.Type,System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Add(String,Type,String)
  nameWithType: DataColumnCollection.Add(String,Type,String)
  fullName: System.Data.DataColumnCollection.Add(String,Type,String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Cria e adiciona um <xref href=&quot;System.Data.DataColumn&quot;> </xref> objeto que tem o nome especificado, o tipo e a expressão para o <xref href=&quot;System.Data.DataColumnCollection&quot;> </xref>."
  remarks: "Se `null` ou uma cadeia de caracteres vazia (&quot;&quot;) é passado para o nome, um nome padrão (&quot;Coluna1&quot;, &quot;Coluna2&quot; e assim por diante) é atribuído à coluna.       Use o <xref:System.Data.DataColumnCollection.Contains%2A>método para determinar se uma coluna com o nome proposto já existe na coleção.</xref:System.Data.DataColumnCollection.Contains%2A>       Se a coleção é alterada com êxito, adicionando ou removendo colunas, o <xref:System.Data.DataColumnCollection.CollectionChanged>evento ocorre.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example creates and adds a new <xref:System.Data.DataColumn> to a <xref:System.Data.DataColumnCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Add1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_5_1.vb)]"
  syntax:
    content: public System.Data.DataColumn Add (string columnName, Type type, string expression);
    parameters:
    - id: columnName
      type: System.String
      description: "O nome a ser usado ao criar a coluna."
    - id: type
      type: System.Type
      description: "O <xref:System.Data.DataColumn.DataType*>da nova coluna.</xref:System.Data.DataColumn.DataType*>"
    - id: expression
      type: System.String
      description: "A expressão a ser atribuída para o <xref:System.Data.DataColumn.Expression*>propriedade.</xref:System.Data.DataColumn.Expression*>"
    return:
      type: System.Data.DataColumn
      description: "Recém-criado <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Add*
  exceptions:
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A coleção já contém uma coluna com o nome especificado. (A comparação não diferencia maiusculas de minúsculas)."
  - type: System.Data.InvalidExpressionException
    commentId: T:System.Data.InvalidExpressionException
    description: "A expressão é inválida. Consulte o <xref:System.Data.DataColumn.Expression*>propriedade para obter mais informações sobre como criar expressões.</xref:System.Data.DataColumn.Expression*>"
  platform:
  - net462
- uid: System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])
  id: AddRange(System.Data.DataColumn[])
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: AddRange(DataColumn[])
  nameWithType: DataColumnCollection.AddRange(DataColumn[])
  fullName: System.Data.DataColumnCollection.AddRange(DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Copia os elementos do <xref href=&quot;System.Data.DataColumn&quot;> </xref> matriz ao final da coleção."
  syntax:
    content: public void AddRange (System.Data.DataColumn[] columns);
    parameters:
    - id: columns
      type: System.Data.DataColumn[]
      description: "A matriz de <xref href=&quot;System.Data.DataColumn&quot;> </xref> objetos para adicionar à coleção."
  overload: System.Data.DataColumnCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)
  id: CanRemove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: CanRemove(DataColumn)
  nameWithType: DataColumnCollection.CanRemove(DataColumn)
  fullName: System.Data.DataColumnCollection.CanRemove(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Verifica se uma coluna específica pode ser removida da coleção."
  remarks: "O método CanRemove executa várias verificações antes de retornar um `true` ou `false` resultados. Isso inclui o seguinte: se a coluna existe, pertence à tabela ou está envolvida em uma restrição ou relação.       Use o método CanRemove antes de tentar remover qualquer coluna de uma coleção. Você também pode usar o <xref:System.Data.DataColumnCollection.Contains%2A>método para determinar se uma determinada coluna existe antes de tentar removê-lo.</xref:System.Data.DataColumnCollection.Contains%2A>"
  example:
  - "The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If found, the CanRemove method tests whether the column can be removed. If so, the column is removed with the <xref:System.Data.DataColumnCollection.Remove%2A> method.  \n  \n [!code-vb[Classic WebData DataColumnCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_16_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_16_1.cs)]"
  syntax:
    content: public bool CanRemove (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "Um <xref href=&quot;System.Data.DataColumn&quot;> </xref> na coleção."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a coluna pode ser removida. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>if,      -   The <code>column</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.      -A coluna não pertence a esta coleção.      -A coluna faz parte de uma relação.      -Expressão da coluna outro depende dessa coluna."
  overload: System.Data.DataColumnCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Clear
  id: Clear
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: DataColumnCollection.Clear()
  fullName: System.Data.DataColumnCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Limpa a coleção de colunas."
  remarks: "Se a coleção é alterada com êxito, adicionando ou removendo colunas, o <xref:System.Data.DataColumnCollection.CollectionChanged>evento ocorre.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example clears the columns collection.  \n  \n [!code-cs[Classic WebData DataColumnCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_0_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_0_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.DataColumnCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: DataColumnCollection.CollectionChanged
  fullName: System.Data.DataColumnCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ocorre quando a coleção de colunas é alterada, seja adicionando ou removendo uma coluna."
  remarks: "Use o <xref:System.Data.DataColumnCollection.Contains%2A>e <xref:System.Data.DataColumnCollection.CanRemove%2A>métodos para determinar se uma coluna existe e pode ser removida.</xref:System.Data.DataColumnCollection.CanRemove%2A> </xref:System.Data.DataColumnCollection.Contains%2A>"
  example:
  - "The following example adds an event handler for the CollectionChanged event.  \n  \n [!code-cs[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.datacolumn_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.datacolumn_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: DataColumnCollection.Contains(String)
  fullName: System.Data.DataColumnCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Verifica se a coleção contém uma coluna com o nome especificado."
  remarks: "Use o método Contains para confirmar a existência de uma coluna antes de executar operações adicionais na coluna. O método retorna `false` quando duas ou mais colunas tem o mesmo nome mas diferentes namespaces. A chamada não êxito se houver qualquer ambiguidade durante a correspondência de um nome de coluna a exatamente uma coluna."
  example:
  - "The following example uses the Contains method and the <xref:System.Data.DataColumnCollection.CanRemove%2A> method to determine whether the column can be removed. If so, the column is removed.  \n  \n [!code-vb[Classic WebData DataColumnCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_3_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_3_1.cs)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "<xref:System.Data.DataColumn.ColumnName*>Coluna para pesquisar o loop for</xref:System.Data.DataColumn.ColumnName*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se existe uma coluna com este nome. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.DataColumnCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)
  id: CopyTo(System.Data.DataColumn[],System.Int32)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: CopyTo(DataColumn[],Int32)
  nameWithType: DataColumnCollection.CopyTo(DataColumn[],Int32)
  fullName: System.Data.DataColumnCollection.CopyTo(DataColumn[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Copia toda a coleção em uma matriz existente, começando em um índice especificado dentro da matriz."
  syntax:
    content: public void CopyTo (System.Data.DataColumn[] array, int index);
    parameters:
    - id: array
      type: System.Data.DataColumn[]
      description: "Uma matriz de <xref href=&quot;System.Data.DataColumn&quot;> </xref> objetos a serem copiados na coleção."
    - id: index
      type: System.Int32
      description: "O índice para iniciar a partir de."
  overload: System.Data.DataColumnCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)
  id: IndexOf(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: IndexOf(DataColumn)
  nameWithType: DataColumnCollection.IndexOf(DataColumn)
  fullName: System.Data.DataColumnCollection.IndexOf(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o índice de uma coluna especificada por nome."
  remarks: "O método IndexOf não diferencia maiusculas de minúsculas."
  example:
  - "The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a specified column exists in a <xref:System.Data.DataColumnCollection>. If so, the IndexOf method returns the index of the column.  \n  \n [!code-vb[Classic WebData DataColumnCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_14_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_14_1.cs)]"
  syntax:
    content: public int IndexOf (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "O nome da coluna para retornar."
    return:
      type: System.Int32
      description: "O índice da coluna especificada por <code> column </code> se ele for localizado; caso contrário, -1."
  overload: System.Data.DataColumnCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: DataColumnCollection.IndexOf(String)
  fullName: System.Data.DataColumnCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o índice da coluna com o nome específico (o nome não diferencia maiusculas de minúsculas)."
  syntax:
    content: public int IndexOf (string columnName);
    parameters:
    - id: columnName
      type: System.String
      description: "O nome da coluna a ser localizada."
    return:
      type: System.Int32
      description: "O índice baseado em zero da coluna com o nome especificado, ou -1 se a coluna não existe na coleção."
  overload: System.Data.DataColumnCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: DataColumnCollection.Item(Int32)
  fullName: System.Data.DataColumnCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o <xref href=&quot;System.Data.DataColumn&quot;> </xref> da coleção no índice especificado."
  remarks: "O <xref:System.Data.DataColumnCollection.Contains%2A>método pode ser usado para testar a existência de uma coluna.</xref:System.Data.DataColumnCollection.Contains%2A> Isso é útil antes de tentar usar o Item."
  example:
  - "The following example uses the Item property to print the <xref:System.Data.DataColumn.ColumnName%2A> value of a <xref:System.Data.DataColumn> object specified by index. The example uses the <xref:System.Data.DataTable> that is contained by a System.Windows.Forms.DataGrid control.  \n  \n [!code-cs[Classic WebData DataColumnCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.datacolumn_11_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.datacolumn_11_1.vb)]"
  syntax:
    content: public System.Data.DataColumn this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice com base em zero da coluna a ser retornada."
    return:
      type: System.Data.DataColumn
      description: "O <xref href=&quot;System.Data.DataColumn&quot;> </xref> no índice especificado."
  overload: System.Data.DataColumnCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O valor de índice é maior que o número de itens na coleção."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: DataColumnCollection.Item(String)
  fullName: System.Data.DataColumnCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o <xref href=&quot;System.Data.DataColumn&quot;> </xref> da coleção com o nome especificado."
  remarks: "<xref:System.Data.DataColumnCollection.Item%2A>diferencia maiusculas de minúsculas condicionalmente quando ele procura por nomes de coluna.</xref:System.Data.DataColumnCollection.Item%2A> Por exemplo, se um <xref:System.Data.DataColumn>chamado &quot;mydatacolumn&quot; e outro chamado &quot;Mydatacolumn&quot;, uma cadeia de caracteres usada para pesquisar uma das colunas é considerada como diferencia maiusculas de minúsculas.</xref:System.Data.DataColumn> No entanto, se existe &quot;mydatacolumn&quot; e &quot;Mydatacolumn&quot; não, a cadeia de caracteres de pesquisa é considerada como maiusculas e minúsculas."
  example:
  - "The following example uses the <xref:System.Data.DataColumnCollection.Item%2A> property to print the <xref:System.Data.DataColumn.DataType%2A> value of a <xref:System.Data.DataColumn> object specified by index.  \n  \n [!code-vb[Classic WebData DataColumnCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.datacolumn_14_1.vb)]\n [!code-cs[Classic WebData DataColumnCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.datacolumn_14_1.cs)]"
  syntax:
    content: public System.Data.DataColumn this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.Data.DataColumn.ColumnName*>da coluna para retornar.</xref:System.Data.DataColumn.ColumnName*>"
    return:
      type: System.Data.DataColumn
      description: "O <xref href=&quot;System.Data.DataColumn&quot;> </xref> na coleção com especificado <xref:System.Data.DataColumn.ColumnName*>; caso contrário, um valor nulo se o <xref href=&quot;System.Data.DataColumn&quot;> </xref> não existe.</xref:System.Data.DataColumn.ColumnName*>"
  overload: System.Data.DataColumnCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.List
  id: List
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: List
  nameWithType: DataColumnCollection.List
  fullName: System.Data.DataColumnCollection.List
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "A ser adicionado."
  overload: System.Data.DataColumnCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Remove(System.Data.DataColumn)
  id: Remove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Remove(DataColumn)
  nameWithType: DataColumnCollection.Remove(DataColumn)
  fullName: System.Data.DataColumnCollection.Remove(DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Remove o <xref href=&quot;System.Data.DataColumn&quot;> </xref> objeto da coleção."
  remarks: "Se a coleção é alterada com êxito, adicionando ou removendo colunas, o <xref:System.Data.DataColumnCollection.CollectionChanged>evento ocorre.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a named column exists. If so, the <xref:System.Data.DataColumnCollection.Item%2A> property returns the column. The <xref:System.Data.DataColumnCollection.CanRemove%2A> method then checks whether the column can be removed; if so, the Remove method removes it.  \n  \n [!code-cs[Classic WebData DataColumnCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_10_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_10_1.vb)]"
  syntax:
    content: public void Remove (System.Data.DataColumn column);
    parameters:
    - id: column
      type: System.Data.DataColumn
      description: "O <xref href=&quot;System.Data.DataColumn&quot;> </xref> para remover."
  overload: System.Data.DataColumnCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>column</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A coluna não pertence a esta coleção.       - Ou - a coluna faz parte de uma relação.       - Ou - expressão da outra coluna depende dessa coluna."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: DataColumnCollection.Remove(String)
  fullName: System.Data.DataColumnCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Remove o <xref href=&quot;System.Data.DataColumn&quot;> </xref> objeto que tem o nome especificado da coleção."
  remarks: "Se a coleção é alterada com êxito, adicionando ou removendo colunas, o <xref:System.Data.DataColumnCollection.CollectionChanged>evento ocorre.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If it is found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed. If so, the column is removed with the <xref:System.Data.DataColumnCollection.Remove%2A> method.  \n  \n [!code-cs[Classic WebData DataColumnCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.datacolumn_12_1.cs)]\n [!code-vb[Classic WebData DataColumnCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_12_1.vb)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da coluna a ser removida."
  overload: System.Data.DataColumnCollection.Remove*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A coleção não tem uma coluna com o nome especificado."
  platform:
  - net462
- uid: System.Data.DataColumnCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.DataColumnCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: DataColumnCollection.RemoveAt(Int32)
  fullName: System.Data.DataColumnCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Remove a coluna no índice especificado da coleção."
  remarks: "Se a coleção é alterada com êxito, adicionando ou removendo colunas, o <xref:System.Data.DataColumnCollection.CollectionChanged>evento ocorre.</xref:System.Data.DataColumnCollection.CollectionChanged>"
  example:
  - "The following example first uses the <xref:System.Data.DataColumnCollection.Contains%2A> method to determine whether a particular column is found in the collection. If it is found, the <xref:System.Data.DataColumnCollection.CanRemove%2A> method tests whether the column can be removed. If so, the column is removed with the RemoveAt method.  \n  \n [!code-vb[Classic WebData DataColumnCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.data.datacolumn_4_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice da coluna a ser removida."
  overload: System.Data.DataColumnCollection.RemoveAt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A coleção não tem uma coluna no índice especificado."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.Data.InvalidExpressionException
  parent: System.Data
  isExternal: false
  name: InvalidExpressionException
  nameWithType: InvalidExpressionException
  fullName: System.Data.InvalidExpressionException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.DataColumnCollection.Add
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add()
  nameWithType: DataColumnCollection.Add()
  fullName: System.Data.DataColumnCollection.Add()
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Data.DataColumnCollection.Add(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(DataColumn)
  nameWithType: DataColumnCollection.Add(DataColumn)
  fullName: System.Data.DataColumnCollection.Add(DataColumn)
- uid: System.Data.DataColumnCollection.Add(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(String)
  nameWithType: DataColumnCollection.Add(String)
  fullName: System.Data.DataColumnCollection.Add(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(String,Type)
  nameWithType: DataColumnCollection.Add(String,Type)
  fullName: System.Data.DataColumnCollection.Add(String,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Data.DataColumnCollection.Add(System.String,System.Type,System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add(String,Type,String)
  nameWithType: DataColumnCollection.Add(String,Type,String)
  fullName: System.Data.DataColumnCollection.Add(String,Type,String)
- uid: System.Data.DataColumnCollection.AddRange(System.Data.DataColumn[])
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: AddRange(DataColumn[])
  nameWithType: DataColumnCollection.AddRange(DataColumn[])
  fullName: System.Data.DataColumnCollection.AddRange(DataColumn[])
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DataColumnCollection.CanRemove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CanRemove(DataColumn)
  nameWithType: DataColumnCollection.CanRemove(DataColumn)
  fullName: System.Data.DataColumnCollection.CanRemove(DataColumn)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.DataColumnCollection.Clear
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Clear()
  nameWithType: DataColumnCollection.Clear()
  fullName: System.Data.DataColumnCollection.Clear()
- uid: System.Data.DataColumnCollection.CollectionChanged
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: DataColumnCollection.CollectionChanged
  fullName: System.Data.DataColumnCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.DataColumnCollection.Contains(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Contains(String)
  nameWithType: DataColumnCollection.Contains(String)
  fullName: System.Data.DataColumnCollection.Contains(String)
- uid: System.Data.DataColumnCollection.CopyTo(System.Data.DataColumn[],System.Int32)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CopyTo(DataColumn[],Int32)
  nameWithType: DataColumnCollection.CopyTo(DataColumn[],Int32)
  fullName: System.Data.DataColumnCollection.CopyTo(DataColumn[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataColumnCollection.IndexOf(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: IndexOf(DataColumn)
  nameWithType: DataColumnCollection.IndexOf(DataColumn)
  fullName: System.Data.DataColumnCollection.IndexOf(DataColumn)
- uid: System.Data.DataColumnCollection.IndexOf(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: DataColumnCollection.IndexOf(String)
  fullName: System.Data.DataColumnCollection.IndexOf(String)
- uid: System.Data.DataColumnCollection.Item(System.Int32)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: DataColumnCollection.Item(Int32)
  fullName: System.Data.DataColumnCollection.Item(Int32)
- uid: System.Data.DataColumnCollection.Item(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Item(String)
  nameWithType: DataColumnCollection.Item(String)
  fullName: System.Data.DataColumnCollection.Item(String)
- uid: System.Data.DataColumnCollection.List
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: List
  nameWithType: DataColumnCollection.List
  fullName: System.Data.DataColumnCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.DataColumnCollection.Remove(System.Data.DataColumn)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Remove(DataColumn)
  nameWithType: DataColumnCollection.Remove(DataColumn)
  fullName: System.Data.DataColumnCollection.Remove(DataColumn)
- uid: System.Data.DataColumnCollection.Remove(System.String)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Remove(String)
  nameWithType: DataColumnCollection.Remove(String)
  fullName: System.Data.DataColumnCollection.Remove(String)
- uid: System.Data.DataColumnCollection.RemoveAt(System.Int32)
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: DataColumnCollection.RemoveAt(Int32)
  fullName: System.Data.DataColumnCollection.RemoveAt(Int32)
- uid: System.Data.DataColumnCollection.Add*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Add
  nameWithType: DataColumnCollection.Add
- uid: System.Data.DataColumnCollection.AddRange*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: AddRange
  nameWithType: DataColumnCollection.AddRange
- uid: System.Data.DataColumnCollection.CanRemove*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CanRemove
  nameWithType: DataColumnCollection.CanRemove
- uid: System.Data.DataColumnCollection.Clear*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Clear
  nameWithType: DataColumnCollection.Clear
- uid: System.Data.DataColumnCollection.Contains*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Contains
  nameWithType: DataColumnCollection.Contains
- uid: System.Data.DataColumnCollection.CopyTo*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: CopyTo
  nameWithType: DataColumnCollection.CopyTo
- uid: System.Data.DataColumnCollection.IndexOf*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: IndexOf
  nameWithType: DataColumnCollection.IndexOf
- uid: System.Data.DataColumnCollection.Item*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Item
  nameWithType: DataColumnCollection.Item
- uid: System.Data.DataColumnCollection.List*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: List
  nameWithType: DataColumnCollection.List
- uid: System.Data.DataColumnCollection.Remove*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: Remove
  nameWithType: DataColumnCollection.Remove
- uid: System.Data.DataColumnCollection.RemoveAt*
  parent: System.Data.DataColumnCollection
  isExternal: false
  name: RemoveAt
  nameWithType: DataColumnCollection.RemoveAt
