### YamlMime:ManagedReference
items:
- uid: System.Windows.DataTemplate
  id: DataTemplate
  children:
  - System.Windows.DataTemplate.#ctor
  - System.Windows.DataTemplate.#ctor(System.Object)
  - System.Windows.DataTemplate.DataTemplateKey
  - System.Windows.DataTemplate.DataType
  - System.Windows.DataTemplate.Triggers
  - System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  langs:
  - csharp
  name: DataTemplate
  nameWithType: DataTemplate
  fullName: System.Windows.DataTemplate
  type: Class
  summary: "Descreve a estrutura visual de um objeto de dados."
  remarks: "Você usa um DataTemplate para especificar a visualização dos seus objetos de dados. Objetos de DataTemplate são particularmente úteis quando você está associando um <xref:System.Windows.Controls.ItemsControl>como um <xref:System.Windows.Controls.ListBox>para uma coleção inteira.</xref:System.Windows.Controls.ListBox> </xref:System.Windows.Controls.ItemsControl> Sem instruções específicas, uma <xref:System.Windows.Controls.ListBox>exibe a representação de cadeia de caracteres dos objetos em uma coleção.</xref:System.Windows.Controls.ListBox> Nesse caso, você pode usar um DataTemplate para definir a aparência de seus objetos de dados. O conteúdo de seu DataTemplate torna-se a estrutura visual de seus objetos de dados.       Para uma discussão mais profunda, consulte [visão geral de modelagem de dados](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to create a DataTemplate inline. The DataTemplate specifies that each data item appears as three <xref:System.Windows.Controls.TextBlock> elements within a <xref:System.Windows.Controls.StackPanel>. In this example, the data object is a class called `Task`. Note that each <xref:System.Windows.Controls.TextBlock> element in this template is bound to a property of the `Task` class.  \n  \n [!code-xml[DataTemplatingIntro_snip#Inline](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#inline)]  \n  \n It is more common to define a DataTemplate in the resources section so it can be a reusable object, as in the following example:  \n  \n [!code-xml[DataTemplatingIntro_snip#R1](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r1)]  \n[!code-xml[DataTemplatingIntro_snip#AsResource](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#asresource)]  \n[!code-xml[DataTemplatingIntro_snip#R2](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#r2)]  \n  \n Now you can use `myTaskTemplate` as a resource, as in the following example:  \n  \n [!code-xml[DataTemplatingIntro_snip#MyTaskTemplate](~/add/codesnippet/xaml/DataTemplatingSample/Window1.xaml#mytasktemplate)]  \n  \n For the complete sample, see [Introduction to Data Templating Sample](http://go.microsoft.com/fwlink/?LinkID=160009)."
  syntax:
    content: >-
      [System.Windows.Markup.DictionaryKeyProperty("DataTemplateKey")]

      public class DataTemplate : System.Windows.FrameworkTemplate
  inheritance:
  - System.Object
  - System.Windows.Threading.DispatcherObject
  - System.Windows.FrameworkTemplate
  implements: []
  inheritedMembers:
  - System.Windows.FrameworkTemplate.FindName(System.String,System.Windows.FrameworkElement)
  - System.Windows.FrameworkTemplate.HasContent
  - System.Windows.FrameworkTemplate.IsSealed
  - System.Windows.FrameworkTemplate.LoadContent
  - System.Windows.FrameworkTemplate.RegisterName(System.String,System.Object)
  - System.Windows.FrameworkTemplate.Resources
  - System.Windows.FrameworkTemplate.Seal
  - System.Windows.FrameworkTemplate.ShouldSerializeResources(System.Windows.Markup.XamlDesignerSerializationManager)
  - System.Windows.FrameworkTemplate.ShouldSerializeVisualTree
  - System.Windows.FrameworkTemplate.System#Windows#Markup#INameScope#FindName(System.String)
  - System.Windows.FrameworkTemplate.System#Windows#Markup#IQueryAmbient#IsAmbientPropertyAvailable(System.String)
  - System.Windows.FrameworkTemplate.Template
  - System.Windows.FrameworkTemplate.UnregisterName(System.String)
  - System.Windows.FrameworkTemplate.VisualTree
  - System.Windows.Threading.DispatcherObject.CheckAccess
  - System.Windows.Threading.DispatcherObject.Dispatcher
  - System.Windows.Threading.DispatcherObject.VerifyAccess
  platform:
  - net462
- uid: System.Windows.DataTemplate.#ctor
  id: '#ctor'
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplate()
  nameWithType: DataTemplate.DataTemplate()
  fullName: System.Windows.DataTemplate.DataTemplate()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> classe."
  syntax:
    content: public DataTemplate ();
    parameters: []
  overload: System.Windows.DataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.#ctor(System.Object)
  id: '#ctor(System.Object)'
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplate(Object)
  nameWithType: DataTemplate.DataTemplate(Object)
  fullName: System.Windows.DataTemplate.DataTemplate(Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> classe com especificado <xref:System.Windows.DataTemplate.DataType*>propriedade.</xref:System.Windows.DataTemplate.DataType*>"
  remarks: "Para se referir ao nome do tipo de classe, use o [x: tipo de extensão de marcação](~/add/includes/ajax-current-ext-md.md). Se o modelo é destinado [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] dados, isso é a cadeia de caracteres que representa o nome da marca dos dados."
  syntax:
    content: public DataTemplate (object dataType);
    parameters:
    - id: dataType
      type: System.Object
      description: "Se o modelo destina-se a dados de objeto, este é o nome do tipo do objeto de dados."
  overload: System.Windows.DataTemplate.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.DataTemplateKey
  id: DataTemplateKey
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
  fullName: System.Windows.DataTemplate.DataTemplateKey
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém a chave padrão do <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>."
  remarks: "Se você não definir a [diretiva X:Key](~/add/includes/ajax-current-ext-md.md) em um <xref:System.Windows.DataTemplate>que está em um <xref:System.Windows.ResourceDictionary>, o DataTemplateKey é usado como a chave.</xref:System.Windows.ResourceDictionary> </xref:System.Windows.DataTemplate>"
  syntax:
    content: public object DataTemplateKey { get; }
    return:
      type: System.Object
      description: "A chave padrão do <xref href=&quot;System.Windows.DataTemplate&quot;> </xref>."
  overload: System.Windows.DataTemplate.DataTemplateKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.DataType
  id: DataType
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: DataType
  nameWithType: DataTemplate.DataType
  fullName: System.Windows.DataTemplate.DataType
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o tipo para o qual o <xref href=&quot;System.Windows.DataTemplate&quot;> </xref> destina-se."
  remarks: "Essa propriedade é muito semelhante à <xref:System.Windows.Style.TargetType%2A>propriedade de <xref:System.Windows.Style>classe.</xref:System.Windows.Style> </xref:System.Windows.Style.TargetType%2A> Quando você define essa propriedade como o tipo de dados sem especificar um `x:Key`, o <xref:System.Windows.DataTemplate>é aplicado automaticamente a objetos de dados desse tipo.</xref:System.Windows.DataTemplate> Observe que quando você faz isso o `x:Key` é definido implicitamente. Portanto, se você atribuir <xref:System.Windows.DataTemplate>um `x:Key` valor, você está substituindo o implícita `x:Key` e <xref:System.Windows.DataTemplate>não poderá ser aplicado automaticamente.</xref:System.Windows.DataTemplate> </xref:System.Windows.DataTemplate>       Observe também que, se você estiver associando um <xref:System.Windows.Controls.ContentControl>a uma coleção de `Task` objetos, o <xref:System.Windows.Controls.ContentControl>não usa o <xref:System.Windows.DataTemplate>automaticamente.</xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ContentControl> </xref:System.Windows.Controls.ContentControl> Isso ocorre porque a associação em um <xref:System.Windows.Controls.ContentControl>precisa de mais informações para distinguir se você deseja associar a uma coleção inteira ou os objetos individuais.</xref:System.Windows.Controls.ContentControl> Se seu <xref:System.Windows.Controls.ContentControl>está controlando a seleção de um <xref:System.Windows.Controls.ItemsControl>tipo, você pode definir o <xref:System.Windows.Data.Binding.Path%2A>propriedade o <xref:System.Windows.Controls.ContentControl>Associando a &quot;`/`&quot; para indicar que você está interessado no item atual.</xref:System.Windows.Controls.ContentControl> </xref:System.Windows.Data.Binding.Path%2A> </xref:System.Windows.Controls.ItemsControl> </xref:System.Windows.Controls.ContentControl> Para obter um exemplo, consulte [como: associar a uma coleção e exibir informações com base na seleção](~/add/includes/ajax-current-ext-md.md). Caso contrário, você precisa especificar o <xref:System.Windows.DataTemplate>explicitamente, definindo o <xref:System.Windows.Controls.ContentControl.ContentTemplate%2A>propriedade.</xref:System.Windows.Controls.ContentControl.ContentTemplate%2A> </xref:System.Windows.DataTemplate>       A propriedade de tipo de dados é particularmente útil quando você tem uma <xref:System.Windows.Data.CompositeCollection>de tipos diferentes de objetos de dados.</xref:System.Windows.Data.CompositeCollection>       Se essa propriedade tem como alvo um elemento XML que não está no namespace padrão, você deve preceder o nome do elemento com o namespace ou por um designador de namespace. Para XML exposto por meio de LINQ para XML, o namespace aparece entre parênteses, precedido por uma sequência de escape de chave: ```xaml   <DataTemplate DataType=&quot;{}{http://myNamespace}Details&quot;>   ``` para XML expostos por meio do XPath, o nome do elemento é precedido por um designador de namespace estabelecido por uma instância do <xref:System.Windows.Data.XmlNamespaceMapping>: ```xaml   <DataTemplate DataType=&quot;mn:Details&quot;>   ``` <a name=&quot;xamlAttributeUsage_DataType&quot;> </a> # # uso do atributo XAML ```   <object DataType=&quot;typeName&quot;/>   ``` <a name=&quot;xamlValues_DataType&quot;> </a> # # XAML valores *typeName* se o modelo destina-se a dados de objeto, esta propriedade contém o nome do tipo do objeto de dados (como uma cadeia de caracteres).            </xref:System.Windows.Data.XmlNamespaceMapping> Para se referir ao nome do tipo de classe, use o [x: tipo de extensão de marcação](~/add/includes/ajax-current-ext-md.md). Se o modelo é destinado [!INCLUDE[TLA#tla_xml](~/add/includes/tlasharptla-xml-md.md)] dados, esta propriedade contém o nome do elemento XML. Consulte os comentários de documentação para obter detalhes sobre como especificar um namespace não padrão para o elemento XML."
  syntax:
    content: public object DataType { get; set; }
    return:
      type: System.Object
      description: "O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DataTemplate.DataType*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.Triggers
  id: Triggers
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: Triggers
  nameWithType: DataTemplate.Triggers
  fullName: System.Windows.DataTemplate.Triggers
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém uma coleção de gatilhos que se aplicam a valores de propriedade ou executar ações com base em uma ou mais condições."
  remarks: "Se você estiver criando gatilhos em um modelo de dados, setters dos gatilhos devem ser definindo propriedades que estão dentro do escopo do modelo de dados. Caso contrário, talvez seja mais adequado criar gatilhos usando um estilo que tem como alvo o tipo que contém os dados. Por exemplo, se você estiver associando um <xref:System.Windows.Controls.ListBox>controle, os contêineres são <xref:System.Windows.Controls.ListBoxItem>objetos.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.Controls.ListBox> Se você estiver usando gatilhos para definir as propriedades que não estão dentro do escopo do <xref:System.Windows.DataTemplate>, em seguida, talvez seja mais adequado criar um <xref:System.Windows.Controls.ListBoxItem>de estilo e criar disparadores no estilo.</xref:System.Windows.Controls.ListBoxItem> </xref:System.Windows.DataTemplate> Para obter mais informações, consulte o que pertence a um DataTemplate? no [visão geral de modelagem de dados](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Esta propriedade só pode ser definida [!INCLUDE[TLA#tla_xaml](~/add/includes/tlasharptla-xaml-md.md)] via mostra a sintaxe de coleção ou acessar o objeto de coleção e usando seus vários métodos, como adicionar. A propriedade para acessar o objeto de coleção é somente leitura, a coleção em si é leitura / gravação.      <a name=&quot;xamlPropertyElementUsage_Triggers&quot;></a># # Uso do elemento de propriedade de XAML ```   <object>     <object.Triggers>       OneOrMoreTriggers     </object.Triggers>   </object>   ``` <a name=&quot;xamlValues_Triggers&quot;> </a> # # XAML valores *OneOrMoreTriggers* Zero ou mais <xref:System.Windows.TriggerBase>objetos.</xref:System.Windows.TriggerBase>      "
  example:
  - "The following <xref:System.Windows.DataTemplate> demonstrates the use of the Triggers property.  \n  \n [!code-xml[DataBindingLab#AuctionItemDataTemplate](~/add/codesnippet/xaml/DataBindingLab/DataBindingLabApp.xaml#auctionitemdatatemplate)]  \n  \n For the complete sample, see [Data Binding Demo](http://go.microsoft.com/fwlink/?LinkID=163703)."
  syntax:
    content: public System.Windows.TriggerCollection Triggers { get; }
    return:
      type: System.Windows.TriggerCollection
      description: "Uma coleção de objetos de gatilho. O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DataTemplate.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  id: ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.DataTemplate
  langs:
  - csharp
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: DataTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.DataTemplate.ValidateTemplatedParent(FrameworkElement)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Verifica o modelo pai em relação a um conjunto de regras."
  remarks: "O método usa as seguintes regras: - o `templatedParent` deve ser não-nulo <xref:System.Windows.FrameworkElement>.</xref:System.Windows.FrameworkElement>      -O <xref:System.Windows.DataTemplate>deve ser aplicada a um <xref:System.Windows.Controls.ContentPresenter>.</xref:System.Windows.Controls.ContentPresenter> </xref:System.Windows.DataTemplate>"
  syntax:
    content: protected override void ValidateTemplatedParent (System.Windows.FrameworkElement templatedParent);
    parameters:
    - id: templatedParent
      type: System.Windows.FrameworkElement
      description: "O elemento que esse modelo é aplicado."
  overload: System.Windows.DataTemplate.ValidateTemplatedParent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.FrameworkTemplate
  isExternal: false
  name: System.Windows.FrameworkTemplate
- uid: System.Windows.DataTemplate.#ctor
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate()
  nameWithType: DataTemplate.DataTemplate()
  fullName: System.Windows.DataTemplate.DataTemplate()
- uid: System.Windows.DataTemplate.#ctor(System.Object)
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate(Object)
  nameWithType: DataTemplate.DataTemplate(Object)
  fullName: System.Windows.DataTemplate.DataTemplate(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DataTemplate.DataTemplateKey
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
  fullName: System.Windows.DataTemplate.DataTemplateKey
- uid: System.Windows.DataTemplate.DataType
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataType
  nameWithType: DataTemplate.DataType
  fullName: System.Windows.DataTemplate.DataType
- uid: System.Windows.DataTemplate.Triggers
  parent: System.Windows.DataTemplate
  isExternal: false
  name: Triggers
  nameWithType: DataTemplate.Triggers
  fullName: System.Windows.DataTemplate.Triggers
- uid: System.Windows.TriggerCollection
  parent: System.Windows
  isExternal: false
  name: TriggerCollection
  nameWithType: TriggerCollection
  fullName: System.Windows.TriggerCollection
- uid: System.Windows.DataTemplate.ValidateTemplatedParent(System.Windows.FrameworkElement)
  parent: System.Windows.DataTemplate
  isExternal: false
  name: ValidateTemplatedParent(FrameworkElement)
  nameWithType: DataTemplate.ValidateTemplatedParent(FrameworkElement)
  fullName: System.Windows.DataTemplate.ValidateTemplatedParent(FrameworkElement)
- uid: System.Windows.FrameworkElement
  parent: System.Windows
  isExternal: false
  name: FrameworkElement
  nameWithType: FrameworkElement
  fullName: System.Windows.FrameworkElement
- uid: System.Windows.DataTemplate.#ctor*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplate
  nameWithType: DataTemplate.DataTemplate
- uid: System.Windows.DataTemplate.DataTemplateKey*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataTemplateKey
  nameWithType: DataTemplate.DataTemplateKey
- uid: System.Windows.DataTemplate.DataType*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: DataType
  nameWithType: DataTemplate.DataType
- uid: System.Windows.DataTemplate.Triggers*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: Triggers
  nameWithType: DataTemplate.Triggers
- uid: System.Windows.DataTemplate.ValidateTemplatedParent*
  parent: System.Windows.DataTemplate
  isExternal: false
  name: ValidateTemplatedParent
  nameWithType: DataTemplate.ValidateTemplatedParent
