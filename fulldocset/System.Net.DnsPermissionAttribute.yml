### YamlMime:ManagedReference
items:
- uid: System.Net.DnsPermissionAttribute
  id: DnsPermissionAttribute
  children:
  - System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  - System.Net.DnsPermissionAttribute.CreatePermission
  langs:
  - csharp
  name: DnsPermissionAttribute
  nameWithType: DnsPermissionAttribute
  fullName: System.Net.DnsPermissionAttribute
  type: Class
  summary: "Especifica a permissão para solicitar informações de servidores de nome de domínio."
  remarks: "As informações de segurança declaradas por meio são armazenadas nos metadados do atributo de destino, que é a classe à qual o por meio é aplicado. O sistema, em seguida, acessa essas informações em tempo de execução. O <xref:System.Security.Permissions.SecurityAction>que é passado para o construtor determina os destinos DNS permitidos.</xref:System.Security.Permissions.SecurityAction>       Esses atributos de segurança são usados apenas para [segurança declarativa](http://msdn.microsoft.com/en-us/97e21efd-6e89-4115-90d5-ad239513dad8). Para [segurança obrigatória](http://msdn.microsoft.com/en-us/15aab1e1-6b7d-41ad-b102-c1ed7bedea27), use o correspondente <xref:System.Net.DnsPermission>classe.</xref:System.Net.DnsPermission>       Acesso de segurança totalmente restrito ou totalmente irrestrito. Definir o <xref:System.Security.Permissions.PermissionState>propriedade `true` para conceder acesso, ou `false` para nenhum acesso.</xref:System.Security.Permissions.PermissionState> Defina essa propriedade como um parâmetro nomeado.       Para obter mais informações sobre o uso de atributos, consulte [atributos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example uses DnsPermissionAttribute to apply declarative security to a custom class.  \n  \n [!code-cs[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/csharp/t-system.net.dnspermissi_1.cs)]\n [!code-cpp[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/cpp/t-system.net.dnspermissi_1.cpp)]\n [!code-vb[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/visualbasic/t-system.net.dnspermissi_1.vb)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Assembly | System.AttributeTargets.Class | System.AttributeTargets.Struct | System.AttributeTargets.Constructor | System.AttributeTargets.Method, AllowMultiple=true, Inherited=false)]

      public sealed class DnsPermissionAttribute : System.Security.Permissions.CodeAccessSecurityAttribute
  inheritance:
  - System.Attribute
  - System.Security.Permissions.SecurityAttribute
  - System.Security.Permissions.CodeAccessSecurityAttribute
  implements: []
  inheritedMembers:
  - System.Security.Permissions.SecurityAttribute.Action
  - System.Security.Permissions.SecurityAttribute.Unrestricted
  platform:
  - net462
- uid: System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  id: '#ctor(System.Security.Permissions.SecurityAction)'
  parent: System.Net.DnsPermissionAttribute
  langs:
  - csharp
  name: DnsPermissionAttribute(SecurityAction)
  nameWithType: DnsPermissionAttribute.DnsPermissionAttribute(SecurityAction)
  fullName: System.Net.DnsPermissionAttribute.DnsPermissionAttribute(SecurityAction)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.DnsPermissionAttribute&quot;> </xref> classe com especificado <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> valor."
  remarks: "O <xref:System.Security.Permissions.SecurityAction>valor que é passado para o construtor Especifica o permitido <xref:System.Net.DnsPermissionAttribute>destinos.</xref:System.Net.DnsPermissionAttribute> </xref:System.Security.Permissions.SecurityAction>"
  example:
  - "The following example uses <xref:System.Net.DnsPermissionAttribute> to apply declarative security to a custom class.  \n  \n [!code-cs[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/csharp/7a2591f2-0b5e-4482-b768-_1.cs)]\n [!code-cpp[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/cpp/7a2591f2-0b5e-4482-b768-_1.cpp)]\n [!code-vb[Classic DnsPermissionAttributeExample#1](~/add/codesnippet/visualbasic/7a2591f2-0b5e-4482-b768-_1.vb)]"
  syntax:
    content: public DnsPermissionAttribute (System.Security.Permissions.SecurityAction action);
    parameters:
    - id: action
      type: System.Security.Permissions.SecurityAction
      description: "Uma da <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref> valores."
  overload: System.Net.DnsPermissionAttribute.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> action </code> parâmetro não é válido <xref href=&quot;System.Security.Permissions.SecurityAction&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.DnsPermissionAttribute.CreatePermission
  id: CreatePermission
  parent: System.Net.DnsPermissionAttribute
  langs:
  - csharp
  name: CreatePermission()
  nameWithType: DnsPermissionAttribute.CreatePermission()
  fullName: System.Net.DnsPermissionAttribute.CreatePermission()
  type: Method
  assemblies:
  - System
  namespace: System.Net
  summary: "Cria e retorna uma nova instância do <xref href=&quot;System.Net.DnsPermission&quot;> </xref> classe."
  remarks: "O `CreatePermission` método é chamado pelo sistema de segurança, não pelo código do aplicativo.       As informações de segurança descritas por <xref:System.Net.DnsPermissionAttribute>é armazenado nos metadados do atributo de destino, que é a classe à qual <xref:System.Net.DnsPermissionAttribute>é aplicada.</xref:System.Net.DnsPermissionAttribute> </xref:System.Net.DnsPermissionAttribute> O sistema, em seguida, acessa as informações em tempo de execução e chama CreatePermission. O sistema usa retornado <xref:System.Security.IPermission>para impor os requisitos de segurança especificados.</xref:System.Security.IPermission>"
  syntax:
    content: public override System.Security.IPermission CreatePermission ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Um <xref href=&quot;System.Net.DnsPermission&quot;> </xref> que corresponde à declaração de segurança."
  overload: System.Net.DnsPermissionAttribute.CreatePermission*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Permissions.CodeAccessSecurityAttribute
  isExternal: false
  name: System.Security.Permissions.CodeAccessSecurityAttribute
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Net.DnsPermissionAttribute.#ctor(System.Security.Permissions.SecurityAction)
  parent: System.Net.DnsPermissionAttribute
  isExternal: false
  name: DnsPermissionAttribute(SecurityAction)
  nameWithType: DnsPermissionAttribute.DnsPermissionAttribute(SecurityAction)
  fullName: System.Net.DnsPermissionAttribute.DnsPermissionAttribute(SecurityAction)
- uid: System.Security.Permissions.SecurityAction
  parent: System.Security.Permissions
  isExternal: false
  name: SecurityAction
  nameWithType: SecurityAction
  fullName: System.Security.Permissions.SecurityAction
- uid: System.Net.DnsPermissionAttribute.CreatePermission
  parent: System.Net.DnsPermissionAttribute
  isExternal: false
  name: CreatePermission()
  nameWithType: DnsPermissionAttribute.CreatePermission()
  fullName: System.Net.DnsPermissionAttribute.CreatePermission()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Net.DnsPermissionAttribute.#ctor*
  parent: System.Net.DnsPermissionAttribute
  isExternal: false
  name: DnsPermissionAttribute
  nameWithType: DnsPermissionAttribute.DnsPermissionAttribute
- uid: System.Net.DnsPermissionAttribute.CreatePermission*
  parent: System.Net.DnsPermissionAttribute
  isExternal: false
  name: CreatePermission
  nameWithType: DnsPermissionAttribute.CreatePermission
