### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Control
  id: Control
  children:
  - System.Web.UI.Control.#ctor
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  langs:
  - csharp
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
  type: Class
  summary: "Define as propriedades, métodos e eventos que são compartilhados por todos os controles de servidor ASP.NET."
  remarks: "Esta é a classe principal que é derivado de quando você desenvolve controles de servidor ASP.NET. Controle não tem nenhum recurso específico do usuário (IU) da interface. Se você estiver criando um controle que não tem uma interface de usuário ou combina outros controles que processam sua própria interface do usuário, derivam de controle. Se você estiver criando um controle que tem uma interface do usuário, derivam <xref:System.Web.UI.WebControls.WebControl>ou qualquer controle no <xref:System.Web.UI.WebControls>ponto de namespace que fornece um começando apropriado para seu controle personalizado.</xref:System.Web.UI.WebControls> </xref:System.Web.UI.WebControls.WebControl>       A classe de controle é a classe base para todos os controles de servidor ASP.NET, incluindo páginas, controles personalizados e controles de usuário. Páginas ASP.NET são instâncias da <xref:System.Web.UI.Page>classe que herda da classe de controle e que manipulam solicitações para arquivos que têm uma extensão.</xref:System.Web.UI.Page>       A classe de controle pode diretamente ou indiretamente ser usados como parte da interface do usuário para seu aplicativo da Web e como tal, deve ser inspecionado para tornar-se de que as práticas recomendadas para escrever código seguro e proteção de aplicativos é seguido.       Para obter informações gerais sobre esses tópicos, consulte [visão geral da Web aplicativo contra ameaças à segurança](~/add/includes/ajax-current-ext-md.md), [NIB: práticas recomendadas de política de segurança](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), e [conceitos de segurança de chave](~/add/includes/ajax-current-ext-md.md). Para obter informações mais específicas, consulte [protegendo controles padrão](~/add/includes/ajax-current-ext-md.md), [como: exibir mensagens de erro de segurança](~/add/includes/ajax-current-ext-md.md), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](~/add/includes/ajax-current-ext-md.md), e [Introdução aos controles de validação](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)."
  example:
  - "The following example demonstrates a custom server control that derives from the Control class. The `InnerContent` class overrides the <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> method, checks to see if the class has any child controls on the page and determines whether the first child of the control is a literal control. If both of these conditions are met, the overridden method writes the HTML string \\<H2>Your Message:, the contents of the literal control, and a closing \\</H2> tag to the Web Forms page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Classic Control Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.control_1.vb)]\n [!code-cs[Classic Control Example#1](~/add/codesnippet/csharp/t-system.web.ui.control_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.Bindable(true)]

      [System.ComponentModel.DefaultProperty("ID")]

      [System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.ControlCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Designer("System.Web.UI.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.DesignerCategory("Code")]

      [System.ComponentModel.ToolboxItem("System.Web.UI.Design.WebControlToolboxItem, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItemFilter("System.Web.UI", System.ComponentModel.ToolboxItemFilterType.Require)]

      [System.Web.UI.Themeable(false)]

      public class Control : IDisposable, System.ComponentModel.IComponent, System.Web.UI.IControlBuilderAccessor, System.Web.UI.IControlDesignerAccessor, System.Web.UI.IDataBindingsAccessor, System.Web.UI.IExpressionsAccessor, System.Web.UI.IParserAccessor, System.Web.UI.IUrlResolutionService
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.IComponent
  - System.IDisposable
  - System.Web.UI.IControlBuilderAccessor
  - System.Web.UI.IControlDesignerAccessor
  - System.Web.UI.IDataBindingsAccessor
  - System.Web.UI.IExpressionsAccessor
  - System.Web.UI.IParserAccessor
  - System.Web.UI.IUrlResolutionService
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Control.#ctor
  id: '#ctor'
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Control()
  nameWithType: Control.Control()
  fullName: System.Web.UI.Control.Control()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.Control&quot;> </xref> classe."
  syntax:
    content: public Control ();
    parameters: []
  overload: System.Web.UI.Control.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Adapter
  id: Adapter
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Adapter
  nameWithType: Control.Adapter
  fullName: System.Web.UI.Control.Adapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o adaptador de navegador específico para o controle."
  remarks: "Páginas da Web ASP.NET são úteis em uma ampla variedade de dispositivos e navegadores que podem solicitar informações da Web. A propriedade de adaptador retorna o <xref:System.Web.UI.Adapters.ControlAdapter>objeto que renderiza o controle na tela do navegador ou do dispositivo solicitante.</xref:System.Web.UI.Adapters.ControlAdapter>       Para obter mais informações sobre os adaptadores, consulte [arquitetura visão geral do controle comportamento adaptável](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected System.Web.UI.Adapters.ControlAdapter Adapter { get; }
    return:
      type: System.Web.UI.Adapters.ControlAdapter
      description: "Um <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> para este controle. Retorna se o navegador de destino não requer um adaptador, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.Adapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  id: AddedControl(System.Web.UI.Control,System.Int32)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: AddedControl(Control,Int32)
  nameWithType: Control.AddedControl(Control,Int32)
  fullName: System.Web.UI.Control.AddedControl(Control,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Chamado depois que um controle filho é adicionado para o <xref:System.Web.UI.Control.Controls*>coleção do <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto.</xref:System.Web.UI.Control.Controls*>"
  remarks: "O método AddedControl é chamado imediatamente depois que um controle é adicionado para o <xref:System.Web.UI.Control.Controls%2A>coleção.</xref:System.Web.UI.Control.Controls%2A>"
  syntax:
    content: protected virtual void AddedControl (System.Web.UI.Control control, int index);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> que foi adicionado."
    - id: index
      type: System.Int32
      description: "O índice do controle no <xref:System.Web.UI.Control.Controls*>coleção.</xref:System.Web.UI.Control.Controls*>"
  overload: System.Web.UI.Control.AddedControl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>control</code>é um <xref href=&quot;System.Web.UI.WebControls.Substitution&quot;> </xref> controle."
  platform:
  - net462
- uid: System.Web.UI.Control.AddParsedSubObject(System.Object)
  id: AddParsedSubObject(System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: AddParsedSubObject(Object)
  nameWithType: Control.AddParsedSubObject(Object)
  fullName: System.Web.UI.Control.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Notifica o controle de servidor que um elemento XML ou HTML, foi analisado e adiciona o elemento para o controle de servidor <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto."
  remarks: "A menos que você substituí-la, este método adiciona automaticamente <xref:System.Web.UI.LiteralControl>objetos para o controle de servidor <xref:System.Web.UI.ControlCollection>objeto.</xref:System.Web.UI.ControlCollection> </xref:System.Web.UI.LiteralControl> Essa coleção está acessível por meio de <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>propriedade.</xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>"
  example:
  - "The following example is a custom server control that uses the AddParsedSubObject method to determine if elements declared between the opening and closing tags of this control are <xref:System.Web.UI.WebControls.TextBox> Web server controls. If they are, they are added to an <xref:System.Collections.ArrayList> object, `items`. When the overridden <xref:System.Web.UI.Control.CreateChildControls%2A> method is called, it iterates through the <xref:System.Collections.ArrayList> and adds each object in it to the <xref:System.Web.UI.ControlCollection> of the custom server control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Control_AddParsedSubObject#1](~/add/codesnippet/csharp/m-system.web.ui.control._12_1.cs)]\n [!code-vb[Control_AddParsedSubObject#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._12_1.vb)]"
  syntax:
    content: protected virtual void AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "Um <xref:System.Object>que representa o elemento analisado.</xref:System.Object>"
  overload: System.Web.UI.Control.AddParsedSubObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  id: ApplyStyleSheetSkin(System.Web.UI.Page)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ApplyStyleSheetSkin(Page)
  nameWithType: Control.ApplyStyleSheetSkin(Page)
  fullName: System.Web.UI.Control.ApplyStyleSheetSkin(Page)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Aplica-se as propriedades de estilo definidas na folha de estilo da página para o controle."
  remarks: "O método ApplyStyleSheetSkin define propriedades de estilo do controle com base nas propriedades de aparência definidas em um diretório do tema. A capa aplicada é a capa padrão para o controle ou a capa especificado no <xref:System.Web.UI.Control.SkinID%2A>propriedade.</xref:System.Web.UI.Control.SkinID%2A> O método ApplyStyleSheetSkin é chamado pelo ASP.NET para declarativos controles colocados em uma página. Você deve chamar o método ApplyStyleSheetSkin em quaisquer controles criadas programaticamente no tempo de execução de capas de folha de estilo aplicar ao controle. Capas de tema são aplicadas automaticamente. Para obter mais informações sobre a diferença entre os temas e folhas de estilo em cascata, consulte [capas e temas do ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void ApplyStyleSheetSkin (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "O <xref href=&quot;System.Web.UI.Page&quot;> </xref> que contém o controle."
  overload: System.Web.UI.Control.ApplyStyleSheetSkin*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A folha de estilos já foi aplicada."
  platform:
  - net462
- uid: System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  id: AppRelativeTemplateSourceDirectory
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: AppRelativeTemplateSourceDirectory
  nameWithType: Control.AppRelativeTemplateSourceDirectory
  fullName: System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o diretório virtual relativo de aplicativo do <xref href=&quot;System.Web.UI.Page&quot;> </xref> ou <xref href=&quot;System.Web.UI.UserControl&quot;> </xref> objeto que contém este controle."
  remarks: "A propriedade AppRelativeTemplateSourceDirectory contém o caminho relativo de aplicativo para o página ou controle de usuário que contém o controle atual. Por exemplo, se a página da Web reside no http://www.contoso.com/application/subdirectory, a propriedade AppRelativeTemplateSourceDirectory retorna &quot;~ / subdiretório&quot;.       Para retornar o caminho virtual (&quot;application/subdiretório&quot;), use o <xref:System.Web.UI.Control.TemplateSourceDirectory%2A>propriedade.</xref:System.Web.UI.Control.TemplateSourceDirectory%2A>"
  syntax:
    content: public string AppRelativeTemplateSourceDirectory { get; set; }
    return:
      type: System.String
      description: "O diretório virtual relativo de aplicativo do controle de usuário ou a página que contém este controle."
  overload: System.Web.UI.Control.AppRelativeTemplateSourceDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  id: BeginRenderTracing(System.IO.TextWriter,System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: BeginRenderTracing(TextWriter,Object)
  nameWithType: Control.BeginRenderTracing(TextWriter,Object)
  fullName: System.Web.UI.Control.BeginRenderTracing(TextWriter,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicia o rastreamento de tempo de design de dados de renderização."
  syntax:
    content: protected void BeginRenderTracing (System.IO.TextWriter writer, object traceObject);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "O objeto que grava dados de rastreamento."
    - id: traceObject
      type: System.Object
      description: "O objeto de rastreamento."
  overload: System.Web.UI.Control.BeginRenderTracing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.BindingContainer
  id: BindingContainer
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: BindingContainer
  nameWithType: Control.BindingContainer
  fullName: System.Web.UI.Control.BindingContainer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o controle que contém a associação de dados deste controle."
  remarks: "A propriedade BindingContainer contém uma referência para o <xref:System.Web.UI.Control>objeto que contém as informações de associação de dados para o controle atual.</xref:System.Web.UI.Control>       A propriedade BindingContainer é o mesmo que o <xref:System.Web.UI.Control.NamingContainer%2A>propriedade, exceto quando o controle é parte de um modelo.</xref:System.Web.UI.Control.NamingContainer%2A> Nesse caso, a propriedade BindingContainer é definida como o <xref:System.Web.UI.Control>que define o modelo.</xref:System.Web.UI.Control>"
  syntax:
    content: public System.Web.UI.Control BindingContainer { get; }
    return:
      type: System.Web.UI.Control
      description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> que contém a associação de dados deste controle."
  overload: System.Web.UI.Control.BindingContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  id: BuildProfileTree(System.String,System.Boolean)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: BuildProfileTree(String,Boolean)
  nameWithType: Control.BuildProfileTree(String,Boolean)
  fullName: System.Web.UI.Control.BuildProfileTree(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Reúne informações sobre o controle de servidor e enviá-lo para o <xref:System.Web.UI.Page.Trace*>propriedade a ser exibida quando o rastreamento está habilitado para a página.</xref:System.Web.UI.Page.Trace*>"
  remarks: "Esta propriedade reúne as informações necessárias sobre a hierarquia de interface do usuário da página e passa para a página [ \\&lt; rastreamento\\&gt;](../Topic/%3Ctrace%3E%20Element.md) propriedade. Quando você ativa o rastreamento, para uma página ou para seu aplicativo, essas informações são exibidas no `Control Tree` seção da saída de rastreamento. Saída de rastreamento para uma página é acrescentada ao final da página; enquanto a saída de rastreamento para um aplicativo pode ser exibida no Visualizador de rastreamento (Trace. axd arquivo) que é armazenado no diretório raiz do aplicativo. Para obter mais informações sobre rastreamento, consulte [visão geral de rastreamento ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void BuildProfileTree (string parentId, bool calcViewState);
    parameters:
    - id: parentId
      type: System.String
      description: "O identificador do pai do controle."
    - id: calcViewState
      type: System.Boolean
      description: "Um booliano que indica se o tamanho do estado de exibição é calculado."
  overload: System.Web.UI.Control.BuildProfileTree*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ChildControlsCreated
  id: ChildControlsCreated
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ChildControlsCreated
  nameWithType: Control.ChildControlsCreated
  fullName: System.Web.UI.Control.ChildControlsCreated
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se os controles filho do controle de servidor foram criados."
  remarks: ''
  example:
  - "The following example demonstrates an override of the <xref:System.Web.UI.Control.OnDataBinding%2A> method of a custom <xref:System.Web.UI.WebControls.Repeater> control. To ensure that child controls are not created until data binding occurs again, the ChildControlsCreated property is set to `true` after the <xref:System.Web.UI.WebControls.RepeaterItem> objects are created and added to the control's <xref:System.Web.UI.ControlCollection> object.  \n  \n [!code-cs[TemplatedDataBoundControl3#1](~/add/codesnippet/csharp/p-system.web.ui.control._14_1.cs)]\n [!code-vb[TemplatedDataBoundControl3#1](~/add/codesnippet/visualbasic/p-system.web.ui.control._14_1.vb)]  \n  \n The following example demonstrates how to use the custom repeater control in a Web page.  \n  \n [!code-cs[TemplatedDataBoundControl3#2](~/add/codesnippet/csharp/p-system.web.ui.control._14_2.aspx)]\n [!code-vb[TemplatedDataBoundControl3#2](~/add/codesnippet/visualbasic/p-system.web.ui.control._14_2.aspx)]"
  syntax:
    content: protected bool ChildControlsCreated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tem sido criados controles filho; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.ChildControlsCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClearCachedClientID
  id: ClearCachedClientID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClearCachedClientID()
  nameWithType: Control.ClearCachedClientID()
  fullName: System.Web.UI.Control.ClearCachedClientID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define o cache <xref:System.Web.UI.Control.ClientID*>valor <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.Control.ClientID*>"
  syntax:
    content: protected void ClearCachedClientID ();
    parameters: []
  overload: System.Web.UI.Control.ClearCachedClientID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClearChildControlState
  id: ClearChildControlState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClearChildControlState()
  nameWithType: Control.ClearChildControlState()
  fullName: System.Web.UI.Control.ClearChildControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Exclui as informações de estado de controle para controles do filho do controle de servidor."
  remarks: "O método ClearChildControlState é usado quando informações de estado do controle filho gravadas para o estado de controle do controle pai são substituídas conforme novos controles filho são criados, como quando controles de associação de dados filho em um controle de modelo de associação de dados de servidor. Chamar o método ClearChildControlState para controles filho vazio antes de chamar o <xref:System.Web.UI.Control.SaveControlState%2A>método reduz o tamanho das informações de estado de controle que devem ser transmitidos ou armazenados.</xref:System.Web.UI.Control.SaveControlState%2A>       Ao recriar controles filho de um <xref:System.Web.UI.Control>de objeto, use o método ClearChildControlState para limpar o estado do controle filho para que ele não é aplicado a novos controles inadvertidamente.</xref:System.Web.UI.Control>       Para limpar tanto o estado do controle filho e o estado de exibição, use o <xref:System.Web.UI.Control.ClearChildState%2A>método.</xref:System.Web.UI.Control.ClearChildState%2A>"
  syntax:
    content: protected void ClearChildControlState ();
    parameters: []
  overload: System.Web.UI.Control.ClearChildControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClearChildState
  id: ClearChildState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClearChildState()
  nameWithType: Control.ClearChildState()
  fullName: System.Web.UI.Control.ClearChildState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Exclui as informações de estado de controle e estado de exibição para controles filho de todo o controle de servidor."
  remarks: "O método ClearChildState limpa todas as informações de estado de controle e estado de exibição para controles filho. É equivalente a chamar tanto o <xref:System.Web.UI.Control.ClearChildViewState%2A>método e o <xref:System.Web.UI.Control.ClearChildControlState%2A>método.</xref:System.Web.UI.Control.ClearChildControlState%2A> </xref:System.Web.UI.Control.ClearChildViewState%2A>       Ao recriar controles filho de um <xref:System.Web.UI.Control>de objeto, use o método ClearChildState para limpar o estado filho para que ele não é aplicado a novos controles inadvertidamente.</xref:System.Web.UI.Control>"
  example:
  - "The following code example demonstrates how to override the <xref:System.Web.UI.Control.OnDataBinding%2A> method for a templated data-bound control. If the data source that the control binds to is populated, the control's <xref:System.Web.UI.ControlCollection> collection is emptied using the <xref:System.Web.UI.ControlCollection.Clear%2A> method, and the ClearChildState method is used to remove any state information that had been saved for the child controls.  \n  \n [!code-cs[TemplatedDataBoundControl2#3](~/add/codesnippet/csharp/m-system.web.ui.control._15_1.cs)]\n [!code-vb[TemplatedDataBoundControl2#3](~/add/codesnippet/visualbasic/m-system.web.ui.control._15_1.vb)]"
  syntax:
    content: protected void ClearChildState ();
    parameters: []
  overload: System.Web.UI.Control.ClearChildState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClearChildViewState
  id: ClearChildViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClearChildViewState()
  nameWithType: Control.ClearChildViewState()
  fullName: System.Web.UI.Control.ClearChildViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Exclui as informações de estado de exibição para controles filho de todo o controle de servidor."
  remarks: "Esse método é geralmente usado quando você substituir o <xref:System.Web.UI.Control.DataBind%2A>método durante o desenvolvimento de controles de modelo de associação de dados de servidor.</xref:System.Web.UI.Control.DataBind%2A> Se você não chama esse método, as informações de estado de exibição – controle filho podem ser gravadas para um controle de servidor pai, apenas a ser substituído quando os dados serão associados.       Ao recriar controles filho de um <xref:System.Web.UI.Control>, use o método ClearChildViewState para limpar o estado de exibição filho para que ele não é aplicado a novos controles inadvertidamente.</xref:System.Web.UI.Control>       Para obter mais informações sobre como usar esse método, consulte [como: criar controles de usuário ASP.NET modelos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected void ClearChildViewState ();
    parameters: []
  overload: System.Web.UI.Control.ClearChildViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClearEffectiveClientIDMode
  id: ClearEffectiveClientIDMode
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClearEffectiveClientIDMode()
  nameWithType: Control.ClearEffectiveClientIDMode()
  fullName: System.Web.UI.Control.ClearEffectiveClientIDMode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Conjuntos de <xref:System.Web.UI.Control.ClientIDMode*>propriedade da instância atual de controle e de quaisquer controles filho para <xref href=&quot;System.Web.UI.ClientIDMode&quot;> </xref>.</xref:System.Web.UI.Control.ClientIDMode*>"
  syntax:
    content: protected void ClearEffectiveClientIDMode ();
    parameters: []
  overload: System.Web.UI.Control.ClearEffectiveClientIDMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClientID
  id: ClientID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClientID
  nameWithType: Control.ClientID
  fullName: System.Web.UI.Control.ClientID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a ID de controle para marcação HTML que é gerada pelo ASP.NET."
  remarks: "Quando um controle de servidor Web é renderizado como um elemento HTML, o `id` atributo do elemento HTML é definido como o valor da propriedade ClientID. O valor ClientID geralmente é usado para acessar o elemento HTML no script de cliente usando o `document.getElementById` método. A ID também geralmente é usada nas regras CSS para especificar os elementos de estilo. Por exemplo, a regra de estilo CSS a seguir seleciona todos os `span` elementos que têm o `id` valor de atributo `ProductIDLabel` e define suas `background-color` atributo `white`: ```   span#ProductIDLabel { background-color: white; }   ``` ASP.NET fornece vários algoritmos para como gerar o valor da propriedade ClientID. Selecione qual algoritmo será usado para um controle definindo seu <xref:System.Web.UI.Control.ClientIDMode%2A>propriedade.</xref:System.Web.UI.Control.ClientIDMode%2A> Os algoritmos são identificados pelo <xref:System.Web.UI.ClientIDMode>valores de enumeração que estão listados na tabela a seguir.</xref:System.Web.UI.ClientIDMode>      | Valor | Descrição |   |-----------|-----------------|   | <xref:System.Web.UI.ClientIDMode>| O valor ClientID é gerado pela concatenação do <xref:System.Web.UI.Control.ID%2A>pai de valores de cada contêiner de nomenclatura com a <xref:System.Web.UI.Control.ID%2A>valor do controle.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.ClientIDMode> Em cenários de associação de dados em que várias instâncias de um controle são processadas, um valor incrementado é inserido na frente do controle <xref:System.Web.UI.Control.ID%2A>valor.</xref:System.Web.UI.Control.ID%2A> Cada segmento é separado por um caractere de sublinhado (_). Esse algoritmo foi usado em versões do ASP.NET anteriores ao ASP.NET 4. |   | <xref:System.Web.UI.ClientIDMode>| O valor ClientID é definido como o valor de <xref:System.Web.UI.Control.ID%2A>propriedade.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.ClientIDMode> Se o controle é um contêiner de nomeação, o controle é usado como a parte superior da hierarquia de contêineres de nomenclatura para os controles que ele contém. |   | <xref:System.Web.UI.ClientIDMode>| Esse algoritmo é usado para controles que estão em controles associados a dados.</xref:System.Web.UI.ClientIDMode> O valor ClientID é gerado o valor ClientID do contêiner de nomenclatura pai com a concatenação de <xref:System.Web.UI.Control.ID%2A>valor do controle.</xref:System.Web.UI.Control.ID%2A> Se o controle for um controle associado a dados que gera várias linhas, o valor do campo de dados especificado no <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A>propriedade é adicionada ao final.</xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> Para o <xref:System.Web.UI.WebControls.GridView>controlar dados de vários campos podem ser especificados.</xref:System.Web.UI.WebControls.GridView> Se o <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A>propriedade estiver em branco, um número sequencial é adicionado ao final, em vez de um valor de campo de dados.</xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> Cada segmento é separado por um caractere de sublinhado (_). |   | <xref:System.Web.UI.ClientIDMode>| O controle herda a configuração de <xref:System.Web.UI.ClientIDMode>do seu controle <xref:System.Web.UI.Control.NamingContainer%2A>. |       O valor padrão <xref:System.Web.UI.Control.ClientIDMode%2A>para uma página é <xref:System.Web.UI.ClientIDMode>.</xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.ClientIDMode%2A> </xref:System.Web.UI.Control.NamingContainer%2A> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.ClientIDMode> O valor padrão <xref:System.Web.UI.Control.ClientIDMode%2A>para um controle é <xref:System.Web.UI.ClientIDMode>.</xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.ClientIDMode%2A> Como o padrão para controles é <xref:System.Web.UI.ClientIDMode>, o modo de geração de padrão é <xref:System.Web.UI.ClientIDMode>.</xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.ClientIDMode> (No entanto, se você usar o Visual Studio para converter um projeto da Web em ASP.NET 4 de uma versão anterior, o Visual Studio define automaticamente o padrão do site <xref:System.Web.UI.ClientIDMode>no arquivo Web. config.)</xref:System.Web.UI.ClientIDMode>       Para obter mais informações, consulte [identificação do controle do servidor Web ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples show a Web user control that is inside a content page for a master page. The user control contains a <xref:System.Web.UI.WebControls.DropDownList> control and a <xref:System.Web.UI.WebControls.Label> control. The text that is displayed in the <xref:System.Web.UI.WebControls.Label> control is determined by the value that the user selects from the <xref:System.Web.UI.WebControls.DropDownList> control. The text value is set through client script so that the Web page does not have to post back to the server in order to set this value. To get a reference to the HTML element that is rendered for the <xref:System.Web.UI.WebControls.Label> control in client script, you must know the value of the control's ClientID property. However, because the user control can be put anywhere in a Web page, it is impossible to know in advance which naming containers will contain the controls. To make sure that the ClientID value will be the same as the <xref:System.Web.UI.Control.ID%2A> value, the code sets the <xref:System.Web.UI.Control.ClientIDMode%2A> value to <xref:System.Web.UI.WebControls.ValidatorDisplay>.  \n  \n The following example shows the user control.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows the content page that contains the user control.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows the master page that contains the content page.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual string ClientID { get; }
    return:
      type: System.String
      description: "A ID de controle para marcação HTML que é gerada pelo ASP.NET."
  overload: System.Web.UI.Control.ClientID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClientIDMode
  id: ClientIDMode
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClientIDMode
  nameWithType: Control.ClientIDMode
  fullName: System.Web.UI.Control.ClientIDMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o algoritmo que é usado para gerar o valor de <xref:System.Web.UI.Control.ClientID*>propriedade.</xref:System.Web.UI.Control.ClientID*>"
  remarks: "O ASP.NET fornece vários algoritmos para como gerar o <xref:System.Web.UI.Control.ClientID%2A>o valor da propriedade.</xref:System.Web.UI.Control.ClientID%2A> Selecione o algoritmo a ser usado para um controle definindo sua propriedade ClientIDMode. Os algoritmos são identificados pelo <xref:System.Web.UI.ClientIDMode>valores de enumeração que estão listados na tabela a seguir.</xref:System.Web.UI.ClientIDMode>      | Valor | Descrição |   |-----------|-----------------|   | <xref:System.Web.UI.ClientIDMode>| O <xref:System.Web.UI.Control.ClientID%2A>valor é gerado pela concatenação do <xref:System.Web.UI.Control.ID%2A>pai de valores de cada contêiner de nomenclatura com a <xref:System.Web.UI.Control.ID%2A>valor do controle.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.ClientIDMode> Em cenários de associação de dados em que várias instâncias de um controle são processadas, um valor incrementado é inserido na frente do controle <xref:System.Web.UI.Control.ID%2A>valor.</xref:System.Web.UI.Control.ID%2A> Cada segmento é separado por um caractere de sublinhado (_). Esse algoritmo foi usado em versões do ASP.NET anteriores ao ASP.NET 4. |   | <xref:System.Web.UI.ClientIDMode>| O <xref:System.Web.UI.Control.ClientID%2A>valor é definido como o valor de <xref:System.Web.UI.Control.ID%2A>propriedade.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.ClientIDMode> Se o controle é um contêiner de nomeação, o controle é usado como a parte superior da hierarquia de contêineres de nomenclatura para os controles que ele contém. |   | <xref:System.Web.UI.ClientIDMode>| Esse algoritmo é usado para controles que estão em controles associados a dados.</xref:System.Web.UI.ClientIDMode> O <xref:System.Web.UI.Control.ClientID%2A>valor é gerado pela concatenação do <xref:System.Web.UI.Control.ClientID%2A>valor do contêiner de nomenclatura pai com o <xref:System.Web.UI.Control.ID%2A>valor do controle.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.Control.ClientID%2A> Se o controle for um controle associado a dados que gera várias linhas, o valor do campo de dados especificado no <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A>propriedade é adicionada ao final.</xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> Para o <xref:System.Web.UI.WebControls.GridView>controlar dados de vários campos podem ser especificados.</xref:System.Web.UI.WebControls.GridView> Se o <xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A>propriedade estiver em branco, um número sequencial é adicionado ao final, em vez de um valor de campo de dados.</xref:System.Web.UI.WebControls.IDataBoundListControl.ClientIDRowSuffix%2A> Esse número começa em zero e é incrementado em 1 para cada linha. Cada segmento é separado por um caractere de sublinhado (_). |   | <xref:System.Web.UI.ClientIDMode>| O controle herda a configuração de <xref:System.Web.UI.ClientIDMode>do seu controle <xref:System.Web.UI.Control.NamingContainer%2A>. |       O valor padrão de ClientIDMode para uma página é <xref:System.Web.UI.ClientIDMode>.</xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.NamingContainer%2A> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.ClientIDMode> O valor padrão de ClientIDMode para um controle é <xref:System.Web.UI.ClientIDMode>.</xref:System.Web.UI.ClientIDMode> Como o padrão para controles é <xref:System.Web.UI.ClientIDMode>, o modo de geração de padrão é <xref:System.Web.UI.ClientIDMode>.</xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.ClientIDMode> (No entanto, se você usar o Visual Studio para converter um projeto da Web em ASP.NET 4 de uma versão anterior, o Visual Studio define automaticamente o padrão do site <xref:System.Web.UI.ClientIDMode>no arquivo Web. config.)</xref:System.Web.UI.ClientIDMode>       Para obter mais informações, consulte [identificação do controle do servidor Web ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows <xref:System.Web.UI.WebControls.Label> controls that are contained in a <xref:System.Web.UI.WebControls.ListView> control. On the <xref:System.Web.UI.WebControls.ListView> control, the ClientIDMode property is set to <xref:System.Web.UI.ClientIDMode> and the <xref:System.Web.UI.WebControls.ListView.ClientIDRowSuffix%2A> property is set to `ProductID`. In the rendered HTML, this creates three `span` elements that correspond to three `ProductIDLabel` controls. When the page runs, the `id` attributes for the `span` elements are set to the following values:  \n  \n-   `ListView1_ProductIDLabel_1`  \n  \n-   `ListView1_ProductIDLabel_34`  \n  \n-   `ListView1_ProductIDLabel_43`  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: public virtual System.Web.UI.ClientIDMode ClientIDMode { get; set; }
    return:
      type: System.Web.UI.ClientIDMode
      description: "Um valor que indica como o <xref:System.Web.UI.Control.ClientID*>propriedade é gerada.</xref:System.Web.UI.Control.ClientID*> O padrão é <xref href=&quot;System.Web.UI.ClientIDMode&quot;> </xref>."
  overload: System.Web.UI.Control.ClientIDMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ClientIDSeparator
  id: ClientIDSeparator
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ClientIDSeparator
  nameWithType: Control.ClientIDSeparator
  fullName: System.Web.UI.Control.ClientIDSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor de caracteres que representa o caractere separador usado no <xref:System.Web.UI.Control.ClientID*>propriedade.</xref:System.Web.UI.Control.ClientID*>"
  remarks: "O <xref:System.Web.UI.Control.ClientID%2A>valor é gerado pela concatenação do <xref:System.Web.UI.Control.ID%2A>valor do controle e o <xref:System.Web.UI.Control.UniqueID%2A>valor do controle pai.</xref:System.Web.UI.Control.UniqueID%2A> </xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.ClientID%2A> Cada parte da gerado <xref:System.Web.UI.Control.ID%2A>propriedade é separada, o valor da propriedade ClientIDSeparator.</xref:System.Web.UI.Control.ID%2A> O valor sempre retorna um caractere de sublinhado (_)."
  syntax:
    content: protected char ClientIDSeparator { get; }
    return:
      type: System.Char
      description: "Sempre retorna o caractere de sublinhado (_)."
  overload: System.Web.UI.Control.ClientIDSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Context
  id: Context
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Context
  nameWithType: Control.Context
  fullName: System.Web.UI.Control.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto associado com o controle de servidor para a solicitação da Web atual."
  remarks: "Essa propriedade fornece acesso para o <xref:System.Web.HttpContext>objeto para a solicitação da Web atual.</xref:System.Web.HttpContext> O objeto fornece propriedades que acessam o <xref:System.Web.HttpContext.Application%2A>, <xref:System.Web.HttpContext.Session%2A>, <xref:System.Web.HttpContext.Request%2A>, <xref:System.Web.HttpContext.Response%2A>e outros objetos que contêm informações sobre a solicitação HTTP atual.</xref:System.Web.HttpContext.Response%2A> </xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpContext.Session%2A> </xref:System.Web.HttpContext.Application%2A> Ele também fornece métodos que permitem que você obtenha informações de configuração e definir ou limpar erros para a solicitação."
  example:
  - >-
    [!code-vb[System.Web.UI.Control_Context_OnInit_ResolveUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.control._15_1.vb)]
     [!code-cs[System.Web.UI.Control_Context_OnInit_ResolveUrl#1](~/add/codesnippet/csharp/p-system.web.ui.control._15_1.cs)]
  syntax:
    content: protected virtual System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "Especificado <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto associado à solicitação atual."
  overload: System.Web.UI.Control.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Controls
  id: Controls
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Controls
  nameWithType: Control.Controls
  fullName: System.Web.UI.Control.Controls
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto que representa os controles filho de um controle de servidor especificado na hierarquia de interface do usuário."
  remarks: "Em uma página ASP.NET, quando controles são adicionados declarativamente entre as marcas de abertura e fechamento de um controle de servidor, ASP.NET adiciona automaticamente os controles para o recipiente do controle de servidor <xref:System.Web.UI.ControlCollection>.</xref:System.Web.UI.ControlCollection> Quaisquer marcas HTML ou cadeias de caracteres de texto que não são processadas no servidor são tratadas como <xref:System.Web.UI.LiteralControl>objetos.</xref:System.Web.UI.LiteralControl> Eles são adicionados à coleção, como outros controles de servidor.       A propriedade de controles permite acesso programático à instância do <xref:System.Web.UI.ControlCollection>classe para qualquer controle de servidor.</xref:System.Web.UI.ControlCollection> Você pode adicionar controles à coleção, remova os controles da coleção ou percorrer os controles do servidor na coleção."
  example:
  - "The following example demonstrates how to add child controls to a server control's <xref:System.Web.UI.ControlCollection> object through its Controls property.  \n  \n [!code-cs[Classic Control.Controls Example#1](~/add/codesnippet/csharp/p-system.web.ui.control._3_1.cs)]\n [!code-vb[Classic Control.Controls Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.control._3_1.vb)]"
  syntax:
    content: public virtual System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "A coleção de controles filho para o controle de servidor especificado."
  overload: System.Web.UI.Control.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.CreateChildControls
  id: CreateChildControls
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: CreateChildControls()
  nameWithType: Control.CreateChildControls()
  fullName: System.Web.UI.Control.CreateChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Chamado pela estrutura de página ASP.NET para notificar os controles de servidor que usam a implementação baseada em composição para criar os controles filho que eles contêm em preparação para postagem ou processamento."
  remarks: "Quando você desenvolve um controle composto ou modelo de servidor, você deve substituir esse método. Controles que substituem o método CreateChildControls devem implementar a <xref:System.Web.UI.INamingContainer>interface para evitar conflitos de nomenclatura.</xref:System.Web.UI.INamingContainer>       Para obter mais informações, consulte [Web Server Controls Templates](~/add/includes/ajax-current-ext-md.md) e [Developing Custom ASP.NET Server Controls](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates an overridden version of the CreateChildControls method. In this implementation, the composite control displays a <xref:System.Web.UI.WebControls.TextBox> control enclosed in two literal controls that render HTML.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[SystemWebUIControl CreateChildControls and EnsureChildControls#2](~/add/codesnippet/csharp/m-system.web.ui.control._8_1.cs)]\n [!code-vb[SystemWebUIControl CreateChildControls and EnsureChildControls#2](~/add/codesnippet/visualbasic/m-system.web.ui.control._8_1.vb)]"
  syntax:
    content: protected virtual void CreateChildControls ();
    parameters: []
  overload: System.Web.UI.Control.CreateChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: Control.CreateControlCollection()
  fullName: System.Web.UI.Control.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Cria um novo <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto para manter os controles filho (literal e servidor) do controle do servidor."
  remarks: "Substitua este método em um controle de servidor personalizado, se você tiver criado um objeto de coleção que é derivado da <xref:System.Web.UI.ControlCollection>classe</xref:System.Web.UI.ControlCollection> de Em seguida, você pode instanciar dessa classe de coleção na substituição desse método."
  example:
  - "The following code example overrides the CreateControlCollection method to create an instance of a `CustomControlCollection` class, which inherits from the <xref:System.Web.UI.ControlCollection> class.  \n  \n [!code-cs[System.Web.UI.ControlCollection_CTor_Owner#2](~/add/codesnippet/csharp/m-system.web.ui.control._20_1.cs)]\n [!code-vb[System.Web.UI.ControlCollection_CTor_Owner#2](~/add/codesnippet/visualbasic/m-system.web.ui.control._20_1.vb)]  \n  \n The following code example uses the CreateControlCollection method in a custom server control override of the <xref:System.Web.UI.Control.CreateChildControls%2A> method. The new collection is created, and then populated with two child controls, `firstControl` and `secondControl`.  \n  \n [!code-vb[Control_Sample_1#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._20_2.vb)]\n [!code-cs[Control_Sample_1#1](~/add/codesnippet/csharp/m-system.web.ui.control._20_2.cs)]"
  syntax:
    content: protected virtual System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "Um <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> objeto para conter controles de servidor do filho do controle de servidor atual."
  overload: System.Web.UI.Control.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DataBind
  id: DataBind
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DataBind()
  nameWithType: Control.DataBind()
  fullName: System.Web.UI.Control.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Associa uma fonte de dados para o controle de servidor chamada e todos os seus controles filhos."
  remarks: "Use esse método para associar os dados de uma fonte para um controle de servidor. Normalmente, esse método é usado depois de recuperar um conjunto de dados por meio de uma consulta de banco de dados. A maioria dos controles executar associação de dados do automaticamente, que significa que você normalmente não precisa chamar este método explicitamente.       Esse método normalmente é substituído quando você cria um controle de associação de dados de modelo personalizado. Para obter mais informações, consulte [como: criar controles de usuário ASP.NET modelos](~/add/includes/ajax-current-ext-md.md) e [Developing Custom Data-Bound Web Server Controls](~/add/includes/ajax-current-ext-md.md). Quando chamado em um controle de servidor, esse método resolve todas as expressões de associação de dados no controle de servidor e em qualquer um dos seus controles filhos."
  example:
  - "The following example overrides the DataBind method in a custom ASP.NET server control. It begins by calling the base <xref:System.Web.UI.Control.OnDataBinding%2A> method and then uses the <xref:System.Web.UI.ControlCollection.Clear%2A?displayProperty=fullName> method to delete all the child controls and the <xref:System.Web.UI.Control.ClearChildViewState%2A> method to delete any saved view-state settings for those child controls. Finally, the <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true` and the control is instructed to track any changes to the view state of the newly created controls with the <xref:System.Web.UI.Control.TrackViewState%2A> method. This is a common technique when binding data to a control to ensure that new data does not conflict with data stored from a previous DataBind method call.  \n  \n [!code-cs[Control_StateManagement#6](~/add/codesnippet/csharp/m-system.web.ui.control._5_1.cs)]\n [!code-vb[Control_StateManagement#6](~/add/codesnippet/visualbasic/m-system.web.ui.control._5_1.vb)]"
  syntax:
    content: public virtual void DataBind ();
    parameters: []
  overload: System.Web.UI.Control.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DataBind(System.Boolean)
  id: DataBind(System.Boolean)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DataBind(Boolean)
  nameWithType: Control.DataBind(Boolean)
  fullName: System.Web.UI.Control.DataBind(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Associa uma fonte de dados para o controle de servidor chamada e todos os seus controles filhos com uma opção para gerar o <xref href=&quot;System.Web.UI.Control.DataBinding&quot;> </xref> eventos."
  remarks: "Use o método de associação de dados em um cenário de quando o controle personalizado substitui o <xref:System.Web.UI.Control.DataBind%2A>método e implementa o <xref:System.Web.UI.IDataItemContainer>interface.</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.Control.DataBind%2A> Nesse cenário, o controle personalizado chama o método de associação de dados com `raiseOnDataBinding` definida como `false` para garantir que a classe base <xref:System.Web.UI.Control.DataBind%2A>método é chamado.</xref:System.Web.UI.Control.DataBind%2A>       O <xref:System.Web.UI.Control.DataBind?displayProperty=fullName>método invoca o método DataBind com `raiseOnDataBinding` definido como `true`.</xref:System.Web.UI.Control.DataBind?displayProperty=fullName>      > [!NOTE] > Chamando o método DataBind com `raiseOnDataBinding` definida como `false` faz com que qualquer filho controla como os dados associados com o <xref:System.Web.UI.Control.DataBind?displayProperty=fullName>método.</xref:System.Web.UI.Control.DataBind?displayProperty=fullName>"
  syntax:
    content: protected virtual void DataBind (bool raiseOnDataBinding);
    parameters:
    - id: raiseOnDataBinding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.Control.DataBinding&quot;> </xref> evento é gerado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DataBindChildren
  id: DataBindChildren
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DataBindChildren()
  nameWithType: Control.DataBindChildren()
  fullName: System.Web.UI.Control.DataBindChildren()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Associa uma fonte de dados para os controles filho do controle de servidor."
  remarks: "Use o método DataBindChildren para associar a uma fonte de dados para os controles filho de um controle de servidor.      > [!NOTE] > Quando chamado em um controle de servidor, esse método não associar dados ao controle. Para associar um controle de servidor e todos os seus controles filhos, chame o <xref:System.Web.UI.Control.DataBind%2A>método.</xref:System.Web.UI.Control.DataBind%2A>"
  syntax:
    content: protected virtual void DataBindChildren ();
    parameters: []
  overload: System.Web.UI.Control.DataBindChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DataBinding
  id: DataBinding
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DataBinding
  nameWithType: Control.DataBinding
  fullName: System.Web.UI.Control.DataBinding
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre quando o controle de servidor vinculado a uma fonte de dados."
  remarks: "Esse evento notifica o controle de servidor para executar qualquer lógica de associação de dados que foi gravada para ele."
  example:
  - >-
    [!code-vb[ITemplate_Interface#1](~/add/codesnippet/visualbasic/e-system.web.ui.control._0_1.vb)]
     [!code-cs[ITemplate_Interface#1](~/add/codesnippet/csharp/e-system.web.ui.control._0_1.cs)]
  syntax:
    content: public event EventHandler DataBinding;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DataItemContainer
  id: DataItemContainer
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DataItemContainer
  nameWithType: Control.DataItemContainer
  fullName: System.Web.UI.Control.DataItemContainer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência para o contêiner de nomenclatura se o contêiner de nomeação implementa <xref href=&quot;System.Web.UI.IDataItemContainer&quot;> </xref>."
  syntax:
    content: public System.Web.UI.Control DataItemContainer { get; }
    return:
      type: System.Web.UI.Control
      description: "O contêiner de nomenclatura. Em uma hierarquia de nomenclatura contêineres que implementam <xref href=&quot;System.Web.UI.IDataItemContainer&quot;> </xref>, essa propriedade retorna o contêiner de nomenclatura na parte superior da hierarquia, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se atual <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto não está em um contêiner de nomenclatura que implementa <xref href=&quot;System.Web.UI.IDataItemContainer&quot;> </xref>."
  overload: System.Web.UI.Control.DataItemContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DataKeysContainer
  id: DataKeysContainer
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DataKeysContainer
  nameWithType: Control.DataKeysContainer
  fullName: System.Web.UI.Control.DataKeysContainer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência para o contêiner de nomenclatura se o contêiner de nomeação implementa <xref href=&quot;System.Web.UI.IDataKeysControl&quot;> </xref>."
  syntax:
    content: public System.Web.UI.Control DataKeysContainer { get; }
    return:
      type: System.Web.UI.Control
      description: "O contêiner de nomenclatura. Em uma hierarquia de nomenclatura contêineres que implementam <xref href=&quot;System.Web.UI.IDataKeysControl&quot;> </xref>, a propriedade retorna o contêiner de nomenclatura na parte superior da hierarquia, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se atual <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto não está em um contêiner de nomenclatura que implementa <xref href=&quot;System.Web.UI.IDataKeysControl&quot;> </xref>."
  overload: System.Web.UI.Control.DataKeysContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.DesignMode
  id: DesignMode
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: DesignMode
  nameWithType: Control.DesignMode
  fullName: System.Web.UI.Control.DesignMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se um controle está sendo usado em uma superfície de design."
  remarks: "A propriedade retorna DesignMode `true` para indicar que o controle está sendo usado no contexto de um designer. Os controles personalizados podem usar essa propriedade ao comportamento de tempo de design é diferente do comportamento de tempo de execução."
  syntax:
    content: protected bool DesignMode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle está sendo usado em um designer. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.DesignMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Dispose
  id: Dispose
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Dispose()
  nameWithType: Control.Dispose()
  fullName: System.Web.UI.Control.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Permite que um controle de servidor executar final limpeza antes que ele seja liberado da memória."
  remarks: "Chamar Dispose quando terminar de usar o <xref:System.Web.UI.Control>.</xref:System.Web.UI.Control> O método Dispose deixa a <xref:System.Web.UI.Control>em um estado inutilizável.</xref:System.Web.UI.Control> Depois de chamar esse método, você deve liberar todas as referências para o controle para a memória estava ocupando pode ser recuperada pela coleta de lixo."
  example:
  - "The following code example overrides the Dispose method to close the <xref:System.Web.UI.HtmlTextWriter> object associated with a control, and call the Dispose method on a <xref:System.Web.UI.WebControls.Button> control, named `myButton`. If an <xref:System.Exception> is thrown when this version of the Dispose method is called, the control writes a message to the current <xref:System.Web.HttpResponse> object.  \n  \n [!code-cs[Control_Dispose#1](~/add/codesnippet/csharp/m-system.web.ui.control._2_1.cs)]\n [!code-vb[Control_Dispose#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._2_1.vb)]"
  syntax:
    content: public virtual void Dispose ();
    parameters: []
  overload: System.Web.UI.Control.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Disposed
  id: Disposed
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Disposed
  nameWithType: Control.Disposed
  fullName: System.Web.UI.Control.Disposed
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre quando um controle de servidor é liberado da memória, que é o último estágio do ciclo de vida de controle de servidor quando uma página ASP.NET é solicitada."
  remarks: "Recursos que exigem muito tempo do processador, como conexões de banco de dados, devem ser liberados com esse evento."
  syntax:
    content: public event EventHandler Disposed;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.EnableTheming
  id: EnableTheming
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: EnableTheming
  nameWithType: Control.EnableTheming
  fullName: System.Web.UI.Control.EnableTheming
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se os temas se aplicam a este controle."
  remarks: "A propriedade EnableTheming indica se os temas estão habilitados para um controle especificado. Quando a propriedade EnableTheming for `true`, diretório de tema do aplicativo é pesquisado capas de controle aplicar. Se nenhuma capa de controle específico existe no diretório do tema, capas não são aplicadas.       Quando a propriedade EnableTheming for `false`, o diretório de tema não é pesquisado e o conteúdo do <xref:System.Web.UI.Control.SkinID%2A>propriedade não é usada.</xref:System.Web.UI.Control.SkinID%2A>       Temas podem ser habilitados na página, o contêiner ou o nível de controle. Um controle pode substituir o valor de EnableTheming definido pelo seu controle pai, ou pelo conteúdo da página."
  syntax:
    content: public virtual bool EnableTheming { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>usar temas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.EnableTheming*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_Page_PreInit\" name=\"Page_PreInit\" href=\"\"></xref> event has already occurred.  \n  \n \\- or -  \n  \n The control has already been added to the <xref uid=\"langword_csharp_Controls\" name=\"Controls\" href=\"\"></xref> collection."
  platform:
  - net462
- uid: System.Web.UI.Control.EnableViewState
  id: EnableViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: EnableViewState
  nameWithType: Control.EnableViewState
  fullName: System.Web.UI.Control.EnableViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se o controle de servidor persiste o estado de exibição e o estado de exibição de qualquer controles filho que ele contém, para o cliente solicitante."
  remarks: "Estado de exibição permite um controle de servidor manter seu estado em solicitações HTTP. Estado de exibição para um controle estará habilitado se todas as seguintes condições forem atendidas:-a propriedade para a página é definida como `true`.      -A propriedade do controle é definida como `true`.      -A <xref:System.Web.UI.Control.ViewStateMode%2A>propriedade para o controle é definida como <xref:System.Web.UI.ViewStateMode>ou herda o <xref:System.Web.UI.ViewStateMode>configuração.</xref:System.Web.UI.ViewStateMode> </xref:System.Web.UI.ViewStateMode> </xref:System.Web.UI.Control.ViewStateMode%2A>       Para obter mais informações, consulte o <xref:System.Web.UI.Control.ViewStateMode%2A>propriedade.</xref:System.Web.UI.Control.ViewStateMode%2A>       Estado de exibição de um controle de servidor é o acúmulo de todos os seus valores de propriedade. Para preservar a esses valores em solicitações HTTP, o ASP.NET usa uma instância do <xref:System.Web.UI.StateBag>classe para armazenar os valores de propriedade.</xref:System.Web.UI.StateBag> Os valores são passados como uma variável para um campo oculto quando solicitações subsequentes são processadas. Para obter mais informações sobre o estado de exibição, consulte [visão geral sobre o estado de exibição ASP.NET](~/add/includes/ajax-current-ext-md.md).       Há ocasiões em que é apropriado para desabilitar o estado de exibição, particularmente para melhorar o desempenho do aplicativo. Por exemplo, se você estiver carregando uma solicitação de banco de dados em um controle de servidor, defina essa propriedade como `false`. Se você não fizer isso, o tempo de processador será desperdiçado carregamento do estado de exibição para o controle de servidor que só será substituído pela consulta de banco de dados. Se for EnableViewState `false`, você pode usar o estado de controle para manter informações de propriedade que é específica para o controle e não podem ser desativadas como a propriedade de estado de exibição. Para obter mais informações sobre a diferença entre o estado de controle e estado de exibição, consulte [vs de estado do controle. Exemplo de estado de exibição](~/add/includes/ajax-current-ext-md.md).       Para obter informações sobre como habilitar ou desabilitar o estado de exibição declarativamente para uma página ASP.NET, consulte."
  example:
  - "The following example sets the EnableViewState property to `false`.  \n  \n [!code-vb[Control_StateManagement#7](~/add/codesnippet/visualbasic/p-system.web.ui.control._13_1.aspx)]\n [!code-cs[Control_StateManagement#7](~/add/codesnippet/csharp/p-system.web.ui.control._13_1.aspx)]"
  syntax:
    content: public virtual bool EnableViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle de servidor mantém seu estado de exibição; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.EnableViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  id: EndRenderTracing(System.IO.TextWriter,System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: EndRenderTracing(TextWriter,Object)
  nameWithType: Control.EndRenderTracing(TextWriter,Object)
  fullName: System.Web.UI.Control.EndRenderTracing(TextWriter,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Termina o rastreamento de tempo de design de dados de renderização."
  syntax:
    content: protected void EndRenderTracing (System.IO.TextWriter writer, object traceObject);
    parameters:
    - id: writer
      type: System.IO.TextWriter
      description: "O objeto que grava dados de rastreamento."
    - id: traceObject
      type: System.Object
      description: "O objeto de rastreamento."
  overload: System.Web.UI.Control.EndRenderTracing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.EnsureChildControls
  id: EnsureChildControls
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: EnsureChildControls()
  nameWithType: Control.EnsureChildControls()
  fullName: System.Web.UI.Control.EnsureChildControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o controle de servidor contém controles filho. Se não existir, ele cria filho controles."
  remarks: "Esse método primeiro verifica o valor atual de <xref:System.Web.UI.Control.ChildControlsCreated%2A>propriedade.</xref:System.Web.UI.Control.ChildControlsCreated%2A> Se esse valor for `false`, o <xref:System.Web.UI.Control.CreateChildControls%2A>método é chamado.</xref:System.Web.UI.Control.CreateChildControls%2A>       O método EnsureChildControls normalmente é usado em controles compostos, que são controles que usam os controles filho para algumas ou todas as suas funcionalidades. O método EnsureChildControls é chamado para certificar-se de que os controles filho foram criados e estão prontos para processar a entrada, para realizar a associação de dados ou executar outras tarefas.       O <xref:System.Web.UI.WebControls.GridView>controle é um exemplo de um controle composto.</xref:System.Web.UI.WebControls.GridView> Ele cria filho controles, como <xref:System.Web.UI.WebControls.Table>, <xref:System.Web.UI.WebControls.TableRow>, <xref:System.Web.UI.WebControls.TableCell>, <xref:System.Web.UI.WebControls.Label>, e <xref:System.Web.UI.WebControls.TextBox>controles, que são usados para renderizar HTML da tabela que o <xref:System.Web.UI.WebControls.GridView>gera.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.TableRow> </xref:System.Web.UI.WebControls.Table>       Na maioria dos casos, os desenvolvedores de controle de servidor personalizado é preciso substituir este método. Se você substituir esse método, você deve usá-lo de forma semelhante ao comportamento padrão."
  example:
  - "The following example uses the EnsureChildControls method to ensure that the current server control has child controls. It then gets or sets a <xref:System.Web.UI.WebControls.TextBox.Text%2A> property for a child <xref:System.Web.UI.WebControls.TextBox> Web control in the current server control's <xref:System.Web.UI.ControlCollection> object.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[SystemWebUIControl CreateChildControls and EnsureChildControls#1](~/add/codesnippet/csharp/m-system.web.ui.control._26_1.cs)]\n [!code-vb[SystemWebUIControl CreateChildControls and EnsureChildControls#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._26_1.vb)]"
  syntax:
    content: protected virtual void EnsureChildControls ();
    parameters: []
  overload: System.Web.UI.Control.EnsureChildControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.EnsureID
  id: EnsureID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: EnsureID()
  nameWithType: Control.EnsureID()
  fullName: System.Web.UI.Control.EnsureID()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Cria um identificador para controles que não têm um identificador atribuído."
  remarks: "O método EnsureID gera um identificador para controles que estão contidos em um outro controle. Identificadores são gerados somente para controles que não têm um valor atribuído ao <xref:System.Web.UI.Control.ID%2A>propriedade.</xref:System.Web.UI.Control.ID%2A>"
  syntax:
    content: protected void EnsureID ();
    parameters: []
  overload: System.Web.UI.Control.EnsureID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Events
  id: Events
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Events
  nameWithType: Control.Events
  fullName: System.Web.UI.Control.Events
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma lista de delegados de manipulador de eventos para o controle. Essa propriedade é somente leitura."
  remarks: "Essa propriedade é do tipo <xref:System.ComponentModel.EventHandlerList>, que usa um algoritmo de pesquisa linear para localizar as entradas na lista de delegados.</xref:System.ComponentModel.EventHandlerList> Um algoritmo de pesquisa linear é ineficiente ao trabalhar com um grande número de entradas. Portanto, quando você tiver uma lista grande, localizando entradas com essa propriedade será lentas."
  example:
  - "The following example creates an event, named `Click`, that adds and removes handlers from the control's <xref:System.ComponentModel.EventHandlerList> collection when the event is called from a page.  \n  \n **Note** This example optimizes how a control adds and removes events from the list of them that the control maintains. If you create custom control and want to define an event, use code similar to this. This technique can be used in C#, but not in Visual Basic.  \n  \n [!code-cs[System.Web.UI.Page_VerifyRenderingInServerForm#1](~/add/codesnippet/csharp/p-system.web.ui.control._9_1.cs)]"
  syntax:
    content: protected System.ComponentModel.EventHandlerList Events { get; }
    return:
      type: System.ComponentModel.EventHandlerList
      description: "A lista de delegados de manipulador de eventos."
  overload: System.Web.UI.Control.Events*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: Control.FindControl(String)
  fullName: System.Web.UI.Control.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Procura o contêiner de nomeação atual para um controle de servidor com especificado <code> id </code> parâmetro."
  remarks: 'Use FindControl para um controle de acesso de uma função em uma página code-behind, para acessar um controle que está dentro de outro contêiner, ou em outras circunstâncias em que o controle de destino não é diretamente acessível para o chamador. Esse método encontrará um controle somente se o controle será contido diretamente pelo contêiner especificado; ou seja, o método de pesquisa em uma hierarquia de controles nos controles. Para obter informações sobre como localizar um controle quando você não souber seu contêiner imediata, consulte [como: controles de servidor de acesso por ID](~/add/includes/ajax-current-ext-md.md).'
  example:
  - "The following example defines a `Button1_Click` event handler. When invoked, this handler uses the <xref:System.Web.UI.Control.FindControl%2A> method to locate a control with an <xref:System.Web.UI.Control.ID%2A> property of `TextBox2` on the containing page. If the control is found, its parent is determined using the <xref:System.Web.UI.Control.Parent%2A> property and the parent control's <xref:System.Web.UI.Control.ID%2A> is written to the page. If `TextBox2` is not found, \"Control Not Found\" is written to the page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Parent_FindControl#1](~/add/codesnippet/csharp/m-system.web.ui.control._6_1.aspx)]\n [!code-vb[System.Web.UI.Page.Parent_FindControl#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._6_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "O identificador para o controle a ser localizado."
    return:
      type: System.Web.UI.Control
      description: "O controle especificado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o controle especificado não existe."
  overload: System.Web.UI.Control.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.FindControl(System.String,System.Int32)
  id: FindControl(System.String,System.Int32)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: FindControl(String,Int32)
  nameWithType: Control.FindControl(String,Int32)
  fullName: System.Web.UI.Control.FindControl(String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Procura o contêiner de nomeação atual para um controle de servidor com especificado <code> id </code> e um número inteiro especificado no <code> pathOffset </code> parâmetro, que ajuda na pesquisa. Você não deve substituir esta versão do <xref:System.Web.UI.Control.FindControl*>método.</xref:System.Web.UI.Control.FindControl*>"
  syntax:
    content: protected virtual System.Web.UI.Control FindControl (string id, int pathOffset);
    parameters:
    - id: id
      type: System.String
      description: "O identificador para o controle a ser localizado."
    - id: pathOffset
      type: System.Int32
      description: "O número de controles da hierarquia de controle de página necessário para alcançar um contêiner de nomenclatura."
    return:
      type: System.Web.UI.Control
      description: "O controle especificado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o controle especificado não existe."
  overload: System.Web.UI.Control.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Focus
  id: Focus
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Focus()
  nameWithType: Control.Focus()
  fullName: System.Web.UI.Control.Focus()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define o foco para um controle de entrada."
  remarks: "Use o método de foco para definir o foco inicial da página da Web para o controle. A página será aberta no navegador com o controle selecionado.       O método de foco faz uma chamada para o script de foco de página a ser emitido na página renderizada. Se a página não contém um controle com uma marca HTML `ID` atributo que coincide com o controle que o método foco foi invocado em, em seguida, o foco de página não será definido. Um exemplo em que isso pode ocorrer é quando você definir o foco em um controle de usuário em vez de definir o foco em um controle filho do controle de usuário. Nesse cenário, você pode usar o <xref:System.Web.UI.Control.FindControl%2A>método para localizar o controle filho do controle de usuário e invocar o método de foco.</xref:System.Web.UI.Control.FindControl%2A>"
  syntax:
    content: public virtual void Focus ();
    parameters: []
  overload: System.Web.UI.Control.Focus*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.GetDesignModeState
  id: GetDesignModeState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: GetDesignModeState()
  nameWithType: Control.GetDesignModeState()
  fullName: System.Web.UI.Control.GetDesignModeState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém os dados de tempo de design para um controle."
  remarks: "O método GetDesignModeState retorna dados de tempo de design para um controle."
  syntax:
    content: protected virtual System.Collections.IDictionary GetDesignModeState ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que contém os dados de tempo de design para o controle.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Control.GetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.GetRouteUrl(System.Object)
  id: GetRouteUrl(System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: GetRouteUrl(Object)
  nameWithType: Control.GetRouteUrl(Object)
  fullName: System.Web.UI.Control.GetRouteUrl(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a URL que corresponde a um conjunto de parâmetros de rota."
  remarks: "Este método é fornecido para a conveniência de codificação. É equivalente a chamar o <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName>método.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName> Este método converte o objeto que é transmitido `routeParameters` para um <xref:System.Web.Routing.RouteValueDictionary>objeto usando o <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>construtor.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary>"
  example:
  - "The following example shows how to call the GetRouteUrl method to get the URL of a route that has parameters that are named `productid` and `category`. This example assumes that you have created a <xref:System.Web.UI.WebControls.HyperLink> control that is named `HyperLink1`.  \n  \n```vb#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public string GetRouteUrl (object routeParameters);
    parameters:
    - id: routeParameters
      type: System.Object
      description: "Os parâmetros de rota."
    return:
      type: System.String
      description: "A URL que corresponde aos parâmetros de rota especificado."
  overload: System.Web.UI.Control.GetRouteUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  id: GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: GetRouteUrl(RouteValueDictionary)
  nameWithType: Control.GetRouteUrl(RouteValueDictionary)
  fullName: System.Web.UI.Control.GetRouteUrl(RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a URL que corresponde a um conjunto de parâmetros de rota."
  remarks: "Este método é fornecido para a conveniência de codificação. É equivalente a chamar o <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName>método.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName>"
  example:
  - "The following example shows how to call this method to get the URL of a route that has parameters that are named `productid` and `category`. This example assumes that you have created a <xref:System.Web.UI.WebControls.HyperLink> control that is named `HyperLink1`.  \n  \n```vb#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(  \n  (new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public string GetRouteUrl (System.Web.Routing.RouteValueDictionary routeParameters);
    parameters:
    - id: routeParameters
      type: System.Web.Routing.RouteValueDictionary
      description: "Os parâmetros de rota."
    return:
      type: System.String
      description: "A URL que corresponde aos parâmetros de rota especificado."
  overload: System.Web.UI.Control.GetRouteUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  id: GetRouteUrl(System.String,System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: GetRouteUrl(String,Object)
  nameWithType: Control.GetRouteUrl(String,Object)
  fullName: System.Web.UI.Control.GetRouteUrl(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a URL que corresponde a um conjunto de parâmetros de rota e um nome de rota."
  remarks: "Este método é fornecido para a conveniência de codificação. É equivalente a chamar o <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName>método.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName> Este método converte o objeto que é transmitido `routeParameters` para um <xref:System.Web.Routing.RouteValueDictionary>objeto usando o <xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName>construtor.</xref:System.Web.Routing.RouteValueDictionary.%23ctor%28System.Object%29?displayProperty=fullName> </xref:System.Web.Routing.RouteValueDictionary>"
  example:
  - "The following example shows how to call this method to get the URL of a route that is named `Product` and has parameters that are named `productid` and `category`. This example assumes that you have created a <xref:System.Web.UI.WebControls.HyperLink> control that is named `HyperLink1`.  \n  \n```vb#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(\"Product\",  \n  New With {.productid = \"1\", .category = \"widgets\"})  \n```  \n  \n```c#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(\"Product\",  \n  new { productid = \"1\", category = \"widgets\" });  \n```"
  syntax:
    content: public string GetRouteUrl (string routeName, object routeParameters);
    parameters:
    - id: routeName
      type: System.String
      description: "O nome da rota."
    - id: routeParameters
      type: System.Object
      description: "Os parâmetros de rota."
    return:
      type: System.String
      description: "A URL que corresponde ao nome da rota e os parâmetros de rota especificado."
  overload: System.Web.UI.Control.GetRouteUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  id: GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: GetRouteUrl(String,RouteValueDictionary)
  nameWithType: Control.GetRouteUrl(String,RouteValueDictionary)
  fullName: System.Web.UI.Control.GetRouteUrl(String,RouteValueDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a URL que corresponde a um conjunto de parâmetros de rota e um nome de rota."
  remarks: "Este método é fornecido para a conveniência de codificação. É equivalente a chamar o <xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName>método.</xref:System.Web.Routing.RouteCollection.GetVirtualPath%28System.Web.Routing.RequestContext%2CSystem.String%2CSystem.Web.Routing.RouteValueDictionary%29?displayProperty=fullName>"
  example:
  - "The following example shows how to call this method to get the URL of a route that is named `Product` and has parameters that are named `productid` and `category`. This example assumes that you have created a <xref:System.Web.UI.WebControls.HyperLink> control that is named `HyperLink1`.  \n  \n```vb#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(\"Product\",  \n  new RouteValueDictionary {productId=\"1\", category=\"widgets\"})  \n```  \n  \n```c#  \nHyperLink1.NavigateUrl = HyperLink1.GetRouteUrl(\"Product\",  \n  (new RouteValueDictionary {productId=\"1\", category=\"widgets\"});  \n```"
  syntax:
    content: public string GetRouteUrl (string routeName, System.Web.Routing.RouteValueDictionary routeParameters);
    parameters:
    - id: routeName
      type: System.String
      description: "O nome da rota."
    - id: routeParameters
      type: System.Web.Routing.RouteValueDictionary
      description: "Os parâmetros de rota."
    return:
      type: System.String
      description: "A URL que corresponde ao nome da rota e os parâmetros de rota especificado."
  overload: System.Web.UI.Control.GetRouteUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  id: GetUniqueIDRelativeTo(System.Web.UI.Control)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: GetUniqueIDRelativeTo(Control)
  nameWithType: Control.GetUniqueIDRelativeTo(Control)
  fullName: System.Web.UI.Control.GetUniqueIDRelativeTo(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Retorna a parte prefixada do <xref:System.Web.UI.Control.UniqueID*>propriedade do controle especificado.</xref:System.Web.UI.Control.UniqueID*>"
  remarks: "O <xref:System.Web.UI.Control.UniqueID%2A>propriedade de um controle é gerada, adicionando um prefixo para o controle <xref:System.Web.UI.Control.ID%2A>propriedade.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.Control.UniqueID%2A> O prefixo é composto de <xref:System.Web.UI.Control.UniqueID%2A>propriedade do controle de contêiner de nomeação concatenado com um caractere separador.</xref:System.Web.UI.Control.UniqueID%2A> Se o contêiner de nomenclatura é a página, não há nenhum prefixo. Esse método retorna a cadeia de caracteres de prefixo. Se não houver nenhuma cadeia de caracteres de prefixo, ele retorna o <xref:System.Web.UI.Control.UniqueID%2A>valor do controle.</xref:System.Web.UI.Control.UniqueID%2A>"
  syntax:
    content: public string GetUniqueIDRelativeTo (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "Um controle que está dentro de um contêiner de nomenclatura."
    return:
      type: System.String
      description: "A parte prefixada do <xref:System.Web.UI.Control.UniqueID*>propriedade do controle especificado.</xref:System.Web.UI.Control.UniqueID*>"
  overload: System.Web.UI.Control.GetUniqueIDRelativeTo*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Web.UI.Control.NamingContainer*> property of <code>control</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.Control.NamingContainer*>"
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Control.HasChildViewState
  id: HasChildViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: HasChildViewState
  nameWithType: Control.HasChildViewState
  fullName: System.Web.UI.Control.HasChildViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se os controles filho do controle de servidor atual tem as configurações de exibição de estado salvas."
  remarks: "Você pode evitar o desnecessárias chamadas para o <xref:System.Web.UI.Control.ClearChildViewState%2A>método usando essa propriedade para verificar se os controles filho do controle de servidor estão armazenando informações de estado de exibição.</xref:System.Web.UI.Control.ClearChildViewState%2A>"
  example:
  - >-
    [!code-cs[Control_StateManagement#5](~/add/codesnippet/csharp/p-system.web.ui.control._0_1.cs)]
     [!code-vb[Control_StateManagement#5](~/add/codesnippet/visualbasic/p-system.web.ui.control._0_1.vb)]
  syntax:
    content: protected bool HasChildViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os controles filho salvar informações de estado de exibição; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.HasChildViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.HasControls
  id: HasControls
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: HasControls()
  nameWithType: Control.HasControls()
  fullName: System.Web.UI.Control.HasControls()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o controle de servidor contém os controles filho."
  remarks: "Desde que este método simplesmente determina se os controles filho existirem, ele pode aumentar o desempenho, permitindo que você evite um desnecessários <xref:System.Web.UI.ControlCollection.Count%2A>chamada de propriedade.</xref:System.Web.UI.ControlCollection.Count%2A> Chamadas para essa propriedade requerem um <xref:System.Web.UI.ControlCollection>objeto a ser instanciado.</xref:System.Web.UI.ControlCollection> Se não houver nenhum filho, a criação de objeto desperdiça recursos do servidor."
  example:
  - "The following example uses the HasControls method to determine if any controls exist before using the <xref:System.Web.UI.ControlCollection.Count%2A> property to iterate through a <xref:System.Web.UI.ControlCollection> object.  \n  \n [!code-vb[Classic Control.HasControls Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._16_1.vb)]\n [!code-cs[Classic Control.HasControls Example#1](~/add/codesnippet/csharp/m-system.web.ui.control._16_1.cs)]"
  syntax:
    content: public virtual bool HasControls ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle contiver outros controles. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.HasControls*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.HasEvents
  id: HasEvents
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: HasEvents()
  nameWithType: Control.HasEvents()
  fullName: System.Web.UI.Control.HasEvents()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Retorna um valor que indica se os eventos são registrados para o controle ou os controles filho."
  syntax:
    content: protected bool HasEvents ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os eventos são registrados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.HasEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ID
  id: ID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ID
  nameWithType: Control.ID
  fullName: System.Web.UI.Control.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o identificador programático atribuído ao controle de servidor."
  remarks: "A definição dessa propriedade em um controle de servidor fornece acesso programático aos métodos, eventos e propriedades do controle de servidor. Essa propriedade pode ser definida por desenvolvedores da Web, declarando um atributo de ID na marca de abertura de um controle de servidor ASP.NET.       Se essa propriedade não for especificada para um controle de servidor, declarativamente ou por meio de programação, você pode obter uma referência para o controle por meio do controle pai <xref:System.Web.UI.Control.Controls%2A>propriedade.</xref:System.Web.UI.Control.Controls%2A>      > [!NOTE] > Somente combinações de caracteres alfanuméricos e o caractere de sublinhado (_) são valores válidos para essa propriedade. Incluindo espaços ou outros caracteres inválidos causará um erro de análise de página do ASP.NET."
  example:
  - >-
    [!code-cs[Control_Sample#2](~/add/codesnippet/csharp/p-system.web.ui.control.id_1.aspx)]
     [!code-vb[Control_Sample#2](~/add/codesnippet/visualbasic/p-system.web.ui.control.id_1.aspx)]
  syntax:
    content: public virtual string ID { get; set; }
    return:
      type: System.String
      description: "O identificador programático atribuído ao controle."
  overload: System.Web.UI.Control.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.IdSeparator
  id: IdSeparator
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: IdSeparator
  nameWithType: Control.IdSeparator
  fullName: System.Web.UI.Control.IdSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o caractere usado para separar os identificadores de controle."
  remarks: "O caractere contido na propriedade IdSeparator é usado para separar os identificadores de controle para controles filho. O caractere separador de ID é acrescentado ao <xref:System.Web.UI.Control.ID%2A>propriedade.</xref:System.Web.UI.Control.ID%2A>"
  syntax:
    content: protected char IdSeparator { get; }
    return:
      type: System.Char
      description: "O caractere separador. O padrão é &quot;$&quot;."
  overload: System.Web.UI.Control.IdSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Init
  id: Init
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Init
  nameWithType: Control.Init
  fullName: System.Web.UI.Control.Init
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre quando o controle de servidor é inicializado, o que é a primeira etapa do ciclo de vida."
  remarks: "Controles de servidor devem executar as etapas de inicialização que são necessárias para criar e configurar uma instância. Você não pode usar as informações de estado de exibição dentro desse evento; não é populada ainda. Você não deve acessar outro controle de servidor durante este evento, independentemente de ser um filho ou pai para este controle. Outros controles de servidor não tem certeza ser criado e está pronto para acesso. Para obter mais informações sobre eventos de controle de servidor, consulte [modelo de evento de controle do ASP.NET Web Forms Server](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example assigns a custom event handler, `Calendar_Init`, to the `Init` event of a <xref:System.Web.UI.WebControls.Calendar> control.  \n  \n [!code-cs[Control_Sample#4](~/add/codesnippet/csharp/e-system.web.ui.control._2_1.aspx)]\n [!code-vb[Control_Sample#4](~/add/codesnippet/visualbasic/e-system.web.ui.control._2_1.aspx)]"
  syntax:
    content: public event EventHandler Init;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.IsChildControlStateCleared
  id: IsChildControlStateCleared
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: IsChildControlStateCleared
  nameWithType: Control.IsChildControlStateCleared
  fullName: System.Web.UI.Control.IsChildControlStateCleared
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se os controles contidos dentro deste controle têm estado de controle."
  syntax:
    content: protected bool IsChildControlStateCleared { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os filhos deste controle não usar o estado de controle; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.IsChildControlStateCleared*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.IsLiteralContent
  id: IsLiteralContent
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: IsLiteralContent()
  nameWithType: Control.IsLiteralContent()
  fullName: System.Web.UI.Control.IsLiteralContent()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o controle de servidor contém apenas o conteúdo literal."
  remarks: "Quando este método retorna `true`, coleção do controle do servidor contém um único controle literal."
  example:
  - "The following example checks whether the page that contains the server controls has posted back. If it has, it calls the IsLiteralContent method to determine whether the control contains just literal content, or is a parent control to other server controls. If it contains solely literal content, the <xref:System.Web.UI.Control.UniqueID%2A> property of the <xref:System.Web.UI.LiteralControl> that represents that content is written to the response.  \n  \n [!code-vb[System.Web.UI.Control_ViewStateIgnoresCase#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._19_1.vb)]\n [!code-cs[System.Web.UI.Control_ViewStateIgnoresCase#1](~/add/codesnippet/csharp/m-system.web.ui.control._19_1.cs)]"
  syntax:
    content: protected bool IsLiteralContent ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle de servidor contiver somente conteúdo literal; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.IsLiteralContent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: Control.IsTrackingViewState
  fullName: System.Web.UI.Control.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o controle de servidor é salvar alterações em seu estado de exibição."
  remarks: "Para um controle de servidor personalizado de exemplo que usa essa propriedade, consulte [modelo exemplo de controle de servidor](~/add/includes/ajax-current-ext-md.md)"
  example:
  - "The following example overrides the <xref:System.Web.UI.Control.DataBind%2A> method in a custom ASP.NET server control. It begins by calling the base <xref:System.Web.UI.Control.OnDataBinding%2A> method and then uses the `ControlCollection` object. <xref:System.Web.UI.ControlCollection.Clear%2A?displayProperty=fullName> method to delete all the child controls and the <xref:System.Web.UI.Control.ClearChildViewState%2A> method to delete any saved view-state settings for those child controls. Finally, the <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true`. The control then uses the IsTrackingViewState property to determine whether view-state change tracking is enabled for the control. If it is not enabled, the <xref:System.Web.UI.Control.TrackViewState%2A> method is called.  \n  \n [!code-cs[Control_StateManagement#4](~/add/codesnippet/csharp/p-system.web.ui.control._1_1.cs)]\n [!code-vb[Control_StateManagement#4](~/add/codesnippet/visualbasic/p-system.web.ui.control._1_1.vb)]"
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle está marcado para salvar seu estado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.IsViewStateEnabled
  id: IsViewStateEnabled
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: IsViewStateEnabled
  nameWithType: Control.IsViewStateEnabled
  fullName: System.Web.UI.Control.IsViewStateEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o estado de exibição está habilitado para este controle."
  remarks: "Estado de exibição pode ser habilitado na página, o contêiner ou o nível de controle. Quando o estado de exibição está desabilitado no nível de página ou contêiner, o estado de exibição está desabilitado para todos os controles contidos por página ou contêiner. A propriedade IsViewStateEnabled indica se o estado de exibição é habilitado por páginas, contêineres ou controles.       É possível que o <xref:System.Web.UI.Control.EnableViewState%2A>propriedade e a propriedade IsViewStateEnabled seja diferente.</xref:System.Web.UI.Control.EnableViewState%2A> Por exemplo, se o <xref:System.Web.UI.Page>que contém o controle tem o estado de exibição desabilitado, o <xref:System.Web.UI.Control.EnableViewState%2A>propriedade pode ser `true` enquanto a propriedade IsViewStateEnabled é `false`.</xref:System.Web.UI.Control.EnableViewState%2A> </xref:System.Web.UI.Page>"
  syntax:
    content: protected bool IsViewStateEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o estado de exibição está habilitado para o controle. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.IsViewStateEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Load
  id: Load
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Load
  nameWithType: Control.Load
  fullName: System.Web.UI.Control.Load
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre quando o controle de servidor é carregado no <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto."
  remarks: "Notifica o controle de servidor para executar as etapas de processamento que estiverem configuradas para ocorrer em cada solicitação de página. Você pode acessar informações de estado de exibição e os dados de POSTAGEM de formulário de Web desse evento. Você também pode acessar outros controles de servidor na hierarquia de controle da página.      > [!NOTE] > Se você definir um modelo personalizado em um controle durante o `Page_Load` eventos, os valores de texto de controles filho no modelo personalizado serão perdidos. Isso ocorre porque os valores de formulário já foram carregados."
  example:
  - >-
    [!code-cs[System.Web.UI.Control_Load#2](~/add/codesnippet/csharp/e-system.web.ui.control._1_1.cs)]
     [!code-vb[System.Web.UI.Control_Load#2](~/add/codesnippet/visualbasic/e-system.web.ui.control._1_1.vb)]
  syntax:
    content: public event EventHandler Load;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: Control.LoadControlState(Object)
  fullName: System.Web.UI.Control.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restaura as informações de estado de controle de uma solicitação de página anterior que foi salvo pelo <xref:System.Web.UI.Control.SaveControlState*>método.</xref:System.Web.UI.Control.SaveControlState*>"
  remarks: "Substitua este método quando você precisa especificar como um controle de servidor personalizado restaura o estado de controle. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example overrides the LoadControlState method in a custom ASP.NET control. When this method is invoked, it determines whether control state was previously saved for the control and, if so, sets the internal property `currentIndex` to the saved value.  \n  \n The <xref:System.Web.UI.Control.OnInit%2A> method is overridden to call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method on the <xref:System.Web.UI.Control.Page%2A> to indicate that the custom control uses control state.  \n  \n [!code-vb[ControlState#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._23_1.aspx)]\n [!code-cs[ControlState#1](~/add/codesnippet/csharp/m-system.web.ui.control._23_1.aspx)]"
  syntax:
    content: protected virtual void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um <xref:System.Object>que representa o estado de controle a ser restaurado.</xref:System.Object>"
  overload: System.Web.UI.Control.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: Control.LoadViewState(Object)
  fullName: System.Web.UI.Control.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Restaura as informações de estado de exibição de uma solicitação de página anterior que foi salvo pelo <xref:System.Web.UI.Control.SaveViewState*>método.</xref:System.Web.UI.Control.SaveViewState*>"
  remarks: "Esse método é usado basicamente pela infraestrutura do .NET Framework e não se destina a ser usado diretamente no seu código. No entanto, os desenvolvedores de controle podem substituir este método para especificar como um controle de servidor personalizado restaura o estado de exibição. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example overrides the LoadViewState method for a custom ASP.NET server control. It creates an <xref:System.Object> array to contain the view state information passed in the `savedState` parameter, and then calls the base implementation of the LoadViewState method for the first index location of the array. It assigns the values stored at the next two index locations to variables named `UserText` and `PasswordText`, respectively.  \n  \n [!code-cs[Control_StateManagement#1](~/add/codesnippet/csharp/m-system.web.ui.control._4_1.cs)]\n [!code-vb[Control_StateManagement#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._4_1.vb)]"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um <xref:System.Object>que representa o estado de controle a ser restaurado.</xref:System.Object>"
  overload: System.Web.UI.Control.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.LoadViewStateByID
  id: LoadViewStateByID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: LoadViewStateByID
  nameWithType: Control.LoadViewStateByID
  fullName: System.Web.UI.Control.LoadViewStateByID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o controle participa de carregar seu estado de exibição por <xref:System.Web.UI.Control.ID*>em vez de índice.</xref:System.Web.UI.Control.ID*>"
  remarks: "Por padrão, quando um controle pai carrega o estado de exibição em controles filho que ele cria, ele faz isso por posição de cada controle filho no controle do pai <xref:System.Web.UI.Control.Controls%2A>coleção.</xref:System.Web.UI.Control.Controls%2A> Quando o estado de exibição é aplicado inicialmente, todos os controles filho podem não ter sido criados. Nesse caso, o estado de exibição para controles que ainda não foi criado é salvo e aplicado quando os controles filho são criados posteriormente.       Para um controle pai aplicar o estado de exibição para seus controles filhos, duas condições devem ser atendidas:-no postback, o controle pai deve criar os controles filho em exatamente na mesma ordem que a solicitação anterior para que a ordem dos controles permaneça consistente.      -Depois de postback, os controles filho criados devem ser adicionados ao final do controle pai <xref:System.Web.UI.Control.Controls%2A>coleção.</xref:System.Web.UI.Control.Controls%2A>       Se estas duas condições não podem ser atendidas, como no caso da criação de atraso de um controle filho, o controle pai pode carregar o estado de exibição usando <xref:System.Web.UI.Control.ID%2A>.</xref:System.Web.UI.Control.ID%2A> Para definir a propriedade LoadViewStateByID para `true`, use o <xref:System.Web.UI.ViewStateModeByIdAttribute>atributo de metadados para o controle pai.</xref:System.Web.UI.ViewStateModeByIdAttribute>"
  syntax:
    content: protected bool LoadViewStateByID { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle for carregado em seu estado de exibição por <xref:System.Web.UI.Control.ID*>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.Control.ID*> O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.LoadViewStateByID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.MapPathSecure(System.String)
  id: MapPathSecure(System.String)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: MapPathSecure(String)
  nameWithType: Control.MapPathSecure(String)
  fullName: System.Web.UI.Control.MapPathSecure(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Recupera o caminho físico que é mapeado para um caminho virtual, absoluto ou relativo."
  remarks: "Esse método só pode ser usado por controles de servidor que tem permissões para ler arquivos e que fazem parte dos arquivos. dll totalmente confiáveis, como System.Web.dll. Isso ajuda a impedir violações de segurança."
  example:
  - "The following example uses the MapPathSecure method to obtain the physical path of a virtual directory of the containing <xref:System.Web.UI.Page> or <xref:System.Web.UI.UserControl> object.  \n  \n [!code-cs[Control_MapPathSecure#1](~/add/codesnippet/csharp/m-system.web.ui.control._1_1.cs)]\n [!code-vb[Control_MapPathSecure#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._1_1.vb)]"
  syntax:
    content: protected string MapPathSecure (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Relativo ou a URL relativa da raiz."
    return:
      type: System.String
      description: "O caminho físico para o arquivo solicitado."
  overload: System.Web.UI.Control.MapPathSecure*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>virtualPath</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia (&quot;&quot;)."
  platform:
  - net462
- uid: System.Web.UI.Control.NamingContainer
  id: NamingContainer
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: NamingContainer
  nameWithType: Control.NamingContainer
  fullName: System.Web.UI.Control.NamingContainer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência para o controle de servidor do contêiner de nomeação, que cria um namespace exclusivo para diferenciar entre os controles de servidor com o mesmo &lt;xref:System.Web.UI.Control.ID%2A?displayProperty=fullName&gt; o valor da propriedade."
  remarks: "Cada página em um aplicativo Web ASP.NET contém uma hierarquia de controles. Essa hierarquia não é dependente de se um controle gera da interface do usuário visível para o usuário. O contêiner de nomeação para um determinado controle é o controle pai acima na hierarquia que implementa o <xref:System.Web.UI.INamingContainer>interface.</xref:System.Web.UI.INamingContainer> Um controle de servidor que implementa essa interface cria um namespace exclusivo para o <xref:System.Web.UI.Control.ID%2A>valores de propriedade de seus controles de servidor filho.</xref:System.Web.UI.Control.ID%2A> Você pode usar a propriedade NamingContainer de controle de filho de um contêiner de nomenclatura para obter uma referência ao seu contêiner pai.       Criar um namespace exclusivo para controles de servidor é particularmente importante quando você associa os controles de servidor Web para dados, como o <xref:System.Web.UI.WebControls.Repeater>e <xref:System.Web.UI.WebControls.DataList>controles de servidor.</xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.Repeater> Quando várias entradas na fonte de dados criam várias instâncias de um controle de servidor que é um filho do controle de repetição, o contêiner de nomeação garante que cada instância desses controles filho <xref:System.Web.UI.Control.UniqueID%2A>valores de propriedade que não estão em conflito.</xref:System.Web.UI.Control.UniqueID%2A> O contêiner de nomeação padrão para uma página é a instância do <xref:System.Web.UI.Page>classe que é gerado quando a página é solicitada.</xref:System.Web.UI.Page>       O <xref:System.Web.UI.Control.ClientID%2A>propriedade contém o valor que é processado como o elemento `id` atributo na marcação HTML.</xref:System.Web.UI.Control.ClientID%2A> Dependendo do valor que você atribui ao <xref:System.Web.UI.Control.ClientIDMode%2A>propriedade, o valor que é gerado para o <xref:System.Web.UI.Control.ClientID%2A>propriedade pode incluir a ID do objeto NamingContainer.</xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.Control.ClientIDMode%2A> Quando você define <xref:System.Web.UI.Control.ClientIDMode%2A>para <xref:System.Web.UI.ClientIDMode>, o <xref:System.Web.UI.Control.ClientID%2A>valor não inclui a ID do objeto NamingContainer.</xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.ClientIDMode%2A> Quando você define <xref:System.Web.UI.Control.ClientIDMode%2A>como <xref:System.Web.UI.ClientIDMode>ou <xref:System.Web.UI.ClientIDMode>, o <xref:System.Web.UI.Control.ClientID%2A>valor incluirá a ID do objeto NamingContainer.</xref:System.Web.UI.Control.ClientID%2A> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.ClientIDMode> </xref:System.Web.UI.Control.ClientIDMode%2A> Para obter mais informações, consulte [identificação do controle do servidor Web ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates using the NamingContainer property.  \n  \n [!code-cs[Control_NamingContainer#1](~/add/codesnippet/csharp/p-system.web.ui.control._5_1.aspx)]\n [!code-vb[Control_NamingContainer#1](~/add/codesnippet/visualbasic/p-system.web.ui.control._5_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.Control NamingContainer { get; }
    return:
      type: System.Web.UI.Control
      description: "O controle de servidor do contêiner de nomeação."
  overload: System.Web.UI.Control.NamingContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: Control.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.Control.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o evento para o controle de servidor é passado a hierarquia de controle de servidor da interface do usuário da página."
  remarks: "Controles de servidor ASP.NET, como o <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList>e <xref:System.Web.UI.WebControls.GridView>da Web podem conter controles filho que geram eventos.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.Repeater> Por exemplo, cada linha em um <xref:System.Web.UI.WebControls.GridView>controle pode conter um ou mais botões criados dinamicamente por modelos.</xref:System.Web.UI.WebControls.GridView> Em vez de cada botão disparar um evento individualmente, eventos dos controles aninhados são &quot;transferidos&quot; — ou seja, eles são enviados para o contêiner de nomenclatura. O contêiner de nomenclatura por sua vez gera um evento genérico chamado <xref:System.Web.UI.WebControls.GridView.RowCommand>com valores de parâmetro.</xref:System.Web.UI.WebControls.GridView.RowCommand> Esses valores permitem que você determine qual controle individual que disparou o evento original. Respondendo a este evento único, você pode evitar a necessidade de escrever os métodos de manipulação de eventos individuais para controles filho."
  example:
  - "The following example overrides the OnBubbleEvent method in a custom ASP.NET server control, `ParentControl`. This method is invoked when a child control of `ParentControl` calls the <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> method. When this happens, the `ParentControl` class writes two strings to the containing ASP.NET page, the first stating that its OnBubbleEvent method has been called, the second identifying the source control of the <xref:System.Web.UI.Control.RaiseBubbleEvent%2A> method.  \n  \n [!code-vb[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._21_1.vb)]\n [!code-cs[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#1](~/add/codesnippet/csharp/m-system.web.ui.control._21_1.cs)]"
  syntax:
    content: protected virtual bool OnBubbleEvent (object source, EventArgs args);
    parameters:
    - id: source
      type: System.Object
      description: "A origem do evento."
    - id: args
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o evento foi cancelado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OnDataBinding(System.EventArgs)
  id: OnDataBinding(System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OnDataBinding(EventArgs)
  nameWithType: Control.OnDataBinding(EventArgs)
  fullName: System.Web.UI.Control.OnDataBinding(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.DataBinding&quot;> </xref> eventos."
  remarks: "Este método notifica um controle de servidor para executar qualquer lógica de associação de dados que está associados ele.       Se você desejar tratar o <xref:System.Web.UI.Control.DataBinding>evento, você deve substituir esse método de manipulação de eventos.</xref:System.Web.UI.Control.DataBinding> Isso garante que todos os delegados anexado para o <xref:System.Web.UI.Control.DataBinding>eventos sejam invocados.</xref:System.Web.UI.Control.DataBinding>"
  example:
  - "The following example demonstrates how to override the OnDataBinding method to add child controls to the parent control from a data source.  \n  \n [!code-cs[TemplatedDataBoundControl#3](~/add/codesnippet/csharp/m-system.web.ui.control._14_1.cs)]\n [!code-vb[TemplatedDataBoundControl#3](~/add/codesnippet/visualbasic/m-system.web.ui.control._14_1.vb)]"
  syntax:
    content: protected virtual void OnDataBinding (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Control.OnDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: Control.OnInit(EventArgs)
  fullName: System.Web.UI.Control.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> eventos."
  remarks: "ASP.NET chama esse método para gerar o <xref:System.Web.UI.Control.Init>evento.</xref:System.Web.UI.Control.Init> Se você estiver desenvolvendo um controle personalizado, você pode substituir esse método para fornecer processamento adicional. Se você substituir esse método, chame o método de OnInit de base do controle para notificar os assinantes do evento."
  example:
  - >-
    [!code-vb[System.Web.UI.Control_Context_OnInit_ResolveUrl#3](~/add/codesnippet/visualbasic/m-system.web.ui.control._25_1.vb)]
     [!code-cs[System.Web.UI.Control_Context_OnInit_ResolveUrl#3](~/add/codesnippet/csharp/m-system.web.ui.control._25_1.cs)]
  syntax:
    content: protected virtual void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Control.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: Control.OnLoad(EventArgs)
  fullName: System.Web.UI.Control.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Load&quot;> </xref> eventos."
  remarks: "ASP.NET chama esse método para gerar o <xref:System.Web.UI.Control.Load>evento.</xref:System.Web.UI.Control.Load> Se você estiver desenvolvendo um controle personalizado, você pode substituir esse método para fornecer processamento adicional. Se você substituir esse método, chame o método de OnLoad de base do controle para notificar os assinantes do evento."
  example:
  - >-
    [!code-vb[Control_OnUnload#3](~/add/codesnippet/visualbasic/m-system.web.ui.control._24_1.vb)]
     [!code-cs[Control_OnUnload#3](~/add/codesnippet/csharp/m-system.web.ui.control._24_1.cs)]
  syntax:
    content: protected virtual void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "O <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Control.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Control.OnPreRender(EventArgs)
  fullName: System.Web.UI.Control.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> eventos."
  remarks: "ASP.NET chama esse método para gerar o <xref:System.Web.UI.Control.PreRender>evento.</xref:System.Web.UI.Control.PreRender> Se você estiver desenvolvendo um controle personalizado, você pode substituir esse método para fornecer processamento adicional. Se você substituir esse método, chame o método de OnPreRender de base do controle para notificar os assinantes do evento."
  example:
  - >-
    [!code-vb[Control_Sample_1_snipper#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._0_1.vb)]
     [!code-cs[Control_Sample_1_snipper#1](~/add/codesnippet/csharp/m-system.web.ui.control._0_1.cs)]
  syntax:
    content: protected virtual void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Control.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: Control.OnUnload(EventArgs)
  fullName: System.Web.UI.Control.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> eventos."
  remarks: "ASP.NET chama esse método para gerar o <xref:System.Web.UI.Control.Unload>evento.</xref:System.Web.UI.Control.Unload> Se você estiver desenvolvendo um controle personalizado, você pode substituir esse método para fornecer processamento adicional. Se você substituir esse método, chame o método de OnUnload de base do controle para notificar os assinantes do evento."
  example:
  - >-
    [!code-vb[Control_OnUnload#2](~/add/codesnippet/visualbasic/m-system.web.ui.control._10_1.vb)]
     [!code-cs[Control_OnUnload#2](~/add/codesnippet/csharp/m-system.web.ui.control._10_1.cs)]
  syntax:
    content: protected virtual void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Control.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.OpenFile(System.String)
  id: OpenFile(System.String)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: OpenFile(String)
  nameWithType: Control.OpenFile(String)
  fullName: System.Web.UI.Control.OpenFile(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um <xref:System.IO.Stream>usado para ler um arquivo.</xref:System.IO.Stream>"
  remarks: "The OpenFile method returns a <xref:System.IO.Stream> object that can be used to read the contents of the file specified in the `path` parameter. The path parameter can be either a relative or root URL without a protocol (such as \"~/mySite/myFile.txt), or a physical path, either local (\"c:\\mySite\\myFile.txt\") or UNC (\"\\\\\\myServer\\myFile.txt\").  \n  \n The OpenFile method uses file access security to control access to the specified file. If the current ASP.NET user does not have access to the file, then the file is not opened and an <xref:System.Web.HttpException> exception is thrown to indicate that access was denied. If the `path` parameter specified a relative path, the exception does not include information about the physical path to the requested file."
  syntax:
    content: protected System.IO.Stream OpenFile (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho para o arquivo desejado."
    return:
      type: System.IO.Stream
      description: "Um <xref:System.IO.Stream>que referencia o arquivo desejado.</xref:System.IO.Stream>"
  overload: System.Web.UI.Control.OpenFile*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Acesso ao arquivo especificado foi negado."
  platform:
  - net462
- uid: System.Web.UI.Control.Page
  id: Page
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Page
  nameWithType: Control.Page
  fullName: System.Web.UI.Control.Page
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.Page&quot;> </xref> instância que contém o controle de servidor."
  remarks: "Valor desta propriedade reflete o nome do arquivo. aspx que contém o controle de servidor."
  example:
  - "The following example overrides the <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> method. It uses the <xref:System.Web.UI.Page> property to access the <xref:System.Web.UI.Page.IsPostBack%2A?displayProperty=fullName> property and determine whether the page that contains this control has just been loaded for the first time or is the result of a postback.  \n  \n [!code-cs[Control_Sample#1](~/add/codesnippet/csharp/p-system.web.ui.control._12_1.cs)]\n [!code-vb[Control_Sample#1](~/add/codesnippet/visualbasic/p-system.web.ui.control._12_1.vb)]"
  syntax:
    content: public virtual System.Web.UI.Page Page { get; set; }
    return:
      type: System.Web.UI.Page
      description: "O <xref href=&quot;System.Web.UI.Page&quot;> </xref> instância que contém o controle de servidor."
  overload: System.Web.UI.Control.Page*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O controle é um <xref href=&quot;System.Web.UI.WebControls.Substitution&quot;> </xref> controle."
  platform:
  - net462
- uid: System.Web.UI.Control.Parent
  id: Parent
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Parent
  nameWithType: Control.Parent
  fullName: System.Web.UI.Control.Parent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência para o controle do pai do controle de servidor na hierarquia de controle da página."
  remarks: "Sempre que uma página é solicitada, uma hierarquia de controles de servidor em que a página é criada. Essa propriedade permite que você determine o controle pai do controle do servidor atual na hierarquia e programa em relação a ela."
  example:
  - "The following example sets a new <xref:System.Web.UI.Control> object on a page, `myControl1`, to the control specified in a <xref:System.Web.UI.Control.FindControl%2A> method call. If the call returns a control, the code uses the Parent property to identify the control that contains `myControl1`. If the parent control exists, the string \"The parent of the text box is\" is concatenated with the <xref:System.Web.UI.Control.ID%2A> property of the parent control and written to the <xref:System.Web.UI.Control.Page%2A>. If no parent control is found, the string \"Control not found\" is written.  \n  \n [!code-cs[System.Web.UI.Page.Parent_FindControl#1](~/add/codesnippet/csharp/p-system.web.ui.control._6_1.aspx)]\n [!code-vb[System.Web.UI.Page.Parent_FindControl#1](~/add/codesnippet/visualbasic/p-system.web.ui.control._6_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.Control Parent { get; }
    return:
      type: System.Web.UI.Control
      description: "Uma referência para o controle do pai do controle de servidor."
  overload: System.Web.UI.Control.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.PreRender
  id: PreRender
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: PreRender
  nameWithType: Control.PreRender
  fullName: System.Web.UI.Control.PreRender
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre após o <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto está carregado, mas antes da renderização."
  remarks: "Use este evento para executar todas as atualizações antes do controle de servidor é renderizado para a página. As alterações no estado de exibição do controle de servidor podem ser salvo durante esse evento. Essas alterações feitas na fase de renderização não serão salvas."
  syntax:
    content: public event EventHandler PreRender;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  id: RaiseBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: RaiseBubbleEvent(Object,EventArgs)
  nameWithType: Control.RaiseBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.Control.RaiseBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Atribui a qualquer fonte do evento e suas informações para o pai do controle."
  remarks: "Controles de servidor ASP.NET, como o <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList>e <xref:System.Web.UI.WebControls.GridView>da Web podem conter controles filho que geram eventos.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.Repeater> Por exemplo, cada linha em um <xref:System.Web.UI.WebControls.GridView>controle pode conter um ou mais botões criados dinamicamente por modelos.</xref:System.Web.UI.WebControls.GridView> Em vez de cada botão disparar um evento individualmente, eventos dos controles aninhados são &quot;transferidos&quot; — ou seja, elas são enviadas para o pai do controle. O pai por sua vez gera um evento genérico chamado <xref:System.Web.UI.WebControls.GridView.RowCommand>com valores de parâmetro.</xref:System.Web.UI.WebControls.GridView.RowCommand> Esses valores permitem que você determine qual controle individual que disparou o evento original. Respondendo a este evento único, você pode evitar a necessidade de escrever os métodos de manipulação de eventos individuais para controles filho.       Enquanto você não pode substituir esse método, controles que você criar podem tratar ou levantar eventos borbulhados, substituindo o <xref:System.Web.UI.Control.OnBubbleEvent%2A>método.</xref:System.Web.UI.Control.OnBubbleEvent%2A>"
  example:
  - "The following code example demonstrate how to create a custom class, `ChildControl`, overriding the <xref:System.Web.UI.WebControls.Button.OnClick%2A?displayProperty=fullName> method to call the RaiseBubbleEvent method that sends the <xref:System.Web.UI.WebControls.Button.Click?displayProperty=fullName> event to its parent ASP.NET server control. When the user clicks a button in an ASP.NET page that includes an instance of `ChildControl`, it raises the <xref:System.Web.UI.Control.OnBubbleEvent%2A> method on the parent control that contains the instance of `ChildControl` and writes the string \"The ChildControl class OnClick method is called\" to the page.  \n  \n [!code-vb[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2](~/add/codesnippet/visualbasic/m-system.web.ui.control._3_1.vb)]\n [!code-cs[System.Web.UI.Control.RaiseBubbleEvent_OnBubbleEvent#2](~/add/codesnippet/csharp/m-system.web.ui.control._3_1.cs)]"
  syntax:
    content: protected void RaiseBubbleEvent (object source, EventArgs args);
    parameters:
    - id: source
      type: System.Object
      description: "A origem do evento."
    - id: args
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Control.RaiseBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  id: RemovedControl(System.Web.UI.Control)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: RemovedControl(Control)
  nameWithType: Control.RemovedControl(Control)
  fullName: System.Web.UI.Control.RemovedControl(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Chamado após a remoção de um controle filho de <xref:System.Web.UI.Control.Controls*>coleção do <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto.</xref:System.Web.UI.Control.Controls*>"
  remarks: "O método RemovedControl é chamado imediatamente após a remoção de um controle de <xref:System.Web.UI.Control.Controls%2A>coleção.</xref:System.Web.UI.Control.Controls%2A>"
  syntax:
    content: protected virtual void RemovedControl (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> que foi removido."
  overload: System.Web.UI.Control.RemovedControl*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O controle é um <xref href=&quot;System.Web.UI.WebControls.Substitution&quot;> </xref> controle."
  platform:
  - net462
- uid: System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Control.Render(HtmlTextWriter)
  fullName: System.Web.UI.Control.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Envia o conteúdo do servidor de controle para um fornecido <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto, que grava o conteúdo a ser renderizado no cliente."
  remarks: "Durante o desenvolvimento de controles personalizados de servidor, você pode substituir esse método para gerar o conteúdo de uma página ASP.NET."
  example:
  - "The following code example demonstrates overriding the Render method. The <xref:System.Web.UI.Control.HasControls%2A> method is used to determine whether the server control has any child controls stored in its <xref:System.Web.UI.ControlCollection> object, which is accessible through the <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> property. If <xref:System.Web.UI.Control.HasControls%2A> returns true and the first server control in the collection is literal text, then the literal text is appended to an HTML string.  \n  \n [!code-cs[Classic Control.Render Example#1](~/add/codesnippet/csharp/m-system.web.ui.control._7_1.cs)]\n [!code-vb[Classic Control.Render Example#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._7_1.vb)]"
  syntax:
    content: protected virtual void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto que recebe o conteúdo do controle de servidor."
  overload: System.Web.UI.Control.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: Control.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Control.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o conteúdo de filhos de um controle de servidor a um fornecido <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto, que grava o conteúdo a ser renderizado no cliente."
  remarks: "Este método notifica o ASP.NET para processar qualquer código de Active Server Pages (ASP) na página. Se nenhum código ASP existir na página, este método renderiza qualquer filho controles para o controle de servidor. Este método é chamado pelo <xref:System.Web.UI.Control.Render%2A>método.</xref:System.Web.UI.Control.Render%2A>"
  example:
  - "The following example overrides the RenderChildren method in a custom server control. It determines whether the current control has any child controls in its <xref:System.Web.UI.ControlCollection> object. If it does, it uses the <xref:System.Web.UI.ControlCollection.Count%2A> property to iterate through the collection. As it encounters each child control, it uses the <xref:System.Web.UI.Control.RenderControl%2A> method to render the parent control, and all of its child controls, to the containing page.  \n  \n The overridden <xref:System.Web.UI.Control.Render%2A> method then calls the overridden RenderChildren method.  \n  \n [!code-vb[Control_Sample_1#4](~/add/codesnippet/visualbasic/m-system.web.ui.control._13_1.vb)]\n [!code-cs[Control_Sample_1#4](~/add/codesnippet/csharp/m-system.web.ui.control._13_1.cs)]"
  syntax:
    content: protected virtual void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto que recebe o conteúdo renderizado."
  overload: System.Web.UI.Control.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  id: RenderControl(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: RenderControl(HtmlTextWriter)
  nameWithType: Control.RenderControl(HtmlTextWriter)
  fullName: System.Web.UI.Control.RenderControl(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o conteúdo do controle de servidor a um fornecido <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> de objeto e armazena informações de rastreamento sobre o controle se o rastreamento está habilitado."
  remarks: "Se um controle de servidor <xref:System.Web.UI.Control.Visible%2A>está definida como `true`, este método determina se o rastreamento está habilitado para a página.</xref:System.Web.UI.Control.Visible%2A> Nesse caso, ele armazena informações de rastreamento associadas ao controle e renderiza o conteúdo do controle de servidor para a página.       Esse método é chamado automaticamente pela página durante o processamento, mas pode ser substituído por desenvolvedores de controle personalizado."
  example:
  - "The following example overrides the <xref:System.Web.UI.Control.RenderChildren%2A> method in a custom server control. It determines whether the current control has any child controls in its <xref:System.Web.UI.ControlCollection> object. If it does, it uses the <xref:System.Web.UI.ControlCollection.Count%2A> property to iterate through the collection. As it encounters each child control, it uses the RenderControl method to render the child control, and all of its child controls, to the containing page. The <xref:System.Web.UI.XhtmlTextWriter> object that is passed to this method is instantiated by the <xref:System.Web.UI.Page.Render%2A> method.  \n  \n [!code-vb[Control_Sample_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.control._11_1.vb)]\n [!code-cs[Control_Sample_1#3](~/add/codesnippet/csharp/m-system.web.ui.control._11_1.cs)]"
  syntax:
    content: public virtual void RenderControl (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto que recebe o conteúdo do controle."
  overload: System.Web.UI.Control.RenderControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  id: RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: RenderControl(HtmlTextWriter,ControlAdapter)
  nameWithType: Control.RenderControl(HtmlTextWriter,ControlAdapter)
  fullName: System.Web.UI.Control.RenderControl(HtmlTextWriter,ControlAdapter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o conteúdo do controle de servidor a um fornecido <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto usando um fornecido <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> objeto."
  remarks: "Páginas da Web ASP.NET são úteis em uma ampla variedade de dispositivos e navegadores que podem solicitar informações da Web. O <xref:System.Web.UI.Control.Adapter%2A>propriedade retorna o <xref:System.Web.UI.Adapters.ControlAdapter>objeto que renderiza o controle na tela do navegador ou do dispositivo solicitante.</xref:System.Web.UI.Adapters.ControlAdapter> </xref:System.Web.UI.Control.Adapter%2A>       Para obter mais informações sobre os adaptadores, consulte [arquitetura visão geral do controle comportamento adaptável](~/add/includes/ajax-current-ext-md.md).       Se um controle de servidor <xref:System.Web.UI.Control.Visible%2A>está definida como `true` rastreamento está habilitado para a página e informações de rastreamento associadas ao controle são capturadas.</xref:System.Web.UI.Control.Visible%2A>"
  syntax:
    content: protected void RenderControl (System.Web.UI.HtmlTextWriter writer, System.Web.UI.Adapters.ControlAdapter adapter);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que recebe o conteúdo do controle."
    - id: adapter
      type: System.Web.UI.Adapters.ControlAdapter
      description: "O <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> que define a renderização."
  overload: System.Web.UI.Control.RenderControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.RenderingCompatibility
  id: RenderingCompatibility
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: RenderingCompatibility
  nameWithType: Control.RenderingCompatibility
  fullName: System.Web.UI.Control.RenderingCompatibility
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que especifica a versão do ASP.NET que renderizado o HTML será compatível com."
  remarks: "O ASP.NET define essa propriedade como o valor da `controlRenderingCompatibilityVersion` atributo do `pages` elemento no arquivo Web. config. Se o `controlRenderingCompatibilityVersion` atributo não está definido no arquivo Web. config, o valor padrão é a versão atual do ASP.NET.      > [!CAUTION] > Há um acessador set público para essa propriedade, mas o acessador set dá suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no seu código. Se você definir esse valor em seu código, o efeito é imprevisível.       Cada versão do ASP.NET pode renderizar HTML de forma diferente de versões anteriores. Por exemplo, no ASP.NET 3.5, se o <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>propriedade de um <xref:System.Web.UI.WebControls.Label>controle é `false`, por padrão, o ASP.NET processa uma `span` elemento cujo `disabled` atributo é definido como &quot;desativado&quot;.</xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A> No ASP.NET 4, por padrão, o `span` elemento é processado com uma folha de estilo em cascata (CSS) `class` de atributo, em vez do `disabled` atributo. Isso permite que você especifique a aparência desativada do controle e evita a renderização HTML inválido. (Em HTML 4.0 e XHTML 1.1, o `span` elemento não oferece suporte a `disabled` atributo.)       Um aplicativo Web pode incluir o código que seria não funcionará corretamente se altera de renderização HTML. Para evitar esse problema, você pode definir o `controlRenderingCompatibilityVersion` atributo o `pages` elemento no arquivo Web. config para indicar qual versão anterior que você deseja manter a compatibilidade com. Por exemplo, se você definir a propriedade RenderingCompatibility como `3.5`, um desabilitado <xref:System.Web.UI.WebControls.Label>controle processe um `disabled` atributo e não uma classe CSS.</xref:System.Web.UI.WebControls.Label>      > [!NOTE] > É a versão mais antiga que você pode definir essa propriedade para `3.5`.       Para manter a compatibilidade com versões anteriores, quando você usa o Visual Studio para atualizar um projeto da Web para ASP.NET 4 de uma versão anterior, o Visual Studio define automaticamente o `controlRenderingCompatibilityVersion` atributos no arquivo Web. config para `3.5`. Se você quiser um site atualizado para renderizar HTML usando o algoritmo que foi introduzido no ASP.NET 4, você pode alterar ou remover o `controlRenderingCompatibilityVersion` atributo.       Na maioria das vezes, o comportamento controlado por essa propriedade é automático e você não precisa verificar a propriedade RenderingCompatibility em seu código. No entanto, se você estiver programando um controle personalizado, você precisa incluir o código que altera o comportamento do controle com base na configuração desta propriedade. Por exemplo, um controle personalizado para ASP.NET 4 pode ser composto de <xref:System.Web.UI.WebControls.Label>e o controle personalizado podem especificar a aparência desativada do controle por meio da geração de código JavaScript que altera o `aspNetDisabled` classe</xref:System.Web.UI.WebControls.Label> Isso funcionará conforme o esperado se RenderingCompatibility é `4.0` ou posterior. Mas, para obter o mesmo efeito quando é RenderingCompatibility `3.5`, código do controle personalizado deve definir o controle `CssClass` propriedade como &quot;aspNetDisabled&quot; quando o <xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>é de propriedade `false`.</xref:System.Web.UI.WebControls.WebControl.IsEnabled%2A>"
  syntax:
    content: public virtual Version RenderingCompatibility { get; set; }
    return:
      type: System.Version
      description: "A versão do ASP.NET que renderizado o HTML será compatível com."
  overload: System.Web.UI.Control.RenderingCompatibility*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ResolveAdapter
  id: ResolveAdapter
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ResolveAdapter()
  nameWithType: Control.ResolveAdapter()
  fullName: System.Web.UI.Control.ResolveAdapter()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o adaptador de controle responsável por processar o controle especificado."
  remarks: "Páginas da Web ASP.NET são visíveis em uma grande variedade de dispositivos que são capazes de solicitando páginas da Web. O método ResolveAdapter retorna o adaptador de controle responsável por processar o controle no navegador específico ou dispositivo que solicitou a página ASP.NET.       O tipo de adaptador específico retornado depende do tipo de descendente do <xref:System.Web.UI.Control>classe que está sendo processado.</xref:System.Web.UI.Control>       Para obter mais informações sobre os adaptadores, consulte [arquitetura visão geral do controle comportamento adaptável](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual System.Web.UI.Adapters.ControlAdapter ResolveAdapter ();
    parameters: []
    return:
      type: System.Web.UI.Adapters.ControlAdapter
      description: "Um <xref href=&quot;System.Web.UI.Adapters.ControlAdapter&quot;> </xref> que processará o controle."
  overload: System.Web.UI.Control.ResolveAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ResolveClientUrl(System.String)
  id: ResolveClientUrl(System.String)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ResolveClientUrl(String)
  nameWithType: Control.ResolveClientUrl(String)
  fullName: System.Web.UI.Control.ResolveClientUrl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma URL que pode ser usada pelo navegador."
  remarks: "Use o método ResolveClientUrl para retornar uma cadeia de caracteres de URL adequada para uso pelo cliente para acessar recursos no servidor Web, como arquivos de imagem, links para páginas adicionais e assim por diante.      > [!NOTE] > A URL retornada por este método é relativo à pasta que contém o arquivo de origem no qual o controle é instanciado. Controles que herdam essa propriedade, como <xref:System.Web.UI.UserControl>e <xref:System.Web.UI.MasterPage>, retornará uma URL totalmente qualificada relativos ao controle.</xref:System.Web.UI.MasterPage> </xref:System.Web.UI.UserControl>"
  syntax:
    content: public string ResolveClientUrl (string relativeUrl);
    parameters:
    - id: relativeUrl
      type: System.String
      description: "Uma URL relativa à página atual."
    return:
      type: System.String
      description: "Uma URL totalmente qualificada para o recurso especificado adequada para uso no navegador."
  overload: System.Web.UI.Control.ResolveClientUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>relativeUrl</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Control.ResolveUrl(System.String)
  id: ResolveUrl(System.String)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ResolveUrl(String)
  nameWithType: Control.ResolveUrl(String)
  fullName: System.Web.UI.Control.ResolveUrl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Converte uma URL em que pode ser usado no cliente solicitante."
  remarks: "Se o `relativeUrl` parâmetro contém uma URL absoluta, a URL é retornada inalterada. Se o `relativeUrl` parâmetro contém uma URL relativa, que a URL é alterada para uma URL relativa que está correta para o caminho da solicitação atual, para que o navegador pode resolver a URL.       Por exemplo, considere o seguinte cenário:-um cliente solicitou uma página ASP.NET que contém um controle de usuário que tem uma imagem associada a ele.      -A página ASP.NET está localizada em /Store/page1.aspx.      -O controle de usuário está localizado em /Store/UserControls/UC1.ascx.      -O arquivo de imagem está localizado em /UserControls/Images/Image1.jpg.       Se o controle de usuário passa o caminho relativo para a imagem (ou seja, /Store/UserControls/Images/Image1.jpg) para o método ResolveUrl, o método retornará o valor /imagens/Imagem1.jpg.       Esse método usa o <xref:System.Web.UI.Control.TemplateSourceDirectory%2A>propriedade resolver para a URL absoluta.</xref:System.Web.UI.Control.TemplateSourceDirectory%2A> A URL retornada é para uso do cliente.       Para obter mais informações sobre caminhos de recurso em um site da Web, consulte [caminhos de projetos Web ASP.NET](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Para páginas da Web móveis somente se seu aplicativo depende de sessões sem cookies ou pode receber solicitações de navegadores móveis que requerem sessões sem cookies, usar um til (&quot;~&quot;) em um caminho pode resultar em inadvertidamente criando uma nova sessão e a potencial perda de dados da sessão. Para definir uma propriedade com um caminho, como &quot;~ /*caminho&quot;*, resolver o caminho chamando o <xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>com um argumento, como &quot;~ /*caminho&quot;* antes de atribuí-la à propriedade.</xref:System.Web.UI.MobileControls.MobileControl.ResolveUrl%2A>"
  example:
  - "The following example creates an <xref:System.Web.UI.WebControls.Image> Web server control object and uses the ResolveUrl method to set the path to the image, which is stored by the <xref:System.Web.UI.WebControls.Image.ImageUrl%2A> property.  \n  \n [!code-cs[Control_ResolveUrl#1](~/add/codesnippet/csharp/m-system.web.ui.control._22_1.cs)]\n [!code-vb[Control_ResolveUrl#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._22_1.vb)]"
  syntax:
    content: public string ResolveUrl (string relativeUrl);
    parameters:
    - id: relativeUrl
      type: System.String
      description: "A URL associada a <xref:System.Web.UI.Control.TemplateSourceDirectory*>propriedade.</xref:System.Web.UI.Control.TemplateSourceDirectory*>"
    return:
      type: System.String
      description: "A URL convertida."
  overload: System.Web.UI.Control.ResolveUrl*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Ocorre quando o <code> relativeUrl </code> parâmetro contém <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.Control.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: Control.SaveControlState()
  fullName: System.Web.UI.Control.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Salva as alterações de estado que ocorreram desde a hora em que a página foi postada para o servidor de qualquer controle de servidor."
  remarks: "Use o método SaveControlState para salvar informações de estado necessárias para a operação de um controle específico. Esses dados de estado de controle são armazenados separadamente dos dados de estado de exibição do controle.       Controles personalizados usando o estado do controle devem chamar o <xref:System.Web.UI.Page.RegisterRequiresControlState%2A>método o <xref:System.Web.UI.Control.Page%2A>antes de salvar o estado do controle.</xref:System.Web.UI.Control.Page%2A> </xref:System.Web.UI.Page.RegisterRequiresControlState%2A>"
  example:
  - "The following code example overrides the SaveControlState method in a custom ASP.NET control. When this method is invoked, it determines whether the internal property `currentIndex` is set to a non-default value and, if so, saves the value to control state.  \n  \n The <xref:System.Web.UI.Control.OnInit%2A> method is overridden to call the <xref:System.Web.UI.Page.RegisterRequiresControlState%2A> method on the <xref:System.Web.UI.Control.Page%2A> to indicate that the custom control uses control state.  \n  \n [!code-vb[ControlState#1](~/add/codesnippet/visualbasic/m-system.web.ui.control._18_1.aspx)]\n [!code-cs[ControlState#1](~/add/codesnippet/csharp/m-system.web.ui.control._18_1.aspx)]"
  syntax:
    content: protected virtual object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "Retorna o servidor de estado atual do controle. Se não houver nenhum estado associado ao controle, esse método retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: Control.SaveViewState()
  fullName: System.Web.UI.Control.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Salva as alterações de estado de exibição que ocorreram desde a hora em que a página foi postada para o servidor de qualquer controle de servidor."
  remarks: "Estado de exibição é o acúmulo dos valores de propriedades de um controle de servidor. Esses valores são colocados automaticamente em do controle de servidor <xref:System.Web.UI.Control.ViewState%2A>propriedade, que é uma ocorrência da <xref:System.Web.UI.StateBag>classe.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> Valor desta propriedade é mantido, em seguida, para um objeto de cadeia de caracteres depois de salvar o estágio do ciclo de vida de controle do servidor de estado. Para obter mais informações, consulte [visão geral do ciclo de vida de página ASP.NET](~/add/includes/ajax-current-ext-md.md).       Quando o estado de exibição for salvo, esse objeto de cadeia de caracteres é retornado ao cliente como uma variável que é armazenada em um HTML `HIDDEN` elemento. Quando você cria um controle de servidor personalizado com um estado de exibição personalizado, o estado de exibição pode ser gerenciado explicitamente com o SaveViewState e <xref:System.Web.UI.Control.LoadViewState%2A>métodos.</xref:System.Web.UI.Control.LoadViewState%2A> Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md). Para obter informações sobre como implementar um provedor de estado de sessão personalizado, consulte [implementando um provedor de armazenamento de estado de sessão](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example overrides the SaveViewState method in a custom ASP.NET server control. When this method is invoked, it determines whether the control has any child controls and whether the containing <xref:System.Web.UI.Page> object is the result of a postback. If both are true, it changes the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> Web server control to read `Custom Control Has Saved State`. It then saves the view state of the control as an array of objects, named `allStates`.  \n  \n [!code-cs[Control_StateManagement#2](~/add/codesnippet/csharp/m-system.web.ui.control._17_1.cs)]\n [!code-vb[Control_StateManagement#2](~/add/codesnippet/visualbasic/m-system.web.ui.control._17_1.vb)]"
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Retorna o estado de exibição atual do controle de servidor. Se não houver nenhum estado de exibição associado ao controle, esse método retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  id: SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SetDesignModeState(IDictionary)
  nameWithType: Control.SetDesignModeState(IDictionary)
  fullName: System.Web.UI.Control.SetDesignModeState(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define os dados de tempo de design para um controle."
  remarks: "O método SetDesignModeState salva dados de tempo de design para um controle."
  syntax:
    content: protected virtual void SetDesignModeState (System.Collections.IDictionary data);
    parameters:
    - id: data
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que contém os dados de tempo de design para o controle.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Control.SetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  id: SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SetRenderMethodDelegate(RenderMethod)
  nameWithType: Control.SetRenderMethodDelegate(RenderMethod)
  fullName: System.Web.UI.Control.SetRenderMethodDelegate(RenderMethod)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Atribui um delegado de manipulador de eventos para processar o controle de servidor e seu conteúdo em seu controle pai."
  remarks: "Esse método é fornecido para fins de implementação. Você deve nunca chamá-lo diretamente."
  syntax:
    content: public void SetRenderMethodDelegate (System.Web.UI.RenderMethod renderMethod);
    parameters:
    - id: renderMethod
      type: System.Web.UI.RenderMethod
      description: "As informações necessárias para passar para o representante para que ele possa processar o controle de servidor."
  overload: System.Web.UI.Control.SetRenderMethodDelegate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  id: SetTraceData(System.Object,System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SetTraceData(Object,Object)
  nameWithType: Control.SetTraceData(Object,Object)
  fullName: System.Web.UI.Control.SetTraceData(Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Conjuntos de dados de rastreamento de dados de renderização, usando a chave de dados de rastreamento e o valor de dados de rastreamento de tempo de design de rastreamento."
  syntax:
    content: public void SetTraceData (object traceDataKey, object traceDataValue);
    parameters:
    - id: traceDataKey
      type: System.Object
      description: "A chave de dados de rastreamento."
    - id: traceDataValue
      type: System.Object
      description: "O valor de dados de rastreamento."
  overload: System.Web.UI.Control.SetTraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  id: SetTraceData(System.Object,System.Object,System.Object)
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SetTraceData(Object,Object,Object)
  nameWithType: Control.SetTraceData(Object,Object,Object)
  fullName: System.Web.UI.Control.SetTraceData(Object,Object,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Conjuntos de dados de rastreamento de dados de renderização, usando o objeto de rastreamento, a chave de dados de rastreamento e o valor de dados de rastreamento de tempo de design de rastreamento."
  syntax:
    content: public void SetTraceData (object tracedObject, object traceDataKey, object traceDataValue);
    parameters:
    - id: tracedObject
      type: System.Object
      description: "O objeto de rastreamento."
    - id: traceDataKey
      type: System.Object
      description: "A chave de dados de rastreamento."
    - id: traceDataValue
      type: System.Object
      description: "O valor de dados de rastreamento."
  overload: System.Web.UI.Control.SetTraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Site
  id: Site
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Site
  nameWithType: Control.Site
  fullName: System.Web.UI.Control.Site
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém informações sobre o contêiner que hospeda o controle atual quando renderizado em uma superfície de design."
  remarks: "Associa um site um <xref:System.ComponentModel.Component>do objeto para um <xref:System.ComponentModel.Container>do objeto e permite a comunicação entre os dois.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Component> Ele também fornece uma maneira para o contêiner gerenciar seus componentes."
  syntax:
    content: public System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "Um <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> que contém informações sobre o que o controle está hospedado no contêiner."
  overload: System.Web.UI.Control.Site*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O controle é um <xref href=&quot;System.Web.UI.WebControls.Substitution&quot;> </xref> controle."
  platform:
  - net462
- uid: System.Web.UI.Control.SkinID
  id: SkinID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: SkinID
  nameWithType: Control.SkinID
  fullName: System.Web.UI.Control.SkinID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define a capa para aplicar ao controle."
  remarks: "Capas disponíveis para um controle estão contidas em um ou mais arquivos de capa em um diretório do tema. A propriedade SkinID Especifica qual essas capas para aplicar ao controle. Uma capa é específica para um determinado controle; Você não pode compartilhar configurações de aparência entre os controles de tipos diferentes.       Se você não definir a propriedade SkinID, um controle usa a capa padrão, se um for definido. Por exemplo, se uma capa sem uma ID é definida para um <xref:System.Web.UI.WebControls.Image>de controle, em seguida, aquela aparência se aplica a todos os <xref:System.Web.UI.WebControls.Image>controles que fazem referência explicitamente uma capa por ID e que não estão definidas para desativar temas.</xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.WebControls.Image> Se uma capa com uma ID é definida para um <xref:System.Web.UI.WebControls.Image>controle, em seguida, capa aplica-se somente a <xref:System.Web.UI.WebControls.Image>controles cuja propriedade SkinID é definida para essa ID.</xref:System.Web.UI.WebControls.Image> </xref:System.Web.UI.WebControls.Image>       Se os arquivos de capa em um diretório de tema não contêm uma capa com a propriedade SkinID especificada, um <xref:System.ArgumentException>exceção em tempo de execução.</xref:System.ArgumentException>"
  syntax:
    content: public virtual string SkinID { get; set; }
    return:
      type: System.String
      description: "O nome da capa para aplicar ao controle. O padrão é <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.Control.SkinID*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The style sheet has already been applied.  \n  \n \\- or -  \n  \n The <xref uid=\"langword_csharp_Page_PreInit\" name=\"Page_PreInit\" href=\"\"></xref> event has already occurred.  \n  \n \\- or -  \n  \n The control was already added to the <xref uid=\"langword_csharp_Controls\" name=\"Controls\" href=\"\"></xref> collection."
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  id: System#Web#UI#IControlBuilderAccessor#ControlBuilder
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IControlBuilderAccessor.ControlBuilder
  nameWithType: Control.System.Web.UI.IControlBuilderAccessor.ControlBuilder
  fullName: System.Web.UI.Control.System.Web.UI.IControlBuilderAccessor.ControlBuilder
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IControlBuilderAccessor.ControlBuilder%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.Control>instância é convertida em um <xref:System.Web.UI.IControlBuilderAccessor>interface.</xref:System.Web.UI.IControlBuilderAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: System.Web.UI.ControlBuilder System.Web.UI.IControlBuilderAccessor.ControlBuilder { get; }
    return:
      type: System.Web.UI.ControlBuilder
      description: "O <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> que tiver criado o controle; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum construtor foi usado."
  overload: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  id: System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IControlDesignerAccessor.GetDesignModeState()
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.GetDesignModeState()
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.GetDesignModeState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IControlDesignerAccessor.GetDesignModeState%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.Control>instância é convertida em um <xref:System.Web.UI.IControlDesignerAccessor>interface.</xref:System.Web.UI.IControlDesignerAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: System.Collections.IDictionary IControlDesignerAccessor.GetDesignModeState ();
    parameters: []
    return:
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>do estado do controle.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  id: System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IControlDesignerAccessor.SetDesignModeState(IDictionary)
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.SetDesignModeState(IDictionary)
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.SetDesignModeState(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IControlDesignerAccessor.SetDesignModeState%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.Control>instância é convertida em um <xref:System.Web.UI.IControlDesignerAccessor>interface.</xref:System.Web.UI.IControlDesignerAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: void IControlDesignerAccessor.SetDesignModeState (System.Collections.IDictionary data);
    parameters:
    - id: data
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que contém os dados de tempo de design para o controle.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  id: System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IControlDesignerAccessor.SetOwnerControl(Control)
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.SetOwnerControl(Control)
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.SetOwnerControl(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IControlDesignerAccessor.SetOwnerControl%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.Control>instância é convertida em um <xref:System.Web.UI.IControlDesignerAccessor>interface.</xref:System.Web.UI.IControlDesignerAccessor> </xref:System.Web.UI.Control>       O <xref:System.Web.UI.IControlDesignerAccessor>interface é usada por um designer de controle para executar ações de tempo de design no controle.</xref:System.Web.UI.IControlDesignerAccessor>"
  syntax:
    content: void IControlDesignerAccessor.SetOwnerControl (System.Web.UI.Control owner);
    parameters:
    - id: owner
      type: System.Web.UI.Control
      description: "O proprietário do controle."
  overload: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>owner</code>é definido para o controle atual."
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  id: System#Web#UI#IControlDesignerAccessor#UserData
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IControlDesignerAccessor.UserData
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.UserData
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.UserData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IControlDesignerAccessor.UserData%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.Control>instância é convertida em um <xref:System.Web.UI.IControlDesignerAccessor>interface.</xref:System.Web.UI.IControlDesignerAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: System.Collections.IDictionary System.Web.UI.IControlDesignerAccessor.UserData { get; }
    return:
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que contém informações sobre o controle.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  id: System#Web#UI#IDataBindingsAccessor#DataBindings
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IDataBindingsAccessor.DataBindings
  nameWithType: Control.System.Web.UI.IDataBindingsAccessor.DataBindings
  fullName: System.Web.UI.Control.System.Web.UI.IDataBindingsAccessor.DataBindings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IDataBindingsAccessor.DataBindings%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.Control>instância é convertida em um <xref:System.Web.UI.IDataBindingsAccessor>interface.</xref:System.Web.UI.IDataBindingsAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: System.Web.UI.DataBindingCollection System.Web.UI.IDataBindingsAccessor.DataBindings { get; }
    return:
      type: System.Web.UI.DataBindingCollection
      description: "A coleção de associações de dados."
  overload: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  id: System#Web#UI#IDataBindingsAccessor#HasDataBindings
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IDataBindingsAccessor.HasDataBindings
  nameWithType: Control.System.Web.UI.IDataBindingsAccessor.HasDataBindings
  fullName: System.Web.UI.Control.System.Web.UI.IDataBindingsAccessor.HasDataBindings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IDataBindingsAccessor.HasDataBindings%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.Control>instância é convertida em um <xref:System.Web.UI.IDataBindingsAccessor>interface.</xref:System.Web.UI.IDataBindingsAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: bool System.Web.UI.IDataBindingsAccessor.HasDataBindings { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle contém a lógica de associação de dados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  id: System#Web#UI#IExpressionsAccessor#Expressions
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IExpressionsAccessor.Expressions
  nameWithType: Control.System.Web.UI.IExpressionsAccessor.Expressions
  fullName: System.Web.UI.Control.System.Web.UI.IExpressionsAccessor.Expressions
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IExpressionsAccessor.Expressions%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.Control>instância é convertida em um <xref:System.Web.UI.IExpressionsAccessor>interface.</xref:System.Web.UI.IExpressionsAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: System.Web.UI.ExpressionBindingCollection System.Web.UI.IExpressionsAccessor.Expressions { get; }
    return:
      type: System.Web.UI.ExpressionBindingCollection
      description: "Um <xref href=&quot;System.Web.UI.ExpressionBindingCollection&quot;> </xref> contendo <xref href=&quot;System.Web.UI.ExpressionBinding&quot;> </xref> objetos que representam as propriedades e expressões para um controle."
  overload: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  id: System#Web#UI#IExpressionsAccessor#HasExpressions
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IExpressionsAccessor.HasExpressions
  nameWithType: Control.System.Web.UI.IExpressionsAccessor.HasExpressions
  fullName: System.Web.UI.Control.System.Web.UI.IExpressionsAccessor.HasExpressions
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IExpressionsAccessor.HasExpressions%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.Control>instância é convertida em um <xref:System.Web.UI.IExpressionsAccessor>interface.</xref:System.Web.UI.IExpressionsAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: bool System.Web.UI.IExpressionsAccessor.HasExpressions { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle tiver propriedades definidas por expressões; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  id: System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  isEii: true
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  nameWithType: Control.System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  fullName: System.Web.UI.Control.System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IParserAccessor.AddParsedSubObject%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.Control>instância é convertida em um <xref:System.Web.UI.IParserAccessor>interface.</xref:System.Web.UI.IParserAccessor> </xref:System.Web.UI.Control>"
  syntax:
    content: void IParserAccessor.AddParsedSubObject (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto a ser adicionado."
  overload: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.TemplateControl
  id: TemplateControl
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: TemplateControl
  nameWithType: Control.TemplateControl
  fullName: System.Web.UI.Control.TemplateControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define uma referência para o modelo que contém este controle."
  remarks: "Quando um <xref:System.Web.UI.Control>instância faz parte de um modelo de controle, a propriedade TemplateControl contém uma referência para o controle recipiente.</xref:System.Web.UI.Control> Para obter mais informações, consulte o <xref:System.Web.UI.TemplateControl?displayProperty=fullName>documentação.</xref:System.Web.UI.TemplateControl?displayProperty=fullName>"
  syntax:
    content: public System.Web.UI.TemplateControl TemplateControl { get; set; }
    return:
      type: System.Web.UI.TemplateControl
      description: "O <xref href=&quot;System.Web.UI.TemplateControl&quot;> </xref> instância que contém este controle."
  overload: System.Web.UI.Control.TemplateControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.TemplateSourceDirectory
  id: TemplateSourceDirectory
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: TemplateSourceDirectory
  nameWithType: Control.TemplateSourceDirectory
  fullName: System.Web.UI.Control.TemplateSourceDirectory
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o diretório virtual do <xref href=&quot;System.Web.UI.Page&quot;> </xref> ou <xref href=&quot;System.Web.UI.UserControl&quot;> </xref> que contém o controle de servidor atual."
  remarks: "A propriedade TemplateSourceDirectory Especifica o caminho para o página ou controle de usuário que contém o controle atual. Por exemplo, se a página da Web reside no http://www.contoso.com/application/subdirectory, a propriedade TemplateSourceDirectory retorna &quot;application/subdiretório&quot;.       Para retornar o caminho virtual relativo de aplicativo (&quot;~ / subdiretório&quot;), use o <xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A>propriedade.</xref:System.Web.UI.Control.AppRelativeTemplateSourceDirectory%2A>"
  example:
  - "The following example uses the TemplateSourceDirectory property twice. The first time it is used in a <xref:System.Web.UI.Control.MapPathSecure%2A?displayProperty=fullName> method call to obtain the path to the directory in which the control resides. The second time it is in a <xref:System.IO.Directory.GetFiles%2A?displayProperty=fullName> method call to obtain the list of all the files contained within that directory.  \n  \n [!code-cs[Control_TemplateSourceDirectory#2](~/add/codesnippet/csharp/p-system.web.ui.control._10_1.cs)]\n [!code-vb[Control_TemplateSourceDirectory#2](~/add/codesnippet/visualbasic/p-system.web.ui.control._10_1.vb)]"
  syntax:
    content: public virtual string TemplateSourceDirectory { get; }
    return:
      type: System.String
      description: "O diretório virtual do controle de usuário ou a página que contém o controle de servidor."
  overload: System.Web.UI.Control.TemplateSourceDirectory*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: Control.TrackViewState()
  fullName: System.Web.UI.Control.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Faz com que o controle de alterações de estado de exibição para o controle de servidor para que eles podem ser armazenados no controle de servidor <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> objeto. Este objeto é acessível por meio de &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Este método é chamado automaticamente no final de <xref:System.Web.UI.Control.Init>eventos no ciclo de vida do controle de servidor.</xref:System.Web.UI.Control.Init>       Chame este método quando você desenvolve controles de associação de dados de modelo. Esse método alertas ASP.NET para monitorar alterações de estado de exibição de um controle de servidor, que é necessário quando você substituir o <xref:System.Web.UI.Control.DataBind%2A?displayProperty=fullName>método.</xref:System.Web.UI.Control.DataBind%2A?displayProperty=fullName>"
  example:
  - "The following example overrides the <xref:System.Web.UI.Control.DataBind%2A> method in a custom ASP.NET server control. It begins by calling the base <xref:System.Web.UI.Control.OnDataBinding%2A> method and then uses the <xref:System.Web.UI.ControlCollection.Clear%2A> method to delete all the child controls and the <xref:System.Web.UI.Control.ClearChildViewState%2A> method to delete any saved view-state settings for those child controls. Finally, the <xref:System.Web.UI.Control.ChildControlsCreated%2A> property is set to `true`. The control then uses the <xref:System.Web.UI.Control.IsTrackingViewState%2A> property to determine whether view-state change tracking is enabled for the control. If it is not enabled, the TrackViewState method is called.  \n  \n [!code-cs[Control_StateManagement#5](~/add/codesnippet/csharp/m-system.web.ui.control._9_1.cs)]\n [!code-vb[Control_StateManagement#5](~/add/codesnippet/visualbasic/m-system.web.ui.control._9_1.vb)]"
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.Control.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.UniqueID
  id: UniqueID
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: UniqueID
  nameWithType: Control.UniqueID
  fullName: System.Web.UI.Control.UniqueID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o identificador exclusivo e hierarquicamente qualificado para o controle de servidor."
  remarks: "Essa propriedade difere do <xref:System.Web.UI.Control.ID%2A>propriedade, em que a propriedade UniqueID inclui o identificador para o controle de servidor do contêiner de nomeação.</xref:System.Web.UI.Control.ID%2A> Esse identificador é gerado automaticamente quando uma solicitação de página é processada.       Essa propriedade é particularmente importante na diferenciação de controles de servidor contidos em um controle de servidor de associação de dados que se repete. O controle de repetição, que são <xref:System.Web.UI.WebControls.Repeater>, <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, e <xref:System.Web.UI.WebControls.GridView>Web controles de servidor (ou os controles de servidor personalizado que você criar que incluem a funcionalidade de repetição quando os dados associados) serve como o contêiner de nomeação para seus controles filhos.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.Repeater> Isso significa que ele cria um namespace exclusivo para seu filho controles para que seus <xref:System.Web.UI.Control.ID%2A>valores de propriedade não entrem em conflito.</xref:System.Web.UI.Control.ID%2A>       Por exemplo, se você incluir um ASP.NET <xref:System.Web.UI.WebControls.Label>controle de servidor na Web um <xref:System.Web.UI.WebControls.Repeater>controle de servidor e atribuir a <xref:System.Web.UI.WebControls.Label>controle um <xref:System.Web.UI.Control.ID%2A>valor da propriedade `MyLabel`e o <xref:System.Web.UI.WebControls.Repeater>um <xref:System.Web.UI.Control.ID%2A>de `MyRepeater`.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.Label> </xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.Label> Se você vincular dados para o <xref:System.Web.UI.WebControls.Repeater>para um <xref:System.Collections.ArrayList>Propriedades para cada instância do objeto com três entradas, a ID exclusiva resultante a <xref:System.Web.UI.WebControls.Label>controles de servidor são `MyRepeater$ctl00$MyLabel`, `MyRepeater$ctl01$MyLabel`, e `MyRepeater$ctl02$MyLabel`.</xref:System.Web.UI.WebControls.Label> </xref:System.Collections.ArrayList> </xref:System.Web.UI.WebControls.Repeater>"
  example:
  - "The following example creates an <xref:System.Collections.ArrayList> object and populates it with three text strings, then binds a <xref:System.Web.UI.WebControls.Repeater> Web server control to the data in the <xref:System.Collections.ArrayList> when the page is loaded. The code gets the UniqueID property for each child control generated during data binding. The code generates three versions of the <xref:System.Web.UI.WebControls.Label> control and writes their `UniqueID` property values to the page.  \n  \n [!code-vb[AccessingAspNetControlsProgramaticallyConcepts#2](~/add/codesnippet/visualbasic/p-system.web.ui.control._11_1.aspx)]\n [!code-cs[AccessingAspNetControlsProgramaticallyConcepts#2](~/add/codesnippet/csharp/p-system.web.ui.control._11_1.aspx)]"
  syntax:
    content: public virtual string UniqueID { get; }
    return:
      type: System.String
      description: "O identificador totalmente qualificado para o controle de servidor."
  overload: System.Web.UI.Control.UniqueID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.Unload
  id: Unload
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Unload
  nameWithType: Control.Unload
  fullName: System.Web.UI.Control.Unload
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre quando o controle de servidor é descarregado da memória."
  remarks: "Controles de servidor devem executar qualquer limpeza final, como fechar arquivos, conexões de banco de dados e descartar objetos, durante esse estágio do ciclo de vida de controle antes da instância é descarregada."
  syntax:
    content: public event EventHandler Unload;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: Control.ValidateRequestMode
  fullName: System.Web.UI.Control.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se o controle verifica a entrada do cliente do navegador para valores potencialmente perigosos."
  remarks: "Para obter mais informações sobre a validação de solicitação, consulte <xref:System.Web.UnvalidatedRequestValues>.</xref:System.Web.UnvalidatedRequestValues>"
  syntax:
    content: public virtual System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "Um valor que determina se o controle verifica a entrada do cliente. Values can include <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;></xref>, <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;></xref>, and <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;></xref>. O padrão é <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>, o que significa que o controle obtém o valor de seu pai."
  overload: System.Web.UI.Control.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ViewState
  id: ViewState
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ViewState
  nameWithType: Control.ViewState
  fullName: System.Web.UI.Control.ViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um dicionário de informações de estado que permite salvar e restaurar o estado de exibição de um controle de servidor em várias solicitações para a mesma página."
  remarks: "Estado de exibição de um controle de servidor é o acúmulo de todos os seus valores de propriedade. Para preservar a esses valores em solicitações HTTP, controles de servidor ASP.NET usam essa propriedade, o que é uma ocorrência da <xref:System.Web.UI.StateBag>classe para armazenar os valores de propriedade.</xref:System.Web.UI.StateBag> Os valores são passados como uma variável para um elemento de entrada oculto HTML quando solicitações subsequentes são processadas. Para obter mais informações sobre como salvar o estado de exibição de controle de servidor, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md).       Estado de exibição é habilitado para todos os controles de servidor por padrão, mas há circunstâncias em que deseja desabilitá-lo. Para obter mais informações, consulte [visão geral de desempenho do ASP.NET](~/add/includes/ajax-current-ext-md.md).       Para obter informações sobre dicionários e como usá-los, consulte [coleções e estruturas de dados](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates implementing a `Text` property that stores and retrieves its value from its control's ViewState property.  \n  \n [!code-vb[SysWebUIControlViewState#2](~/add/codesnippet/visualbasic/p-system.web.ui.control._4_1.vb)]\n [!code-cs[SysWebUIControlViewState#2](~/add/codesnippet/csharp/p-system.web.ui.control._4_1.cs)]"
  syntax:
    content: protected virtual System.Web.UI.StateBag ViewState { get; }
    return:
      type: System.Web.UI.StateBag
      description: "Uma instância do <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> classe que contém informações de estado de exibição do controle de servidor."
  overload: System.Web.UI.Control.ViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ViewStateIgnoresCase
  id: ViewStateIgnoresCase
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ViewStateIgnoresCase
  nameWithType: Control.ViewStateIgnoresCase
  fullName: System.Web.UI.Control.ViewStateIgnoresCase
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> objeto diferencia maiusculas de minúsculas."
  remarks: "Substitua este método se você criar um controle de servidor personalizado que salva seu estado de exibição sem considerando caso. Quando você faz para vários objetos com a mesma chave, mas com maiusculas e minúsculas diferentes, podem ser armazenados no <xref:System.Web.UI.StateBag>associado a <xref:System.Web.UI.Control.ViewState%2A>propriedade.</xref:System.Web.UI.Control.ViewState%2A> </xref:System.Web.UI.StateBag>"
  example:
  - "The following example demonstrates how to override the ViewStateIgnoresCase property to return `true`.  \n  \n [!code-vb[System.Web.UI.Control_ViewStateIgnoresCase#2](~/add/codesnippet/visualbasic/p-system.web.ui.control._2_1.vb)]\n [!code-cs[System.Web.UI.Control_ViewStateIgnoresCase#2](~/add/codesnippet/csharp/p-system.web.ui.control._2_1.cs)]"
  syntax:
    content: protected virtual bool ViewStateIgnoresCase { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> instância for maiusculas de minúsculas; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.ViewStateIgnoresCase*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Control.ViewStateMode
  id: ViewStateMode
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: ViewStateMode
  nameWithType: Control.ViewStateMode
  fullName: System.Web.UI.Control.ViewStateMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o modo de estado de exibição deste controle."
  remarks: "Você pode usar a propriedade ViewStateMode para habilitar o estado de exibição para um controle individual, mesmo se o estado de exibição está desabilitado para a página. Para obter mais informações sobre o estado de exibição e o estado de controle, consulte o <xref:System.Web.UI.Control.EnableViewState%2A>propriedade.</xref:System.Web.UI.Control.EnableViewState%2A>       Para desativar o estado de exibição para uma página e habilitá-lo para um controle específico na página, defina o <xref:System.Web.UI.Control.EnableViewState%2A>propriedade da página e o controle `true`, defina a propriedade ViewStateMode da página para <xref:System.Web.UI.ViewStateMode>e defina a propriedade ViewStateMode do controle para <xref:System.Web.UI.ViewStateMode>.</xref:System.Web.UI.ViewStateMode> </xref:System.Web.UI.ViewStateMode> </xref:System.Web.UI.Control.EnableViewState%2A>       O valor padrão da propriedade ViewStateMode de uma página é <xref:System.Web.UI.ViewStateMode>.</xref:System.Web.UI.ViewStateMode> O valor padrão da propriedade ViewStateMode para um controle de servidor Web em uma página é <xref:System.Web.UI.ViewStateMode>.</xref:System.Web.UI.ViewStateMode> Como resultado, se você não definir essa propriedade na página ou o nível de controle, o valor de <xref:System.Web.UI.Control.EnableViewState%2A>propriedade determina o comportamento do estado de exibição.</xref:System.Web.UI.Control.EnableViewState%2A>       A propriedade ViewStateMode de uma página ou um controle tem somente-se um efeito de <xref:System.Web.UI.Control.EnableViewState%2A>está definida como `true`.</xref:System.Web.UI.Control.EnableViewState%2A> Se o <xref:System.Web.UI.Control.EnableViewState%2A>está definida como `false`, estado de exibição será desativado mesmo se a propriedade ViewStateMode está definida como <xref:System.Web.UI.ViewStateMode>.</xref:System.Web.UI.ViewStateMode> </xref:System.Web.UI.Control.EnableViewState%2A>"
  syntax:
    content: public virtual System.Web.UI.ViewStateMode ViewStateMode { get; set; }
    return:
      type: System.Web.UI.ViewStateMode
      description: "O modo de estado de exibição deste controle."
  overload: System.Web.UI.Control.ViewStateMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Foi feita uma tentativa de definir esta propriedade para um valor que não está no <xref href=&quot;System.Web.UI.ViewStateMode&quot;> </xref> enumeração."
  platform:
  - net462
- uid: System.Web.UI.Control.Visible
  id: Visible
  parent: System.Web.UI.Control
  langs:
  - csharp
  name: Visible
  nameWithType: Control.Visible
  fullName: System.Web.UI.Control.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se um controle de servidor é renderizado como a interface do usuário na página."
  remarks: "Se essa propriedade for `false`, o controle de servidor não é processado. Você deve levar isso em conta ao organizar o layout da página.      > [!NOTE] > Se um controle de contêiner não é processado, os controles que ele contém não serão renderizados mesmo se você definir a propriedade Visible de um controle individual para `true`. Nesse caso, o controle individual retorna `false` para a propriedade visível mesmo se você tiver definido-lo explicitamente `true`. (Ou seja, se o `Visible` propriedade do controle pai está definida como `false`, o controle filho herda a configuração e a configuração tem precedência sobre nenhuma configuração local.)"
  syntax:
    content: public virtual bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle está visível na página; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Control.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.Control.#ctor
  parent: System.Web.UI.Control
  isExternal: false
  name: Control()
  nameWithType: Control.Control()
  fullName: System.Web.UI.Control.Control()
- uid: System.Web.UI.Control.Adapter
  parent: System.Web.UI.Control
  isExternal: false
  name: Adapter
  nameWithType: Control.Adapter
  fullName: System.Web.UI.Control.Adapter
- uid: System.Web.UI.Adapters.ControlAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: ControlAdapter
  nameWithType: ControlAdapter
  fullName: System.Web.UI.Adapters.ControlAdapter
- uid: System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  parent: System.Web.UI.Control
  isExternal: false
  name: AddedControl(Control,Int32)
  nameWithType: Control.AddedControl(Control,Int32)
  fullName: System.Web.UI.Control.AddedControl(Control,Int32)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.Control.AddParsedSubObject(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: AddParsedSubObject(Object)
  nameWithType: Control.AddParsedSubObject(Object)
  fullName: System.Web.UI.Control.AddParsedSubObject(Object)
- uid: System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  parent: System.Web.UI.Control
  isExternal: false
  name: ApplyStyleSheetSkin(Page)
  nameWithType: Control.ApplyStyleSheetSkin(Page)
  fullName: System.Web.UI.Control.ApplyStyleSheetSkin(Page)
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  parent: System.Web.UI.Control
  isExternal: false
  name: AppRelativeTemplateSourceDirectory
  nameWithType: Control.AppRelativeTemplateSourceDirectory
  fullName: System.Web.UI.Control.AppRelativeTemplateSourceDirectory
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: BeginRenderTracing(TextWriter,Object)
  nameWithType: Control.BeginRenderTracing(TextWriter,Object)
  fullName: System.Web.UI.Control.BeginRenderTracing(TextWriter,Object)
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.UI.Control.BindingContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: BindingContainer
  nameWithType: Control.BindingContainer
  fullName: System.Web.UI.Control.BindingContainer
- uid: System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  parent: System.Web.UI.Control
  isExternal: false
  name: BuildProfileTree(String,Boolean)
  nameWithType: Control.BuildProfileTree(String,Boolean)
  fullName: System.Web.UI.Control.BuildProfileTree(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Control.ChildControlsCreated
  parent: System.Web.UI.Control
  isExternal: false
  name: ChildControlsCreated
  nameWithType: Control.ChildControlsCreated
  fullName: System.Web.UI.Control.ChildControlsCreated
- uid: System.Web.UI.Control.ClearCachedClientID
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearCachedClientID()
  nameWithType: Control.ClearCachedClientID()
  fullName: System.Web.UI.Control.ClearCachedClientID()
- uid: System.Web.UI.Control.ClearChildControlState
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildControlState()
  nameWithType: Control.ClearChildControlState()
  fullName: System.Web.UI.Control.ClearChildControlState()
- uid: System.Web.UI.Control.ClearChildState
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildState()
  nameWithType: Control.ClearChildState()
  fullName: System.Web.UI.Control.ClearChildState()
- uid: System.Web.UI.Control.ClearChildViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildViewState()
  nameWithType: Control.ClearChildViewState()
  fullName: System.Web.UI.Control.ClearChildViewState()
- uid: System.Web.UI.Control.ClearEffectiveClientIDMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearEffectiveClientIDMode()
  nameWithType: Control.ClearEffectiveClientIDMode()
  fullName: System.Web.UI.Control.ClearEffectiveClientIDMode()
- uid: System.Web.UI.Control.ClientID
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientID
  nameWithType: Control.ClientID
  fullName: System.Web.UI.Control.ClientID
- uid: System.Web.UI.Control.ClientIDMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientIDMode
  nameWithType: Control.ClientIDMode
  fullName: System.Web.UI.Control.ClientIDMode
- uid: System.Web.UI.ClientIDMode
  parent: System.Web.UI
  isExternal: false
  name: ClientIDMode
  nameWithType: ClientIDMode
  fullName: System.Web.UI.ClientIDMode
- uid: System.Web.UI.Control.ClientIDSeparator
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientIDSeparator
  nameWithType: Control.ClientIDSeparator
  fullName: System.Web.UI.Control.ClientIDSeparator
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.Control.Context
  parent: System.Web.UI.Control
  isExternal: false
  name: Context
  nameWithType: Control.Context
  fullName: System.Web.UI.Control.Context
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.Control.Controls
  parent: System.Web.UI.Control
  isExternal: false
  name: Controls
  nameWithType: Control.Controls
  fullName: System.Web.UI.Control.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.Control.CreateChildControls
  parent: System.Web.UI.Control
  isExternal: false
  name: CreateChildControls()
  nameWithType: Control.CreateChildControls()
  fullName: System.Web.UI.Control.CreateChildControls()
- uid: System.Web.UI.Control.CreateControlCollection
  parent: System.Web.UI.Control
  isExternal: false
  name: CreateControlCollection()
  nameWithType: Control.CreateControlCollection()
  fullName: System.Web.UI.Control.CreateControlCollection()
- uid: System.Web.UI.Control.DataBind
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBind()
  nameWithType: Control.DataBind()
  fullName: System.Web.UI.Control.DataBind()
- uid: System.Web.UI.Control.DataBind(System.Boolean)
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBind(Boolean)
  nameWithType: Control.DataBind(Boolean)
  fullName: System.Web.UI.Control.DataBind(Boolean)
- uid: System.Web.UI.Control.DataBindChildren
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBindChildren()
  nameWithType: Control.DataBindChildren()
  fullName: System.Web.UI.Control.DataBindChildren()
- uid: System.Web.UI.Control.DataBinding
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBinding
  nameWithType: Control.DataBinding
  fullName: System.Web.UI.Control.DataBinding
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.Control.DataItemContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: DataItemContainer
  nameWithType: Control.DataItemContainer
  fullName: System.Web.UI.Control.DataItemContainer
- uid: System.Web.UI.Control.DataKeysContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: DataKeysContainer
  nameWithType: Control.DataKeysContainer
  fullName: System.Web.UI.Control.DataKeysContainer
- uid: System.Web.UI.Control.DesignMode
  parent: System.Web.UI.Control
  isExternal: false
  name: DesignMode
  nameWithType: Control.DesignMode
  fullName: System.Web.UI.Control.DesignMode
- uid: System.Web.UI.Control.Dispose
  parent: System.Web.UI.Control
  isExternal: false
  name: Dispose()
  nameWithType: Control.Dispose()
  fullName: System.Web.UI.Control.Dispose()
- uid: System.Web.UI.Control.Disposed
  parent: System.Web.UI.Control
  isExternal: false
  name: Disposed
  nameWithType: Control.Disposed
  fullName: System.Web.UI.Control.Disposed
- uid: System.Web.UI.Control.EnableTheming
  parent: System.Web.UI.Control
  isExternal: false
  name: EnableTheming
  nameWithType: Control.EnableTheming
  fullName: System.Web.UI.Control.EnableTheming
- uid: System.Web.UI.Control.EnableViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: EnableViewState
  nameWithType: Control.EnableViewState
  fullName: System.Web.UI.Control.EnableViewState
- uid: System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: EndRenderTracing(TextWriter,Object)
  nameWithType: Control.EndRenderTracing(TextWriter,Object)
  fullName: System.Web.UI.Control.EndRenderTracing(TextWriter,Object)
- uid: System.Web.UI.Control.EnsureChildControls
  parent: System.Web.UI.Control
  isExternal: false
  name: EnsureChildControls()
  nameWithType: Control.EnsureChildControls()
  fullName: System.Web.UI.Control.EnsureChildControls()
- uid: System.Web.UI.Control.EnsureID
  parent: System.Web.UI.Control
  isExternal: false
  name: EnsureID()
  nameWithType: Control.EnsureID()
  fullName: System.Web.UI.Control.EnsureID()
- uid: System.Web.UI.Control.Events
  parent: System.Web.UI.Control
  isExternal: false
  name: Events
  nameWithType: Control.Events
  fullName: System.Web.UI.Control.Events
- uid: System.ComponentModel.EventHandlerList
  parent: System.ComponentModel
  isExternal: false
  name: EventHandlerList
  nameWithType: EventHandlerList
  fullName: System.ComponentModel.EventHandlerList
- uid: System.Web.UI.Control.FindControl(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: FindControl(String)
  nameWithType: Control.FindControl(String)
  fullName: System.Web.UI.Control.FindControl(String)
- uid: System.Web.UI.Control.FindControl(System.String,System.Int32)
  parent: System.Web.UI.Control
  isExternal: false
  name: FindControl(String,Int32)
  nameWithType: Control.FindControl(String,Int32)
  fullName: System.Web.UI.Control.FindControl(String,Int32)
- uid: System.Web.UI.Control.Focus
  parent: System.Web.UI.Control
  isExternal: false
  name: Focus()
  nameWithType: Control.Focus()
  fullName: System.Web.UI.Control.Focus()
- uid: System.Web.UI.Control.GetDesignModeState
  parent: System.Web.UI.Control
  isExternal: false
  name: GetDesignModeState()
  nameWithType: Control.GetDesignModeState()
  fullName: System.Web.UI.Control.GetDesignModeState()
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.Control.GetRouteUrl(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(Object)
  nameWithType: Control.GetRouteUrl(Object)
  fullName: System.Web.UI.Control.GetRouteUrl(Object)
- uid: System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(RouteValueDictionary)
  nameWithType: Control.GetRouteUrl(RouteValueDictionary)
  fullName: System.Web.UI.Control.GetRouteUrl(RouteValueDictionary)
- uid: System.Web.Routing.RouteValueDictionary
  parent: System.Web.Routing
  isExternal: true
  name: RouteValueDictionary
  nameWithType: RouteValueDictionary
  fullName: System.Web.Routing.RouteValueDictionary
- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(String,Object)
  nameWithType: Control.GetRouteUrl(String,Object)
  fullName: System.Web.UI.Control.GetRouteUrl(String,Object)
- uid: System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl(String,RouteValueDictionary)
  nameWithType: Control.GetRouteUrl(String,RouteValueDictionary)
  fullName: System.Web.UI.Control.GetRouteUrl(String,RouteValueDictionary)
- uid: System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  parent: System.Web.UI.Control
  isExternal: false
  name: GetUniqueIDRelativeTo(Control)
  nameWithType: Control.GetUniqueIDRelativeTo(Control)
  fullName: System.Web.UI.Control.GetUniqueIDRelativeTo(Control)
- uid: System.Web.UI.Control.HasChildViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: HasChildViewState
  nameWithType: Control.HasChildViewState
  fullName: System.Web.UI.Control.HasChildViewState
- uid: System.Web.UI.Control.HasControls
  parent: System.Web.UI.Control
  isExternal: false
  name: HasControls()
  nameWithType: Control.HasControls()
  fullName: System.Web.UI.Control.HasControls()
- uid: System.Web.UI.Control.HasEvents
  parent: System.Web.UI.Control
  isExternal: false
  name: HasEvents()
  nameWithType: Control.HasEvents()
  fullName: System.Web.UI.Control.HasEvents()
- uid: System.Web.UI.Control.ID
  parent: System.Web.UI.Control
  isExternal: false
  name: ID
  nameWithType: Control.ID
  fullName: System.Web.UI.Control.ID
- uid: System.Web.UI.Control.IdSeparator
  parent: System.Web.UI.Control
  isExternal: false
  name: IdSeparator
  nameWithType: Control.IdSeparator
  fullName: System.Web.UI.Control.IdSeparator
- uid: System.Web.UI.Control.Init
  parent: System.Web.UI.Control
  isExternal: false
  name: Init
  nameWithType: Control.Init
  fullName: System.Web.UI.Control.Init
- uid: System.Web.UI.Control.IsChildControlStateCleared
  parent: System.Web.UI.Control
  isExternal: false
  name: IsChildControlStateCleared
  nameWithType: Control.IsChildControlStateCleared
  fullName: System.Web.UI.Control.IsChildControlStateCleared
- uid: System.Web.UI.Control.IsLiteralContent
  parent: System.Web.UI.Control
  isExternal: false
  name: IsLiteralContent()
  nameWithType: Control.IsLiteralContent()
  fullName: System.Web.UI.Control.IsLiteralContent()
- uid: System.Web.UI.Control.IsTrackingViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: IsTrackingViewState
  nameWithType: Control.IsTrackingViewState
  fullName: System.Web.UI.Control.IsTrackingViewState
- uid: System.Web.UI.Control.IsViewStateEnabled
  parent: System.Web.UI.Control
  isExternal: false
  name: IsViewStateEnabled
  nameWithType: Control.IsViewStateEnabled
  fullName: System.Web.UI.Control.IsViewStateEnabled
- uid: System.Web.UI.Control.Load
  parent: System.Web.UI.Control
  isExternal: false
  name: Load
  nameWithType: Control.Load
  fullName: System.Web.UI.Control.Load
- uid: System.Web.UI.Control.LoadControlState(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: Control.LoadControlState(Object)
  fullName: System.Web.UI.Control.LoadControlState(Object)
- uid: System.Web.UI.Control.LoadViewState(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: Control.LoadViewState(Object)
  fullName: System.Web.UI.Control.LoadViewState(Object)
- uid: System.Web.UI.Control.LoadViewStateByID
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadViewStateByID
  nameWithType: Control.LoadViewStateByID
  fullName: System.Web.UI.Control.LoadViewStateByID
- uid: System.Web.UI.Control.MapPathSecure(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: MapPathSecure(String)
  nameWithType: Control.MapPathSecure(String)
  fullName: System.Web.UI.Control.MapPathSecure(String)
- uid: System.Web.UI.Control.NamingContainer
  parent: System.Web.UI.Control
  isExternal: false
  name: NamingContainer
  nameWithType: Control.NamingContainer
  fullName: System.Web.UI.Control.NamingContainer
- uid: System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: Control.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.Control.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Control.OnDataBinding(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnDataBinding(EventArgs)
  nameWithType: Control.OnDataBinding(EventArgs)
  fullName: System.Web.UI.Control.OnDataBinding(EventArgs)
- uid: System.Web.UI.Control.OnInit(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: Control.OnInit(EventArgs)
  fullName: System.Web.UI.Control.OnInit(EventArgs)
- uid: System.Web.UI.Control.OnLoad(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: Control.OnLoad(EventArgs)
  fullName: System.Web.UI.Control.OnLoad(EventArgs)
- uid: System.Web.UI.Control.OnPreRender(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Control.OnPreRender(EventArgs)
  fullName: System.Web.UI.Control.OnPreRender(EventArgs)
- uid: System.Web.UI.Control.OnUnload(System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: Control.OnUnload(EventArgs)
  fullName: System.Web.UI.Control.OnUnload(EventArgs)
- uid: System.Web.UI.Control.OpenFile(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: OpenFile(String)
  nameWithType: Control.OpenFile(String)
  fullName: System.Web.UI.Control.OpenFile(String)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.UI.Control.Page
  parent: System.Web.UI.Control
  isExternal: false
  name: Page
  nameWithType: Control.Page
  fullName: System.Web.UI.Control.Page
- uid: System.Web.UI.Control.Parent
  parent: System.Web.UI.Control
  isExternal: false
  name: Parent
  nameWithType: Control.Parent
  fullName: System.Web.UI.Control.Parent
- uid: System.Web.UI.Control.PreRender
  parent: System.Web.UI.Control
  isExternal: false
  name: PreRender
  nameWithType: Control.PreRender
  fullName: System.Web.UI.Control.PreRender
- uid: System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.Control
  isExternal: false
  name: RaiseBubbleEvent(Object,EventArgs)
  nameWithType: Control.RaiseBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.Control.RaiseBubbleEvent(Object,EventArgs)
- uid: System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  parent: System.Web.UI.Control
  isExternal: false
  name: RemovedControl(Control)
  nameWithType: Control.RemovedControl(Control)
  fullName: System.Web.UI.Control.RemovedControl(Control)
- uid: System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Control.Render(HtmlTextWriter)
  fullName: System.Web.UI.Control.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: Control.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.Control.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderControl(HtmlTextWriter)
  nameWithType: Control.RenderControl(HtmlTextWriter)
  fullName: System.Web.UI.Control.RenderControl(HtmlTextWriter)
- uid: System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderControl(HtmlTextWriter,ControlAdapter)
  nameWithType: Control.RenderControl(HtmlTextWriter,ControlAdapter)
  fullName: System.Web.UI.Control.RenderControl(HtmlTextWriter,ControlAdapter)
- uid: System.Web.UI.Control.RenderingCompatibility
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderingCompatibility
  nameWithType: Control.RenderingCompatibility
  fullName: System.Web.UI.Control.RenderingCompatibility
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Web.UI.Control.ResolveAdapter
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveAdapter()
  nameWithType: Control.ResolveAdapter()
  fullName: System.Web.UI.Control.ResolveAdapter()
- uid: System.Web.UI.Control.ResolveClientUrl(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveClientUrl(String)
  nameWithType: Control.ResolveClientUrl(String)
  fullName: System.Web.UI.Control.ResolveClientUrl(String)
- uid: System.Web.UI.Control.ResolveUrl(System.String)
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveUrl(String)
  nameWithType: Control.ResolveUrl(String)
  fullName: System.Web.UI.Control.ResolveUrl(String)
- uid: System.Web.UI.Control.SaveControlState
  parent: System.Web.UI.Control
  isExternal: false
  name: SaveControlState()
  nameWithType: Control.SaveControlState()
  fullName: System.Web.UI.Control.SaveControlState()
- uid: System.Web.UI.Control.SaveViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: SaveViewState()
  nameWithType: Control.SaveViewState()
  fullName: System.Web.UI.Control.SaveViewState()
- uid: System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetDesignModeState(IDictionary)
  nameWithType: Control.SetDesignModeState(IDictionary)
  fullName: System.Web.UI.Control.SetDesignModeState(IDictionary)
- uid: System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetRenderMethodDelegate(RenderMethod)
  nameWithType: Control.SetRenderMethodDelegate(RenderMethod)
  fullName: System.Web.UI.Control.SetRenderMethodDelegate(RenderMethod)
- uid: System.Web.UI.RenderMethod
  parent: System.Web.UI
  isExternal: false
  name: RenderMethod
  nameWithType: RenderMethod
  fullName: System.Web.UI.RenderMethod
- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetTraceData(Object,Object)
  nameWithType: Control.SetTraceData(Object,Object)
  fullName: System.Web.UI.Control.SetTraceData(Object,Object)
- uid: System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: SetTraceData(Object,Object,Object)
  nameWithType: Control.SetTraceData(Object,Object,Object)
  fullName: System.Web.UI.Control.SetTraceData(Object,Object,Object)
- uid: System.Web.UI.Control.Site
  parent: System.Web.UI.Control
  isExternal: false
  name: Site
  nameWithType: Control.Site
  fullName: System.Web.UI.Control.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.Web.UI.Control.SkinID
  parent: System.Web.UI.Control
  isExternal: false
  name: SkinID
  nameWithType: Control.SkinID
  fullName: System.Web.UI.Control.SkinID
- uid: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlBuilderAccessor.ControlBuilder
  nameWithType: Control.System.Web.UI.IControlBuilderAccessor.ControlBuilder
  fullName: System.Web.UI.Control.System.Web.UI.IControlBuilderAccessor.ControlBuilder
- uid: System.Web.UI.ControlBuilder
  parent: System.Web.UI
  isExternal: false
  name: ControlBuilder
  nameWithType: ControlBuilder
  fullName: System.Web.UI.ControlBuilder
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.GetDesignModeState()
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.GetDesignModeState()
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.GetDesignModeState()
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.SetDesignModeState(IDictionary)
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.SetDesignModeState(IDictionary)
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.SetDesignModeState(IDictionary)
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.SetOwnerControl(Control)
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.SetOwnerControl(Control)
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.SetOwnerControl(Control)
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.UserData
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.UserData
  fullName: System.Web.UI.Control.System.Web.UI.IControlDesignerAccessor.UserData
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IDataBindingsAccessor.DataBindings
  nameWithType: Control.System.Web.UI.IDataBindingsAccessor.DataBindings
  fullName: System.Web.UI.Control.System.Web.UI.IDataBindingsAccessor.DataBindings
- uid: System.Web.UI.DataBindingCollection
  parent: System.Web.UI
  isExternal: false
  name: DataBindingCollection
  nameWithType: DataBindingCollection
  fullName: System.Web.UI.DataBindingCollection
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IDataBindingsAccessor.HasDataBindings
  nameWithType: Control.System.Web.UI.IDataBindingsAccessor.HasDataBindings
  fullName: System.Web.UI.Control.System.Web.UI.IDataBindingsAccessor.HasDataBindings
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IExpressionsAccessor.Expressions
  nameWithType: Control.System.Web.UI.IExpressionsAccessor.Expressions
  fullName: System.Web.UI.Control.System.Web.UI.IExpressionsAccessor.Expressions
- uid: System.Web.UI.ExpressionBindingCollection
  parent: System.Web.UI
  isExternal: false
  name: ExpressionBindingCollection
  nameWithType: ExpressionBindingCollection
  fullName: System.Web.UI.ExpressionBindingCollection
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IExpressionsAccessor.HasExpressions
  nameWithType: Control.System.Web.UI.IExpressionsAccessor.HasExpressions
  fullName: System.Web.UI.Control.System.Web.UI.IExpressionsAccessor.HasExpressions
- uid: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  nameWithType: Control.System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
  fullName: System.Web.UI.Control.System.Web.UI.IParserAccessor.AddParsedSubObject(Object)
- uid: System.Web.UI.Control.TemplateControl
  parent: System.Web.UI.Control
  isExternal: false
  name: TemplateControl
  nameWithType: Control.TemplateControl
  fullName: System.Web.UI.Control.TemplateControl
- uid: System.Web.UI.TemplateControl
  parent: System.Web.UI
  isExternal: false
  name: TemplateControl
  nameWithType: TemplateControl
  fullName: System.Web.UI.TemplateControl
- uid: System.Web.UI.Control.TemplateSourceDirectory
  parent: System.Web.UI.Control
  isExternal: false
  name: TemplateSourceDirectory
  nameWithType: Control.TemplateSourceDirectory
  fullName: System.Web.UI.Control.TemplateSourceDirectory
- uid: System.Web.UI.Control.TrackViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: TrackViewState()
  nameWithType: Control.TrackViewState()
  fullName: System.Web.UI.Control.TrackViewState()
- uid: System.Web.UI.Control.UniqueID
  parent: System.Web.UI.Control
  isExternal: false
  name: UniqueID
  nameWithType: Control.UniqueID
  fullName: System.Web.UI.Control.UniqueID
- uid: System.Web.UI.Control.Unload
  parent: System.Web.UI.Control
  isExternal: false
  name: Unload
  nameWithType: Control.Unload
  fullName: System.Web.UI.Control.Unload
- uid: System.Web.UI.Control.ValidateRequestMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Control.ValidateRequestMode
  fullName: System.Web.UI.Control.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.Control.ViewState
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewState
  nameWithType: Control.ViewState
  fullName: System.Web.UI.Control.ViewState
- uid: System.Web.UI.StateBag
  parent: System.Web.UI
  isExternal: false
  name: StateBag
  nameWithType: StateBag
  fullName: System.Web.UI.StateBag
- uid: System.Web.UI.Control.ViewStateIgnoresCase
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewStateIgnoresCase
  nameWithType: Control.ViewStateIgnoresCase
  fullName: System.Web.UI.Control.ViewStateIgnoresCase
- uid: System.Web.UI.Control.ViewStateMode
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewStateMode
  nameWithType: Control.ViewStateMode
  fullName: System.Web.UI.Control.ViewStateMode
- uid: System.Web.UI.ViewStateMode
  parent: System.Web.UI
  isExternal: false
  name: ViewStateMode
  nameWithType: ViewStateMode
  fullName: System.Web.UI.ViewStateMode
- uid: System.Web.UI.Control.Visible
  parent: System.Web.UI.Control
  isExternal: false
  name: Visible
  nameWithType: Control.Visible
  fullName: System.Web.UI.Control.Visible
- uid: System.Web.UI.Control.#ctor*
  parent: System.Web.UI.Control
  isExternal: false
  name: Control
  nameWithType: Control.Control
- uid: System.Web.UI.Control.Adapter*
  parent: System.Web.UI.Control
  isExternal: false
  name: Adapter
  nameWithType: Control.Adapter
- uid: System.Web.UI.Control.AddedControl*
  parent: System.Web.UI.Control
  isExternal: false
  name: AddedControl
  nameWithType: Control.AddedControl
- uid: System.Web.UI.Control.AddParsedSubObject*
  parent: System.Web.UI.Control
  isExternal: false
  name: AddParsedSubObject
  nameWithType: Control.AddParsedSubObject
- uid: System.Web.UI.Control.ApplyStyleSheetSkin*
  parent: System.Web.UI.Control
  isExternal: false
  name: ApplyStyleSheetSkin
  nameWithType: Control.ApplyStyleSheetSkin
- uid: System.Web.UI.Control.AppRelativeTemplateSourceDirectory*
  parent: System.Web.UI.Control
  isExternal: false
  name: AppRelativeTemplateSourceDirectory
  nameWithType: Control.AppRelativeTemplateSourceDirectory
- uid: System.Web.UI.Control.BeginRenderTracing*
  parent: System.Web.UI.Control
  isExternal: false
  name: BeginRenderTracing
  nameWithType: Control.BeginRenderTracing
- uid: System.Web.UI.Control.BindingContainer*
  parent: System.Web.UI.Control
  isExternal: false
  name: BindingContainer
  nameWithType: Control.BindingContainer
- uid: System.Web.UI.Control.BuildProfileTree*
  parent: System.Web.UI.Control
  isExternal: false
  name: BuildProfileTree
  nameWithType: Control.BuildProfileTree
- uid: System.Web.UI.Control.ChildControlsCreated*
  parent: System.Web.UI.Control
  isExternal: false
  name: ChildControlsCreated
  nameWithType: Control.ChildControlsCreated
- uid: System.Web.UI.Control.ClearCachedClientID*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearCachedClientID
  nameWithType: Control.ClearCachedClientID
- uid: System.Web.UI.Control.ClearChildControlState*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildControlState
  nameWithType: Control.ClearChildControlState
- uid: System.Web.UI.Control.ClearChildState*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildState
  nameWithType: Control.ClearChildState
- uid: System.Web.UI.Control.ClearChildViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearChildViewState
  nameWithType: Control.ClearChildViewState
- uid: System.Web.UI.Control.ClearEffectiveClientIDMode*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClearEffectiveClientIDMode
  nameWithType: Control.ClearEffectiveClientIDMode
- uid: System.Web.UI.Control.ClientID*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientID
  nameWithType: Control.ClientID
- uid: System.Web.UI.Control.ClientIDMode*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientIDMode
  nameWithType: Control.ClientIDMode
- uid: System.Web.UI.Control.ClientIDSeparator*
  parent: System.Web.UI.Control
  isExternal: false
  name: ClientIDSeparator
  nameWithType: Control.ClientIDSeparator
- uid: System.Web.UI.Control.Context*
  parent: System.Web.UI.Control
  isExternal: false
  name: Context
  nameWithType: Control.Context
- uid: System.Web.UI.Control.Controls*
  parent: System.Web.UI.Control
  isExternal: false
  name: Controls
  nameWithType: Control.Controls
- uid: System.Web.UI.Control.CreateChildControls*
  parent: System.Web.UI.Control
  isExternal: false
  name: CreateChildControls
  nameWithType: Control.CreateChildControls
- uid: System.Web.UI.Control.CreateControlCollection*
  parent: System.Web.UI.Control
  isExternal: false
  name: CreateControlCollection
  nameWithType: Control.CreateControlCollection
- uid: System.Web.UI.Control.DataBind*
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBind
  nameWithType: Control.DataBind
- uid: System.Web.UI.Control.DataBindChildren*
  parent: System.Web.UI.Control
  isExternal: false
  name: DataBindChildren
  nameWithType: Control.DataBindChildren
- uid: System.Web.UI.Control.DataItemContainer*
  parent: System.Web.UI.Control
  isExternal: false
  name: DataItemContainer
  nameWithType: Control.DataItemContainer
- uid: System.Web.UI.Control.DataKeysContainer*
  parent: System.Web.UI.Control
  isExternal: false
  name: DataKeysContainer
  nameWithType: Control.DataKeysContainer
- uid: System.Web.UI.Control.DesignMode*
  parent: System.Web.UI.Control
  isExternal: false
  name: DesignMode
  nameWithType: Control.DesignMode
- uid: System.Web.UI.Control.Dispose*
  parent: System.Web.UI.Control
  isExternal: false
  name: Dispose
  nameWithType: Control.Dispose
- uid: System.Web.UI.Control.EnableTheming*
  parent: System.Web.UI.Control
  isExternal: false
  name: EnableTheming
  nameWithType: Control.EnableTheming
- uid: System.Web.UI.Control.EnableViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: EnableViewState
  nameWithType: Control.EnableViewState
- uid: System.Web.UI.Control.EndRenderTracing*
  parent: System.Web.UI.Control
  isExternal: false
  name: EndRenderTracing
  nameWithType: Control.EndRenderTracing
- uid: System.Web.UI.Control.EnsureChildControls*
  parent: System.Web.UI.Control
  isExternal: false
  name: EnsureChildControls
  nameWithType: Control.EnsureChildControls
- uid: System.Web.UI.Control.EnsureID*
  parent: System.Web.UI.Control
  isExternal: false
  name: EnsureID
  nameWithType: Control.EnsureID
- uid: System.Web.UI.Control.Events*
  parent: System.Web.UI.Control
  isExternal: false
  name: Events
  nameWithType: Control.Events
- uid: System.Web.UI.Control.FindControl*
  parent: System.Web.UI.Control
  isExternal: false
  name: FindControl
  nameWithType: Control.FindControl
- uid: System.Web.UI.Control.Focus*
  parent: System.Web.UI.Control
  isExternal: false
  name: Focus
  nameWithType: Control.Focus
- uid: System.Web.UI.Control.GetDesignModeState*
  parent: System.Web.UI.Control
  isExternal: false
  name: GetDesignModeState
  nameWithType: Control.GetDesignModeState
- uid: System.Web.UI.Control.GetRouteUrl*
  parent: System.Web.UI.Control
  isExternal: false
  name: GetRouteUrl
  nameWithType: Control.GetRouteUrl
- uid: System.Web.UI.Control.GetUniqueIDRelativeTo*
  parent: System.Web.UI.Control
  isExternal: false
  name: GetUniqueIDRelativeTo
  nameWithType: Control.GetUniqueIDRelativeTo
- uid: System.Web.UI.Control.HasChildViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: HasChildViewState
  nameWithType: Control.HasChildViewState
- uid: System.Web.UI.Control.HasControls*
  parent: System.Web.UI.Control
  isExternal: false
  name: HasControls
  nameWithType: Control.HasControls
- uid: System.Web.UI.Control.HasEvents*
  parent: System.Web.UI.Control
  isExternal: false
  name: HasEvents
  nameWithType: Control.HasEvents
- uid: System.Web.UI.Control.ID*
  parent: System.Web.UI.Control
  isExternal: false
  name: ID
  nameWithType: Control.ID
- uid: System.Web.UI.Control.IdSeparator*
  parent: System.Web.UI.Control
  isExternal: false
  name: IdSeparator
  nameWithType: Control.IdSeparator
- uid: System.Web.UI.Control.IsChildControlStateCleared*
  parent: System.Web.UI.Control
  isExternal: false
  name: IsChildControlStateCleared
  nameWithType: Control.IsChildControlStateCleared
- uid: System.Web.UI.Control.IsLiteralContent*
  parent: System.Web.UI.Control
  isExternal: false
  name: IsLiteralContent
  nameWithType: Control.IsLiteralContent
- uid: System.Web.UI.Control.IsTrackingViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: IsTrackingViewState
  nameWithType: Control.IsTrackingViewState
- uid: System.Web.UI.Control.IsViewStateEnabled*
  parent: System.Web.UI.Control
  isExternal: false
  name: IsViewStateEnabled
  nameWithType: Control.IsViewStateEnabled
- uid: System.Web.UI.Control.LoadControlState*
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadControlState
  nameWithType: Control.LoadControlState
- uid: System.Web.UI.Control.LoadViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadViewState
  nameWithType: Control.LoadViewState
- uid: System.Web.UI.Control.LoadViewStateByID*
  parent: System.Web.UI.Control
  isExternal: false
  name: LoadViewStateByID
  nameWithType: Control.LoadViewStateByID
- uid: System.Web.UI.Control.MapPathSecure*
  parent: System.Web.UI.Control
  isExternal: false
  name: MapPathSecure
  nameWithType: Control.MapPathSecure
- uid: System.Web.UI.Control.NamingContainer*
  parent: System.Web.UI.Control
  isExternal: false
  name: NamingContainer
  nameWithType: Control.NamingContainer
- uid: System.Web.UI.Control.OnBubbleEvent*
  parent: System.Web.UI.Control
  isExternal: false
  name: OnBubbleEvent
  nameWithType: Control.OnBubbleEvent
- uid: System.Web.UI.Control.OnDataBinding*
  parent: System.Web.UI.Control
  isExternal: false
  name: OnDataBinding
  nameWithType: Control.OnDataBinding
- uid: System.Web.UI.Control.OnInit*
  parent: System.Web.UI.Control
  isExternal: false
  name: OnInit
  nameWithType: Control.OnInit
- uid: System.Web.UI.Control.OnLoad*
  parent: System.Web.UI.Control
  isExternal: false
  name: OnLoad
  nameWithType: Control.OnLoad
- uid: System.Web.UI.Control.OnPreRender*
  parent: System.Web.UI.Control
  isExternal: false
  name: OnPreRender
  nameWithType: Control.OnPreRender
- uid: System.Web.UI.Control.OnUnload*
  parent: System.Web.UI.Control
  isExternal: false
  name: OnUnload
  nameWithType: Control.OnUnload
- uid: System.Web.UI.Control.OpenFile*
  parent: System.Web.UI.Control
  isExternal: false
  name: OpenFile
  nameWithType: Control.OpenFile
- uid: System.Web.UI.Control.Page*
  parent: System.Web.UI.Control
  isExternal: false
  name: Page
  nameWithType: Control.Page
- uid: System.Web.UI.Control.Parent*
  parent: System.Web.UI.Control
  isExternal: false
  name: Parent
  nameWithType: Control.Parent
- uid: System.Web.UI.Control.RaiseBubbleEvent*
  parent: System.Web.UI.Control
  isExternal: false
  name: RaiseBubbleEvent
  nameWithType: Control.RaiseBubbleEvent
- uid: System.Web.UI.Control.RemovedControl*
  parent: System.Web.UI.Control
  isExternal: false
  name: RemovedControl
  nameWithType: Control.RemovedControl
- uid: System.Web.UI.Control.Render*
  parent: System.Web.UI.Control
  isExternal: false
  name: Render
  nameWithType: Control.Render
- uid: System.Web.UI.Control.RenderChildren*
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderChildren
  nameWithType: Control.RenderChildren
- uid: System.Web.UI.Control.RenderControl*
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderControl
  nameWithType: Control.RenderControl
- uid: System.Web.UI.Control.RenderingCompatibility*
  parent: System.Web.UI.Control
  isExternal: false
  name: RenderingCompatibility
  nameWithType: Control.RenderingCompatibility
- uid: System.Web.UI.Control.ResolveAdapter*
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveAdapter
  nameWithType: Control.ResolveAdapter
- uid: System.Web.UI.Control.ResolveClientUrl*
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveClientUrl
  nameWithType: Control.ResolveClientUrl
- uid: System.Web.UI.Control.ResolveUrl*
  parent: System.Web.UI.Control
  isExternal: false
  name: ResolveUrl
  nameWithType: Control.ResolveUrl
- uid: System.Web.UI.Control.SaveControlState*
  parent: System.Web.UI.Control
  isExternal: false
  name: SaveControlState
  nameWithType: Control.SaveControlState
- uid: System.Web.UI.Control.SaveViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: SaveViewState
  nameWithType: Control.SaveViewState
- uid: System.Web.UI.Control.SetDesignModeState*
  parent: System.Web.UI.Control
  isExternal: false
  name: SetDesignModeState
  nameWithType: Control.SetDesignModeState
- uid: System.Web.UI.Control.SetRenderMethodDelegate*
  parent: System.Web.UI.Control
  isExternal: false
  name: SetRenderMethodDelegate
  nameWithType: Control.SetRenderMethodDelegate
- uid: System.Web.UI.Control.SetTraceData*
  parent: System.Web.UI.Control
  isExternal: false
  name: SetTraceData
  nameWithType: Control.SetTraceData
- uid: System.Web.UI.Control.Site*
  parent: System.Web.UI.Control
  isExternal: false
  name: Site
  nameWithType: Control.Site
- uid: System.Web.UI.Control.SkinID*
  parent: System.Web.UI.Control
  isExternal: false
  name: SkinID
  nameWithType: Control.SkinID
- uid: System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlBuilderAccessor.ControlBuilder
  nameWithType: Control.System.Web.UI.IControlBuilderAccessor.ControlBuilder
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.GetDesignModeState
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.GetDesignModeState
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.SetDesignModeState
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.SetDesignModeState
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.SetOwnerControl
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.SetOwnerControl
- uid: System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IControlDesignerAccessor.UserData
  nameWithType: Control.System.Web.UI.IControlDesignerAccessor.UserData
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IDataBindingsAccessor.DataBindings
  nameWithType: Control.System.Web.UI.IDataBindingsAccessor.DataBindings
- uid: System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IDataBindingsAccessor.HasDataBindings
  nameWithType: Control.System.Web.UI.IDataBindingsAccessor.HasDataBindings
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IExpressionsAccessor.Expressions
  nameWithType: Control.System.Web.UI.IExpressionsAccessor.Expressions
- uid: System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IExpressionsAccessor.HasExpressions
  nameWithType: Control.System.Web.UI.IExpressionsAccessor.HasExpressions
- uid: System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject*
  parent: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.IParserAccessor.AddParsedSubObject
  nameWithType: Control.System.Web.UI.IParserAccessor.AddParsedSubObject
- uid: System.Web.UI.Control.TemplateControl*
  parent: System.Web.UI.Control
  isExternal: false
  name: TemplateControl
  nameWithType: Control.TemplateControl
- uid: System.Web.UI.Control.TemplateSourceDirectory*
  parent: System.Web.UI.Control
  isExternal: false
  name: TemplateSourceDirectory
  nameWithType: Control.TemplateSourceDirectory
- uid: System.Web.UI.Control.TrackViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: TrackViewState
  nameWithType: Control.TrackViewState
- uid: System.Web.UI.Control.UniqueID*
  parent: System.Web.UI.Control
  isExternal: false
  name: UniqueID
  nameWithType: Control.UniqueID
- uid: System.Web.UI.Control.ValidateRequestMode*
  parent: System.Web.UI.Control
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Control.ValidateRequestMode
- uid: System.Web.UI.Control.ViewState*
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewState
  nameWithType: Control.ViewState
- uid: System.Web.UI.Control.ViewStateIgnoresCase*
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewStateIgnoresCase
  nameWithType: Control.ViewStateIgnoresCase
- uid: System.Web.UI.Control.ViewStateMode*
  parent: System.Web.UI.Control
  isExternal: false
  name: ViewStateMode
  nameWithType: Control.ViewStateMode
- uid: System.Web.UI.Control.Visible*
  parent: System.Web.UI.Control
  isExternal: false
  name: Visible
  nameWithType: Control.Visible
