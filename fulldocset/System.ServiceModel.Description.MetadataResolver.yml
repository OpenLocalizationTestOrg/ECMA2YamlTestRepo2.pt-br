### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataResolver
  id: MetadataResolver
  children:
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  langs:
  - csharp
  name: MetadataResolver
  nameWithType: MetadataResolver
  fullName: System.ServiceModel.Description.MetadataResolver
  type: Class
  summary: "Recupera e importa metadados como <xref:System.ServiceModel.Description.ServiceEndpoint>objetos.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Use a classe MetadataResolver para importar rapidamente os pontos de extremidade para um serviço de metadados. Essa classe baixa e converte os metadados em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos.</xref:System.ServiceModel.Description.ServiceEndpoint> Para baixar metadados e processar essas informações como um <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>consulte <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>"
  example:
  - "The following code example shows the use of the MetadataResolver class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]  \n  \n The following code example shows the use of the MetadataResolver to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static class MetadataResolver
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicia uma chamada assíncrona que resolve um endereço de metadados para o <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para os contratos especificados, usando o endereço especificado e o estado assíncronas e o delegado.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Configurações padrão que <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>são usados para recuperar os metadados e o padrão <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>é <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Para baixar os metadados, mas não resolver as informações em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos, use o <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>diretamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Uma coleção vazia é retornada se nenhum ponto de extremidade foram importados ou se nenhum ponto de extremidade correspondeu ao contrato. Se uma coleção vazia será retornada, um rastreamento de aviso será gravado."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Os contratos para o qual fazer o download e resolver os metadados."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "O endereço de metadados."
    - id: callback
      type: System.AsyncCallback
      description: "O representante de retorno de chamada assíncrono chamado quando a chamada é concluída."
    - id: asyncState
      type: System.Object
      description: "O estado associado à chamada assíncrona."
    return:
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que faz referência a operação assíncrona resolver.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O endereço, o contrato ou o retorno de chamada é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>está vazia, pelo menos um membro de <code>contracts</code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ou <code>contracts</code> contém mais de um contrato com o mesmo nome e namespace."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicia uma chamada assíncrona que resolve um endereço de metadados para o <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para o contrato especificado usando o endereço especificado e o estado assíncrono e o delegado.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Configurações padrão que <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>são usados para recuperar os metadados e o padrão <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>é <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Para baixar os metadados, mas não resolver as informações em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos, use o <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>diretamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Uma coleção vazia é retornada se nenhum ponto de extremidade foram importados ou se nenhum ponto de extremidade correspondeu ao contrato. Se uma coleção vazia será retornada, um rastreamento de aviso será gravado.       Esse método requer que você especifique um tipo de contrato. Você pode especificar o contrato declarando a interface de serviço no código do cliente ou usando um [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] cliente gerado pelo Svcutil.exe. Se a interface for alterado (adicionando uma nova operação, por exemplo) você deve atualizar a interface no código do cliente ou gerar um novo [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] cliente. Se você não fizer isso, uma exceção será lançada. Por exemplo, você tem um serviço que implementa um contrato de serviço chamado ICalculator que define Add, sub (), Mult() e Div(). Criar um aplicativo cliente e gerar [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] cliente. Em seguida, adicione um método para ICalculator chamado Echo(). Se você, em seguida, escrever um aplicativo que chama <xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>sem gerar um novo [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] cliente tenha a seguinte exceção.</xref:System.ServiceModel.Description.MetadataResolver.Resolve%28System.Type%2CSystem.ServiceModel.EndpointAddress%29>       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "O contrato para o qual fazer o download e resolver os metadados."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "O endereço de metadados."
    - id: callback
      type: System.AsyncCallback
      description: "O representante de retorno de chamada assíncrono chamado quando a chamada é concluída."
    - id: asyncState
      type: System.Object
      description: "O estado associado à chamada assíncrona."
    return:
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que faz referência a operação assíncrona resolver.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O endereço, o contrato ou o retorno de chamada é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicia uma chamada assíncrona que resolve um endereço de metadados para o <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para os contratos especificados, usando o endereço especificado, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, estado assíncronas e representante.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "O padrão <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>é <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       Para baixar os metadados, mas não resolver as informações em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos, use o <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>diretamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Uma coleção vazia é retornada se nenhum ponto de extremidade foram importados ou se nenhum ponto de extremidade correspondeu ao contrato. Se uma coleção vazia será retornada, um rastreamento de aviso será gravado."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Os contratos para o qual fazer o download e resolver os metadados."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "O endereço de metadados."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "O <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> usado para recuperar os metadados."
    - id: callback
      type: System.AsyncCallback
      description: "O representante de retorno de chamada assíncrono chamado quando a chamada é concluída."
    - id: asyncState
      type: System.Object
      description: "O estado associado à chamada assíncrona."
    return:
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que faz referência a operação assíncrona resolver.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O endereço, o contrato, o cliente ou o retorno de chamada é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>está vazia, pelo menos um membro de <code>contracts</code> é nulo, ou <code>contracts</code> contém mais de um contrato com o mesmo nome e namespace."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicia uma chamada assíncrona que resolve um endereço de metadados para o <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para os contratos especificados, usando o endereço especificado, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref> valor, o estado assíncrono e o delegado.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Configurações padrão de <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>são usados para recuperar os metadados.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Para baixar os metadados, mas não resolver as informações em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos, use o <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>diretamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Uma coleção vazia é retornada se nenhum ponto de extremidade foram importados ou se nenhum ponto de extremidade correspondeu ao contrato. Se uma coleção vazia será retornada, um rastreamento de aviso será gravado."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Os contratos para o qual fazer o download e resolver os metadados."
    - id: address
      type: System.Uri
      description: "O endereço de metadados."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "O modo de recuperação."
    - id: callback
      type: System.AsyncCallback
      description: "O representante de retorno de chamada assíncrono chamado quando a chamada é concluída."
    - id: asyncState
      type: System.Object
      description: "O estado associado à chamada assíncrona."
    return:
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que faz referência a operação assíncrona resolver.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O endereço, o contrato ou o retorno de chamada é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>está vazia, pelo menos um membro de <code>contracts</code> é nulo, ou <code>contracts</code> contém mais de um contrato com o mesmo nome e namespace."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicia uma chamada assíncrona que resolve um endereço de metadados para o <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para o contrato especificado, usando o endereço especificado, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, estado assíncronas e representante.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Configurações padrão de <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>são usados para recuperar os metadados.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Para baixar os metadados, mas não resolver as informações em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos, use o <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>diretamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Uma coleção vazia é retornada se nenhum ponto de extremidade foram importados ou se nenhum ponto de extremidade correspondeu ao contrato. Se uma coleção vazia será retornada, um rastreamento de aviso será gravado."
  syntax:
    content: public static IAsyncResult BeginResolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: contract
      type: System.Type
      description: "O contrato para o qual fazer o download e resolver os metadados."
    - id: address
      type: System.Uri
      description: "O endereço de metadados."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "O modo de recuperação."
    - id: callback
      type: System.AsyncCallback
      description: "O representante de retorno de chamada assíncrono chamado quando a chamada é concluída."
    - id: asyncState
      type: System.Object
      description: "O estado associado à chamada assíncrona."
    return:
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que faz referência a operação assíncrona resolver.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O endereço, o contrato ou o retorno de chamada é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  id: BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Começa uma chamada assíncrona que resolve um endereço de metadados para o <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para os contratos especificados, usando o endereço especificado, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>, <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref>, estado assíncronas e representante.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Para baixar os metadados, mas não resolver as informações em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos, use o <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>diretamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Uma coleção vazia é retornada se nenhum ponto de extremidade foram importados ou se nenhum ponto de extremidade correspondeu ao contrato. Se uma coleção vazia será retornada, um rastreamento de aviso será gravado."
  syntax:
    content: public static IAsyncResult BeginResolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client, AsyncCallback callback, object asyncState);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Os contratos para o qual fazer o download e resolver os metadados."
    - id: address
      type: System.Uri
      description: "O endereço de metadados."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "O modo de recuperação."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "O <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> usado para recuperar os metadados."
    - id: callback
      type: System.AsyncCallback
      description: "O representante de retorno de chamada assíncrono chamado quando a chamada é concluída."
    - id: asyncState
      type: System.Object
      description: "O estado associado à chamada assíncrona."
    return:
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que faz referência a operação assíncrona resolver.</xref:System.IAsyncResult>"
  overload: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O endereço, o contrato ou o retorno de chamada é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>está vazia, pelo menos um membro de <code>contracts</code> é nulo, ou <code>contracts</code> contém mais de um contrato com o mesmo nome e namespace."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  id: EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Conclui uma chamada assíncrona para resolver os metadados em uma coleção de pontos de extremidade."
  remarks: "Termina uma chamada assíncrona para uma da <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>métodos.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve%2A>"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection EndResolve (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>objeto que foi recebido de uma chamada para o <xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*>método.</xref:System.ServiceModel.Description.MetadataResolver.BeginResolve*> </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Uma coleção de <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para os pontos de extremidade contidos nos metadados.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.EndResolve*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Resolve um endereço de metadados para o <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para os contratos especificados usando o endereço de metadados especificado.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Configurações padrão que <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>são usados para recuperar os metadados e o padrão <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>é <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Para baixar os metadados, mas não resolver as informações em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos, use o <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>diretamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Uma coleção vazia é retornada se nenhum ponto de extremidade foram importados ou se nenhum ponto de extremidade correspondeu ao contrato. Se uma coleção vazia será retornada, um rastreamento de aviso será gravado."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Os contratos para o qual fazer o download e resolver os metadados."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "O endereço de metadados."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Uma coleção de <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para o contrato especificado.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A coleção de contratos de endereço é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>está vazia, pelo menos um membro de <code>contracts</code> é nulo, ou <code>contracts</code> contém mais de um contrato com o mesmo nome e namespace."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  id: Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Baixa e resolve um endereço de metadados em uma coleção de <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para um contrato especificado em um dado endereço.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Use o método de resolução para especificar o contrato e o endereço de metadados a ser usado ao fazer o download e resolução de metadados.       Configurações padrão que <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>são usados para recuperar os metadados e o padrão <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>é <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Para baixar os metadados, mas não resolver as informações em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos, use o <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>diretamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Uma coleção vazia é retornada se nenhum ponto de extremidade foram importados ou se nenhum ponto de extremidade correspondeu ao contrato. Se uma coleção vazia será retornada, um rastreamento de aviso será gravado.       Esse método requer que você especifique um tipo de contrato. Você pode especificar o contrato declarando a interface de serviço no código do cliente ou usando um [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] cliente gerado pelo Svcutil.exe. Se a interface for alterado (adicionando uma nova operação, por exemplo) você deve atualizar a interface no código do cliente ou gerar um novo [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] cliente. Se você não fizer isso, uma exceção será lançada. Por exemplo, você tem um serviço que implementa um contrato de serviço chamado ICalculator que define Add, sub (), Mult() e Div(). Criar um aplicativo cliente e gerar [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] cliente. Em seguida, adicione um método para ICalculator chamado Echo(). Se, em seguida, escrever um aplicativo que chama resolver sem gerar um novo [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] cliente tenha a seguinte exceção.       `Unhandled Exception: System.ServiceModel.Description.WsdlImporter+WsdlImportException: Cannot locate operation Echo in Contract ICalculator`."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> class to return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects that are then used to connect to a service instance.  \n  \n [!code-cs[MetadataResolver#1](~/add/codesnippet/csharp/metadataresolver.client/client.cs#1)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, System.ServiceModel.EndpointAddress address);
    parameters:
    - id: contract
      type: System.Type
      description: "Os contratos para o qual fazer o download e resolver os metadados."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "O endereço de metadados."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Uma coleção de <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para o contrato especificado.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O endereço ou o contrato é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Resolve um endereço de metadados para o <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para os contratos especificados usando o endereço de metadados especificado e <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref>.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "O padrão <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>é <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>       Para baixar os metadados, mas não resolver as informações em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos, use o <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>diretamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Uma coleção vazia é retornada se nenhum ponto de extremidade foram importados ou se nenhum ponto de extremidade correspondeu ao contrato. Se uma coleção vazia será retornada, um rastreamento de aviso será gravado."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, System.ServiceModel.EndpointAddress address, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Os contratos para o qual fazer o download e resolver os metadados."
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "O endereço de metadados."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "O <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> usado para recuperar os metadados."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Uma coleção de <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para o contrato especificado.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Coleção de contratos de endereço, ou o cliente é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>está vazia, pelo menos um membro de <code>contracts</code> é nulo, ou <code>contracts</code> contém mais de um contrato com o mesmo nome e namespace."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Resolve um endereço de metadados para o <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para os contratos especificados usando o modo de endereço e transferência especificado.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Configurações padrão de <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>são usados para recuperar os metadados.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Para baixar os metadados, mas não resolver as informações em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos, use o <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>diretamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Uma coleção vazia é retornada se nenhum ponto de extremidade foram importados ou se nenhum ponto de extremidade correspondeu ao contrato. Se uma coleção vazia será retornada, um rastreamento de aviso será gravado."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Os contratos para o qual fazer o download e resolver os metadados."
    - id: address
      type: System.Uri
      description: "O endereço de metadados."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "O modo de recuperação."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Uma coleção de <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para o contrato especificado.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A coleção de contratos de endereço é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>está vazia, pelo menos um membro de <code>contracts</code> é nulo, ou <code>contracts</code> contém mais de um contrato com o mesmo nome e namespace."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Resolve um endereço de metadados para o <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para o contrato especificado usando o modo de endereço e transferência especificado.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Use o método de resolução para especificar um contrato e o endereço e o mecanismo de download a ser usado.       Configurações padrão de <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>são usados para recuperar os metadados.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>       Para baixar os metadados, mas não resolver as informações em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos, use o <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>diretamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Uma coleção vazia é retornada se nenhum ponto de extremidade foram importados ou se nenhum ponto de extremidade correspondeu ao contrato. Se uma coleção vazia será retornada, um rastreamento de aviso será gravado."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and return metadata as a collection of <xref:System.ServiceModel.Description.ServiceEndpoint> objects using an HTTP GET request rather than WS-Transfer.  \n  \n [!code-cs[MetadataResolver#2](~/add/codesnippet/csharp/metadataresolver.client/client.cs#2)]"
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (Type contract, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: contract
      type: System.Type
      description: "O contrato para o qual fazer o download e resolver os metadados."
    - id: address
      type: System.Uri
      description: "O endereço de metadados."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "O modo de recuperação."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Uma coleção de <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para o contrato especificado.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O endereço ou o contrato é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  id: Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  langs:
  - csharp
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Resolve um endereço de metadados para o <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para os contratos especificados usando o endereço especificado, o modo de transferência e o cliente de transferência.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  remarks: "Para baixar os metadados, mas não resolver as informações em <xref:System.ServiceModel.Description.ServiceEndpoint>objetos, use o <xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName>diretamente.</xref:System.ServiceModel.Description.MetadataExchangeClient?displayProperty=fullName> </xref:System.ServiceModel.Description.ServiceEndpoint>      > [!NOTE] > Uma coleção vazia é retornada se nenhum ponto de extremidade foram importados ou se nenhum ponto de extremidade correspondeu ao contrato. Se uma coleção vazia será retornada, um rastreamento de aviso será gravado."
  syntax:
    content: public static System.ServiceModel.Description.ServiceEndpointCollection Resolve (System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription> contracts, Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, System.ServiceModel.Description.MetadataExchangeClient client);
    parameters:
    - id: contracts
      type: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
      description: "Os contratos para o qual fazer o download e resolver os metadados."
    - id: address
      type: System.Uri
      description: "O endereço de metadados."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "O modo de recuperação."
    - id: client
      type: System.ServiceModel.Description.MetadataExchangeClient
      description: "O <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> usado para recuperar os metadados."
    return:
      type: System.ServiceModel.Description.ServiceEndpointCollection
      description: "Uma coleção de <xref:System.ServiceModel.Description.ServiceEndpoint>objetos para o contrato especificado.</xref:System.ServiceModel.Description.ServiceEndpoint>"
  overload: System.ServiceModel.Description.MetadataResolver.Resolve*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Coleção de contratos de endereço, ou o cliente é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>contracts</code>está vazia, pelo menos um membro de <code>contracts</code> é nulo, ou <code>contracts</code> contém mais de um contrato com o mesmo nome e namespace."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ContractDescription>
  nameWithType: IEnumerable<ContractDescription>
  fullName: System.Collections.Generic.IEnumerable<System.ServiceModel.Description.ContractDescription>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.ServiceModel.Description.ContractDescription>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ContractDescription
    name: ContractDescription
    nameWithType: ContractDescription
    fullName: ContractDescription
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,EndpointAddress,AsyncCallback,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataExchangeClient
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClient
  nameWithType: MetadataExchangeClient
  fullName: System.ServiceModel.Description.MetadataExchangeClient
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Description.MetadataExchangeClientMode
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClientMode
  nameWithType: MetadataExchangeClientMode
  fullName: System.ServiceModel.Description.MetadataExchangeClientMode
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(Type,Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  nameWithType: MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataResolver.BeginResolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve(IAsyncResult)
  nameWithType: MetadataResolver.EndResolve(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataResolver.EndResolve(IAsyncResult)
- uid: System.ServiceModel.Description.ServiceEndpointCollection
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceEndpointCollection
  nameWithType: ServiceEndpointCollection
  fullName: System.ServiceModel.Description.ServiceEndpointCollection
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,EndpointAddress)
  nameWithType: MetadataResolver.Resolve(Type,EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,EndpointAddress)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.ServiceModel.EndpointAddress,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,EndpointAddress,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Type,System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(Type,Uri,MetadataExchangeClientMode)
  nameWithType: MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(Type,Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataResolver.Resolve(System.Collections.Generic.IEnumerable{System.ServiceModel.Description.ContractDescription},System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.ServiceModel.Description.MetadataExchangeClient)
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  nameWithType: MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
  fullName: System.ServiceModel.Description.MetadataResolver.Resolve(IEnumerable<ContractDescription>,Uri,MetadataExchangeClientMode,MetadataExchangeClient)
- uid: System.ServiceModel.Description.MetadataResolver.BeginResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: BeginResolve
  nameWithType: MetadataResolver.BeginResolve
- uid: System.ServiceModel.Description.MetadataResolver.EndResolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: EndResolve
  nameWithType: MetadataResolver.EndResolve
- uid: System.ServiceModel.Description.MetadataResolver.Resolve*
  parent: System.ServiceModel.Description.MetadataResolver
  isExternal: false
  name: Resolve
  nameWithType: MetadataResolver.Resolve
