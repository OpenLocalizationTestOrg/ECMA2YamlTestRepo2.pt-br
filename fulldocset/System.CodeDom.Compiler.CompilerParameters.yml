### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.CompilerParameters
  id: CompilerParameters
  children:
  - System.CodeDom.Compiler.CompilerParameters.#ctor
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  - System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  - System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  - System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  - System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  - System.CodeDom.Compiler.CompilerParameters.Evidence
  - System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  - System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  - System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  - System.CodeDom.Compiler.CompilerParameters.LinkedResources
  - System.CodeDom.Compiler.CompilerParameters.MainClass
  - System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  - System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  - System.CodeDom.Compiler.CompilerParameters.TempFiles
  - System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  - System.CodeDom.Compiler.CompilerParameters.UserToken
  - System.CodeDom.Compiler.CompilerParameters.WarningLevel
  - System.CodeDom.Compiler.CompilerParameters.Win32Resource
  langs:
  - csharp
  name: CompilerParameters
  nameWithType: CompilerParameters
  fullName: System.CodeDom.Compiler.CompilerParameters
  type: Class
  summary: "Representa os parâmetros usados para chamar um compilador."
  remarks: "Um objeto CompilerParameters representa as configurações e opções de uma <xref:System.CodeDom.Compiler.ICodeCompiler>interface.</xref:System.CodeDom.Compiler.ICodeCompiler>       Se você estiver compilando um programa executável, você deve definir o <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>propriedade `true`.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> Quando o <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>é definido como `false`, o compilador gerará uma biblioteca de classes.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> Por padrão, um novo CompilerParameters é inicializada com seu <xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A>propriedade definida como `false`.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateExecutable%2A> Se você estiver compilando um executável de um gráfico CodeDOM, um <xref:System.CodeDom.CodeEntryPointMethod>devem ser definidas no gráfico.</xref:System.CodeDom.CodeEntryPointMethod> Se houver vários pontos de entrada de código, você pode indicar que a classe que define o ponto de entrada para usar definindo o nome da classe para o <xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.MainClass%2A>       Você pode especificar um nome de arquivo para o assembly de saída no <xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.OutputAssembly%2A> Caso contrário, um nome de arquivo de saída padrão será usado. Para incluir informações de depuração em um assembly gerado, defina o <xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A>propriedade `true`.</xref:System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation%2A> Se seu projeto faz referência a todos os assemblies, você deve especificar os nomes de assembly como itens em um <xref:System.Collections.Specialized.StringCollection>definido como o <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A>propriedade o CompilerParameters usados ao invocar a compilação.</xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A> </xref:System.Collections.Specialized.StringCollection>       Você pode compilar um assembly que está escrito na memória e não no disco, definindo o <xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A>propriedade `true`.</xref:System.CodeDom.Compiler.CompilerParameters.GenerateInMemory%2A> Quando um assembly é gerado na memória, seu código pode obter uma referência ao assembly gerado da <xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A>propriedade de <xref:System.CodeDom.Compiler.CompilerResults>.</xref:System.CodeDom.Compiler.CompilerResults> </xref:System.CodeDom.Compiler.CompilerResults.CompiledAssembly%2A> Se um assembly é gravado em disco, você pode obter o caminho para o assembly gerado da <xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A>propriedade de <xref:System.CodeDom.Compiler.CompilerResults>.</xref:System.CodeDom.Compiler.CompilerResults> </xref:System.CodeDom.Compiler.CompilerResults.PathToAssembly%2A>       Para especificar um nível de aviso interromper a compilação, defina o <xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A>propriedade para um inteiro que representa o nível de aviso interromper a compilação.</xref:System.CodeDom.Compiler.CompilerParameters.WarningLevel%2A> Você também pode configurar o compilador para interromper a compilação se forem encontrados avisos definindo o <xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A>propriedade `true`.</xref:System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors%2A>       Para especificar uma cadeia de caracteres de argumentos de linha de comando personalizado a ser usado ao invocar o processo de compilação, defina a cadeia de caracteres <xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.CompilerOptions%2A> Se um token de segurança do Win32 é necessária para chamar o processo de compilador, especifique o token no <xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.UserToken%2A> Para incluir arquivos de recursos do .NET Framework no assembly compilado, adicione os nomes dos arquivos de recurso para o <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A> Para fazer referência a recursos do .NET Framework em outro assembly, adicione os nomes dos arquivos de recurso para o <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> Para incluir um arquivo de recurso Win32 no assembly compilado, especifique o nome do arquivo de recurso Win32 no <xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.Win32Resource%2A>      > [!NOTE] > Essa classe contém uma demanda de link e uma demanda de herança no nível de classe que se aplica a todos os membros. Um <xref:System.Security.SecurityException>é gerada quando o chamador imediato ou classe derivada não tem permissão de confiança total.</xref:System.Security.SecurityException> Para obter detalhes sobre as exigências de segurança, consulte [demandas de Link](~/add/includes/ajax-current-ext-md.md) e [demandas de herança](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following example builds a CodeDOM source graph for a simple Hello World program.  The source is then saved to a file, compiled into an executable, and run. The `CompileCode` method illustrates how to use the CompilerParameters class to specify various compiler settings and options.  \n  \n [!code-cpp[CompilerParametersExample#1](~/add/codesnippet/cpp/t-system.codedom.compile_3_1.cpp)]\n [!code-cs[CompilerParametersExample#1](~/add/codesnippet/csharp/t-system.codedom.compile_3_1.cs)]\n [!code-vb[CompilerParametersExample#1](~/add/codesnippet/visualbasic/t-system.codedom.compile_3_1.vb)]"
  syntax:
    content: public class CompilerParameters
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor
  id: '#ctor'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters()
  nameWithType: CompilerParameters.CompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/m-system.codedom.compile_2_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/m-system.codedom.compile_2_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/m-system.codedom.compile_2_1.vb)]"
  syntax:
    content: public CompilerParameters ();
    parameters: []
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  id: '#ctor(System.String[])'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[])
  nameWithType: CompilerParameters.CompilerParameters(String[])
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> classe usando os nomes de assembly especificado."
  syntax:
    content: public CompilerParameters (string[] assemblyNames);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "Os nomes dos assemblies de referência."
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  id: '#ctor(System.String[],System.String)'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[],String)
  nameWithType: CompilerParameters.CompilerParameters(String[],String)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> classe usando os nomes de assembly especificado e o nome do arquivo de saída."
  syntax:
    content: public CompilerParameters (string[] assemblyNames, string outputName);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "Os nomes dos assemblies de referência."
    - id: outputName
      type: System.String
      description: "O nome do arquivo de saída."
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  id: '#ctor(System.String[],System.String,System.Boolean)'
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerParameters(String[],String,Boolean)
  nameWithType: CompilerParameters.CompilerParameters(String[],String,Boolean)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.Compiler.CompilerParameters&quot;> </xref> classe usando os nomes de assembly especificado, o nome de saída e um valor que indica se é incluir informações de depuração."
  syntax:
    content: public CompilerParameters (string[] assemblyNames, string outputName, bool includeDebugInformation);
    parameters:
    - id: assemblyNames
      type: System.String[]
      description: "Os nomes dos assemblies de referência."
    - id: outputName
      type: System.String
      description: "O nome do arquivo de saída."
    - id: includeDebugInformation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir informações de depuração. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para excluir informações de depuração."
  overload: System.CodeDom.Compiler.CompilerParameters.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  id: CompilerOptions
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define os argumentos de linha de comando opcionais a ser usado ao invocar o compilador."
  remarks: "Um <xref:System.CodeDom.Compiler.ICodeCompiler>normalmente inclui essa cadeia de caracteres na linha de comando ao invocar um compilador de linha de comando.</xref:System.CodeDom.Compiler.ICodeCompiler> Por padrão, esta propriedade contém uma cadeia de caracteres vazia."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_14_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_14_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_14_1.vb)]"
  syntax:
    content: public string CompilerOptions { get; set; }
    return:
      type: System.String
      description: "Quaisquer argumentos de linha de comando adicionais para o compilador."
  overload: System.CodeDom.Compiler.CompilerParameters.CompilerOptions*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  id: CoreAssemblyFileName
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
  fullName: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define o nome do principal ou assembly padrão que contém os tipos básicos como <xref:System.Object>, <xref:System.String>, ou <xref:System.Int32>.</xref:System.Int32> </xref:System.String> </xref:System.Object>"
  remarks: "Se o valor dessa propriedade é uma cadeia de caracteres vazia ou `null`, o compilador usa o assembly de núcleo do padrão. Dependendo da versão do compilador, o assembly de núcleo padrão pode ser mscorlib ou System.Runtime.dll em um diretório do Framework ou um diretório de assembly de referência. Se o valor dessa propriedade não estiver vazio, o modelo de objeto de documento de código (CodeDOM) explicitamente referencia o assembly especificado e emite opções do compilador que fazer com que o compilador não referencie os assemblies implicitamente durante a compilação. Para compiladores que fazem referência a principal ou o assembly padrão somente implicitamente por padrão, essa propriedade pode ser usada por conta própria. Compiladores que implicitamente referenciam além os assemblies para o principal ou o assembly padrão, o uso dessa opção pode exigir especificando entradas adicionais no <xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName>propriedade.</xref:System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies%2A?displayProperty=fullName>      > [!NOTE] > Um <xref:System.CodeDom.Compiler.ICodeCompiler>ou <xref:System.CodeDom.Compiler.CodeDomProvider>implementação pode optar por ignorar essa propriedade.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.CodeDom.Compiler.ICodeCompiler>"
  syntax:
    content: public string CoreAssemblyFileName { get; set; }
    return:
      type: System.String
      description: "O nome do assembly principal que contém tipos básicos."
  overload: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  id: EmbeddedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém os arquivos de recursos do .NET Framework para incluir ao compilar a saída do assembly."
  remarks: "Recursos incorporados são criados para o arquivo de saída do assembly gerado. Incluindo arquivos através desta propriedade é semelhante do `/resource` argumento de linha de comando com suporte por muitos dos compiladores do .NET Framework.       Suportam a compiladores nem todos os arquivos de recursos do .NET Framework, assim, você deve testar esse suporte chamando o <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>método com o sinalizador <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>       Adicionar um ou mais caminhos de arquivo de recursos do .NET Framework para retornado <xref:System.Collections.Specialized.StringCollection>para inserir os recursos de arquivo no assembly compilado.</xref:System.Collections.Specialized.StringCollection> Adicionando uma duplicata ou resultados de caminho de arquivo inválido em erros de compilação. Certifique-se de que cada cadeia de caracteres Especifica um caminho exclusivo para um arquivo de recurso válido do .NET Framework.       Use EmbeddedResources para incluir recursos do .NET Framework de cultura neutra ou padrão para um assembly. Use o <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>propriedade para fazer referência a recursos do .NET Framework em assemblies satélites.</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_7_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_7_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_7_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection EmbeddedResources { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "Uma coleção que contém os caminhos de arquivo de recursos do .NET Framework para incluir no assembly gerado."
  overload: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence
  id: Evidence
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: Evidence
  nameWithType: CompilerParameters.Evidence
  fullName: System.CodeDom.Compiler.CompilerParameters.Evidence
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Especifica um objeto de evidência que representa as permissões de política de segurança para conceder o conjunto compilado."
  syntax:
    content: public System.Security.Policy.Evidence Evidence { get; set; }
    return:
      type: System.Security.Policy.Evidence
      description: "Um objeto que representa as permissões de política de segurança para conceder o conjunto compilado."
  overload: System.CodeDom.Compiler.CompilerParameters.Evidence*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  id: GenerateExecutable
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define um valor que indica se é para gerar um arquivo executável."
  remarks: "Se o valor dessa propriedade é `false`, será gerada uma DLL. Por padrão, o valor dessa propriedade é `false`."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_8_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_8_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_8_1.vb)]"
  syntax:
    content: public bool GenerateExecutable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um executável deve ser gerado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  id: GenerateInMemory
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define um valor que indica se é para gerar a saída na memória."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_1_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_1_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_1_1.vb)]"
  syntax:
    content: public bool GenerateInMemory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o compilador deve gerar a saída na memória; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  id: IncludeDebugInformation
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
  fullName: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define um valor que indica se é incluir informações de depuração no executável compilado."
  syntax:
    content: public bool IncludeDebugInformation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as informações de depuração devem ser geradas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  id: LinkedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém os arquivos de recursos do .NET Framework que são referenciados na origem atual."
  remarks: "Arquivos de recurso vinculado permitem que o assembly fazer referência a recursos do .NET Framework sem inserir os recursos reais no assembly. Referenciar arquivos através desta propriedade é semelhante do `/linkresource` argumento de linha de comando com suporte por muitos dos compiladores do .NET Framework.       Suportam a compiladores nem todos os arquivos de recursos do .NET Framework, assim, você deve testar esse suporte chamando o <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>método com o sinalizador <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>       Adicionar um ou mais caminhos de arquivo de recursos do .NET Framework para retornado <xref:System.Collections.Specialized.StringCollection>para criar links para os recursos no assembly compilado.</xref:System.Collections.Specialized.StringCollection> Adicionando uma duplicata ou resultados de caminho de arquivo inválido em erros de compilação. Certifique-se de que cada cadeia de caracteres Especifica um caminho exclusivo para um arquivo de recurso válido do .NET Framework.       Use LinkedResources para fazer referência a recursos do .NET Framework em assemblies de satélite, localizados para uma cultura específica; Use o <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>propriedade para inserir os recursos no assembly compilado.</xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_2_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_2_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_2_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection LinkedResources { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "Uma coleção que contém os caminhos de arquivo de recursos do .NET Framework que são referenciados pela origem."
  overload: System.CodeDom.Compiler.CompilerParameters.LinkedResources*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass
  id: MainClass
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: MainClass
  nameWithType: CompilerParameters.MainClass
  fullName: System.CodeDom.Compiler.CompilerParameters.MainClass
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define o nome da classe principal."
  remarks: "A classe principal contém o ponto de entrada para o programa."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_13_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_13_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_13_1.vb)]"
  syntax:
    content: public string MainClass { get; set; }
    return:
      type: System.String
      description: "O nome da classe principal."
  overload: System.CodeDom.Compiler.CompilerParameters.MainClass*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  id: OutputAssembly
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
  fullName: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define o nome do assembly de saída."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_6_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_6_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_6_1.vb)]"
  syntax:
    content: public string OutputAssembly { get; set; }
    return:
      type: System.String
      description: "O nome do assembly de saída."
  overload: System.CodeDom.Compiler.CompilerParameters.OutputAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  id: ReferencedAssemblies
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
  fullName: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém os assemblies referenciados pelo projeto atual."
  remarks: "A coleção de cadeia de caracteres deve consistir em ou incluir os assemblies referenciados pelo projeto atual. Adicionar nomes de arquivo de assembly para retornado <xref:System.Collections.Specialized.StringCollection>para importar o manifesto do assembly e fazer referência as informações de tipo de assembly no projeto atual.</xref:System.Collections.Specialized.StringCollection>"
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_9_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_9_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_9_1.vb)]"
  syntax:
    content: public System.Collections.Specialized.StringCollection ReferencedAssemblies { get; }
    return:
      type: System.Collections.Specialized.StringCollection
      description: "Uma coleção que contém os nomes de assembly que são referenciados pela origem para compilar."
  overload: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles
  id: TempFiles
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
  fullName: System.CodeDom.Compiler.CompilerParameters.TempFiles
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define a coleção que contém os arquivos temporários."
  remarks: "Os arquivos temporários na coleção são retidos ou excluídos após a conclusão da atividade de compilador com base no valor da <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>propriedade na coleção.</xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A> O <xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>propriedade é definida se a coleção é criada usando o <xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29>construtor com a `keepFiles` parâmetro definido como `true`.</xref:System.CodeDom.Compiler.TempFileCollection.%23ctor%28System.String%2CSystem.Boolean%29> </xref:System.CodeDom.Compiler.TempFileCollection.KeepFiles%2A>      > [!NOTE] > Essa classe contém uma demanda de link e uma demanda de herança no nível de classe que se aplica a todos os membros. Um <xref:System.Security.SecurityException>é gerada quando o chamador imediato ou classe derivada não tem permissão de confiança total.</xref:System.Security.SecurityException> Para obter detalhes sobre as exigências de segurança, consulte [demandas de Link](~/add/includes/ajax-current-ext-md.md) e [demandas de herança](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_4_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_4_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_4_1.vb)]"
  syntax:
    content: public System.CodeDom.Compiler.TempFileCollection TempFiles { get; set; }
    return:
      type: System.CodeDom.Compiler.TempFileCollection
      description: "Uma coleção que contém os arquivos temporários."
  overload: System.CodeDom.Compiler.CompilerParameters.TempFiles*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  id: TreatWarningsAsErrors
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
  fullName: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define um valor que indica se deve tratar avisos como erros."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_5_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_5_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_5_1.vb)]"
  syntax:
    content: public bool TreatWarningsAsErrors { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os avisos devem ser tratados como erros. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken
  id: UserToken
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: UserToken
  nameWithType: CompilerParameters.UserToken
  fullName: System.CodeDom.Compiler.CompilerParameters.UserToken
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define o token de usuário a ser usado ao criar o processo de compilador."
  syntax:
    content: public IntPtr UserToken { get; set; }
    return:
      type: System.IntPtr
      description: "O token de usuário a ser usado."
  overload: System.CodeDom.Compiler.CompilerParameters.UserToken*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  id: WarningLevel
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
  fullName: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define o nível de aviso em que o compilador anula a compilação."
  remarks: ''
  example:
  - "The following example illustrates using <xref:System.CodeDom.Compiler.CompilerParameters> to specify various compiler settings and options. This code example is part of a larger example provided for the <xref:System.CodeDom.Compiler.CompilerParameters> class.  \n  \n [!code-cpp[CompilerParametersExample#2](~/add/codesnippet/cpp/p-system.codedom.compile_11_1.cpp)]\n [!code-cs[CompilerParametersExample#2](~/add/codesnippet/csharp/p-system.codedom.compile_11_1.cs)]\n [!code-vb[CompilerParametersExample#2](~/add/codesnippet/visualbasic/p-system.codedom.compile_11_1.vb)]"
  syntax:
    content: public int WarningLevel { get; set; }
    return:
      type: System.Int32
      description: "O nível de aviso em que o compilador anula a compilação."
  overload: System.CodeDom.Compiler.CompilerParameters.WarningLevel*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  id: Win32Resource
  parent: System.CodeDom.Compiler.CompilerParameters
  langs:
  - csharp
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
  fullName: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém ou define o nome do arquivo de um arquivo de recurso Win32 a ser vinculado ao assembly compilado."
  remarks: "Vincular arquivos através desta propriedade é semelhante do `/winres` e `/winresource` argumentos de linha de comando suportados por muitos dos compiladores do .NET Framework.       Use Win32Resource para compilar um arquivo de recurso Win32 no assembly. Use <xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>ou <xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A>para compilar com arquivos de recursos do .NET Framework.</xref:System.CodeDom.Compiler.CompilerParameters.LinkedResources%2A> </xref:System.CodeDom.Compiler.CompilerParameters.EmbeddedResources%2A>       Suportam a compiladores nem todos os arquivos de recursos do Win32, assim, você deve testar um gerador de código para esse suporte antes de vincular um arquivo de recurso chamando o <xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>método com o sinalizador <xref:System.CodeDom.Compiler.GeneratorSupport>.</xref:System.CodeDom.Compiler.GeneratorSupport> </xref:System.CodeDom.Compiler.ICodeGenerator.Supports%2A>"
  syntax:
    content: public string Win32Resource { get; set; }
    return:
      type: System.String
      description: "Um arquivo de recurso do Win32 que será vinculado no assembly compilado."
  overload: System.CodeDom.Compiler.CompilerParameters.Win32Resource*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters()
  nameWithType: CompilerParameters.CompilerParameters()
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters()
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[])
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[])
  nameWithType: CompilerParameters.CompilerParameters(String[])
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String)
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[],String)
  nameWithType: CompilerParameters.CompilerParameters(String[],String)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor(System.String[],System.String,System.Boolean)
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters(String[],String,Boolean)
  nameWithType: CompilerParameters.CompilerParameters(String[],String,Boolean)
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerParameters(String[],String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
  fullName: System.CodeDom.Compiler.CompilerParameters.CompilerOptions
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
  fullName: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources
- uid: System.Collections.Specialized.StringCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: StringCollection
  nameWithType: StringCollection
  fullName: System.Collections.Specialized.StringCollection
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Evidence
  nameWithType: CompilerParameters.Evidence
  fullName: System.CodeDom.Compiler.CompilerParameters.Evidence
- uid: System.Security.Policy.Evidence
  parent: System.Security.Policy
  isExternal: false
  name: Evidence
  nameWithType: Evidence
  fullName: System.Security.Policy.Evidence
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
  fullName: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
  fullName: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
  fullName: System.CodeDom.Compiler.CompilerParameters.LinkedResources
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: MainClass
  nameWithType: CompilerParameters.MainClass
  fullName: System.CodeDom.Compiler.CompilerParameters.MainClass
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
  fullName: System.CodeDom.Compiler.CompilerParameters.OutputAssembly
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
  fullName: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
  fullName: System.CodeDom.Compiler.CompilerParameters.TempFiles
- uid: System.CodeDom.Compiler.TempFileCollection
  parent: System.CodeDom.Compiler
  isExternal: false
  name: TempFileCollection
  nameWithType: TempFileCollection
  fullName: System.CodeDom.Compiler.TempFileCollection
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
  fullName: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: UserToken
  nameWithType: CompilerParameters.UserToken
  fullName: System.CodeDom.Compiler.CompilerParameters.UserToken
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
  fullName: System.CodeDom.Compiler.CompilerParameters.WarningLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
  fullName: System.CodeDom.Compiler.CompilerParameters.Win32Resource
- uid: System.CodeDom.Compiler.CompilerParameters.#ctor*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerParameters
  nameWithType: CompilerParameters.CompilerParameters
- uid: System.CodeDom.Compiler.CompilerParameters.CompilerOptions*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CompilerOptions
  nameWithType: CompilerParameters.CompilerOptions
- uid: System.CodeDom.Compiler.CompilerParameters.CoreAssemblyFileName*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: CoreAssemblyFileName
  nameWithType: CompilerParameters.CoreAssemblyFileName
- uid: System.CodeDom.Compiler.CompilerParameters.EmbeddedResources*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: EmbeddedResources
  nameWithType: CompilerParameters.EmbeddedResources
- uid: System.CodeDom.Compiler.CompilerParameters.Evidence*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Evidence
  nameWithType: CompilerParameters.Evidence
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateExecutable*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateExecutable
  nameWithType: CompilerParameters.GenerateExecutable
- uid: System.CodeDom.Compiler.CompilerParameters.GenerateInMemory*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: GenerateInMemory
  nameWithType: CompilerParameters.GenerateInMemory
- uid: System.CodeDom.Compiler.CompilerParameters.IncludeDebugInformation*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: IncludeDebugInformation
  nameWithType: CompilerParameters.IncludeDebugInformation
- uid: System.CodeDom.Compiler.CompilerParameters.LinkedResources*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: LinkedResources
  nameWithType: CompilerParameters.LinkedResources
- uid: System.CodeDom.Compiler.CompilerParameters.MainClass*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: MainClass
  nameWithType: CompilerParameters.MainClass
- uid: System.CodeDom.Compiler.CompilerParameters.OutputAssembly*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: OutputAssembly
  nameWithType: CompilerParameters.OutputAssembly
- uid: System.CodeDom.Compiler.CompilerParameters.ReferencedAssemblies*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: ReferencedAssemblies
  nameWithType: CompilerParameters.ReferencedAssemblies
- uid: System.CodeDom.Compiler.CompilerParameters.TempFiles*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TempFiles
  nameWithType: CompilerParameters.TempFiles
- uid: System.CodeDom.Compiler.CompilerParameters.TreatWarningsAsErrors*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: TreatWarningsAsErrors
  nameWithType: CompilerParameters.TreatWarningsAsErrors
- uid: System.CodeDom.Compiler.CompilerParameters.UserToken*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: UserToken
  nameWithType: CompilerParameters.UserToken
- uid: System.CodeDom.Compiler.CompilerParameters.WarningLevel*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: WarningLevel
  nameWithType: CompilerParameters.WarningLevel
- uid: System.CodeDom.Compiler.CompilerParameters.Win32Resource*
  parent: System.CodeDom.Compiler.CompilerParameters
  isExternal: false
  name: Win32Resource
  nameWithType: CompilerParameters.Win32Resource
