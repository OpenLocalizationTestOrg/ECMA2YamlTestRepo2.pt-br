### YamlMime:ManagedReference
items:
- uid: System.Globalization.GregorianCalendar
  id: GregorianCalendar
  children:
  - System.Globalization.GregorianCalendar.#ctor
  - System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)
  - System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.GregorianCalendar.ADEra
  - System.Globalization.GregorianCalendar.AlgorithmType
  - System.Globalization.GregorianCalendar.CalendarType
  - System.Globalization.GregorianCalendar.Eras
  - System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.GetEra(System.DateTime)
  - System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.GetMonth(System.DateTime)
  - System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.GetYear(System.DateTime)
  - System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.MaxSupportedDateTime
  - System.Globalization.GregorianCalendar.MinSupportedDateTime
  - System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.GregorianCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: GregorianCalendar
  nameWithType: GregorianCalendar
  fullName: System.Globalization.GregorianCalendar
  type: Class
  summary: "Representa o calendário gregoriano."
  remarks: "O calendário gregoriano reconhece dois eras: A.C. ou A.C. e D.C. ou C.E. Essa implementação da classe GregorianCalendar reconhece somente o era atual (D.C. ou C.E.).      > [!NOTE] > Para obter informações sobre como usar a classe GregorianCalendar e as outras classes de calendário no .NET Framework, consulte [trabalhando com calendários](~/add/includes/ajax-current-ext-md.md).       Um ano bissexto no calendário gregoriano é definido como um ano divisível por 4, a menos que ele seja divisível por 100. No entanto, os anos são divisíveis por 400 são bissextos. Por exemplo, ano 1900 não era um ano bissexto, mas foi o ano 2000. Um ano comum tem 365 dias e um ano bissexto tem 366 dias.       O calendário gregoriano tem 12 meses com 28 a 31 dias a cada: (31 dias) de janeiro, fevereiro (28 ou 29 dias), março (31 dias), abril (30 dias), maio (31 dias), junho (30 dias), julho (31 dias), agosto (31 dias), setembro (30 dias), outubro (31 dias), (30 dias) de novembro e dezembro (31 dias). Fevereiro tem 29 dias durante os anos bissextos e 28 durante anos comuns.      > [!IMPORTANT] > Por padrão, todos os <xref:System.DateTime>e <xref:System.DateTimeOffset>valores expressar datas e horas do calendário gregoriano.</xref:System.DateTimeOffset> </xref:System.DateTime>       O calendário gregoriano foi desenvolvido como uma substituição para o calendário juliano (que é representado pela <xref:System.Globalization.JulianCalendar>classe) e foi apresentado pela primeira vez em um número pequeno de culturas em 15 de outubro de 1582.</xref:System.Globalization.JulianCalendar> Ao trabalhar com datas de históricas que precedem a adoção da cultura do calendário gregoriano, você deve usar o calendário original se ele está disponível no .NET Framework. Por exemplo, Dinamarca alterado do calendário juliano para o calendário gregoriano em 19 de fevereiro (no calendário juliano) ou 1 de março (no calendário gregoriano) de 1700. Nesse caso, para datas anteriores a adoção do calendário gregoriano, você deve usar o calendário juliano. No entanto, observe que nenhuma cultura dão suporte intrínseco para a <xref:System.Globalization.JulianCalendar>classe.</xref:System.Globalization.JulianCalendar> Você deve usar o <xref:System.Globalization.JulianCalendar>classe como um calendário autônomo.</xref:System.Globalization.JulianCalendar> Para obter mais informações, consulte.       O exemplo a seguir ilustra a 18 de fevereiro de 1700 no calendário juliano, que é o último dia do calendário juliano oficialmente foi usado na Dinamarca, é um dia anteriores a 1 de março de 1700 no calendário gregoriano.       [!code-cs[System.Globalization.GregorianCalendar.Class#1](~/add/codesnippet/csharp/t-system.globalization.g_0_1.cs)][!code-vb[System.Globalization.GregorianCalendar.Class#1](~/add/codesnippet/visualbasic/t-system.globalization.g_0_1.vb) ] cada <xref:System.Globalization.CultureInfo>suporta um conjunto de calendários.</xref:System.Globalization.CultureInfo>   O <xref:System.Globalization.CultureInfo.Calendar%2A>propriedade retorna o calendário padrão para a cultura e o <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>propriedade retorna uma matriz que contém todos os calendários suportados pela cultura.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Para alterar o calendário usado por um <xref:System.Globalization.CultureInfo>o aplicativo pode definir a <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade para um novo <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>       <xref:System.Globalization.DateTimeFormatInfo.GetEra%2A>ignora a pontuação em nomes abreviados era, apenas se GregorianCalendar estiver selecionada e <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName>a cultura usar &quot;D.C.&quot;</xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName></xref:System.Globalization.DateTimeFormatInfo.GetEra%2A> como o nome era, ou seja, &quot;D.C.&quot; é equivalente a &quot;AD&quot;."
  example:
  - "The following code example shows that <xref:System.Globalization.DateTimeFormatInfo> ignores the punctuation in the era name, only if the calendar is Gregorian and the culture uses the era name \"A.D.\".  \n  \n [!code-cs[System.Globalization.GregorianCalendar.GetEra#1](~/add/codesnippet/csharp/t-system.globalization.g_0_2.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar.GetEra#1](~/add/codesnippet/cpp/t-system.globalization.g_0_2.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar.GetEra#1](~/add/codesnippet/visualbasic/t-system.globalization.g_0_2.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class GregorianCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GregorianCalendar()
  nameWithType: GregorianCalendar.GregorianCalendar()
  fullName: System.Globalization.GregorianCalendar.GregorianCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> classe usando o padrão <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> valor."
  remarks: "O padrão <xref:System.Globalization.GregorianCalendarTypes>é de valor <xref:System.Globalization.GregorianCalendarTypes>.</xref:System.Globalization.GregorianCalendarTypes> </xref:System.Globalization.GregorianCalendarTypes> Se a <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName>propriedade do <xref:System.Globalization.CultureInfo>está definido para um <xref:System.Globalization.GregorianCalendar>que é criado com esse construtor, as datas e horas são localizadas no idioma associado a <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> </xref:System.Globalization.GregorianCalendar> </xref:System.Globalization.CultureInfo> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A?displayProperty=fullName>"
  example:
  - "The following code example prints a <xref:System.DateTime> using a <xref:System.Globalization.GregorianCalendar> that is localized.  \n  \n [!code-vb[System.Globalization.GregorianCalendarLocalized#1](~/add/codesnippet/visualbasic/m-system.globalization.g_2_1.vb)]\n [!code-cs[System.Globalization.GregorianCalendarLocalized#1](~/add/codesnippet/csharp/m-system.globalization.g_2_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendarLocalized#1](~/add/codesnippet/cpp/m-system.globalization.g_2_1.cpp)]"
  syntax:
    content: public GregorianCalendar ();
    parameters: []
  overload: System.Globalization.GregorianCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)
  id: '#ctor(System.Globalization.GregorianCalendarTypes)'
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GregorianCalendar(GregorianCalendarTypes)
  nameWithType: GregorianCalendar.GregorianCalendar(GregorianCalendarTypes)
  fullName: System.Globalization.GregorianCalendar.GregorianCalendar(GregorianCalendarTypes)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> classe usando especificado <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> valor."
  syntax:
    content: public GregorianCalendar (System.Globalization.GregorianCalendarTypes type);
    parameters:
    - id: type
      type: System.Globalization.GregorianCalendarTypes
      description: "O <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> valor que indica qual versão de idioma do calendário para criar."
  overload: System.Globalization.GregorianCalendar.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>type</code>não é um membro do <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> enumeração."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: GregorianCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.GregorianCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna um <xref:System.DateTime>que é o número especificado de meses longe especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "A parte do dia de resultante <xref:System.DateTime>é afetado se o dia resultante não é um dia válido no mês do ano resultante resultante.</xref:System.DateTime> Ele é alterado para o último dia válido no mês do ano resultante resultante. A parte do ano de resultante <xref:System.DateTime>é afetado se o mês resultante está fora do ano de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> Essa implementação oferece suporte somente a era atual. Portanto, <xref:System.ArgumentException>é gerada se o ano resultante é fora era de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.ArgumentException> A parte de hora do dia de resultante <xref:System.DateTime>permanece o mesmo que o especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Por exemplo, se o mês especificado for outubro, que tem 31 dias, o dia especificado é o dia 31 do mês e o valor da `months` parâmetro for 6, o ano resultante é um mais do que o ano especificado, o mês resultante é abril e o dia resultante é de 30 dias, o que é o último dia em abril.       Se o valor da `months` parâmetro for negativo, o resultante <xref:System.DateTime>é anterior à <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       A<xref:System.DateTime.Kind%2A> propriedade de retornado <xref:System.DateTime>valor sempre é igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Você pode preservar o <xref:System.DateTime.Kind%2A>propriedade do `time` parâmetro ao chamar o <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>método, como mostra o exemplo a seguir.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.g_8_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.g_8_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_8_2.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_8_2.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_8_2.cpp)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ao qual adicionar meses.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "O número de meses a adicionar."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que resulta da adição do número especificado de meses especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.GregorianCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultante <xref:System.DateTime>está fora do intervalo com suporte.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>é menor que-120000.       - ou - <code>months</code> é maior do que 120000."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: GregorianCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.GregorianCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna um <xref:System.DateTime>que é o número especificado de anos longe especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "A parte do dia de resultante <xref:System.DateTime>é afetado se o dia resultante não é um dia válido no mês do ano resultante resultante.</xref:System.DateTime> Ele é alterado para o último dia válido no mês do ano resultante resultante. A parte do mês de resultante <xref:System.DateTime>permanece o mesmo que o especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime> Essa implementação oferece suporte somente a era atual. Portanto, <xref:System.ArgumentException>é gerada se o ano resultante é fora era de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.ArgumentException> A parte de hora do dia de resultante <xref:System.DateTime>permanece o mesmo que o especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Por exemplo, fevereiro tem 28 dias, exceto durante os anos bissextos quando ele tem 29 dias. Se a data especificada é o dia 29 de fevereiro em um ano bissexto e o valor de `years` é 1, a data resultante será o dia de 28 de fevereiro do ano seguinte.       Se `years` for negativo, o resultante <xref:System.DateTime>é anterior à <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       A<xref:System.DateTime.Kind%2A> propriedade de retornado <xref:System.DateTime>valor sempre é igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Você pode preservar o <xref:System.DateTime.Kind%2A>propriedade do `time` parâmetro ao chamar o <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>método, como mostra o exemplo a seguir.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.g_4_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.g_4_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_4_2.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_4_2.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_4_2.cpp)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ao qual adicionar anos.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "O número de anos a adicionar."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que resulta da adição do número especificado de anos especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.GregorianCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultante <xref:System.DateTime>está fora do intervalo com suporte.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.ADEra
  id: ADEra
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: ADEra
  nameWithType: GregorianCalendar.ADEra
  fullName: System.Globalization.GregorianCalendar.ADEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Representa a era atual. Esse campo é constante."
  remarks: 'O calendário gregoriano reconhece dois eras: A.C. ou A.C. e D.C. ou C.E. Essa implementação do <xref:System.Globalization.GregorianCalendar>classe reconhece somente o era atual (D.C.</xref:System.Globalization.GregorianCalendar> ou C.E.). Esse campo sempre retorna 1.'
  syntax:
    content: public const int ADEra = 1;
    return:
      type: System.Int32
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: GregorianCalendar.AlgorithmType
  fullName: System.Globalization.GregorianCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém um valor que indica se o calendário atual é solar baseado, lunar ou uma combinação de ambos."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.g_2_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.g_2_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Sempre retorna <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.CalendarType
  id: CalendarType
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: CalendarType
  nameWithType: GregorianCalendar.CalendarType
  fullName: System.Globalization.GregorianCalendar.CalendarType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém ou define o <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> valor que indica a versão de idioma do atual <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example demonstrates how to determine the GregorianCalendar language version supported by the culture.  \n  \n [!code-vb[System.Globalization.GregorianCalendarTypes#1](~/add/codesnippet/visualbasic/p-system.globalization.g_3_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendarTypes#1](~/add/codesnippet/cpp/p-system.globalization.g_3_1.cpp)]\n [!code-cs[System.Globalization.GregorianCalendarTypes#1](~/add/codesnippet/csharp/p-system.globalization.g_3_1.cs)]"
  syntax:
    content: public virtual System.Globalization.GregorianCalendarTypes CalendarType { get; set; }
    return:
      type: System.Globalization.GregorianCalendarTypes
      description: "Um <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> valor que indica a versão de idioma do atual <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.CalendarType*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado em uma operação definida não é um membro do <xref href=&quot;System.Globalization.GregorianCalendarTypes&quot;> </xref> enumeração."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Em uma operação definida, a instância atual é somente leitura."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.Eras
  id: Eras
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: GregorianCalendar.Eras
  fullName: System.Globalization.GregorianCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a lista de eras no <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref>."
  remarks: 'O calendário gregoriano reconhece dois eras: A.C. ou A.C. e D.C. ou C.E. Essa implementação do <xref:System.Globalization.GregorianCalendar>classe reconhece somente o era atual (D.C.</xref:System.Globalization.GregorianCalendar> ou C.E.). Essa propriedade sempre retorna uma matriz com apenas um elemento.'
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Uma matriz de inteiros que representa os eras no <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: GregorianCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o dia do mês em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_5_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_5_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_5_1.cpp)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro de 1 a 31 que representa o dia do mês no <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: GregorianCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o dia da semana especificado <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "O <xref:System.DayOfWeek>valores são domingo, segunda-feira, terça-feira, quarta-feira, quinta-feira, sexta-feira e sábado.</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_0_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_0_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_0_1.cpp)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "Um <xref:System.DayOfWeek>que representa o dia da semana no valor <code> time </code>.</xref:System.DayOfWeek>"
  overload: System.Globalization.GregorianCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: GregorianCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o dia do ano em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "O dia do ano é definido como o número de dias desde o primeiro dia do ano. Por exemplo, GetDayOfYear para o primeiro dia do primeiro mês retorna 1 e GetDayOfYear para o último dia do último mês retorna o número total de dias em que ano, o que é o mesmo valor retornado pelo <xref:System.Globalization.GregorianCalendar.GetDaysInYear%2A>.</xref:System.Globalization.GregorianCalendar.GetDaysInYear%2A>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_3_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_3_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_3_1.cpp)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro de 1 a 366 que representa o dia do ano no <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetDayOfYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: GregorianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o número de dias no mês do ano especificado na especificado era especificado."
  remarks: "Por exemplo, este método retorna 28 ou 29 de fevereiro (`month` = 2), dependendo se `year` é um ano bissexto."
  example:
  - "The following code example calls GetDaysInMonth for the second month in each of five years in each era.  \n  \n [!code-cpp[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/5d22c0c3-8560-4ab0-878f-_1.cpp)]\n [!code-cs[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/5d22c0c3-8560-4ab0-878f-_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/5d22c0c3-8560-4ab0-878f-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um inteiro de 1 a 12 que representa o mês."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.Int32
      description: "O número de dias do mês especificado no ano especificado na era especificado."
  overload: System.Globalization.GregorianCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>year</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>month</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: GregorianCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o número de dias do ano especificado na era especificado."
  remarks: "Por exemplo, este método retorna 365 ou 366, dependendo se `year` é um ano bissexto."
  example:
  - "The following code example calls GetDaysInYear for five years in each era.  \n  \n [!code-cpp[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/add/codesnippet/cpp/a71f2fe7-84c1-4827-ac70-_1.cpp)]\n [!code-cs[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/add/codesnippet/csharp/a71f2fe7-84c1-4827-ac70-_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar.GetDaysInYear#1](~/add/codesnippet/visualbasic/a71f2fe7-84c1-4827-ac70-_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.Int32
      description: "O número de dias do ano especificado na era especificado."
  overload: System.Globalization.GregorianCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>year</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: GregorianCalendar.GetEra(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna a era em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: 'O calendário gregoriano reconhece dois eras: A.C. ou A.C. e D.C. ou C.E. Essa implementação do <xref:System.Globalization.GregorianCalendar>classe reconhece somente o era atual (D.C.</xref:System.Globalization.GregorianCalendar> ou C.E.).'
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_6_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_6_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_6_1.cpp)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro que representa o era em <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: GregorianCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcula o mês de salto para um ano especificado e era."
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um ano."
    - id: era
      type: System.Int32
      description: "Uma época. Specify either <xref href=&quot;System.Globalization.GregorianCalendar.ADEra&quot;></xref> or <xref uid=&quot;langword_csharp_GregorianCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;GregorianCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "Sempre 0 porque o calendário gregoriano não reconhece bissexto meses."
  overload: System.Globalization.GregorianCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>é menor que o ano do calendário gregoriano, 1 ou maior que o calendário gregoriano ano 9999.       -or-       <code>era</code> is not <xref href=&quot;System.Globalization.GregorianCalendar.ADEra&quot;></xref> or <xref uid=&quot;langword_csharp_GregorianCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;GregorianCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: GregorianCalendar.GetMonth(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o mês em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_9_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_9_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_9_1.cpp)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro de 1 a 12 que representa o mês em <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: GregorianCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o número de meses do ano especificado na era especificado."
  remarks: ''
  example:
  - "The following code example calls GetMonthsInYear for five years in each era.  \n  \n [!code-cs[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/401ca427-6c60-47eb-91ba-_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/401ca427-6c60-47eb-91ba-_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/401ca427-6c60-47eb-91ba-_1.vb)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.Int32
      description: "O número de meses do ano especificado na era especificado."
  overload: System.Globalization.GregorianCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>year</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: GregorianCalendar.GetYear(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o ano em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Gregorian calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.g_7_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.g_7_1.vb)]\n [!code-cpp[System.Globalization.GregorianCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.g_7_1.cpp)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro que representa o ano em <code> time </code>."
  overload: System.Globalization.GregorianCalendar.GetYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se a data especificada na era especificado é um dia bissexto."
  remarks: "Um ano bissexto no calendário gregoriano é definido como um ano divisível por quatro, exceto se ela for divisível por 100. No entanto, os anos são divisíveis por 400 são bissextos. Por exemplo, ano 1900 não era um ano bissexto, mas foi o ano 2000. Um ano comum tem 365 dias e um ano bissexto tem 366 dias.       Um dia de salto é um dia em que ocorre apenas em um ano bissexto. No calendário gregoriano, o dia 29 de fevereiro será a única bissexto."
  example:
  - "The following code example calls IsLeapDay for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-cpp[System.Globalization.GregorianCalendar.IsLeapDay#1](~/add/codesnippet/cpp/f70e7f67-7d6a-4484-9fbf-_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/f70e7f67-7d6a-4484-9fbf-_1.vb)]\n [!code-cs[System.Globalization.GregorianCalendar.IsLeapDay#1](~/add/codesnippet/csharp/f70e7f67-7d6a-4484-9fbf-_1.cs)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um inteiro de 1 a 12 que representa o mês."
    - id: day
      type: System.Int32
      description: "Um inteiro de 1 a 31 que representa o dia."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o dia especificado é um dia bissexto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>year</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>month</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>day</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se o mês do ano especificado na especificado era especificado é um mês de salto."
  remarks: "Um ano bissexto no calendário gregoriano é definido como um ano divisível por quatro, exceto se ela for divisível por 100. No entanto, os anos são divisíveis por 400 são bissextos. Por exemplo, ano 1900 não era um ano bissexto, mas foi o ano 2000. Um ano comum tem 365 dias e um ano bissexto tem 366 dias.       Um mês de salto é um mês inteiro ocorre apenas em um ano bissexto. O calendário gregoriano não tem qualquer meses bissexto."
  example:
  - "The following code example calls IsLeapMonth for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/de7e90b6-6a1d-4ed0-8d65-_1.cpp)]\n [!code-cs[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/de7e90b6-6a1d-4ed0-8d65-_1.cs)]\n [!code-vb[System.Globalization.GregorianCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/de7e90b6-6a1d-4ed0-8d65-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um inteiro de 1 a 12 que representa o mês."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.Boolean
      description: "Esse método sempre retornará <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, a menos que substituído por uma classe derivada."
  overload: System.Globalization.GregorianCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>year</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>month</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se o ano especificado na era especificado é um ano bissexto."
  remarks: "Um ano bissexto no calendário gregoriano é definido como um ano divisível por quatro, exceto se ela for divisível por 100. No entanto, os anos são divisíveis por 400 são bissextos. Por exemplo, ano 1900 não era um ano bissexto, mas foi o ano 2000. Um ano comum tem 365 dias e um ano bissexto tem 366 dias."
  example:
  - "The following code example calls IsLeapYear for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.GregorianCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.g_1_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.g_1_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.g_1_1.vb)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o ano especificado é um ano bissexto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.GregorianCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>year</code> está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: GregorianCalendar.MaxSupportedDateTime
  fullName: System.Globalization.GregorianCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a data e hora com suporte a mais recente do <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> tipo."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.g_1_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.g_1_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.g_1_1.vb)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Na última data e hora com suporte a <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> tipo, que é o último momento de 31 de dezembro de 9999 C.E. e é equivalente a <xref:System.DateTime.MaxValue>.</xref:System.DateTime.MaxValue>"
  overload: System.Globalization.GregorianCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: GregorianCalendar.MinSupportedDateTime
  fullName: System.Globalization.GregorianCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a data e hora com suporte a mais antiga do <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> tipo."
  remarks: "Embora o valor da propriedade MinSupportedDateTime é o primeiro momento de 1º de janeiro, 0001 C.E., o calendário gregoriano não foi introduzido até 15 de outubro de 1582 e sua adoção em toda a Europa continente e em todo o mundo foi lenta. Até que eles adotaram o calendário gregoriano, a maioria das culturas na Europa, American e australiana continentes usado o calendário juliano, que é representado pela <xref:System.Globalization.JulianCalendar>classe.</xref:System.Globalization.JulianCalendar>"
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.g_0_1.cs)]\n [!code-cpp[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.g_0_1.cpp)]\n [!code-vb[System.Globalization.GregorianCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.g_0_1.vb)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Data e hora com suporte mais recente do <xref href=&quot;System.Globalization.GregorianCalendar&quot;> </xref> tipo, que é o primeiro momento de 1º de janeiro, 0001 C.E. e é equivalente a <xref:System.DateTime.MinValue>.</xref:System.DateTime.MinValue>"
  overload: System.Globalization.GregorianCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: GregorianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna um <xref:System.DateTime>que é definido como a data e hora especificadas na era especificado.</xref:System.DateTime>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um inteiro de 1 a 12 que representa o mês."
    - id: day
      type: System.Int32
      description: "Um inteiro de 1 a 31 que representa o dia."
    - id: hour
      type: System.Int32
      description: "Um inteiro de 0 a 23 que representa a hora."
    - id: minute
      type: System.Int32
      description: "Um inteiro de 0 a 59 que representa o minuto."
    - id: second
      type: System.Int32
      description: "Um inteiro de 0 a 59 que representa o segundo."
    - id: millisecond
      type: System.Int32
      description: "Um inteiro de 0 a 999 que representa o milissegundo."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que é definido como a data e hora especificadas na era atual.</xref:System.DateTime>"
  overload: System.Globalization.GregorianCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>está fora do intervalo com suporte pelo calendário.       - ou - <code>year</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>month</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>day</code> está fora do intervalo com suporte pelo calendário.       - ou - <code>hour</code> é menor que zero ou maior que 23.       - ou - <code>minute</code> é menor que zero ou maior que 59.       - ou - <code>second</code> é menor que zero ou maior que 59.       - ou - <code>millisecond</code> é menor que zero ou maior do que 999."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: GregorianCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.GregorianCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Converte um ano de quatro dígitos do ano especificado usando o <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax*>propriedade para determinar o século apropriado.</xref:System.Globalization.GregorianCalendar.TwoDigitYearMax*>"
  remarks: "<xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>é o último ano no intervalo de 100 anos que pode ser representado por um ano de dois dígitos.</xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> O século é determinado pelo localizar a ocorrência exclusiva de dois dígitos `year` dentro desse intervalo de 100 anos. Por exemplo, se <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>está definido para 2029, é o intervalo de 100 anos de 1930 a 2029.</xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> Portanto, um valor de 2 dígitos de 30 anos é interpretado como 1930, enquanto um valor de 2 dígitos de 29 é interpretado como 2029.       ToFourDigitYear oferece suporte a um ano de dois dígitos ou um ano de quatro dígitos. Passando um valor de ano de dois dígitos (menos de 100) faz com que o método converter o valor para um valor de quatro dígitos de acordo com o <xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A>valor que representa o século apropriado.</xref:System.Globalization.GregorianCalendar.TwoDigitYearMax%2A> Se o aplicativo fornece um valor de ano de quatro dígitos que está dentro do intervalo de calendário com suporte para ToFourDigitYear, o método retornará o valor de entrada real. Se o aplicativo fornece um valor de quatro dígitos que está fora do intervalo de calendário com suporte, ou se ele fornece um valor negativo, o método gera uma exceção."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro de dois ou quatro dígitos que representa o ano para converter."
    return:
      type: System.Int32
      description: "Um inteiro que contém a representação de quatro dígitos do <code> year </code>."
  overload: System.Globalization.GregorianCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>está fora do intervalo com suporte pelo calendário."
  platform:
  - net462
- uid: System.Globalization.GregorianCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.GregorianCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: GregorianCalendar.TwoDigitYearMax
  fullName: System.Globalization.GregorianCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém ou define o último ano de um intervalo de 100 anos que pode ser representado por um ano de 2 dígitos."
  remarks: "Esta propriedade permite que um ano de 2 dígitos ser convertido corretamente em um ano de 4 dígitos. Por exemplo, se essa propriedade é definida como 2029, o intervalo de 100 anos é de 1930 a 2029. Portanto, um valor de 2 dígitos de 30 anos é interpretado como 1930, enquanto um valor de 2 dígitos de 29 é interpretado como 2029.       O valor inicial dessa propriedade é derivado das configurações na parte de opções regionais e de idioma do painel de controle. No entanto, essas informações podem alterar durante a vida útil do <xref:System.AppDomain>.</xref:System.AppDomain> O <xref:System.Globalization.GregorianCalendar>classe não detecta alterações nas configurações do sistema automaticamente.</xref:System.Globalization.GregorianCalendar>       O aplicativo deve definir esse valor a 99 para indicar que os anos de 2 dígitos são deve ser considerado literalmente. Por exemplo, se essa propriedade é definida como 99, o intervalo de 100 anos é de 0 (não um valor válido para a maioria dos calendários) a 99. Portanto, um valor de 2 dígitos de 30 anos é interpretado como 30."
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "O último ano de um intervalo de 100 anos que pode ser representado por um ano de 2 dígitos."
  overload: System.Globalization.GregorianCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado em uma operação de definição é menor que 99.       - ou - o valor especificado em uma operação de definição é maior do que <xref uid=&quot;langword_csharp_MaxSupportedDateTime.Year&quot; name=&quot;MaxSupportedDateTime.Year&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Em uma operação definida, a instância atual é somente leitura."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.GregorianCalendar.#ctor
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GregorianCalendar()
  nameWithType: GregorianCalendar.GregorianCalendar()
  fullName: System.Globalization.GregorianCalendar.GregorianCalendar()
- uid: System.Globalization.GregorianCalendar.#ctor(System.Globalization.GregorianCalendarTypes)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GregorianCalendar(GregorianCalendarTypes)
  nameWithType: GregorianCalendar.GregorianCalendar(GregorianCalendarTypes)
  fullName: System.Globalization.GregorianCalendar.GregorianCalendar(GregorianCalendarTypes)
- uid: System.Globalization.GregorianCalendarTypes
  parent: System.Globalization
  isExternal: false
  name: GregorianCalendarTypes
  nameWithType: GregorianCalendarTypes
  fullName: System.Globalization.GregorianCalendarTypes
- uid: System.Globalization.GregorianCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: GregorianCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.GregorianCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.GregorianCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: GregorianCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.GregorianCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.GregorianCalendar.ADEra
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ADEra
  nameWithType: GregorianCalendar.ADEra
  fullName: System.Globalization.GregorianCalendar.ADEra
- uid: System.Globalization.GregorianCalendar.AlgorithmType
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: GregorianCalendar.AlgorithmType
  fullName: System.Globalization.GregorianCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.GregorianCalendar.CalendarType
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: CalendarType
  nameWithType: GregorianCalendar.CalendarType
  fullName: System.Globalization.GregorianCalendar.CalendarType
- uid: System.Globalization.GregorianCalendar.Eras
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: Eras
  nameWithType: GregorianCalendar.Eras
  fullName: System.Globalization.GregorianCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.GregorianCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: GregorianCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.GregorianCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: GregorianCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.GregorianCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: GregorianCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.GregorianCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: GregorianCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.GregorianCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: GregorianCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.GregorianCalendar.GetEra(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: GregorianCalendar.GetEra(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetEra(DateTime)
- uid: System.Globalization.GregorianCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: GregorianCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.GregorianCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: GregorianCalendar.GetMonth(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetMonth(DateTime)
- uid: System.Globalization.GregorianCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: GregorianCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.GregorianCalendar.GetYear(System.DateTime)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: GregorianCalendar.GetYear(DateTime)
  fullName: System.Globalization.GregorianCalendar.GetYear(DateTime)
- uid: System.Globalization.GregorianCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.GregorianCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.GregorianCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: GregorianCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.GregorianCalendar.MaxSupportedDateTime
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: GregorianCalendar.MaxSupportedDateTime
  fullName: System.Globalization.GregorianCalendar.MaxSupportedDateTime
- uid: System.Globalization.GregorianCalendar.MinSupportedDateTime
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: GregorianCalendar.MinSupportedDateTime
  fullName: System.Globalization.GregorianCalendar.MinSupportedDateTime
- uid: System.Globalization.GregorianCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: GregorianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.GregorianCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.GregorianCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: GregorianCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.GregorianCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.GregorianCalendar.TwoDigitYearMax
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: GregorianCalendar.TwoDigitYearMax
  fullName: System.Globalization.GregorianCalendar.TwoDigitYearMax
- uid: System.Globalization.GregorianCalendar.#ctor*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GregorianCalendar
  nameWithType: GregorianCalendar.GregorianCalendar
- uid: System.Globalization.GregorianCalendar.AddMonths*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AddMonths
  nameWithType: GregorianCalendar.AddMonths
- uid: System.Globalization.GregorianCalendar.AddYears*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AddYears
  nameWithType: GregorianCalendar.AddYears
- uid: System.Globalization.GregorianCalendar.AlgorithmType*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: GregorianCalendar.AlgorithmType
- uid: System.Globalization.GregorianCalendar.CalendarType*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: CalendarType
  nameWithType: GregorianCalendar.CalendarType
- uid: System.Globalization.GregorianCalendar.Eras*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: Eras
  nameWithType: GregorianCalendar.Eras
- uid: System.Globalization.GregorianCalendar.GetDayOfMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: GregorianCalendar.GetDayOfMonth
- uid: System.Globalization.GregorianCalendar.GetDayOfWeek*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: GregorianCalendar.GetDayOfWeek
- uid: System.Globalization.GregorianCalendar.GetDayOfYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: GregorianCalendar.GetDayOfYear
- uid: System.Globalization.GregorianCalendar.GetDaysInMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: GregorianCalendar.GetDaysInMonth
- uid: System.Globalization.GregorianCalendar.GetDaysInYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: GregorianCalendar.GetDaysInYear
- uid: System.Globalization.GregorianCalendar.GetEra*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetEra
  nameWithType: GregorianCalendar.GetEra
- uid: System.Globalization.GregorianCalendar.GetLeapMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: GregorianCalendar.GetLeapMonth
- uid: System.Globalization.GregorianCalendar.GetMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetMonth
  nameWithType: GregorianCalendar.GetMonth
- uid: System.Globalization.GregorianCalendar.GetMonthsInYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: GregorianCalendar.GetMonthsInYear
- uid: System.Globalization.GregorianCalendar.GetYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: GetYear
  nameWithType: GregorianCalendar.GetYear
- uid: System.Globalization.GregorianCalendar.IsLeapDay*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: GregorianCalendar.IsLeapDay
- uid: System.Globalization.GregorianCalendar.IsLeapMonth*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: GregorianCalendar.IsLeapMonth
- uid: System.Globalization.GregorianCalendar.IsLeapYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: GregorianCalendar.IsLeapYear
- uid: System.Globalization.GregorianCalendar.MaxSupportedDateTime*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: GregorianCalendar.MaxSupportedDateTime
- uid: System.Globalization.GregorianCalendar.MinSupportedDateTime*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: GregorianCalendar.MinSupportedDateTime
- uid: System.Globalization.GregorianCalendar.ToDateTime*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: GregorianCalendar.ToDateTime
- uid: System.Globalization.GregorianCalendar.ToFourDigitYear*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: GregorianCalendar.ToFourDigitYear
- uid: System.Globalization.GregorianCalendar.TwoDigitYearMax*
  parent: System.Globalization.GregorianCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: GregorianCalendar.TwoDigitYearMax
