### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow
  id: IWebPartRow
  children:
  - System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  - System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  langs:
  - csharp
  name: IWebPartRow
  nameWithType: IWebPartRow
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow
  type: Interface
  summary: "Define uma interface de provedor para conectar dois controles de servidor usando um único campo de dados."
  remarks: "Essa interface foi projetada para ser usado com conexões de Web Parts. Em uma conexão de Web Parts, dois controles de servidor que residem em um <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase>zona estabelecer uma conexão e compartilhamento de dados, com um controle que atua como o consumidor e o outro controle que atua como um provedor.</xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> O mecanismo para o compartilhamento de dados em uma conexão de Web Parts é uma instância de interface, que atua como o provedor para o consumidor por meio de um método de retorno de chamada. Para estabelecer uma conexão, o consumidor e provedor devem ambos funcionam com o mesmo tipo de interface para o compartilhamento de dados. Se o consumidor não reconhece o tipo de interface enviado pelo provedor, ele ainda é possível conectar-se os controles por meio de um transformador (um <xref:System.Web.UI.WebControls.WebParts.WebPartTransformer>objeto) que converte a instância da interface enviada pelo provedor para um tipo que o consumidor reconhece.</xref:System.Web.UI.WebControls.WebParts.WebPartTransformer> Para obter detalhes sobre conexões, consulte <xref:System.Web.UI.WebControls.WebParts.WebPartConnection>e [Web Parts Connections Overview](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.WebControls.WebParts.WebPartConnection>       A interface IWebPartRow é uma interface de provedor incluída com o controle de Web Parts definido como uma interface padrão para a criação de conexões com base em uma linha de dados. Você também pode criar interfaces personalizados para usar com conexões de Web Parts, mas em muitos aplicativos de Web controladas por dados, é útil criar conexões com base em um campo comum (para obter detalhes, consulte o <xref:System.Web.UI.WebControls.WebParts.IWebPartField>interface), tabela (para obter detalhes, consulte o <xref:System.Web.UI.WebControls.WebParts.IWebPartTable>interface), ou a linha da fonte de dados.</xref:System.Web.UI.WebControls.WebParts.IWebPartTable> </xref:System.Web.UI.WebControls.WebParts.IWebPartField> Em uma conexão típica, um <xref:System.Web.UI.WebControls.WebParts.WebPart>controlar atuar como um provedor de deve implementar a interface IWebPartRow e fornecer uma instância da interface para os consumidores de um método de retorno de chamada especial.</xref:System.Web.UI.WebControls.WebParts.WebPart> Por exemplo, o provedor pode implementar uma interface IWebPartRow para uma linha que corresponde a um usuário em sua tabela de informações do usuário. Outro <xref:System.Web.UI.WebControls.WebParts.WebPart>controlar atuar como um consumidor define um método especial para receber a instância da interface e pode, em seguida, extrair os dados de usuário, usá-lo para pesquisar informações adicionais sobre contas do usuário e exibir todas as informações relacionadas ao usuário na página.</xref:System.Web.UI.WebControls.WebParts.WebPart>       A interface de IWebPartRow tem dois membros expostos. O <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A>propriedade retorna informações de esquema sobre a linha de dados encapsulada em uma <xref:System.ComponentModel.PropertyDescriptorCollection>objeto.</xref:System.ComponentModel.PropertyDescriptorCollection> </xref:System.Web.UI.WebControls.WebParts.IWebPartRow.Schema%2A> O <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A>método declara um método que usa um implementador (como um controle de provedor) para recuperar dados da instância da interface da linha quando o método de retorno de chamada é invocado.</xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A>"
  example:
  - "The following code example demonstrates how to create a static connection between two controls using the IWebPartRow interface. The code example has three parts:  \n  \n-   Source code for two custom <xref:System.Web.UI.WebControls.WebParts.WebPart> controls that can form a connection using the IWebPartRow interface, with one control acting as the provider, and the other acting as the consumer.  \n  \n-   A Web page that hosts the controls and declares the static connection in persistence format.  \n  \n-   A description of what happens when the example code runs.  \n  \n The first part of the code example is the source code for the two custom controls. First is the code for the provider, which implements the IWebPartRow interface. For simplicity in the example, the provider creates a table with some data rather than connecting to a database. The `GetConnectionInterface` method serves as the provider's connection point, the callback method that returns the interface instance to the consumer. As for the consumer, it retrieves the interface instance from the provider in its method named `SetConnectionInterface`, which is marked with a `ConnectionConsumer` attribute. After retrieving the instance of the interface, the consumer, in its `OnPreRender` method, calls the implementation of the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData%2A> method in the provider, to retrieve the actual data and write it to the page.  \n  \n For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.webcontr_327_1.cs)]\n [!code-vb[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_327_1.vb)]  \n  \n The second part of the code example is the Web page that declares the static connection and hosts the controls. Near the top of the page is a `Register` directive that declares the namespace of the source code contained in the App_Code directory. The connection is declared using an `<asp:webpartconnection>` element. The custom consumer and provider controls are declared in a `<zonetemplate>` element within an `<asp:webpartzone>` element, which is required for them to be able to connect (they must reside within a zone that inherits from the <xref:System.Web.UI.WebControls.WebParts.WebPartZoneBase> class).  \n  \n [!code-vb[WebParts_IWebPartRow_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_327_2.aspx)]\n [!code-cs[WebParts_IWebPartRow_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_327_2.aspx)]  \n  \n Load the page in a browser. The consumer control displays the data provided from the specified row, which the provider makes available through an instance of the IWebPartRow interface."
  syntax:
    content: public interface IWebPartRow
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  id: GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  langs:
  - csharp
  name: GetRowData(RowCallback)
  nameWithType: IWebPartRow.GetRowData(RowCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(RowCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Retorna os dados para a linha que está sendo usado pela interface como a base de uma conexão entre dois <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controles."
  remarks: "Use esse método para recuperar os valores de linha de dados transmitidos pela interface. O provedor implementa este método e o consumidor chama no ponto quando o consumidor está pronto para processar ou processar dados."
  example:
  - "The following code example shows the implementation and use of the GetRowData method. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface. The provider control implements the GetRowData method, returning the value of a particular row in the data table. The consumer control calls the GetRowData method in its `OnPreRender` method, so that the value of the data can be written to the page.  \n  \n [!code-cs[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/csharp/98668bea-41a0-4fc3-85fe-_1.cs)]\n [!code-vb[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/visualbasic/98668bea-41a0-4fc3-85fe-_1.vb)]"
  syntax:
    content: public void GetRowData (System.Web.UI.WebControls.WebParts.RowCallback callback);
    parameters:
    - id: callback
      type: System.Web.UI.WebControls.WebParts.RowCallback
      description: "Um <xref href=&quot;System.Web.UI.WebControls.WebParts.RowCallback&quot;> </xref> delegado que contém o endereço de um método que recebe os dados."
  overload: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  id: Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  langs:
  - csharp
  name: Schema
  nameWithType: IWebPartRow.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém as informações de esquema para uma linha de dados que é usada para compartilhar dados entre duas <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controles."
  remarks: "Esta propriedade fornece informações de propriedade para os dados. Usando o <xref:System.Web.UI.WebControls.WebParts.IWebPartRow>interface em uma conexão, você obterá um <xref:System.ComponentModel.PropertyDescriptorCollection>objeto, que é referenciado pela propriedade de esquema.</xref:System.ComponentModel.PropertyDescriptorCollection> </xref:System.Web.UI.WebControls.WebParts.IWebPartRow> O contrato especifica que a chamada `Schema[n].GetValue(RowData)` retorna o valor da *n*ª coluna na linha. Você precisa usar a propriedade do esquema para obter os valores na linha."
  example:
  - "The following code example shows the implementation and use of the Schema property. The complete example is shown in the class overview for the <xref:System.Web.UI.WebControls.WebParts.IWebPartRow> interface. The provider control implements the Schema property. Then the consumer control, in its `RenderContents` method, queries the Schema property to retrieve information about the row as it writes the row data to the page.  \n  \n [!code-cs[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_721_1.cs)]\n [!code-vb[WebParts_IWebPartRow_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_721_1.vb)]"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection Schema { get; }
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Um <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> que descrevem os dados."
  overload: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(System.Web.UI.WebControls.WebParts.RowCallback)
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: GetRowData(RowCallback)
  nameWithType: IWebPartRow.GetRowData(RowCallback)
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData(RowCallback)
- uid: System.Web.UI.WebControls.WebParts.RowCallback
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: RowCallback
  nameWithType: RowCallback
  fullName: System.Web.UI.WebControls.WebParts.RowCallback
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: Schema
  nameWithType: IWebPartRow.Schema
  fullName: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.GetRowData*
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: GetRowData
  nameWithType: IWebPartRow.GetRowData
- uid: System.Web.UI.WebControls.WebParts.IWebPartRow.Schema*
  parent: System.Web.UI.WebControls.WebParts.IWebPartRow
  isExternal: false
  name: Schema
  nameWithType: IWebPartRow.Schema
