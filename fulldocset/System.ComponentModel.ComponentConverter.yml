### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.ComponentConverter
  id: ComponentConverter
  children:
  - System.ComponentModel.ComponentConverter.#ctor(System.Type)
  - System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: ComponentConverter
  nameWithType: ComponentConverter
  fullName: System.ComponentModel.ComponentConverter
  type: Class
  summary: "Fornece um conversor de tipo para converter componentes para e a partir de diversas outras representações."
  remarks: "Essa classe implementa <xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A>e <xref:System.ComponentModel.ComponentConverter.GetProperties%2A>retornando as propriedades por meio do <xref:System.ComponentModel.TypeDescriptor.GetProperties%2A>método de <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetProperties%2A> </xref:System.ComponentModel.ComponentConverter.GetProperties%2A> </xref:System.ComponentModel.TypeConverter.GetPropertiesSupported%2A>       Para obter mais informações sobre conversores de tipo, consulte o <xref:System.ComponentModel.TypeConverter>classe base e [como: implementar um conversor de tipo](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>      > [!NOTE] > Você nunca deve criar uma instância de ComponentConverter. Em vez disso, chame o <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>método de <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> Para obter mais informações, consulte os exemplos de <xref:System.ComponentModel.TypeConverter>classe base.</xref:System.ComponentModel.TypeConverter>       Este conversor converte um objeto que implementa <xref:System.ComponentModel.IComponent>e exibe suas propriedades na janela Propriedades.</xref:System.ComponentModel.IComponent>"
  syntax:
    content: 'public class ComponentConverter : System.ComponentModel.ReferenceConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.ComponentModel.ReferenceConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.ReferenceConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.ReferenceConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.ReferenceConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.ReferenceConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.ReferenceConverter.IsValueAllowed(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.ComponentConverter.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.ComponentConverter
  langs:
  - csharp
  name: ComponentConverter(Type)
  nameWithType: ComponentConverter.ComponentConverter(Type)
  fullName: System.ComponentModel.ComponentConverter.ComponentConverter(Type)
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.ComponentConverter&quot;> </xref> classe."
  syntax:
    content: public ComponentConverter (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Um <xref:System.Type>que representa o tipo a ser associado com esse conversor de componente.</xref:System.Type>"
  overload: System.ComponentModel.ComponentConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  id: GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ComponentConverter
  langs:
  - csharp
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: ComponentConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.ComponentConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém uma coleção de propriedades para o tipo de componente especificado pelo parâmetro de valor."
  remarks: "O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`.       O `attributes` matriz será usada para filtrar a matriz. O `attributes` pode ter uma mistura de <xref:System.Type>e <xref:System.Attribute>objetos.</xref:System.Attribute> </xref:System.Type> A filtragem é definida pelas seguintes regras: - um <xref:System.Type>objeto será tratado como um caractere curinga; ela corresponderá a qualquer propriedade que tem o <xref:System.Type>em seu conjunto de atributos.</xref:System.Type> </xref:System.Type>      -Se uma propriedade não tem um <xref:System.Attribute>da mesma classe, a propriedade não será incluída na matriz retornada.</xref:System.Attribute>      -Se o atributo é uma instância de <xref:System.Attribute>, a propriedade deve ser uma correspondência exata ou se ele não será incluído na matriz retornada.</xref:System.Attribute>      -Se um <xref:System.Attribute>instância for especificada e é a propriedade padrão, ele será incluído na matriz retornada mesmo se não houver nenhuma instância do <xref:System.Attribute>na propriedade.</xref:System.Attribute> </xref:System.Attribute>"
  syntax:
    content: public override System.ComponentModel.PropertyDescriptorCollection GetProperties (System.ComponentModel.ITypeDescriptorContext context, object value, Attribute[] attributes);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    - id: value
      type: System.Object
      description: "Um <xref:System.Object>que especifica o tipo de componente para obter o loop for propriedades</xref:System.Object>"
    - id: attributes
      type: System.Attribute[]
      description: "Uma matriz do tipo <xref:System.Attribute>que será usado como um filtro.</xref:System.Attribute>"
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Um <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> com as propriedades que são expostas para o componente, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhuma propriedade."
  overload: System.ComponentModel.ComponentConverter.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ComponentConverter
  langs:
  - csharp
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se esse objeto oferece suporte a propriedades usando o contexto especificado."
  remarks: "O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`."
  syntax:
    content: public override bool GetPropertiesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>porque <xref:System.ComponentModel.TypeConverter.GetProperties*>deve ser chamado para localizar as propriedades deste objeto.</xref:System.ComponentModel.TypeConverter.GetProperties*> Este método nunca retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.ComponentConverter.GetPropertiesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.ReferenceConverter
  isExternal: false
  name: System.ComponentModel.ReferenceConverter
- uid: System.ComponentModel.ComponentConverter.#ctor(System.Type)
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: ComponentConverter(Type)
  nameWithType: ComponentConverter.ComponentConverter(Type)
  fullName: System.ComponentModel.ComponentConverter.ComponentConverter(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.ComponentConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: GetProperties(ITypeDescriptorContext,Object,Attribute[])
  nameWithType: ComponentConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
  fullName: System.ComponentModel.ComponentConverter.GetProperties(ITypeDescriptorContext,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.ComponentConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: GetPropertiesSupported(ITypeDescriptorContext)
  nameWithType: ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.ComponentConverter.GetPropertiesSupported(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ComponentConverter.#ctor*
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: ComponentConverter
  nameWithType: ComponentConverter.ComponentConverter
- uid: System.ComponentModel.ComponentConverter.GetProperties*
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: GetProperties
  nameWithType: ComponentConverter.GetProperties
- uid: System.ComponentModel.ComponentConverter.GetPropertiesSupported*
  parent: System.ComponentModel.ComponentConverter
  isExternal: false
  name: GetPropertiesSupported
  nameWithType: ComponentConverter.GetPropertiesSupported
