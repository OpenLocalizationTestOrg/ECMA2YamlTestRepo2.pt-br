### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.MetadataExchangeClient
  id: MetadataExchangeClient
  children:
  - System.ServiceModel.Description.MetadataExchangeClient.#ctor
  - System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.String)
  - System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  - System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata(System.IAsyncResult)
  - System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory(System.ServiceModel.EndpointAddress,System.String,System.String)
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadata
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.ServiceModel.EndpointAddress)
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.ServiceModel.EndpointAddress,System.Uri)
  - System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  - System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest(System.Uri,System.String,System.String)
  - System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials
  - System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences
  - System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout
  - System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences
  - System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials
  langs:
  - csharp
  name: MetadataExchangeClient
  nameWithType: MetadataExchangeClient
  fullName: System.ServiceModel.Description.MetadataExchangeClient
  type: Class
  summary: "Baixa os metadados de serviço."
  remarks: "Use o MetadataExchangeClient para fazer o download de metadados. Normalmente, um MetadataExchangeClient está configurado para uma solicitação de metadados e, em seguida, passado para o <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A?displayProperty=fullName>ou <xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A?displayProperty=fullName>método para o <xref:System.ServiceModel.Description.MetadataResolver>usar para fazer o download de metadados.</xref:System.ServiceModel.Description.MetadataResolver> </xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataResolver.Resolve%2A?displayProperty=fullName>       No entanto, você pode usar o MetadataExchangeClient diretamente para recuperar metadados como um <xref:System.ServiceModel.Description.MetadataSet>que contém <xref:System.ServiceModel.Description.MetadataSection>objetos.</xref:System.ServiceModel.Description.MetadataSection> </xref:System.ServiceModel.Description.MetadataSet>       Se usado diretamente ou passado para um <xref:System.ServiceModel.Description.MetadataResolver>, MetadataExchangeClient tem os seguintes membros para controlar o processo de download de metadados:-Use os construtores de personalizar a associação para usar ao fazer a solicitação de metadados.</xref:System.ServiceModel.Description.MetadataResolver>      -Usar o <xref:System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials%2A>propriedade para especificar as credenciais usadas para fazer uma solicitação HTTP/GET.</xref:System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials%2A>      -Usar o <xref:System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials%2A>propriedade para especificar as credenciais usadas para fazer uma solicitação de metadados do WS-transferência.</xref:System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials%2A>      -Usar o <xref:System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences%2A>a propriedade para limitar o número de metadados de referência resolve o MetadataExchangeClient.</xref:System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences%2A>      -Usar o <xref:System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout%2A>propriedade para limitar o tempo gasto recuperar metadados.</xref:System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout%2A>      -Usar o <xref:System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences%2A>propriedade para especificar se deseja localizar e recuperar outros documentos de metadados chamado pelos metadados baixado do ponto de extremidade de metadados original.</xref:System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences%2A>      -Usar o <xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>processam métodos para iniciar o download.</xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>       Além disso, você pode criar uma classe derivada que pode substituir os seguintes dois métodos protegidos:-substituir o <xref:System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory%2A>método de modificar o canal que faz uma solicitação de metadados usando a transferência de WS.</xref:System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory%2A>      -Substituir o <xref:System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest%2A>método de modificar o <xref:System.Net.HttpWebRequest>que faz uma solicitação de metadados usando HTTP/GET.</xref:System.Net.HttpWebRequest> </xref:System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest%2A>"
  example:
  - "The following code example shows the use of MetadataExchangeClient to specify a download binding, resolve any contained references to metadata, and download the metadata.  \n  \n [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]"
  syntax:
    content: public class MetadataExchangeClient
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: MetadataExchangeClient()
  nameWithType: MetadataExchangeClient.MetadataExchangeClient()
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> classe."
  syntax:
    content: public MetadataExchangeClient ();
    parameters: []
  overload: System.ServiceModel.Description.MetadataExchangeClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.Channels.Binding)
  id: '#ctor(System.ServiceModel.Channels.Binding)'
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: MetadataExchangeClient(Binding)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(Binding)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(Binding)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> classe usando a associação especificada."
  remarks: "Use este construtor para especificar uma associação a ser usado ao fazer o download de metadados."
  example:
  - "The following code example shows the use of <xref:System.ServiceModel.Description.MetadataExchangeClient> to specify a download binding, resolve any contained references to metadata, and download the metadata.  \n  \n [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]"
  syntax:
    content: public MetadataExchangeClient (System.ServiceModel.Channels.Binding mexBinding);
    parameters:
    - id: mexBinding
      type: System.ServiceModel.Channels.Binding
      description: "A associação a ser usado ao recuperar metadados de WS-transferência."
  overload: System.ServiceModel.Description.MetadataExchangeClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.EndpointAddress)
  id: '#ctor(System.ServiceModel.EndpointAddress)'
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: MetadataExchangeClient(EndpointAddress)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(EndpointAddress)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> classe."
  remarks: "Use este construtor para especificar o endereço do ponto de extremidade de metadados."
  syntax:
    content: public MetadataExchangeClient (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "O endereço de metadados."
  overload: System.ServiceModel.Description.MetadataExchangeClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: MetadataExchangeClient(String)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(String)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> classe."
  remarks: "Use este construtor para usar os dados de um elemento de configuração de ponto de extremidade específico para criar um canal para baixar os metadados."
  syntax:
    content: public MetadataExchangeClient (string endpointConfigurationName);
    parameters:
    - id: endpointConfigurationName
      type: System.String
      description: "O nome das informações de configuração de ponto de extremidade a ser usado ao fazer o download de metadados."
  overload: System.ServiceModel.Description.MetadataExchangeClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: '#ctor(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)'
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: MetadataExchangeClient(Uri,MetadataExchangeClientMode)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(Uri,MetadataExchangeClientMode)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> classe."
  remarks: "Use este construtor para especificar o endereço e se deseja usar uma solicitação HTTP GET ou WS-transferência obter. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)]<xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>"
  example:
  - "The following code example shows the use of <xref:System.ServiceModel.Description.MetadataExchangeClient> to specify a download binding, resolve any contained references to metadata, and download the metadata.  \n  \n [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]"
  syntax:
    content: public MetadataExchangeClient (Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: address
      type: System.Uri
      description: "O endereço dos metadados."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "O modo de usar ao baixar os metadados."
  overload: System.ServiceModel.Description.MetadataExchangeClient.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.AsyncCallback,System.Object)
  id: BeginGetMetadata(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: BeginGetMetadata(AsyncCallback,Object)
  nameWithType: MetadataExchangeClient.BeginGetMetadata(AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicia uma chamada de método assíncrono que retorna um <xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref>."
  remarks: "Uma implementação assíncrona do <xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>método.</xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>"
  syntax:
    content: public IAsyncResult BeginGetMetadata (AsyncCallback callback, object asyncState);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "O representante de retorno de chamada assíncrono chamado quando a chamada é concluída."
    - id: asyncState
      type: System.Object
      description: "O estado associado à chamada assíncrona."
    return:
      type: System.IAsyncResult
      description: "Os metadados."
  overload: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  id: BeginGetMetadata(System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: BeginGetMetadata(EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataExchangeClient.BeginGetMetadata(EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(EndpointAddress,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicia uma chamada de método assíncrono que retorna um <xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref> usando o endereço especificado, o retorno de chamada e o estado assíncronas."
  remarks: "Uma implementação assíncrona do <xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>método.</xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>"
  syntax:
    content: public IAsyncResult BeginGetMetadata (System.ServiceModel.EndpointAddress address, AsyncCallback callback, object asyncState);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "O endereço dos metadados."
    - id: callback
      type: System.AsyncCallback
      description: "O representante de retorno de chamada assíncrono chamado quando a chamada é concluída."
    - id: asyncState
      type: System.Object
      description: "O estado associado à chamada assíncrona."
    return:
      type: System.IAsyncResult
      description: "Os metadados são obtidos especificado <code> address </code>."
  overload: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  id: BeginGetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: BeginGetMetadata(Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataExchangeClient.BeginGetMetadata(Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicia uma chamada de método assíncrono que retorna um <xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref> usando o endereço especificado, o retorno de chamada, o estado assíncronas e baixe o mecanismo."
  remarks: "Uma implementação assíncrona do <xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>método.</xref:System.ServiceModel.Description.MetadataExchangeClient.GetMetadata%2A>"
  syntax:
    content: public IAsyncResult BeginGetMetadata (Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode, AsyncCallback callback, object asyncState);
    parameters:
    - id: address
      type: System.Uri
      description: "O endereço dos metadados."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "O <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClientMode&quot;> </xref> valor a ser usado ao baixar os metadados."
    - id: callback
      type: System.AsyncCallback
      description: "O representante de retorno de chamada assíncrono chamado quando a chamada é concluída."
    - id: asyncState
      type: System.Object
      description: "O estado associado à chamada assíncrona."
    return:
      type: System.IAsyncResult
      description: "Os metadados são obtidos especificado <code> address </code>."
  overload: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata(System.IAsyncResult)
  id: EndGetMetadata(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: EndGetMetadata(IAsyncResult)
  nameWithType: MetadataExchangeClient.EndGetMetadata(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata(IAsyncResult)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Termina uma chamada de método assíncrono que retorna um <xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref>."
  remarks: "Encerra um do <xref:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata%2A>métodos para retornar os metadados baixado.</xref:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata%2A>"
  syntax:
    content: public System.ServiceModel.Description.MetadataSet EndGetMetadata (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>objeto que é recebido de uma chamada para o <xref:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata*>método.</xref:System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata*> </xref:System.IAsyncResult>"
    return:
      type: System.ServiceModel.Description.MetadataSet
      description: "O <xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref> que contém os metadados baixado."
  overload: System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory(System.ServiceModel.EndpointAddress,System.String,System.String)
  id: GetChannelFactory(System.ServiceModel.EndpointAddress,System.String,System.String)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetChannelFactory(EndpointAddress,String,String)
  nameWithType: MetadataExchangeClient.GetChannelFactory(EndpointAddress,String,String)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory(EndpointAddress,String,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Quando substituído em uma classe derivada, retorna a fábrica de canais que é usada para fazer a solicitação de metadados do WS-transferência."
  remarks: "Este método é chamado quando a recuperação de metadados para <xref:System.ServiceModel.Description.MetadataReference>.</xref:System.ServiceModel.Description.MetadataReference>"
  syntax:
    content: protected virtual System.ServiceModel.ChannelFactory<System.ServiceModel.Description.IMetadataExchange> GetChannelFactory (System.ServiceModel.EndpointAddress metadataAddress, string dialect, string identifier);
    parameters:
    - id: metadataAddress
      type: System.ServiceModel.EndpointAddress
      description: "O endereço de metadados."
    - id: dialect
      type: System.String
      description: "O dialeto de metadados."
    - id: identifier
      type: System.String
      description: "O identificador de metadados."
    return:
      type: System.ServiceModel.ChannelFactory{System.ServiceModel.Description.IMetadataExchange}
      description: "Um &lt;xref:System.ServiceModel.ChannelFactory%601&gt; do tipo <xref:System.ServiceModel.Channels.IRequestChannel>que faz a solicitação de metadados do WS-transferência.</xref:System.ServiceModel.Channels.IRequestChannel>"
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata
  id: GetMetadata
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadata()
  nameWithType: MetadataExchangeClient.GetMetadata()
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Retorna um <xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example shows the use of <xref:System.ServiceModel.Description.MetadataExchangeClient> to specify a download binding, resolve any contained references to metadata, and download the metadata.  \n  \n [!code-cs[MetadataResolver#3](~/add/codesnippet/csharp/metadataresolver.client/client.cs#3)]"
  syntax:
    content: public System.ServiceModel.Description.MetadataSet GetMetadata ();
    parameters: []
    return:
      type: System.ServiceModel.Description.MetadataSet
      description: "O <xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref> que contém os metadados baixado."
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress)
  id: GetMetadata(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadata(EndpointAddress)
  nameWithType: MetadataExchangeClient.GetMetadata(EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Retorna um <xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref> do endereço especificado."
  syntax:
    content: public System.ServiceModel.Description.MetadataSet GetMetadata (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "O endereço do qual baixar os metadados."
    return:
      type: System.ServiceModel.Description.MetadataSet
      description: "Os metadados localizado no <code> address </code>."
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress,System.Uri)
  id: GetMetadata(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadata(EndpointAddress,Uri)
  nameWithType: MetadataExchangeClient.GetMetadata(EndpointAddress,Uri)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(EndpointAddress,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Retorna um <xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref> do endereço especificado e a rota especificada."
  syntax:
    content: public System.ServiceModel.Description.MetadataSet GetMetadata (System.ServiceModel.EndpointAddress address, Uri via);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "O endereço do qual baixar os metadados."
    - id: via
      type: System.Uri
      description: "O endereço URI que representa a rota entra em uma mensagem."
    return:
      type: System.ServiceModel.Description.MetadataSet
      description: "Os metadados que é baixado."
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: GetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadata(Uri,MetadataExchangeClientMode)
  nameWithType: MetadataExchangeClient.GetMetadata(Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Retorna um <xref href=&quot;System.ServiceModel.Description.MetadataSet&quot;> </xref> do endereço especificado usando o modo de download especificada."
  remarks: "Use esse método para especificar o endereço e se deve usar HTTP GET ou Get do WS-transferência para baixar os metadados."
  syntax:
    content: public System.ServiceModel.Description.MetadataSet GetMetadata (Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: address
      type: System.Uri
      description: "O endereço do qual baixar os metadados."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "O mecanismo de download a ser usado."
    return:
      type: System.ServiceModel.Description.MetadataSet
      description: "Os metadados que é baixado."
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync
  id: GetMetadataAsync
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadataAsync()
  nameWithType: MetadataExchangeClient.GetMetadataAsync()
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Retorna um conjunto de metadados assíncrona."
  syntax:
    content: public System.Threading.Tasks.Task<System.ServiceModel.Description.MetadataSet> GetMetadataAsync ();
    parameters: []
    return:
      type: System.Threading.Tasks.Task{System.ServiceModel.Description.MetadataSet}
      description: "O conjunto de metadados assíncrona."
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.ServiceModel.EndpointAddress)
  id: GetMetadataAsync(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadataAsync(EndpointAddress)
  nameWithType: MetadataExchangeClient.GetMetadataAsync(EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(EndpointAddress)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Retorna um conjunto do endereço especificado de metadados assíncrono."
  syntax:
    content: public System.Threading.Tasks.Task<System.ServiceModel.Description.MetadataSet> GetMetadataAsync (System.ServiceModel.EndpointAddress address);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "O endereço do qual baixar os metadados assíncrono"
    return:
      type: System.Threading.Tasks.Task{System.ServiceModel.Description.MetadataSet}
      description: "Os metadados assíncrono localizado no endereço."
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.ServiceModel.EndpointAddress,System.Uri)
  id: GetMetadataAsync(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadataAsync(EndpointAddress,Uri)
  nameWithType: MetadataExchangeClient.GetMetadataAsync(EndpointAddress,Uri)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(EndpointAddress,Uri)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Retorna um conjunto do endereço especificado e a rota especificada de metadados assíncrono."
  syntax:
    content: public System.Threading.Tasks.Task<System.ServiceModel.Description.MetadataSet> GetMetadataAsync (System.ServiceModel.EndpointAddress address, Uri via);
    parameters:
    - id: address
      type: System.ServiceModel.EndpointAddress
      description: "O endereço do qual baixar os metadados."
    - id: via
      type: System.Uri
      description: "O endereço URI que representa a rota entra em uma mensagem."
    return:
      type: System.Threading.Tasks.Task{System.ServiceModel.Description.MetadataSet}
      description: "Os metadados que é baixado."
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  id: GetMetadataAsync(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetMetadataAsync(Uri,MetadataExchangeClientMode)
  nameWithType: MetadataExchangeClient.GetMetadataAsync(Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(Uri,MetadataExchangeClientMode)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Retorna um conjunto do endereço especificado usando o modo de download especificada de metadados assíncrono."
  syntax:
    content: public System.Threading.Tasks.Task<System.ServiceModel.Description.MetadataSet> GetMetadataAsync (Uri address, System.ServiceModel.Description.MetadataExchangeClientMode mode);
    parameters:
    - id: address
      type: System.Uri
      description: "O endereço do qual baixar os metadados."
    - id: mode
      type: System.ServiceModel.Description.MetadataExchangeClientMode
      description: "O mecanismo de download a ser usado."
    return:
      type: System.Threading.Tasks.Task{System.ServiceModel.Description.MetadataSet}
      description: "Os metadados que é baixado."
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest(System.Uri,System.String,System.String)
  id: GetWebRequest(System.Uri,System.String,System.String)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: GetWebRequest(Uri,String,String)
  nameWithType: MetadataExchangeClient.GetWebRequest(Uri,String,String)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest(Uri,String,String)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Quando substituído em uma classe derivada, retorna o <xref:System.Net.HttpWebRequest>usado para fazer solicitações de metadados HTTP/GET.</xref:System.Net.HttpWebRequest>"
  remarks: "O método GetWebRequest é chamado: - quando houver uma tentativa de resolver <xref:System.ServiceModel.Description.MetadataLocation?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataLocation?displayProperty=fullName>      -Quando <xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>é usado.</xref:System.ServiceModel.Description.MetadataExchangeClientMode?displayProperty=fullName>"
  syntax:
    content: protected virtual System.Net.HttpWebRequest GetWebRequest (Uri location, string dialect, string identifier);
    parameters:
    - id: location
      type: System.Uri
      description: "O local dos metadados."
    - id: dialect
      type: System.String
      description: "O dialeto de metadados."
    - id: identifier
      type: System.String
      description: "O identificador de metadados."
    return:
      type: System.Net.HttpWebRequest
      description: "Interno <xref:System.Net.HttpWebRequest>usado para fazer solicitações HTTP GET de metadados.</xref:System.Net.HttpWebRequest>"
  overload: System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials
  id: HttpCredentials
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: HttpCredentials
  nameWithType: MetadataExchangeClient.HttpCredentials
  fullName: System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define as credenciais usadas para fazer uma solicitação HTTP/GET."
  remarks: "Use a propriedade HttpCredentials para personalizar a segurança as credenciais que o <xref:System.ServiceModel.Description.MetadataExchangeClient>usa quando solicita metadados usando HTTP/GET.</xref:System.ServiceModel.Description.MetadataExchangeClient>"
  syntax:
    content: public System.Net.ICredentials HttpCredentials { get; set; }
    return:
      type: System.Net.ICredentials
      description: "O <xref:System.Net.ICredentials>objeto usado para estabelecer as credenciais de solicitação.</xref:System.Net.ICredentials>"
  overload: System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences
  id: MaximumResolvedReferences
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: MaximumResolvedReferences
  nameWithType: MetadataExchangeClient.MaximumResolvedReferences
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define o número máximo de referências a metadados que o <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> downloads."
  remarks: "Use a propriedade MaximumResolvedReferences para limitar os recursos acessados por metadados que contém um grande número de referências. Esse limite se aplica a qualquer referência nos metadados que resultam em uma solicitação subsequente, incluindo referências de metadados, locais de metadados, importações WSDL e importações de esquema XML e incluem."
  syntax:
    content: public int MaximumResolvedReferences { get; set; }
    return:
      type: System.Int32
      description: "O número de referências de metadados de <xref href=&quot;System.ServiceModel.Description.MetadataExchangeClient&quot;> </xref> resolve. O padrão é 10."
  overload: System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout
  id: OperationTimeout
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: OperationTimeout
  nameWithType: MetadataExchangeClient.OperationTimeout
  fullName: System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define o período de tempo no qual os metadados devem ser baixado antes de uma exceção será lançada."
  remarks: "Use a propriedade OperationTimeout para limitar a quantidade de tempo de <xref:System.ServiceModel.Description.MetadataExchangeClient>leva antes de encerrar a operação.</xref:System.ServiceModel.Description.MetadataExchangeClient>"
  syntax:
    content: public TimeSpan OperationTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "O período no qual os metadados devem ser baixados; o padrão é 1 minuto."
  overload: System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences
  id: ResolveMetadataReferences
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: ResolveMetadataReferences
  nameWithType: MetadataExchangeClient.ResolveMetadataReferences
  fullName: System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define um valor que controla se as referências a metadados são resolvidas."
  remarks: "Defina a propriedade ResolveMetadataReferences como `false` para impedir que a resolução de referências de metadados. Nesse caso, as referências são retornadas como <xref:System.ServiceModel.Description.MetadataReference?displayProperty=fullName> <xref:System.ServiceModel.Description.MetadataLocation?displayProperty=fullName>objetos dentro de <xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName>.</xref:System.ServiceModel.Description.MetadataSet?displayProperty=fullName> </xref:System.ServiceModel.Description.MetadataLocation?displayProperty=fullName> ou</xref:System.ServiceModel.Description.MetadataReference?displayProperty=fullName>"
  syntax:
    content: public bool ResolveMetadataReferences { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as referências a metadados são resolvidas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials
  id: SoapCredentials
  parent: System.ServiceModel.Description.MetadataExchangeClient
  langs:
  - csharp
  name: SoapCredentials
  nameWithType: MetadataExchangeClient.SoapCredentials
  fullName: System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define a segurança de cliente, as credenciais usadas para fazer uma solicitação de metadados do WS-transferência."
  remarks: "Use a propriedade SoapCredentials para especificar as credenciais de segurança de <xref:System.ServiceModel.Description.MetadataExchangeClient>usa ao fazer uma solicitação de metadados do WS-transferência.</xref:System.ServiceModel.Description.MetadataExchangeClient>"
  syntax:
    content: public System.ServiceModel.Description.ClientCredentials SoapCredentials { get; set; }
    return:
      type: System.ServiceModel.Description.ClientCredentials
      description: "As credenciais de segurança de cliente usadas para fazer uma solicitação de metadados do WS-transferência."
  overload: System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MetadataExchangeClient()
  nameWithType: MetadataExchangeClient.MetadataExchangeClient()
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient()
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MetadataExchangeClient(Binding)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(Binding)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(Binding)
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MetadataExchangeClient(EndpointAddress)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(EndpointAddress)
- uid: System.ServiceModel.EndpointAddress
  parent: System.ServiceModel
  isExternal: true
  name: EndpointAddress
  nameWithType: EndpointAddress
  fullName: System.ServiceModel.EndpointAddress
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.String)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MetadataExchangeClient(String)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(String)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MetadataExchangeClient(Uri,MetadataExchangeClientMode)
  nameWithType: MetadataExchangeClient.MetadataExchangeClient(Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MetadataExchangeClient(Uri,MetadataExchangeClientMode)
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Description.MetadataExchangeClientMode
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataExchangeClientMode
  nameWithType: MetadataExchangeClientMode
  fullName: System.ServiceModel.Description.MetadataExchangeClientMode
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: BeginGetMetadata(AsyncCallback,Object)
  nameWithType: MetadataExchangeClient.BeginGetMetadata(AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.ServiceModel.EndpointAddress,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: BeginGetMetadata(EndpointAddress,AsyncCallback,Object)
  nameWithType: MetadataExchangeClient.BeginGetMetadata(EndpointAddress,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(EndpointAddress,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode,System.AsyncCallback,System.Object)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: BeginGetMetadata(Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  nameWithType: MetadataExchangeClient.BeginGetMetadata(Uri,MetadataExchangeClientMode,AsyncCallback,Object)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata(Uri,MetadataExchangeClientMode,AsyncCallback,Object)
- uid: System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata(System.IAsyncResult)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: EndGetMetadata(IAsyncResult)
  nameWithType: MetadataExchangeClient.EndGetMetadata(IAsyncResult)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata(IAsyncResult)
- uid: System.ServiceModel.Description.MetadataSet
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataSet
  nameWithType: MetadataSet
  fullName: System.ServiceModel.Description.MetadataSet
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory(System.ServiceModel.EndpointAddress,System.String,System.String)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetChannelFactory(EndpointAddress,String,String)
  nameWithType: MetadataExchangeClient.GetChannelFactory(EndpointAddress,String,String)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory(EndpointAddress,String,String)
- uid: System.ServiceModel.ChannelFactory{System.ServiceModel.Description.IMetadataExchange}
  parent: System.ServiceModel
  isExternal: true
  name: ChannelFactory<IMetadataExchange>
  nameWithType: ChannelFactory<IMetadataExchange>
  fullName: System.ServiceModel.ChannelFactory<System.ServiceModel.Description.IMetadataExchange>
  spec.csharp:
  - uid: System.ServiceModel.ChannelFactory`1
    name: ChannelFactory
    nameWithType: ChannelFactory
    fullName: ChannelFactory<System.ServiceModel.Description.IMetadataExchange>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.IMetadataExchange
    name: IMetadataExchange
    nameWithType: IMetadataExchange
    fullName: IMetadataExchange
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadata()
  nameWithType: MetadataExchangeClient.GetMetadata()
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata()
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadata(EndpointAddress)
  nameWithType: MetadataExchangeClient.GetMetadata(EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(EndpointAddress)
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadata(EndpointAddress,Uri)
  nameWithType: MetadataExchangeClient.GetMetadata(EndpointAddress,Uri)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(EndpointAddress,Uri)
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadata(Uri,MetadataExchangeClientMode)
  nameWithType: MetadataExchangeClient.GetMetadata(Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata(Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadataAsync()
  nameWithType: MetadataExchangeClient.GetMetadataAsync()
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync()
- uid: System.Threading.Tasks.Task{System.ServiceModel.Description.MetadataSet}
  parent: System.Threading.Tasks
  isExternal: true
  name: Task<MetadataSet>
  nameWithType: Task<MetadataSet>
  fullName: System.Threading.Tasks.Task<System.ServiceModel.Description.MetadataSet>
  spec.csharp:
  - uid: System.Threading.Tasks.Task`1
    name: Task
    nameWithType: Task
    fullName: Task<System.ServiceModel.Description.MetadataSet>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.MetadataSet
    name: MetadataSet
    nameWithType: MetadataSet
    fullName: MetadataSet
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.ServiceModel.EndpointAddress)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadataAsync(EndpointAddress)
  nameWithType: MetadataExchangeClient.GetMetadataAsync(EndpointAddress)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(EndpointAddress)
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.ServiceModel.EndpointAddress,System.Uri)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadataAsync(EndpointAddress,Uri)
  nameWithType: MetadataExchangeClient.GetMetadataAsync(EndpointAddress,Uri)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(EndpointAddress,Uri)
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(System.Uri,System.ServiceModel.Description.MetadataExchangeClientMode)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadataAsync(Uri,MetadataExchangeClientMode)
  nameWithType: MetadataExchangeClient.GetMetadataAsync(Uri,MetadataExchangeClientMode)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync(Uri,MetadataExchangeClientMode)
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest(System.Uri,System.String,System.String)
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetWebRequest(Uri,String,String)
  nameWithType: MetadataExchangeClient.GetWebRequest(Uri,String,String)
  fullName: System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest(Uri,String,String)
- uid: System.Net.HttpWebRequest
  parent: System.Net
  isExternal: true
  name: HttpWebRequest
  nameWithType: HttpWebRequest
  fullName: System.Net.HttpWebRequest
- uid: System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: HttpCredentials
  nameWithType: MetadataExchangeClient.HttpCredentials
  fullName: System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials
- uid: System.Net.ICredentials
  parent: System.Net
  isExternal: true
  name: ICredentials
  nameWithType: ICredentials
  fullName: System.Net.ICredentials
- uid: System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MaximumResolvedReferences
  nameWithType: MetadataExchangeClient.MaximumResolvedReferences
  fullName: System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: OperationTimeout
  nameWithType: MetadataExchangeClient.OperationTimeout
  fullName: System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: ResolveMetadataReferences
  nameWithType: MetadataExchangeClient.ResolveMetadataReferences
  fullName: System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: SoapCredentials
  nameWithType: MetadataExchangeClient.SoapCredentials
  fullName: System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials
- uid: System.ServiceModel.Description.ClientCredentials
  parent: System.ServiceModel.Description
  isExternal: true
  name: ClientCredentials
  nameWithType: ClientCredentials
  fullName: System.ServiceModel.Description.ClientCredentials
- uid: System.ServiceModel.Description.MetadataExchangeClient.#ctor*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MetadataExchangeClient
  nameWithType: MetadataExchangeClient.MetadataExchangeClient
- uid: System.ServiceModel.Description.MetadataExchangeClient.BeginGetMetadata*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: BeginGetMetadata
  nameWithType: MetadataExchangeClient.BeginGetMetadata
- uid: System.ServiceModel.Description.MetadataExchangeClient.EndGetMetadata*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: EndGetMetadata
  nameWithType: MetadataExchangeClient.EndGetMetadata
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetChannelFactory*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetChannelFactory
  nameWithType: MetadataExchangeClient.GetChannelFactory
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadata*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadata
  nameWithType: MetadataExchangeClient.GetMetadata
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetMetadataAsync*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetMetadataAsync
  nameWithType: MetadataExchangeClient.GetMetadataAsync
- uid: System.ServiceModel.Description.MetadataExchangeClient.GetWebRequest*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: GetWebRequest
  nameWithType: MetadataExchangeClient.GetWebRequest
- uid: System.ServiceModel.Description.MetadataExchangeClient.HttpCredentials*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: HttpCredentials
  nameWithType: MetadataExchangeClient.HttpCredentials
- uid: System.ServiceModel.Description.MetadataExchangeClient.MaximumResolvedReferences*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: MaximumResolvedReferences
  nameWithType: MetadataExchangeClient.MaximumResolvedReferences
- uid: System.ServiceModel.Description.MetadataExchangeClient.OperationTimeout*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: OperationTimeout
  nameWithType: MetadataExchangeClient.OperationTimeout
- uid: System.ServiceModel.Description.MetadataExchangeClient.ResolveMetadataReferences*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: ResolveMetadataReferences
  nameWithType: MetadataExchangeClient.ResolveMetadataReferences
- uid: System.ServiceModel.Description.MetadataExchangeClient.SoapCredentials*
  parent: System.ServiceModel.Description.MetadataExchangeClient
  isExternal: false
  name: SoapCredentials
  nameWithType: MetadataExchangeClient.SoapCredentials
