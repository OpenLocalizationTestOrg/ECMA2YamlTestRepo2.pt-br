### YamlMime:ManagedReference
items:
- uid: System.Security.Claims.Claim
  id: Claim
  children:
  - System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)
  - System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)
  - System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.Claim.#ctor(System.String,System.String)
  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)
  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)
  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)
  - System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.Claim.Clone
  - System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.Claim.CustomSerializationData
  - System.Security.Claims.Claim.Issuer
  - System.Security.Claims.Claim.OriginalIssuer
  - System.Security.Claims.Claim.Properties
  - System.Security.Claims.Claim.Subject
  - System.Security.Claims.Claim.ToString
  - System.Security.Claims.Claim.Type
  - System.Security.Claims.Claim.Value
  - System.Security.Claims.Claim.ValueType
  - System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])
  langs:
  - csharp
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
  type: Class
  summary: "Representa uma declaração."
  remarks: "Uma declaração é uma afirmação sobre um assunto por um emissor. Declarações representam atributos de assunto que são úteis no contexto de operações de autenticação e autorização. Entidades e emissores são ambas as entidades que fazem parte de um cenário de identidade. Alguns exemplos comuns de uma entidade são: um usuário, um aplicativo ou serviço, um dispositivo ou um computador. Alguns exemplos comuns de um emissor são: o sistema operacional, um aplicativo. um serviço, um provedor de função, um provedor de identidade ou um provedor de Federação. Um emissor fornece declarações ao emitir tokens de segurança, normalmente por meio de um Token de segurança Service (STS). (No WIF, você pode criar um STS derivando de <xref:System.IdentityModel.SecurityTokenService>classe)</xref:System.IdentityModel.SecurityTokenService> Ocasionalmente, a coleção de declarações recebidas de um emissor pode ser estendida por atributos de entidade armazenados diretamente no recurso. Uma declaração pode ser avaliada para determinar os direitos de acesso a dados e outros recursos protegidos durante o processo de autorização e também pode ser usado para fazer ou express decisões de autenticação sobre um assunto.       Começando com o .NET 4.5, as classes do Windows Identity Foundation (WIF), que implementam a identidade baseada em declarações, foi totalmente integradas ao .NET Framework. O conceito de declarações é implementado pela classe de declaração.       A seguir descreve as propriedades importantes da classe de declaração: - o <xref:System.Security.Claims.Claim.Type%2A>propriedade é uma cadeia de caracteres (normalmente um URI) que contém informações sobre a declaração semânticas; ele informa o que significa que o valor da declaração.</xref:System.Security.Claims.Claim.Type%2A> Por exemplo, uma declaração com um tipo de declaração de <xref:System.Security.Claims.ClaimTypes.GivenName>(&quot;http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname&quot;) representa o nome do usuário.</xref:System.Security.Claims.ClaimTypes.GivenName> O valor da <xref:System.Security.Claims.Claim.Type%2A>propriedade pode ser um dos tipos de declaração bem conhecidos definidos no <xref:System.Security.Claims.ClaimTypes>classe, ou pode ser um URI arbitrário, conforme definido pelo emissor.</xref:System.Security.Claims.ClaimTypes> </xref:System.Security.Claims.Claim.Type%2A> Por exemplo, um tipo de declaração de &quot;urn: spendinglimit&quot; pode representar um atributo de usuário que faz sentido no contexto de negócios do emissor.      -A <xref:System.Security.Claims.Claim.Value%2A>propriedade contém o valor da declaração.</xref:System.Security.Claims.Claim.Value%2A> Para reduzir as dependências e simplificar a administração, o WIF o valor de uma declaração é representado somente como uma cadeia de caracteres. Para tipos de valor mais complexos, é recomendável que você use tipos de esquema XML padrão para indicar como o valor é destinado a ser serializado em e desserializado a partir de uma cadeia de caracteres.      -A <xref:System.Security.Claims.Claim.ValueType%2A>propriedade contém uma cadeia de caracteres que identifica as informações de tipo para o valor.</xref:System.Security.Claims.Claim.ValueType%2A> Essa propriedade deve ser usada para entender o formato do valor e para fornecer informações sobre como desserializá-lo. Se sua solução requer tipos de valor complexo, é recomendável que você use tipos de esquema XML padrão no <xref:System.Security.Claims.Claim.ValueType%2A>propriedade para indicar como o <xref:System.Security.Claims.Claim.Value%2A>propriedade é destinada a ser serializado em e desserializada a partir de uma cadeia de caracteres.</xref:System.Security.Claims.Claim.Value%2A> </xref:System.Security.Claims.Claim.ValueType%2A>      -A <xref:System.Security.Claims.Claim.Subject%2A>propriedade é um <xref:System.Security.Claims.ClaimsIdentity>objeto que representa o assunto da declaração.</xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.Claim.Subject%2A> O assunto da declaração é a entidade (normalmente o usuário que está solicitando acesso a um recurso) sobre a declaração que é declarada. O <xref:System.Security.Claims.ClaimsIdentity>contém, entre suas propriedades, uma coleção de declarações que descrevem as propriedades e os atributos da entidade como attested para por um ou mais emissores.</xref:System.Security.Claims.ClaimsIdentity>      -A <xref:System.Security.Claims.Claim.Issuer%2A>propriedade contém o nome da entidade que emitiu a declaração.</xref:System.Security.Claims.Claim.Issuer%2A> O emissor de uma declaração é representado no WIF por uma cadeia de caracteres que contém um nome obtido de uma lista de emissores bem conhecidos que é mantida pelo registro de nome do emissor. O registro do nome do emissor é uma instância de uma classe que deriva de <xref:System.IdentityModel.Tokens.IssuerNameRegistry>classe.</xref:System.IdentityModel.Tokens.IssuerNameRegistry> O registro do nome do emissor associa um mnemônico nome para o material criptográfico necessário para verificar as assinaturas dos tokens produzidos pelo emissor correspondente. Por exemplo, a <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>classe, disponível com o .NET 4.5, associa o nome mnemônico para cada emissor com seu certificado x. 509 correspondente.</xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry> A lista de emissores conhecidas é normalmente criada no momento da inicialização pelo registro de nome do emissor. A lista usada pelo <xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>é especificado no arquivo de configuração do aplicativo.</xref:System.IdentityModel.Tokens.ConfigurationBasedIssuerNameRegistry>      -A <xref:System.Security.Claims.Claim.OriginalIssuer%2A>propriedade contém o nome da entidade que emitiu originalmente a declaração.</xref:System.Security.Claims.Claim.OriginalIssuer%2A> Essa propriedade é projetada para facilitar cenários onde uma declaração pode passar vários emissores antes que ela é apresentada pelo cliente do aplicativo do RP. como os cenários de Federação. Você pode examinar o <xref:System.Security.Claims.Claim.OriginalIssuer%2A>propriedade para determinar a entidade que emitiu originalmente a declaração.</xref:System.Security.Claims.Claim.OriginalIssuer%2A> O nome é obtido da lista de emissores conhecidos mantida pelo registro de nome do emissor, como no caso do <xref:System.Security.Claims.Claim.Issuer%2A>propriedade.</xref:System.Security.Claims.Claim.Issuer%2A>"
  example:
  - "The following example extracts the claims associated to the authenticated user performing an HTTP request and writes them in the HTTP response. The current user is read from the <xref:System.Web.HttpContext> as a <xref:System.Security.Claims.ClaimsPrincipal> and the claims are read from it. The claims are then written to HTTP the response.  \n  \n```c#  \nClaimsPrincipal principal = HttpContext.Current.User as ClaimsPrincipal;  \nif (null != principal)  \n{  \n   foreach (Claim claim in principal.Claims)  \n   {  \n      Response.Write(\"CLAIM TYPE: \" + claim.Type + \"; CLAIM VALUE: \" + claim.Value + \"</br>\");  \n   }  \n  \n}  \n  \n```"
  syntax:
    content: public class Claim
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)
  id: '#ctor(System.IO.BinaryReader)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(BinaryReader)
  nameWithType: Claim.Claim(BinaryReader)
  fullName: System.Security.Claims.Claim.Claim(BinaryReader)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public Claim (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "A ser adicionado."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)
  id: '#ctor(System.Security.Claims.Claim)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(Claim)
  nameWithType: Claim.Claim(Claim)
  fullName: System.Security.Claims.Claim.Claim(Claim)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe."
  syntax:
    content: protected Claim (System.Security.Claims.Claim other);
    parameters:
    - id: other
      type: System.Security.Claims.Claim
      description: "A declaração de segurança."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(BinaryReader,ClaimsIdentity)
  nameWithType: Claim.Claim(BinaryReader,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(BinaryReader,ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe com o leitor especificado e da entidade."
  syntax:
    content: public Claim (System.IO.BinaryReader reader, System.Security.Claims.ClaimsIdentity subject);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "O leitor binário."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "O assunto que descreve esta declaração."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(Claim,ClaimsIdentity)
  nameWithType: Claim.Claim(Claim,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(Claim,ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe com a declaração de segurança especificado e da entidade."
  syntax:
    content: protected Claim (System.Security.Claims.Claim other, System.Security.Claims.ClaimsIdentity subject);
    parameters:
    - id: other
      type: System.Security.Claims.Claim
      description: "A declaração de segurança."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "O assunto que descreve esta declaração."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String)
  nameWithType: Claim.Claim(String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe com o tipo de declaração especificado e o valor."
  remarks: "O <xref:System.Security.Claims.Claim.Subject%2A>está definida como `null`.</xref:System.Security.Claims.Claim.Subject%2A> As <xref:System.Security.Claims.Claim.Issuer%2A> <xref:System.Security.Claims.Claim.OriginalIssuer%2A>propriedades são</xref:System.Security.Claims.Claim.OriginalIssuer%2A> definidos para <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer> </xref:System.Security.Claims.Claim.Issuer%2A> O <xref:System.Security.Claims.Claim.ValueType%2A>está definida como <xref:System.Security.Claims.ClaimValueTypes.String?displayProperty=fullName></xref:System.Security.Claims.ClaimValueTypes.String?displayProperty=fullName> </xref:System.Security.Claims.Claim.ValueType%2A>"
  syntax:
    content: public Claim (string type, string value);
    parameters:
    - id: type
      type: System.String
      description: "O tipo de declaração."
    - id: value
      type: System.String
      description: "O valor da declaração."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String,String)
  nameWithType: Claim.Claim(String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe com o tipo de declaração especificado, o valor e o tipo de valor."
  remarks: "O <xref:System.Security.Claims.Claim.Subject%2A>está definida como `null`.</xref:System.Security.Claims.Claim.Subject%2A> As <xref:System.Security.Claims.Claim.Issuer%2A> <xref:System.Security.Claims.Claim.OriginalIssuer%2A>propriedades são</xref:System.Security.Claims.Claim.OriginalIssuer%2A> definidos para <xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer>.</xref:System.Security.Claims.ClaimsIdentity.DefaultIssuer> </xref:System.Security.Claims.Claim.Issuer%2A>"
  syntax:
    content: public Claim (string type, string value, string valueType);
    parameters:
    - id: type
      type: System.String
      description: "O tipo de declaração."
    - id: value
      type: System.String
      description: "O valor da declaração."
    - id: valueType
      type: System.String
      description: "O tipo de valor de declaração. Se esse parâmetro for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, em seguida, <xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref> é usado."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String,String,String)
  nameWithType: Claim.Claim(String,String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe com o tipo de declaração especificado, o valor, o tipo de valor e o emissor."
  remarks: "O <xref:System.Security.Claims.Claim.Subject%2A>está definida como `null`.</xref:System.Security.Claims.Claim.Subject%2A> O <xref:System.Security.Claims.Claim.OriginalIssuer%2A>propriedade é definida de acordo com o valor de `issuer` parâmetro.</xref:System.Security.Claims.Claim.OriginalIssuer%2A>"
  syntax:
    content: public Claim (string type, string value, string valueType, string issuer);
    parameters:
    - id: type
      type: System.String
      description: "O tipo de declaração."
    - id: value
      type: System.String
      description: "O valor da declaração."
    - id: valueType
      type: System.String
      description: "O tipo de valor de declaração. Se esse parâmetro for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, em seguida, <xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref> é usado."
    - id: issuer
      type: System.String
      description: "O emissor de declaração. Se esse parâmetro estiver vazio ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, em seguida, <xref href=&quot;System.Security.Claims.ClaimsIdentity.DefaultIssuer&quot;> </xref> é usado."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String,String,String,String)
  nameWithType: Claim.Claim(String,String,String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe com o tipo de declaração especificada, valor, tipo de valor, emissor e o emissor original."
  remarks: "O <xref:System.Security.Claims.Claim.Subject%2A>está definida como `null`.</xref:System.Security.Claims.Claim.Subject%2A>"
  syntax:
    content: public Claim (string type, string value, string valueType, string issuer, string originalIssuer);
    parameters:
    - id: type
      type: System.String
      description: "O tipo de declaração."
    - id: value
      type: System.String
      description: "O valor da declaração."
    - id: valueType
      type: System.String
      description: "O tipo de valor de declaração. Se esse parâmetro for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, em seguida, <xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref> é usado."
    - id: issuer
      type: System.String
      description: "O emissor de declaração. Se esse parâmetro estiver vazio ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, em seguida, <xref href=&quot;System.Security.Claims.ClaimsIdentity.DefaultIssuer&quot;> </xref> é usado."
    - id: originalIssuer
      type: System.String
      description: "O emissor original da declaração. Se esse parâmetro estiver vazio ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, em seguida, o <> </> *> propriedade é definida como o valor da <> </> *> propriedade."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Claim(String,String,String,String,String,ClaimsIdentity)
  nameWithType: Claim.Claim(String,String,String,String,String,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String,String,ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> classe com o tipo de declaração especificada, valor, tipo de valor, emissor, o emissor original e assunto."
  syntax:
    content: public Claim (string type, string value, string valueType, string issuer, string originalIssuer, System.Security.Claims.ClaimsIdentity subject);
    parameters:
    - id: type
      type: System.String
      description: "O tipo de declaração."
    - id: value
      type: System.String
      description: "O valor da declaração."
    - id: valueType
      type: System.String
      description: "O tipo de valor de declaração. Se esse parâmetro for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, em seguida, <xref href=&quot;System.Security.Claims.ClaimValueTypes.String&quot;> </xref> é usado."
    - id: issuer
      type: System.String
      description: "O emissor de declaração. Se esse parâmetro estiver vazio ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, em seguida, <xref href=&quot;System.Security.Claims.ClaimsIdentity.DefaultIssuer&quot;> </xref> é usado."
    - id: originalIssuer
      type: System.String
      description: "O emissor original da declaração. Se esse parâmetro estiver vazio ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, em seguida, o <> </> *> propriedade é definida como o valor da <> </> *> propriedade."
    - id: subject
      type: System.Security.Claims.ClaimsIdentity
      description: "O assunto que descreve esta declaração."
  overload: System.Security.Claims.Claim.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.Claim.Clone
  id: Clone
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Clone()
  nameWithType: Claim.Clone()
  fullName: System.Security.Claims.Claim.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Retorna um novo <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> objeto copiado deste objeto. Nova declaração não tem um assunto."
  remarks: "Essa é uma operação de cópia superficial. O <xref:System.Security.Claims.Claim.Subject%2A>propriedade do novo <xref:System.Security.Claims.Claim>objeto é definido como `null`.</xref:System.Security.Claims.Claim> </xref:System.Security.Claims.Claim.Subject%2A>"
  syntax:
    content: public virtual System.Security.Claims.Claim Clone ();
    parameters: []
    return:
      type: System.Security.Claims.Claim
      description: "O novo objeto de declaração."
  overload: System.Security.Claims.Claim.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)
  id: Clone(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Clone(ClaimsIdentity)
  nameWithType: Claim.Clone(ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Clone(ClaimsIdentity)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Retorna um novo <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> objeto copiado deste objeto. O assunto da nova declaração é definido como o ClaimsIdentity especificado."
  remarks: "Essa é uma operação de cópia superficial. O <xref:System.Security.Claims.Claim.Subject%2A>propriedade do novo <xref:System.Security.Claims.Claim>objeto é definido como o valor da `identity` parâmetro.</xref:System.Security.Claims.Claim> </xref:System.Security.Claims.Claim.Subject%2A>"
  syntax:
    content: public virtual System.Security.Claims.Claim Clone (System.Security.Claims.ClaimsIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Claims.ClaimsIdentity
      description: "O assunto desejado da nova declaração."
    return:
      type: System.Security.Claims.Claim
      description: "O novo objeto de declaração."
  overload: System.Security.Claims.Claim.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.CustomSerializationData
  id: CustomSerializationData
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: CustomSerializationData
  nameWithType: Claim.CustomSerializationData
  fullName: System.Security.Claims.Claim.CustomSerializationData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual byte[] CustomSerializationData { get; }
    return:
      type: System.Byte[]
      description: "Retorna <xref:System.Byte>.</xref:System.Byte>"
  overload: System.Security.Claims.Claim.CustomSerializationData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Issuer
  id: Issuer
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Issuer
  nameWithType: Claim.Issuer
  fullName: System.Security.Claims.Claim.Issuer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém o emissor da declaração."
  remarks: "O valor da propriedade emissor é um nome que é executado em uma lista de emissores conhecidos mantida pelo registro de nome do emissor. O registro do nome do emissor é uma instância de uma classe que deriva de <xref:System.IdentityModel.Tokens.IssuerNameRegistry>classe.</xref:System.IdentityModel.Tokens.IssuerNameRegistry> O registro do nome do emissor associa um nome mnemônico (o nome do emissor) com o material criptográfico que é necessário para verificar as assinaturas dos tokens produzidos pelo emissor; Por exemplo, um certificado x.&509;."
  syntax:
    content: public string Issuer { get; }
    return:
      type: System.String
      description: "Um nome que se refere ao emissor da declaração."
  overload: System.Security.Claims.Claim.Issuer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.OriginalIssuer
  id: OriginalIssuer
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: OriginalIssuer
  nameWithType: Claim.OriginalIssuer
  fullName: System.Security.Claims.Claim.OriginalIssuer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém o emissor original da declaração."
  remarks: "Contém o nome da entidade que emitiu originalmente a declaração. Essa propriedade é projetada para facilitar cenários onde uma declaração pode passar vários emissores antes que ela é apresentada pelo cliente do aplicativo do RP. como os cenários de Federação.       O valor da propriedade OriginalIssuer é um nome que é executado em uma lista de emissores conhecidos mantida pelo registro de nome do emissor. O registro do nome do emissor é uma instância de uma classe que deriva de <xref:System.IdentityModel.Tokens.IssuerNameRegistry>classe.</xref:System.IdentityModel.Tokens.IssuerNameRegistry> O registro do nome do emissor associa um nome mnemônico (o nome do emissor) com o material criptográfico que é necessário para verificar as assinaturas dos tokens produzidos pelo emissor; Por exemplo, um certificado x.&509;.       Exceto para cenários de delegação e a federação, a <xref:System.Security.Claims.Claim.Issuer%2A>propriedade e a propriedade OriginalIssuer geralmente têm o mesmo valor.</xref:System.Security.Claims.Claim.Issuer%2A> Se o valor da propriedade OriginalIssuer for diferente do valor da <xref:System.Security.Claims.Claim.Issuer%2A>propriedade, a declaração foi emitida pela primeira vez, o emissor original e subsequentemente foi emitida novamente pelo emissor.</xref:System.Security.Claims.Claim.Issuer%2A>"
  syntax:
    content: public string OriginalIssuer { get; }
    return:
      type: System.String
      description: "Um nome que se refere ao emissor da declaração original."
  overload: System.Security.Claims.Claim.OriginalIssuer*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Properties
  id: Properties
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Properties
  nameWithType: Claim.Properties
  fullName: System.Security.Claims.Claim.Properties
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém um dicionário que contém propriedades adicionais associadas a esta declaração."
  remarks: "A propriedade de propriedades fornece um dicionário de pares nome-valor que permite metadados ou outras informações sobre a declaração a ser associado ele. Para declarações geradas de tokens SAML, esse dicionário pode conter chaves fornecidas pelas constantes na <xref:System.Security.Claims.ClaimProperties>classe.</xref:System.Security.Claims.ClaimProperties>"
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> Properties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Um dicionário que contém propriedades adicionais associadas a declaração. As propriedades são representadas como pares nome-valor."
  overload: System.Security.Claims.Claim.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Subject
  id: Subject
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Subject
  nameWithType: Claim.Subject
  fullName: System.Security.Claims.Claim.Subject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém o assunto da declaração."
  remarks: "O assunto é a entidade sobre os quais a declaração é declarada. Alguns exemplos comuns são um usuário, um aplicativo ou serviço, um dispositivo ou um computador. O assunto é representado por um <xref:System.Security.Claims.ClaimsIdentity>que contém uma coleção de declarações que descrevem o proprietário.</xref:System.Security.Claims.ClaimsIdentity>"
  syntax:
    content: public System.Security.Claims.ClaimsIdentity Subject { get; }
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "O assunto da declaração."
  overload: System.Security.Claims.Claim.Subject*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.ToString
  id: ToString
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: ToString()
  nameWithType: Claim.ToString()
  fullName: System.Security.Claims.Claim.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Retorna uma representação de cadeia de caracteres deste <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> objeto."
  remarks: 'A cadeia de caracteres retornada contém os valores de <xref:System.Security.Claims.Claim.Type%2A>e as propriedades de <xref:System.Security.Claims.Claim.Value%2A>no seguinte formato:. &quot; Tipo: valor &quot;.</xref:System.Security.Claims.Claim.Value%2A> </xref:System.Security.Claims.Claim.Type%2A>'
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A representação de cadeia de caracteres deste <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> objeto."
  overload: System.Security.Claims.Claim.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Type
  id: Type
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Type
  nameWithType: Claim.Type
  fullName: System.Security.Claims.Claim.Type
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém o tipo de declaração da declaração."
  remarks: "A propriedade Type fornece o conteúdo a semântico da declaração, ou seja, ela informa o que é a declaração sobre. Por exemplo, uma declaração com um tipo de declaração de <xref:System.Security.Claims.ClaimTypes.GivenName>(&quot;http://schemas.xmlsoap.org/ws/2005/05/identity/claims/givenname&quot;) representa o nome do usuário.</xref:System.Security.Claims.ClaimTypes.GivenName> O tipo de declaração normalmente é um URI. No entanto, não se limitam a qualquer formato específico diferente que deve ser representável como uma cadeia de caracteres. O requisito somente geral é que o emissor de declaração e o consumidor de declaração devem concordar sobre o significado da declaração. Constantes para os tipos de declaração bem conhecidos usados pelo Windows Identity Foundation (WIF) estão disponíveis por meio de <xref:System.Security.Claims.ClaimTypes>classe.</xref:System.Security.Claims.ClaimTypes> O valor da declaração é fornecido pelo <xref:System.Security.Claims.Claim.Value%2A>propriedade.</xref:System.Security.Claims.Claim.Value%2A>"
  syntax:
    content: public string Type { get; }
    return:
      type: System.String
      description: "O tipo de declaração."
  overload: System.Security.Claims.Claim.Type*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.Value
  id: Value
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: Value
  nameWithType: Claim.Value
  fullName: System.Security.Claims.Claim.Value
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém o valor da declaração."
  remarks: "O valor de uma declaração é representado somente como uma cadeia de caracteres. Para tipos de valor mais complexos, é recomendável que você use tipos de esquema XML padrão para indicar como o valor deve ser serializados e desserializados de e para uma cadeia de caracteres.       O <xref:System.Security.Claims.Claim.ValueType%2A>propriedade fornece as informações de tipo sintáticos subjacente sobre o valor.</xref:System.Security.Claims.Claim.ValueType%2A> A <xref:System.Security.Claims.Claim.Type%2A>propriedade fornece as semânticas informações sobre o valor; ou seja, ele fornece o significado do valor e informa um consumidor de declaração como interpretar o proprietário.</xref:System.Security.Claims.Claim.Type%2A>"
  syntax:
    content: public string Value { get; }
    return:
      type: System.String
      description: "O valor da declaração."
  overload: System.Security.Claims.Claim.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.ValueType
  id: ValueType
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: ValueType
  nameWithType: Claim.ValueType
  fullName: System.Security.Claims.Claim.ValueType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém o tipo de valor da declaração."
  remarks: "A propriedade ValueType contém uma cadeia de caracteres que identifica as informações do tipo do valor. Essa propriedade pode ser usada para entender o formato do valor e para fornecer informações sobre como serializar e desserializar o valor. Se sua solução requer tipos de valor complexo, é recomendável que você use tipos de esquema XML padrão na propriedade ValueType para indicar como o <xref:System.Security.Claims.Claim.Value%2A>propriedade deve ser serializados e desserializados de uma cadeia de caracteres.</xref:System.Security.Claims.Claim.Value%2A>"
  syntax:
    content: public string ValueType { get; }
    return:
      type: System.String
      description: "O tipo de valor de declaração."
  overload: System.Security.Claims.Claim.ValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)
  id: WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: WriteTo(BinaryWriter)
  nameWithType: Claim.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.Claim.WriteTo(BinaryWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public virtual void WriteTo (System.IO.BinaryWriter writer);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "A ser adicionado."
  overload: System.Security.Claims.Claim.WriteTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])
  id: WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.Claim
  langs:
  - csharp
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: Claim.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.Claim.WriteTo(BinaryWriter,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Grava isso <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> para o gravador."
  syntax:
    content: protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "O gravador de escrever esta declaração"
    - id: userData
      type: System.Byte[]
      description: "Os dados de usuário de declaração"
  overload: System.Security.Claims.Claim.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(BinaryReader)
  nameWithType: Claim.Claim(BinaryReader)
  fullName: System.Security.Claims.Claim.Claim(BinaryReader)
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(Claim)
  nameWithType: Claim.Claim(Claim)
  fullName: System.Security.Claims.Claim.Claim(Claim)
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.Security.Claims.Claim.#ctor(System.IO.BinaryReader,System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(BinaryReader,ClaimsIdentity)
  nameWithType: Claim.Claim(BinaryReader,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(BinaryReader,ClaimsIdentity)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Security.Claims.Claim.#ctor(System.Security.Claims.Claim,System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(Claim,ClaimsIdentity)
  nameWithType: Claim.Claim(Claim,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(Claim,ClaimsIdentity)
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String)
  nameWithType: Claim.Claim(String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String,String)
  nameWithType: Claim.Claim(String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String)
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String,String,String)
  nameWithType: Claim.Claim(String,String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String)
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String,String,String,String)
  nameWithType: Claim.Claim(String,String,String,String,String)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String,String)
- uid: System.Security.Claims.Claim.#ctor(System.String,System.String,System.String,System.String,System.String,System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim(String,String,String,String,String,ClaimsIdentity)
  nameWithType: Claim.Claim(String,String,String,String,String,ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Claim(String,String,String,String,String,ClaimsIdentity)
- uid: System.Security.Claims.Claim.Clone
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Clone()
  nameWithType: Claim.Clone()
  fullName: System.Security.Claims.Claim.Clone()
- uid: System.Security.Claims.Claim.Clone(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Clone(ClaimsIdentity)
  nameWithType: Claim.Clone(ClaimsIdentity)
  fullName: System.Security.Claims.Claim.Clone(ClaimsIdentity)
- uid: System.Security.Claims.Claim.CustomSerializationData
  parent: System.Security.Claims.Claim
  isExternal: false
  name: CustomSerializationData
  nameWithType: Claim.CustomSerializationData
  fullName: System.Security.Claims.Claim.CustomSerializationData
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Claims.Claim.Issuer
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Issuer
  nameWithType: Claim.Issuer
  fullName: System.Security.Claims.Claim.Issuer
- uid: System.Security.Claims.Claim.OriginalIssuer
  parent: System.Security.Claims.Claim
  isExternal: false
  name: OriginalIssuer
  nameWithType: Claim.OriginalIssuer
  fullName: System.Security.Claims.Claim.OriginalIssuer
- uid: System.Security.Claims.Claim.Properties
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Properties
  nameWithType: Claim.Properties
  fullName: System.Security.Claims.Claim.Properties
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.Claim.Subject
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Subject
  nameWithType: Claim.Subject
  fullName: System.Security.Claims.Claim.Subject
- uid: System.Security.Claims.Claim.ToString
  parent: System.Security.Claims.Claim
  isExternal: false
  name: ToString()
  nameWithType: Claim.ToString()
  fullName: System.Security.Claims.Claim.ToString()
- uid: System.Security.Claims.Claim.Type
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Type
  nameWithType: Claim.Type
  fullName: System.Security.Claims.Claim.Type
- uid: System.Security.Claims.Claim.Value
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Value
  nameWithType: Claim.Value
  fullName: System.Security.Claims.Claim.Value
- uid: System.Security.Claims.Claim.ValueType
  parent: System.Security.Claims.Claim
  isExternal: false
  name: ValueType
  nameWithType: Claim.ValueType
  fullName: System.Security.Claims.Claim.ValueType
- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.Claim
  isExternal: false
  name: WriteTo(BinaryWriter)
  nameWithType: Claim.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.Claim.WriteTo(BinaryWriter)
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.Security.Claims.Claim.WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.Claim
  isExternal: false
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: Claim.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.Claim.WriteTo(BinaryWriter,Byte[])
- uid: System.Security.Claims.Claim.#ctor*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Claim
  nameWithType: Claim.Claim
- uid: System.Security.Claims.Claim.Clone*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Clone
  nameWithType: Claim.Clone
- uid: System.Security.Claims.Claim.CustomSerializationData*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: CustomSerializationData
  nameWithType: Claim.CustomSerializationData
- uid: System.Security.Claims.Claim.Issuer*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Issuer
  nameWithType: Claim.Issuer
- uid: System.Security.Claims.Claim.OriginalIssuer*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: OriginalIssuer
  nameWithType: Claim.OriginalIssuer
- uid: System.Security.Claims.Claim.Properties*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Properties
  nameWithType: Claim.Properties
- uid: System.Security.Claims.Claim.Subject*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Subject
  nameWithType: Claim.Subject
- uid: System.Security.Claims.Claim.ToString*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: ToString
  nameWithType: Claim.ToString
- uid: System.Security.Claims.Claim.Type*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Type
  nameWithType: Claim.Type
- uid: System.Security.Claims.Claim.Value*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: Value
  nameWithType: Claim.Value
- uid: System.Security.Claims.Claim.ValueType*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: ValueType
  nameWithType: Claim.ValueType
- uid: System.Security.Claims.Claim.WriteTo*
  parent: System.Security.Claims.Claim
  isExternal: false
  name: WriteTo
  nameWithType: Claim.WriteTo
