### YamlMime:ManagedReference
items:
- uid: System.Web.UI.AuthenticationServiceManager
  id: AuthenticationServiceManager
  children:
  - System.Web.UI.AuthenticationServiceManager.#ctor
  - System.Web.UI.AuthenticationServiceManager.Path
  langs:
  - csharp
  name: AuthenticationServiceManager
  nameWithType: AuthenticationServiceManager
  fullName: System.Web.UI.AuthenticationServiceManager
  type: Class
  summary: "Configura o local de uma implementação personalizada do serviço de autenticação."
  remarks: "A classe AuthenticationServiceManager corresponde do <xref:System.Web.UI.ScriptManager.AuthenticationService%2A>propriedade o <xref:System.Web.UI.ScriptManager>ou <xref:System.Web.UI.ScriptManagerProxy>controle.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.AuthenticationService%2A>       A autenticação do serviço Web é usada por aplicativos habilitados para AJAX para fazer logon e logoff de script de cliente. Você pode usar AuthenticationServiceManager para fornecer o caminho de uma implementação alternativa da autenticação do serviço Web em vez de usar o serviço da Web interno que é fornecido pelos recursos AJAX do ASP.NET.       Para usar o serviço de autenticação em seu aplicativo, você deve habilitá-la no arquivo de configuração. Se você usar a serviço Web de autenticação interna, você não precisa declarar explicitamente a autenticação do service manager na página.       Para criar seu próprio serviço de autenticação, você deve implementar um serviço Web que tem dois métodos: `Login` e `Logout`. Além disso, esses métodos exigem a mesma assinatura do serviço Web de autenticação internos.       O exemplo a seguir mostra a estrutura de classe básica que deve ser implementada em uma classe de serviço Web de autenticação personalizado.       [!code-cs[XpsCreate #XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent) ] para usar uma serviço Web de autenticação personalizada, você pode adicionar o serviço declarativamente na marcação, incluindo um `<AuthenticationService>` elemento dentro do `<asp:ScriptManager>` elemento na página, conforme mostrado no exemplo a seguir.      ```   <asp:ScriptManager ID=&quot;SM1&quot; runat=&quot;server&quot;>     <AuthenticationService Path=&quot;MyAuthenticationService.asmx&quot; />   </asp:ScriptManager>   ```Você pode também configurar programaticamente o <xref:System.Web.UI.AuthenticationServiceManager.Path%2A>para usar uma serviço Web de autenticação personalizada.</xref:System.Web.UI.AuthenticationServiceManager.Path%2A>       Independentemente de se a seção declarativa para o serviço de autenticação está na página, se o serviço de autenticação está habilitado no arquivo de configuração, aplicativos habilitados para AJAX incluirá uma variável de ECMAScript (JavaScript) na página renderizada. Isso permite que o script de cliente para determinar se o usuário atual está autenticado."
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      [System.ComponentModel.TypeConverter(typeof(System.Web.UI.EmptyStringExpandableObjectConverter))]

      public class AuthenticationServiceManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.AuthenticationServiceManager.#ctor
  id: '#ctor'
  parent: System.Web.UI.AuthenticationServiceManager
  langs:
  - csharp
  name: AuthenticationServiceManager()
  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager()
  fullName: System.Web.UI.AuthenticationServiceManager.AuthenticationServiceManager()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.AuthenticationServiceManager&quot;> </xref> classe."
  syntax:
    content: public AuthenticationServiceManager ();
    parameters: []
  overload: System.Web.UI.AuthenticationServiceManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.AuthenticationServiceManager.Path
  id: Path
  parent: System.Web.UI.AuthenticationServiceManager
  langs:
  - csharp
  name: Path
  nameWithType: AuthenticationServiceManager.Path
  fullName: System.Web.UI.AuthenticationServiceManager.Path
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define o caminho do serviço de autenticação."
  remarks: "Se a propriedade Path não for definida, o valor de retorno é <xref:System.String?displayProperty=fullName>.</xref:System.String?displayProperty=fullName> Nesse caso, a funcionalidade AJAX no ASP.NET, em seguida, usará a autenticação interna serviço da Web que corresponde ao caminho padrão interno seguintes: ~ / ScriptServices_AuthenticationService.asmx. O mesmo comportamento ocorre se você definir o caminho para um valor vazio ou `null`.       Caminho pode ser especificado no <xref:System.Web.UI.ScriptManager>controle ou em um associado <xref:System.Web.UI.ScriptManagerProxy>controle.</xref:System.Web.UI.ScriptManagerProxy> </xref:System.Web.UI.ScriptManager> Quando o caminho é definido no <xref:System.Web.UI.ScriptManagerProxy>aplicam do nível, as seguintes condições:-se houver vários proxies na hierarquia de controle, caminho não precisa ser definida em cada instância do proxy.</xref:System.Web.UI.ScriptManagerProxy>      -Se o caminho é explicitamente definido em uma instância do proxy, o valor deve ser o mesmo para todos os outros proxies no qual essa propriedade é definida explicitamente."
  syntax:
    content: public string Path { get; set; }
    return:
      type: System.String
      description: "O caminho do serviço Web de autenticação personalizada."
  overload: System.Web.UI.AuthenticationServiceManager.Path*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Foi definido mais de um caminho exclusivo na hierarquia do controle."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.UI.AuthenticationServiceManager.#ctor
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: AuthenticationServiceManager()
  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager()
  fullName: System.Web.UI.AuthenticationServiceManager.AuthenticationServiceManager()
- uid: System.Web.UI.AuthenticationServiceManager.Path
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: Path
  nameWithType: AuthenticationServiceManager.Path
  fullName: System.Web.UI.AuthenticationServiceManager.Path
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.AuthenticationServiceManager.#ctor*
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: AuthenticationServiceManager
  nameWithType: AuthenticationServiceManager.AuthenticationServiceManager
- uid: System.Web.UI.AuthenticationServiceManager.Path*
  parent: System.Web.UI.AuthenticationServiceManager
  isExternal: false
  name: Path
  nameWithType: AuthenticationServiceManager.Path
