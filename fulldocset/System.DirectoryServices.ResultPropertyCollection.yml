### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ResultPropertyCollection
  id: ResultPropertyCollection
  children:
  - System.DirectoryServices.ResultPropertyCollection.Contains(System.String)
  - System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)
  - System.DirectoryServices.ResultPropertyCollection.Item(System.String)
  - System.DirectoryServices.ResultPropertyCollection.PropertyNames
  - System.DirectoryServices.ResultPropertyCollection.Values
  langs:
  - csharp
  name: ResultPropertyCollection
  nameWithType: ResultPropertyCollection
  fullName: System.DirectoryServices.ResultPropertyCollection
  type: Class
  summary: "Contém as propriedades de um <xref href=&quot;System.DirectoryServices.SearchResult&quot;> </xref> instância."
  remarks: "<xref:System.DirectoryServices.SearchResult>instâncias são semelhantes às <xref:System.DirectoryServices.DirectoryEntry>instâncias.</xref:System.DirectoryServices.DirectoryEntry></xref:System.DirectoryServices.SearchResult> A diferença importante é que o <xref:System.DirectoryServices.DirectoryEntry>recupera as informações da hierarquia de serviços de domínio do Active Directory sempre que um novo objeto é acessado, enquanto os dados para o <xref:System.DirectoryServices.SearchResult>já está disponível na <xref:System.DirectoryServices.SearchResultCollection>que um <xref:System.DirectoryServices.DirectorySearcher>consulta retorna.</xref:System.DirectoryServices.DirectorySearcher> </xref:System.DirectoryServices.SearchResultCollection> </xref:System.DirectoryServices.SearchResult> </xref:System.DirectoryServices.DirectoryEntry> Se você tentar obter um <xref:System.DirectoryServices.SearchResult>propriedade que sua consulta não especificou para recuperação, a propriedade não estará disponível.</xref:System.DirectoryServices.SearchResult>"
  syntax:
    content: 'public class ResultPropertyCollection : System.Collections.DictionaryBase'
  inheritance:
  - System.Object
  - System.Collections.DictionaryBase
  implements: []
  inheritedMembers:
  - System.Collections.DictionaryBase.Clear
  - System.Collections.DictionaryBase.CopyTo(System.Array,System.Int32)
  - System.Collections.DictionaryBase.Count
  - System.Collections.DictionaryBase.Dictionary
  - System.Collections.DictionaryBase.GetEnumerator
  - System.Collections.DictionaryBase.InnerHashtable
  - System.Collections.DictionaryBase.OnClear
  - System.Collections.DictionaryBase.OnClearComplete
  - System.Collections.DictionaryBase.OnGet(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsert(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnInsertComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemove(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnRemoveComplete(System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSet(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnSetComplete(System.Object,System.Object,System.Object)
  - System.Collections.DictionaryBase.OnValidate(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#ICollection#IsSynchronized
  - System.Collections.DictionaryBase.System#Collections#ICollection#SyncRoot
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Add(System.Object,System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Contains(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsFixedSize
  - System.Collections.DictionaryBase.System#Collections#IDictionary#IsReadOnly
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Item(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Keys
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Remove(System.Object)
  - System.Collections.DictionaryBase.System#Collections#IDictionary#Values
  - System.Collections.DictionaryBase.System#Collections#IEnumerable#GetEnumerator
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.DirectoryServices.ResultPropertyCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ResultPropertyCollection.Contains(String)
  fullName: System.DirectoryServices.ResultPropertyCollection.Contains(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Determina se a propriedade que tem o nome especificado pertence a esta coleção."
  syntax:
    content: public bool Contains (string propertyName);
    parameters:
    - id: propertyName
      type: System.String
      description: "O nome da propriedade a ser localizada."
    return:
      type: System.Boolean
      description: "O valor de retorno é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a propriedade especificada pertence a esta coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ResultPropertyCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)
  id: CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)
  parent: System.DirectoryServices.ResultPropertyCollection
  langs:
  - csharp
  name: CopyTo(ResultPropertyValueCollection[],Int32)
  nameWithType: ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[],Int32)
  fullName: System.DirectoryServices.ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[],Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Copia as propriedades dessa coleção em uma matriz, começando em um índice específico da matriz."
  syntax:
    content: public void CopyTo (System.DirectoryServices.ResultPropertyValueCollection[] array, int index);
    parameters:
    - id: array
      type: System.DirectoryServices.ResultPropertyValueCollection[]
      description: "Uma matriz do tipo <xref href=&quot;System.DirectoryServices.ResultPropertyValueCollection&quot;> </xref> que recebe as propriedades desta coleção."
    - id: index
      type: System.Int32
      description: "O índice de matriz com base em zero no qual começar a copiar as propriedades."
  overload: System.DirectoryServices.ResultPropertyCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyCollection.Item(System.String)
  id: Item(System.String)
  parent: System.DirectoryServices.ResultPropertyCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ResultPropertyCollection.Item(String)
  fullName: System.DirectoryServices.ResultPropertyCollection.Item(String)
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém a propriedade desta coleção que tem o nome especificado."
  remarks: "No c#, essa propriedade é o indexador de <xref:System.DirectoryServices.ResultPropertyValueCollection>classe.</xref:System.DirectoryServices.ResultPropertyValueCollection>       No JScript, você pode usar as propriedades indexadas padrão definidas por um tipo, mas você não pode definir explicitamente as suas próprias. No entanto, especificar que o atributo expando em uma classe fornece automaticamente um padrão propriedade cujo tipo é Object e cujo tipo de índice é <xref:System.String>.</xref:System.String> indexada"
  syntax:
    content: public System.DirectoryServices.ResultPropertyValueCollection this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "O nome da propriedade a recuperar."
    return:
      type: System.DirectoryServices.ResultPropertyValueCollection
      description: "Um <xref href=&quot;System.DirectoryServices.ResultPropertyValueCollection&quot;> </xref> que tem o nome especificado."
  overload: System.DirectoryServices.ResultPropertyCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyCollection.PropertyNames
  id: PropertyNames
  parent: System.DirectoryServices.ResultPropertyCollection
  langs:
  - csharp
  name: PropertyNames
  nameWithType: ResultPropertyCollection.PropertyNames
  fullName: System.DirectoryServices.ResultPropertyCollection.PropertyNames
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém os nomes das propriedades na coleção."
  syntax:
    content: public System.Collections.ICollection PropertyNames { get; }
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que contém os nomes das propriedades na coleção.</xref:System.Collections.ICollection>"
  overload: System.DirectoryServices.ResultPropertyCollection.PropertyNames*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ResultPropertyCollection.Values
  id: Values
  parent: System.DirectoryServices.ResultPropertyCollection
  langs:
  - csharp
  name: Values
  nameWithType: ResultPropertyCollection.Values
  fullName: System.DirectoryServices.ResultPropertyCollection.Values
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices
  summary: "Obtém os valores das propriedades na coleção."
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que contém os valores das propriedades na coleção.</xref:System.Collections.ICollection>"
  overload: System.DirectoryServices.ResultPropertyCollection.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Collections.DictionaryBase
  isExternal: false
  name: System.Collections.DictionaryBase
- uid: System.DirectoryServices.ResultPropertyCollection.Contains(System.String)
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: Contains(String)
  nameWithType: ResultPropertyCollection.Contains(String)
  fullName: System.DirectoryServices.ResultPropertyCollection.Contains(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ResultPropertyCollection.CopyTo(System.DirectoryServices.ResultPropertyValueCollection[],System.Int32)
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: CopyTo(ResultPropertyValueCollection[],Int32)
  nameWithType: ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[],Int32)
  fullName: System.DirectoryServices.ResultPropertyCollection.CopyTo(ResultPropertyValueCollection[],Int32)
- uid: System.DirectoryServices.ResultPropertyValueCollection[]
  parent: System.DirectoryServices
  isExternal: false
  name: ResultPropertyValueCollection
  nameWithType: ResultPropertyValueCollection
  fullName: System.DirectoryServices.ResultPropertyValueCollection[]
  spec.csharp:
  - uid: System.DirectoryServices.ResultPropertyValueCollection
    name: ResultPropertyValueCollection
    nameWithType: ResultPropertyValueCollection
    fullName: ResultPropertyValueCollection[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ResultPropertyCollection.Item(System.String)
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: Item(String)
  nameWithType: ResultPropertyCollection.Item(String)
  fullName: System.DirectoryServices.ResultPropertyCollection.Item(String)
- uid: System.DirectoryServices.ResultPropertyValueCollection
  parent: System.DirectoryServices
  isExternal: false
  name: ResultPropertyValueCollection
  nameWithType: ResultPropertyValueCollection
  fullName: System.DirectoryServices.ResultPropertyValueCollection
- uid: System.DirectoryServices.ResultPropertyCollection.PropertyNames
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: PropertyNames
  nameWithType: ResultPropertyCollection.PropertyNames
  fullName: System.DirectoryServices.ResultPropertyCollection.PropertyNames
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.DirectoryServices.ResultPropertyCollection.Values
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: Values
  nameWithType: ResultPropertyCollection.Values
  fullName: System.DirectoryServices.ResultPropertyCollection.Values
- uid: System.DirectoryServices.ResultPropertyCollection.Contains*
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: Contains
  nameWithType: ResultPropertyCollection.Contains
- uid: System.DirectoryServices.ResultPropertyCollection.CopyTo*
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: CopyTo
  nameWithType: ResultPropertyCollection.CopyTo
- uid: System.DirectoryServices.ResultPropertyCollection.Item*
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: Item
  nameWithType: ResultPropertyCollection.Item
- uid: System.DirectoryServices.ResultPropertyCollection.PropertyNames*
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: PropertyNames
  nameWithType: ResultPropertyCollection.PropertyNames
- uid: System.DirectoryServices.ResultPropertyCollection.Values*
  parent: System.DirectoryServices.ResultPropertyCollection
  isExternal: false
  name: Values
  nameWithType: ResultPropertyCollection.Values
