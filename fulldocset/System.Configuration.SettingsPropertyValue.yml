### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsPropertyValue
  id: SettingsPropertyValue
  children:
  - System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)
  - System.Configuration.SettingsPropertyValue.Deserialized
  - System.Configuration.SettingsPropertyValue.IsDirty
  - System.Configuration.SettingsPropertyValue.Name
  - System.Configuration.SettingsPropertyValue.Property
  - System.Configuration.SettingsPropertyValue.PropertyValue
  - System.Configuration.SettingsPropertyValue.SerializedValue
  - System.Configuration.SettingsPropertyValue.UsingDefaultValue
  langs:
  - csharp
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue
  fullName: System.Configuration.SettingsPropertyValue
  type: Class
  summary: "Contém o valor de uma propriedade de configurações que pode ser carregado e armazenado por uma instância do <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref>."
  remarks: "Uma representação de classe da parte real dos dados de perfil. Um <xref:System.Configuration.SettingsProperty>instância descreve um valor armazenado em uma instância de um objeto SettingsPropertyValue.</xref:System.Configuration.SettingsProperty>"
  syntax:
    content: public class SettingsPropertyValue
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)
  id: '#ctor(System.Configuration.SettingsProperty)'
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: SettingsPropertyValue(SettingsProperty)
  nameWithType: SettingsPropertyValue.SettingsPropertyValue(SettingsProperty)
  fullName: System.Configuration.SettingsPropertyValue.SettingsPropertyValue(SettingsProperty)
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> classe, com base nos parâmetros fornecidos."
  remarks: "> [!IMPORTANT]> Chamar esse método com dados não confiáveis é um risco de segurança. Chame este método apenas com dados confiáveis. Para obter mais informações, consulte [riscos de segurança de dados não confiável](http://go.microsoft.com/fwlink/?LinkId=330378).       O <xref:System.Configuration.SettingsProperty>objeto descreve informações sobre o valor armazenado pelo <xref:System.Configuration.SettingsPropertyValue>objeto.</xref:System.Configuration.SettingsPropertyValue> </xref:System.Configuration.SettingsProperty>"
  syntax:
    content: public SettingsPropertyValue (System.Configuration.SettingsProperty property);
    parameters:
    - id: property
      type: System.Configuration.SettingsProperty
      description: "Especifica um <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto."
  overload: System.Configuration.SettingsPropertyValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.Deserialized
  id: Deserialized
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: Deserialized
  nameWithType: SettingsPropertyValue.Deserialized
  fullName: System.Configuration.SettingsPropertyValue.Deserialized
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define se o valor de um <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto tiver sido desserializado."
  remarks: "Desserialização de valores de propriedade só é executada sob demanda."
  syntax:
    content: public bool Deserialized { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor de um <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto foi desserializada; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SettingsPropertyValue.Deserialized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.IsDirty
  id: IsDirty
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: IsDirty
  nameWithType: SettingsPropertyValue.IsDirty
  fullName: System.Configuration.SettingsPropertyValue.IsDirty
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define se o valor de um <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto foi alterado."
  remarks: "A propriedade IsDirty indica que o valor armazenado por esta classe foi alterado. O padrão é `false`. A propriedade IsDirty é definida como `true` sob as seguintes condições: 1.  O valor contido no <xref:System.Configuration.SettingsPropertyValue>objeto é alterado.</xref:System.Configuration.SettingsPropertyValue>      2.  O valor contido no <xref:System.Configuration.SettingsPropertyValue>objeto é acessado, e o valor não é uma cadeia de caracteres ou um tipo primitivo, como `int`, `float`, `real`, ou `DateTime`.</xref:System.Configuration.SettingsPropertyValue> Quando o valor é gerenciado por um <xref:System.Configuration.SettingsPropertyValue>objeto é um tipo complexo (por exemplo um <xref:System.Collections.ArrayList>), não é possível para um <xref:System.Configuration.SettingsPropertyValue>objeto detectar alterações foram feitas.</xref:System.Configuration.SettingsPropertyValue> </xref:System.Collections.ArrayList> </xref:System.Configuration.SettingsPropertyValue> Como resultado, o <xref:System.Configuration.SettingsPropertyValue>objeto pessimistically supõe que um tipo complexo foi alterado depois que tiver sido acessada a partir de <xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A>propriedade.</xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A> </xref:System.Configuration.SettingsPropertyValue>"
  syntax:
    content: public bool IsDirty { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor de um <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto alterado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SettingsPropertyValue.IsDirty*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.Name
  id: Name
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: Name
  nameWithType: SettingsPropertyValue.Name
  fullName: System.Configuration.SettingsPropertyValue.Name
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém o nome da propriedade do associado <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "O nome do <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto."
  overload: System.Configuration.SettingsPropertyValue.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.Property
  id: Property
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: Property
  nameWithType: SettingsPropertyValue.Property
  fullName: System.Configuration.SettingsPropertyValue.Property
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém o <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto."
  syntax:
    content: public System.Configuration.SettingsProperty Property { get; }
    return:
      type: System.Configuration.SettingsProperty
      description: "O <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto que descreve o <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> objeto."
  overload: System.Configuration.SettingsPropertyValue.Property*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.PropertyValue
  id: PropertyValue
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: PropertyValue
  nameWithType: SettingsPropertyValue.PropertyValue
  fullName: System.Configuration.SettingsPropertyValue.PropertyValue
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define o valor de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto."
  syntax:
    content: public object PropertyValue { get; set; }
    return:
      type: System.Object
      description: "O valor de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto. Quando esse valor é definido, o <> </> *> está definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e <> </> *> é definido como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.       Quando um valor é acessada pela primeira vez da propriedade PropertyValue, e se o valor foi inicialmente armazenado na <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> objeto como uma representação serializada usando o <> </> *> propriedade, a propriedade PropertyValue disparará a desserialização do valor subjacente.  Como um efeito colateral, o <> </> *> propriedade será definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.       Se essa cadeia de eventos ocorre no ASP.NET, e se ocorrer um erro durante a desserialização, o erro é registrado usando o recurso de monitoramento de integridade do ASP.NET. Por padrão, isso significa que os erros de desserialização aparecerão no Log de eventos do aplicativo ao executar em ASP.NET. Se esse processo ocorre fora do ASP.NET, se ocorrer um erro durante a desserialização, o erro é suprimido e o restante da lógica de durante a desserialização ocorre. Se não houver nenhum valor serializado a desserializar quando a desserialização tentativa, em seguida, <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> objeto em vez disso, tentar retornar um valor padrão se tiver sido configurado, conforme definido no associado <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> instância. Nesse caso, se o <> </> *> propriedade foi definida como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ou para a cadeia de caracteres &quot;[null]&quot;, em seguida, o <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> objeto inicializar a propriedade PropertyValue como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para tipos de referência, ou para o valor padrão para o tipo de valor associado.  Por outro lado, se <> </> *> propriedade contém um valor de cadeia de caracteres ou referência de objeto válido (diferente de &quot;[null]&quot;), em seguida, o <> </> *> propriedade é retornada em vez disso.       Se não houver nenhum valor serializado a desserializar quando uma tentativa de desserialização e foi especificado nenhum valor padrão, uma cadeia de caracteres vazia será retornada para os tipos de cadeia de caracteres. Para todos os outros tipos, uma instância padrão será retornada ao chamar <> </> *> — para isso significa que será feita uma tentativa para criar uma instância de objeto usando o construtor padrão de tipos de referência.  Se essa tentativa falhar, em seguida, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é retornado."
  overload: System.Configuration.SettingsPropertyValue.PropertyValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Ao tentar usar o valor padrão de <> </> *> propriedade, um erro.  Qualquer tentativa de converter <> </> *> falha de propriedade para um tipo válido, ou o valor resultante não era compatível com o tipo definido pelo <xref:System.Configuration.SettingsProperty.PropertyType*>.</xref:System.Configuration.SettingsProperty.PropertyType*>"
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.SerializedValue
  id: SerializedValue
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: SerializedValue
  nameWithType: SettingsPropertyValue.SerializedValue
  fullName: System.Configuration.SettingsPropertyValue.SerializedValue
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define o valor serializado a <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto."
  remarks: "Se o <xref:System.Configuration.SettingsPropertyValue>instância detecta que o <xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A>propriedade foi alterado desde a última vez em que a propriedade SerializedValue foi chamada, ela fará com que <xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A>propriedade a ser convertido em sua representação serializada.</xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A> </xref:System.Configuration.SettingsPropertyValue.PropertyValue%2A> </xref:System.Configuration.SettingsPropertyValue> O mecanismo de serialização específico a ser usado é definido pelo <xref:System.Configuration.SettingsProperty.SerializeAs%2A>propriedade o <xref:System.Configuration.SettingsProperty>instância associada a <xref:System.Configuration.SettingsPropertyValue>instância.</xref:System.Configuration.SettingsPropertyValue> </xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsProperty.SerializeAs%2A> As opções de serialização com suporte atuais são para converter o objeto em uma cadeia de caracteres usando um conversor de tipo de cadeia de caracteres, serializar usando o <xref:System.Xml.Serialization.XmlSerializer>, ou executar a serialização binária.</xref:System.Xml.Serialization.XmlSerializer>      > [!NOTE] > Os serializadores subjacentes podem gerar exceções durante o processo de serialização.       O código chamador imediato requer o <xref:System.Security.Permissions.SecurityPermissionFlag>permissão (uma das permissões disponíveis como parte do <xref:System.Security.Permissions.SecurityPermission>) para chamar o getter ou setter para esta propriedade.</xref:System.Security.Permissions.SecurityPermission> </xref:System.Security.Permissions.SecurityPermissionFlag>  Essa permissão é aplicada com uma <xref:System.Security.Permissions.SecurityAction>valor de enumeração.</xref:System.Security.Permissions.SecurityAction>"
  syntax:
    content: public object SerializedValue { get; set; }
    return:
      type: System.Object
      description: "O valor serializado de um <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto."
  overload: System.Configuration.SettingsPropertyValue.SerializedValue*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "As opções de serialização para a propriedade indicado o uso de um conversor de tipo de cadeia de caracteres, mas um conversor de tipo não estava disponível."
  platform:
  - net462
- uid: System.Configuration.SettingsPropertyValue.UsingDefaultValue
  id: UsingDefaultValue
  parent: System.Configuration.SettingsPropertyValue
  langs:
  - csharp
  name: UsingDefaultValue
  nameWithType: SettingsPropertyValue.UsingDefaultValue
  fullName: System.Configuration.SettingsPropertyValue.UsingDefaultValue
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém um valor booleano que especifica se o valor de <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> objeto é o valor padrão, conforme definido pelo <xref:System.Configuration.SettingsProperty.DefaultValue*>valor da propriedade associada <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto.</xref:System.Configuration.SettingsProperty.DefaultValue*>"
  syntax:
    content: public bool UsingDefaultValue { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor de <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objeto é o valor padrão; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SettingsPropertyValue.UsingDefaultValue*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.SettingsPropertyValue.#ctor(System.Configuration.SettingsProperty)
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: SettingsPropertyValue(SettingsProperty)
  nameWithType: SettingsPropertyValue.SettingsPropertyValue(SettingsProperty)
  fullName: System.Configuration.SettingsPropertyValue.SettingsPropertyValue(SettingsProperty)
- uid: System.Configuration.SettingsProperty
  parent: System.Configuration
  isExternal: false
  name: SettingsProperty
  nameWithType: SettingsProperty
  fullName: System.Configuration.SettingsProperty
- uid: System.Configuration.SettingsPropertyValue.Deserialized
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Deserialized
  nameWithType: SettingsPropertyValue.Deserialized
  fullName: System.Configuration.SettingsPropertyValue.Deserialized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SettingsPropertyValue.IsDirty
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: IsDirty
  nameWithType: SettingsPropertyValue.IsDirty
  fullName: System.Configuration.SettingsPropertyValue.IsDirty
- uid: System.Configuration.SettingsPropertyValue.Name
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Name
  nameWithType: SettingsPropertyValue.Name
  fullName: System.Configuration.SettingsPropertyValue.Name
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsPropertyValue.Property
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Property
  nameWithType: SettingsPropertyValue.Property
  fullName: System.Configuration.SettingsPropertyValue.Property
- uid: System.Configuration.SettingsPropertyValue.PropertyValue
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: PropertyValue
  nameWithType: SettingsPropertyValue.PropertyValue
  fullName: System.Configuration.SettingsPropertyValue.PropertyValue
- uid: System.Configuration.SettingsPropertyValue.SerializedValue
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: SerializedValue
  nameWithType: SettingsPropertyValue.SerializedValue
  fullName: System.Configuration.SettingsPropertyValue.SerializedValue
- uid: System.Configuration.SettingsPropertyValue.UsingDefaultValue
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: UsingDefaultValue
  nameWithType: SettingsPropertyValue.UsingDefaultValue
  fullName: System.Configuration.SettingsPropertyValue.UsingDefaultValue
- uid: System.Configuration.SettingsPropertyValue.#ctor*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: SettingsPropertyValue
  nameWithType: SettingsPropertyValue.SettingsPropertyValue
- uid: System.Configuration.SettingsPropertyValue.Deserialized*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Deserialized
  nameWithType: SettingsPropertyValue.Deserialized
- uid: System.Configuration.SettingsPropertyValue.IsDirty*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: IsDirty
  nameWithType: SettingsPropertyValue.IsDirty
- uid: System.Configuration.SettingsPropertyValue.Name*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Name
  nameWithType: SettingsPropertyValue.Name
- uid: System.Configuration.SettingsPropertyValue.Property*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: Property
  nameWithType: SettingsPropertyValue.Property
- uid: System.Configuration.SettingsPropertyValue.PropertyValue*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: PropertyValue
  nameWithType: SettingsPropertyValue.PropertyValue
- uid: System.Configuration.SettingsPropertyValue.SerializedValue*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: SerializedValue
  nameWithType: SettingsPropertyValue.SerializedValue
- uid: System.Configuration.SettingsPropertyValue.UsingDefaultValue*
  parent: System.Configuration.SettingsPropertyValue
  isExternal: false
  name: UsingDefaultValue
  nameWithType: SettingsPropertyValue.UsingDefaultValue
