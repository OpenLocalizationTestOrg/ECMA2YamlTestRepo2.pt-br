### YamlMime:ManagedReference
items:
- uid: System.Configuration.ConfigurationPermission
  id: ConfigurationPermission
  children:
  - System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)
  - System.Configuration.ConfigurationPermission.Copy
  - System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)
  - System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)
  - System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)
  - System.Configuration.ConfigurationPermission.IsUnrestricted
  - System.Configuration.ConfigurationPermission.ToXml
  - System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)
  langs:
  - csharp
  name: ConfigurationPermission
  nameWithType: ConfigurationPermission
  fullName: System.Configuration.ConfigurationPermission
  type: Class
  summary: "Fornece uma estrutura de permissão que permite métodos ou classes para acessar arquivos de configuração."
  remarks: "A classe ConfigurationPermission fornece uma estrutura de permissão que permite métodos ou classes para acessar arquivos de configuração. Além disso, ConfigurationPermission fornece maneiras de resolver vários valores de permissões por meio de métodos como <xref:System.Configuration.ConfigurationPermission.Union%2A>e <xref:System.Configuration.ConfigurationPermission.Intersect%2A>.</xref:System.Configuration.ConfigurationPermission.Intersect%2A> </xref:System.Configuration.ConfigurationPermission.Union%2A>"
  syntax:
    content: 'public sealed class ConfigurationPermission : System.Security.CodeAccessPermission, System.Security.Permissions.IUnrestrictedPermission'
  inheritance:
  - System.Object
  - System.Security.CodeAccessPermission
  implements:
  - System.Security.Permissions.IUnrestrictedPermission
  inheritedMembers:
  - System.Security.CodeAccessPermission.Assert
  - System.Security.CodeAccessPermission.Demand
  - System.Security.CodeAccessPermission.Deny
  - System.Security.CodeAccessPermission.Equals(System.Object)
  - System.Security.CodeAccessPermission.GetHashCode
  - System.Security.CodeAccessPermission.PermitOnly
  - System.Security.CodeAccessPermission.RevertAll
  - System.Security.CodeAccessPermission.RevertAssert
  - System.Security.CodeAccessPermission.RevertDeny
  - System.Security.CodeAccessPermission.RevertPermitOnly
  - System.Security.CodeAccessPermission.ToString
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)
  id: '#ctor(System.Security.Permissions.PermissionState)'
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: ConfigurationPermission(PermissionState)
  nameWithType: ConfigurationPermission.ConfigurationPermission(PermissionState)
  fullName: System.Configuration.ConfigurationPermission.ConfigurationPermission(PermissionState)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> classe."
  syntax:
    content: public ConfigurationPermission (System.Security.Permissions.PermissionState state);
    parameters:
    - id: state
      type: System.Security.Permissions.PermissionState
      description: "O nível de permissão para conceder."
  overload: System.Configuration.ConfigurationPermission.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The value of <code>state</code> is neither <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref> nor <xref href=&quot;System.Security.Permissions.PermissionState&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.Copy
  id: Copy
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: Copy()
  nameWithType: ConfigurationPermission.Copy()
  fullName: System.Configuration.ConfigurationPermission.Copy()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Retorna um novo <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> objeto com o mesmo nível de permissão."
  syntax:
    content: public override System.Security.IPermission Copy ();
    parameters: []
    return:
      type: System.Security.IPermission
      description: "Um novo <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> com o mesmo nível de permissão."
  overload: System.Configuration.ConfigurationPermission.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)
  id: FromXml(System.Security.SecurityElement)
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: FromXml(SecurityElement)
  nameWithType: ConfigurationPermission.FromXml(SecurityElement)
  fullName: System.Configuration.ConfigurationPermission.FromXml(SecurityElement)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Lê o valor do estado de permissão do XML."
  syntax:
    content: public override void FromXml (System.Security.SecurityElement securityElement);
    parameters:
    - id: securityElement
      type: System.Security.SecurityElement
      description: "O elemento de configuração do qual o estado da permissão é lido."
  overload: System.Configuration.ConfigurationPermission.FromXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>securityElement</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref uid=&quot;langword_csharp_unrestricted&quot; name=&quot;unrestricted&quot; href=&quot;&quot;></xref> attribute for the given <code>securityElement</code> is neither <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> nor <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)
  id: Intersect(System.Security.IPermission)
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: Intersect(IPermission)
  nameWithType: ConfigurationPermission.Intersect(IPermission)
  fullName: System.Configuration.ConfigurationPermission.Intersect(IPermission)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Retorna a interseção lógica entre o <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> objeto e um determinado objeto que implementa o <xref href=&quot;System.Security.IPermission&quot;> </xref> interface."
  remarks: "Embora a assinatura do método aceita qualquer objeto que implementa o <xref:System.Security.IPermission>interface, um <xref:System.ArgumentException>exceção será lançada se chamar o <xref:System.Object.GetType%2A>método no objeto referenciado pelo `target` parâmetro não retorna <xref:System.Configuration.ConfigurationPermission?displayProperty=fullName>.</xref:System.Configuration.ConfigurationPermission?displayProperty=fullName> </xref:System.Object.GetType%2A> </xref:System.ArgumentException> </xref:System.Security.IPermission>"
  syntax:
    content: public override System.Security.IPermission Intersect (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "O objeto que contém as permissões para executar a intersecção com."
    return:
      type: System.Security.IPermission
      description: "A interseção lógica entre o <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> e um determinado objeto que implementa <xref href=&quot;System.Security.IPermission&quot;> </xref>."
  overload: System.Configuration.ConfigurationPermission.Intersect*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>não é digitado como <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)
  id: IsSubsetOf(System.Security.IPermission)
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: IsSubsetOf(IPermission)
  nameWithType: ConfigurationPermission.IsSubsetOf(IPermission)
  fullName: System.Configuration.ConfigurationPermission.IsSubsetOf(IPermission)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Compara o <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> objeto com um objeto que implementa o <xref href=&quot;System.Security.IPermission&quot;> </xref> interface."
  remarks: "Embora a assinatura do método aceita qualquer objeto que implementa o <xref:System.Security.IPermission>interface, um <xref:System.ArgumentException>exceção será lançada se chamar o <xref:System.Object.GetType%2A>método no objeto referenciado pelo `target` parâmetro não retorna <xref:System.Configuration.ConfigurationPermission?displayProperty=fullName>.</xref:System.Configuration.ConfigurationPermission?displayProperty=fullName> </xref:System.Object.GetType%2A> </xref:System.ArgumentException> </xref:System.Security.IPermission>       Se o objeto referenciado pelo `target` parâmetro é `null`, a comparação é feita entre o estado de permissão do <xref:System.Configuration.ConfigurationPermission>objeto e o <xref:System.Security.Permissions.PermissionState>valor o <xref:System.Security.Permissions.PermissionState>enumeração.</xref:System.Security.Permissions.PermissionState> </xref:System.Security.Permissions.PermissionState> </xref:System.Configuration.ConfigurationPermission>"
  syntax:
    content: public override bool IsSubsetOf (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "O objeto a ser comparado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o estado de permissão é igual; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationPermission.IsSubsetOf*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>não é digitado como <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref>."
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.IsUnrestricted
  id: IsUnrestricted
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: IsUnrestricted()
  nameWithType: ConfigurationPermission.IsUnrestricted()
  fullName: System.Configuration.ConfigurationPermission.IsUnrestricted()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Indica se o estado de permissão para o <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> objeto é o <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valor o <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> enumeração."
  syntax:
    content: public bool IsUnrestricted ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o estado de permissão para o <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> é o <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref> valor <xref href=&quot;System.Security.Permissions.PermissionState&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.ConfigurationPermission.IsUnrestricted*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.ToXml
  id: ToXml
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: ToXml()
  nameWithType: ConfigurationPermission.ToXml()
  fullName: System.Configuration.ConfigurationPermission.ToXml()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Retorna um <xref href=&quot;System.Security.SecurityElement&quot;> </xref> objeto com valores de atributo com base na atual <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> objeto."
  syntax:
    content: public override System.Security.SecurityElement ToXml ();
    parameters: []
    return:
      type: System.Security.SecurityElement
      description: "Um <xref href=&quot;System.Security.SecurityElement&quot;> </xref> com valores de atributo com base na atual <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref>."
  overload: System.Configuration.ConfigurationPermission.ToXml*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)
  id: Union(System.Security.IPermission)
  parent: System.Configuration.ConfigurationPermission
  langs:
  - csharp
  name: Union(IPermission)
  nameWithType: ConfigurationPermission.Union(IPermission)
  fullName: System.Configuration.ConfigurationPermission.Union(IPermission)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Retorna a união lógica do <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> objeto e um objeto que implementa o <xref href=&quot;System.Security.IPermission&quot;> </xref> interface."
  syntax:
    content: public override System.Security.IPermission Union (System.Security.IPermission target);
    parameters:
    - id: target
      type: System.Security.IPermission
      description: "O objeto para executar a união com."
    return:
      type: System.Security.IPermission
      description: "A união lógica do <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref> e um objeto que implementa <xref href=&quot;System.Security.IPermission&quot;> </xref>."
  overload: System.Configuration.ConfigurationPermission.Union*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>target</code>não é digitado como <xref href=&quot;System.Configuration.ConfigurationPermission&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Security.CodeAccessPermission
  isExternal: false
  name: System.Security.CodeAccessPermission
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Configuration.ConfigurationPermission.#ctor(System.Security.Permissions.PermissionState)
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: ConfigurationPermission(PermissionState)
  nameWithType: ConfigurationPermission.ConfigurationPermission(PermissionState)
  fullName: System.Configuration.ConfigurationPermission.ConfigurationPermission(PermissionState)
- uid: System.Security.Permissions.PermissionState
  parent: System.Security.Permissions
  isExternal: false
  name: PermissionState
  nameWithType: PermissionState
  fullName: System.Security.Permissions.PermissionState
- uid: System.Configuration.ConfigurationPermission.Copy
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: Copy()
  nameWithType: ConfigurationPermission.Copy()
  fullName: System.Configuration.ConfigurationPermission.Copy()
- uid: System.Security.IPermission
  parent: System.Security
  isExternal: false
  name: IPermission
  nameWithType: IPermission
  fullName: System.Security.IPermission
- uid: System.Configuration.ConfigurationPermission.FromXml(System.Security.SecurityElement)
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: FromXml(SecurityElement)
  nameWithType: ConfigurationPermission.FromXml(SecurityElement)
  fullName: System.Configuration.ConfigurationPermission.FromXml(SecurityElement)
- uid: System.Security.SecurityElement
  parent: System.Security
  isExternal: false
  name: SecurityElement
  nameWithType: SecurityElement
  fullName: System.Security.SecurityElement
- uid: System.Configuration.ConfigurationPermission.Intersect(System.Security.IPermission)
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: Intersect(IPermission)
  nameWithType: ConfigurationPermission.Intersect(IPermission)
  fullName: System.Configuration.ConfigurationPermission.Intersect(IPermission)
- uid: System.Configuration.ConfigurationPermission.IsSubsetOf(System.Security.IPermission)
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: IsSubsetOf(IPermission)
  nameWithType: ConfigurationPermission.IsSubsetOf(IPermission)
  fullName: System.Configuration.ConfigurationPermission.IsSubsetOf(IPermission)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.ConfigurationPermission.IsUnrestricted
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: IsUnrestricted()
  nameWithType: ConfigurationPermission.IsUnrestricted()
  fullName: System.Configuration.ConfigurationPermission.IsUnrestricted()
- uid: System.Configuration.ConfigurationPermission.ToXml
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: ToXml()
  nameWithType: ConfigurationPermission.ToXml()
  fullName: System.Configuration.ConfigurationPermission.ToXml()
- uid: System.Configuration.ConfigurationPermission.Union(System.Security.IPermission)
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: Union(IPermission)
  nameWithType: ConfigurationPermission.Union(IPermission)
  fullName: System.Configuration.ConfigurationPermission.Union(IPermission)
- uid: System.Configuration.ConfigurationPermission.#ctor*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: ConfigurationPermission
  nameWithType: ConfigurationPermission.ConfigurationPermission
- uid: System.Configuration.ConfigurationPermission.Copy*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: Copy
  nameWithType: ConfigurationPermission.Copy
- uid: System.Configuration.ConfigurationPermission.FromXml*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: FromXml
  nameWithType: ConfigurationPermission.FromXml
- uid: System.Configuration.ConfigurationPermission.Intersect*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: Intersect
  nameWithType: ConfigurationPermission.Intersect
- uid: System.Configuration.ConfigurationPermission.IsSubsetOf*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: IsSubsetOf
  nameWithType: ConfigurationPermission.IsSubsetOf
- uid: System.Configuration.ConfigurationPermission.IsUnrestricted*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: IsUnrestricted
  nameWithType: ConfigurationPermission.IsUnrestricted
- uid: System.Configuration.ConfigurationPermission.ToXml*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: ToXml
  nameWithType: ConfigurationPermission.ToXml
- uid: System.Configuration.ConfigurationPermission.Union*
  parent: System.Configuration.ConfigurationPermission
  isExternal: false
  name: Union
  nameWithType: ConfigurationPermission.Union
