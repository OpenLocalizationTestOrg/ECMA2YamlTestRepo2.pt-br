### YamlMime:ManagedReference
items:
- uid: System.Data.DBConcurrencyException
  id: DBConcurrencyException
  children:
  - System.Data.DBConcurrencyException.#ctor
  - System.Data.DBConcurrencyException.#ctor(System.String)
  - System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)
  - System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])
  - System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])
  - System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)
  - System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Data.DBConcurrencyException.Row
  - System.Data.DBConcurrencyException.RowCount
  langs:
  - csharp
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException
  fullName: System.Data.DBConcurrencyException
  type: Class
  summary: "A exceção que é lançada pelo <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> durante uma inserção, atualização ou exclusão operação se o número de linhas afetadas é igual a zero."
  remarks: "O <xref:System.Data.Common.DataAdapter>examina o número de linhas afetadas pela execução de cada inserção, atualização ou operação de exclusão e lança esta exceção se o número for igual a zero.</xref:System.Data.Common.DataAdapter> Essa exceção geralmente é causada por uma violação de concorrência."
  syntax:
    content: 'public sealed class DBConcurrencyException : SystemException'
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.#ctor
  id: '#ctor'
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: DBConcurrencyException()
  nameWithType: DBConcurrencyException.DBConcurrencyException()
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref> classe."
  remarks: "O construtor padrão inicializa quaisquer campos com seus valores padrão."
  syntax:
    content: public DBConcurrencyException ();
    parameters: []
  overload: System.Data.DBConcurrencyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: DBConcurrencyException(String)
  nameWithType: DBConcurrencyException.DBConcurrencyException(String)
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref> classe."
  syntax:
    content: public DBConcurrencyException (string message);
    parameters:
    - id: message
      type: System.String
      description: "A cadeia de caracteres de texto que descreve os detalhes da exceção."
  overload: System.Data.DBConcurrencyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: DBConcurrencyException(String,Exception)
  nameWithType: DBConcurrencyException.DBConcurrencyException(String,Exception)
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String,Exception)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref> classe."
  remarks: "Você pode criar uma nova exceção que captura uma exceção anterior. O código que manipula a segunda exceção pode usar as informações adicionais da exceção anterior, também chamada de uma exceção interna, para examinar a causa do erro inicial."
  syntax:
    content: public DBConcurrencyException (string message, Exception inner);
    parameters:
    - id: message
      type: System.String
      description: "A cadeia de caracteres de texto que descreve os detalhes da exceção."
    - id: inner
      type: System.Exception
      description: "Uma referência a uma exceção interna."
  overload: System.Data.DBConcurrencyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])
  id: '#ctor(System.String,System.Exception,System.Data.DataRow[])'
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: DBConcurrencyException(String,Exception,DataRow[])
  nameWithType: DBConcurrencyException.DBConcurrencyException(String,Exception,DataRow[])
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String,Exception,DataRow[])
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref> classe."
  syntax:
    content: public DBConcurrencyException (string message, Exception inner, System.Data.DataRow[] dataRows);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de erro que explica o motivo para essa exceção."
    - id: inner
      type: System.Exception
      description: "A exceção que é a causa da exceção atual ou uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic) se nenhuma exceção interna é especificada."
    - id: dataRows
      type: System.Data.DataRow[]
      description: "Uma matriz que contém o <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos cuja falha de atualização gerado essa exceção."
  overload: System.Data.DBConcurrencyException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])
  id: CopyToRows(System.Data.DataRow[])
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: CopyToRows(DataRow[])
  nameWithType: DBConcurrencyException.CopyToRows(DataRow[])
  fullName: System.Data.DBConcurrencyException.CopyToRows(DataRow[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Copia o <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos cuja falha de atualização gerado essa exceção, a matriz especificada de <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos."
  remarks: "Ao executar atualizações em lotes com o <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>propriedade o <xref:System.Data.Common.DataAdapter>definido como `true`, essa exceção é gerada se todas as falhas de atualizações de linha.</xref:System.Data.Common.DataAdapter> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Nesse caso, isso <xref:System.Data.DBConcurrencyException>contém <xref:System.Data.DataRow>objetos para todas as linhas cuja atualização falha, em vez de apenas aquele <xref:System.Data.DataRow>objeto <xref:System.Data.DBConcurrencyException.Row%2A>e afetados <xref:System.Data.DataRow>objetos podem ser recuperados chamando <xref:System.Data.DBConcurrencyException.CopyToRows%2A>.</xref:System.Data.DBConcurrencyException.CopyToRows%2A> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException.Row%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException>"
  syntax:
    content: public void CopyToRows (System.Data.DataRow[] array);
    parameters:
    - id: array
      type: System.Data.DataRow[]
      description: "A matriz unidimensional de <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos para copiar o <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos em."
  overload: System.Data.DBConcurrencyException.CopyToRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)
  id: CopyToRows(System.Data.DataRow[],System.Int32)
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: CopyToRows(DataRow[],Int32)
  nameWithType: DBConcurrencyException.CopyToRows(DataRow[],Int32)
  fullName: System.Data.DBConcurrencyException.CopyToRows(DataRow[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Copia o <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos cuja falha de atualização gerado essa exceção, a matriz especificada de <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos, começando no índice de matriz de destino especificado."
  remarks: "Ao executar atualizações em lotes com o <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>propriedade o <xref:System.Data.Common.DataAdapter>definido como `true`, essa exceção é gerada se todas as falhas de atualizações de linha.</xref:System.Data.Common.DataAdapter> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Nesse caso, isso <xref:System.Data.DBConcurrencyException>contém <xref:System.Data.DataRow>objetos para todas as linhas cuja atualização falha, em vez de apenas aquele <xref:System.Data.DataRow>objeto <xref:System.Data.DBConcurrencyException.Row%2A>e afetados <xref:System.Data.DataRow>objetos podem ser recuperados chamando <xref:System.Data.DBConcurrencyException.CopyToRows%2A>.</xref:System.Data.DBConcurrencyException.CopyToRows%2A> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException.Row%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException>"
  syntax:
    content: public void CopyToRows (System.Data.DataRow[] array, int arrayIndex);
    parameters:
    - id: array
      type: System.Data.DataRow[]
      description: "A matriz unidimensional de <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos para copiar o <xref href=&quot;System.Data.DataRow&quot;> </xref> objetos em."
    - id: arrayIndex
      type: System.Int32
      description: "O índice de matriz de destino para iniciar a cópia em."
  overload: System.Data.DBConcurrencyException.CopyToRows*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DBConcurrencyException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.DBConcurrencyException.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Preenche o objeto de informações de serialização aprcified com os dados necessários para serializar o <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref>."
  syntax:
    content: public override void GetObjectData (System.Runtime.Serialization.SerializationInfo si, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: si
      type: System.Runtime.Serialization.SerializationInfo
      description: "Um <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> que contém os dados serializados associados a <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref>."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "Um <xref:System.Runtime.Serialization.StreamingContext>que contém a origem e destino do fluxo serializado associados com a <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref>.</xref:System.Runtime.Serialization.StreamingContext>"
  overload: System.Data.DBConcurrencyException.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> info </code> parâmetro é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.Row
  id: Row
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: Row
  nameWithType: DBConcurrencyException.Row
  fullName: System.Data.DBConcurrencyException.Row
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém ou define o valor de <xref href=&quot;System.Data.DataRow&quot;> </xref> que gerou o <xref href=&quot;System.Data.DBConcurrencyException&quot;> </xref>."
  remarks: "Usar linha para recuperar o valor da <xref:System.Data.DataRow>linha que gerou o <xref:System.Data.DBConcurrencyException>.</xref:System.Data.DBConcurrencyException> </xref:System.Data.DataRow> Definir o valor da <xref:System.Data.DataRow>não tem nenhum efeito.</xref:System.Data.DataRow>       Ao executar atualizações em lotes com o <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>propriedade o <xref:System.Data.Common.DataAdapter>definido como `true`, essa exceção é gerada se todas as falhas de atualizações de linha.</xref:System.Data.Common.DataAdapter> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Nesse caso, este <xref:System.Data.DBConcurrencyException>contém <xref:System.Data.DataRow>objetos de todas as linhas cuja atualização falha, em vez de apenas a um <xref:System.Data.DataRow>objeto na linha e afetados <xref:System.Data.DataRow>objetos podem ser recuperados chamando <xref:System.Data.DBConcurrencyException.CopyToRows%2A>.</xref:System.Data.DBConcurrencyException.CopyToRows%2A> </xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DataRow> </xref:System.Data.DBConcurrencyException>       Não existe suporte de serialização para <xref:System.Data.DataRow>objetos.</xref:System.Data.DataRow> Portanto, se você serializar um <xref:System.Data.DBConcurrencyException>do objeto, o valor da propriedade de linha na versão do objeto serializado é definido como um valor nulo.</xref:System.Data.DBConcurrencyException>"
  syntax:
    content: public System.Data.DataRow Row { get; set; }
    return:
      type: System.Data.DataRow
      description: "O valor de <xref href=&quot;System.Data.DataRow&quot;> </xref>."
  overload: System.Data.DBConcurrencyException.Row*
  exceptions: []
  platform:
  - net462
- uid: System.Data.DBConcurrencyException.RowCount
  id: RowCount
  parent: System.Data.DBConcurrencyException
  langs:
  - csharp
  name: RowCount
  nameWithType: DBConcurrencyException.RowCount
  fullName: System.Data.DBConcurrencyException.RowCount
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o número de linhas cuja atualização falha, gerar essa exceção."
  syntax:
    content: public int RowCount { get; }
    return:
      type: System.Int32
      description: "Um inteiro que contém a contagem do número de linhas cuja atualização falha."
  overload: System.Data.DBConcurrencyException.RowCount*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Data.DBConcurrencyException.#ctor
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException()
  nameWithType: DBConcurrencyException.DBConcurrencyException()
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException()
- uid: System.Data.DBConcurrencyException.#ctor(System.String)
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException(String)
  nameWithType: DBConcurrencyException.DBConcurrencyException(String)
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DBConcurrencyException.#ctor(System.String,System.Exception)
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException(String,Exception)
  nameWithType: DBConcurrencyException.DBConcurrencyException(String,Exception)
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Data.DBConcurrencyException.#ctor(System.String,System.Exception,System.Data.DataRow[])
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException(String,Exception,DataRow[])
  nameWithType: DBConcurrencyException.DBConcurrencyException(String,Exception,DataRow[])
  fullName: System.Data.DBConcurrencyException.DBConcurrencyException(String,Exception,DataRow[])
- uid: System.Data.DataRow[]
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow[]
  spec.csharp:
  - uid: System.Data.DataRow
    name: DataRow
    nameWithType: DataRow
    fullName: DataRow[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[])
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: CopyToRows(DataRow[])
  nameWithType: DBConcurrencyException.CopyToRows(DataRow[])
  fullName: System.Data.DBConcurrencyException.CopyToRows(DataRow[])
- uid: System.Data.DBConcurrencyException.CopyToRows(System.Data.DataRow[],System.Int32)
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: CopyToRows(DataRow[],Int32)
  nameWithType: DBConcurrencyException.CopyToRows(DataRow[],Int32)
  fullName: System.Data.DBConcurrencyException.CopyToRows(DataRow[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DBConcurrencyException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: DBConcurrencyException.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Data.DBConcurrencyException.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Data.DBConcurrencyException.Row
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: Row
  nameWithType: DBConcurrencyException.Row
  fullName: System.Data.DBConcurrencyException.Row
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.DBConcurrencyException.RowCount
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: RowCount
  nameWithType: DBConcurrencyException.RowCount
  fullName: System.Data.DBConcurrencyException.RowCount
- uid: System.Data.DBConcurrencyException.#ctor*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException.DBConcurrencyException
- uid: System.Data.DBConcurrencyException.CopyToRows*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: CopyToRows
  nameWithType: DBConcurrencyException.CopyToRows
- uid: System.Data.DBConcurrencyException.GetObjectData*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: GetObjectData
  nameWithType: DBConcurrencyException.GetObjectData
- uid: System.Data.DBConcurrencyException.Row*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: Row
  nameWithType: DBConcurrencyException.Row
- uid: System.Data.DBConcurrencyException.RowCount*
  parent: System.Data.DBConcurrencyException
  isExternal: false
  name: RowCount
  nameWithType: DBConcurrencyException.RowCount
