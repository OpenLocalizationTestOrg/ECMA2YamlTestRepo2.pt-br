### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ScriptReference
  id: ScriptReference
  children:
  - System.Web.UI.ScriptReference.#ctor
  - System.Web.UI.ScriptReference.#ctor(System.String)
  - System.Web.UI.ScriptReference.#ctor(System.String,System.String)
  - System.Web.UI.ScriptReference.Assembly
  - System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)
  - System.Web.UI.ScriptReference.IgnoreScriptPath
  - System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)
  - System.Web.UI.ScriptReference.IsFromSystemWebExtensions
  - System.Web.UI.ScriptReference.Name
  - System.Web.UI.ScriptReference.ToString
  langs:
  - csharp
  name: ScriptReference
  nameWithType: ScriptReference
  fullName: System.Web.UI.ScriptReference
  type: Class
  summary: "Registra um arquivo ECMAScript (JavaScript) para uso em uma página da Web do ASP.NET."
  remarks: "Você pode incluir um arquivo JavaScript em uma página da Web do ASP.NET, registrando-os por meio de um objeto ScriptReference. Você pode registrar um arquivo de script está localizado como um arquivo. js (um arquivo de script estático) no site da Web. Você também pode registrar um arquivo de script que é inserido como um recurso em um assembly. Depois de registrar o arquivo de script, você pode usar suas funções no script de cliente na página da Web.       Para registrar um arquivo de script estático, defina o <xref:System.Web.UI.ScriptReferenceBase.Path%2A>propriedade do objeto para o local relativo do arquivo ScriptReference.</xref:System.Web.UI.ScriptReferenceBase.Path%2A>       Para registrar um arquivo de script que é inserido como um recurso em um assembly, defina o <xref:System.Web.UI.ScriptReference.Assembly%2A>propriedade para o nome do assembly que contém o arquivo.</xref:System.Web.UI.ScriptReference.Assembly%2A> Em seguida, defina o <xref:System.Web.UI.ScriptReference.Name%2A>propriedade para o nome do arquivo que está inserido no assembly.</xref:System.Web.UI.ScriptReference.Name%2A> Nesse caso, o arquivo de script deve ser inserido, não vinculado.       Defina a <xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A>propriedade para indicar se deseja usar a depuração ou a versão do script.</xref:System.Web.UI.ScriptReferenceBase.ScriptMode%2A>       O <xref:System.Web.UI.ScriptMode>valor produz resultados diferentes dependendo se ela se refere a um arquivo de script autônomo ou em um arquivo de script que será inserido como um recurso em um assembly.</xref:System.Web.UI.ScriptMode> Um arquivo de script autônomo é definido com o <xref:System.Web.UI.ScriptReferenceBase.Path%2A>propriedade.</xref:System.Web.UI.ScriptReferenceBase.Path%2A> Uma referência de assembly deve ser acessada por meio de <xref:System.Web.UI.ScriptReference.Name%2A>e <xref:System.Web.UI.ScriptReference.Assembly%2A>Propriedades.</xref:System.Web.UI.ScriptReference.Assembly%2A> </xref:System.Web.UI.ScriptReference.Name%2A> Os resultados para o <xref:System.Web.UI.ScriptMode>valor são os seguintes: - quando ela é aplicada a um arquivo de script autônomo onde o <xref:System.Web.UI.ScriptReferenceBase.Path%2A>propriedade for especificada, o <xref:System.Web.UI.ScriptMode>valor é equivalente a <xref:System.Web.UI.ScriptMode>.</xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptReferenceBase.Path%2A> </xref:System.Web.UI.ScriptMode>      -Quando ele é aplicado a uma referência de script em um assembly, que <xref:System.Web.UI.ScriptMode>é equivalente a <xref:System.Web.UI.ScriptMode>.</xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptMode> Quando só <xref:System.Web.UI.ScriptReference.Name%2A>é especificado, ele é usado para referenciar o script.</xref:System.Web.UI.ScriptReference.Name%2A> Quando <xref:System.Web.UI.ScriptReference.Name%2A>e o <xref:System.Web.UI.ScriptReferenceBase.Path%2A>propriedade forem especificados, o <xref:System.Web.UI.ScriptReferenceBase.Path%2A>propriedade é usada em vez de <xref:System.Web.UI.ScriptReference.Name%2A>, mas o <xref:System.Web.UI.ScriptMode>valor é equivalente ainda <xref:System.Web.UI.ScriptMode>.</xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptMode> </xref:System.Web.UI.ScriptReference.Name%2A> </xref:System.Web.UI.ScriptReferenceBase.Path%2A> </xref:System.Web.UI.ScriptReferenceBase.Path%2A> </xref:System.Web.UI.ScriptReference.Name%2A>"
  example:
  - "The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly. The assembly is assumed to be in the Bin folder of the Web site. The custom control animates <xref:System.Web.UI.UpdatePanel> controls. The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js. You register the embedded JavaScript file by using the <xref:System.Web.UI.ScriptReference.Assembly%2A> and <xref:System.Web.UI.ScriptReference.Name%2A> properties.  \n  \n To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control. Put the resulting assembly into the Bin folder of the Web site. For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](~/add/includes/ajax-current-ext-md.md).  \n  \n The following example shows a page that uses the custom control.  \n  \n [!code-cs[System.Web.UI.ScriptReference#1](~/add/codesnippet/csharp/t-system.web.ui.scriptre_0_1.aspx)]\n [!code-vb[System.Web.UI.ScriptReference#1](~/add/codesnippet/visualbasic/t-system.web.ui.scriptre_0_1.aspx)]  \n  \n The following example shows the custom control class definition.  \n  \n [!code-cs[System.Web.UI.ScriptReference#2](~/add/codesnippet/csharp/t-system.web.ui.scriptre_0_2.cs)]\n [!code-vb[System.Web.UI.ScriptReference#2](~/add/codesnippet/visualbasic/t-system.web.ui.scriptre_0_2.vb)]  \n  \n The following example shows the supporting JavaScript file.  \n  \n [!code-javascript[System.Web.UI.ScriptReference#3](~/add/codesnippet/javascript/t-system.web.ui.scriptre_0_3.js)]  \n  \n The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.  \n  \n [!code-cs[System.Web.UI.ScriptReference#4](~/add/codesnippet/csharp/t-system.web.ui.scriptre_0_4.cs)]\n [!code-vb[System.Web.UI.ScriptReference#4](~/add/codesnippet/visualbasic/t-system.web.ui.scriptre_0_4.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Path")]

      public class ScriptReference : System.Web.UI.ScriptReferenceBase
  inheritance:
  - System.Object
  - System.Web.UI.ScriptReferenceBase
  implements: []
  inheritedMembers:
  - System.Web.UI.ScriptReferenceBase.NotifyScriptLoaded
  - System.Web.UI.ScriptReferenceBase.Path
  - System.Web.UI.ScriptReferenceBase.ReplaceExtension(System.String)
  - System.Web.UI.ScriptReferenceBase.ResourceUICultures
  - System.Web.UI.ScriptReferenceBase.ScriptMode
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.#ctor
  id: '#ctor'
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: ScriptReference()
  nameWithType: ScriptReference.ScriptReference()
  fullName: System.Web.UI.ScriptReference.ScriptReference()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref> classe."
  syntax:
    content: public ScriptReference ();
    parameters: []
  overload: System.Web.UI.ScriptReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: ScriptReference(String)
  nameWithType: ScriptReference.ScriptReference(String)
  fullName: System.Web.UI.ScriptReference.ScriptReference(String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref> classe usando um caminho especificado."
  syntax:
    content: public ScriptReference (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho do arquivo de script de cliente em relação a página da Web."
  overload: System.Web.UI.ScriptReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: ScriptReference(String,String)
  nameWithType: ScriptReference.ScriptReference(String,String)
  fullName: System.Web.UI.ScriptReference.ScriptReference(String,String)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.ScriptReference&quot;> </xref> classe usando um nome especificado e o assembly."
  syntax:
    content: public ScriptReference (string name, string assembly);
    parameters:
    - id: name
      type: System.String
      description: "O nome do arquivo de script que é inserido no assembly."
    - id: assembly
      type: System.String
      description: "O nome do assembly que contém o arquivo de script de cliente como um recurso inserido."
  overload: System.Web.UI.ScriptReference.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.Assembly
  id: Assembly
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: Assembly
  nameWithType: ScriptReference.Assembly
  fullName: System.Web.UI.ScriptReference.Assembly
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define o nome do assembly que contém o arquivo de script de cliente como um recurso inserido."
  remarks: "Quando você faz referência a um arquivo de script de cliente que é incluído como um recurso inserido em um assembly, você definir a propriedade do Assembly. Defina o Assembly para o nome de assembly totalmente qualificado ou parcialmente qualificado. Um nome de assembly totalmente qualificado inclui um nome, cultura, chave pública e número de versão. Um nome de assembly parcialmente qualificado inclui apenas um nome.       Quando você especificar um valor para o Assembly, você também deve especificar o nome do recurso incorporado no <xref:System.Web.UI.ScriptReference.Name%2A>propriedade.</xref:System.Web.UI.ScriptReference.Name%2A> Caso contrário, um <xref:System.InvalidOperationException>será lançada.</xref:System.InvalidOperationException>       O assembly que está sendo referenciado deve ser localizado na pasta Bin do site da Web ou no cache de assembly global."
  example:
  - "The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly. The assembly is assumed to be in the Bin folder of the Web site. The custom control animates <xref:System.Web.UI.UpdatePanel> controls. The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js. You register the embedded JavaScript file by using the Assembly and <xref:System.Web.UI.ScriptReference.Name%2A> properties.  \n  \n To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control. Put the resulting assembly into the Bin folder of the Web site. For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](~/add/includes/ajax-current-ext-md.md).  \n  \n The following example shows a page that uses the custom control.  \n  \n [!code-cs[System.Web.UI.ScriptReference#1](~/add/codesnippet/csharp/p-system.web.ui.scriptre_1_1.aspx)]\n [!code-vb[System.Web.UI.ScriptReference#1](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_1_1.aspx)]  \n  \n The following example shows the custom control class definition.  \n  \n [!code-cs[System.Web.UI.ScriptReference#2](~/add/codesnippet/csharp/p-system.web.ui.scriptre_1_2.cs)]\n [!code-vb[System.Web.UI.ScriptReference#2](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_1_2.vb)]  \n  \n The following example shows the supporting JavaScript file.  \n  \n [!code-javascript[System.Web.UI.ScriptReference#3](~/add/codesnippet/javascript/p-system.web.ui.scriptre_1_3.js)]  \n  \n The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.  \n  \n [!code-cs[System.Web.UI.ScriptReference#4](~/add/codesnippet/csharp/p-system.web.ui.scriptre_1_4.cs)]\n [!code-vb[System.Web.UI.ScriptReference#4](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_1_4.vb)]"
  syntax:
    content: public string Assembly { get; set; }
    return:
      type: System.String
      description: "O nome totalmente qualificado ou parcialmente qualificado do assembly que contém um arquivo de script de cliente como um recurso inserido."
  overload: System.Web.UI.ScriptReference.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)
  id: GetUrl(System.Web.UI.ScriptManager,System.Boolean)
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: GetUrl(ScriptManager,Boolean)
  nameWithType: ScriptReference.GetUrl(ScriptManager,Boolean)
  fullName: System.Web.UI.ScriptReference.GetUrl(ScriptManager,Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Recupera a URL que é renderizada como o valor de <xref uid=&quot;langword_csharp_src&quot; name=&quot;src&quot; href=&quot;&quot;> </xref> atributo do <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elemento."
  syntax:
    content: protected override string GetUrl (System.Web.UI.ScriptManager scriptManager, bool zip);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "O <xref uid=&quot;langword_csharp_ScriptManager&quot; name=&quot;ScriptManager&quot; href=&quot;&quot;> </xref> controle na página da Web de destino."
    - id: zip
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o script deve ser compactado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém a URL que é processada como o valor de <xref uid=&quot;langword_csharp_src&quot; name=&quot;src&quot; href=&quot;&quot;> </xref> atributo do <xref uid=&quot;langword_csharp_script&quot; name=&quot;script&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Web.UI.ScriptReference.GetUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.IgnoreScriptPath
  id: IgnoreScriptPath
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: IgnoreScriptPath
  nameWithType: ScriptReference.IgnoreScriptPath
  fullName: System.Web.UI.ScriptReference.IgnoreScriptPath
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se o <xref:System.Web.UI.ScriptManager.ScriptPath*>propriedade está incluída na URL ao registrar um arquivo de script de cliente de um recurso.</xref:System.Web.UI.ScriptManager.ScriptPath*>"
  remarks: "Defina IgnoreScriptPath como `true` quando quiser registrar um arquivo de script de cliente sem incluir o <xref:System.Web.UI.ScriptManager.ScriptPath%2A>valor na URL do arquivo de script.</xref:System.Web.UI.ScriptManager.ScriptPath%2A>"
  syntax:
    content: public bool IgnoreScriptPath { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o caminho do script não é usado quando você registrar o script de cliente; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ScriptReference.IgnoreScriptPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)
  id: IsAjaxFrameworkScript(System.Web.UI.ScriptManager)
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: IsAjaxFrameworkScript(ScriptManager)
  nameWithType: ScriptReference.IsAjaxFrameworkScript(ScriptManager)
  fullName: System.Web.UI.ScriptReference.IsAjaxFrameworkScript(ScriptManager)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Determina se a referência de script é um script AJAX."
  syntax:
    content: protected override bool IsAjaxFrameworkScript (System.Web.UI.ScriptManager scriptManager);
    parameters:
    - id: scriptManager
      type: System.Web.UI.ScriptManager
      description: "A <xref href=&quot;System.Web.UI.ScriptManager&quot;></xref> object."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a referência de script é um script AJAX; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ScriptReference.IsAjaxFrameworkScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.IsFromSystemWebExtensions
  id: IsFromSystemWebExtensions
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: IsFromSystemWebExtensions()
  nameWithType: ScriptReference.IsFromSystemWebExtensions()
  fullName: System.Web.UI.ScriptReference.IsFromSystemWebExtensions()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Indica se o script compostas contém uma referência a um script do ASP.NET AJAX framework."
  syntax:
    content: protected override bool IsFromSystemWebExtensions ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o script compostas contém uma referência a um script do ASP.NET AJAX framework; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ScriptReference.IsFromSystemWebExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.Name
  id: Name
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: Name
  nameWithType: ScriptReference.Name
  fullName: System.Web.UI.ScriptReference.Name
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define o nome do recurso incorporado que contém o arquivo de script de cliente."
  remarks: "Você definir a propriedade de nome para fazer referência a um arquivo de script de cliente que será inserido como um recurso em um assembly.       Se você definir valores para ambos os <xref:System.Web.UI.ScriptReferenceBase.Path%2A>e propriedades de nome da referência de script, o <xref:System.Web.UI.ScriptReferenceBase.Path%2A>propriedade terá precedência.</xref:System.Web.UI.ScriptReferenceBase.Path%2A> </xref:System.Web.UI.ScriptReferenceBase.Path%2A>"
  example:
  - "The following example shows how to reference a custom control and a JavaScript file that is embedded in the control assembly. The assembly is assumed to be in the Bin folder of the Web site. The custom control animates <xref:System.Web.UI.UpdatePanel> controls. The JavaScript file is compiled as an embedded resource that is named SampleControl.UpdatePanelAnimation.js. You register the embedded JavaScript file by using the <xref:System.Web.UI.ScriptReference.Assembly%2A> and Name properties.  \n  \n To use this example, compile the JavaScript file that is shown in the example as an embedded resource with the custom control. Put the resulting assembly into the Bin folder of the Web site. For an example of how to embed a JavaScript file in an assembly, see [Walkthrough: Embedding a JavaScript File as a Resource in an Assembly](~/add/includes/ajax-current-ext-md.md).  \n  \n The following example shows a page that uses the custom control.  \n  \n [!code-cs[System.Web.UI.ScriptReference#1](~/add/codesnippet/csharp/p-system.web.ui.scriptre_4_1.aspx)]\n [!code-vb[System.Web.UI.ScriptReference#1](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_4_1.aspx)]  \n  \n The following example shows the custom control class definition.  \n  \n [!code-cs[System.Web.UI.ScriptReference#2](~/add/codesnippet/csharp/p-system.web.ui.scriptre_4_2.cs)]\n [!code-vb[System.Web.UI.ScriptReference#2](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_4_2.vb)]  \n  \n The following example shows the supporting JavaScript file.  \n  \n [!code-javascript[System.Web.UI.ScriptReference#3](~/add/codesnippet/javascript/p-system.web.ui.scriptre_4_3.js)]  \n  \n The following example shows code that you must add to the AssemblyInfo file of the project that contains the custom control and the JavaScript file.  \n  \n [!code-cs[System.Web.UI.ScriptReference#4](~/add/codesnippet/csharp/p-system.web.ui.scriptre_4_4.cs)]\n [!code-vb[System.Web.UI.ScriptReference#4](~/add/codesnippet/visualbasic/p-system.web.ui.scriptre_4_4.vb)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome do arquivo de script de cliente que será inserido como um recurso em um assembly."
  overload: System.Web.UI.ScriptReference.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ScriptReference.ToString
  id: ToString
  parent: System.Web.UI.ScriptReference
  langs:
  - csharp
  name: ToString()
  nameWithType: ScriptReference.ToString()
  fullName: System.Web.UI.ScriptReference.ToString()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Retorna uma cadeia de caracteres que representa o valor da <> </> *> propriedade, o <> </> *> propriedade ou o nome do tipo."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "O valor da <> </> *> propriedade se ela está definida ou o valor da <> </> *> propriedade estiver definida; caso contrário, o valor do <xref:System.Reflection.MemberInfo.Name*>propriedade.</xref:System.Reflection.MemberInfo.Name*>"
  overload: System.Web.UI.ScriptReference.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.ScriptReferenceBase
  isExternal: false
  name: System.Web.UI.ScriptReferenceBase
- uid: System.Web.UI.ScriptReference.#ctor
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ScriptReference()
  nameWithType: ScriptReference.ScriptReference()
  fullName: System.Web.UI.ScriptReference.ScriptReference()
- uid: System.Web.UI.ScriptReference.#ctor(System.String)
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ScriptReference(String)
  nameWithType: ScriptReference.ScriptReference(String)
  fullName: System.Web.UI.ScriptReference.ScriptReference(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ScriptReference.#ctor(System.String,System.String)
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ScriptReference(String,String)
  nameWithType: ScriptReference.ScriptReference(String,String)
  fullName: System.Web.UI.ScriptReference.ScriptReference(String,String)
- uid: System.Web.UI.ScriptReference.Assembly
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: Assembly
  nameWithType: ScriptReference.Assembly
  fullName: System.Web.UI.ScriptReference.Assembly
- uid: System.Web.UI.ScriptReference.GetUrl(System.Web.UI.ScriptManager,System.Boolean)
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: GetUrl(ScriptManager,Boolean)
  nameWithType: ScriptReference.GetUrl(ScriptManager,Boolean)
  fullName: System.Web.UI.ScriptReference.GetUrl(ScriptManager,Boolean)
- uid: System.Web.UI.ScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ScriptManager
  nameWithType: ScriptManager
  fullName: System.Web.UI.ScriptManager
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ScriptReference.IgnoreScriptPath
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IgnoreScriptPath
  nameWithType: ScriptReference.IgnoreScriptPath
  fullName: System.Web.UI.ScriptReference.IgnoreScriptPath
- uid: System.Web.UI.ScriptReference.IsAjaxFrameworkScript(System.Web.UI.ScriptManager)
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IsAjaxFrameworkScript(ScriptManager)
  nameWithType: ScriptReference.IsAjaxFrameworkScript(ScriptManager)
  fullName: System.Web.UI.ScriptReference.IsAjaxFrameworkScript(ScriptManager)
- uid: System.Web.UI.ScriptReference.IsFromSystemWebExtensions
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IsFromSystemWebExtensions()
  nameWithType: ScriptReference.IsFromSystemWebExtensions()
  fullName: System.Web.UI.ScriptReference.IsFromSystemWebExtensions()
- uid: System.Web.UI.ScriptReference.Name
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: Name
  nameWithType: ScriptReference.Name
  fullName: System.Web.UI.ScriptReference.Name
- uid: System.Web.UI.ScriptReference.ToString
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ToString()
  nameWithType: ScriptReference.ToString()
  fullName: System.Web.UI.ScriptReference.ToString()
- uid: System.Web.UI.ScriptReference.#ctor*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ScriptReference
  nameWithType: ScriptReference.ScriptReference
- uid: System.Web.UI.ScriptReference.Assembly*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: Assembly
  nameWithType: ScriptReference.Assembly
- uid: System.Web.UI.ScriptReference.GetUrl*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: GetUrl
  nameWithType: ScriptReference.GetUrl
- uid: System.Web.UI.ScriptReference.IgnoreScriptPath*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IgnoreScriptPath
  nameWithType: ScriptReference.IgnoreScriptPath
- uid: System.Web.UI.ScriptReference.IsAjaxFrameworkScript*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IsAjaxFrameworkScript
  nameWithType: ScriptReference.IsAjaxFrameworkScript
- uid: System.Web.UI.ScriptReference.IsFromSystemWebExtensions*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: IsFromSystemWebExtensions
  nameWithType: ScriptReference.IsFromSystemWebExtensions
- uid: System.Web.UI.ScriptReference.Name*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: Name
  nameWithType: ScriptReference.Name
- uid: System.Web.UI.ScriptReference.ToString*
  parent: System.Web.UI.ScriptReference
  isExternal: false
  name: ToString
  nameWithType: ScriptReference.ToString
