### YamlMime:ManagedReference
items:
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy
  id: FileSystemProxy
  children:
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)
  - Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  langs:
  - csharp
  name: FileSystemProxy
  nameWithType: FileSystemProxy
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy
  type: Class
  summary: "Fornece propriedades e métodos para trabalhar com unidades, arquivos e diretórios."
  remarks: "A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem` objeto.      | Para | Consulte |   |--------|---------|   | Ler um arquivo de texto | [Como: ler arquivos de texto](~/add/includes/ajax-current-ext-md.md)|   | Ler um arquivo de texto delimitado | [Como: ler arquivos de texto delimitado por vírgula](~/add/includes/ajax-current-ext-md.md)|   | Ler um arquivo de texto de largura fixa | [Como: ler arquivos de texto de largura fixa](~/add/includes/ajax-current-ext-md.md)|   | Ler um arquivo de texto com vários formatos | [Como: ler arquivos de texto com vários formatos](~/add/includes/ajax-current-ext-md.md)|   | Ler um arquivo binário | [Como: leitura de arquivos binários](~/add/includes/ajax-current-ext-md.md)|   | Ler um arquivo de texto com um <xref:System.IO.StreamReader>|[ Como: ler texto de arquivos com um StreamReader](~/add/includes/ajax-current-ext-md.md)|   | Gravar em um arquivo de texto | [Como: gravar texto em arquivos](~/add/includes/ajax-current-ext-md.md)|   | Anexar a um arquivo de texto | [Como: anexar a arquivos de texto](~/add/includes/ajax-current-ext-md.md)|   | Gravar em um arquivo binário | [Como: gravar em arquivos binários](~/add/includes/ajax-current-ext-md.md)|   | Gravar em arquivos de texto no **Meus documentos** diretório |[ Como: gravar texto em arquivos do diretório Meus documentos](~/add/includes/ajax-current-ext-md.md)|   | Gravar em um arquivo de texto com um `StreamWriter` | [como: gravar texto em arquivos com um StreamWriter](~/add/includes/ajax-current-ext-md.md)|   | Copiar arquivos com um padrão específico | [Como: copiar arquivos com um padrão específico para um diretório](~/add/includes/ajax-current-ext-md.md)|   | Copiar um arquivo para o mesmo diretório | [Como: criar uma cópia de um arquivo no mesmo diretório](~/add/includes/ajax-current-ext-md.md)|   | Copiar um arquivo para um diretório diferente | [Como: criar uma cópia de um arquivo em um diretório diferente](~/add/includes/ajax-current-ext-md.md)|   | Criar um arquivo | [Como: criar um arquivo](~/add/includes/ajax-current-ext-md.md)|   | Excluir um arquivo | [Como: excluir um arquivo](~/add/includes/ajax-current-ext-md.md)|   | Localizar arquivos com um padrão específico | [Como: localizar arquivos com um padrão específico](~/add/includes/ajax-current-ext-md.md)|   | Mover um arquivo | [Como: mover um arquivo](~/add/includes/ajax-current-ext-md.md)|   | Renomear um arquivo | [Como: renomear um arquivo](~/add/includes/ajax-current-ext-md.md)|   | Copiar um diretório para outro diretório | [Como: copiar um diretório para outro diretório](~/add/includes/ajax-current-ext-md.md)|   | Crie um diretório | [Como: criar um diretório](~/add/includes/ajax-current-ext-md.md)|   | Localizar subdiretórios com um padrão específico | [Como: localizar subdiretórios com um padrão específico](~/add/includes/ajax-current-ext-md.md)|   | Obter a coleção de arquivos em um diretório | [Como: obter a coleção de arquivos em um diretório](~/add/includes/ajax-current-ext-md.md)|   | Ler a partir de **Meus documentos** diretório |[ Como: recuperar o conteúdo do diretório Meus documentos](~/add/includes/ajax-current-ext-md.md)|   | Analisar um caminho de arquivo | [Como: analisar caminhos de arquivo](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example checks to determine whether the folder `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbVbcnMyFileSystem#23](~/add/codesnippet/visualbasic/t-microsoft.visualbasic._13_1.vb)]"
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public class FileSystemProxy
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)
  id: CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CombinePath(String,String)
  nameWithType: FileSystemProxy.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Combina dois caminhos e retorna um caminho corretamente formatado."
  remarks: "Este método corta caracteres de barra em excesso para criar um caminho corretamente formatado.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.CombinePath` método.      | Para | Consulte |   |--------|---------|   | Combinar um nome de arquivo e caminho do diretório | [Como: analisar caminhos de arquivo](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example combines a directory path and file name to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#3](~/add/codesnippet/visualbasic/8a958ad2-079d-43c8-9ab0-_1.vb)]  \n  \n This example combines two paths to create a properly formatted path.  \n  \n [!code-vb[VbRefFile#4](~/add/codesnippet/visualbasic/8a958ad2-079d-43c8-9ab0-_2.vb)]  \n  \n This example returns `C:\\Dir1\\Dir2\\Dir4\\Dir5\\File.txt`."
  syntax:
    content: public string CombinePath (string baseDirectory, string relativePath);
    parameters:
    - id: baseDirectory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Primeiro caminho a ser combinado."
    - id: relativePath
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Segundo caminho a ser combinado."
    return:
      type: System.String
      description: "A combinação de caminhos especificados."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>baseDirectory</code>ou <code>relativePath</code> caminhos malformado."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)
  id: CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyDirectory(String,String)
  nameWithType: FileSystemProxy.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Copia um diretório para outro diretório."
  remarks: "Esse método copia o conteúdo do diretório, bem como o diretório em si. Se o diretório de destino não existir, ele será criado. Se um diretório com o mesmo nome existe no local de destino, o conteúdo dos dois diretórios é mesclado. Você pode especificar um novo nome para o diretório durante a operação.       Ao copiar arquivos em um diretório, exceções podem ser geradas que são causadas por um arquivo específico. Quando essas exceções são lançadas, eles são consolidados em uma única exceção cuja `Data` propriedade contém entradas na forma de um <xref:System.Collections.IDictionary>no qual o caminho de arquivo ou diretório é a chave e a mensagem de exceção específica está contida no valor correspondente.</xref:System.Collections.IDictionary> Use `For…Each` para enumerar as entradas.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.CopyDirectory` método.      | Para | Consulte |   |--------|---------|   | Copiar um diretório | [Como: copiar um diretório para outro diretório](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/239273f2-9d6f-48a8-9a46-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "O diretório a ser copiado."
    - id: destinationDirectoryName
      type: System.String
      description: "O local para o qual o diretório deve ser copiado."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>ou <code>sourceDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório de origem não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O caminho de origem e o caminho de destino são os mesmos."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de pasta no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Um arquivo de destino existe, mas não pode ser acessado."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Copia um diretório para outro diretório."
  remarks: "Esse método copia o conteúdo do diretório, bem como o diretório em si. Se o diretório de destino não existir, ele será criado. Se um diretório com o mesmo nome existe no local de destino, o conteúdo dos dois diretórios é mesclado. Você pode especificar um novo nome para o diretório durante a operação.       Ao copiar arquivos em um diretório, exceções podem ser geradas que são causadas por um arquivo específico. Quando essas exceções são lançadas, eles são consolidados em uma única exceção cuja `Data` propriedade contém entradas na forma de um <xref:System.Collections.IDictionary>no qual o caminho de arquivo ou diretório é a chave e a mensagem de exceção específica está contida no valor correspondente.</xref:System.Collections.IDictionary> Use `For…Each` para enumerar as entradas.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.CopyDirectory` método.      | Para | Consulte |   |--------|---------|   | Copiar um diretório | [Como: copiar um diretório para outro diretório](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/88ad980f-7c55-41f5-ae9e-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "O diretório a ser copiado."
    - id: destinationDirectoryName
      type: System.String
      description: "O local para o qual o diretório deve ser copiado."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Se deve controlar visualmente o progresso da operação. O padrão é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>ou <code>sourceDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório de origem não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O caminho de origem e o caminho de destino são os mesmos."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de pasta no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Um arquivo de destino existe, mas não pode ser acessado."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>é definido como <xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;> </xref> e o usuário cancela a operação, ou um ou mais arquivos no diretório não podem ser copiados."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)
  id: CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Copia um diretório para outro diretório."
  remarks: "Esse método copia o conteúdo do diretório, bem como o diretório em si. Se o diretório de destino não existir, ele será criado. Se um diretório com o mesmo nome existe no local de destino, o conteúdo dos dois diretórios é mesclado. Você pode especificar um novo nome para o diretório durante a operação.       Ao copiar arquivos em um diretório, exceções podem ser geradas que são causadas por um arquivo específico, como um arquivo existente durante uma mesclagem enquanto `overwrite` é definido como `False`. Quando essas exceções são lançadas, eles são consolidados em uma única exceção cuja `Data` propriedade contém entradas na forma de um <xref:System.Collections.IDictionary>no qual o caminho de arquivo ou diretório é a chave e a mensagem de exceção específica está contida no valor correspondente.</xref:System.Collections.IDictionary> Use `For…Each` para enumerar as entradas.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.CopyDirectory` método.      | Para | Consulte |   |--------|---------|   | Copiar um diretório | [Como: copiar um diretório para outro diretório](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/029fa5e0-f9d2-4d2b-ae58-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "O diretório a ser copiado."
    - id: destinationDirectoryName
      type: System.String
      description: "O local para o qual o diretório deve ser copiado."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para substituir arquivos existentes; Caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>ou <code>sourceDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório de origem não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O caminho de origem e o caminho de destino são os mesmos."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de pasta no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Um arquivo de destino existe, mas não pode ser acessado."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Copia um diretório para outro diretório."
  remarks: "Esse método copia o conteúdo do diretório, bem como o diretório em si. Se o diretório de destino não existir, ele será criado. Se um diretório com o mesmo nome existe no local de destino, o conteúdo dos dois diretórios é mesclado. Você pode especificar um novo nome para o diretório durante a operação.       Ao copiar arquivos em um diretório, exceções podem ser geradas que são causadas por um arquivo específico. Quando essas exceções são lançadas, eles são consolidados em uma única exceção cuja `Data` propriedade contém entradas na forma de um <xref:System.Collections.IDictionary>no qual o caminho de arquivo ou diretório é a chave e a mensagem de exceção específica está contida no valor correspondente.</xref:System.Collections.IDictionary> Use `For…Each` para enumerar as entradas.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.CopyDirectory` método.      | Para | Consulte |   |--------|---------|   | Copiar um diretório | [Como: copiar um diretório para outro diretório](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example copies the directory `TestDirectory1` into `TestDirectory2`, overwriting existing files.  \n  \n [!code-vb[VbVbcnMyFileSystem#49](~/add/codesnippet/visualbasic/045c3090-625f-4707-88c2-_1.vb)]  \n  \n Replace `C:\\TestDirectory1` and `C:\\TestDirectory2` with the path and name of the directory you wish to copy and the location to which you wish to copy it."
  syntax:
    content: public void CopyDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "O diretório a ser copiado."
    - id: destinationDirectoryName
      type: System.String
      description: "O local para o qual o diretório deve ser copiado."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Se deve controlar visualmente o progresso da operação. O padrão é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Especifica o que deve ser feito se o usuário clica em **Cancelar** durante a operação. O padrão é <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationDirectoryName</code>ou <code>sourceDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório de origem não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O caminho de origem e o caminho de destino são os mesmos."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de pasta no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "Um arquivo de destino existe, mas não pode ser acessado."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>ShowUI</code>é definido como <xref uid=&quot;langword_csharp_UIOption.AllDialogs&quot; name=&quot;UIOption.AllDialogs&quot; href=&quot;&quot;> </xref> e o usuário cancela a operação, ou um ou mais arquivos no diretório não podem ser copiados."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)
  id: CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyFile(String,String)
  nameWithType: FileSystemProxy.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Copia um arquivo para um novo local."
  remarks: "`CopyFile`não preserva as ACEs (entradas de controle de acesso). O arquivo recém-criado herda ACEs padrão do diretório no qual ele é criado.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.CopyFile` método.      | Para | Consulte |   |--------|---------|   | Copiar um arquivo no mesmo diretório. | [Como: criar uma cópia de um arquivo no mesmo diretório](~/add/includes/ajax-current-ext-md.md)|   | Copiar um arquivo para um diretório diferente. | [Como: criar uma cópia de um arquivo em um diretório diferente](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/35aff9d2-1370-4c0f-b055-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/35aff9d2-1370-4c0f-b055-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O arquivo a ser copiado."
    - id: destinationFileName
      type: System.String
      description: "O local para o qual o arquivo deve ser copiado."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>contém informações de caminho."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>ou <code>sourceFileName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Um arquivo no diretório de destino com o mesmo nome está em uso."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem a permissão necessária."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystemProxy.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Copia um arquivo para um novo local."
  remarks: "`CopyFile`não preserva as ACEs (entradas de controle de acesso). O arquivo recém-criado herda ACEs padrão do diretório no qual ele é criado.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.CopyFile` método.      | Para | Consulte |   |--------|---------|   | Copiar um arquivo no mesmo diretório. | [Como: criar uma cópia de um arquivo no mesmo diretório](~/add/includes/ajax-current-ext-md.md)|   | Copiar um arquivo para um diretório diferente. | [Como: criar uma cópia de um arquivo em um diretório diferente](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/1f217d7e-1014-49a6-bbf7-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/1f217d7e-1014-49a6-bbf7-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O arquivo a ser copiado."
    - id: destinationFileName
      type: System.String
      description: "O local para o qual o arquivo deve ser copiado."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Se deve controlar visualmente o progresso da operação. O padrão é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>contém informações de caminho."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>ou <code>sourceFileName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo de destino existe e <code> overwrite </code> é definido como <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem a permissão necessária."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)
  id: CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystemProxy.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Copia um arquivo para um novo local."
  remarks: "`CopyFile`não preserva as ACEs (entradas de controle de acesso). O arquivo recém-criado herda ACEs padrão do diretório no qual ele é criado.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.CopyFile` método.      | Para | Consulte |   |--------|---------|   | Copiar um arquivo no mesmo diretório. | [Como: criar uma cópia de um arquivo no mesmo diretório](~/add/includes/ajax-current-ext-md.md)|   | Copiar um arquivo para um diretório diferente. | [Como: criar uma cópia de um arquivo em um diretório diferente](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/a6c1332c-05f4-42e3-a5eb-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/a6c1332c-05f4-42e3-a5eb-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O arquivo a ser copiado."
    - id: destinationFileName
      type: System.String
      description: "O local para o qual o arquivo deve ser copiado."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se os arquivos existentes devem ser substituídos; Caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>contém informações de caminho."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>ou <code>sourceFileName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo de destino existe e <code> overwrite </code> é definido como <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem a permissão necessária."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Copia um arquivo para um novo local."
  remarks: "`CopyFile`não preserva as ACEs (entradas de controle de acesso). O arquivo recém-criado herda ACEs padrão do diretório no qual ele é criado.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.CopyFile` método.      | Para | Consulte |   |--------|---------|   | Copiar um arquivo no mesmo diretório. | [Como: criar uma cópia de um arquivo no mesmo diretório](~/add/includes/ajax-current-ext-md.md)|   | Copiar um arquivo para um diretório diferente. | [Como: criar uma cópia de um arquivo em um diretório diferente](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example copies the file `Test.txt` to the directory `TestFiles2` without overwriting existing files.  \n  \n [!code-vb[VbRefFile#15](~/add/codesnippet/visualbasic/6e501658-de8a-48ca-8a55-_1.vb)]  \n  \n Replace the file paths with the paths you want to use in your code.  \n  \n This example copies the file `Test.txt` to the directory `TestFiles2` and renames it `NewFile.txt`.  \n  \n [!code-vb[VbRefFile#16](~/add/codesnippet/visualbasic/6e501658-de8a-48ca-8a55-_2.vb)]  \n  \n Replace the file paths with the paths you want to use in your code."
  syntax:
    content: public void CopyFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "O arquivo a ser copiado."
    - id: destinationFileName
      type: System.String
      description: "O local para o qual o arquivo deve ser copiado."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Se deve controlar visualmente o progresso da operação. O padrão é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Especifica o que deve ser feito se o usuário clica em **Cancelar** durante a operação. O padrão é <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>destinationFileName </code>contém informações de caminho."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>ou <code>sourceFileName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo de destino existe e <code> overwrite </code> é definido como <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem a permissão necessária."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>UICancelOption</code>é definido como <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>e o usuário cancelou a operação ou ocorre um erro de e/s não especificado."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)
  id: CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CreateDirectory(String)
  nameWithType: FileSystemProxy.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Cria um diretório."
  remarks: "Se o diretório já existe, nenhuma exceção é lançada.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.CreateDirectory` método.      | Para | Consulte |   |--------|---------|   | Crie um diretório | [Como: criar um diretório](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example creates the directory, `NewDirectory`, in `C:\\Documents and Settings\\All Users\\Documents`.  \n  \n [!code-vb[VbVbcnMyFileSystem#17](~/add/codesnippet/visualbasic/23416b68-c5ce-4c96-b164-_1.vb)]"
  syntax:
    content: public void CreateDirectory (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Nome e local do diretório."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome do diretório está incorreto. Por exemplo, ele contém caracteres inválidos ou é somente espaço em branco."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O nome do diretório é muito longo."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O nome do diretório é apenas um dois-pontos (:)."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório pai do diretório a ser criado é somente leitura"
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem permissão para criar o diretório."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
  id: CurrentDirectory
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: CurrentDirectory
  nameWithType: FileSystemProxy.CurrentDirectory
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Obtém ou define o diretório atual."
  remarks: '`CurrentDirectory`é uma variável de ambiente de todo o sistema.'
  example:
  - "This example returns the current directory and displays it in a message box.  \n  \n [!code-vb[VbVbcnMyFileSystem#18](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._77_1.vb)]  \n  \n This example sets the current directory to `C:\\TestDirectory`.  \n  \n [!code-vb[VbVbcnMyFileSystem#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._77_2.vb)]"
  syntax:
    content: public string CurrentDirectory { get; set; }
    return:
      type: System.String
      description: "O diretório atual para operações de e/s de arquivo."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory*
  exceptions:
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O caminho não é válido."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,DeleteDirectoryOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Exclui um diretório."
  remarks: ''
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/cedfdebf-99a8-4195-82ff-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/cedfdebf-99a8-4195-82ff-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/cedfdebf-99a8-4195-82ff-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/cedfdebf-99a8-4195-82ff-_4.vb)]"
  syntax:
    content: public void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.DeleteDirectoryOption onDirectoryNotEmpty);
    parameters:
    - id: directory
      type: System.String
      description: "Diretório a ser excluído."
    - id: onDirectoryNotEmpty
      type: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
      description: "Especifica que deve ser feito quando um diretório que deve ser excluído contém arquivos ou diretórios. O padrão é <xref uid=&quot;langword_csharp_DeleteDirectoryOption.DeleteAllContents&quot; name=&quot;DeleteDirectoryOption.DeleteAllContents&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O caminho é uma cadeia de caracteres de comprimento zero, está malformado, contém somente espaços em branco ou contém caracteres inválidos (incluindo caracteres curinga). O caminho é um caminho de dispositivo (começa com \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe ou é um arquivo."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Um arquivo no diretório ou subdiretório está em uso."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O nome do diretório contém dois-pontos (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não tem as permissões necessárias."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "O usuário cancela a operação ou o diretório não pode ser excluído."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Exclui um diretório."
  remarks: "O `showUI` e `recycle` parâmetros não são suportados em aplicativos que não são interativo, como serviços do Windows do usuário."
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/e5335475-bf11-415f-92a3-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/e5335475-bf11-415f-92a3-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/e5335475-bf11-415f-92a3-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/e5335475-bf11-415f-92a3-_4.vb)]"
  syntax:
    content: public void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: directory
      type: System.String
      description: "Diretório a ser excluído."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Especifica se deve ser visualmente acompanhar o progresso da operação. O padrão é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Especifica se o arquivo excluído deve ser enviado para o **Lixeira**. O padrão é <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O caminho é uma cadeia de caracteres de comprimento zero, está malformado, contém somente espaços em branco ou contém caracteres inválidos (incluindo caracteres curinga). O caminho é um caminho de dispositivo (começa com \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe ou é um arquivo."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Um arquivo no diretório ou subdiretório está em uso."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O nome do diretório contém dois-pontos (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não tem as permissões necessárias."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "O usuário cancela a operação ou o diretório não pode ser excluído."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Exclui um diretório."
  remarks: "O `showUI`, `recycle`, e `onUserCancel` parâmetros não são suportados em aplicativos que não são interativo, como serviços do Windows do usuário."
  example:
  - "The example deletes the directory `OldDirectory` only if it is empty.  \n  \n [!code-vb[VbVbcnMyFileSystem#56](~/add/codesnippet/visualbasic/7d4b2ab6-2898-4997-9c37-_1.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents.  \n  \n [!code-vb[VbVbcnMyFileSystem#57](~/add/codesnippet/visualbasic/7d4b2ab6-2898-4997-9c37-_2.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, asking the user to confirm the deletion, but does not send the contents to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#58](~/add/codesnippet/visualbasic/7d4b2ab6-2898-4997-9c37-_3.vb)]  \n  \n This example deletes the directory `OldDirectory` and all of its contents, sending them to the **Recycle Bin**, but does not show the progress of the operation.  \n  \n [!code-vb[VbVbcnMyFileSystem#59](~/add/codesnippet/visualbasic/7d4b2ab6-2898-4997-9c37-_4.vb)]"
  syntax:
    content: public void DeleteDirectory (string directory, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: directory
      type: System.String
      description: "Diretório a ser excluído."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Especifica se deve ser visualmente acompanhar o progresso da operação. O padrão é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Especifica se o arquivo excluído deve ser enviado para o **Lixeira**. O padrão é <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Especifica se deve lançar uma exceção se o usuário clica em **Cancelar**."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O caminho é uma cadeia de caracteres de comprimento zero, está malformado, contém somente espaços em branco ou contém caracteres inválidos (incluindo caracteres curinga). O caminho é um caminho de dispositivo (começa com \\\\ \\\\.\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe ou é um arquivo."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Um arquivo no diretório ou subdiretório está em uso."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O nome do diretório contém dois-pontos (:)."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não tem as permissões necessárias."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "O usuário cancela a operação ou o diretório não pode ser excluído."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteFile(String)
  nameWithType: FileSystemProxy.DeleteFile(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Exclui um arquivo."
  remarks: "A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.DeleteFile` método.      | Para | Consulte |   |--------|---------|   | Para excluir um arquivo | [Como: excluir um arquivo](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._88_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._88_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._88_3.vb)]"
  syntax:
    content: public void DeleteFile (string file);
    parameters:
    - id: file
      type: System.String
      description: "Nome e caminho do arquivo a ser excluído."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ele tem uma barra à direita em que um arquivo deve ser especificado; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem permissão para excluir o arquivo ou o arquivo é somente leitura."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystemProxy.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String,UIOption,RecycleOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Exclui um arquivo."
  remarks: "O `showUI` e `recycle` parâmetros não são suportados em aplicativos que não são interativo, como serviços do Windows do usuário.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.DeleteFile` método.      | Para | Consulte |   |--------|---------|   | Para excluir um arquivo | [Como: excluir um arquivo](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/6a94786b-3ede-4f9d-bc5e-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/6a94786b-3ede-4f9d-bc5e-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/6a94786b-3ede-4f9d-bc5e-_3.vb)]"
  syntax:
    content: public void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle);
    parameters:
    - id: file
      type: System.String
      description: "Nome e caminho do arquivo a ser excluído."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Se deve controlar visualmente o progresso da operação. O padrão é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Se o arquivo excluído deve ser enviado para o **Lixeira**. O padrão é <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ele tem uma barra à direita em que um arquivo deve ser especificado; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem permissão para excluir o arquivo ou o arquivo é somente leitura."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystemProxy.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Exclui um arquivo."
  remarks: "O `showUI`, `recycle`, e `onUserCancel` parâmetros não são suportados em aplicativos que não são interativo, como serviços do Windows do usuário.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.DeleteFile` método.      | Para | Consulte |   |--------|---------|   | Para excluir um arquivo | [Como: excluir um arquivo](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example deletes the file `Test.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#3](~/add/codesnippet/visualbasic/6e096d80-c28e-4323-9238-_1.vb)]  \n  \n This example deletes the file `Test.txt` and allows the user to confirm that the file should be deleted.  \n  \n [!code-vb[VbVbcnMyFileSystem#4](~/add/codesnippet/visualbasic/6e096d80-c28e-4323-9238-_2.vb)]  \n  \n This example deletes the file `Test.txt` and sends it to the **Recycle Bin**.  \n  \n [!code-vb[VbVbcnMyFileSystem#5](~/add/codesnippet/visualbasic/6e096d80-c28e-4323-9238-_3.vb)]"
  syntax:
    content: public void DeleteFile (string file, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.RecycleOption recycle, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: file
      type: System.String
      description: "Nome e caminho do arquivo a ser excluído."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Se deve controlar visualmente o progresso da operação. O padrão é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: recycle
      type: Microsoft.VisualBasic.FileIO.RecycleOption
      description: "Se o arquivo excluído deve ser enviado para o **Lixeira**. O padrão é <xref uid=&quot;langword_csharp_RecycleOption.DeletePermanently&quot; name=&quot;RecycleOption.DeletePermanently&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Especifica se uma exceção é gerada quando o usuário cancela a operação. O padrão é <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ele tem uma barra à direita em que um arquivo deve ser especificado; ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem permissão para excluir o arquivo ou o arquivo é somente leitura."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "O usuário cancelou a operação e <code> onUserCancel </code> é definido como <xref href=&quot;Microsoft.VisualBasic.FileIO.UICancelOption&quot;> </xref>."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)
  id: DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: DirectoryExists(String)
  nameWithType: FileSystemProxy.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se a pasta especificada existe."
  remarks: ''
  example:
  - "This example determines whether the directory `C:\\backup\\logs` exists and checks its properties.  \n  \n [!code-vb[VbRefFile#13](~/add/codesnippet/visualbasic/7dd70ea7-fac8-4509-8a5b-_1.vb)]"
  syntax:
    content: public bool DirectoryExists (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Caminho do diretório."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o diretório existir. Caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
  id: Drives
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: Drives
  nameWithType: FileSystemProxy.Drives
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna uma coleção somente leitura de todos os nomes de unidade disponível."
  remarks: "Essa propriedade retorna todas as unidades lógicas."
  example:
  - "This example displays the available drive names in a message box.  \n  \n [!code-vb[VbRefFile#19](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._61_1.vb)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo> Drives { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
      description: "Uma coleção somente leitura de todas as unidades disponíveis como <xref href=&quot;System.IO.DriveInfo&quot;> </xref> objetos."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)
  id: FileExists(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: FileExists(String)
  nameWithType: FileSystemProxy.FileExists(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se o arquivo especificado existe."
  remarks: "Se o aplicativo não tem permissões suficientes para ler o arquivo especificado, o `FileExists` método retorna `False`, independentemente da existência do caminho; o método não lança uma exceção."
  example:
  - "This example checks to see whether or not the file `Check.txt` exists and supplies the information in a message box.  \n  \n [!code-vb[VbRefFile#20](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._238_1.vb)]"
  syntax:
    content: public bool FileExists (string file);
    parameters:
    - id: file
      type: System.String
      description: "Nome e caminho do arquivo."
    return:
      type: System.Boolean
      description: "Retorna <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref> se o arquivo existir; caso contrário, esse método retornará <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome do arquivo termina com uma barra invertida (\\\\)."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna uma coleção somente leitura de cadeias de caracteres que representa os nomes dos arquivos que contém o texto especificado."
  remarks: "Uma coleção vazia é retornada se nenhum arquivo que corresponda ao padrão especificado for encontrado.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.FindInFiles` método.      | Para | Consulte |   |--------|---------|   | Pesquisar um diretório para arquivos que contém uma cadeia de caracteres específica | [Passo a passo: Manipulando arquivos e diretórios no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/0411284c-97f6-421f-9cd5-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType);
    parameters:
    - id: directory
      type: System.String
      description: "O diretório a ser pesquisada."
    - id: containsText
      type: System.String
      description: "O texto de pesquisa."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se a pesquisa deve diferenciar maiusculas de minúsculas; Caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Se incluir subpastas. O padrão é <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Coleção somente leitura de nomes de arquivos que contêm o texto especificado."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com `\\.\`).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório especificado não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório especificado aponta para um arquivo existente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O caminho de diretório especificado contém um dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna uma coleção somente leitura de cadeias de caracteres que representa os nomes dos arquivos que contém o texto especificado."
  remarks: "Uma coleção vazia é retornada se nenhum arquivo que corresponda ao padrão especificado for encontrado.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.FindInFiles` método.      | Para | Consulte |   |--------|---------|   | Pesquisar um diretório para arquivos que contém uma cadeia de caracteres específica | [Passo a passo: Manipulando arquivos e diretórios no Visual Basic](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example searches the directory `C:\\TestDir` for any files containing the string `\"sample string\"` and displays the results in `ListBox1`.  \n  \n [!code-vb[VbRefFile#12](~/add/codesnippet/visualbasic/cb69d87f-5cdb-4aa7-8869-_1.vb)]  \n  \n In order to work, the project must contain a `ListBox` named `ListBox1`."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> FindInFiles (string directory, string containsText, bool ignoreCase, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] fileWildcards);
    parameters:
    - id: directory
      type: System.String
      description: "O diretório a ser pesquisada."
    - id: containsText
      type: System.String
      description: "O texto de pesquisa."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se a pesquisa deve diferenciar maiusculas de minúsculas; Caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;> </xref>."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Se incluir subpastas. O padrão é <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: fileWildcards
      type: System.String[]
      description: "Padrão a ser correspondido."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Coleção somente leitura de nomes de arquivos que contêm o texto especificado."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com `\\.\`).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório especificado não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório especificado aponta para um arquivo existente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O caminho de diretório especificado contém um dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)
  id: GetDirectories(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetDirectories(String)
  nameWithType: FileSystemProxy.GetDirectories(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna uma coleção de cadeias de caracteres que representa os nomes dos caminhos dos subdiretórios em um diretório."
  remarks: "A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.GetDirectories` método.      | Para | Consulte |   |--------|---------|   | Listar subdiretórios com um padrão específico | [Como: localizar subdiretórios com um padrão específico](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._12_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Nome e caminho do diretório."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Coleção somente leitura dos nomes de caminho de subdiretórios no diretório especificado."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório especificado não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório especificado aponta para um arquivo existente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystemProxy.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna uma coleção de cadeias de caracteres que representa os nomes dos caminhos dos subdiretórios em um diretório."
  remarks: "Você pode usar o `wildcards` para especificar um padrão específico. Se você deseja incluir o conteúdo de subpastas na pesquisa, defina o `searchType` parâmetro `SearchAllSubDirectories`.       Uma coleção vazia é retornada se nenhum diretório corresponda ao padrão especificado for encontrado.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.GetDirectories` método.      | Para | Consulte |   |--------|---------|   | Listar subdiretórios com um padrão específico | [Como: localizar subdiretórios com um padrão específico](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all the directories in the directory structure that contain the word `Logs` in their names and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#10](~/add/codesnippet/visualbasic/ed44a5f7-321c-4c72-83a6-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> GetDirectories (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "Nome e caminho do diretório."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Se incluir subpastas. O padrão é <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: wildcards
      type: System.String[]
      description: "Padrão para corresponder nomes."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Coleção somente leitura dos nomes de caminho de subdiretórios no diretório especificado."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou mais dos caracteres curinga especificados são <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref>, uma cadeia de caracteres vazia ou contém apenas espaços."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório especificado não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório especificado aponta para um arquivo existente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)
  id: GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetDirectoryInfo(String)
  nameWithType: FileSystemProxy.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna um <xref href=&quot;System.IO.DirectoryInfo&quot;> </xref> objeto para o caminho especificado."
  remarks: "Se o diretório não existe, uma exceção não é lançada até a primeira vez que uma propriedade <xref:System.IO.DirectoryInfo>objeto é acessado.</xref:System.IO.DirectoryInfo>"
  example:
  - "This example gets a <xref:System.IO.DirectoryInfo> object for the directory `C:\\Documents and Settings` and displays the directory's creation time, last access time, and last write time.  \n  \n [!code-vb[VbRefFile#7](~/add/codesnippet/visualbasic/5efdf299-cb73-46cc-a9c9-_1.vb)]"
  syntax:
    content: public System.IO.DirectoryInfo GetDirectoryInfo (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>. Caminho de diretório."
    return:
      type: System.IO.DirectoryInfo
      description: "<xref href=&quot;System.IO.DirectoryInfo&quot;></xref>objeto para o caminho especificado."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O caminho do diretório contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)
  id: GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetDriveInfo(String)
  nameWithType: FileSystemProxy.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna um <xref href=&quot;System.IO.DriveInfo&quot;> </xref> objeto para a unidade especificada."
  remarks: "O <xref:System.IO.DriveInfo>classe modela uma unidade e fornece métodos e propriedades para consultar informações de unidade.</xref:System.IO.DriveInfo> Use <xref:System.IO.DriveInfo>para determinar quais unidades estão disponíveis e o tipo de unidades são.</xref:System.IO.DriveInfo> Você também pode consultar a propriedade para determinar a capacidade e o espaço livre disponível na unidade."
  example:
  - "This example obtains a <xref:System.IO.DriveInfo> object for the C drive and uses it to display information about the drive.  \n  \n [!code-vb[VbRefFile#11](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._61_1.vb)]  \n  \n For information on the different drive types, see <xref:System.IO.DriveType>."
  syntax:
    content: public System.IO.DriveInfo GetDriveInfo (string drive);
    parameters:
    - id: drive
      type: System.String
      description: "Unidade a ser examinada."
    return:
      type: System.IO.DriveInfo
      description: "<xref href=&quot;System.IO.DriveInfo&quot;></xref>objeto para a unidade especificada."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>drive</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho"
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)
  id: GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetFileInfo(String)
  nameWithType: FileSystemProxy.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna um <xref href=&quot;System.IO.FileInfo&quot;> </xref> objeto para o arquivo especificado."
  remarks: "Uma exceção não é gerada se o arquivo não existe; em vez disso, ela será lançada na primeira vez em que as propriedades do objeto são acessadas.       A tabela a seguir lista um exemplo de tarefa envolvendo o `My.Computer.FileSystem.GetFileInfo` método.      | Para | Consulte |   |--------|---------|   | Determinar o nome e o caminho do arquivo | [Como: analisar caminhos de arquivo](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example retrieves a <xref:System.IO.FileInfo?displayProperty=fullName> object for the file `MyLogFile.log` and uses it to report the file's full name, last access time, and length.  \n  \n [!code-vb[VbRefFile#1](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._68_1.vb)]"
  syntax:
    content: public System.IO.FileInfo GetFileInfo (string file);
    parameters:
    - id: file
      type: System.String
      description: "Nome e caminho do arquivo."
    return:
      type: System.IO.FileInfo
      description: "<xref href=&quot;System.IO.FileInfo&quot;></xref>objeto para o arquivo especificado"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome do caminho está incorreto. Por exemplo, ele contém caracteres inválidos ou é somente espaço em branco. O nome do arquivo tem uma barra à direita."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O caminho contém dois-pontos no meio da cadeia."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho é muito longo."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem acesso do ACL (lista de controle de acesso) para o arquivo."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)
  id: GetFiles(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetFiles(String)
  nameWithType: FileSystemProxy.GetFiles(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna uma coleção somente leitura de cadeias de caracteres que representa os nomes dos arquivos em um diretório."
  remarks: "Uma coleção vazia é retornada se nenhum arquivo que corresponda ao padrão especificado for encontrado.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.GetFiles` método.      | Para | Consulte |   |--------|---------|   | Obter a coleção de arquivos em um diretório | [Como: obter a coleção de arquivos em um diretório](~/add/includes/ajax-current-ext-md.md)|   | Localizar arquivos com um padrão específico em um diretório | [Como: localizar arquivos com um padrão específico](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._206_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._206_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory);
    parameters:
    - id: directory
      type: System.String
      description: "Pasta a ser pesquisada."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Coleção somente leitura de nomes de arquivo da pasta especificada."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Para pesquisar o diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>aponta para um arquivo existente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  id: GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystemProxy.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(String,SearchOption,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna uma coleção somente leitura de cadeias de caracteres que representa os nomes dos arquivos em um diretório."
  remarks: "Uma coleção vazia é retornada se nenhum arquivo que corresponda ao padrão especificado for encontrado.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.GetFiles` método.      | Para | Consulte |   |--------|---------|   | Obter a coleção de arquivos em um diretório | [Como: obter a coleção de arquivos em um diretório](~/add/includes/ajax-current-ext-md.md)|   | Localizar arquivos com um padrão específico em um diretório | [Como: localizar arquivos com um padrão específico](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example returns all files in the directory and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#5](~/add/codesnippet/visualbasic/fc9d3bc2-8735-4582-912b-_1.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form.  \n  \n This example returns all files in the directory with the extension `.txt` and adds them to `ListBox1`.  \n  \n [!code-vb[VbRefFile#6](~/add/codesnippet/visualbasic/fc9d3bc2-8735-4582-912b-_2.vb)]  \n  \n This example requires that you have a `ListBox` named `ListBox1` on your form."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<string> GetFiles (string directory, Microsoft.VisualBasic.FileIO.SearchOption searchType, string[] wildcards);
    parameters:
    - id: directory
      type: System.String
      description: "Pasta a ser pesquisada."
    - id: searchType
      type: Microsoft.VisualBasic.FileIO.SearchOption
      description: "Se incluir subpastas. O padrão é <xref uid=&quot;langword_csharp_SearchOption.SearchTopLevelOnly&quot; name=&quot;SearchOption.SearchTopLevelOnly&quot; href=&quot;&quot;> </xref>."
    - id: wildcards
      type: System.String[]
      description: "Padrão a ser correspondido."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
      description: "Coleção somente leitura de nomes de arquivo da pasta especificada."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Para pesquisar o diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>directory</code>aponta para um arquivo existente."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não possui as permissões necessárias."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)
  id: GetName(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetName(String)
  nameWithType: FileSystemProxy.GetName(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Analisa o nome do arquivo do caminho fornecido."
  remarks: "Essa é uma operação de cadeia de caracteres; o `FileSystem` não é examinado.       O `GetName` método ignora uma barra no final do caminho.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.GetFileName` método.      | Para | Consulte |   |--------|---------|   | Analisar um caminho de arquivo | [Como: analisar caminhos de arquivo](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "The following example parses a file path and returns the name of the file.  \n  \n [!code-vb[VbVbcnMyFileSystem#21](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._127_1.vb)]  \n  \n Replace the path `C:\\Testdirectory\\Testfile` with the path you wish to parse."
  syntax:
    content: public string GetName (string path);
    parameters:
    - id: path
      type: System.String
      description: "Obrigatório. Caminho a ser analisado. <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>."
    return:
      type: System.String
      description: "O nome do arquivo do caminho especificado."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)
  id: GetParentPath(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetParentPath(String)
  nameWithType: FileSystemProxy.GetParentPath(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna o caminho pai do caminho fornecido."
  remarks: "Essa é uma operação de cadeia de caracteres; o sistema de arquivos não é examinado."
  example:
  - "This example gets the parent path for `C:\\Backups\\Tmp\\Test`.  \n  \n [!code-vb[VbRefFile#17](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._166_1.vb)]"
  syntax:
    content: public string GetParentPath (string path);
    parameters:
    - id: path
      type: System.String
      description: "Caminho a ser examinado."
    return:
      type: System.String
      description: "O caminho pai do caminho fornecido."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Caminho não tem um caminho pai porque ele é um caminho de raiz."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName
  id: GetTempFileName
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: GetTempFileName()
  nameWithType: FileSystemProxy.GetTempFileName()
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName()
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Cria um arquivo temporário de zero bytes exclusivamente nomeado no disco e retorna o caminho completo do arquivo."
  remarks: "Esse método pode ser usado para criar um arquivo temporário."
  example:
  - "This example creates a temp file and returns its path.  \n  \n [!code-vb[VbVbcnMyFileSystem#12](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._60_1.vb)]"
  syntax:
    content: public string GetTempFileName ();
    parameters: []
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>que contém o caminho completo do arquivo temporário."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)
  id: MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveDirectory(String,String)
  nameWithType: FileSystemProxy.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Move um diretório de um local para outro."
  remarks: "Se for feita uma tentativa de mover um diretório dentro de um diretório que não existe, a estrutura de destino será criada."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/cefa3a89-088e-471a-a720-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/cefa3a89-088e-471a-a720-_2.vb)]"
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Caminho do diretório a ser movido."
    - id: destinationDirectoryName
      type: System.String
      description: "Caminho do diretório para o qual o diretório de origem está sendo movido."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>ou <code>destinationDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A origem é um diretório raiz ou o caminho de origem e o caminho de destino são os mesmos."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem a permissão necessária."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Move um diretório de um local para outro."
  remarks: "Se for feita uma tentativa de mover um diretório dentro de um diretório que não existe, a estrutura de destino será criada."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/56777374-23c9-4305-8635-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/56777374-23c9-4305-8635-_2.vb)]"
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Caminho do diretório a ser movido."
    - id: destinationDirectoryName
      type: System.String
      description: "Caminho do diretório para o qual o diretório de origem está sendo movido."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Especifica se deve ser visualmente acompanhar o progresso da operação. O padrão é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>ou <code>destinationDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório de destino já existe e o<code> verwrite </code> é definido como <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem a permissão necessária."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)
  id: MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Move um diretório de um local para outro."
  remarks: "Se for feita uma tentativa de mover um diretório dentro de um diretório que não existe, a estrutura de destino será criada."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/54561b61-1727-42cb-8ba4-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/54561b61-1727-42cb-8ba4-_2.vb)]"
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, bool overwrite);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Caminho do diretório a ser movido."
    - id: destinationDirectoryName
      type: System.String
      description: "Caminho do diretório para o qual o diretório de origem está sendo movido."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se os diretórios existentes devem ser substituídos; Caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>ou <code>destinationDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O diretório de destino já existe e o<code> verwrite </code> é definido como <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem a permissão necessária."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Move um diretório de um local para outro."
  remarks: "Se for feita uma tentativa de mover um diretório dentro de um diretório que não existe, a estrutura de destino será criada."
  example:
  - "This example moves `Directory1` inside `Directory2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#81](~/add/codesnippet/visualbasic/10c8e3c7-8937-43d2-b15d-_1.vb)]  \n  \n This example moves `Directory1` inside `Directory2`, overwriting the directory if it already exists.  \n  \n [!code-vb[VbVbcnMyFileSystem#82](~/add/codesnippet/visualbasic/10c8e3c7-8937-43d2-b15d-_2.vb)]"
  syntax:
    content: public void MoveDirectory (string sourceDirectoryName, string destinationDirectoryName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceDirectoryName
      type: System.String
      description: "Caminho do diretório a ser movido."
    - id: destinationDirectoryName
      type: System.String
      description: "Caminho do diretório para o qual o diretório de origem está sendo movido."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Especifica se deve ser visualmente acompanhar o progresso da operação. O padrão é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Especifica se uma exceção é gerada quando o usuário cancela a operação. O padrão é <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\).'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>sourceDirectoryName</code>ou <code>destinationDirectoryName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "<code>onUserCancel</code>é definido como <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref> e um subdiretório do arquivo não pode ser copiado."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>é definido como <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>e o usuário cancela a operação ou a operação não pode ser concluída."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A operação é cíclica."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem a permissão necessária."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)
  id: MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveFile(String,String)
  nameWithType: FileSystemProxy.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Move um arquivo para um novo local."
  remarks: "Se a estrutura de destino não existir, ele será criado.       O `MoveFile` método preserva as ACEs (entradas de controle de acesso) somente ao mover o arquivo dentro do mesmo volume. Isso inclui as ACEs herdadas, que se tornam ACEs diretas quando movidos (direto ACEs têm precedência sobre ACEs herdadas). Se um arquivo é movido entre volumes, ACEs não serão copiadas.       A tabela a seguir lista um exemplo de tarefa envolvendo o `My.Computer.FileSystem.MoveFile` método.      | Para | Consulte |   |--------|---------|   | Mover um arquivo | [Como: mover um arquivo](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/b4b2ccc0-2079-45b2-86a0-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/b4b2ccc0-2079-45b2-86a0-_2.vb)]"
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Caminho do arquivo a ser movido."
    - id: destinationFileName
      type: System.String
      description: "Caminho do diretório no qual o arquivo deve ser movido."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystemProxy.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,UIOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Move um arquivo para um novo local."
  remarks: "Se a estrutura de destino não existir, ele será criado.       O `MoveFile` método preserva as ACEs (entradas de controle de acesso) somente ao mover o arquivo dentro do mesmo volume. Isso inclui as ACEs herdadas, que se tornam ACEs diretas quando movidos (direto ACEs têm precedência sobre ACEs herdadas). Se um arquivo é movido entre volumes, ACEs não serão copiadas.       A tabela a seguir lista um exemplo de tarefa envolvendo o `My.Computer.FileSystem.MoveFile` método.      | Para | Consulte |   |--------|---------|   | Mover um arquivo | [Como: mover um arquivo](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/5ae4490c-fc4f-4dd8-b094-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/5ae4490c-fc4f-4dd8-b094-_2.vb)]"
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Caminho do arquivo a ser movido."
    - id: destinationFileName
      type: System.String
      description: "Caminho do diretório no qual o arquivo deve ser movido."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Especifica se deve ser visualmente acompanhar o progresso da operação. O padrão é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)
  id: MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystemProxy.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Move um arquivo para um novo local."
  remarks: "Se a estrutura de destino não existir, ele será criado.       O `MoveFile` método preserva as ACEs (entradas de controle de acesso) somente ao mover o arquivo dentro do mesmo volume. Isso inclui as ACEs herdadas, que se tornam ACEs diretas quando movidos (direto ACEs têm precedência sobre ACEs herdadas). Se um arquivo é movido entre volumes, ACEs não serão copiadas.       A tabela a seguir lista um exemplo de tarefa envolvendo o `My.Computer.FileSystem.MoveFile` método.      | Para | Consulte |   |--------|---------|   | Mover um arquivo | [Como: mover um arquivo](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/69eb25fa-6fa8-457b-b895-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/69eb25fa-6fa8-457b-b895-_2.vb)]"
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName, bool overwrite);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Caminho do arquivo a ser movido."
    - id: destinationFileName
      type: System.String
      description: "Caminho do diretório no qual o arquivo deve ser movido."
    - id: overwrite
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>para substituir arquivos existentes; Caso contrário, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  id: MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,UIOption,UICancelOption)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Move um arquivo para um novo local."
  remarks: "Se a estrutura de destino não existir, ele será criado.       O `MoveFile` método preserva as ACEs (entradas de controle de acesso) somente ao mover o arquivo dentro do mesmo volume. Isso inclui as ACEs herdadas, que se tornam ACEs diretas quando movidos (direto ACEs têm precedência sobre ACEs herdadas). Se um arquivo é movido entre volumes, ACEs não serão copiadas.       A tabela a seguir lista um exemplo de tarefa envolvendo o `My.Computer.FileSystem.MoveFile` método.      | Para | Consulte |   |--------|---------|   | Mover um arquivo | [Como: mover um arquivo](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example moves the file `Test.txt` from `TestDir1` to `TestDir2`.  \n  \n [!code-vb[VbVbcnMyFileSystem#86](~/add/codesnippet/visualbasic/d3902ab8-d486-431e-8faf-_1.vb)]  \n  \n This example moves the file `Test.txt` from `TestDir1` to `TestDir2` and renames it `Test2.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#87](~/add/codesnippet/visualbasic/d3902ab8-d486-431e-8faf-_2.vb)]"
  syntax:
    content: public void MoveFile (string sourceFileName, string destinationFileName, Microsoft.VisualBasic.FileIO.UIOption showUI, Microsoft.VisualBasic.FileIO.UICancelOption onUserCancel);
    parameters:
    - id: sourceFileName
      type: System.String
      description: "Caminho do arquivo a ser movido."
    - id: destinationFileName
      type: System.String
      description: "Caminho do diretório no qual o arquivo deve ser movido."
    - id: showUI
      type: Microsoft.VisualBasic.FileIO.UIOption
      description: "Especifica se deve ser visualmente acompanhar o progresso da operação. O padrão é <xref uid=&quot;langword_csharp_UIOption.OnlyErrorDialogs&quot; name=&quot;UIOption.OnlyErrorDialogs&quot; href=&quot;&quot;> </xref>."
    - id: onUserCancel
      type: Microsoft.VisualBasic.FileIO.UICancelOption
      description: "Especifica se uma exceção é gerada quando o usuário cancela a operação. O padrão é <xref uid=&quot;langword_csharp_UICancelOption.ThrowException&quot; name=&quot;UICancelOption.ThrowException&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationFileName</code>é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo de origem não é válido ou não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.OperationCanceledException
    commentId: T:System.OperationCanceledException
    description: "<code>onUserCancel</code>é definido como <xref uid=&quot;langword_csharp_ThrowException&quot; name=&quot;ThrowException&quot; href=&quot;&quot;> </xref>e o usuário cancelou a operação ou ocorre um erro de e/s não especificado."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)
  id: OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFieldParser(String)
  nameWithType: FileSystemProxy.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "O <xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> método permite que você crie um <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> objeto, que fornece uma maneira fácil e eficiente analisar arquivos de texto estruturados, como logs. O <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> objeto pode ser usado para ler arquivos delimitados e de largura fixa."
  remarks: "A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.OpenTextFieldParser` método.      | Para | Consulte |   |--------|---------|   | Ler um arquivo de texto delimitado | [Como: ler arquivos de texto delimitado por vírgula](~/add/includes/ajax-current-ext-md.md)|   | Ler um arquivo de texto de largura fixa | [Como: ler arquivos de texto de largura fixa](~/add/includes/ajax-current-ext-md.md)|   | Ler um arquivo de texto com vários formatos | [Como: ler arquivos de texto com vários formatos](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/5e21a8aa-3482-4e3a-9ad2-_1.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file);
    parameters:
    - id: file
      type: System.String
      description: "O arquivo a ser aberto com o <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>para ler o arquivo especificado."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Uma linha não pode ser analisada usando o formato especificado. A mensagem de exceção especifica a linha que causou a exceção, enquanto o <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>propriedade é atribuída ao texto contido na linha.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])
  id: OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystemProxy.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String,Int32[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "O <xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> método permite que você crie um <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> objeto, que fornece uma maneira fácil e eficiente analisar arquivos de texto estruturados, como logs. O <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> objeto pode ser usado para ler arquivos delimitados e de largura fixa."
  remarks: "A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.OpenTextFieldParser` método.      | Para | Consulte |   |--------|---------|   | Ler um arquivo de texto delimitado | [Como: ler arquivos de texto delimitado por vírgula](~/add/includes/ajax-current-ext-md.md)|   | Ler um arquivo de texto de largura fixa | [Como: ler arquivos de texto de largura fixa](~/add/includes/ajax-current-ext-md.md)|   | Ler um arquivo de texto com vários formatos | [Como: ler arquivos de texto com vários formatos](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/3b0d773c-848f-4938-ac74-_1.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, int[] fieldWidths);
    parameters:
    - id: file
      type: System.String
      description: "O arquivo a ser aberto com o <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    - id: fieldWidths
      type: System.Int32[]
      description: "Larguras dos campos."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>para ler o arquivo especificado."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Uma linha não pode ser analisada usando o formato especificado. A mensagem de exceção especifica a linha que causou a exceção, enquanto o <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>propriedade é atribuída ao texto contido na linha.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])
  id: OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystemProxy.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String,String[])
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "O <xref uid=&quot;langword_csharp_OpenTextFieldParser&quot; name=&quot;OpenTextFieldParser&quot; href=&quot;&quot;> </xref> método permite que você crie um <xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;> </xref> objeto, que fornece uma maneira fácil e eficiente analisar arquivos de texto estruturados, como logs. O <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref> objeto pode ser usado para ler arquivos delimitados e de largura fixa."
  remarks: "A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.OpenTextFieldParser` método.      | Para | Consulte |   |--------|---------|   | Ler um arquivo de texto delimitado | [Como: ler arquivos de texto delimitado por vírgula](~/add/includes/ajax-current-ext-md.md)|   | Ler um arquivo de texto de largura fixa | [Como: ler arquivos de texto de largura fixa](~/add/includes/ajax-current-ext-md.md)|   | Ler um arquivo de texto com vários formatos | [Como: ler arquivos de texto com vários formatos](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens the `TextFieldParser``reader` and uses it to read from `C:\\TestFolder1\\Test1.txt`.  \n  \n [!code-vb[VbRefFile#18](~/add/codesnippet/visualbasic/e7a2cbe1-d56b-4ce5-b088-_1.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.FileIO.TextFieldParser OpenTextFieldParser (string file, string[] delimiters);
    parameters:
    - id: file
      type: System.String
      description: "O arquivo a ser aberto com o <xref uid=&quot;langword_csharp_TextFieldParser&quot; name=&quot;TextFieldParser&quot; href=&quot;&quot;> </xref>."
    - id: delimiters
      type: System.String[]
      description: "Delimitadores para os campos."
    return:
      type: Microsoft.VisualBasic.FileIO.TextFieldParser
      description: "<xref href=&quot;Microsoft.VisualBasic.FileIO.TextFieldParser&quot;></xref>para ler o arquivo especificado."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: Microsoft.VisualBasic.FileIO.MalformedLineException
    commentId: T:Microsoft.VisualBasic.FileIO.MalformedLineException
    description: "Uma linha não pode ser analisada usando o formato especificado. A mensagem de exceção especifica a linha que causou a exceção, enquanto o <xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>propriedade é atribuída ao texto contido na linha.</xref:Microsoft.VisualBasic.FileIO.TextFieldParser.ErrorLine*>"
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)
  id: OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFileReader(String)
  nameWithType: FileSystemProxy.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Abre uma <xref:System.IO.StreamReader>objeto para leitura de um arquivo.</xref:System.IO.StreamReader>"
  remarks: "Somente os arquivos de texto podem ser lidos com <xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.OpenTextFileReader` método.      | Para | Consulte |   |--------|---------|   | Abrir um arquivo com um <xref:System.IO.StreamReader>|[ Como: ler texto de arquivos com um StreamReader](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/90cca2c4-4b9b-4b82-b049-_1.vb)]"
  syntax:
    content: public System.IO.StreamReader OpenTextFileReader (string file);
    parameters:
    - id: file
      type: System.String
      description: "Arquivo a ser lido."
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>objeto para leitura do arquivo</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome do arquivo termina com uma barra invertida (\\\\)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado não pode ser encontrado."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para ler o arquivo."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)
  id: OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystemProxy.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Abre uma <xref:System.IO.StreamReader>objeto para leitura de um arquivo.</xref:System.IO.StreamReader>"
  remarks: "Somente os arquivos de texto podem ser lidos com <xref:System.IO.StreamReader>.</xref:System.IO.StreamReader>       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.OpenTextFileReader` método.      | Para | Consulte |   |--------|---------|   | Abrir um arquivo com um <xref:System.IO.StreamReader>|[ Como: ler texto de arquivos com um StreamReader](~/add/includes/ajax-current-ext-md.md) | </xref:System.IO.StreamReader>"
  example:
  - "This example opens the file `Testfile.txt`, reads a line from it, and displays the line in a `MessageBox`.  \n  \n [!code-vb[VbRefFile#2](~/add/codesnippet/visualbasic/2b6a2b5b-b6e7-41de-a324-_1.vb)]"
  syntax:
    content: public System.IO.StreamReader OpenTextFileReader (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Arquivo a ser lido."
    - id: encoding
      type: System.Text.Encoding
      description: "A codificação a ser usada para o conteúdo do arquivo. O padrão é ASCII."
    return:
      type: System.IO.StreamReader
      description: "<xref:System.IO.StreamReader>objeto para leitura do arquivo</xref:System.IO.StreamReader>"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome do arquivo termina com uma barra invertida (\\\\)."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo especificado não pode ser encontrado."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para ler o arquivo."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)
  id: OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystemProxy.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Abre uma <xref:System.IO.StreamWriter>objeto a ser gravado no arquivo especificado.</xref:System.IO.StreamWriter>"
  remarks: "O `OpenTextFileWriter` método abre e inicializa um fluxo de um arquivo e, em seguida, retorna o <xref:System.IO.StreamWriter>objeto para esse fluxo.</xref:System.IO.StreamWriter> Você pode gravar no fluxo quantas vezes forem necessárias e, em seguida, feche-o quando tiver terminado.      > [!NOTE] > Você deve chamar o <xref:System.IO.StreamWriter.Close%2A>método de <xref:System.IO.StreamWriter>objeto para certificar-se de que todos os dados são gravados corretamente no fluxo subjacente.</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       Se você estiver escrevendo apenas algumas cadeias de caracteres em um arquivo, pode ser mais simples usar o <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A>método.</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A>       A tabela a seguir lista um exemplo de tarefa envolvendo o `My.Computer.FileSystem.OpenTextFileWriter` método.      | Para | Consulte |   |--------|---------|   | Gravar texto em um arquivo com um `StreamWriter` | [como: gravar texto em arquivos com um StreamWriter](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/cbe9d22d-ebc5-4087-a635-_1.vb)]"
  syntax:
    content: public System.IO.StreamWriter OpenTextFileWriter (string file, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Arquivo a ser gravado."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Acrescentar ao conteúdo do arquivo. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> para substituir o conteúdo do arquivo. O padrão é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>objeto para gravar o arquivo especificado.</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome do arquivo termina com uma barra à direita."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  id: OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystemProxy.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Abre um <xref:System.IO.StreamWriter>para gravar o arquivo especificado.</xref:System.IO.StreamWriter>"
  remarks: "O `OpenTextFileWriter` método abre e inicializa um fluxo de um arquivo e, em seguida, retorna o <xref:System.IO.StreamWriter>objeto para esse fluxo.</xref:System.IO.StreamWriter> Você pode gravar no fluxo quantas vezes forem necessárias e, em seguida, feche-o quando tiver terminado.      > [!NOTE] > Você deve chamar o <xref:System.IO.StreamWriter.Close%2A>método de <xref:System.IO.StreamWriter>objeto para certificar-se de que todos os dados são gravados corretamente no fluxo subjacente.</xref:System.IO.StreamWriter> </xref:System.IO.StreamWriter.Close%2A>       Se você estiver escrevendo apenas algumas cadeias de caracteres em um arquivo, pode ser mais simples usar o <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A>método.</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText%2A>       A tabela a seguir lista um exemplo de tarefa envolvendo o `My.Computer.FileSystem.OpenTextFileWriter` método.      | Para | Consulte |   |--------|---------|   | Gravar texto em um arquivo com um `StreamWriter` | [como: gravar texto em arquivos com um StreamWriter](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example opens a <xref:System.IO.StreamWriter> with the `My.Computer.FileSystem.OpenTextFileWriter` method and uses it to write a string to a text file with the `WriteLine` method of the `StreamWriter` class.  \n  \n [!code-vb[VbRefFile#14](~/add/codesnippet/visualbasic/829b6f81-31e4-45e8-93df-_1.vb)]"
  syntax:
    content: public System.IO.StreamWriter OpenTextFileWriter (string file, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Arquivo a ser gravado."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Acrescentar ao conteúdo no arquivo; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> para substituir o conteúdo do arquivo. O padrão é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    - id: encoding
      type: System.Text.Encoding
      description: "Codificação a ser usada ao gravar o arquivo. O padrão é ASCII."
    return:
      type: System.IO.StreamWriter
      description: "<xref:System.IO.StreamWriter>objeto para gravar o arquivo especificado.</xref:System.IO.StreamWriter>"
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome do arquivo termina com uma barra à direita."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)
  id: ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: ReadAllBytes(String)
  nameWithType: FileSystemProxy.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna o conteúdo de um arquivo como uma matriz de bytes."
  remarks: "O `ReadAllBytes` método o `My.Computer.FileSystem` objeto permite que você leia de um arquivo binário. O conteúdo do arquivo é retornado como uma matriz de bytes.       Não faça decisões sobre o conteúdo do arquivo com base no nome do arquivo. Por exemplo, o arquivo Form1. vb pode não ser um arquivo de origem do Visual Basic. Verifique se todas as entradas antes de usar os dados em seu aplicativo.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.ReadAllBytes` método.      | Para | Consulte |   |--------|---------|   | Ler um arquivo binário | [Como: leitura de arquivos binários](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads from the file `C:/Documents and Settings/selfportrait.jpg.`  \n  \n [!code-vb[VbVbcnMyFileSystem#33](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._93_1.vb)]"
  syntax:
    content: public byte[] ReadAllBytes (string file);
    parameters:
    - id: file
      type: System.String
      description: "Arquivo a ser lido."
    return:
      type: System.Byte[]
      description: "<xref uid=&quot;langword_csharp_Byte&quot; name=&quot;Byte&quot; href=&quot;&quot;></xref>matriz que contém o conteúdo do arquivo."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para gravar a cadeia de caracteres no buffer."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)
  id: ReadAllText(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: ReadAllText(String)
  nameWithType: FileSystemProxy.ReadAllText(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna o conteúdo de um arquivo de texto como um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>."
  remarks: "O `ReadAllText` método o `My.Computer.FileSystem` objeto permite que você ler de um arquivo de texto. O conteúdo do arquivo é retornado como uma cadeia de caracteres.       A codificação do arquivo pode ser especificado se o conteúdo do arquivo está em uma codificação, como ASCII ou UTF-8. Se você está lendo de um arquivo com caracteres estendidos, você precisa especificar a codificação do arquivo usando outra sobrecarga do método ReadAllText.       Não faça decisões sobre o conteúdo do arquivo com base no nome do arquivo. Por exemplo, o arquivo Form1. vb pode não ser um arquivo de origem do Visual Basic. Verifique se todas as entradas antes de usar os dados em seu aplicativo.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.ReadAllText` método.      | Para | Consulte |   |--------|---------|   | Ler um arquivo de texto | [Como: ler arquivos de texto](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._42_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/m-microsoft.visualbasic._42_2.vb)]"
  syntax:
    content: public string ReadAllText (string file);
    parameters:
    - id: file
      type: System.String
      description: "Nome e caminho do arquivo para leitura."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>que contém o conteúdo do arquivo."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para gravar a cadeia de caracteres no buffer."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)
  id: ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystemProxy.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(String,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Retorna o conteúdo de um arquivo de texto como um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref>."
  remarks: "O `ReadAllText` método o `My.Computer.FileSystem` objeto permite que você ler de um arquivo de texto. O conteúdo do arquivo é retornado como uma cadeia de caracteres.       A codificação do arquivo pode ser especificado se o conteúdo do arquivo está em uma codificação, como ASCII ou UTF-8. Se você está lendo de um arquivo com caracteres estendidos, você precisa especificar a codificação do arquivo.       Não faça decisões sobre o conteúdo do arquivo com base no nome do arquivo. Por exemplo, o arquivo Form1. vb pode não ser um arquivo de origem do Visual Basic. Verifique se todas as entradas antes de usar os dados em seu aplicativo.       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.ReadAllText` método.      | Para | Consulte |   |--------|---------|   | Ler um arquivo de texto | [Como: ler arquivos de texto](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example reads the contents of `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#8](~/add/codesnippet/visualbasic/0c9a40ea-b248-4e9c-850c-_1.vb)]  \n  \n This example reads the contents of the ASCII file `Test.txt` into a string and then displays it in a message box.  \n  \n [!code-vb[VbRefFile#9](~/add/codesnippet/visualbasic/0c9a40ea-b248-4e9c-850c-_2.vb)]"
  syntax:
    content: public string ReadAllText (string file, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Nome e caminho do arquivo para leitura."
    - id: encoding
      type: System.Text.Encoding
      description: "Codificação para ler o arquivo de caractere. Padrão é UTF-8."
    return:
      type: System.String
      description: "<xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;></xref>que contém o conteúdo do arquivo."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para gravar a cadeia de caracteres no buffer."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)
  id: RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: RenameDirectory(String,String)
  nameWithType: FileSystemProxy.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Renomeia um diretório."
  remarks: "Esse método não pode ser usado para mover um diretório. Use o `MoveDirectory` método para mover e renomear o diretório."
  example:
  - "This example renames the `Test` directory to `SecondTest`.  \n  \n [!code-vb[VbVbcnMyFileSystem#13](~/add/codesnippet/visualbasic/2ed39ac4-a333-4d3c-94f5-_1.vb)]"
  syntax:
    content: public void RenameDirectory (string directory, string newName);
    parameters:
    - id: directory
      type: System.String
      description: "Caminho e nome do diretório a ser renomeado."
    - id: newName
      type: System.String
      description: "Novo nome do diretório."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>contém informações de caminho."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>directory</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       - ou - <code>newName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "O diretório não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Há um arquivo ou diretório existente com o nome especificado em <code> newName </code>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede 248 caracteres."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem a permissão necessária."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)
  id: RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: RenameFile(String,String)
  nameWithType: FileSystemProxy.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(String,String)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Renomeia um arquivo."
  remarks: "Esse método não pode ser usado para mover um arquivo. Use o <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile%2A>método para mover e renomear o arquivo.</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile%2A>       A tabela a seguir lista um exemplo de tarefa envolvendo o `My.Computer.FileSystem.RenameFile` método.      | Para | Consulte |   |--------|---------|   | Renomear um arquivo | [Como: renomear um arquivo](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example renames the file `Test.txt` to `SecondTest.txt`.  \n  \n [!code-vb[VbVbcnMyFileSystem#1](~/add/codesnippet/visualbasic/b921ac51-10eb-406b-bf32-_1.vb)]  \n  \n Change \"`C:\\Test.txt`\" to the path and file name of the file that you want to rename."
  syntax:
    content: public void RenameFile (string file, string newName);
    parameters:
    - id: file
      type: System.String
      description: "Arquivo a ser renomeado."
    - id: newName
      type: System.String
      description: "Novo nome de arquivo."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>newName</code>contém informações de caminho ou termina com uma barra invertida (\\\\)."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>.       - ou - <code>newName</code> é <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Há um arquivo ou diretório existente com o nome especificado em <code> newName </code>."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O usuário não tem a permissão necessária."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
  id: SpecialDirectories
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: SpecialDirectories
  nameWithType: FileSystemProxy.SpecialDirectories
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
  type: Property
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Obtém um objeto que fornece propriedades para acessar normalmente referenciadas diretórios."
  remarks: ''
  example:
  - "This example returns the file path for the user's Desktop directory and displays it.  \n  \n [!code-vb[VbVbcnMyFileSystem#80](~/add/codesnippet/visualbasic/p-microsoft.visualbasic._102_1.vb)]"
  syntax:
    content: public Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy SpecialDirectories { get; }
    return:
      type: Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy
      description: "Essa propriedade retorna o <xref href=&quot;Microsoft.VisualBasic.FileIO.SpecialDirectories&quot;> </xref> objeto para o computador."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  id: WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystemProxy.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(String,Byte[],Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Grava dados em um arquivo binário."
  remarks: "Se o caminho especificado, exceto o nome do arquivo não for válido, um <xref:System.IO.DirectoryNotFoundException>exceção será lançada.</xref:System.IO.DirectoryNotFoundException> Se o caminho é válido, mas o arquivo não existir, o arquivo é criado.      > [!NOTE] > O `WriteAllBytes` método abre um arquivo, grava a ele e, em seguida, fecha. O código que usa o `WriteAllBytes` método é mais simples do que o código que usa um <xref:System.IO.BinaryWriter>objeto.</xref:System.IO.BinaryWriter> No entanto, se você estiver adicionando dados a um arquivo usando um loop, uma <xref:System.IO.BinaryWriter>objeto pode fornecer desempenho melhor porque você só precisa abrir e fechar o arquivo de uma vez.</xref:System.IO.BinaryWriter>       A tabela a seguir lista um exemplo de tarefa envolvendo o `My.Computer.FileSystem.WriteAllBytes` método.      | Para | Consulte |   |--------|---------|   | Gravar em um arquivo binário | [Como: gravar em arquivos binários](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example appends the data array `CustomerData` to the file `CollectedData`.  \n  \n [!code-vb[VbVbcnMyFileSystem#50](~/add/codesnippet/visualbasic/b345f967-5fa3-438e-bb10-_1.vb)]"
  syntax:
    content: public void WriteAllBytes (string file, byte[] data, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Caminho e nome do arquivo a ser gravado."
    - id: data
      type: System.Byte[]
      description: "Dados a serem gravados no arquivo."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Acrescentar ao conteúdo do arquivo; <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> para substituir o conteúdo do arquivo. O padrão é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para gravar a cadeia de caracteres no buffer."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)
  id: WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystemProxy.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(String,String,Boolean)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Grava um arquivo de texto."
  remarks: "A codificação UTF-8 é usada para gravar no arquivo. Para especificar uma codificação diferente, use uma sobrecarga diferente do método WriteAllText.       Se o arquivo especificado não existir, ele será criado.       Se a codificação especificada não coincide com a codificação existente do arquivo, a codificação especificada será ignorada.      > [!NOTE] > O `WriteAllText` método abre um arquivo, grava a ele e, em seguida, fecha. O código que usa o `WriteAllText` método é mais simples do que o código que usa um <xref:System.IO.StreamWriter>objeto.</xref:System.IO.StreamWriter> No entanto, se você estiver adicionando cadeias de caracteres em um arquivo usando um loop, uma <xref:System.IO.StreamWriter>objeto pode fornecer desempenho melhor porque você só precisa abrir e fechar o arquivo de uma vez.</xref:System.IO.StreamWriter> Para obter mais informações, consulte o <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A>método.</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A>       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.WriteAllText` método.      | Para | Consulte |   |--------|---------|   | Gravar texto em um arquivo | [Como: gravar texto em arquivos](~/add/includes/ajax-current-ext-md.md)|   | Anexar o texto em um arquivo | [Como: anexar a arquivos de texto](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/b3bc6c73-a9f7-45d9-a0dd-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/b3bc6c73-a9f7-45d9-a0dd-_2.vb)]"
  syntax:
    content: public void WriteAllText (string file, string text, bool append);
    parameters:
    - id: file
      type: System.String
      description: "Arquivo a ser gravado."
    - id: text
      type: System.String
      description: "Texto a ser gravado no arquivo."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Acrescentar ao conteúdo do arquivo. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> para substituir o conteúdo do arquivo. O padrão é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para gravar a cadeia de caracteres no buffer."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  id: WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  langs:
  - csharp
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystemProxy.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(String,String,Boolean,Encoding)
  type: Method
  assemblies:
  - Microsoft.VisualBasic
  namespace: Microsoft.VisualBasic.MyServices
  summary: "Grava um arquivo de texto."
  remarks: "Se o arquivo especificado não existir, ele será criado.       Se a codificação especificada não coincide com a codificação existente do arquivo, a codificação especificada será ignorada.      > [!NOTE] > O `WriteAllText` método abre um arquivo, grava a ele e, em seguida, fecha. O código que usa o `WriteAllText` método é mais simples do que o código que usa um <xref:System.IO.StreamWriter>objeto.</xref:System.IO.StreamWriter> No entanto, se você estiver adicionando cadeias de caracteres em um arquivo usando um loop, uma <xref:System.IO.StreamWriter>objeto pode fornecer desempenho melhor porque você só precisa abrir e fechar o arquivo de uma vez.</xref:System.IO.StreamWriter> Para obter mais informações, consulte o <xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A>método.</xref:Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter%2A>       A tabela a seguir lista exemplos de tarefas que envolvem o `My.Computer.FileSystem.WriteAllText` método.      | Para | Consulte |   |--------|---------|   | Gravar texto em um arquivo | [Como: gravar texto em arquivos](~/add/includes/ajax-current-ext-md.md)|   | Anexar o texto em um arquivo | [Como: anexar a arquivos de texto](~/add/includes/ajax-current-ext-md.md)|"
  example:
  - "This example writes the line `\"This is new text to be added.\"` to the file `Test.txt`, overwriting any existing text in the file.  \n  \n [!code-vb[VbRefFile#21](~/add/codesnippet/visualbasic/c3f4399d-52a7-439b-9ff1-_1.vb)]  \n  \n This example writes the names of the files in the `Documents and Settings` folder to `FileList.txt`, inserting a carriage return between each for better readability.  \n  \n [!code-vb[VbRefFile#22](~/add/codesnippet/visualbasic/c3f4399d-52a7-439b-9ff1-_2.vb)]"
  syntax:
    content: public void WriteAllText (string file, string text, bool append, System.Text.Encoding encoding);
    parameters:
    - id: file
      type: System.String
      description: "Arquivo a ser gravado."
    - id: text
      type: System.String
      description: "Texto a ser gravado no arquivo."
    - id: append
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Acrescentar ao conteúdo do arquivo. <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> para substituir o conteúdo do arquivo. O padrão é <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref>."
    - id: encoding
      type: System.Text.Encoding
      description: "Qual codificação a ser usado ao gravar no arquivo. Padrão é UTF-8."
  overload: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: 'O caminho não é válido para um dos seguintes motivos: é uma cadeia de caracteres de comprimento zero; ele contém somente espaços em branco; ele contém caracteres inválidos. ou é um caminho de dispositivo (começa com \\ \\.\\); ele termina com uma barra à direita.'
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>file</code>is <xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não existe."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "O arquivo está em uso por outro processo ou ocorre um erro de e/s."
  - type: System.IO.PathTooLongException
    commentId: T:System.IO.PathTooLongException
    description: "O caminho excede o comprimento máximo definido pelo sistema."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Um nome de arquivo ou diretório no caminho contém dois-pontos (:) ou está em um formato inválido."
  - type: System.OutOfMemoryException
    commentId: T:System.OutOfMemoryException
    description: "Não há memória suficiente para gravar a cadeia de caracteres no buffer."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O usuário não possui as permissões necessárias para exibir o caminho."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.IO.PathTooLongException
  isExternal: true
  name: System.IO.PathTooLongException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.OperationCanceledException
  isExternal: true
  name: System.OperationCanceledException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: Microsoft.VisualBasic.FileIO.MalformedLineException
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: MalformedLineException
  nameWithType: MalformedLineException
  fullName: Microsoft.VisualBasic.FileIO.MalformedLineException
- uid: System.OutOfMemoryException
  isExternal: true
  name: System.OutOfMemoryException
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CombinePath(String,String)
  nameWithType: FileSystemProxy.CombinePath(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory(String,String)
  nameWithType: FileSystemProxy.CopyDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory(String,String,UIOption)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.FileIO.UIOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UIOption
  nameWithType: UIOption
  fullName: Microsoft.VisualBasic.FileIO.UIOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory(String,String,Boolean)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.CopyDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.FileIO.UICancelOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: UICancelOption
  nameWithType: UICancelOption
  fullName: Microsoft.VisualBasic.FileIO.UICancelOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile(String,String)
  nameWithType: FileSystemProxy.CopyFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile(String,String,UIOption)
  nameWithType: FileSystemProxy.CopyFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile(String,String,Boolean)
  nameWithType: FileSystemProxy.CopyFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.CopyFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CreateDirectory(String)
  nameWithType: FileSystemProxy.CreateDirectory(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystemProxy.CurrentDirectory
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.DeleteDirectoryOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteDirectory(String,DeleteDirectoryOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,DeleteDirectoryOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,DeleteDirectoryOption)
- uid: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: DeleteDirectoryOption
  nameWithType: DeleteDirectoryOption
  fullName: Microsoft.VisualBasic.FileIO.DeleteDirectoryOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.FileIO.RecycleOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: RecycleOption
  nameWithType: RecycleOption
  fullName: Microsoft.VisualBasic.FileIO.RecycleOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteFile(String)
  nameWithType: FileSystemProxy.DeleteFile(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption)
  nameWithType: FileSystemProxy.DeleteFile(String,UIOption,RecycleOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String,UIOption,RecycleOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.RecycleOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  nameWithType: FileSystemProxy.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile(String,UIOption,RecycleOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DirectoryExists(String)
  nameWithType: FileSystemProxy.DirectoryExists(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: Drives
  nameWithType: FileSystemProxy.Drives
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IO.DriveInfo}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<DriveInfo>
  nameWithType: ReadOnlyCollection<DriveInfo>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IO.DriveInfo>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IO.DriveInfo>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IO.DriveInfo
    name: DriveInfo
    nameWithType: DriveInfo
    fullName: DriveInfo
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FileExists(String)
  nameWithType: FileSystemProxy.FileExists(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption)
  nameWithType: FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.String}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<String>
  nameWithType: ReadOnlyCollection<String>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.String>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.VisualBasic.FileIO.SearchOption
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: SearchOption
  nameWithType: SearchOption
  fullName: Microsoft.VisualBasic.FileIO.SearchOption
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(System.String,System.String,System.Boolean,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FindInFiles(String,String,Boolean,SearchOption,String[])
  nameWithType: FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles(String,String,Boolean,SearchOption,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectories(String)
  nameWithType: FileSystemProxy.GetDirectories(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectories(String,SearchOption,String[])
  nameWithType: FileSystemProxy.GetDirectories(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectoryInfo(String)
  nameWithType: FileSystemProxy.GetDirectoryInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo(String)
- uid: System.IO.DirectoryInfo
  parent: System.IO
  isExternal: false
  name: DirectoryInfo
  nameWithType: DirectoryInfo
  fullName: System.IO.DirectoryInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDriveInfo(String)
  nameWithType: FileSystemProxy.GetDriveInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo(String)
- uid: System.IO.DriveInfo
  parent: System.IO
  isExternal: false
  name: DriveInfo
  nameWithType: DriveInfo
  fullName: System.IO.DriveInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFileInfo(String)
  nameWithType: FileSystemProxy.GetFileInfo(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo(String)
- uid: System.IO.FileInfo
  parent: System.IO
  isExternal: false
  name: FileInfo
  nameWithType: FileInfo
  fullName: System.IO.FileInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFiles(String)
  nameWithType: FileSystemProxy.GetFiles(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(System.String,Microsoft.VisualBasic.FileIO.SearchOption,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFiles(String,SearchOption,String[])
  nameWithType: FileSystemProxy.GetFiles(String,SearchOption,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles(String,SearchOption,String[])
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetName(String)
  nameWithType: FileSystemProxy.GetName(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetParentPath(String)
  nameWithType: FileSystemProxy.GetParentPath(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetTempFileName()
  nameWithType: FileSystemProxy.GetTempFileName()
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName()
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory(String,String)
  nameWithType: FileSystemProxy.MoveDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory(String,String,UIOption)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,UIOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory(String,String,Boolean)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.MoveDirectory(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile(String,String)
  nameWithType: FileSystemProxy.MoveFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile(String,String,UIOption)
  nameWithType: FileSystemProxy.MoveFile(String,String,UIOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,UIOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile(String,String,Boolean)
  nameWithType: FileSystemProxy.MoveFile(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(System.String,System.String,Microsoft.VisualBasic.FileIO.UIOption,Microsoft.VisualBasic.FileIO.UICancelOption)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile(String,String,UIOption,UICancelOption)
  nameWithType: FileSystemProxy.MoveFile(String,String,UIOption,UICancelOption)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile(String,String,UIOption,UICancelOption)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFieldParser(String)
  nameWithType: FileSystemProxy.OpenTextFieldParser(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String)
- uid: Microsoft.VisualBasic.FileIO.TextFieldParser
  parent: Microsoft.VisualBasic.FileIO
  isExternal: false
  name: TextFieldParser
  nameWithType: TextFieldParser
  fullName: Microsoft.VisualBasic.FileIO.TextFieldParser
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.Int32[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFieldParser(String,Int32[])
  nameWithType: FileSystemProxy.OpenTextFieldParser(String,Int32[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String,Int32[])
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(System.String,System.String[])
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFieldParser(String,String[])
  nameWithType: FileSystemProxy.OpenTextFieldParser(String,String[])
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser(String,String[])
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileReader(String)
  nameWithType: FileSystemProxy.OpenTextFileReader(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(String)
- uid: System.IO.StreamReader
  parent: System.IO
  isExternal: true
  name: StreamReader
  nameWithType: StreamReader
  fullName: System.IO.StreamReader
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileReader(String,Encoding)
  nameWithType: FileSystemProxy.OpenTextFileReader(String,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader(String,Encoding)
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileWriter(String,Boolean)
  nameWithType: FileSystemProxy.OpenTextFileWriter(String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(String,Boolean)
- uid: System.IO.StreamWriter
  parent: System.IO
  isExternal: true
  name: StreamWriter
  nameWithType: StreamWriter
  fullName: System.IO.StreamWriter
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileWriter(String,Boolean,Encoding)
  nameWithType: FileSystemProxy.OpenTextFileWriter(String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter(String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllBytes(String)
  nameWithType: FileSystemProxy.ReadAllBytes(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes(String)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllText(String)
  nameWithType: FileSystemProxy.ReadAllText(String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(System.String,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllText(String,Encoding)
  nameWithType: FileSystemProxy.ReadAllText(String,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText(String,Encoding)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: RenameDirectory(String,String)
  nameWithType: FileSystemProxy.RenameDirectory(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(System.String,System.String)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: RenameFile(String,String)
  nameWithType: FileSystemProxy.RenameFile(String,String)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile(String,String)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: SpecialDirectories
  nameWithType: FileSystemProxy.SpecialDirectories
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories
- uid: Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy
  parent: Microsoft.VisualBasic.MyServices
  isExternal: false
  name: SpecialDirectoriesProxy
  nameWithType: SpecialDirectoriesProxy
  fullName: Microsoft.VisualBasic.MyServices.SpecialDirectoriesProxy
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(System.String,System.Byte[],System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllBytes(String,Byte[],Boolean)
  nameWithType: FileSystemProxy.WriteAllBytes(String,Byte[],Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes(String,Byte[],Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllText(String,String,Boolean)
  nameWithType: FileSystemProxy.WriteAllText(String,String,Boolean)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(String,String,Boolean)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(System.String,System.String,System.Boolean,System.Text.Encoding)
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllText(String,String,Boolean,Encoding)
  nameWithType: FileSystemProxy.WriteAllText(String,String,Boolean,Encoding)
  fullName: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText(String,String,Boolean,Encoding)
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CombinePath*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CombinePath
  nameWithType: FileSystemProxy.CombinePath
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyDirectory
  nameWithType: FileSystemProxy.CopyDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CopyFile*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CopyFile
  nameWithType: FileSystemProxy.CopyFile
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CreateDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CreateDirectory
  nameWithType: FileSystemProxy.CreateDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.CurrentDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: CurrentDirectory
  nameWithType: FileSystemProxy.CurrentDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteDirectory
  nameWithType: FileSystemProxy.DeleteDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DeleteFile*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DeleteFile
  nameWithType: FileSystemProxy.DeleteFile
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.DirectoryExists*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: DirectoryExists
  nameWithType: FileSystemProxy.DirectoryExists
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.Drives*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: Drives
  nameWithType: FileSystemProxy.Drives
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FileExists*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FileExists
  nameWithType: FileSystemProxy.FileExists
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.FindInFiles*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: FindInFiles
  nameWithType: FileSystemProxy.FindInFiles
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectories*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectories
  nameWithType: FileSystemProxy.GetDirectories
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDirectoryInfo*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDirectoryInfo
  nameWithType: FileSystemProxy.GetDirectoryInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetDriveInfo*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetDriveInfo
  nameWithType: FileSystemProxy.GetDriveInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFileInfo*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFileInfo
  nameWithType: FileSystemProxy.GetFileInfo
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetFiles*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetFiles
  nameWithType: FileSystemProxy.GetFiles
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetName*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetName
  nameWithType: FileSystemProxy.GetName
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetParentPath*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetParentPath
  nameWithType: FileSystemProxy.GetParentPath
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.GetTempFileName*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: GetTempFileName
  nameWithType: FileSystemProxy.GetTempFileName
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveDirectory
  nameWithType: FileSystemProxy.MoveDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.MoveFile*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: MoveFile
  nameWithType: FileSystemProxy.MoveFile
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFieldParser*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFieldParser
  nameWithType: FileSystemProxy.OpenTextFieldParser
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileReader*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileReader
  nameWithType: FileSystemProxy.OpenTextFileReader
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.OpenTextFileWriter*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: OpenTextFileWriter
  nameWithType: FileSystemProxy.OpenTextFileWriter
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllBytes*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllBytes
  nameWithType: FileSystemProxy.ReadAllBytes
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.ReadAllText*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: ReadAllText
  nameWithType: FileSystemProxy.ReadAllText
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameDirectory*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: RenameDirectory
  nameWithType: FileSystemProxy.RenameDirectory
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.RenameFile*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: RenameFile
  nameWithType: FileSystemProxy.RenameFile
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.SpecialDirectories*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: SpecialDirectories
  nameWithType: FileSystemProxy.SpecialDirectories
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllBytes*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllBytes
  nameWithType: FileSystemProxy.WriteAllBytes
- uid: Microsoft.VisualBasic.MyServices.FileSystemProxy.WriteAllText*
  parent: Microsoft.VisualBasic.MyServices.FileSystemProxy
  isExternal: false
  name: WriteAllText
  nameWithType: FileSystemProxy.WriteAllText
