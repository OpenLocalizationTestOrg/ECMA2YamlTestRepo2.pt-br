### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  id: TypeCodeDomSerializer
  children:
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  - System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)
  langs:
  - csharp
  name: TypeCodeDomSerializer
  nameWithType: TypeCodeDomSerializer
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  type: Class
  summary: "Serializa um objeto para um novo tipo."
  remarks: "A classe TypeCodeDomSerializer realiza as mesmas tarefas que um <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>, mas serializar um objeto por meio dessa classe define um novo tipo.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DefaultSerializationProvider(typeof(System.ComponentModel.Design.Serialization.CodeDomSerializationProvider))]

      public class TypeCodeDomSerializer : System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  inheritance:
  - System.Object
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  implements: []
  inheritedMembers:
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: TypeCodeDomSerializer()
  nameWithType: TypeCodeDomSerializer.TypeCodeDomSerializer()
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.TypeCodeDomSerializer()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.Serialization.TypeCodeDomSerializer&quot;> </xref> classe."
  syntax:
    content: public TypeCodeDomSerializer ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  id: Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  nameWithType: TypeCodeDomSerializer.Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Desserializa a declaração de tipo em questão."
  remarks: "O método Deserialize desserializa uma declaração de tipo de código anteriormente serializado. A tabela a seguir mostra que a implementação do padrão de tarefas executa.      | Tarefa | Descrição |   |----------|-----------------|   | Caso as verificações de confidencialidade | A implementação procura por um serviço de <xref:System.CodeDom.Compiler.CodeDomProvider>decidir se ele deve tratar membros como maiusculas e minúsculas ou maiusculas de minúsculas. |   | Classificação de instrução | Todas as variáveis de membro e variáveis locais de métodos de inicialização são armazenadas em uma tabela.</xref:System.CodeDom.Compiler.CodeDomProvider> Em seguida, cada instrução em um método de inicialização é adicionada a uma coleção de instrução agrupada de acordo com seu lado esquerdo, para que todas as instruções de atribuição ou operando em uma determinada variável são agrupadas sob essa variável. Variáveis com nenhuma instrução são descartadas. |   | Desserialização | As coleções de instrução para cada variável são desserializadas de acordo com a variável. |       A tabela a seguir mostra os serviços que o método Deserialize requer.      | Serviço | Descrição |   |-------------|-----------------|   | <xref:System.CodeDom.Compiler.CodeDomProvider>| Enquanto não é estritamente necessária, o serviço, se disponível, é usado para determinar se a serialização deve ser entre maiusculas e minúsculas ou maiusculas de minúsculas. |   | <xref:System.ComponentModel.IContainer>| Se um objeto não existe na tabela de nome durante a desserialização, uma consulta para <xref:System.ComponentModel.IContainer>é feita.</xref:System.ComponentModel.IContainer> </xref:System.ComponentModel.IContainer> </xref:System.CodeDom.Compiler.CodeDomProvider> Se esta consulta for bem-sucedida, o contêiner é verificado para o objeto. O contêiner também é usado como um substituto para um argumento de contêiner necessário pelos componentes. |"
  syntax:
    content: public virtual object Deserialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O Gerenciador de serialização a ser usado para serialização."
    - id: declaration
      type: System.CodeDom.CodeTypeDeclaration
      description: "Tipo de declaração a ser usado para serialização."
    return:
      type: System.Object
      description: "O objeto raiz."
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>typeDecl</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)
  id: GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  nameWithType: TypeCodeDomSerializer.GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Retorna o método de armazenamento de instruções usadas para serializar um membro."
  remarks: "O método GetInitializeMethod retorna o método para emitir todo o código de inicialização para o membro especificado. A implementação padrão retorna um construtor vazio. Se for o mesmo método a ser retornado para vários valores, a mesma instância do método deve ser retornada. Você pode usar o <xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=fullName>dicionário lembrar métodos que você criou.</xref:System.CodeDom.CodeObject.UserData%2A?displayProperty=fullName> O `typeDecl` parâmetro também pode ser usado para adicionar métodos de infraestrutura. Por exemplo, se você quiser emitir um método separado para cada objeto, você precisa de um único método que chama todos esses métodos de. Esse método pode ser adicionado à declaração de tipo de código, conforme necessário."
  syntax:
    content: protected virtual System.CodeDom.CodeMemberMethod GetInitializeMethod (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O Gerenciador de serialização a ser usado para serialização."
    - id: declaration
      type: System.CodeDom.CodeTypeDeclaration
      description: "O tipo de declaração a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O valor a ser usado para serialização."
    return:
      type: System.CodeDom.CodeMemberMethod
      description: "O método usado para emitir todo o código de inicialização para o membro especificado."
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>typeDecl</code>, or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  id: GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  nameWithType: TypeCodeDomSerializer.GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Retorna uma matriz de métodos para serem interpretados durante a desserialização."
  remarks: "A implementação padrão retorna uma matriz de elemento único com o construtor nele."
  syntax:
    content: protected virtual System.CodeDom.CodeMemberMethod[] GetInitializeMethods (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeTypeDeclaration declaration);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O Gerenciador de serialização a ser usado para serialização."
    - id: declaration
      type: System.CodeDom.CodeTypeDeclaration
      description: "O tipo de declaração a ser usado para serialização."
    return:
      type: System.CodeDom.CodeMemberMethod[]
      description: "Um <xref href=&quot;System.CodeDom.CodeMemberMethod&quot;> </xref> matriz de métodos para serem interpretados durante a desserialização."
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>typeDecl</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)
  id: Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  langs:
  - csharp
  name: Serialize(IDesignerSerializationManager,Object,ICollection)
  nameWithType: TypeCodeDomSerializer.Serialize(IDesignerSerializationManager,Object,ICollection)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(IDesignerSerializationManager,Object,ICollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa a raiz do objeto, criando uma nova declaração de tipo que define a raiz."
  remarks: "O método Serialize serializa o objeto raiz específico e a coleção opcional de membros para criar uma nova definição de tipo. Se o `members` coleção contém valores, esses valores são serializados. Próprios valores podem serializar como variáveis de membro ou variáveis locais. Essa determinação é feita por meio de pesquisa para uma propriedade de extensão no objeto chamado `GenerateMember`. Se `true`, um membro é gerado. Caso contrário, uma variável local é gerada. Para sua conveniência, o `members` coleção pode conter o objeto raiz. Nesse caso, o objeto raiz também não é adicionado como um membro ou uma variável local.       O nome do tipo retornado é obtido do nome do objeto raiz, se fosse um objeto nomeado. Caso contrário, um nome é gerado do nome do tipo simples da classe raiz.       A tabela a seguir mostra as tarefas executadas pela implementação padrão do método de serialização.      | Tarefa | Descrição |   |----------|-----------------|   | A propagação do contexto | O contexto de serialização é inicializado com dados, incluindo o <xref:System.ComponentModel.Design.Serialization.RootContext>e <xref:System.CodeDom.CodeTypeDeclaration>|   | Serialização de membro | Em seguida, serializar percorre todos os membros e chamadas <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> </xref:System.CodeDom.CodeTypeDeclaration> </xref:System.ComponentModel.Design.Serialization.RootContext> Como a serialização é feita oportunamente no <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A>, isso garante que os serialização não é feita de duas vezes. |   | Serialização de raiz | Em seguida, o objeto raiz é serializado e suas instruções são adicionadas à coleção de instrução. |   | Integração de instrução | Depois que todos os objetos são serializados, o método Serialize ordena as instruções e os adiciona a um método retornado de <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>.</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A> </xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression%2A> Por fim, um construtor é gerado que chama todos os métodos retornados de <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>. |      -A tabela a seguir mostra os locais de método serializar os objetos na pilha de contexto.</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod%2A>      | Instância | Descrição |   |--------------|-----------------|   | <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>| Este serializador.</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> Derivando de classes pode ser útil para adicionar propriedades públicas para essa classe. |   | <xref:System.CodeDom.CodeTypeDeclaration>| O tipo que está sendo criado.</xref:System.CodeDom.CodeTypeDeclaration> A maioria dos objetos não precisam de acesso direto a este. |"
  syntax:
    content: public virtual System.CodeDom.CodeTypeDeclaration Serialize (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object root, System.Collections.ICollection members);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O Gerenciador de serialização a ser usado para serialização."
    - id: root
      type: System.Object
      description: "O objeto a ser serializado."
    - id: members
      type: System.Collections.ICollection
      description: "Coleção opcional de membros. Pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou vazio."
    return:
      type: System.CodeDom.CodeTypeDeclaration
      description: "Um <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> que define o objeto raiz."
  overload: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>root</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: TypeCodeDomSerializer()
  nameWithType: TypeCodeDomSerializer.TypeCodeDomSerializer()
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.TypeCodeDomSerializer()
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  nameWithType: TypeCodeDomSerializer.Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize(IDesignerSerializationManager,CodeTypeDeclaration)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration,System.Object)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  nameWithType: TypeCodeDomSerializer.GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod(IDesignerSerializationManager,CodeTypeDeclaration,Object)
- uid: System.CodeDom.CodeMemberMethod
  parent: System.CodeDom
  isExternal: false
  name: CodeMemberMethod
  nameWithType: CodeMemberMethod
  fullName: System.CodeDom.CodeMemberMethod
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeTypeDeclaration)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  nameWithType: TypeCodeDomSerializer.GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods(IDesignerSerializationManager,CodeTypeDeclaration)
- uid: System.CodeDom.CodeMemberMethod[]
  parent: System.CodeDom
  isExternal: false
  name: CodeMemberMethod
  nameWithType: CodeMemberMethod
  fullName: System.CodeDom.CodeMemberMethod[]
  spec.csharp:
  - uid: System.CodeDom.CodeMemberMethod
    name: CodeMemberMethod
    nameWithType: CodeMemberMethod
    fullName: CodeMemberMethod[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: Serialize(IDesignerSerializationManager,Object,ICollection)
  nameWithType: TypeCodeDomSerializer.Serialize(IDesignerSerializationManager,Object,ICollection)
  fullName: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize(IDesignerSerializationManager,Object,ICollection)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.#ctor*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: TypeCodeDomSerializer
  nameWithType: TypeCodeDomSerializer.TypeCodeDomSerializer
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Deserialize*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: Deserialize
  nameWithType: TypeCodeDomSerializer.Deserialize
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethod*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: GetInitializeMethod
  nameWithType: TypeCodeDomSerializer.GetInitializeMethod
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.GetInitializeMethods*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: GetInitializeMethods
  nameWithType: TypeCodeDomSerializer.GetInitializeMethods
- uid: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer.Serialize*
  parent: System.ComponentModel.Design.Serialization.TypeCodeDomSerializer
  isExternal: false
  name: Serialize
  nameWithType: TypeCodeDomSerializer.Serialize
