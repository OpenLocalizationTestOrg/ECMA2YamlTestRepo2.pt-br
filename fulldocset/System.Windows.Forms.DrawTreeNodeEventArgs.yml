### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.DrawTreeNodeEventArgs
  id: DrawTreeNodeEventArgs
  children:
  - System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)
  - System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  - System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  - System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  - System.Windows.Forms.DrawTreeNodeEventArgs.Node
  - System.Windows.Forms.DrawTreeNodeEventArgs.State
  langs:
  - csharp
  name: DrawTreeNodeEventArgs
  nameWithType: DrawTreeNodeEventArgs
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs
  type: Class
  summary: "Fornece dados para o <xref href=&quot;System.Windows.Forms.TreeView.DrawNode&quot;> </xref> eventos."
  remarks: "Use o <xref:System.Windows.Forms.TreeView.DrawNode>evento para personalizar a aparência de nós em um <xref:System.Windows.Forms.TreeView>controle usando o desenho do proprietário.</xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.DrawNode>       O <xref:System.Windows.Forms.TreeView.DrawNode>é gerado por um <xref:System.Windows.Forms.TreeView>controlar quando seu <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>está definida como <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>ou <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>e um nó é exibido ou atualizado.</xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> </xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TreeView.DrawNode> O DrawTreeNodeEventArgs passado para o manipulador de eventos contém informações sobre o nó para desenhar, bem como o fornecimento de métodos para ajudá-lo a desenhar o nó.       Use o <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>ou <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>Propriedades para recuperar informações sobre o nó para desenhar.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> </xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> Use o <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A>fazer o desenho real dentro da área especificada pela propriedade de <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>propriedade.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> </xref:System.Windows.Forms.DrawTreeNodeEventArgs.Graphics%2A> Para fazer com que o sistema operacional desenhar um nó que não precisa ser desenhados pelo proprietário, defina o <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>propriedade `true`.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A>       Quando o <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>estiver definida como <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>, a área indicado pelo <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>propriedade inclui a parte do rótulo do nó somente.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> </xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> Quando o <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>estiver definida como <xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName>, o <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A>área inclui o nó inteiro, incluindo a área usada normalmente para ícones, caixas de seleção, adição e subtração sinais e linhas que conectam os nós.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Bounds%2A> </xref:System.Windows.Forms.TreeViewDrawMode?displayProperty=fullName> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n Additionally, a handler for the <xref:System.Windows.Forms.Control.MouseDown?displayProperty=fullName> event provides hit-testing. By default, a node can be selected only by clicking the region around its label. The <xref:System.Windows.Forms.Control.MouseDown?displayProperty=fullName> event handler selects a node that is clicked anywhere within this region or within the region around a node tag, if present.  \n  \n [!code-vb[TreeViewOwnerDraw#1](~/add/codesnippet/visualbasic/t-system.windows.forms.d_20_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#1](~/add/codesnippet/cpp/t-system.windows.forms.d_20_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#1](~/add/codesnippet/csharp/t-system.windows.forms.d_20_1.cs)]"
  syntax:
    content: 'public class DrawTreeNodeEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)
  id: '#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)'
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  nameWithType: DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Forms.DrawTreeNodeEventArgs&quot;> </xref> classe."
  syntax:
    content: public DrawTreeNodeEventArgs (System.Drawing.Graphics graphics, System.Windows.Forms.TreeNode node, System.Drawing.Rectangle bounds, System.Windows.Forms.TreeNodeStates state);
    parameters:
    - id: graphics
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> superfície na qual desenhar."
    - id: node
      type: System.Windows.Forms.TreeNode
      description: "O <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> para desenhar."
    - id: bounds
      type: System.Drawing.Rectangle
      description: "O <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> no qual desenhar."
    - id: state
      type: System.Windows.Forms.TreeNodeStates
      description: "Uma combinação bit a bit do <xref href=&quot;System.Windows.Forms.TreeNodeStates&quot;> </xref> valores que indica o estado atual do <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> para desenhar."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  id: Bounds
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: Bounds
  nameWithType: DrawTreeNodeEventArgs.Bounds
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o tamanho e local do <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> para desenhar."
  remarks: "O local especificado por essa propriedade é em relação ao canto superior esquerdo do <xref:System.Windows.Forms.TreeView>controle.</xref:System.Windows.Forms.TreeView>       Quando a <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>propriedade é definida, <xref:System.Windows.Forms.TreeViewDrawMode>a área especificada pela propriedade limites é a região em que um nó pode ser clicado para selecionar um proprietário.</xref:System.Windows.Forms.TreeViewDrawMode> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> Se você desenhar esta região de teste de clique, você deve fornecer seu próprio código para selecionar um nó quando a área visível é clicada. Você também deseja fornecer seu próprio teste de clique de código quando a <xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName>propriedade é definida como <xref:System.Windows.Forms.TreeViewDrawMode>.</xref:System.Windows.Forms.TreeViewDrawMode> </xref:System.Windows.Forms.TreeView.DrawMode%2A?displayProperty=fullName> Nesse modo, a propriedade dos limites engloba todo nó em toda a largura do <xref:System.Windows.Forms.TreeView>controlar, em vez de região de teste de clique apenas.</xref:System.Windows.Forms.TreeView>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_14_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_14_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_14_1.cs)]"
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; }
    return:
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa os limites do <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> para desenhar."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  id: DrawDefault
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: DrawDefault
  nameWithType: DrawTreeNodeEventArgs.DrawDefault
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> devem ser desenhadas pelo sistema operacional em vez de ser desenhados pelo proprietário."
  remarks: "Defina essa propriedade como `true` para nós que não deseja personalizar ao manipular o <xref:System.Windows.Forms.TreeView.DrawNode>evento.</xref:System.Windows.Forms.TreeView.DrawNode> Por exemplo, isso é útil quando você deseja personalizar somente nós que estão em um estado específico."
  example:
  - "The following code example demonstrates the use of this property. In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tag and a custom highlight color manually for the selected node. Nodes that are not selected do not need customization. For unselected nodes, the DrawDefault property is set to `true` so that they will be drawn by the operating system and will not have a customized appearance.  \n  \n> [!NOTE]\n>  If you draw a node manually and also set the DrawDefault property to `true`, some or all of what you draw may be overwritten by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_319_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_319_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_319_1.cs)]"
  syntax:
    content: public bool DrawDefault { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nó deve ser desenhado pelo sistema operacional; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o nó será desenhado no manipulador de eventos. O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  id: Graphics
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: Graphics
  nameWithType: DrawTreeNodeEventArgs.Graphics
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o <xref href=&quot;System.Drawing.Graphics&quot;> </xref> objeto usado para desenhar o <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
  remarks: "O <xref:System.Drawing.Graphics>classe fornece propriedades e métodos úteis para o dispositivo de vídeo de desenho.</xref:System.Drawing.Graphics>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_326_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_326_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_326_1.cs)]"
  syntax:
    content: public System.Drawing.Graphics Graphics { get; }
    return:
      type: System.Drawing.Graphics
      description: "A <xref href=&quot;System.Drawing.Graphics&quot;></xref> used to draw the <xref href=&quot;System.Windows.Forms.TreeNode&quot;></xref>."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Node
  id: Node
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: Node
  nameWithType: DrawTreeNodeEventArgs.Node
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Node
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> para desenhar."
  remarks: "Use essa propriedade para acessar o <xref:System.Windows.Forms.TreeNode>objeto ao desenhar.</xref:System.Windows.Forms.TreeNode> Isso é útil quando o <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>propriedade não fornece informações suficientes para atender às suas necessidades.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> O <xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A>propriedade fornece somente as informações de estado básica que você pode usar, por exemplo, para determinar se um nó é selecionado, marcado ou focalizado.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.State%2A> A propriedade do nó, por outro lado, permite acessar todos os membros de <xref:System.Windows.Forms.TreeNode>objeto.</xref:System.Windows.Forms.TreeNode> Você deve acessar o nó diretamente, por exemplo, quando você quiser determinar o estado de expansão."
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_198_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_198_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_198_1.cs)]"
  syntax:
    content: public System.Windows.Forms.TreeNode Node { get; }
    return:
      type: System.Windows.Forms.TreeNode
      description: "O <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> para desenhar."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.Node*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.State
  id: State
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  langs:
  - csharp
  name: State
  nameWithType: DrawTreeNodeEventArgs.State
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.State
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o estado atual do <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref> para desenhar."
  remarks: "Use essa propriedade para verificar se o <xref:System.Windows.Forms.TreeNode>objeto ao desenhar está em um estado específico.</xref:System.Windows.Forms.TreeNode> Esta propriedade fornece somente as informações de estado básica sobre o nó. Você pode usar essa propriedade, por exemplo, para determinar se um nó é selecionado, marcado ou focalizado. Se você precisa saber mais, recuperar o nó por meio de <xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A>propriedade.</xref:System.Windows.Forms.DrawTreeNodeEventArgs.Node%2A> Por exemplo, para determinar se o nó é expandido, você deve recuperar o nó e verifique o <xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=fullName>propriedade.</xref:System.Windows.Forms.TreeNode.IsExpanded%2A?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to customize a <xref:System.Windows.Forms.TreeView> control using owner drawing. The <xref:System.Windows.Forms.TreeView> control in the example displays optional node tags alongside the standard node labels. Node tags are specified using the <xref:System.Windows.Forms.TreeNode.Tag%2A?displayProperty=fullName> property. The <xref:System.Windows.Forms.TreeView> control also uses custom colors, including a custom highlight color.  \n  \n You can customize most of the <xref:System.Windows.Forms.TreeView> colors by setting color properties, but the selection highlight color is not available as a property. Additionally, the default selection highlight rectangle extends only around a node label. Owner drawing must be used to draw the node tags and to draw a customized highlight rectangle large enough to include a node tag.  \n  \n In the example, a handler for the <xref:System.Windows.Forms.TreeView.DrawNode?displayProperty=fullName> event draws the node tags and the custom selection highlight manually. Unselected nodes do not need customization. For these, the <xref:System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault%2A> property is set to `true` so that they will be drawn by the operating system.  \n  \n For the complete example, see the <xref:System.Windows.Forms.DrawTreeNodeEventArgs> overview reference topic.  \n  \n [!code-vb[TreeViewOwnerDraw#3](~/add/codesnippet/visualbasic/p-system.windows.forms.d_85_1.vb)]\n [!code-cpp[TreeViewOwnerDraw#3](~/add/codesnippet/cpp/p-system.windows.forms.d_85_1.cpp)]\n [!code-cs[TreeViewOwnerDraw#3](~/add/codesnippet/csharp/p-system.windows.forms.d_85_1.cs)]"
  syntax:
    content: public System.Windows.Forms.TreeNodeStates State { get; }
    return:
      type: System.Windows.Forms.TreeNodeStates
      description: "Uma combinação bit a bit do <xref href=&quot;System.Windows.Forms.TreeNodeStates&quot;> </xref> valores que indica o estado atual do <xref href=&quot;System.Windows.Forms.TreeNode&quot;> </xref>."
  overload: System.Windows.Forms.DrawTreeNodeEventArgs.State*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor(System.Drawing.Graphics,System.Windows.Forms.TreeNode,System.Drawing.Rectangle,System.Windows.Forms.TreeNodeStates)
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  nameWithType: DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawTreeNodeEventArgs(Graphics,TreeNode,Rectangle,TreeNodeStates)
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Windows.Forms.TreeNode
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Windows.Forms.TreeNode
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.TreeNodeStates
  parent: System.Windows.Forms
  isExternal: false
  name: TreeNodeStates
  nameWithType: TreeNodeStates
  fullName: System.Windows.Forms.TreeNodeStates
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Bounds
  nameWithType: DrawTreeNodeEventArgs.Bounds
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawDefault
  nameWithType: DrawTreeNodeEventArgs.DrawDefault
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Graphics
  nameWithType: DrawTreeNodeEventArgs.Graphics
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Node
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Node
  nameWithType: DrawTreeNodeEventArgs.Node
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.Node
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.State
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: State
  nameWithType: DrawTreeNodeEventArgs.State
  fullName: System.Windows.Forms.DrawTreeNodeEventArgs.State
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.#ctor*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawTreeNodeEventArgs
  nameWithType: DrawTreeNodeEventArgs.DrawTreeNodeEventArgs
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Bounds*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Bounds
  nameWithType: DrawTreeNodeEventArgs.Bounds
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.DrawDefault*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: DrawDefault
  nameWithType: DrawTreeNodeEventArgs.DrawDefault
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Graphics*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Graphics
  nameWithType: DrawTreeNodeEventArgs.Graphics
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.Node*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: Node
  nameWithType: DrawTreeNodeEventArgs.Node
- uid: System.Windows.Forms.DrawTreeNodeEventArgs.State*
  parent: System.Windows.Forms.DrawTreeNodeEventArgs
  isExternal: false
  name: State
  nameWithType: DrawTreeNodeEventArgs.State
