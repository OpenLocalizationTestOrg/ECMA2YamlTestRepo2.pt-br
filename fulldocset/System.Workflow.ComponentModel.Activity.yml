### YamlMime:ManagedReference
items:
- uid: System.Workflow.ComponentModel.Activity
  id: Activity
  children:
  - System.Workflow.ComponentModel.Activity.#ctor
  - System.Workflow.ComponentModel.Activity.#ctor(System.String)
  - System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  - System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Canceling
  - System.Workflow.ComponentModel.Activity.CancelingEvent
  - System.Workflow.ComponentModel.Activity.Clone
  - System.Workflow.ComponentModel.Activity.Closed
  - System.Workflow.ComponentModel.Activity.ClosedEvent
  - System.Workflow.ComponentModel.Activity.Compensating
  - System.Workflow.ComponentModel.Activity.CompensatingEvent
  - System.Workflow.ComponentModel.Activity.Description
  - System.Workflow.ComponentModel.Activity.Enabled
  - System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  - System.Workflow.ComponentModel.Activity.Executing
  - System.Workflow.ComponentModel.Activity.ExecutingEvent
  - System.Workflow.ComponentModel.Activity.ExecutionResult
  - System.Workflow.ComponentModel.Activity.ExecutionStatus
  - System.Workflow.ComponentModel.Activity.Faulting
  - System.Workflow.ComponentModel.Activity.FaultingEvent
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  - System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  - System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  - System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  - System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  - System.Workflow.ComponentModel.Activity.IsDynamicActivity
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  - System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.Name
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.Parent
  - System.Workflow.ComponentModel.Activity.QualifiedName
  - System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  - System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  - System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  - System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  - System.Workflow.ComponentModel.Activity.StatusChanged
  - System.Workflow.ComponentModel.Activity.StatusChangedEvent
  - System.Workflow.ComponentModel.Activity.ToString
  - System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  - System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  - System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  - System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  - System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  langs:
  - csharp
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
  type: Class
  summary: "Representa o bloco de construção fundamental de fluxos de trabalho. Atividade é a classe base para todas as atividades."
  remarks: "> [!NOTE] >  [!INCLUDE[DeprecatedContent](~/add/includes/ajax-current-ext-md.md)]Uma atividade é o principal bloco de construção de fluxos de trabalho. Uma atividade define um conjunto de propriedades e eventos, como qualquer classe, juntamente com a lógica de execução que define o comportamento de tempo de execução da atividade. Um conjunto de componentes adicionais pode ser associado uma atividade. Esses incluem, mas não estão limitados a um validador, um gerador de código, serializadores personalizados e um designer.       Todas as atividades compartilham um conjunto comum de propriedades definido na classe base da atividade.  Cada atividade pode declarar suas próprias propriedades adicionais de acordo com seus requisitos, estendendo a essa classe.  Porque deriva de atividade <xref:System.Workflow.ComponentModel.DependencyObject>, propriedades podem ser definidas como propriedades CLR padrão e propriedades de dependência.</xref:System.Workflow.ComponentModel.DependencyObject>       A lógica de execução de uma atividade atende a um contrato que existe entre qualquer atividade e o tempo de execução do fluxo de trabalho. Você deve documentar a lógica de execução de qualquer atividade em um sentido funcional, para que um desenvolvedor de fluxo de trabalho que usa a atividade Saiba como ele se comporta. A lógica de execução é ocultada do desenvolvedor de fluxo de trabalho que inclui a atividade em um fluxo de trabalho, porque a lógica de execução faz parte de um contrato que estritamente existe entre o tempo de execução do fluxo de trabalho e a atividade."
  example:
  - "This example defines an activity whose purpose is to send an email. The activity defines one property, `Subject`, that uses a dependency property in its implementation. Other properties can be defined in a similar way. The `Execute` method is overridden to provide the logic for sending the email. For a complete example, see the [Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669).  \n  \n```c#  \npublic class SendEmail : Activity  \n{  \n    public static readonly DependencyProperty SubjectProperty =  \n        DependencyProperty.Register(\"Subject\", typeof(string), typeof(SendEmail));  \n  \n    public string Subject  \n    {  \n        get { return base.GetValue(SubjectProperty) as string; }  \n        set { base.SetValue(SubjectProperty, value); }  \n    }  \n  \n    // Define other properties...  \n  \n    protected override ActivityExecutionStatus Execute(ActivityExecutionContext executionContext)  \n    {  \n        // Logic to send the e-mail goes here...  \n        return ActivityExecutionStatus.Closed;  \n    }  \n}  \n```"
  syntax:
    content: >-
      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityMarkupSerializer), typeof(System.Workflow.ComponentModel.Serialization.WorkflowMarkupSerializer))]

      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.CodeDomSerializer))]

      [System.ComponentModel.Design.Serialization.DesignerSerializer(typeof(System.Workflow.ComponentModel.Serialization.ActivityTypeCodeDomSerializer), typeof(System.ComponentModel.Design.Serialization.TypeCodeDomSerializer))]

      [System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ActivityDesigner), typeof(System.ComponentModel.Design.IDesigner))]

      [System.ComponentModel.Designer(typeof(System.Workflow.ComponentModel.Design.ActivityDesigner), typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.DesignerCategory("Component")]

      [System.ComponentModel.ToolboxItem(typeof(System.Workflow.ComponentModel.Design.ActivityToolboxItem))]

      [System.ComponentModel.ToolboxItemFilter("Microsoft.Workflow.VSDesigner", System.ComponentModel.ToolboxItemFilterType.Require)]

      [System.ComponentModel.ToolboxItemFilter("System.Workflow.ComponentModel.Design.ActivitySet", System.ComponentModel.ToolboxItemFilterType.Allow)]

      [System.Drawing.ToolboxBitmap(typeof(System.Workflow.ComponentModel.Activity), "Design.Resources.Activity.png")]

      [System.Obsolete("The System.Workflow.* types are deprecated.  Instead, please use the new types from System.Activities.*")]

      [System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator(typeof(System.Workflow.ComponentModel.Compiler.ActivityCodeGenerator))]

      [System.Workflow.ComponentModel.Compiler.ActivityValidator(typeof(System.Workflow.ComponentModel.Compiler.ActivityValidator))]

      [System.Workflow.ComponentModel.Serialization.RuntimeNameProperty("Name")]

      public class Activity : System.Workflow.ComponentModel.DependencyObject
  inheritance:
  - System.Object
  - System.Workflow.ComponentModel.DependencyObject
  implements: []
  inheritedMembers:
  - System.Workflow.ComponentModel.DependencyObject.AddHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.DesignMode
  - System.Workflow.ComponentModel.DependencyObject.Dispose
  - System.Workflow.ComponentModel.DependencyObject.Dispose(System.Boolean)
  - System.Workflow.ComponentModel.DependencyObject.GetBinding(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Type)
  - System.Workflow.ComponentModel.DependencyObject.GetInvocationList``1(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValue(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.GetValueBase(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.InitializeProperties
  - System.Workflow.ComponentModel.DependencyObject.IsBindingSet(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.MetaEquals(System.Workflow.ComponentModel.DependencyObject)
  - System.Workflow.ComponentModel.DependencyObject.ParentDependencyObject
  - System.Workflow.ComponentModel.DependencyObject.RemoveHandler(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.RemoveProperty(System.Workflow.ComponentModel.DependencyProperty)
  - System.Workflow.ComponentModel.DependencyObject.SetBinding(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.ActivityBind)
  - System.Workflow.ComponentModel.DependencyObject.SetBoundValue(System.Workflow.ComponentModel.ActivityBind,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetReadOnlyPropertyValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValue(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.SetValueBase(System.Workflow.ComponentModel.DependencyProperty,System.Object)
  - System.Workflow.ComponentModel.DependencyObject.Site
  - System.Workflow.ComponentModel.DependencyObject.UserData
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.#ctor
  id: '#ctor'
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Activity()
  nameWithType: Activity.Activity()
  fullName: System.Workflow.ComponentModel.Activity.Activity()
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> classe."
  remarks: ''
  example:
  - "The following code shows how to create activities and add them as children to a composite activity.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: public Activity ();
    parameters: []
  overload: System.Workflow.ComponentModel.Activity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Activity(String)
  nameWithType: Activity.Activity(String)
  fullName: System.Workflow.ComponentModel.Activity.Activity(String)
  type: Constructor
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> classe ao inicializar <xref:System.Workflow.ComponentModel.Activity.Name*>.</xref:System.Workflow.ComponentModel.Activity.Name*>"
  syntax:
    content: public Activity (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome a ser associado com esta instância. O nome deve estar em conformidade com as convenções de nomenclatura de variável para a linguagem de programação que está sendo usada no projeto de fluxo de trabalho e deve ser exclusivo no fluxo de trabalho."
  overload: System.Workflow.ComponentModel.Activity.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  id: ActivityContextGuidProperty
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ActivityContextGuidProperty
  nameWithType: Activity.ActivityContextGuidProperty
  fullName: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "O <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que representa o <xref:System.Guid>do <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> que está associado a <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>.</xref:System.Guid>"
  remarks: '[!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]'
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ActivityContextGuidProperty;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Cancel(ActivityExecutionContext)
  nameWithType: Activity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.Activity.Cancel(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para cancelar a execução de uma atividade que está sendo executado."
  syntax:
    content: protected virtual System.Workflow.ComponentModel.ActivityExecutionStatus Cancel (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "O <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> que contém a instância para cancelar."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "O status no final da operação que determina se a atividade permanece no estado de cancelamento ou faz a transição para o estado fechado."
  overload: System.Workflow.ComponentModel.Activity.Cancel*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Canceling
  id: Canceling
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Canceling
  nameWithType: Activity.Canceling
  fullName: System.Workflow.ComponentModel.Activity.Canceling
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Ocorre quando a execução da atividade é cancelada."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O <xref:System.Workflow.ComponentModel.Activity.Cancel%2A>método também permite que classes derivadas manipular o evento sem anexar um representante.</xref:System.Workflow.ComponentModel.Activity.Cancel%2A> Isso é a técnica preferida para manipular o evento em uma classe derivada.  [!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Canceling;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.CancelingEvent
  id: CancelingEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: CancelingEvent
  nameWithType: Activity.CancelingEvent
  fullName: System.Workflow.ComponentModel.Activity.CancelingEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Representa o <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que tem como destino o <xref href=&quot;System.Workflow.ComponentModel.Activity.Canceling&quot;> </xref> eventos."
  remarks: "Você acessa indiretamente cada evento desse tipo e a propriedade pública da resolução de uma propriedade de dependência correspondente. Essa propriedade de dependência é o campo estático público chamado `XProperty` ou `XEvent`, onde X é a propriedade correspondente.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CancelingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Clone
  id: Clone
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Clone()
  nameWithType: Activity.Clone()
  fullName: System.Workflow.ComponentModel.Activity.Clone()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Cria uma cópia profunda do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  remarks: "Usa um <xref:System.IO.MemoryStream>para a atividade de cópia e cria uma nova atividade desserializando-se de que determinado <xref:System.IO.MemoryStream>.</xref:System.IO.MemoryStream> </xref:System.IO.MemoryStream>"
  syntax:
    content: public System.Workflow.ComponentModel.Activity Clone ();
    parameters: []
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "Uma cópia profunda do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  overload: System.Workflow.ComponentModel.Activity.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Closed
  id: Closed
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Closed
  nameWithType: Activity.Closed
  fullName: System.Workflow.ComponentModel.Activity.Closed
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Ocorre quando uma <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> concluiu a execução."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método fechado também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Closed;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ClosedEvent
  id: ClosedEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ClosedEvent
  nameWithType: Activity.ClosedEvent
  fullName: System.Workflow.ComponentModel.Activity.ClosedEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Representa o <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que tem como destino o <xref href=&quot;System.Workflow.ComponentModel.Activity.Closed&quot;> </xref> eventos."
  remarks: "Você acessa indiretamente cada evento desse tipo e a propriedade pública da resolução de uma propriedade de dependência correspondente. Essa propriedade de dependência é o campo estático público chamado `XProperty` ou `XEvent`, onde X é a propriedade correspondente.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ClosedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Compensating
  id: Compensating
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Compensating
  nameWithType: Activity.Compensating
  fullName: System.Workflow.ComponentModel.Activity.Compensating
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Ocorre durante a execução de um método de compensação no <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método Compensating também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Compensating;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent
  id: CompensatingEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: CompensatingEvent
  nameWithType: Activity.CompensatingEvent
  fullName: System.Workflow.ComponentModel.Activity.CompensatingEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Representa o <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que tem como destino o <xref href=&quot;System.Workflow.ComponentModel.Activity.Compensating&quot;> </xref> eventos."
  remarks: "Você acessa indiretamente cada evento desse tipo e a propriedade pública da resolução de uma propriedade de dependência correspondente. Essa propriedade de dependência é o campo estático público chamado `XProperty` ou `XEvent`, onde X é a propriedade correspondente.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty CompensatingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Description
  id: Description
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Description
  nameWithType: Activity.Description
  fullName: System.Workflow.ComponentModel.Activity.Description
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém ou define a descrição definida pelo usuário a <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  remarks: "Essa propriedade é uma propriedade de metadados, o que significa que ele não pode ser alterado em tempo de execução. Propriedades de metadados não alteram o após uma instância de propriedade é criada em tempo de execução, para que a propriedade deve ser definida como um valor literal em tempo de design."
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "A descrição de texto de <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  overload: System.Workflow.ComponentModel.Activity.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Enabled
  id: Enabled
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Enabled
  nameWithType: Activity.Enabled
  fullName: System.Workflow.ComponentModel.Activity.Enabled
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém ou define um valor que indica se esta instância está habilitada para execução e validação."
  remarks: "Se `false`, todas as atividades filho são tratadas como se esse valor é `false` para eles também.       Essa propriedade é uma propriedade de metadados, o que significa que ele não pode ser alterado em tempo de execução. Propriedades de metadados não alteram o após uma instância de propriedade é criada em tempo de execução, para que a propriedade deve ser definida como um valor literal em tempo de design."
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se habilitada para execução e validação; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> caso contrário."
  overload: System.Workflow.ComponentModel.Activity.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  id: Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Execute(ActivityExecutionContext)
  nameWithType: Activity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.Activity.Execute(ActivityExecutionContext)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para executar uma atividade."
  remarks: "O <xref:System.Workflow.ComponentModel.ActivityExecutionContext>é usado para obter informações sobre a atividade e o fluxo de trabalho em execução no momento e também é usado para obter os serviços do ambiente de tempo de execução.</xref:System.Workflow.ComponentModel.ActivityExecutionContext>       A execução ocorre de forma síncrona, retornando o controle ao chamador quando a atividade é concluída ou atinge um estado intermediário."
  example:
  - "The following code example shows an implementation of the `Execute` method. In this example, an Outlook e-mail message is constructed and sent. This example is from the Outlook Workflow Wizard SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Outlook Workflow Wizard Sample](http://msdn.microsoft.com/en-us/7b2ba92b-8456-43f3-87fc-184ffdec4408).  \n  \n [!code-cs[WF_Samples#98](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#98)]\n [!code-vb[WF_Samples#98](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#98)]"
  syntax:
    content: protected virtual System.Workflow.ComponentModel.ActivityExecutionStatus Execute (System.Workflow.ComponentModel.ActivityExecutionContext executionContext);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "O <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> para associar a este <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> e execução."
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "O <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref> da tarefa de execução, que determina se a atividade permanecerá no estado em execução ou faz a transição para o estado fechado."
  overload: System.Workflow.ComponentModel.Activity.Execute*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Executing
  id: Executing
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Executing
  nameWithType: Activity.Executing
  fullName: System.Workflow.ComponentModel.Activity.Executing
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Ocorre quando o <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> é executado."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método de execução também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Executing;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent
  id: ExecutingEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ExecutingEvent
  nameWithType: Activity.ExecutingEvent
  fullName: System.Workflow.ComponentModel.Activity.ExecutingEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Representa o <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que tem como destino o <xref href=&quot;System.Workflow.ComponentModel.Activity.Executing&quot;> </xref> evento que ocorre quando a atividade é executada."
  remarks: "Você acessa indiretamente cada evento desse tipo e a propriedade pública da resolução de uma propriedade de dependência correspondente. Essa propriedade de dependência é o campo estático público chamado `XProperty` ou `XEvent`, onde X é a propriedade correspondente.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty ExecutingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ExecutionResult
  id: ExecutionResult
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ExecutionResult
  nameWithType: Activity.ExecutionResult
  fullName: System.Workflow.ComponentModel.Activity.ExecutionResult
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém o <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionResult&quot;> </xref> da última tentativa de executar essa instância."
  remarks: "Essa propriedade só é útil quando uma instância de fluxo de trabalho está em execução."
  syntax:
    content: public System.Workflow.ComponentModel.ActivityExecutionResult ExecutionResult { get; }
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionResult
      description: "O <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionResult&quot;> </xref> da última tentativa de executar essa instância."
  overload: System.Workflow.ComponentModel.Activity.ExecutionResult*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus
  id: ExecutionStatus
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ExecutionStatus
  nameWithType: Activity.ExecutionStatus
  fullName: System.Workflow.ComponentModel.Activity.ExecutionStatus
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém a atual <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref> desta instância."
  remarks: "Essa propriedade só é útil quando uma instância de fluxo de trabalho está em execução."
  syntax:
    content: public System.Workflow.ComponentModel.ActivityExecutionStatus ExecutionStatus { get; }
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "Atual <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref> desta instância."
  overload: System.Workflow.ComponentModel.Activity.ExecutionStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Faulting
  id: Faulting
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Faulting
  nameWithType: Activity.Faulting
  fullName: System.Workflow.ComponentModel.Activity.Faulting
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Ocorre quando uma exceção é gerada durante a execução da instância."
  remarks: '[!INCLUDE[crabout](~/add/includes/ajax-current-ext-md.md)]manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> Faulting;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.FaultingEvent
  id: FaultingEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: FaultingEvent
  nameWithType: Activity.FaultingEvent
  fullName: System.Workflow.ComponentModel.Activity.FaultingEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "O <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que representa o <xref href=&quot;System.Workflow.ComponentModel.Activity.Faulting&quot;> </xref> eventos."
  remarks: "Você acessa indiretamente cada evento desse tipo e a propriedade pública da resolução de uma propriedade de dependência correspondente. Essa propriedade de dependência é o campo estático público chamado `XProperty` ou `XEvent`, onde X é a propriedade correspondente.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty FaultingEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  id: GetActivityByName(System.String)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: GetActivityByName(String)
  nameWithType: Activity.GetActivityByName(String)
  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Retorna a instância do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> cujo nome é solicitado do conjunto de todas as atividades em execução na atividade raiz desta instância, que está dentro do fluxo de trabalho."
  remarks: "Chamando `GetActivityByName` no construtor de uma atividade personalizada não é suportado e pode ter resultados inesperados."
  syntax:
    content: public System.Workflow.ComponentModel.Activity GetActivityByName (string activityQualifiedName);
    parameters:
    - id: activityQualifiedName
      type: System.String
      description: "O nome do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> para pesquisar."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "A instância do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> cujo nome é solicitado do conjunto de todas as atividades em execução na atividade raiz desta instância."
  overload: System.Workflow.ComponentModel.Activity.GetActivityByName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activityQualifiedID</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  id: GetActivityByName(System.String,System.Boolean)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: GetActivityByName(String,Boolean)
  nameWithType: Activity.GetActivityByName(String,Boolean)
  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String,Boolean)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Retorna a instância do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> cujo nome é solicitado do conjunto de todas as atividades sob a raiz do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> desta instância se o segundo parâmetro é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> e em atual <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> se o segundo parâmetro é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  remarks: "Retorna a instância do <xref:System.Workflow.ComponentModel.Activity>cujo nome é solicitado do conjunto de todas as atividades sob a raiz do <xref:System.Workflow.ComponentModel.Activity>desta instância se o segundo parâmetro é `false` e em atual <xref:System.Workflow.ComponentModel.Activity>se o segundo parâmetro é `true`.</xref:System.Workflow.ComponentModel.Activity> </xref:System.Workflow.ComponentModel.Activity> </xref:System.Workflow.ComponentModel.Activity>       Chamando `GetActivityByName` no construtor de uma atividade personalizada não é suportado e pode ter resultados inesperados."
  syntax:
    content: public System.Workflow.ComponentModel.Activity GetActivityByName (string activityQualifiedName, bool withinThisActivityOnly);
    parameters:
    - id: activityQualifiedName
      type: System.String
      description: "O nome do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> para pesquisar."
    - id: withinThisActivityOnly
      type: System.Boolean
      description: "O valor que indica se é limitar a pesquisa a atividades contidas dentro desta instância."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "A instância do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> cujo nome é solicitado do conjunto de todas as atividades sob a raiz do <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> desta instância se o segundo parâmetro é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> e em atual <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> se o segundo parâmetro é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.Activity.GetActivityByName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>activityQualifiedID</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  id: HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: Activity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.ComponentModel.Activity.HandleFault(ActivityExecutionContext,Exception)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Chamado quando uma exceção é gerada dentro do contexto de execução dessa instância."
  remarks: "O método padrão tenta chamar o <xref:System.Workflow.ComponentModel.Activity.Cancel%2A>método e retorna o resultado dessa tentativa.</xref:System.Workflow.ComponentModel.Activity.Cancel%2A>"
  syntax:
    content: protected virtual System.Workflow.ComponentModel.ActivityExecutionStatus HandleFault (System.Workflow.ComponentModel.ActivityExecutionContext executionContext, Exception exception);
    parameters:
    - id: executionContext
      type: System.Workflow.ComponentModel.ActivityExecutionContext
      description: "O <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> para essa instância."
    - id: exception
      type: System.Exception
      description: "O <xref:System.Exception>que causou essa falha.</xref:System.Exception>"
    return:
      type: System.Workflow.ComponentModel.ActivityExecutionStatus
      description: "O <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref> que resulta da tentativa de cancelar esta instância."
  overload: System.Workflow.ComponentModel.Activity.HandleFault*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>exception</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  id: Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Initialize(IServiceProvider)
  nameWithType: Activity.Initialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.Initialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para inicializar uma atividade durante a construção de uma nova instância de fluxo de trabalho. Este método é chamado durante a construção de um dinâmico <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref>."
  syntax:
    content: protected virtual void Initialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "O <xref:System.IServiceProvider>que fornece o serviço de inicialização.</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.Initialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing &quot; name=&quot;Nothing &quot; href=&quot;&quot;></xref>no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  id: Invoke``1(System.EventHandler{``0},``0)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Invoke(EventHandler<T>,T)
  nameWithType: Activity.Invoke(EventHandler<T>,T)
  fullName: System.Workflow.ComponentModel.Activity.Invoke(EventHandler<T>,T)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: 'protected void Invoke<T> (EventHandler<T> handler, T e) where T : EventArgs;'
    parameters:
    - id: handler
      type: System.EventHandler{T}
      description: "A ser adicionado."
    - id: e
      type: T
      description: "A ser adicionado."
  overload: System.Workflow.ComponentModel.Activity.Invoke<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  id: Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Invoke(IActivityEventListener<T>,T)
  nameWithType: Activity.Invoke(IActivityEventListener<T>,T)
  fullName: System.Workflow.ComponentModel.Activity.Invoke(IActivityEventListener<T>,T)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: 'protected void Invoke<T> (System.Workflow.ComponentModel.IActivityEventListener<T> eventListener, T e) where T : EventArgs;'
    parameters:
    - id: eventListener
      type: System.Workflow.ComponentModel.IActivityEventListener`1
      description: "A ser adicionado."
    - id: e
      type: T
      description: "A ser adicionado."
  overload: System.Workflow.ComponentModel.Activity.Invoke<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity
  id: IsDynamicActivity
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: IsDynamicActivity
  nameWithType: Activity.IsDynamicActivity
  fullName: System.Workflow.ComponentModel.Activity.IsDynamicActivity
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém informações sobre se a atividade está em execução dentro do padrão <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> da instância do fluxo de trabalho."
  syntax:
    content: public bool IsDynamicActivity { get; }
    return:
      type: System.Boolean
      description: "Retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se a atividade está em execução dentro do padrão <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> da instância do fluxo de trabalho, caso contrário, retornará <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.ComponentModel.Activity.IsDynamicActivity*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  id: Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Load(Stream,Activity)
  nameWithType: Activity.Load(Stream,Activity)
  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Carrega uma instância de um <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> de <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  remarks: >-
    > [!IMPORTANT]

    >  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).
  syntax:
    content: public static System.Workflow.ComponentModel.Activity Load (System.IO.Stream stream, System.Workflow.ComponentModel.Activity outerActivity);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O <xref:System.IO.Stream>da qual carregar.</xref:System.IO.Stream>"
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> que possui o contexto para o desserializado <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "Uma instância de um <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> de <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Workflow.ComponentModel.Activity.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  id: Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Load(Stream,Activity,IFormatter)
  nameWithType: Activity.Load(Stream,Activity,IFormatter)
  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity,IFormatter)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Carrega uma instância de um <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> de um <xref:System.IO.Stream>usando personalizado <xref href=&quot;System.Runtime.Serialization.IFormatter&quot;> </xref> para desserialização.</xref:System.IO.Stream>"
  remarks: >-
    > [!IMPORTANT]

    >  Calling this method with untrusted data is a security risk. Call this method only with trusted data. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378).
  syntax:
    content: public static System.Workflow.ComponentModel.Activity Load (System.IO.Stream stream, System.Workflow.ComponentModel.Activity outerActivity, System.Runtime.Serialization.IFormatter formatter);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O destino <xref:System.IO.Stream>a operação de carregamento.</xref:System.IO.Stream>"
    - id: outerActivity
      type: System.Workflow.ComponentModel.Activity
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> que possui o contexto para o desserializado <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
    - id: formatter
      type: System.Runtime.Serialization.IFormatter
      description: "O <xref href=&quot;System.Runtime.Serialization.IFormatter&quot;> </xref> usado para ler de <xref:System.IO.Stream>.</xref:System.IO.Stream>"
    return:
      type: System.Workflow.ComponentModel.Activity
      description: "Uma instância de um <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> de <xref:System.IO.Stream>.</xref:System.IO.Stream>"
  overload: System.Workflow.ComponentModel.Activity.Load*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>formatter</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Name
  id: Name
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Name
  nameWithType: Activity.Name
  fullName: System.Workflow.ComponentModel.Activity.Name
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém ou define o nome desta instância. Esse nome deve estar de acordo com a convenção de nomenclatura de variável da linguagem de programação que está sendo usada no projeto de fluxo de trabalho."
  remarks: "Valor padrão para isso é a cadeia de caracteres vazia.       Essa propriedade é uma propriedade de metadados, o que significa que ele não pode ser alterado em tempo de execução. Propriedades de metadados não alteram o após uma instância de propriedade é criada em tempo de execução, para que a propriedade deve ser definida como um valor literal em tempo de design."
  example:
  - "The following code shows how to create activities and add them as children to a composite activity and set the value for Name.  \n  \n This code example is part of the Throw SDK sample and is from the ThrowWorkFlow.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Throw Sample](http://msdn.microsoft.com/en-us/aa5b9546-ec95-4e43-8337-20e26f8d71cc).  \n  \n [!code-cs[WF_Samples#179](~/add/codesnippet/csharp/wf_snippets/snippets11.cs#179)]\n [!code-vb[WF_Samples#179](~/add/codesnippet/visualbasic/wf_snippets/snippets11.vb#179)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome desta instância."
  overload: System.Workflow.ComponentModel.Activity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  id: OnActivityExecutionContextLoad(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: OnActivityExecutionContextLoad(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextLoad(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Chamado pelo tempo de execução do fluxo de trabalho sempre que um <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> é carregado. Por exemplo, este método é chamado durante a criação de um <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> , bem como toda vez que o <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> é reincarnated quando uma instância de fluxo de trabalho é carregada do armazenamento persistente."
  syntax:
    content: protected virtual void OnActivityExecutionContextLoad (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "O <xref:System.IServiceProvider>que fornece o serviço.</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  id: OnActivityExecutionContextUnload(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: OnActivityExecutionContextUnload(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextUnload(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Chamado pelo tempo de execução do fluxo de trabalho sempre que um <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> é descarregado. Por exemplo, este método é chamado durante a conclusão de uma <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> , bem como sempre o <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionContext&quot;> </xref> é descarregado quando uma instância de fluxo de trabalho é mantida."
  syntax:
    content: protected virtual void OnActivityExecutionContextUnload (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "O <xref:System.IServiceProvider>que fornece o serviço.</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  id: OnClosed(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: OnClosed(IServiceProvider)
  nameWithType: Activity.OnClosed(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnClosed(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Chamado pelo tempo de execução do fluxo de trabalho como parte da transição da atividade para o estado fechado."
  remarks: "Esse método fornece a atividade a oportunidade de limpar os recursos utilizados durante sua execução."
  syntax:
    content: protected virtual void OnClosed (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "O <xref:System.IServiceProvider>que fornece o serviço.</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.OnClosed*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Parent
  id: Parent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Parent
  nameWithType: Activity.Parent
  fullName: System.Workflow.ComponentModel.Activity.Parent
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém o <xref href=&quot;System.Workflow.ComponentModel.CompositeActivity&quot;> </xref> que contém essa <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  remarks: "Referência de retorna um nulo (`Nothing` no Visual Basic) se <xref:System.Workflow.ComponentModel.Activity>é um fluxo de trabalho ou uma raiz <xref:System.Workflow.ComponentModel.Activity>.</xref:System.Workflow.ComponentModel.Activity> </xref:System.Workflow.ComponentModel.Activity>"
  syntax:
    content: public System.Workflow.ComponentModel.CompositeActivity Parent { get; }
    return:
      type: System.Workflow.ComponentModel.CompositeActivity
      description: "O <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> que é um pai para este <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>."
  overload: System.Workflow.ComponentModel.Activity.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.QualifiedName
  id: QualifiedName
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: QualifiedName
  nameWithType: Activity.QualifiedName
  fullName: System.Workflow.ComponentModel.Activity.QualifiedName
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém o nome qualificado da atividade. Nomes de atividades qualificado sempre são exclusivos em uma instância de fluxo de trabalho."
  remarks: "O nome qualificado é o nome desta instância com o nome da atividade personalizada que contém essa instância acrescentada à frente."
  syntax:
    content: public string QualifiedName { get; }
    return:
      type: System.String
      description: "O nome qualificado da instância."
  overload: System.Workflow.ComponentModel.Activity.QualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  id: RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: RaiseEvent(DependencyProperty,Object,EventArgs)
  nameWithType: Activity.RaiseEvent(DependencyProperty,Object,EventArgs)
  fullName: System.Workflow.ComponentModel.Activity.RaiseEvent(DependencyProperty,Object,EventArgs)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Gera um <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> associados com a propriedade de dependência especificada."
  remarks: ''
  example:
  - "The following code invokes this method to raise an event that is defined as a <xref:System.Workflow.ComponentModel.DependencyProperty>.  \n  \n This code example is part of the Send E-mail Activity sample and is from the SendEmailActivity.cs file. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Send E-mail Activity Sample](http://msdn.microsoft.com/en-us/bfb5939e-60a9-4037-af4e-2cea9e654669)  \n  \n [!code-cs[WF_Samples#233](~/add/codesnippet/csharp/wf_snippets/snippets24.cs#233)]\n [!code-vb[WF_Samples#233](~/add/codesnippet/visualbasic/wf_snippets/snippets24.vb#233)]"
  syntax:
    content: protected void RaiseEvent (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, EventArgs e);
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "O <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> associado a esta <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref>."
    - id: sender
      type: System.Object
      description: "O <xref:System.Object>origem do <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref>.</xref:System.Object>"
    - id: e
      type: System.EventArgs
      description: "O <xref:System.EventArgs>associado a <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref>.</xref:System.EventArgs>"
  overload: System.Workflow.ComponentModel.Activity.RaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  id: RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: RaiseGenericEvent(DependencyProperty,Object,T)
  nameWithType: Activity.RaiseGenericEvent(DependencyProperty,Object,T)
  fullName: System.Workflow.ComponentModel.Activity.RaiseGenericEvent(DependencyProperty,Object,T)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  syntax:
    content: 'protected void RaiseGenericEvent<T> (System.Workflow.ComponentModel.DependencyProperty dependencyEvent, object sender, T e) where T : EventArgs;'
    parameters:
    - id: dependencyEvent
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A ser adicionado."
    - id: sender
      type: System.Object
      description: "A ser adicionado."
    - id: e
      type: T
      description: "A ser adicionado."
  overload: System.Workflow.ComponentModel.Activity.RaiseGenericEvent<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  id: RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Registra especificado <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> para o evento de alteração de status."
  syntax:
    content: public void RegisterForStatusChange (System.Workflow.ComponentModel.DependencyProperty dependencyProp, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> activityStatusChangeListener);
    parameters:
    - id: dependencyProp
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "O <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> para registrar."
    - id: activityStatusChangeListener
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "O objeto que implementa a interface de ouvinte de eventos para esse registro."
  overload: System.Workflow.ComponentModel.Activity.RegisterForStatusChange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dependencyProp</code>não é um dos seguintes:-<xref href=&quot;System.Workflow.ComponentModel.Activity.ExecutingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.CancelingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.ClosedEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.CompensatingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.FaultingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.StatusChangedEvent&quot;></xref>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  id: Save(System.IO.Stream)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Save(Stream)
  nameWithType: Activity.Save(Stream)
  fullName: System.Workflow.ComponentModel.Activity.Save(Stream)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Grava o <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> para um <xref:System.IO.Stream>para persistência.</xref:System.IO.Stream>"
  syntax:
    content: public void Save (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O <xref:System.IO.Stream>no qual salvar o <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref>.</xref:System.IO.Stream>"
  overload: System.Workflow.ComponentModel.Activity.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  id: Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Save(Stream,IFormatter)
  nameWithType: Activity.Save(Stream,IFormatter)
  fullName: System.Workflow.ComponentModel.Activity.Save(Stream,IFormatter)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Grava o <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> para um <xref:System.IO.Stream>para persistência usando personalizado <xref href=&quot;System.Runtime.Serialization.IFormatter&quot;> </xref> fornecido para a serialização.</xref:System.IO.Stream>"
  remarks: "Formatadores de SOAP não são suportados pelo Windows Workflow Foundation."
  syntax:
    content: public void Save (System.IO.Stream stream, System.Runtime.Serialization.IFormatter formatter);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O destino <xref:System.IO.Stream>Salvar operação.</xref:System.IO.Stream>"
    - id: formatter
      type: System.Runtime.Serialization.IFormatter
      description: "O binário ou personalizado <xref href=&quot;System.Runtime.Serialization.IFormatter&quot;> </xref> para a serialização."
  overload: System.Workflow.ComponentModel.Activity.Save*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>formatter</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;></xref>)."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Esta instância está no modo de design."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.StatusChanged
  id: StatusChanged
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: StatusChanged
  nameWithType: Activity.StatusChanged
  fullName: System.Workflow.ComponentModel.Activity.StatusChanged
  type: Event
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Ocorre quando o <xref href=&quot;System.Workflow.ComponentModel.ActivityExecutionStatus&quot;> </xref> de execução <xref href=&quot;System.Workflow.ComponentModel.Activity&quot;> </xref> alterações."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][NIB: Gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método StatusChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada.      > [!NOTE] > Quando uma atividade (uma atividade) assina uma diferente da atividade (atividade B) `StatusChanged` evento, o `Activity` propriedade associado <xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>refere-se à atividade assinada (atividade B) e os respectivos `Sender` objeto se refere ao contexto de execução da atividade de assinatura (uma atividade).</xref:System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>"
  syntax:
    content: public event EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> StatusChanged;
    return:
      type: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent
  id: StatusChangedEvent
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: StatusChangedEvent
  nameWithType: Activity.StatusChangedEvent
  fullName: System.Workflow.ComponentModel.Activity.StatusChangedEvent
  type: Field
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Representa o <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> que tem como destino o <xref href=&quot;System.Workflow.ComponentModel.Activity.StatusChanged&quot;> </xref> eventos."
  remarks: "Você acessa indiretamente cada evento desse tipo e a propriedade pública da resolução de uma propriedade de dependência correspondente. Essa propriedade de dependência é o campo estático público chamado `XProperty` ou `XEvent`, onde X é a propriedade correspondente.       [!INCLUDE[DependencyPropertyRemark](~/add/includes/dependencypropertyremark-md.md)]"
  syntax:
    content: public static readonly System.Workflow.ComponentModel.DependencyProperty StatusChangedEvent;
    return:
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.ToString
  id: ToString
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: System.Workflow.ComponentModel.Activity.ToString()
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Fornece uma cadeia de caracteres que representa esta instância."
  remarks: "A cadeia de caracteres retornada é uma combinação da <xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A>e o <xref:System.Type.FullName%2A>do tipo dessa instância.</xref:System.Type.FullName%2A> </xref:System.Workflow.ComponentModel.Activity.QualifiedName%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Esta instância."
  overload: System.Workflow.ComponentModel.Activity.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  id: TrackData(System.Object)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: TrackData(Object)
  nameWithType: Activity.TrackData(Object)
  fullName: System.Workflow.ComponentModel.Activity.TrackData(Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Informa a infra-estrutura de controle de tempo de execução de pendente informações de controle."
  remarks: ''
  example:
  - "The following example shows a call to the `TrackData` method. This example is from the Termination Tracking Service SDK sample. [!INCLUDE[crdefault](~/add/includes/ajax-current-ext-md.md)][Termination Tracking Service Sample](http://msdn.microsoft.com/en-us/29b7c0d7-cece-4bb9-96d0-c5b6c6e14439).  \n  \n [!code-cs[WF_Samples#118](~/add/codesnippet/csharp/wf_snippets/snippets1.cs#118)]\n [!code-vb[WF_Samples#118](~/add/codesnippet/visualbasic/wf_snippets/snippets1.vb#118)]"
  syntax:
    content: protected void TrackData (object userData);
    parameters:
    - id: userData
      type: System.Object
      description: "<xref:System.Object>que contém as informações de rastreamento.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Activity.TrackData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userData</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  id: TrackData(System.String,System.Object)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: TrackData(String,Object)
  nameWithType: Activity.TrackData(String,Object)
  fullName: System.Workflow.ComponentModel.Activity.TrackData(String,Object)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Informa a infra-estrutura de controle de tempo de execução de pendente informações de controle."
  syntax:
    content: protected void TrackData (string userDataKey, object userData);
    parameters:
    - id: userDataKey
      type: System.String
      description: "A chave para os dados do usuário que foi alterado."
    - id: userData
      type: System.Object
      description: "<xref:System.Object>que contém as informações de rastreamento.</xref:System.Object>"
  overload: System.Workflow.ComponentModel.Activity.TrackData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>userData</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  id: Uninitialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: Uninitialize(IServiceProvider)
  nameWithType: Activity.Uninitialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.Uninitialize(IServiceProvider)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Quando substituído em uma classe derivada, fornece Cancelar inicialização por um provedor de serviço para a atividade."
  remarks: "Esse método fornece a atividade a oportunidade para limpar os recursos alocados durante a inicialização.       Não inicializar é chamado quando uma instância de atividade é garantida para não executar qualquer execução mais. Atividades que não implementam <xref:System.Workflow.ComponentModel.ICompensatableActivity>, isso ocorre imediatamente após a atividade fecha ou, se a atividade nunca executado, na conclusão do fluxo de trabalho.</xref:System.Workflow.ComponentModel.ICompensatableActivity> Para <xref:System.Workflow.ComponentModel.ICompensatableActivity>atividades, isso ocorre depois de compensação ou na conclusão do fluxo de trabalho.</xref:System.Workflow.ComponentModel.ICompensatableActivity>"
  syntax:
    content: protected virtual void Uninitialize (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "O <xref:System.IServiceProvider>que fornece o serviço.</xref:System.IServiceProvider>"
  overload: System.Workflow.ComponentModel.Activity.Uninitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  id: UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  type: Method
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Cancelar registro especificado <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> para o evento de alteração de status."
  syntax:
    content: public void UnregisterForStatusChange (System.Workflow.ComponentModel.DependencyProperty dependencyProp, System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs> activityStatusChangeListener);
    parameters:
    - id: dependencyProp
      type: System.Workflow.ComponentModel.DependencyProperty
      description: "O <xref href=&quot;System.Workflow.ComponentModel.DependencyProperty&quot;> </xref> para cancelar o registro."
    - id: activityStatusChangeListener
      type: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
      description: "O objeto que implementa a interface de ouvinte de eventos para esse registro."
  overload: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>dependencyProp</code>não é um dos seguintes:-<xref href=&quot;System.Workflow.ComponentModel.Activity.ExecutingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.CancelingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.ClosedEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.CompensatingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.FaultingEvent&quot;></xref>      -   <xref href=&quot;System.Workflow.ComponentModel.Activity.StatusChangedEvent&quot;></xref>"
  platform:
  - net462
- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  id: WorkflowInstanceId
  parent: System.Workflow.ComponentModel.Activity
  langs:
  - csharp
  name: WorkflowInstanceId
  nameWithType: Activity.WorkflowInstanceId
  fullName: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  type: Property
  assemblies:
  - System.Workflow.ComponentModel
  namespace: System.Workflow.ComponentModel
  summary: "Obtém o <xref:System.Guid>associado à instância.</xref:System.Guid>"
  syntax:
    content: protected Guid WorkflowInstanceId { get; }
    return:
      type: System.Guid
      description: "O <xref:System.Guid>associado à instância.</xref:System.Guid>"
  overload: System.Workflow.ComponentModel.Activity.WorkflowInstanceId*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.ComponentModel.DependencyObject
  isExternal: false
  name: System.Workflow.ComponentModel.DependencyObject
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Workflow.ComponentModel.Activity.#ctor
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Activity()
  nameWithType: Activity.Activity()
  fullName: System.Workflow.ComponentModel.Activity.Activity()
- uid: System.Workflow.ComponentModel.Activity.#ctor(System.String)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Activity(String)
  nameWithType: Activity.Activity(String)
  fullName: System.Workflow.ComponentModel.Activity.Activity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ActivityContextGuidProperty
  nameWithType: Activity.ActivityContextGuidProperty
  fullName: System.Workflow.ComponentModel.Activity.ActivityContextGuidProperty
- uid: System.Workflow.ComponentModel.DependencyProperty
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Workflow.ComponentModel.DependencyProperty
- uid: System.Workflow.ComponentModel.Activity.Cancel(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Cancel(ActivityExecutionContext)
  nameWithType: Activity.Cancel(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.Activity.Cancel(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.ActivityExecutionStatus
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionStatus
  nameWithType: ActivityExecutionStatus
  fullName: System.Workflow.ComponentModel.ActivityExecutionStatus
- uid: System.Workflow.ComponentModel.ActivityExecutionContext
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionContext
  nameWithType: ActivityExecutionContext
  fullName: System.Workflow.ComponentModel.ActivityExecutionContext
- uid: System.Workflow.ComponentModel.Activity.Canceling
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Canceling
  nameWithType: Activity.Canceling
  fullName: System.Workflow.ComponentModel.Activity.Canceling
- uid: System.EventHandler{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<ActivityExecutionStatusChangedEventArgs>
  nameWithType: EventHandler<ActivityExecutionStatusChangedEventArgs>
  fullName: System.EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
    name: ActivityExecutionStatusChangedEventArgs
    nameWithType: ActivityExecutionStatusChangedEventArgs
    fullName: ActivityExecutionStatusChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Activity.CancelingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: CancelingEvent
  nameWithType: Activity.CancelingEvent
  fullName: System.Workflow.ComponentModel.Activity.CancelingEvent
- uid: System.Workflow.ComponentModel.Activity.Clone
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Clone()
  nameWithType: Activity.Clone()
  fullName: System.Workflow.ComponentModel.Activity.Clone()
- uid: System.Workflow.ComponentModel.Activity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Workflow.ComponentModel.Activity
- uid: System.Workflow.ComponentModel.Activity.Closed
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Closed
  nameWithType: Activity.Closed
  fullName: System.Workflow.ComponentModel.Activity.Closed
- uid: System.Workflow.ComponentModel.Activity.ClosedEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ClosedEvent
  nameWithType: Activity.ClosedEvent
  fullName: System.Workflow.ComponentModel.Activity.ClosedEvent
- uid: System.Workflow.ComponentModel.Activity.Compensating
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Compensating
  nameWithType: Activity.Compensating
  fullName: System.Workflow.ComponentModel.Activity.Compensating
- uid: System.Workflow.ComponentModel.Activity.CompensatingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: CompensatingEvent
  nameWithType: Activity.CompensatingEvent
  fullName: System.Workflow.ComponentModel.Activity.CompensatingEvent
- uid: System.Workflow.ComponentModel.Activity.Description
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Description
  nameWithType: Activity.Description
  fullName: System.Workflow.ComponentModel.Activity.Description
- uid: System.Workflow.ComponentModel.Activity.Enabled
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Enabled
  nameWithType: Activity.Enabled
  fullName: System.Workflow.ComponentModel.Activity.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Workflow.ComponentModel.Activity.Execute(System.Workflow.ComponentModel.ActivityExecutionContext)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Execute(ActivityExecutionContext)
  nameWithType: Activity.Execute(ActivityExecutionContext)
  fullName: System.Workflow.ComponentModel.Activity.Execute(ActivityExecutionContext)
- uid: System.Workflow.ComponentModel.Activity.Executing
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Executing
  nameWithType: Activity.Executing
  fullName: System.Workflow.ComponentModel.Activity.Executing
- uid: System.Workflow.ComponentModel.Activity.ExecutingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutingEvent
  nameWithType: Activity.ExecutingEvent
  fullName: System.Workflow.ComponentModel.Activity.ExecutingEvent
- uid: System.Workflow.ComponentModel.Activity.ExecutionResult
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionResult
  nameWithType: Activity.ExecutionResult
  fullName: System.Workflow.ComponentModel.Activity.ExecutionResult
- uid: System.Workflow.ComponentModel.ActivityExecutionResult
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: ActivityExecutionResult
  nameWithType: ActivityExecutionResult
  fullName: System.Workflow.ComponentModel.ActivityExecutionResult
- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionStatus
  nameWithType: Activity.ExecutionStatus
  fullName: System.Workflow.ComponentModel.Activity.ExecutionStatus
- uid: System.Workflow.ComponentModel.Activity.Faulting
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Faulting
  nameWithType: Activity.Faulting
  fullName: System.Workflow.ComponentModel.Activity.Faulting
- uid: System.Workflow.ComponentModel.Activity.FaultingEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: FaultingEvent
  nameWithType: Activity.FaultingEvent
  fullName: System.Workflow.ComponentModel.Activity.FaultingEvent
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: GetActivityByName(String)
  nameWithType: Activity.GetActivityByName(String)
  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String)
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName(System.String,System.Boolean)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: GetActivityByName(String,Boolean)
  nameWithType: Activity.GetActivityByName(String,Boolean)
  fullName: System.Workflow.ComponentModel.Activity.GetActivityByName(String,Boolean)
- uid: System.Workflow.ComponentModel.Activity.HandleFault(System.Workflow.ComponentModel.ActivityExecutionContext,System.Exception)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: HandleFault(ActivityExecutionContext,Exception)
  nameWithType: Activity.HandleFault(ActivityExecutionContext,Exception)
  fullName: System.Workflow.ComponentModel.Activity.HandleFault(ActivityExecutionContext,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Workflow.ComponentModel.Activity.Initialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Initialize(IServiceProvider)
  nameWithType: Activity.Initialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.Initialize(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.EventHandler{``0},``0)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Invoke(EventHandler<T>,T)
  nameWithType: Activity.Invoke(EventHandler<T>,T)
  fullName: System.Workflow.ComponentModel.Activity.Invoke(EventHandler<T>,T)
- uid: System.EventHandler{T}
  parent: System
  isExternal: true
  name: EventHandler<T>
  nameWithType: EventHandler<T>
  fullName: System.EventHandler<T>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Workflow.ComponentModel.Activity.Invoke``1(System.Workflow.ComponentModel.IActivityEventListener`1,``0)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Invoke(IActivityEventListener<T>,T)
  nameWithType: Activity.Invoke(IActivityEventListener<T>,T)
  fullName: System.Workflow.ComponentModel.Activity.Invoke(IActivityEventListener<T>,T)
- uid: System.Workflow.ComponentModel.IActivityEventListener`1
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<T>
  nameWithType: IActivityEventListener<T>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<T>
- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: IsDynamicActivity
  nameWithType: Activity.IsDynamicActivity
  fullName: System.Workflow.ComponentModel.Activity.IsDynamicActivity
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Load(Stream,Activity)
  nameWithType: Activity.Load(Stream,Activity)
  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Workflow.ComponentModel.Activity.Load(System.IO.Stream,System.Workflow.ComponentModel.Activity,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Load(Stream,Activity,IFormatter)
  nameWithType: Activity.Load(Stream,Activity,IFormatter)
  fullName: System.Workflow.ComponentModel.Activity.Load(Stream,Activity,IFormatter)
- uid: System.Runtime.Serialization.IFormatter
  parent: System.Runtime.Serialization
  isExternal: false
  name: IFormatter
  nameWithType: IFormatter
  fullName: System.Runtime.Serialization.IFormatter
- uid: System.Workflow.ComponentModel.Activity.Name
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Name
  nameWithType: Activity.Name
  fullName: System.Workflow.ComponentModel.Activity.Name
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextLoad(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextLoad(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextUnload(IServiceProvider)
  nameWithType: Activity.OnActivityExecutionContextUnload(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.OnClosed(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnClosed(IServiceProvider)
  nameWithType: Activity.OnClosed(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.OnClosed(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.Parent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Parent
  nameWithType: Activity.Parent
  fullName: System.Workflow.ComponentModel.Activity.Parent
- uid: System.Workflow.ComponentModel.CompositeActivity
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: CompositeActivity
  nameWithType: CompositeActivity
  fullName: System.Workflow.ComponentModel.CompositeActivity
- uid: System.Workflow.ComponentModel.Activity.QualifiedName
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: QualifiedName
  nameWithType: Activity.QualifiedName
  fullName: System.Workflow.ComponentModel.Activity.QualifiedName
- uid: System.Workflow.ComponentModel.Activity.RaiseEvent(System.Workflow.ComponentModel.DependencyProperty,System.Object,System.EventArgs)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseEvent(DependencyProperty,Object,EventArgs)
  nameWithType: Activity.RaiseEvent(DependencyProperty,Object,EventArgs)
  fullName: System.Workflow.ComponentModel.Activity.RaiseEvent(DependencyProperty,Object,EventArgs)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent``1(System.Workflow.ComponentModel.DependencyProperty,System.Object,``0)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseGenericEvent(DependencyProperty,Object,T)
  nameWithType: Activity.RaiseGenericEvent(DependencyProperty,Object,T)
  fullName: System.Workflow.ComponentModel.Activity.RaiseGenericEvent(DependencyProperty,Object,T)
- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: System.Workflow.ComponentModel.Activity.RegisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
- uid: System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs}
  parent: System.Workflow.ComponentModel
  isExternal: false
  name: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>
  nameWithType: IActivityEventListener<ActivityExecutionStatusChangedEventArgs>
  fullName: System.Workflow.ComponentModel.IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  spec.csharp:
  - uid: System.Workflow.ComponentModel.IActivityEventListener`1
    name: IActivityEventListener
    nameWithType: IActivityEventListener
    fullName: IActivityEventListener<System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs
    name: ActivityExecutionStatusChangedEventArgs
    nameWithType: ActivityExecutionStatusChangedEventArgs
    fullName: ActivityExecutionStatusChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Save(Stream)
  nameWithType: Activity.Save(Stream)
  fullName: System.Workflow.ComponentModel.Activity.Save(Stream)
- uid: System.Workflow.ComponentModel.Activity.Save(System.IO.Stream,System.Runtime.Serialization.IFormatter)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Save(Stream,IFormatter)
  nameWithType: Activity.Save(Stream,IFormatter)
  fullName: System.Workflow.ComponentModel.Activity.Save(Stream,IFormatter)
- uid: System.Workflow.ComponentModel.Activity.StatusChanged
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: StatusChanged
  nameWithType: Activity.StatusChanged
  fullName: System.Workflow.ComponentModel.Activity.StatusChanged
- uid: System.Workflow.ComponentModel.Activity.StatusChangedEvent
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: StatusChangedEvent
  nameWithType: Activity.StatusChangedEvent
  fullName: System.Workflow.ComponentModel.Activity.StatusChangedEvent
- uid: System.Workflow.ComponentModel.Activity.ToString
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ToString()
  nameWithType: Activity.ToString()
  fullName: System.Workflow.ComponentModel.Activity.ToString()
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.Object)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: TrackData(Object)
  nameWithType: Activity.TrackData(Object)
  fullName: System.Workflow.ComponentModel.Activity.TrackData(Object)
- uid: System.Workflow.ComponentModel.Activity.TrackData(System.String,System.Object)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: TrackData(String,Object)
  nameWithType: Activity.TrackData(String,Object)
  fullName: System.Workflow.ComponentModel.Activity.TrackData(String,Object)
- uid: System.Workflow.ComponentModel.Activity.Uninitialize(System.IServiceProvider)
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Uninitialize(IServiceProvider)
  nameWithType: Activity.Uninitialize(IServiceProvider)
  fullName: System.Workflow.ComponentModel.Activity.Uninitialize(IServiceProvider)
- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(System.Workflow.ComponentModel.DependencyProperty,System.Workflow.ComponentModel.IActivityEventListener{System.Workflow.ComponentModel.ActivityExecutionStatusChangedEventArgs})
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  nameWithType: Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
  fullName: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange(DependencyProperty,IActivityEventListener<ActivityExecutionStatusChangedEventArgs>)
- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: WorkflowInstanceId
  nameWithType: Activity.WorkflowInstanceId
  fullName: System.Workflow.ComponentModel.Activity.WorkflowInstanceId
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Workflow.ComponentModel.Activity.#ctor*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Activity
  nameWithType: Activity.Activity
- uid: System.Workflow.ComponentModel.Activity.Cancel*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Cancel
  nameWithType: Activity.Cancel
- uid: System.Workflow.ComponentModel.Activity.Clone*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Clone
  nameWithType: Activity.Clone
- uid: System.Workflow.ComponentModel.Activity.Description*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Description
  nameWithType: Activity.Description
- uid: System.Workflow.ComponentModel.Activity.Enabled*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Enabled
  nameWithType: Activity.Enabled
- uid: System.Workflow.ComponentModel.Activity.Execute*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Execute
  nameWithType: Activity.Execute
- uid: System.Workflow.ComponentModel.Activity.ExecutionResult*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionResult
  nameWithType: Activity.ExecutionResult
- uid: System.Workflow.ComponentModel.Activity.ExecutionStatus*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ExecutionStatus
  nameWithType: Activity.ExecutionStatus
- uid: System.Workflow.ComponentModel.Activity.GetActivityByName*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: GetActivityByName
  nameWithType: Activity.GetActivityByName
- uid: System.Workflow.ComponentModel.Activity.HandleFault*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: HandleFault
  nameWithType: Activity.HandleFault
- uid: System.Workflow.ComponentModel.Activity.Initialize*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Initialize
  nameWithType: Activity.Initialize
- uid: System.Workflow.ComponentModel.Activity.Invoke<T>*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Invoke<T>
  nameWithType: Activity.Invoke<T>
- uid: System.Workflow.ComponentModel.Activity.IsDynamicActivity*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: IsDynamicActivity
  nameWithType: Activity.IsDynamicActivity
- uid: System.Workflow.ComponentModel.Activity.Load*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Load
  nameWithType: Activity.Load
- uid: System.Workflow.ComponentModel.Activity.Name*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Name
  nameWithType: Activity.Name
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextLoad*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextLoad
  nameWithType: Activity.OnActivityExecutionContextLoad
- uid: System.Workflow.ComponentModel.Activity.OnActivityExecutionContextUnload*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnActivityExecutionContextUnload
  nameWithType: Activity.OnActivityExecutionContextUnload
- uid: System.Workflow.ComponentModel.Activity.OnClosed*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: OnClosed
  nameWithType: Activity.OnClosed
- uid: System.Workflow.ComponentModel.Activity.Parent*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Parent
  nameWithType: Activity.Parent
- uid: System.Workflow.ComponentModel.Activity.QualifiedName*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: QualifiedName
  nameWithType: Activity.QualifiedName
- uid: System.Workflow.ComponentModel.Activity.RaiseEvent*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseEvent
  nameWithType: Activity.RaiseEvent
- uid: System.Workflow.ComponentModel.Activity.RaiseGenericEvent<T>*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RaiseGenericEvent<T>
  nameWithType: Activity.RaiseGenericEvent<T>
- uid: System.Workflow.ComponentModel.Activity.RegisterForStatusChange*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: RegisterForStatusChange
  nameWithType: Activity.RegisterForStatusChange
- uid: System.Workflow.ComponentModel.Activity.Save*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Save
  nameWithType: Activity.Save
- uid: System.Workflow.ComponentModel.Activity.ToString*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: ToString
  nameWithType: Activity.ToString
- uid: System.Workflow.ComponentModel.Activity.TrackData*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: TrackData
  nameWithType: Activity.TrackData
- uid: System.Workflow.ComponentModel.Activity.Uninitialize*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: Uninitialize
  nameWithType: Activity.Uninitialize
- uid: System.Workflow.ComponentModel.Activity.UnregisterForStatusChange*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: UnregisterForStatusChange
  nameWithType: Activity.UnregisterForStatusChange
- uid: System.Workflow.ComponentModel.Activity.WorkflowInstanceId*
  parent: System.Workflow.ComponentModel.Activity
  isExternal: false
  name: WorkflowInstanceId
  nameWithType: Activity.WorkflowInstanceId
