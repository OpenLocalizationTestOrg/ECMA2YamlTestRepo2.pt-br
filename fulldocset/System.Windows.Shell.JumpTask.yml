### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.JumpTask
  id: JumpTask
  children:
  - System.Windows.Shell.JumpTask.#ctor
  - System.Windows.Shell.JumpTask.ApplicationPath
  - System.Windows.Shell.JumpTask.Arguments
  - System.Windows.Shell.JumpTask.Description
  - System.Windows.Shell.JumpTask.IconResourceIndex
  - System.Windows.Shell.JumpTask.IconResourcePath
  - System.Windows.Shell.JumpTask.Title
  - System.Windows.Shell.JumpTask.WorkingDirectory
  langs:
  - csharp
  name: JumpTask
  nameWithType: JumpTask
  fullName: System.Windows.Shell.JumpTask
  type: Class
  summary: "Representa um atalho para um aplicativo de [!INCLUDE[win7](~/add/includes/win7-md.md)] lista de atalhos da barra de tarefas."
  remarks: "Um JumpTask pode ser pensada como um atalho para um aplicativo. Especifique o caminho para o arquivo executável, definindo o <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>propriedade.</xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> Se o <xref:System.Windows.Shell.JumpTask.ApplicationPath%2A>não está definida, o caminho do processo em execução atual é indicado.</xref:System.Windows.Shell.JumpTask.ApplicationPath%2A> Você pode opcionalmente especificar <xref:System.Windows.Shell.JumpTask.Arguments%2A>para passar para o aplicativo durante a inicialização.</xref:System.Windows.Shell.JumpTask.Arguments%2A>       Você pode definir propriedades de exibição básica, como <xref:System.Windows.Shell.JumpTask.Title%2A>, <xref:System.Windows.Shell.JumpTask.Description%2A>, e <xref:System.Windows.Shell.JumpTask.IconResourcePath%2A>para especificar a aparência da tarefa na lista de saltos.</xref:System.Windows.Shell.JumpTask.IconResourcePath%2A> </xref:System.Windows.Shell.JumpTask.Description%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> Um ícone usado com um JumpTask deve estar disponível como um recurso nativo. Se vários recursos de ícone estão disponíveis em uma DLL ou arquivo executável, você especificar uma para usar indicando um deslocamento de <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>propriedade.</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>       Por padrão, um JumpTask será colocada no **tarefas** categoria da lista de saltos. Você pode especificar um agrupamento personalizado de tarefas ao definir o <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>propriedade.</xref:System.Windows.Shell.JumpItem.CustomCategory%2A>       Você pode separar visualmente os itens em uma lista de atalhos, criando um JumpTask que não tem um <xref:System.Windows.Shell.JumpTask.Title%2A>e <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>especificado.</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> Este JumpTask vazio será exibido como uma linha horizontal na lista de saltos. Nesse caso, outras propriedades podem ser definidas, mas ele não terá nenhum efeito."
  example:
  - "The following example shows how to declare a JumpTask in markup. The JumpTask opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a JumpTask in code. The JumpTask opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: 'public class JumpTask : System.Windows.Shell.JumpItem'
  inheritance:
  - System.Object
  - System.Windows.Shell.JumpItem
  implements: []
  inheritedMembers:
  - System.Windows.Shell.JumpItem.CustomCategory
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: JumpTask()
  nameWithType: JumpTask.JumpTask()
  fullName: System.Windows.Shell.JumpTask.JumpTask()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Shell.JumpTask&quot;> </xref> classe."
  syntax:
    content: public JumpTask ();
    parameters: []
  overload: System.Windows.Shell.JumpTask.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.ApplicationPath
  id: ApplicationPath
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
  fullName: System.Windows.Shell.JumpTask.ApplicationPath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Obtém ou define o caminho para o aplicativo."
  remarks: "Se a propriedade ApplicationPath não for especificada, o caminho do processo em execução atual é indicado. Um aplicativo pode conter tarefas para executáveis diferente dele mesmo."
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string ApplicationPath { get; set; }
    return:
      type: System.String
      description: "O caminho para o aplicativo. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpTask.ApplicationPath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Arguments
  id: Arguments
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Arguments
  nameWithType: JumpTask.Arguments
  fullName: System.Windows.Shell.JumpTask.Arguments
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Obtém ou define os argumentos passados para o aplicativo na inicialização."
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public string Arguments { get; set; }
    return:
      type: System.String
      description: "Os argumentos transmitidos para o aplicativo na inicialização. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpTask.Arguments*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Description
  id: Description
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Description
  nameWithType: JumpTask.Description
  fullName: System.Windows.Shell.JumpTask.Description
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Obtém ou define o texto exibido na dica de ferramenta para a tarefa na lista de saltos."
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string Description { get; set; }
    return:
      type: System.String
      description: "O texto exibido na dica de ferramenta para a tarefa. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpTask.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.IconResourceIndex
  id: IconResourceIndex
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
  fullName: System.Windows.Shell.JumpTask.IconResourceIndex
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Obtém ou define o índice de base zero de um ícone incorporado em um recurso."
  remarks: "Um ícone usado com um <xref:System.Windows.Shell.JumpTask>devem estar disponíveis como um recurso nativo.</xref:System.Windows.Shell.JumpTask> Se vários ícones estão disponíveis em uma DLL ou arquivo executável, você pode especificar uma para usar indicando um deslocamento na propriedade IconResourceIndex.       Se nenhum recurso de ícone for especificado, ou se o ícone especificado não for encontrado, o ícone padrão do sistema é exibido. Para especificar que nenhum ícone é exibido, defina a propriedade de IconResourceIndex como -1."
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public int IconResourceIndex { get; set; }
    return:
      type: System.Int32
      description: "O índice de base zero do ícone ou -1 se nenhum ícone é usado. O padrão é 0."
  overload: System.Windows.Shell.JumpTask.IconResourceIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.IconResourcePath
  id: IconResourcePath
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
  fullName: System.Windows.Shell.JumpTask.IconResourcePath
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Obtém ou define o caminho para um recurso que contém o ícone a ser exibido na lista de saltos."
  remarks: "Um ícone usado com um <xref:System.Windows.Shell.JumpTask>devem estar disponíveis como um recurso nativo.</xref:System.Windows.Shell.JumpTask> Se vários ícones estão disponíveis em uma DLL ou arquivo executável, você especificar uma para usar indicando um deslocamento de <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>propriedade.</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>       Se nenhum recurso de ícone for especificado, ou se o ícone especificado não for encontrado, o ícone padrão do sistema é exibido. Para especificar que nenhum ícone é exibido, defina o <xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>propriedade como -1.</xref:System.Windows.Shell.JumpTask.IconResourceIndex%2A>"
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string IconResourcePath { get; set; }
    return:
      type: System.String
      description: "O caminho para um recurso que contém o ícone. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpTask.IconResourcePath*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.Title
  id: Title
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: Title
  nameWithType: JumpTask.Title
  fullName: System.Windows.Shell.JumpTask.Title
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Obtém ou define o texto exibido para a tarefa na lista de saltos."
  remarks: "Normalmente, a propriedade de título deve ser definida para o <xref:System.Windows.Shell.JumpTask>apareça na lista de saltos como uma tarefa que pode ser clicada.</xref:System.Windows.Shell.JumpTask>       Como alternativa, você pode separar visualmente itens em uma lista de atalhos, criando um <xref:System.Windows.Shell.JumpTask>que não têm um título e <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>especificado.</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask> Este vazio <xref:System.Windows.Shell.JumpTask>será exibido como uma linha horizontal na lista de saltos.</xref:System.Windows.Shell.JumpTask> Nesse caso, outras propriedades podem ser definidas, mas ele não terá nenhum efeito."
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file name `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]  \n  \n The following example shows how to configure a <xref:System.Windows.Shell.JumpTask> in code. The <xref:System.Windows.Shell.JumpTask> opens the Calculator application.  \n  \n [!code-cs[Shell_JumpListSample#241](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#241)]"
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "O texto exibido para a tarefa na lista de saltos. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpTask.Title*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpTask.WorkingDirectory
  id: WorkingDirectory
  parent: System.Windows.Shell.JumpTask
  langs:
  - csharp
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
  fullName: System.Windows.Shell.JumpTask.WorkingDirectory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Obtém ou define o diretório de trabalho do aplicativo na inicialização."
  remarks: ''
  example:
  - "The following example shows how to declare a <xref:System.Windows.Shell.JumpTask> in markup. The <xref:System.Windows.Shell.JumpTask> opens a text file named `readme.txt` in the Notepad application.  \n  \n [!code-xml[Shell_JumpListSample#002](~/add/codesnippet/xaml/jumplistsample/app.xaml#002)]"
  syntax:
    content: public string WorkingDirectory { get; set; }
    return:
      type: System.String
      description: "O diretório de trabalho do aplicativo na inicialização. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpTask.WorkingDirectory*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Shell.JumpItem
  isExternal: false
  name: System.Windows.Shell.JumpItem
- uid: System.Windows.Shell.JumpTask.#ctor
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: JumpTask()
  nameWithType: JumpTask.JumpTask()
  fullName: System.Windows.Shell.JumpTask.JumpTask()
- uid: System.Windows.Shell.JumpTask.ApplicationPath
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
  fullName: System.Windows.Shell.JumpTask.ApplicationPath
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Shell.JumpTask.Arguments
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Arguments
  nameWithType: JumpTask.Arguments
  fullName: System.Windows.Shell.JumpTask.Arguments
- uid: System.Windows.Shell.JumpTask.Description
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Description
  nameWithType: JumpTask.Description
  fullName: System.Windows.Shell.JumpTask.Description
- uid: System.Windows.Shell.JumpTask.IconResourceIndex
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
  fullName: System.Windows.Shell.JumpTask.IconResourceIndex
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Shell.JumpTask.IconResourcePath
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
  fullName: System.Windows.Shell.JumpTask.IconResourcePath
- uid: System.Windows.Shell.JumpTask.Title
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Title
  nameWithType: JumpTask.Title
  fullName: System.Windows.Shell.JumpTask.Title
- uid: System.Windows.Shell.JumpTask.WorkingDirectory
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
  fullName: System.Windows.Shell.JumpTask.WorkingDirectory
- uid: System.Windows.Shell.JumpTask.#ctor*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: JumpTask
  nameWithType: JumpTask.JumpTask
- uid: System.Windows.Shell.JumpTask.ApplicationPath*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: ApplicationPath
  nameWithType: JumpTask.ApplicationPath
- uid: System.Windows.Shell.JumpTask.Arguments*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Arguments
  nameWithType: JumpTask.Arguments
- uid: System.Windows.Shell.JumpTask.Description*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Description
  nameWithType: JumpTask.Description
- uid: System.Windows.Shell.JumpTask.IconResourceIndex*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourceIndex
  nameWithType: JumpTask.IconResourceIndex
- uid: System.Windows.Shell.JumpTask.IconResourcePath*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: IconResourcePath
  nameWithType: JumpTask.IconResourcePath
- uid: System.Windows.Shell.JumpTask.Title*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: Title
  nameWithType: JumpTask.Title
- uid: System.Windows.Shell.JumpTask.WorkingDirectory*
  parent: System.Windows.Shell.JumpTask
  isExternal: false
  name: WorkingDirectory
  nameWithType: JumpTask.WorkingDirectory
