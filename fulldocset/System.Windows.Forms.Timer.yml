### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Timer
  id: Timer
  children:
  - System.Windows.Forms.Timer.#ctor
  - System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)
  - System.Windows.Forms.Timer.Dispose(System.Boolean)
  - System.Windows.Forms.Timer.Enabled
  - System.Windows.Forms.Timer.Interval
  - System.Windows.Forms.Timer.OnTick(System.EventArgs)
  - System.Windows.Forms.Timer.Start
  - System.Windows.Forms.Timer.Stop
  - System.Windows.Forms.Timer.Tag
  - System.Windows.Forms.Timer.Tick
  - System.Windows.Forms.Timer.ToString
  langs:
  - csharp
  name: Timer
  nameWithType: Timer
  fullName: System.Windows.Forms.Timer
  type: Class
  summary: "Implementa um temporizador que gera um evento em intervalos definidos pelo usuário. O temporizador é otimizado para uso em aplicativos de formulários do Windows e deve ser usado em uma janela."
  remarks: "Um temporizador é usado para gerar um evento em intervalos definidos pelo usuário. O temporizador do Windows foi projetado para um ambiente de thread único em que os threads de interface do usuário são usadas para executar o processamento. Ele requer que o código de usuário tem uma bomba de mensagem da interface do usuário disponível e sempre funcionam do mesmo thread ou realizar marshaling da chamada em outro thread.       Quando você usa o temporizador, use o <xref:System.Windows.Forms.Timer.Tick>evento para executar uma operação de pesquisa ou para exibir uma tela inicial de um período de tempo especificado.</xref:System.Windows.Forms.Timer.Tick> Sempre que o <xref:System.Windows.Forms.Timer.Enabled%2A>está definida como `true` e o <xref:System.Windows.Forms.Timer.Interval%2A>propriedade é maior que zero, o <xref:System.Windows.Forms.Timer.Tick>é gerado em intervalos com base no <xref:System.Windows.Forms.Timer.Interval%2A>configuração de propriedade.</xref:System.Windows.Forms.Timer.Interval%2A> </xref:System.Windows.Forms.Timer.Tick> </xref:System.Windows.Forms.Timer.Interval%2A> </xref:System.Windows.Forms.Timer.Enabled%2A>       Essa classe fornece métodos para definir o intervalo e para iniciar e parar o timer.      > [!NOTE] > Componente o Timer de formulários do Windows é de thread único e é limitado a uma precisão de 55 milissegundos. Se você precisar de um timer multithread com maior precisão, use o <xref:System.Timers.Timer>de classe no <xref:System.Timers>namespace.</xref:System.Timers> </xref:System.Timers.Timer>"
  example:
  - "The following example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user as to whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/add/codesnippet/cpp/t-system.windows.forms.t_2_1.cpp)]\n [!code-vb[Classic Timer Example 2#1](~/add/codesnippet/visualbasic/t-system.windows.forms.t_2_1.vb)]\n [!code-cs[Classic Timer Example 2#1](~/add/codesnippet/csharp/t-system.windows.forms.t_2_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Tick")]

      [System.ComponentModel.DefaultProperty("Interval")]

      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")]

      public class Timer : System.ComponentModel.Component
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.Timer.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Timer()
  nameWithType: Timer.Timer()
  fullName: System.Windows.Forms.Timer.Timer()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Forms.Timer&quot;> </xref> classe."
  remarks: "Quando um novo temporizador é criado, ele é desabilitado; ou seja, <xref:System.Windows.Forms.Timer.Enabled%2A>é definido como `false`.</xref:System.Windows.Forms.Timer.Enabled%2A> Para habilitar o temporizador, chame o <xref:System.Windows.Forms.Timer.Start%2A>método ou conjunto <xref:System.Windows.Forms.Timer.Enabled%2A>para `true`.</xref:System.Windows.Forms.Timer.Enabled%2A> </xref:System.Windows.Forms.Timer.Start%2A>       Se o timer será desabilitado e o timer está fora do escopo, o timer será descartado quando ocorre a coleta de lixo. Se o timer está ativado, mesmo se ele está fora do escopo, não é sujeitas à coleta de lixo."
  syntax:
    content: public Timer ();
    parameters: []
  overload: System.Windows.Forms.Timer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)
  id: '#ctor(System.ComponentModel.IContainer)'
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Timer(IContainer)
  nameWithType: Timer.Timer(IContainer)
  fullName: System.Windows.Forms.Timer.Timer(IContainer)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Forms.Timer&quot;> </xref> classe junto com o contêiner especificado."
  remarks: "O <xref:System.Windows.Forms.Timer>construtor permite que você associe um <xref:System.Windows.Forms.Timer>com qualquer <xref:System.ComponentModel.Container>objeto.</xref:System.ComponentModel.Container> </xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer> Associando a <xref:System.Windows.Forms.Timer>assim, você entrega o controle do tempo de vida da <xref:System.Windows.Forms.Timer>a <xref:System.ComponentModel.Container>.</xref:System.ComponentModel.Container> </xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer> Isso pode ser útil se você usar um número de componentes em seu aplicativo e deseja descartar todos eles simultaneamente. Por exemplo, se você associar um <xref:System.Windows.Forms.ToolTip>, um <xref:System.Windows.Forms.ImageList>e um <xref:System.Windows.Forms.Timer>com um <xref:System.ComponentModel.Container>, chamar <xref:System.ComponentModel.Container.Dispose%2A>no <xref:System.ComponentModel.Container>forçará o descarte de todos esses componentes também.</xref:System.ComponentModel.Container> </xref:System.ComponentModel.Container.Dispose%2A> </xref:System.ComponentModel.Container> </xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.ImageList> </xref:System.Windows.Forms.ToolTip>       Quando um novo temporizador é criado, ele é desabilitado; ou seja, <xref:System.Windows.Forms.Timer.Enabled%2A>é definido como `false`.</xref:System.Windows.Forms.Timer.Enabled%2A> Para habilitar o temporizador, chame o <xref:System.Windows.Forms.Timer.Start%2A>método ou conjunto <xref:System.Windows.Forms.Timer.Enabled%2A>para `true`.</xref:System.Windows.Forms.Timer.Enabled%2A> </xref:System.Windows.Forms.Timer.Start%2A>       Esta instância existirá até que seu contêiner libera para coleta de lixo."
  syntax:
    content: public Timer (System.ComponentModel.IContainer container);
    parameters:
    - id: container
      type: System.ComponentModel.IContainer
      description: "Um <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> que representa o contêiner para o temporizador."
  overload: System.Windows.Forms.Timer.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Timer.Dispose(Boolean)
  fullName: System.Windows.Forms.Timer.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Libera os recursos, que não seja a memória usada pelo timer."
  remarks: "Chame Dispose quando terminar de usar o timer. O método Dispose deixa o timer em um estado inutilizável. Depois de chamar Dispose, você deve liberar todas as referências para o temporizador para a memória estava ocupando pode ser recuperada pela coleta de lixo.      > [!NOTE] > Sempre chamada Dispose antes de liberar sua última referência para o temporizador. Caso contrário, os recursos que o timer está usando não serão liberados até que a coleta de lixo chama o destruidor do objeto de timer."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>para liberar apenas os recursos não gerenciados."
  overload: System.Windows.Forms.Timer.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Enabled
  id: Enabled
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Enabled
  nameWithType: Timer.Enabled
  fullName: System.Windows.Forms.Timer.Enabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define se o timer está em execução."
  remarks: "O timer não está sujeita à coleta de lixo quando o valor é `true`.       Chamar o <xref:System.Windows.Forms.Timer.Start%2A>método é o mesmo que definir habilitado `true`.</xref:System.Windows.Forms.Timer.Start%2A> Da mesma forma, ao chamar o <xref:System.Windows.Forms.Timer.Stop%2A>método é o mesmo que definir habilitado `false`.</xref:System.Windows.Forms.Timer.Stop%2A>"
  example:
  - "The following example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/add/codesnippet/cpp/p-system.windows.forms.t_233_1.cpp)]\n [!code-vb[Classic Timer Example 2#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_233_1.vb)]\n [!code-cs[Classic Timer Example 2#1](~/add/codesnippet/csharp/p-system.windows.forms.t_233_1.cs)]"
  syntax:
    content: public virtual bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o timer está habilitado no momento; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Timer.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Interval
  id: Interval
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Interval
  nameWithType: Timer.Interval
  fullName: System.Windows.Forms.Timer.Interval
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o tempo, em milissegundos, antes de <xref href=&quot;System.Windows.Forms.Timer.Tick&quot;> </xref> é gerado em relação a última ocorrência da <xref href=&quot;System.Windows.Forms.Timer.Tick&quot;> </xref> eventos."
  remarks: "Para obter o número de segundos durante o intervalo, divida esse número por 1.000."
  example:
  - "The following code example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/add/codesnippet/cpp/p-system.windows.forms.t_13_1.cpp)]\n [!code-vb[Classic Timer Example 2#1](~/add/codesnippet/visualbasic/p-system.windows.forms.t_13_1.vb)]\n [!code-cs[Classic Timer Example 2#1](~/add/codesnippet/csharp/p-system.windows.forms.t_13_1.cs)]"
  syntax:
    content: public int Interval { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>especificando o número de milissegundos antes do <xref href=&quot;System.Windows.Forms.Timer.Tick&quot;> </xref> é gerado em relação a última ocorrência da <xref href=&quot;System.Windows.Forms.Timer.Tick&quot;> </xref> evento.</xref:System.Int32> O valor não pode ser menor que&1;."
  overload: System.Windows.Forms.Timer.Interval*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.OnTick(System.EventArgs)
  id: OnTick(System.EventArgs)
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: OnTick(EventArgs)
  nameWithType: Timer.OnTick(EventArgs)
  fullName: System.Windows.Forms.Timer.OnTick(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Timer.Tick&quot;> </xref> eventos."
  remarks: "Esse método é chamado para cada escala timer. Ele chama os métodos que são adicionados por meio de <xref:System.Windows.Forms.Timer.Tick>.</xref:System.Windows.Forms.Timer.Tick> Se você herdando <xref:System.Windows.Forms.Timer>, você pode substituir esse método.</xref:System.Windows.Forms.Timer>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void OnTick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs> Isso é sempre <xref:System.EventArgs>.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Timer.OnTick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Start
  id: Start
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Start()
  nameWithType: Timer.Start()
  fullName: System.Windows.Forms.Timer.Start()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicia o temporizador."
  remarks: "Você também pode iniciar o timer, definindo o <xref:System.Windows.Forms.Timer.Enabled%2A>propriedade `true`.</xref:System.Windows.Forms.Timer.Enabled%2A>"
  example:
  - "The following code example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/add/codesnippet/cpp/m-system.windows.forms.t_9_1.cpp)]\n [!code-vb[Classic Timer Example 2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_9_1.vb)]\n [!code-cs[Classic Timer Example 2#1](~/add/codesnippet/csharp/m-system.windows.forms.t_9_1.cs)]"
  syntax:
    content: public void Start ();
    parameters: []
  overload: System.Windows.Forms.Timer.Start*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Stop
  id: Stop
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Stop()
  nameWithType: Timer.Stop()
  fullName: System.Windows.Forms.Timer.Stop()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Interrompe o timer."
  remarks: "Você também pode parar o timer definindo o <xref:System.Windows.Forms.Timer.Enabled%2A>propriedade `false`.</xref:System.Windows.Forms.Timer.Enabled%2A> Um <xref:System.Windows.Forms.Timer>objeto pode ser habilitado e desabilitado várias vezes dentro da mesma sessão do aplicativo.</xref:System.Windows.Forms.Timer>       Chamando <xref:System.Windows.Forms.Timer.Start%2A>depois que você desabilitou um <xref:System.Windows.Forms.Timer>chamando parar fará com que o <xref:System.Windows.Forms.Timer>para reiniciar o intervalo interrompido.</xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer.Start%2A> Se seu <xref:System.Windows.Forms.Timer>está definido para um intervalo de milissegundo 5000, e você chamar parar em aproximadamente 3.000 milissegundos, chamando <xref:System.Windows.Forms.Timer.Start%2A>fará com que o <xref:System.Windows.Forms.Timer>aguardar 5000 milissegundos antes de acionar o <xref:System.Windows.Forms.Timer.Tick>evento.</xref:System.Windows.Forms.Timer.Tick> </xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer.Start%2A> </xref:System.Windows.Forms.Timer>      > [!NOTE] > Chamando parar em qualquer <xref:System.Windows.Forms.Timer>dentro de um Windows Forms aplicativo pode fazer com que as mensagens de outros <xref:System.Windows.Forms.Timer>componentes do aplicativo para ser processado imediatamente, porque todos os <xref:System.Windows.Forms.Timer>componentes operam no thread principal do aplicativo.</xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer> Se você tiver dois <xref:System.Windows.Forms.Timer>componentes, definidas como 700 milissegundos e um conjunto para 500 milissegundos e chamar parar na primeira <xref:System.Windows.Forms.Timer>, seu aplicativo pode receber um retorno de chamada de evento para o segundo componente primeiro.</xref:System.Windows.Forms.Timer> </xref:System.Windows.Forms.Timer> Se isso comprova problemático, considere o uso de <xref:System.Threading.Timer>classe no <xref:System.Threading>namespace em vez disso.</xref:System.Threading> </xref:System.Threading.Timer>"
  example:
  - "The following code example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/add/codesnippet/cpp/m-system.windows.forms.t_32_1.cpp)]\n [!code-vb[Classic Timer Example 2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.t_32_1.vb)]\n [!code-cs[Classic Timer Example 2#1](~/add/codesnippet/csharp/m-system.windows.forms.t_32_1.cs)]"
  syntax:
    content: public void Stop ();
    parameters: []
  overload: System.Windows.Forms.Timer.Stop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Tag
  id: Tag
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Tag
  nameWithType: Timer.Tag
  fullName: System.Windows.Forms.Timer.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define uma cadeia de caracteres arbitrária que representa algum tipo de estado do usuário."
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "Uma cadeia de caracteres arbitrária que representa algum tipo de estado do usuário."
  overload: System.Windows.Forms.Timer.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.Tick
  id: Tick
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: Tick
  nameWithType: Timer.Tick
  fullName: System.Windows.Forms.Timer.Tick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o intervalo de timer especificado e o timer está ativado."
  remarks: "Chamar o <xref:System.Diagnostics.Debug.Assert%2A>método o <xref:System.Diagnostics.Debug>classe de dentro do evento de escala pode não se comportar conforme o esperado, como exibir a caixa de diálogo de asserção caixa pode fazer com que o Windows gerar o evento de escala repetidamente.</xref:System.Diagnostics.Debug> </xref:System.Diagnostics.Debug.Assert%2A> É recomendável que você evite teste asserções dentro desse evento e use o <xref:System.Diagnostics.Debug.Write%2A>, <xref:System.Diagnostics.Debug.WriteIf%2A>, <xref:System.Diagnostics.Debug.WriteLine%2A>, ou <xref:System.Diagnostics.Debug.WriteLineIf%2A>métodos em vez disso.</xref:System.Diagnostics.Debug.WriteLineIf%2A> </xref:System.Diagnostics.Debug.WriteLine%2A> </xref:System.Diagnostics.Debug.WriteIf%2A> </xref:System.Diagnostics.Debug.Write%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example implements a simple interval timer, which sets off an alarm every five seconds. When the alarm occurs, a <xref:System.Windows.Forms.MessageBox> displays a count of the number of times the alarm has started and prompts the user whether the timer should continue to run.  \n  \n [!code-cpp[Classic Timer Example 2#1](~/add/codesnippet/cpp/e-system.windows.forms.t_22_1.cpp)]\n [!code-vb[Classic Timer Example 2#1](~/add/codesnippet/visualbasic/e-system.windows.forms.t_22_1.vb)]\n [!code-cs[Classic Timer Example 2#1](~/add/codesnippet/csharp/e-system.windows.forms.t_22_1.cs)]"
  syntax:
    content: public event EventHandler Tick;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Timer.ToString
  id: ToString
  parent: System.Windows.Forms.Timer
  langs:
  - csharp
  name: ToString()
  nameWithType: Timer.ToString()
  fullName: System.Windows.Forms.Timer.ToString()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retorna uma cadeia de caracteres que representa o <xref href=&quot;System.Windows.Forms.Timer&quot;> </xref>."
  remarks: "O método ToString retorna uma cadeia de caracteres que contém o valor de <xref:System.Windows.Forms.Timer.Interval%2A>propriedade.</xref:System.Windows.Forms.Timer.Interval%2A>"
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o atual <xref href=&quot;System.Windows.Forms.Timer&quot;> </xref>."
  overload: System.Windows.Forms.Timer.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.Windows.Forms.Timer.#ctor
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Timer()
  nameWithType: Timer.Timer()
  fullName: System.Windows.Forms.Timer.Timer()
- uid: System.Windows.Forms.Timer.#ctor(System.ComponentModel.IContainer)
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Timer(IContainer)
  nameWithType: Timer.Timer(IContainer)
  fullName: System.Windows.Forms.Timer.Timer(IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.Windows.Forms.Timer.Dispose(System.Boolean)
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Timer.Dispose(Boolean)
  fullName: System.Windows.Forms.Timer.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Timer.Enabled
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Enabled
  nameWithType: Timer.Enabled
  fullName: System.Windows.Forms.Timer.Enabled
- uid: System.Windows.Forms.Timer.Interval
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Interval
  nameWithType: Timer.Interval
  fullName: System.Windows.Forms.Timer.Interval
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Timer.OnTick(System.EventArgs)
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: OnTick(EventArgs)
  nameWithType: Timer.OnTick(EventArgs)
  fullName: System.Windows.Forms.Timer.OnTick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.Timer.Start
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Start()
  nameWithType: Timer.Start()
  fullName: System.Windows.Forms.Timer.Start()
- uid: System.Windows.Forms.Timer.Stop
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Stop()
  nameWithType: Timer.Stop()
  fullName: System.Windows.Forms.Timer.Stop()
- uid: System.Windows.Forms.Timer.Tag
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Tag
  nameWithType: Timer.Tag
  fullName: System.Windows.Forms.Timer.Tag
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.Timer.Tick
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Tick
  nameWithType: Timer.Tick
  fullName: System.Windows.Forms.Timer.Tick
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.Timer.ToString
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: ToString()
  nameWithType: Timer.ToString()
  fullName: System.Windows.Forms.Timer.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Timer.#ctor*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Timer
  nameWithType: Timer.Timer
- uid: System.Windows.Forms.Timer.Dispose*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Dispose
  nameWithType: Timer.Dispose
- uid: System.Windows.Forms.Timer.Enabled*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Enabled
  nameWithType: Timer.Enabled
- uid: System.Windows.Forms.Timer.Interval*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Interval
  nameWithType: Timer.Interval
- uid: System.Windows.Forms.Timer.OnTick*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: OnTick
  nameWithType: Timer.OnTick
- uid: System.Windows.Forms.Timer.Start*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Start
  nameWithType: Timer.Start
- uid: System.Windows.Forms.Timer.Stop*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Stop
  nameWithType: Timer.Stop
- uid: System.Windows.Forms.Timer.Tag*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: Tag
  nameWithType: Timer.Tag
- uid: System.Windows.Forms.Timer.ToString*
  parent: System.Windows.Forms.Timer
  isExternal: false
  name: ToString
  nameWithType: Timer.ToString
