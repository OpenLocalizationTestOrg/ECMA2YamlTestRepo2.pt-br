### YamlMime:ManagedReference
items:
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  id: ECDiffieHellmanKeyDerivationFunction
  children:
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  - System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  langs:
  - csharp
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  type: Enum
  summary: "Especifica a função de derivação de chave que o <xref href=&quot;System.Security.Cryptography.ECDiffieHellmanCng&quot;> </xref> classe será usado para converter acordos secretos material de chave."
  remarks: "A enumeração de ECDiffieHellmanKeyDerivationFunction define o tipo de algoritmo que será usado para transformar um acordo secreto bruto no material de chave. O acordo secreto é o valor que é gerado a partir de uma chave privada e uma chave pública de outros fabricantes, como parte da troca de chave. É o valor de semente para o material da chave que é gerado pelo <xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A>método.</xref:System.Security.Cryptography.ECDiffieHellmanCng.DeriveKeyMaterial%2A>       A <xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>propriedade usa esta enumeração para obter a função de derivação de chave para a <xref:System.Security.Cryptography.ECDiffieHellmanCng>classe.</xref:System.Security.Cryptography.ECDiffieHellmanCng> </xref:System.Security.Cryptography.ECDiffieHellmanCng.KeyDerivationFunction%2A>"
  syntax:
    content: public enum ECDiffieHellmanKeyDerivationFunction
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  id: Hash
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Hash
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Um algoritmo de hash é usado para gerar material de chave. O <xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*>propriedade especifica o nome do algoritmo para usar.</xref:System.Security.Cryptography.ECDiffieHellmanCng.HashAlgorithm*> Se o nome do algoritmo não for especificado, <xref href=&quot;System.Security.Cryptography.SHA256&quot;> </xref> é usado como o algoritmo padrão."
  remarks: "Você também pode especificar o <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>e <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>Propriedades, mas eles não são necessários.</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> </xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>       A quantidade de material de chave é gerada é equivalente ao tamanho do valor de hash para o algoritmo especificado."
  syntax:
    content: Hash
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  id: Hmac
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Hmac
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "Um algoritmo de Hash-based HMAC Message Authentication Code () é usado para gerar material de chave. O <> </> *> propriedade especifica a chave a ser usado. Ou esta propriedade deve ser definida ou o <> </> *> propriedade deve ser definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; caso contrário, um <xref href=&quot;System.Security.Cryptography.CryptographicException&quot;> </xref> é gerada quando você usar o Hmac. Se ambas as propriedades forem definidas, o acordo secreto é usado como a chave HMAC."
  remarks: "Você também pode especificar o <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>e <xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A>Propriedades, mas eles não são necessários.</xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretAppend%2A> </xref:System.Security.Cryptography.ECDiffieHellmanCng.SecretPrepend%2A>       A quantidade de material de chave é gerada é equivalente ao tamanho do valor HMAC."
  syntax:
    content: Hmac
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  id: Tls
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  langs:
  - csharp
  name: Tls
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  type: Field
  assemblies:
  - System.Core
  namespace: System.Security.Cryptography
  summary: "O protocolo de segurança de camada de transporte (TLS) é usado para gerar material de chave. O <> </> *> e <> </> *> propriedades devem ser definido; caso contrário, um <xref href=&quot;System.Security.Cryptography.CryptographicException&quot;> </xref> é gerada quando você usar o Tls."
  remarks: "Esse valor gera 160 bits de material de chave."
  syntax:
    content: Tls
    return:
      type: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Hash
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hash
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hash
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  parent: System.Security.Cryptography
  isExternal: false
  name: ECDiffieHellmanKeyDerivationFunction
  nameWithType: ECDiffieHellmanKeyDerivationFunction
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Hmac
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Hmac
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Hmac
- uid: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
  parent: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction
  isExternal: false
  name: Tls
  nameWithType: ECDiffieHellmanKeyDerivationFunction.Tls
  fullName: System.Security.Cryptography.ECDiffieHellmanKeyDerivationFunction.Tls
