### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Security.PeerCredential
  id: PeerCredential
  children:
  - System.ServiceModel.Security.PeerCredential.Certificate
  - System.ServiceModel.Security.PeerCredential.MeshPassword
  - System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication
  - System.ServiceModel.Security.PeerCredential.PeerAuthentication
  - System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  - System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  langs:
  - csharp
  name: PeerCredential
  nameWithType: PeerCredential
  fullName: System.ServiceModel.Security.PeerCredential
  type: Class
  summary: "Contém as credenciais usadas durante a autenticação de um nó ponto dentro de uma malha de ponto a ponto."
  remarks: "As instâncias dessa classe são usadas para especificar as credenciais necessárias para o modo de segurança específico de uma malha de ponto a ponto. Uma instância deste tipo pode ser acessada usando <xref:System.ServiceModel.ChannelFactory.Credentials%2A>ou <xref:System.ServiceModel.ServiceHostBase.Credentials%2A>.</xref:System.ServiceModel.ServiceHostBase.Credentials%2A> </xref:System.ServiceModel.ChannelFactory.Credentials%2A>"
  syntax:
    content: public class PeerCredential
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Security.PeerCredential.Certificate
  id: Certificate
  parent: System.ServiceModel.Security.PeerCredential
  langs:
  - csharp
  name: Certificate
  nameWithType: PeerCredential.Certificate
  fullName: System.ServiceModel.Security.PeerCredential.Certificate
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém ou define um X509 certificado para o par."
  remarks: "Esta propriedade contém um <xref:System.Security.Cryptography.X509Certificates.X509Certificate2>instância usada ao autenticar vizinhos na malha de pontos.</xref:System.Security.Cryptography.X509Certificates.X509Certificate2> Uma instância deve ser especificada se o tipo de credencial escolhida for PeerTransportCredentialType.Certificate. Se PeerTransportCredentialType. <xref:System.ServiceModel.PeerTransportCredentialType>for escolhida, essa propriedade é opcional.</xref:System.ServiceModel.PeerTransportCredentialType>"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509Certificate2 Certificate { get; set; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "O X509 certificado para o par."
  overload: System.ServiceModel.Security.PeerCredential.Certificate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.PeerCredential.MeshPassword
  id: MeshPassword
  parent: System.ServiceModel.Security.PeerCredential
  langs:
  - csharp
  name: MeshPassword
  nameWithType: PeerCredential.MeshPassword
  fullName: System.ServiceModel.Security.PeerCredential.MeshPassword
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém ou define a senha usada pelo par para autenticar com a malha ponto a ponto."
  syntax:
    content: public string MeshPassword { get; set; }
    return:
      type: System.String
      description: "A senha usada pelo par para autenticar com a malha ponto a ponto."
  overload: System.ServiceModel.Security.PeerCredential.MeshPassword*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication
  id: MessageSenderAuthentication
  parent: System.ServiceModel.Security.PeerCredential
  langs:
  - csharp
  name: MessageSenderAuthentication
  nameWithType: PeerCredential.MessageSenderAuthentication
  fullName: System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém ou define o remetente da mensagem de validador de autenticação."
  remarks: "Essa propriedade deve ser preenchida se a autenticação de mensagem é escolhida. Essa propriedade especifica um validador, que será chamado durante a verificação de segurança de mensagem. A credencial especificada na mensagem é passada para o validador especificado nesta propriedade. O validador pode aceitar ou rejeitar a credencial."
  syntax:
    content: public System.ServiceModel.Security.X509PeerCertificateAuthentication MessageSenderAuthentication { get; set; }
    return:
      type: System.ServiceModel.Security.X509PeerCertificateAuthentication
      description: "O validador de autenticação do remetente de mensagem."
  overload: System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.PeerCredential.PeerAuthentication
  id: PeerAuthentication
  parent: System.ServiceModel.Security.PeerCredential
  langs:
  - csharp
  name: PeerAuthentication
  nameWithType: PeerCredential.PeerAuthentication
  fullName: System.ServiceModel.Security.PeerCredential.PeerAuthentication
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Obtém ou define o par de objeto de autenticação."
  remarks: "Essa propriedade especifica um validador, que é invocado durante a autenticação de vizinho de vizinho na malha. Quando um novo par tenta estabelecer uma conexão vizinha, ele passa suas próprias credenciais para o par está respondendo. O validador do Respondente é invocado para verificar a credencial da parte remota. Sempre que uma conexão ponto a ponto é estabelecida na malha, os pontos são autenticados mutuamente, validadores significado em ambas as extremidades são invocados."
  syntax:
    content: public System.ServiceModel.Security.X509PeerCertificateAuthentication PeerAuthentication { get; set; }
    return:
      type: System.ServiceModel.Security.X509PeerCertificateAuthentication
      description: "O objeto de autenticação de ponto a ponto."
  overload: System.ServiceModel.Security.PeerCredential.PeerAuthentication*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  id: SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.PeerCredential
  langs:
  - csharp
  name: SetCertificate(String,StoreLocation,StoreName)
  nameWithType: PeerCredential.SetCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.PeerCredential.SetCertificate(String,StoreLocation,StoreName)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Define o certificado."
  remarks: "Essa sobrecarga é usada para especificar uma credencial de certificado do ponto. Ele é fornecido como um atalho para carregar o certificado de um certificado disponível armazena se o usuário tem acesso ao."
  syntax:
    content: public void SetCertificate (string subjectName, System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName);
    parameters:
    - id: subjectName
      type: System.String
      description: "O nome da entidade do certificado."
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "O local do repositório de certificados."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "O nome do repositório de certificados."
  overload: System.ServiceModel.Security.PeerCredential.SetCertificate*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  id: SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.PeerCredential
  langs:
  - csharp
  name: SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: PeerCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.PeerCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Security
  summary: "Define o certificado com os critérios de pesquisa especificados."
  syntax:
    content: public void SetCertificate (System.Security.Cryptography.X509Certificates.StoreLocation storeLocation, System.Security.Cryptography.X509Certificates.StoreName storeName, System.Security.Cryptography.X509Certificates.X509FindType findType, object findValue);
    parameters:
    - id: storeLocation
      type: System.Security.Cryptography.X509Certificates.StoreLocation
      description: "O local do repositório de certificados."
    - id: storeName
      type: System.Security.Cryptography.X509Certificates.StoreName
      description: "O nome do repositório de certificados."
    - id: findType
      type: System.Security.Cryptography.X509Certificates.X509FindType
      description: "Os critérios de pesquisa."
    - id: findValue
      type: System.Object
      description: "O valor de pesquisa."
  overload: System.ServiceModel.Security.PeerCredential.SetCertificate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ServiceModel.Security.PeerCredential.Certificate
  parent: System.ServiceModel.Security.PeerCredential
  isExternal: false
  name: Certificate
  nameWithType: PeerCredential.Certificate
  fullName: System.ServiceModel.Security.PeerCredential.Certificate
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.ServiceModel.Security.PeerCredential.MeshPassword
  parent: System.ServiceModel.Security.PeerCredential
  isExternal: false
  name: MeshPassword
  nameWithType: PeerCredential.MeshPassword
  fullName: System.ServiceModel.Security.PeerCredential.MeshPassword
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication
  parent: System.ServiceModel.Security.PeerCredential
  isExternal: false
  name: MessageSenderAuthentication
  nameWithType: PeerCredential.MessageSenderAuthentication
  fullName: System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication
- uid: System.ServiceModel.Security.X509PeerCertificateAuthentication
  parent: System.ServiceModel.Security
  isExternal: false
  name: X509PeerCertificateAuthentication
  nameWithType: X509PeerCertificateAuthentication
  fullName: System.ServiceModel.Security.X509PeerCertificateAuthentication
- uid: System.ServiceModel.Security.PeerCredential.PeerAuthentication
  parent: System.ServiceModel.Security.PeerCredential
  isExternal: false
  name: PeerAuthentication
  nameWithType: PeerCredential.PeerAuthentication
  fullName: System.ServiceModel.Security.PeerCredential.PeerAuthentication
- uid: System.ServiceModel.Security.PeerCredential.SetCertificate(System.String,System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName)
  parent: System.ServiceModel.Security.PeerCredential
  isExternal: false
  name: SetCertificate(String,StoreLocation,StoreName)
  nameWithType: PeerCredential.SetCertificate(String,StoreLocation,StoreName)
  fullName: System.ServiceModel.Security.PeerCredential.SetCertificate(String,StoreLocation,StoreName)
- uid: System.Security.Cryptography.X509Certificates.StoreLocation
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreLocation
  nameWithType: StoreLocation
  fullName: System.Security.Cryptography.X509Certificates.StoreLocation
- uid: System.Security.Cryptography.X509Certificates.StoreName
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: StoreName
  nameWithType: StoreName
  fullName: System.Security.Cryptography.X509Certificates.StoreName
- uid: System.ServiceModel.Security.PeerCredential.SetCertificate(System.Security.Cryptography.X509Certificates.StoreLocation,System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.X509FindType,System.Object)
  parent: System.ServiceModel.Security.PeerCredential
  isExternal: false
  name: SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  nameWithType: PeerCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
  fullName: System.ServiceModel.Security.PeerCredential.SetCertificate(StoreLocation,StoreName,X509FindType,Object)
- uid: System.Security.Cryptography.X509Certificates.X509FindType
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509FindType
  nameWithType: X509FindType
  fullName: System.Security.Cryptography.X509Certificates.X509FindType
- uid: System.ServiceModel.Security.PeerCredential.Certificate*
  parent: System.ServiceModel.Security.PeerCredential
  isExternal: false
  name: Certificate
  nameWithType: PeerCredential.Certificate
- uid: System.ServiceModel.Security.PeerCredential.MeshPassword*
  parent: System.ServiceModel.Security.PeerCredential
  isExternal: false
  name: MeshPassword
  nameWithType: PeerCredential.MeshPassword
- uid: System.ServiceModel.Security.PeerCredential.MessageSenderAuthentication*
  parent: System.ServiceModel.Security.PeerCredential
  isExternal: false
  name: MessageSenderAuthentication
  nameWithType: PeerCredential.MessageSenderAuthentication
- uid: System.ServiceModel.Security.PeerCredential.PeerAuthentication*
  parent: System.ServiceModel.Security.PeerCredential
  isExternal: false
  name: PeerAuthentication
  nameWithType: PeerCredential.PeerAuthentication
- uid: System.ServiceModel.Security.PeerCredential.SetCertificate*
  parent: System.ServiceModel.Security.PeerCredential
  isExternal: false
  name: SetCertificate
  nameWithType: PeerCredential.SetCertificate
