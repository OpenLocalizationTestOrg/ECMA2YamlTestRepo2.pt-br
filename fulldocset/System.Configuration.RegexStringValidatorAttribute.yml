### YamlMime:ManagedReference
items:
- uid: System.Configuration.RegexStringValidatorAttribute
  id: RegexStringValidatorAttribute
  children:
  - System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)
  - System.Configuration.RegexStringValidatorAttribute.Regex
  - System.Configuration.RegexStringValidatorAttribute.ValidatorInstance
  langs:
  - csharp
  name: RegexStringValidatorAttribute
  nameWithType: RegexStringValidatorAttribute
  fullName: System.Configuration.RegexStringValidatorAttribute
  type: Class
  summary: "Declarativamente instrui o .NET Framework para executar a validação da cadeia de caracteres em uma propriedade de configuração usando uma expressão regular. Essa classe não pode ser herdada."
  remarks: "Use o RegexStringValidatorAttribute para decorar uma propriedade de configuração, que instruirá o .NET Framework para validar a propriedade usando o <xref:System.Configuration.RegexStringValidator>e passá-lo para o valor dos parâmetros de decoração.</xref:System.Configuration.RegexStringValidator>       Você pode aplicar objetos RegexStringValidatorAttribute a somente os tipos de propriedade."
  example:
  - "The following example shows how to decorate the properties of a custom <xref:System.Configuration.ConfigurationSection> object using the RegexStringValidatorAttribute object.  \n  \n [!code-vb[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/visualbasic/t-system.configuration.r_2_1.vb)]\n [!code-cs[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/csharp/t-system.configuration.r_2_1.cs)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property)]

      public sealed class RegexStringValidatorAttribute : System.Configuration.ConfigurationValidatorAttribute
  inheritance:
  - System.Attribute
  - System.Configuration.ConfigurationValidatorAttribute
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationValidatorAttribute.ValidatorType
  platform:
  - net462
- uid: System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Configuration.RegexStringValidatorAttribute
  langs:
  - csharp
  name: RegexStringValidatorAttribute(String)
  nameWithType: RegexStringValidatorAttribute.RegexStringValidatorAttribute(String)
  fullName: System.Configuration.RegexStringValidatorAttribute.RegexStringValidatorAttribute(String)
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.RegexStringValidatorAttribute&quot;> </xref> objeto."
  remarks: "O `regex` parâmetro contém o padrão de expressão regular que deve corresponder a uma cadeia de caracteres antes que ele pode ser atribuído à propriedade decorado do elemento de configuração.       Você pode usar este construtor no modelo atribuído para garantir que o valor de cadeia de caracteres atribuído à propriedade relacionada contém apenas caracteres permitidos."
  example:
  - "The following example shows how to use the RegexStringValidatorAttribute constructor.  \n  \n [!code-vb[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/visualbasic/m-system.configuration.r_0_1.vb)]\n [!code-cs[System.Configuration.ConfigurationValidatorAttributes#4](~/add/codesnippet/csharp/m-system.configuration.r_0_1.cs)]"
  syntax:
    content: public RegexStringValidatorAttribute (string regex);
    parameters:
    - id: regex
      type: System.String
      description: "A cadeia de caracteres a ser usado para validação de expressão regular."
  overload: System.Configuration.RegexStringValidatorAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RegexStringValidatorAttribute.Regex
  id: Regex
  parent: System.Configuration.RegexStringValidatorAttribute
  langs:
  - csharp
  name: Regex
  nameWithType: RegexStringValidatorAttribute.Regex
  fullName: System.Configuration.RegexStringValidatorAttribute.Regex
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém a cadeia de caracteres usada para executar a validação de expressão regular."
  remarks: ''
  example:
  - "The following example shows how to use the Regex property.  \n  \n [!code-vb[System.Configuration.ConfigurationValidatorAttributes#16](~/add/codesnippet/visualbasic/p-system.configuration.r_1_1.vb)]\n [!code-cs[System.Configuration.ConfigurationValidatorAttributes#16](~/add/codesnippet/csharp/p-system.configuration.r_1_1.cs)]"
  syntax:
    content: public string Regex { get; }
    return:
      type: System.String
      description: "A cadeia de caracteres que contém a expressão regular usada para filtrar a cadeia de caracteres atribuída à propriedade decorado do elemento de configuração."
  overload: System.Configuration.RegexStringValidatorAttribute.Regex*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance
  id: ValidatorInstance
  parent: System.Configuration.RegexStringValidatorAttribute
  langs:
  - csharp
  name: ValidatorInstance
  nameWithType: RegexStringValidatorAttribute.ValidatorInstance
  fullName: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Obtém uma instância do <xref href=&quot;System.Configuration.RegexStringValidator&quot;> </xref> classe."
  remarks: "Use a propriedade ValidatorInstance para executar a validação da cadeia de caracteres chamando seu <xref:System.Configuration.StringValidator.Validate%2A>método.</xref:System.Configuration.StringValidator.Validate%2A>"
  example:
  - "The following example shows how to use the ValidatorInstance method.  \n  \n [!code-vb[System.Configuration.ConfigurationValidatorAttributes#15](~/add/codesnippet/visualbasic/p-system.configuration.r_0_1.vb)]\n [!code-cs[System.Configuration.ConfigurationValidatorAttributes#15](~/add/codesnippet/csharp/p-system.configuration.r_0_1.cs)]"
  syntax:
    content: public override System.Configuration.ConfigurationValidatorBase ValidatorInstance { get; }
    return:
      type: System.Configuration.ConfigurationValidatorBase
      description: "O <xref href=&quot;System.Configuration.ConfigurationValidatorBase&quot;> </xref> instância de validador."
  overload: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationValidatorAttribute
  isExternal: false
  name: System.Configuration.ConfigurationValidatorAttribute
- uid: System.Configuration.RegexStringValidatorAttribute.#ctor(System.String)
  parent: System.Configuration.RegexStringValidatorAttribute
  isExternal: false
  name: RegexStringValidatorAttribute(String)
  nameWithType: RegexStringValidatorAttribute.RegexStringValidatorAttribute(String)
  fullName: System.Configuration.RegexStringValidatorAttribute.RegexStringValidatorAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.RegexStringValidatorAttribute.Regex
  parent: System.Configuration.RegexStringValidatorAttribute
  isExternal: false
  name: Regex
  nameWithType: RegexStringValidatorAttribute.Regex
  fullName: System.Configuration.RegexStringValidatorAttribute.Regex
- uid: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance
  parent: System.Configuration.RegexStringValidatorAttribute
  isExternal: false
  name: ValidatorInstance
  nameWithType: RegexStringValidatorAttribute.ValidatorInstance
  fullName: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance
- uid: System.Configuration.ConfigurationValidatorBase
  parent: System.Configuration
  isExternal: false
  name: ConfigurationValidatorBase
  nameWithType: ConfigurationValidatorBase
  fullName: System.Configuration.ConfigurationValidatorBase
- uid: System.Configuration.RegexStringValidatorAttribute.#ctor*
  parent: System.Configuration.RegexStringValidatorAttribute
  isExternal: false
  name: RegexStringValidatorAttribute
  nameWithType: RegexStringValidatorAttribute.RegexStringValidatorAttribute
- uid: System.Configuration.RegexStringValidatorAttribute.Regex*
  parent: System.Configuration.RegexStringValidatorAttribute
  isExternal: false
  name: Regex
  nameWithType: RegexStringValidatorAttribute.Regex
- uid: System.Configuration.RegexStringValidatorAttribute.ValidatorInstance*
  parent: System.Configuration.RegexStringValidatorAttribute
  isExternal: false
  name: ValidatorInstance
  nameWithType: RegexStringValidatorAttribute.ValidatorInstance
