### YamlMime:ManagedReference
items:
- uid: System.Web.UI.IHierarchicalDataSource
  id: IHierarchicalDataSource
  children:
  - System.Web.UI.IHierarchicalDataSource.DataSourceChanged
  - System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)
  langs:
  - csharp
  name: IHierarchicalDataSource
  nameWithType: IHierarchicalDataSource
  fullName: System.Web.UI.IHierarchicalDataSource
  type: Interface
  summary: "Representa uma fonte de dados hierárquicos que controles associados a dados hierárquicos, como <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> possa se associar."
  remarks: "ASP.NET oferece suporte a uma arquitetura de associação de dados de controle que permite que os controles de servidor Web associar aos dados e apresentá-lo de forma consistente. Controles de servidor Web que associar aos dados são chamados de controles associados a dados e as classes que facilitam a vinculação são chamadas de controles da fonte de dados. Controles de fonte de dados podem representar qualquer fonte de dados: um arquivo, um fluxo, um banco de dados relacional, um objeto comercial e assim por diante. Fonte de dados controla apresentar dados de uma maneira consistente para controles associados a dados, independentemente da origem ou o formato dos dados subjacentes.       Controles de fonte de dados que representam dados hierárquicos derivam de <xref:System.Web.UI.HierarchicalDataSourceControl>classe, que é a implementação de base ASP.NET da interface IHierarchicalDataSource.</xref:System.Web.UI.HierarchicalDataSourceControl> A interface IHierarchicalDataSource é usado para definir os controles de fonte de dados que expõem dados hierárquicos, em vez de tabela ou dados de estilo de lista, para o servidor Web controles que derivam de <xref:System.Web.UI.WebControls.HierarchicalDataBoundControl>classe, como o <xref:System.Web.UI.WebControls.TreeView>controle.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.HierarchicalDataBoundControl> A interface define um único método, <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A>, que recupera um fortemente tipada <xref:System.Web.UI.HierarchicalDataSourceView>objeto.</xref:System.Web.UI.HierarchicalDataSourceView> </xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> Controles de fonte de dados que implementam esta interface oferecem suporte a uma exibição hierárquica para cada nível hierárquico de dados que eles representam. Os modos de exibição de fonte de dados não são nomeados, como <xref:System.Web.UI.DataSourceView>objetos, mas são identificados por seu caminho hierárquico exclusivo, que é o `viewPath` parâmetro passado para o <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A>método.</xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> </xref:System.Web.UI.DataSourceView>       Você pode pensar em um controle de fonte de dados como a combinação do objeto IHierarchicalDataSource e seus modos de exibição associados nos dados subjacentes. Cada associado <xref:System.Web.UI.HierarchicalDataSourceView>objeto define os recursos de um controle de fonte de dados para o nível hierárquico representado e, como todos os ASP.NET dados fonte exibir objetos, executa operações como insert, update, delete e classificação.</xref:System.Web.UI.HierarchicalDataSourceView>       Controles que expõem apenas dados hierárquicos, como <xref:System.Web.UI.WebControls.SiteMapDataSource>, são derivadas da <xref:System.Web.UI.HierarchicalDataSourceControl>classe</xref:System.Web.UI.HierarchicalDataSourceControl> de</xref:System.Web.UI.WebControls.SiteMapDataSource> fonte de dados Outros dados de origem controles que expõem seus dados como dados hierárquicos e dados tabulares, como <xref:System.Web.UI.WebControls.XmlDataSource>, são derivadas de <xref:System.Web.UI.HierarchicalDataSourceControl>mas implementa o <xref:System.Web.UI.IDataSource>e <xref:System.ComponentModel.IListSource>interfaces.</xref:System.ComponentModel.IListSource> </xref:System.Web.UI.IDataSource> </xref:System.Web.UI.HierarchicalDataSourceControl> </xref:System.Web.UI.WebControls.XmlDataSource>"
  example:
  - "The following code example demonstrates how to extend the abstract <xref:System.Web.UI.HierarchicalDataSourceControl> class, which implements the IHierarchicalDataSource interface, to create a data source control that displays file system information. The `FileSystemDataSource` class provides an implementation of the <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A> method, which retrieves a strongly typed view object for a specified file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.ihierarc_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.ihierarc_1_1.vb)]"
  syntax:
    content: public interface IHierarchicalDataSource
  implements: []
  platform:
  - net462
- uid: System.Web.UI.IHierarchicalDataSource.DataSourceChanged
  id: DataSourceChanged
  parent: System.Web.UI.IHierarchicalDataSource
  langs:
  - csharp
  name: DataSourceChanged
  nameWithType: IHierarchicalDataSource.DataSourceChanged
  fullName: System.Web.UI.IHierarchicalDataSource.DataSourceChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre quando o armazenamento de dados que o <xref href=&quot;System.Web.UI.IHierarchicalDataSource&quot;> </xref> representa interface foi alterado."
  remarks: "O evento DataSourceChanged é gerado quando uma alteração é feita em Propriedades do controle de fonte de dados, como alterar o <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>propriedade de um <xref:System.Web.UI.WebControls.XmlDataSource>controle ou alterar os dados no armazenamento de dados subjacentes, o que acontece quando nós XML são alterados por uma ação de edição executada por um <xref:System.Web.UI.WebControls.XmlDataSource>controle.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>"
  syntax:
    content: public event EventHandler DataSourceChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)
  id: GetHierarchicalView(System.String)
  parent: System.Web.UI.IHierarchicalDataSource
  langs:
  - csharp
  name: GetHierarchicalView(String)
  nameWithType: IHierarchicalDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o objeto auxiliar de modo de exibição para o <xref href=&quot;System.Web.UI.IHierarchicalDataSource&quot;> </xref> interface para o caminho especificado."
  remarks: "O <xref:System.Web.UI.IHierarchicalDataSource>interface, como o <xref:System.Web.UI.IDataSource>interface, define um método que os controles de fonte de dados hierárquicos é usado para recuperar uma exibição da fonte de dados.</xref:System.Web.UI.IDataSource> </xref:System.Web.UI.IHierarchicalDataSource> Como todos os <xref:System.Web.UI.DataSourceView>objetos auxiliares que estão associados a controles de fonte de dados, um <xref:System.Web.UI.HierarchicalDataSourceView>objeto define as operações que pode ser executadas a fonte de dados com os dados subjacentes.</xref:System.Web.UI.HierarchicalDataSourceView> </xref:System.Web.UI.DataSourceView> No entanto, embora os controles de fonte de dados que representam dados tabulares normalmente tem apenas uma exibição nomeada, controles de fonte de dados hierárquicos dão suporte a um modo de exibição para cada nível de dados hierárquicos que representa o controle de fonte de dados. O nível de dados hierárquicos é identificado por um caminho hierárquico exclusivo, passado como o `viewPath` parâmetro."
  example:
  - "The following code example demonstrates how to override the GetHierarchicalView method in a class that extends the <xref:System.Web.UI.HierarchicalDataSourceControl> class to retrieve a strongly typed <xref:System.Web.UI.HierarchicalDataSourceView> object for a unique hierarchical path. The `FileSystemDataSource` class's implementation of GetHierarchicalView retrieves a `FileSystemDataSourceView` object for a specified file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/add/codesnippet/csharp/m-system.web.ui.ihierarc_2_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#1](~/add/codesnippet/visualbasic/m-system.web.ui.ihierarc_2_1.vb)]"
  syntax:
    content: public System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);
    parameters:
    - id: viewPath
      type: System.String
      description: "O caminho hierárquico do modo de exibição para recuperar."
    return:
      type: System.Web.UI.HierarchicalDataSourceView
      description: "Retorna um <xref href=&quot;System.Web.UI.HierarchicalDataSourceView&quot;> </xref> que representa uma única exibição dos dados no nível hierárquico identificado pelo <code> viewPath </code> parâmetro."
  overload: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.IHierarchicalDataSource.DataSourceChanged
  parent: System.Web.UI.IHierarchicalDataSource
  isExternal: false
  name: DataSourceChanged
  nameWithType: IHierarchicalDataSource.DataSourceChanged
  fullName: System.Web.UI.IHierarchicalDataSource.DataSourceChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(System.String)
  parent: System.Web.UI.IHierarchicalDataSource
  isExternal: false
  name: GetHierarchicalView(String)
  nameWithType: IHierarchicalDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView(String)
- uid: System.Web.UI.HierarchicalDataSourceView
  parent: System.Web.UI
  isExternal: false
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView
  fullName: System.Web.UI.HierarchicalDataSourceView
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.IHierarchicalDataSource.GetHierarchicalView*
  parent: System.Web.UI.IHierarchicalDataSource
  isExternal: false
  name: GetHierarchicalView
  nameWithType: IHierarchicalDataSource.GetHierarchicalView
