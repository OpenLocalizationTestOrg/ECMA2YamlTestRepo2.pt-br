### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.ObjectDataSourceView
  id: ObjectDataSourceView
  children:
  - System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  - System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  - System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  - System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  - System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  - System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  - System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  - System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  - System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  - System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  - System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  - System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  - System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  - System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  - System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  - System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  - System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  - System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.Selected
  - System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  - System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  - System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.WebControls.ObjectDataSourceView.Updated
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  - System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  - System.Web.UI.WebControls.ObjectDataSourceView.Updating
  langs:
  - csharp
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView
  fullName: System.Web.UI.WebControls.ObjectDataSourceView
  type: Class
  summary: "Oferece suporte a <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlar e fornece uma interface para controles associados a dados executar operações de dados com objetos de negócios e dados."
  remarks: "A classe ObjectDataSourceView destina-se principalmente a ser usado por controles de associação de dados e não como um objeto programável no código da página.       A classe ObjectDataSourceView implementa a funcionalidade de dados para o <xref:System.Web.UI.WebControls.ObjectDataSource>controlar, incluindo o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>operações, classificação, filtragem e gerenciamento de configurações do modo de exibição mantidos estado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       Um objeto ObjectDataSourceView é criado para cada instância de <xref:System.Web.UI.WebControls.ObjectDataSource>classe em tempo de execução.</xref:System.Web.UI.WebControls.ObjectDataSource> Chamadas para operações de dados da instância do <xref:System.Web.UI.WebControls.ObjectDataSource>classe são tratados pela instância do objeto ObjectDataSourceView.</xref:System.Web.UI.WebControls.ObjectDataSource> Os desenvolvedores de páginas não acessam a instância da classe ObjectDataSourceView diretamente. Os desenvolvedores de controle podem criar controles de dados personalizado, estendendo o <xref:System.Web.UI.WebControls.ObjectDataSource>e classes de ObjectDataSourceView.</xref:System.Web.UI.WebControls.ObjectDataSource>       A classe ObjectDataSourceView executa operações de dados chamando os métodos em objetos de dados ou de negócios usando a reflexão. Em tempo de execução, o <xref:System.Web.UI.WebControls.ObjectDataSource>controle cria uma instância do tipo que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>propriedade e, em seguida, chama o método apropriado para a operação de dados.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> O objeto instanciado não estão em cache na memória, o ObjectDataSourceView. O objeto é criado e destruído para cada chamada de método de dados. Se o método for `static` (`Shared` no Visual Basic), não é possível criar uma instância, mas o método de operação de dados ainda será chamado.       O ObjectDataSourceView não é diretamente exposto aos desenvolvedores de página pelo <xref:System.Web.UI.WebControls.ObjectDataSource>controle.</xref:System.Web.UI.WebControls.ObjectDataSource> Em vez disso, as propriedades e métodos do ObjectDataSourceView são acessados por meio de <xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> Por exemplo, o <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>de ObjectDataSourceView propriedade está definida, definindo a <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>propriedade de <xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>      ## Recuperando dados a operação mais básico que executa uma exibição da fonte de dados é a recuperação de dados de subjacente armazenamento dados usando o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método, que recupera um <xref:System.Collections.IEnumerable>coleção de itens de dados.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> Os seguintes métodos de recuperação de dados, propriedades e eventos são implementados pelo objeto ObjectDataSourceView e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.ObjectDataSource>controle para desenvolvedores de página e outros chamadores: - o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método - o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.Selecting>evento – o <xref:System.Web.UI.WebControls.ObjectDataSource.Selected>evento # # objeto atualizando o ObjectDataSourceView de dados oferece suporte a atualizações de dados chamando um método do objeto de dados comerciais ou que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Selected> </xref:System.Web.UI.WebControls.ObjectDataSource.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Controles associados a dados que executam automaticamente as atualizações, como o <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>controles, passar os parâmetros em um <xref:System.Collections.Specialized.IOrderedDictionary>interface para o ObjectDataSourceView e o objeto de exibição mescla esses parâmetros com os parâmetros que são encontrados no <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Os seguintes métodos de atualização, propriedades e eventos são implementados pelo ObjectDataSourceView e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.ObjectDataSource>controle para desenvolvedores de página e outros chamadores: - o <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>método - o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.Updating>evento – o <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>evento # # objeto inserindo o ObjectDataSourceView de dados dá suporte à inserção de novas linhas de dados chamando um método do objeto de dados comerciais ou que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSource.Updating> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Controles associados a dados que executam inserções, automaticamente, como o <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, passar os parâmetros em um <xref:System.Collections.Specialized.IOrderedDictionary>interface para o ObjectDataSourceView e o objeto de exibição mescla esses parâmetros com os parâmetros que são encontrados no <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       O seguinte insere métodos, propriedades e eventos são implementados pelo ObjectDataSourceView e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.ObjectDataSource>controle para desenvolvedores de página e outros chamadores: - o <xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A>método - o <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.Inserting>evento - o <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>evento # # excluindo o ObjectDataSourceView de dados do objeto oferece suporte a exclusão de dados chamando um método do objeto de dados comerciais ou que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSource.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Controles associados a dados que executam automaticamente exclusões, como o <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, passar os parâmetros em um <xref:System.Collections.Specialized.IOrderedDictionary>interface para o ObjectDataSourceView e o objeto de exibição mescla esses parâmetros com os parâmetros que são encontrados no <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Collections.Specialized.IOrderedDictionary> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> O seguinte excluir métodos, propriedades e eventos são implementados pelo ObjectDataSourceView e expostos diretamente pelo seu <xref:System.Web.UI.WebControls.ObjectDataSource>controle para desenvolvedores de página e outros chamadores: - o <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>método - o <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A>propriedade - o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting>evento - o <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>evento # # filtragem e classificação de dados de recuperação é mais eficiente quando você pode filtrar os dados dinamicamente.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> A filtragem é suportada somente pelo <xref:System.Web.UI.WebControls.ObjectDataSource>controlar se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método retorna um <xref:System.Data.DataTable>ou <xref:System.Data.DataSet>objeto.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Você pode usar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>e <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>Propriedades para aplicar a filtragem dinâmica para recuperação de dados.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> Essas propriedades são implementadas pelo objeto ObjectDataSourceView e expostas diretamente pelo seu <xref:System.Web.UI.WebControls.ObjectDataSource>controle para controles associados a dados e outros chamadores.</xref:System.Web.UI.WebControls.ObjectDataSource>       Você pode classificar os dados recuperados com o <xref:System.Web.UI.WebControls.ObjectDataSource>ordenando os dados na memória depois de recuperados.</xref:System.Web.UI.WebControls.ObjectDataSource> A classificação é suportada somente pelo <xref:System.Web.UI.WebControls.ObjectDataSource>controlar se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método retorna um <xref:System.Data.DataTable>ou <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> O <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A>propriedade sempre retorna `true`, porque o ObjectDataSourceView não é possível determinar o tipo retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método sem chamar o método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanSort%2A> O <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>sintaxe de propriedade é o mesmo que para um <xref:System.Data.DataView.Sort%2A?displayProperty=fullName>propriedade.</xref:System.Data.DataView.Sort%2A?displayProperty=fullName> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>      ## Controle de exibição de estado a ObjectDataSourceView implementa o <xref:System.Web.UI.IStateManager>interface e usa estado de exibição para controlar o estado entre solicitações de página.</xref:System.Web.UI.IStateManager> Implementação de <xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A>métodos são fornecidos para habilitar o rastreamento de estado de exibição para o controle.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState%2A> Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: 'public class ObjectDataSourceView : System.Web.UI.DataSourceView, System.Web.UI.IStateManager'
  inheritance:
  - System.Object
  - System.Web.UI.DataSourceView
  implements:
  - System.Web.UI.IStateManager
  inheritedMembers:
  - System.Web.UI.DataSourceView.CanExecute(System.String)
  - System.Web.UI.DataSourceView.DataSourceViewChanged
  - System.Web.UI.DataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Events
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary)
  - System.Web.UI.DataSourceView.ExecuteCommand(System.String,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Insert(System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  - System.Web.UI.DataSourceView.Name
  - System.Web.UI.DataSourceView.OnDataSourceViewChanged(System.EventArgs)
  - System.Web.UI.DataSourceView.RaiseUnsupportedCapabilityError(System.Web.UI.DataSourceCapabilities)
  - System.Web.UI.DataSourceView.Select(System.Web.UI.DataSourceSelectArguments,System.Web.UI.DataSourceViewSelectCallback)
  - System.Web.UI.DataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary,System.Web.UI.DataSourceViewOperationCallback)
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  id: '#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)'
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> classe."
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView>construtor é chamado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>método para retornar uma nova instância de uma exibição da fonte de dados com especificado `viewName` parâmetro.</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> O <xref:System.Web.UI.WebControls.ObjectDataSource>controle está associado a apenas um <xref:System.Web.UI.WebControls.ObjectDataSourceView>a qualquer momento e sempre nomeia o modo de exibição `DefaultView`, embora essa restrição de nomenclatura é imposta pelo <xref:System.Web.UI.WebControls.ObjectDataSource>controle, não o <xref:System.Web.UI.WebControls.ObjectDataSourceView>.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSource> Você pode substituir o <xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>método para oferecer suporte a exibições com uma convenção de nomenclatura diferente.</xref:System.Web.UI.WebControls.ObjectDataSource.GetView%2A>       O <xref:System.Web.HttpContext>objeto que é passado por `context` é usado pela exibição da fonte de dados para acessar objetos de parâmetro, como <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>e <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>Propriedades.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.HttpContext>"
  syntax:
    content: public ObjectDataSourceView (System.Web.UI.WebControls.ObjectDataSource owner, string name, System.Web.HttpContext context);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.ObjectDataSource
      description: "O <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> está associado."
    - id: name
      type: System.String
      description: "Um nome exclusivo para a exibição de fonte de dados dentro do escopo do controle de fonte de dados que ele pertence."
    - id: context
      type: System.Web.HttpContext
      description: "Atual <xref href=&quot;System.Web.HttpContext&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  id: CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto associado atual <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controle oferece suporte para a operação de exclusão."
  remarks: "A propriedade retorna CanDelete `true`, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>está definida.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> Uma operação de exclusão ainda pode falhar, se todas as propriedades de dados não estão definidas ou não estão definidas corretamente."
  syntax:
    content: public override bool CanDelete { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se houver suporte para a operação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A exclusão não é suportada, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>propriedade é uma cadeia de caracteres vazia (&quot;&quot;).</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  id: CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto associado atual <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controle oferece suporte para a operação de inserção."
  remarks: "A propriedade retorna CanInsert `true`, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>está definida.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> Uma operação de inserção ainda pode falhar, se todas as propriedades de dados não estão definidas ou não estão definidas corretamente."
  syntax:
    content: public override bool CanInsert { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se houver suporte para a operação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Inserção não é suportada se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>propriedade é uma cadeia de caracteres vazia.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  id: CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto associado atual <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controle oferece suporte à paginação por meio dos dados recuperados."
  remarks: "A propriedade CanPage indica se o <xref:System.Web.UI.WebControls.ObjectDataSourceView>objeto oferece suporte à paginação.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Para obter informações sobre como a paginação tem suporte pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView>consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: public override bool CanPage { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>valor é definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  id: CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto associado atual <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controle oferece suporte para recuperar o número total de linhas de dados, além do conjunto de dados."
  remarks: "A propriedade retorna CanRetrieveTotalRowCount `true`, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>está definida.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> O método que retorna a contagem deve retornar o número total de linhas que pode ser paginada, não o número de linhas em uma página. Controles de associação de dados usam o número total de linhas que pode ser paginada para determinar como renderizar controles de paginação. Por exemplo, quantos botões de pager numéricos em um <xref:System.Web.UI.WebControls.GridView>controlar pager.</xref:System.Web.UI.WebControls.GridView> Para obter mais informações sobre suporte à paginação, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.EnablePaging%2A>       A propriedade CanRetrieveTotalRowCount é verificada durante uma chamada para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>método para garantir o controle da fonte de dados oferece suporte a todos os recursos solicitados, definindo os vários <xref:System.Web.UI.DataSourceSelectArguments>Propriedades.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public override bool CanRetrieveTotalRowCount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se houver suporte para a operação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  id: CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto associado atual <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controle oferece suporte a uma exibição classificada na fonte de dados subjacente."
  remarks: "Porque o <xref:System.Web.UI.WebControls.ObjectDataSource>só dá suporte à classificação de dados de controle quando o <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método retorna um <xref:System.Data.DataSet>, <xref:System.Data.DataView>, ou <xref:System.Data.DataTable>do objeto, o objeto de exibição não pode determinar se há suporte para classificação até que o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>é chamado de método e retorna.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Por esse motivo, a propriedade CanSort sempre retorna `true`."
  syntax:
    content: public override bool CanSort { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  id: CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto associado atual <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controle oferece suporte para a operação de atualização."
  remarks: "A propriedade retorna CanUpdate `true`, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>está definida.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> Uma operação de atualização ainda pode falhar, se todas as propriedades de dados não estão definidas ou não estão definidas corretamente."
  syntax:
    content: public override bool CanUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se houver suporte para a operação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A atualização não é suportada se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade é uma cadeia de caracteres vazia (&quot;&quot;).</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  id: ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que determina como o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controle executa as atualizações e exclusões quando dados em uma linha no armazenamento de dados subjacentes forem alterados durante o tempo da operação."
  remarks: "A propriedade ConflictDetection determina se os parâmetros para os valores novos e antigos são aplicados para o `Update` método. Por exemplo, se o método que é especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>propriedade retorna um <xref:System.Data.DataTable>objeto com as colunas `Name` e `Number`, e a propriedade ConflictDetection é definida como o <xref:System.Web.UI.ConflictOptions>valor, os parâmetros são criados para `Name` e `Number` para o `Update` método.</xref:System.Web.UI.ConflictOptions> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> Se a propriedade ConflictDetection é definida como o <xref:System.Web.UI.ConflictOptions>valor, os parâmetros são criados com os nomes `Name`, `Number`, `original_Name`, e `original_Name`.</xref:System.Web.UI.ConflictOptions> (O nome exato dos parâmetros para os valores originais depende do <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>.)</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> O <xref:System.Web.UI.WebControls.ObjectDataSourceView>determina se o método é especificado no <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>propriedade tem parâmetros que correspondam.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       Controle de simultaneidade é uma técnica de repositórios de dados usam para controlar como os dados é lida e alterados no repositório quando vários clientes estão acessando e manipulando os mesmos dados. Por exemplo, um cliente lê os dados e apresenta-as para um usuário, enquanto outro cliente lê os mesmos dados e apresenta-as para um usuário diferente. Se ambos os usuários atualizam os dados e enviá-lo para o armazenamento de dados, alguns resultados inesperados poderão ocorrer, pois ambos os clientes podem atualizar valores diferentes para os mesmos dados. Isso é considerado um conflito. Definindo a propriedade ConflictDetection o <xref:System.Web.UI.ConflictOptions>valor, o `Update` método pode comparar os valores antigos e novos para a fonte de dados original para detectar conflitos e tratá-los, conforme necessário.</xref:System.Web.UI.ConflictOptions>       O valor a ConflictDetection propriedade é armazenado na exibição estado."
  syntax:
    content: public System.Web.UI.ConflictOptions ConflictDetection { get; set; }
    return:
      type: System.Web.UI.ConflictOptions
      description: "Uma da <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valores. O padrão é o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valor."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado não é um do <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  id: ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> valores que são passados para uma atualização, inserção ou operação de exclusão são automaticamente convertidos de <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para o <xref href=&quot;System.DBNull.Value&quot;> </xref> valor."
  remarks: "Convertendo não `null` para o <xref:System.DBNull.Value?displayProperty=fullName>valor pode resultar em erros em tempo de execução.</xref:System.DBNull.Value?displayProperty=fullName> Use a propriedade ConvertNullToDBNull para indicar se o <xref:System.Web.UI.WebControls.Parameter>valores que são passados para uma atualização, inserção ou uma operação de exclusão são automaticamente convertidos de `null` para o <xref:System.DBNull.Value?displayProperty=fullName>valor.</xref:System.DBNull.Value?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.ConvertNullToDBNull?displayProperty=fullName>"
  syntax:
    content: public bool ConvertNullToDBNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> na <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> objetos passados para o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> serão convertidos automaticamente para o <xref href=&quot;System.DBNull.Value&quot;> </xref> valor; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  id: DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome de uma classe que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> usa o controle para um parâmetro em uma operação de dados. O <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controle usa a classe especificada, em vez do <xref href=&quot;System.Web.UI.WebControls.Parameter&quot;> </xref> objetos que estão em várias coleções de parâmetros."
  remarks: "Em vez de especificar vários parâmetros que são passados para o `Select`, `Update`, `Insert`, e `Delete` métodos, você pode criar um objeto que agrega vários itens. Este um objeto é passado para os métodos, em vez de vários parâmetros. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName?displayProperty=fullName>"
  syntax:
    content: public string DataObjectTypeName { get; set; }
    return:
      type: System.String
      description: "Um nome de classe parcial ou totalmente qualificado que identifica o tipo do objeto que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> pode usar como um parâmetro para um <> </> *>, <> </> *>, ou <xref:System.Web.UI.WebControls.ObjectDataSource.Delete*>operação.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete*> O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de exclusão, chamando o método do objeto comercial que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>propriedade usando especificado <code> keys </code> e <code> oldValues </code> coleções.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "O valor padrão é -1, o que significa que um número desconhecido de linhas foram excluído. Para retornar um valor diferente, defina o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>propriedade o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto do <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>manipulador de eventos.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> O número de linhas afetadas normalmente é retornado pelo `Delete` método para o objeto de negócios e esse valor está disponível no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>propriedade o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>parâmetro do <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted>manipulador de eventos.</xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       As chamadas de método de exclusão de <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>método, passando o `keys` e `oldValues` coleções.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete%2A>"
  syntax:
    content: public int Delete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>dos valores de chave usados para identificar o item a ser excluído.</xref:System.Collections.IDictionary> Esses parâmetros são usados com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>propriedade para executar a operação de exclusão.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> Se não houver nenhum parâmetro associado ao método, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que contém os valores não-chave adicionais usados para corresponder o item da fonte de dados.</xref:System.Collections.IDictionary> Valores de linha são passados para somente-se o método de <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>está definida como o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> campo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "O número de linhas excluídas; Caso contrário, -1, se o número não for conhecido."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>operação foi concluída.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "Manipular o evento excluído para examinar os valores de um valor de retorno e parâmetros de saída ou para determinar se uma exceção foi acionada após um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>operação foi concluída.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> O valor de retorno, parâmetros de saída e propriedades de tratamento de exceção estão disponíveis no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the Deleted event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_129_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_129_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Deleted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto invoca para excluir dados."
  remarks: "O método que é identificado pela propriedade DeleteMethod pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método. Se é um método de instância, o objeto comercial é criado e destruído cada vez que o método especificado pela propriedade DeleteMethod é chamado. Você pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>evento para trabalhar com o objeto de negócios antes de é chamado o método especificado pela propriedade DeleteMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> Você também pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>evento que é gerado depois que é chamado o método especificado pela propriedade DeleteMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> Se o método for uma `static` (`Shared` no Visual Basic) método, o objeto comercial nunca é criado e não pode tratar esses eventos.       Se o objeto de negócios o <xref:System.Web.UI.WebControls.ObjectDataSource>controle funciona com implementa mais de um método ou função com o mesmo nome (sobrecargas do método), o controle de fonte de dados tenta invocar correto um acordo com um conjunto de condições, incluindo os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Se os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>coleção não coincidem com aqueles de assinatura de método DeleteMethod, a fonte de dados gera uma exceção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A>       O valor DeleteMethod propriedade é armazenado na exibição estado.       Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the DeleteMethod property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSource.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1099_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1099_1.aspx)]"
  syntax:
    content: public string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> usa para excluir dados. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são usados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "Os nomes e tipos dos parâmetros que estão contidos na coleção DeleteParameters devem corresponder a nomes e tipos dos parâmetros que estão no método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>assinatura da propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> Os nomes de parâmetro são afetados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>propriedade e são diferencia maiusculas de minúsculas.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Ao trabalhar com controles de associação de dados que fornecem os parâmetros, como <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, o <xref:System.Web.UI.WebControls.ObjectDataSource>controle mescla automaticamente os parâmetros que são explicitamente especificados na coleção com os parâmetros que são fornecidos pelo controle de associação de dados.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.DeleteMethod%2A>"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros usados pelo método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  remarks: "Manipular o evento de exclusão para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.ObjectDataSource>controle executa o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Os parâmetros estão disponíveis como um <xref:System.Collections.IDictionary>coleção que é acessada pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>propriedade, que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the Deleting event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_88_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_88_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Deleting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  id: EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o controle de fonte de dados oferece suporte à paginação por meio do conjunto de dados que ela recupera."
  remarks: "Paginação pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView>controle é manipulado ao configurar o EnablePaging <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>, <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>, e <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>Propriedades da <xref:System.Web.UI.WebControls.ObjectDataSourceView>e definindo um `Select` método no objeto comercial com os parâmetros corretos.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Quando a propriedade EnablePaging é definida como `true`, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>coleção inclui dois parâmetros adicionais para a primeira linha solicitada e o número de linhas solicitado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> Esses dois parâmetros são nomeados conforme definido pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A>e <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A>Propriedades.</xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName%2A> O `Select` método deve retornar o número solicitado de linhas, iniciando no índice especificado. Porque os dados não podem se dividem uniformemente pelo tamanho da página, a última página pode conter menos linhas. Assim, o número de linhas solicitado é, na verdade, o número máximo de linhas retornadas.       O <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>propriedade é verificada durante uma chamada para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>método para garantir o controle da fonte de dados oferece suporte a todos os recursos solicitados, definindo os vários <xref:System.Web.UI.DataSourceSelectArguments>Propriedades.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount%2A>       Quando a paginação está habilitada para o controle de associação de dados associado, o controle de associação de dados chama o `Select` método com o índice inicial e o número de linhas que são necessários. Além disso, se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>estiver definida, o controle de associação de dados chama o método antes de processar os controles de pager.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> Por exemplo, se um <xref:System.Web.UI.WebControls.GridView>controle tem paginação habilitada com um tamanho de página de 5 e o <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A>método retorna 20, apenas 4 páginas são exibidas no pager.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod%2A> </xref:System.Web.UI.WebControls.GridView>       O valor a EnablePaging é de propriedade armazenado na exibição estado."
  syntax:
    content: public bool EnablePaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o controle de fonte de dados oferece suporte à paginação de dados ele recupera; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de exclusão usando o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>especificado e método <code> keys </code> e <code> oldValues </code> coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView>classe implementa o método ExecuteDelete herdado para excluir dados de um repositório de dados subjacente usando um objeto de negócios.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Os desenvolvedores de páginas e autores de controle associado a dados não chame o método ExecuteDelete diretamente. em vez disso, use expostas publicamente <xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Delete%2A>       Antes da operação de exclusão é executada, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting%2A> Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes do <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>método é chamado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A>       Para executar uma operação de exclusão, o <xref:System.Web.UI.WebControls.ObjectDataSourceView>usa reflexão para chamar o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A>propriedade e qualquer associado parâmetros no `keys` e `oldValues` coleções e, em seguida, executa proprietário.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Após a conclusão da operação, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted%2A> Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e para executar qualquer pós-processamento."
  syntax:
    content: protected override int ExecuteDelete (System.Collections.IDictionary keys, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de parâmetros usados com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*>propriedade para executar a operação de exclusão.</xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*> </xref:System.Collections.IDictionary> Se não houver nenhum parâmetro associado ao método, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que contém os valores de linha são avaliados, apenas se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>estiver definida como o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> campo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> </xref:System.Collections.IDictionary>"
    return:
      type: System.Int32
      description: "O número de linhas excluídas; Caso contrário, -1, se o número não for conhecido. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>propriedade retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>está definida como o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> valor e nenhum valor é passado a <code> oldValues </code> coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  id: ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de inserção, chamando o método do objeto comercial que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>propriedade usando especificado <code> values </code> coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView>classe implementa o método ExecuteInsert herdado para inserir dados em um repositório de dados subjacente usando um objeto de negócios.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Os desenvolvedores de páginas e autores de controle associado a dados não chame o método ExecuteInsert diretamente. em vez disso, use expostas publicamente <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       Antes da inserção é realizada, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserting%2A> Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes do <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>método é chamado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>       Para executar uma operação de inserção, o <xref:System.Web.UI.WebControls.ObjectDataSourceView>controle usa reflexão para chamar o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>propriedade e qualquer associado parâmetros que estão na `values` coleção e, em seguida, executa proprietário.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Após a conclusão da operação, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnInserted%2A> Você pode manipular esse evento para examinar os valores de retorno, códigos de erro e executar qualquer pós-processamento.       Para obter mais informações sobre como retornar o número de linhas inseridas, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>"
  syntax:
    content: protected override int ExecuteInsert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de parâmetros usados com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>propriedade para executar a operação de inserção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> Se não houver nenhum parâmetro associado ao método, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "O número de linhas inseridas; Caso contrário, -1, se o número não for conhecido. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>propriedade retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>values</code>é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou vazio."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  id: ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera dados do objeto que é identificado pelo <> </> *> propriedade chamando o método que é identificada pelo <> </> *> propriedade e passando os valores no <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView>classe implementa o método ExecuteSelect herdado para recuperar dados usando um objeto comercial.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Os desenvolvedores de páginas e autores de controle associado a dados não chame o método ExecuteSelect diretamente. em vez disso, use expostas publicamente <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       O método especificado pode ter qualquer assinatura de método, mas deve retornar um dos tipos para o <xref:System.Web.UI.WebControls.ObjectDataSource>controle que são listados na tabela a seguir para chamá-lo com êxito.</xref:System.Web.UI.WebControls.ObjectDataSource>      | Tipo de retorno | Ação |   |-----------------|------------|   | <xref:System.Collections.IEnumerable>| O <xref:System.Collections.IEnumerable>é retornado pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataTable>| Um <xref:System.Data.DataView>é criado usando o <xref:System.Data.DataTable>e retornado pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataSet>| O primeiro <xref:System.Data.DataTable>o <xref:System.Data.DataSet>é extraído e um <xref:System.Data.DataView>é criado e retornado pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Object>| O objeto é encapsulado em um elemento de um <xref:System.Collections.IEnumerable>e retornado pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |       Antes da recuperação de dados é executada, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selecting> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Collections.IEnumerable> Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes que a operação.       Para executar uma operação de seleção, o <xref:System.Web.UI.WebControls.ObjectDataSourceView>controle usa reflexão para chamar o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>propriedade e qualquer associado parâmetros que estão na <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>coleção e, em seguida, executa proprietário.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Após a conclusão da operação, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Selected> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnSelected%2A> Você pode manipular esse evento para examinar quaisquer valores de retorno e os códigos de erro e para executar qualquer pós-processamento.       Se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método retorna um <xref:System.Data.DataSet>objeto e o cache é habilitado, o <xref:System.Web.UI.WebControls.ObjectDataSourceView>recupera e salva os dados em cache durante a operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> O cache é criado, descartado ou atualizada com base no comportamento de cache que é especificado pela combinação da <xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>e <xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A>Propriedades.</xref:System.Web.UI.WebControls.ObjectDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.CacheDuration%2A>       Se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método retorna um <xref:System.Data.DataSet>objeto e um <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>propriedade foi especificada, ela é avaliada juntamente com qualquer fornecido <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A>Propriedades e o filtro resultante é aplicada à lista de dados durante o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>       Para obter informações sobre como retornar o número de linhas selecionadas, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>"
  syntax:
    content: protected override System.Collections.IEnumerable ExecuteSelect (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "Um <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> usado para operações de solicitação nos dados além da recuperação de dados básico."
    return:
      type: System.Collections.IEnumerable
      description: "Um <xref:System.Collections.IEnumerable>lista de linhas de dados.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "The <code>arguments</code> passed to the ExecuteSelect method specify that the data source should perform some additional work while retrieving data to enable paging or sorting through the retrieved data, but the data source control does not support the requested capability.  \n  \n \\- or -  \n  \n The object returned by the ExecuteSelect method is not a <xref href=\"System.Data.DataSet\"></xref> or <xref href=\"System.Data.DataTable\"></xref>, and caching is enabled. Only <xref href=\"System.Data.DataSet\"></xref> and <xref href=\"System.Data.DataTable\"></xref> objects can be cached for the <xref href=\"System.Web.UI.WebControls.ObjectDataSourceView\"></xref> control.  \n  \n \\- or -  \n  \n Both caching and client impersonation are enabled. The <xref href=\"System.Web.UI.WebControls.ObjectDataSource\"></xref> does not support caching when client impersonation is enabled."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The object returned by the ExecuteSelect method is a <xref href=\"System.Data.DataSet\"></xref>, but has no tables in its <xref:System.Data.DataSet.Tables*> collection.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*> property is set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>, but the <xref:System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*> and <xref:System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*> properties are not set."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de atualização chamando o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade e o uso de parâmetros que são fornecidos no <code> keys </code>, <code> values </code>, ou <code> oldValues </code> coleções.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView>classe implementa o método ExecuteUpdate herdado para atualizar dados usando um objeto de negócios.</xref:System.Web.UI.WebControls.ObjectDataSourceView> Os desenvolvedores de páginas e autores de controle associado a dados não chame o método ExecuteUpdate diretamente. em vez disso, use expostas publicamente <xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Update%2A>       Os valores que estão contidos no `keys` e `values` coleções são avaliadas e mescladas com quaisquer valores contidos o <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> Se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>estiver definida como o <xref:System.Web.UI.ConflictOptions>valor, os valores que estão contidos no `oldValues` coleção são formatados com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>propriedade e são também mesclagem.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       Antes da operação de atualização é executada, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updating> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating%2A> Você pode manipular esse evento para examinar os valores dos parâmetros e executar qualquer pré-processamento antes de uma atualização. Para executar uma operação de atualização, o <xref:System.Web.UI.WebControls.ObjectDataSourceView>usa reflexão para chamar o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>propriedade e qualquer associado parâmetros no `keys` coleção e, em seguida, executa proprietário.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView> Após a conclusão da operação, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A>método é chamado para gerar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated>evento.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated%2A> Você pode manipular esse evento para examinar os valores de retorno, códigos de erro e executar qualquer pós-processamento.       Para obter mais informações sobre como retornar o número de linhas atualizadas, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>"
  syntax:
    content: protected override int ExecuteUpdate (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de chaves primárias para usar com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade para executar a operação de atualização do banco de dados.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> Se não houver nenhuma chave associado ao método, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>dos valores a serem usados com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>para executar a operação de atualização do banco de dados.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> </xref:System.Collections.IDictionary> Se não houver nenhum parâmetro associado ao método, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que representa os valores originais no repositório de dados subjacente.</xref:System.Collections.IDictionary> Se não houver nenhum parâmetro associado à consulta, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "O número de linhas atualizadas; ou -1, se o número não for conhecido. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.Update*>.</xref:System.Web.UI.WebControls.ObjectDataSource.Update*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>propriedade retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>oldValues</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref> or empty and <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*> is set to <xref href=&quot;System.Web.UI.ConflictOptions&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  id: FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma expressão de filtragem é aplicada quando o método do objeto comercial que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>propriedade é chamada.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSource>controle oferece suporte à filtragem de dados somente quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método retorna um <xref:System.Data.DataSet>, <xref:System.Data.DataView>, ou <xref:System.Data.DataTable>objeto.</xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       A sintaxe usada para o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>propriedade é uma expressão do estilo de cadeia de caracteres de formato.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> A sintaxe de expressão de filtro é a mesma sintaxe que é aceito pelo <xref:System.Data.DataView.RowFilter%2A>propriedade porque a expressão de filtro é aplicada para o <xref:System.Data.DataView.RowFilter%2A>propriedade do <xref:System.Data.DataView>objeto que é retornado de execução a <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataView.RowFilter%2A> </xref:System.Data.DataView.RowFilter%2A> (Para obter mais informações, consulte <xref:System.Data.DataColumn.Expression%2A>.)</xref:System.Data.DataColumn.Expression%2A> Se você adicionar parâmetros para o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>coleção, você também pode incluir espaços reservados de cadeia de caracteres de formato, por exemplo `&quot;{0}&quot;`, na expressão para substituir valores de parâmetro.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> Os espaços reservados são substituídos de acordo com o índice do parâmetro no <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       Você pode incluir parâmetros em <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> Se o tipo do parâmetro é um tipo de cadeia de caracteres ou caractere, coloque o parâmetro entre aspas. Aspas não são necessárias se o parâmetro é um tipo numérico. A <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>coleção contém os parâmetros que são avaliados para os espaços reservados encontrados em <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> </xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A>       O valor a FilterExpression propriedade é armazenado na exibição estado.      > [!IMPORTANT] > É recomendável que você valide qualquer valor de parâmetro de filtro que você recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro na expressão de filtro e aplica-se para o <xref:System.Data.DataView>objeto que é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se você estiver usando o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>a propriedade como uma medida de segurança para limitar o número de itens que são retornados, você deve validar os valores de parâmetro antes da filtragem ocorre.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The FilterExpression property specifies an expression that is used to filter the data that is retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters%2A> collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1284_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1284_2.vb)]"
  syntax:
    content: public string FilterExpression { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa uma expressão de filtragem aplicada quando dados são recuperados usando o método do objeto comercial identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A propriedade FilterExpression foi definida e o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>método não retorna um <xref href=&quot;System.Data.DataSet&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  id: Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de filtro."
  remarks: "Manipular o <xref:System.Web.UI.WebControls.ObjectDataSource.Filtering>evento para executar operações de validação em valores de parâmetro de filtro antes do <xref:System.Web.UI.WebControls.ObjectDataSource>controle executa uma operação de filtro.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource.Filtering> Você pode cancelar o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>operação definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs>do objeto para `true`.</xref:System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> O evento é gerado apenas se o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>está definida.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).      > [!IMPORTANT] > Você deve validar qualquer valor de parâmetro de filtro que você recebe do cliente. O tempo de execução simplesmente substitui o valor do parâmetro na expressão de filtro e aplica-se para o <xref:System.Data.DataView>objeto que é retornado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSource.Select%2A> </xref:System.Data.DataView> Se você estiver usando o <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>a propriedade como uma medida de segurança para limitar o número de itens que são retornados, você deve validar os valores de parâmetro antes da filtragem ocorre.</xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler Filtering;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  id: FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma coleção de parâmetros que estão associados a quaisquer espaços reservados de parâmetros que estão na <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>cadeia de caracteres.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSource>controle oferece suporte à filtragem de dados somente quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método retorna um <xref:System.Data.DataSet>, <xref:System.Data.DataTable>, ou <xref:System.Data.DataView>objeto.</xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.WebControls.ObjectDataSource>       Os parâmetros na coleção FilterParameters estão associados com os parâmetros que são especificados no <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> Os espaços reservados de parâmetro que são especificados no <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>propriedade correspondem aos objetos de parâmetro na coleção FilterParameters quando o método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>propriedade é chamada.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results. The <xref:System.Web.UI.WebControls.ObjectDataSource> control can filter data only when the method that retrieves the data retrieves it as a <xref:System.Data.DataSet> object. For this reason, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property identifies a business object method that retrieves data as a <xref:System.Data.DataSet>.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a **Submit** button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee that is identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, in the <xref:System.Web.UI.WebControls.TextBox>, enter the full name of the employee, and then click the **Submit** button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression%2A> property specifies an expression that is used to filter the data that is retrieved by the method specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. It uses parameter placeholders that are evaluated to the parameters that are contained in the FilterParameters collection. In this example, the parameter placeholder is bounded by single quotation marks because the type of the parameter is a string type that might contain spaces. If the type of the parameter is a numeric or date type, bounding quotation marks are not required. The FilterParameters collection contains one parameter, a <xref:System.Web.UI.WebControls.FormParameter> that is bound to the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on you to provide the full name of a Northwind Traders employee to demonstrate filtering.  \n  \n For a complete working example, you must compile and use these classes with the Web Forms page code examples that are provided.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1120_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1120_2.vb)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection FilterParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém um conjunto de parâmetros associados a quaisquer espaços reservados de parâmetros encontrados no <xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <> </> *> propriedade foi definida e o <> </> *> método não retorna um <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  id: Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de inserção, chamando o método do objeto comercial que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>propriedade usando especificado <code> values </code> coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "O valor de retorno padrão é -1, o que significa que um número desconhecido de linhas foram inserido. Para retornar um valor diferente, defina o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>propriedade o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto do <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>evento.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> O número de linhas afetadas normalmente é retornado pelo `Insert` método para o objeto de negócios e esse valor é proveniente o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>propriedade do <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto do <xref:System.Web.UI.WebControls.ObjectDataSource.Inserted>evento.</xref:System.Web.UI.WebControls.ObjectDataSource.Inserted> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       As chamadas de método de inserção de <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>método, passando o `values` coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert%2A>"
  syntax:
    content: public int Insert (System.Collections.IDictionary values);
    parameters:
    - id: values
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>a coleção de parâmetros usados com o <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>propriedade para executar a operação de inserção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*> </xref:System.Collections.IDictionary> Se não houver nenhum parâmetro associado ao método, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Int32
      description: "O número de linhas inseridas; Caso contrário, -1, se o número não for conhecido."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>propriedade retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>operação foi concluída.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "Manipular o evento Inserted para examinar os valores de um valor de retorno e parâmetros de saída ou para determinar se uma exceção foi acionada após um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>operação foi concluída.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> O valor de retorno, parâmetros de saída e propriedades de tratamento de exceção estão disponíveis no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Inserted;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert*>"
  remarks: "Manipular o evento inserindo para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.ObjectDataSource>controle executa o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Os parâmetros estão disponíveis como um <xref:System.Collections.IDictionary>coleção que é acessada pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>propriedade, que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the Inserting event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings, and then added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the preceding code example uses. The code example consists of two basic classes:  \n  \n-   The `EmployeeLogic` class, which is a stateless class that encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class, which is a model class that contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_22_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/e-system.web.ui.webcontr_22_2.cs)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Inserting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto invoca para inserir dados."
  remarks: "O método que é identificado pela propriedade InsertMethod pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método. Se é um método de instância, o objeto comercial é criado e destruído cada vez que o método especificado pela propriedade InsertMethod é chamado. Você pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>evento para trabalhar com o objeto de negócios antes de é chamado o método especificado pela propriedade InsertMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> Você também pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>evento é gerado depois que o método especificado pela propriedade InsertMethod é chamado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` é chamado, apenas se o objeto comercial implementa o <xref:System.IDisposable>interface.)</xref:System.IDisposable> Se o método for uma `static` (`Shared` no Visual Basic) método, o objeto comercial nunca é criado e não pode tratar esses eventos.       Se o objeto de negócios a <xref:System.Web.UI.WebControls.ObjectDataSource>objeto implementa mais de um método ou função com o mesmo nome (sobrecargas do método), o controle de fonte de dados tenta invocar correto um acordo com um conjunto de condições, incluindo os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Se os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>coleção não corresponderem do método especificado pela propriedade assinatura InsertMethod, a fonte de dados gera uma exceção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A>       O valor InsertMethod propriedade é armazenado na exibição estado.       Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example of the middle-tier business object that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The InsertMethod property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n In this code example, the `UpdateEmployeeInfo` method is used to perform an insert; however, it requires a `NorthwindEmployee` parameter to insert the data. For this reason, the collection of strings that the <xref:System.Web.UI.WebControls.DetailsView> control passes automatically is not sufficient. The `NorthwindEmployeeInserting` delegate is an <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler> object that handles the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Inserting> event and enables you to manipulate the input parameters before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation proceeds. Because the `UpdateEmployeeInfo` method requires a `NorthwindEmployee` object as a parameter, one is created using the collection of strings and is added to the <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> collection using a parameter name (`ne`) that the method expects. You might perform steps like these when using an existing middle-tier object as a data source with types and methods that are not designed specifically for use with the <xref:System.Web.UI.WebControls.ObjectDataSource> control.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the InsertMethod property is called. If the `Insert` method of the object has a method signature that includes parameters, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters%2A> collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> method to complete successfully.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_1.aspx)]  \n  \n The following code example provides an example of a middle-tier business object that the previous code example uses. The code example consists of two basic classes and an additional class:  \n  \n-   The `EmployeeLogic` class is a stateless class, which encapsulates business logic.  \n  \n-   The `NorthwindEmployee` class is a model class, which contains only the basic functionality that is required to load and persist data from the data tier.  \n  \n-   An additional `NorthwindDataException` class is provided as a convenience.  \n  \n For a complete working example, you must compile and use these classes. The `UpdateEmployeeInfo` method is not completely implemented, so you will not insert data into the Northwind Traders database when you experiment with this code example.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1176_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_4#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1176_2.cs)]"
  syntax:
    content: public string InsertMethod { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> usa para inserir dados. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são usados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  remarks: "Os nomes e tipos dos parâmetros que estão contidos na coleção InsertParameters devem coincidir com os nomes e tipos dos parâmetros que estão no método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A>assinatura da propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> Ao trabalhar com controles de associação de dados que fornecem os parâmetros, como <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, o <xref:System.Web.UI.WebControls.ObjectDataSource>controle mescla automaticamente os parâmetros que são explicitamente especificados na coleção com os parâmetros que são fornecidos pelo controle de associação de dados.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>.</xref:System.Web.UI.WebControls.ObjectDataSource.InsertMethod%2A>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The second code example provides an example implementation of the `Insert` method that is used in the first code example.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.DetailsView> control to insert data. The <xref:System.Web.UI.WebControls.DetailsView> initially displays a new `NorthwindEmployee` record, along with an automatically generated **Insert** button. After you enter data into the fields of the <xref:System.Web.UI.WebControls.DetailsView> control, click the **Insert** button. The <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property identifies which method performs the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation.  \n  \n If you click the **Insert** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property and any parameters that are specified in the InsertParameters collection. In this code example, one parameter is specified in the InsertParameters collection that corresponds to the supervisor's ID. This is because even though the ID is displayed in the <xref:System.Web.UI.WebControls.DetailsView.Fields%2A> collection for the <xref:System.Web.UI.WebControls.DetailsView> control as a <xref:System.Web.UI.WebControls.BoundField> object, it will be passed as a string to the <xref:System.Web.UI.WebControls.ObjectDataSource> control. By adding it explicitly to the InsertParameters collection with a <xref:System.Web.UI.WebControls.Parameter.Type%2A> property that is set to the <xref:System.TypeCode> value, it will be passed correctly by the <xref:System.Web.UI.WebControls.ObjectDataSource> to the method as an `int`, not as `string`.  \n  \n When the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> operation is performed, the method that is identified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod%2A> property is called. If the `Insert` method of the object has a method signature that includes parameters, the InsertParameters collection must contain a parameter with names that match the method signature parameters for the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Insert%2A> to complete successfully.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_1.aspx)]  \n  \n The following code example provides an example implementation of the `Insert` method that the preceding code example uses. The `InsertNewEmployeeWrapper` method is added to the `EmployeeLogic` middle-tier object to enable the object to work more easily with the <xref:System.Web.UI.WebControls.ObjectDataSource> control in Web scenarios, without a substantial rewrite to the actual business logic.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_138_2.vb)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_8#3](~/add/codesnippet/csharp/p-system.web.ui.webcontr_138_2.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros usados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto está salvando alterações ao seu estado de exibição."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o modo de exibição de fonte de dados está marcado para salvar seu estado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restaurações de estado de exibição para a exibição de fonte de dados salvo anteriormente."
  remarks: "Esse método é usado basicamente pela infraestrutura do .NET Framework e não se destina a ser usado diretamente no seu código.  No entanto, os desenvolvedores de controle podem substituir este método para especificar como um controle de servidor personalizado restaura o estado de exibição. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md).       O método LoadViewState restaura as informações de estado de exibição para o <xref:System.Web.UI.WebControls.ObjectDataSourceView>objeto a partir de uma solicitação de página anterior que foi salvo, o <xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: protected virtual void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um objeto que representa o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> estado para restaurar."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  id: MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do parâmetro de método de recuperação de dados que é usado para indicar o número de registros a serem recuperados para suporte à paginação de fonte de dados."
  remarks: "A propriedade MaximumRowsParameterName é usada para oferecer suporte a paginação de fonte de dados. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>       O valor a MaximumRowsParameterName propriedade é armazenado na exibição estado."
  syntax:
    content: public string MaximumRowsParameterName { get; set; }
    return:
      type: System.String
      description: "O nome do parâmetro de método usado para indicar o número de registros a serem recuperados. O padrão é `&quot;maximumRows&quot;`."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  id: ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre após o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto cria uma instância do tipo que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "Manipular o evento ObjectCreated para chamar outros métodos no objeto comercial, definir propriedades ou executar outra inicialização específico para o objeto de negócios antes do <xref:System.Web.UI.WebControls.ObjectDataSource>controlar chamadas de `Data` métodos para o objeto de negócios.</xref:System.Web.UI.WebControls.ObjectDataSource> Uma referência ao objeto é acessada pelo <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>propriedade, que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Se o método que é identificado para executar a operação de dados é `static` (`Shared` no Visual Basic), o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>e eventos de ObjectCreated nunca são gerados.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  id: ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto cria uma instância do tipo que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSource>controle chama automaticamente o construtor padrão de um objeto comercial para criar e instância dela usando reflexão.</xref:System.Web.UI.WebControls.ObjectDataSource> Manipular o evento ObjectCreating explicitamente chamar outro construtor e para definir a instância do objeto que os resultados para o <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>propriedade associado <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       Se o método que é identificado para executar a operação de dados é `static` (`Shared` no Visual Basic), o ObjectCreating e <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>os eventos nunca são gerados.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler ObjectCreating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  id: ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto descarta uma instância de um objeto que ele foi criado."
  remarks: "O evento ObjectDisposing é gerado antes que a instância do objeto comercial é descartada. Se o objeto de negócios implementa o <xref:System.IDisposable>interface, o <xref:System.IDisposable.Dispose%2A>método é chamado após ObjectDisposing o evento é gerado.</xref:System.IDisposable.Dispose%2A> </xref:System.IDisposable>       Manipule o evento ObjectDisposing para chamar outros métodos no objeto e definir propriedades ou executar limpeza que é específica para o objeto antes do objeto é destruído. Uma referência ao objeto é acessada pelo <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>propriedade, que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceEventArgs.ObjectInstance%2A>       Se o método que é identificado para executar a operação de dados é `static` (`Shared` no Visual Basic), o evento ObjectDisposing nunca é gerado."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler ObjectDisposing;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  id: OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma cadeia de caracteres de formato para aplicar aos nomes dos parâmetros para os valores originais que são passados para o <xref uid=&quot;langword_csharp_Delete&quot; name=&quot;Delete&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_Update&quot; name=&quot;Update&quot; href=&quot;&quot;> </xref> métodos."
  remarks: "A cadeia de caracteres de formato OldValuesParameterFormatString é aplicada às chaves primárias apenas, como aqueles que são identificados com a `DataKeyNames` propriedade de um controle associado a dados ou em Excluir e atualizar os cenários, onde o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>está definida como o <xref:System.Web.UI.ConflictOptions>valor e o conjunto de valores originais que são passados para o método de dados correspondente.</xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>       Dois cenários comuns em que você pode alterar a propriedade OldValuesParameterFormatString são os seguintes: - para diferenciar entre os valores novos e antigos em atualizações. Quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A>estiver definida como o <xref:System.Web.UI.ConflictOptions>valor parâmetros para os valores originais e novos são adicionados para o <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateParameters%2A> </xref:System.Web.UI.ConflictOptions> </xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection%2A> Sem a cadeia de caracteres de formatação, dois parâmetros com o mesmo nome seriam criados para cada campo de dados. Alterando o nome do parâmetro de valor original, você pode comparar os dados para a fonte de dados original para detectar conflitos e comparar valores de chave.      -Alguns designers visuais implementam um esquema de nomenclatura específico para as chaves e valores originais.       O valor da OldValuesParameterFormatString é armazenado em estado de exibição."
  syntax:
    content: public string OldValuesParameterFormatString { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa uma cadeia de caracteres de formato aplicada aos nomes de qualquer <code> oldValues </code> passado para o <> </> *> ou <> </> *> método. O padrão é &quot;{0}&quot;, que significa que o nome do parâmetro é simplesmente o nome do campo."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleted&quot;> </xref> evento após o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto concluiu uma operação de exclusão."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnDeleted também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/bc34632f-3713-4841-acd5-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/bc34632f-3713-4841-acd5-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Deleting&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto tenta uma operação de exclusão."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnDeleting também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.ObjectDataSource> control with a business object and a <xref:System.Web.UI.WebControls.GridView> control to delete data. The <xref:System.Web.UI.WebControls.GridView> initially displays a set of all employees, using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property to retrieve the data from the `EmployeeLogic` object. Because the <xref:System.Web.UI.WebControls.GridView.AutoGenerateDeleteButton%2A> property is set to `true`, the <xref:System.Web.UI.WebControls.GridView> control automatically displays a **Delete** button.  \n  \n If you click the **Delete** button, the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed using the method that is specified by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod%2A> property and any parameters that are specified in the <xref:System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters%2A> collection. In this code example, some preprocessing and post-processing steps are also performed. The `NorthwindEmployeeDeleting` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleting> event before the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation is performed, and the `NorthwindEmployeeDeleted` delegate is called to handle the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Deleted> event after the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Delete%2A> operation has completed, to perform an exception handling. In this example, if a `NorthwindDataException` is thrown, it is handled by this delegate.  \n  \n To examine the implementation of the `EmployeeLogic` middle-tier business object that this code example uses, see <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/csharp/6b2992c6-c81b-455e-8607-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_10#1](~/add/codesnippet/visualbasic/6b2992c6-c81b-455e-8607-_1.aspx)]"
  syntax:
    content: protected virtual void OnDeleting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  id: OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Filtering&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto tenta uma operação de filtragem."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnFiltering também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnFiltering (System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserted&quot;> </xref> evento após o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto concluiu uma operação de inserção."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnInserted também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnInserted (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Inserting&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto tenta uma operação de inserção."
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>método é chamado somente se o método que é identificado para executar a operação de dados não for `static` (`Shared` no Visual Basic).</xref:System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating%2A>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnInserting também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnInserting (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated&quot;> </xref> evento após o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> cria uma instância do objeto que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName*>"
  remarks: "O método OnObjectCreated é chamado, somente se o método que é identificado para executar a operação de dados não for `static` (`Shared` no Visual Basic).       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating>       O método OnObjectCreated também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnObjectCreated (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  id: OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto cria uma instância de um objeto comercial para executar uma operação de dados."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnObjectCreating também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnObjectCreating (System.Web.UI.WebControls.ObjectDataSourceEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  id: OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto descarta um tipo instanciado."
  remarks: "O OnObjectDisposing é chamado quando a instância de um objeto que foi criado para executar uma operação de dados é descartada. O `Dispose` método é chamado somente se o tipo que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>propriedade implementa o <xref:System.IDisposable>interface.</xref:System.IDisposable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.TypeName%2A>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnObjectDisposing também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnObjectDisposing (System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selected&quot;> </xref> evento após o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto concluiu uma operação de recuperação de dados."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnSelected também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSelected (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  id: OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Selecting&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto tenta uma operação de recuperação de dados."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnSelecting também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSelecting (System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  id: OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updated&quot;> </xref> evento após o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto concluiu uma operação de atualização."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método AoAtualizar também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnUpdated (System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  id: OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView.Updating&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto tenta uma operação de atualização."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnUpdating também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/5e0e1dac-16d8-4af3-b004-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/5e0e1dac-16d8-4af3-b004-_1.aspx)]"
  syntax:
    content: protected virtual void OnUpdating (System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  id: ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um ou define um valor que indica quais informações de cultura são usadas ao converter valores de cadeia de caracteres em tipos de propriedade real para construir um objeto do tipo indicado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>.</xref:System.Web.UI.WebControls.ObjectDataSource.DataObjectTypeName*>"
  syntax:
    content: public System.Web.UI.WebControls.ParsingCulture ParsingCulture { get; set; }
    return:
      type: System.Web.UI.WebControls.ParsingCulture
      description: "As informações de cultura. O valor padrão é <xref href=&quot;System.Web.UI.WebControls.ParsingCulture&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva as alterações para o estado de exibição para o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto desde a hora em que a página foi lançada para o servidor."
  remarks: "O método SaveViewState é usado principalmente por desenvolvedores de controle.       Estado de exibição é o acúmulo dos valores de propriedades de um controle de servidor. Esses valores são colocados automaticamente na <xref:System.Web.UI.Control.ViewState%2A>propriedade para o controle de servidor, que é uma ocorrência da <xref:System.Web.UI.StateBag>classe.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> O <xref:System.Web.UI.Control.ViewState%2A>valor é mantido em um objeto de cadeia de caracteres depois da fase de salvar estado do ciclo de vida de controle de servidor.</xref:System.Web.UI.Control.ViewState%2A>       Quando o estado de exibição for salvo, o conteúdo do estado de exibição é retornado ao cliente como uma variável que é armazenada em um HTML `Hidden` elemento. Quando você criar controles de servidor personalizado, você pode melhorar a eficiência, substituindo o método SaveViewState e modificando o `ViewState` propriedade para o controle de servidor. Para obter mais informações, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "O objeto que contém as alterações para o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> exibir estado; caso contrário <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se não houver nenhum estado de exibição associado ao objeto."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  id: Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera dados do objeto que é identificado pelo <> </> *> propriedade chamando o método que é identificada pelo <> </> *> propriedade e passando os valores no <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*>"
  remarks: "As chamadas do método Select a <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>passando o `arguments` parâmetro.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect%2A>"
  syntax:
    content: public System.Collections.IEnumerable Select (System.Web.UI.DataSourceSelectArguments arguments);
    parameters:
    - id: arguments
      type: System.Web.UI.DataSourceSelectArguments
      description: "Um <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> usado para operações de solicitação nos dados além da recuperação de dados básico."
    return:
      type: System.Collections.IEnumerable
      description: "Um <xref:System.Collections.IEnumerable>lista de linhas de dados.</xref:System.Collections.IEnumerable> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <code> arguments </code> passado para selecionar o método de especificar que a fonte de dados deve realizar algum trabalho adicional ao recuperar dados para habilitar a paginação ou classificar os dados recuperados, mas o controle de fonte de dados não suporta o recurso solicitado."
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  id: SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> controle invoca para recuperar uma contagem de linhas."
  remarks: "O SelectCountMethod identifica um método do objeto comercial que é usado para recuperar uma contagem total de linhas para dar suporte à paginação de fonte de dados. A propriedade SelectCountMethod é avaliada apenas se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>está definida como `true`.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> Para obter informações sobre como a paginação tem suporte pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView>consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       O valor a SelectCountMethod propriedade é armazenado na exibição estado."
  syntax:
    content: public string SelectCountMethod { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> usa para recuperar uma contagem de linhas. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  id: Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando uma operação de recuperação de dados foi concluída."
  remarks: "Manipule o evento selecionado para examinar os valores de um valor de retorno e parâmetros de saída ou para determinar se uma exceção foi acionada após uma operação de recuperação de dados. O valor de retorno, parâmetros de saída e propriedades de tratamento de exceção estão disponíveis no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Selected;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de uma operação de recuperação de dados."
  remarks: "Manipular o evento Selecting para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.ObjectDataSource>controle executa a operação de recuperação de dados.</xref:System.Web.UI.WebControls.ObjectDataSource> Os parâmetros estão disponíveis como um <xref:System.Collections.IDictionary>coleção que é acessada pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>propriedade, que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler Selecting;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  id: SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> controle invoca para recuperar dados."
  remarks: "O método especificado pode ter qualquer assinatura de método, mas deve retornar um dos tipos listados na tabela a seguir para o controle <xref:System.Web.UI.WebControls.ObjectDataSource>chamá-lo com êxito | Tipo de retorno | Ação |   |-----------------|------------|   | <xref:System.Collections.IEnumerable>| O <xref:System.Collections.IEnumerable>é retornado pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataTable>| Um <xref:System.Data.DataView>é criado usando o <xref:System.Data.DataTable>e retornado pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Data.DataSet>| O primeiro <xref:System.Data.DataTable>o <xref:System.Data.DataSet>é extraído e um <xref:System.Data.DataView>é criado e retornado pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |   | <xref:System.Object>| O objeto é encapsulado em um elemento de um <xref:System.Collections.IEnumerable>e retornado pelo método <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>. |       O método que é identificado pela propriedade SelectMethod pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Object> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataView> </xref:System.Data.DataSet> </xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Data.DataTable> </xref:System.Data.DataView> </xref:System.Data.DataTable> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Collections.IEnumerable> </xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.ObjectDataSource> Se é um método de instância, o objeto comercial é criado e destruído cada vez que o método SelectMethod é chamado. Você pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>evento para trabalhar com o objeto de negócios antes do método especificado pela propriedade SelectMethod é chamado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> Você também pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>evento é gerado depois que o método especificado pela propriedade SelectMethod é chamado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` é chamado apenas se o objeto comercial implementa o <xref:System.IDisposable>interface.)</xref:System.IDisposable> Se o método for uma `static` (`Shared` no Visual Basic) método, o objeto comercial nunca é criado e não pode tratar esses eventos.       Se o objeto de negócios o <xref:System.Web.UI.WebControls.ObjectDataSource>controle funciona com implementa mais de um método ou função com o mesmo nome (sobrecargas do método), o controle de fonte de dados tenta invocar correto um acordo com um conjunto de condições, incluindo os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Se os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>coleção não coincidem com aqueles da assinatura do método especificado pela propriedade SelectMethod, a fonte de dados gera uma exceção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters%2A>       Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its <xref:System.Web.UI.WebControls.ObjectDataSource.TypeName%2A> property and a method that is called to retrieve data with its SelectMethod property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the SelectMethod, and then displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_584_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_584_1.aspx)]"
  syntax:
    content: public string SelectMethod { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> usa para recuperar dados. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são usados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*>"
  remarks: "Os nomes e tipos dos parâmetros que estão contidos na coleção SelectParameters devem coincidir com os nomes e tipos dos parâmetros que estão no método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>assinatura da propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> Ao trabalhar com controles de associação de dados que fornecem os parâmetros, como <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, o <xref:System.Web.UI.WebControls.ObjectDataSource>controle mescla automaticamente os parâmetros que são explicitamente especificados na coleção com os parâmetros que são fornecidos pelo controle de associação de dados.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to retrieve a single data record using an <xref:System.Web.UI.WebControls.ObjectDataSource> control, and then display the data record in a <xref:System.Web.UI.WebControls.DetailsView> control. The <xref:System.Web.UI.WebControls.ObjectDataSource> retrieves a specific employee record by calling the `GetEmployee` method of the `EmployeeLogic` class. The `GetEmployee` method requires an employee ID parameter. The <xref:System.Web.UI.WebControls.ObjectDataSource> control uses a <xref:System.Web.UI.WebControls.QueryStringParameter> object in its SelectParameters collection to pass an ID to the `GetEmployee` method.  \n  \n To view the example implementation of the `EmployeeLogic` class and the `GetEmployee` method, see <xref:System.Web.UI.WebControls.ObjectDataSource>.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_297_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_297_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros usados pelo método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  id: SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do parâmetro de método de recuperação de dados que é usado para especificar uma expressão de classificação para classificar o suporte de fonte de dados."
  remarks: "A propriedade SortParameterName é usada para oferecer suporte a classificação de fonte de dados. Quando um <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>propriedade é definida no <xref:System.Web.UI.DataSourceSelectArguments>do objeto e passados para o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A>método, a propriedade SortParameterName identifica o nome do parâmetro do método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A>propriedade do objeto comercial que aceita o valor da expressão de classificação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView.Select%2A> </xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>       O valor a SortParameterName propriedade é armazenado na exibição estado."
  syntax:
    content: public string SortParameterName { get; set; }
    return:
      type: System.String
      description: "O nome do parâmetro de método usado para indicar o parâmetro que aceita esse valor de expressão de classificação. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  id: StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do parâmetro de método de recuperação de dados que é usado para indicar o índice inteiro do primeiro registro para recuperar os resultados definido para suporte à paginação de fonte de dados."
  remarks: "A propriedade StartRowIndexParameterName deve ser definida para habilitar a paginação. Para obter informações sobre como a paginação tem suporte pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView>objeto, consulte <xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A>.</xref:System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging%2A> </xref:System.Web.UI.WebControls.ObjectDataSourceView>       O valor a StartRowIndexParameterName propriedade é armazenado na exibição estado."
  syntax:
    content: public string StartRowIndexParameterName { get; set; }
    return:
      type: System.String
      description: "O nome do parâmetro de método de objeto business usado para indicar o primeiro registro para recuperar. O padrão é &quot;startRowIndex&quot;."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView>instância é convertida para o <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se o modo de exibição de fonte de dados está marcado para salvar seu estado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IStateManager.LoadViewState%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView>instância é convertida em um <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um objeto que representa o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> estado para restaurar."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IStateManager.SaveViewState%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView>instância é convertida em um <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "O objeto que contém as alterações para o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> exibir estado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IStateManager.TrackViewState%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.ObjectDataSourceView>instância é convertida em um <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.ObjectDataSourceView>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Faz com que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto para controlar alterações em seu estado de exibição para que as alterações podem ser armazenadas no <xref:System.Web.UI.Control.ViewState*>objeto para o controle e persistente entre solicitações para a mesma página.</xref:System.Web.UI.Control.ViewState*>"
  remarks: "O método TrackViewState é usado principalmente por desenvolvedores de controle."
  syntax:
    content: protected virtual void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  id: TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome da classe que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> controlar representa."
  remarks: "Para criar uma instância do objeto que o <xref:System.Web.UI.WebControls.ObjectDataSource>controle associa a, o controle usa reflexão para carregar o tipo que é identificado pelo nome do tipo em tempo de execução.</xref:System.Web.UI.WebControls.ObjectDataSource> Portanto, o valor da propriedade TypeName pode ser um tipo parcialmente qualificado para o código que está localizado no diretório Bin ou App_Code ou um nome de tipo totalmente qualificado para o código que é registrado no cache de assembly global. Se você usar o cache de assembly global, você deve adicionar a referência apropriada para o `assemblies` seção do arquivo de configuração Machine. config ou Web. config."
  example:
  - "The following code example demonstrates how a <xref:System.Web.UI.WebControls.GridView> control can display data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control on a Web Forms page. The <xref:System.Web.UI.WebControls.ObjectDataSource> identifies a partially or fully qualified class name with its TypeName property and a method that is called to retrieve data with its <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> property. At run time, the object is created and the method is called using reflection. The <xref:System.Web.UI.WebControls.GridView> control enumerates through the <xref:System.Collections.IEnumerable> collection that is returned by the <xref:System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod%2A> and displays the data.  \n  \n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_218_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_218_1.aspx)]"
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "Um nome de classe parcial ou totalmente qualificado que identifica o tipo do objeto que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSource&quot;> </xref> representa. O padrão é uma cadeia de caracteres vazia."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  id: Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Executa uma operação de atualização chamando o método que é identificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade e o uso de parâmetros que são fornecidos no <code> keys </code>, <code> values </code>, ou <code> oldValues </code> coleções.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "O valor de retorno padrão é -1, o que significa que um número desconhecido de linhas foram atualizado. Para retornar um valor diferente, defina o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A>propriedade o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto do <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>evento.</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.AffectedRows%2A> O número de linhas afetadas normalmente é retornado pelo `Update` método para o objeto de negócios e esse valor é proveniente o <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>propriedade do <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>parâmetro do <xref:System.Web.UI.WebControls.ObjectDataSource.Updated>evento.</xref:System.Web.UI.WebControls.ObjectDataSource.Updated> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs.ReturnValue%2A>       As chamadas de método de atualização de <xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>método, passando o `keys`, `values`, e `oldValues` parâmetros.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate%2A>"
  syntax:
    content: public int Update (System.Collections.IDictionary keys, System.Collections.IDictionary values, System.Collections.IDictionary oldValues);
    parameters:
    - id: keys
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>dos valores de chave usados para identificar o item a ser atualizado.</xref:System.Collections.IDictionary> Esses parâmetros são usados com o método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade para executar a operação de atualização.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> Se não houver nenhum parâmetro associado ao método, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: values
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de novos valores para aplicar a fonte de dados.</xref:System.Collections.IDictionary> Esses parâmetros são usados com o método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade para executar a operação de atualização do banco de dados.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*> Se não houver nenhum parâmetro associado ao método, passar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: oldValues
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>que contém os valores não-chave adicionais usados para corresponder o item da fonte de dados.</xref:System.Collections.IDictionary> Valores de linha são passados para o método de exclusão, somente se o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>estiver definida como o <xref href=&quot;System.Web.UI.ConflictOptions&quot;> </xref> campo.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*>"
    return:
      type: System.Int32
      description: "O número de linhas atualizadas; Caso contrário, -1, se o número não for conhecido."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  id: Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>operação foi concluída.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "Manipular o evento Updated para examinar os valores de um valor de retorno e parâmetros de saída ou para determinar se uma exceção foi acionada após um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>operação foi concluída.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> O valor de retorno, parâmetros de saída e propriedades de tratamento de exceção estão disponíveis no <xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>objeto que está associado com o evento.</xref:System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler Updated;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> objeto invoca para atualizar dados."
  remarks: "O <xref:System.Web.UI.WebControls.ObjectDataSourceView>objeto pressupõe que o método que é identificado pela propriedade UpdateMethod executa atualizações uma de cada vez, em vez de em um lote.</xref:System.Web.UI.WebControls.ObjectDataSourceView>       O método pode ser um método de instância ou um `static` (`Shared` no Visual Basic) método. Se é um método de instância, o objeto comercial é criado e destruído cada vez que o método especificado pela propriedade UpdateMethod é chamado. Você pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated>evento para trabalhar com o objeto de negócios antes de é chamado o método especificado pela propriedade UpdateMethod.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated> Você também pode manipular o <xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing>evento é gerado depois que o método UpdateMethod é chamado.</xref:System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing> (`Dispose` é chamado, apenas se o objeto comercial implementa o <xref:System.IDisposable>interface.)</xref:System.IDisposable> Se o método for uma `static` (`Shared` no Visual Basic) método, o objeto comercial nunca é criado e não pode tratar esses eventos.       Se o objeto de negócios a <xref:System.Web.UI.WebControls.ObjectDataSource>objeto funciona com implementa mais de um método ou função com o mesmo nome (sobrecargas do método), o controle de fonte de dados tenta invocar correto um acordo com um conjunto de condições, incluindo os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>coleção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Se os parâmetros de <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>coleção não coincidem com aqueles da assinatura do método especificado pela propriedade UpdateMethod, a fonte de dados gera uma exceção.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A>       Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>       O valor UpdateMethod propriedade é armazenado na exibição estado."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_413_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_413_1.aspx)]"
  syntax:
    content: public string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o nome do método ou função que o <xref href=&quot;System.Web.UI.WebControls.ObjectDataSourceView&quot;> </xref> usa para atualizar dados. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que contém os parâmetros que são usados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>método.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  remarks: "Os nomes e tipos dos parâmetros que estão contidos na coleção UpdateParameters devem corresponder a nomes e tipos dos parâmetros que estão no método especificado pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A>assinatura da propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod%2A> Os nomes de parâmetro são afetados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A>propriedade e são diferencia maiusculas de minúsculas.</xref:System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString%2A> Ao trabalhar com controles de associação de dados que fornecem os parâmetros, como <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>, o <xref:System.Web.UI.WebControls.ObjectDataSource>controle mescla automaticamente os parâmetros que são explicitamente especificados na coleção com os parâmetros que são fornecidos pelo controle de associação de dados.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Para obter mais informações, consulte <xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>.</xref:System.Web.UI.WebControls.ObjectDataSource.UpdateMethod?displayProperty=fullName>"
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the UpdateParameters collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_182_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_12#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_182_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros usados pelo <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>propriedade.</xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*>"
  overload: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  id: Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  langs:
  - csharp
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de um <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update*>"
  remarks: "Manipular o evento de atualização para executar operações de inicialização adicionais que são específicas para seu aplicativo, para validar os valores de parâmetros, ou para alterar o parâmetro de valores antes do <xref:System.Web.UI.WebControls.ObjectDataSource>controle executa o <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A>operação.</xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> </xref:System.Web.UI.WebControls.ObjectDataSource> Os parâmetros estão disponíveis como um <xref:System.Collections.IDictionary>coleção, acessada pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A>propriedade, que é exposta pelo <xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs>objeto.</xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs> </xref:System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs.InputParameters%2A> </xref:System.Collections.IDictionary>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use a <xref:System.Web.UI.WebControls.DropDownList> control, <xref:System.Web.UI.WebControls.TextBox> controls, and several <xref:System.Web.UI.WebControls.ObjectDataSource> controls to update data. The <xref:System.Web.UI.WebControls.DropDownList> displays the name of a `NorthwindEmployee`, while the <xref:System.Web.UI.WebControls.TextBox> controls are used to enter and update address information. Because the <xref:System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters%2A> collection contains a <xref:System.Web.UI.WebControls.ControlParameter> object that is bound to the selected value of the <xref:System.Web.UI.WebControls.DropDownList>, the button that triggers the <xref:System.Web.UI.WebControls.ObjectDataSourceView.Update%2A> operation is enabled only after an employee is selected.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_93_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_13#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_93_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler Updating;
    return:
      type: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceView
  isExternal: false
  name: System.Web.UI.DataSourceView
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor(System.Web.UI.WebControls.ObjectDataSource,System.String,System.Web.HttpContext)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  nameWithType: ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDataSourceView(ObjectDataSource,String,HttpContext)
- uid: System.Web.UI.WebControls.ObjectDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSource
  nameWithType: ObjectDataSource
  fullName: System.Web.UI.WebControls.ObjectDataSource
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.ConflictOptions
  parent: System.Web.UI
  isExternal: false
  name: ConflictOptions
  nameWithType: ConflictOptions
  fullName: System.Web.UI.ConflictOptions
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Delete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Delete(IDictionary,IDictionary)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleted
  nameWithType: ObjectDataSourceView.Deleted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleted
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventHandler
  nameWithType: ObjectDataSourceStatusEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Deleting
  nameWithType: ObjectDataSourceView.Deleting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Deleting
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventHandler
  nameWithType: ObjectDataSourceMethodEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete(IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete(IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert(IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteInsert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect(DataSourceSelectArguments)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Filtering
  nameWithType: ObjectDataSourceView.Filtering
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Filtering
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventHandler
  nameWithType: ObjectDataSourceFilteringEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert(System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert(IDictionary)
  nameWithType: ObjectDataSourceView.Insert(IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Insert(IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserted
  nameWithType: ObjectDataSourceView.Inserted
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Inserting
  nameWithType: ObjectDataSourceView.Inserting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Inserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: ObjectDataSourceView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreated
  nameWithType: ObjectDataSourceView.ObjectCreated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceObjectEventHandler
  nameWithType: ObjectDataSourceObjectEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceObjectEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectCreating
  nameWithType: ObjectDataSourceView.ObjectCreating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDisposing
  nameWithType: ObjectDataSourceView.ObjectDisposing
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventHandler
  nameWithType: ObjectDataSourceDisposingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceStatusEventArgs
  nameWithType: ObjectDataSourceStatusEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceMethodEventArgs
  nameWithType: ObjectDataSourceMethodEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering(ObjectDataSourceFilteringEventArgs)
  nameWithType: ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering(ObjectDataSourceFilteringEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceFilteringEventArgs
  nameWithType: ObjectDataSourceFilteringEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceFilteringEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceEventArgs
  nameWithType: ObjectDataSourceEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(System.Web.UI.WebControls.ObjectDataSourceEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating(ObjectDataSourceEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating(ObjectDataSourceEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  nameWithType: ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing(ObjectDataSourceDisposingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceDisposingEventArgs
  nameWithType: ObjectDataSourceDisposingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceDisposingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting(ObjectDataSourceSelectingEventArgs)
  nameWithType: ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting(ObjectDataSourceSelectingEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventArgs
  nameWithType: ObjectDataSourceSelectingEventArgs
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventArgs
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(System.Web.UI.WebControls.ObjectDataSourceStatusEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated(ObjectDataSourceStatusEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated(ObjectDataSourceStatusEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(System.Web.UI.WebControls.ObjectDataSourceMethodEventArgs)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating(ObjectDataSourceMethodEventArgs)
  nameWithType: ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating(ObjectDataSourceMethodEventArgs)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ParsingCulture
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParsingCulture
  nameWithType: ParsingCulture
  fullName: System.Web.UI.WebControls.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState()
  nameWithType: ObjectDataSourceView.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select(System.Web.UI.DataSourceSelectArguments)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select(DataSourceSelectArguments)
  nameWithType: ObjectDataSourceView.Select(DataSourceSelectArguments)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Select(DataSourceSelectArguments)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selected
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selected
  nameWithType: ObjectDataSourceView.Selected
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Selecting
  nameWithType: ObjectDataSourceView.Selecting
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Selecting
- uid: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ObjectDataSourceSelectingEventHandler
  nameWithType: ObjectDataSourceSelectingEventHandler
  fullName: System.Web.UI.WebControls.ObjectDataSourceSelectingEventHandler
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState()
  nameWithType: ObjectDataSourceView.TrackViewState()
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState()
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update(System.Collections.IDictionary,System.Collections.IDictionary,System.Collections.IDictionary)
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update(IDictionary,IDictionary,IDictionary)
  nameWithType: ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Update(IDictionary,IDictionary,IDictionary)
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updated
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updated
  nameWithType: ObjectDataSourceView.Updated
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Updating
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Updating
  nameWithType: ObjectDataSourceView.Updating
  fullName: System.Web.UI.WebControls.ObjectDataSourceView.Updating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.#ctor*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ObjectDataSourceView
  nameWithType: ObjectDataSourceView.ObjectDataSourceView
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanDelete
  nameWithType: ObjectDataSourceView.CanDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanInsert
  nameWithType: ObjectDataSourceView.CanInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanPage*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanPage
  nameWithType: ObjectDataSourceView.CanPage
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanRetrieveTotalRowCount*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanRetrieveTotalRowCount
  nameWithType: ObjectDataSourceView.CanRetrieveTotalRowCount
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanSort*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanSort
  nameWithType: ObjectDataSourceView.CanSort
- uid: System.Web.UI.WebControls.ObjectDataSourceView.CanUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: CanUpdate
  nameWithType: ObjectDataSourceView.CanUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConflictDetection*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConflictDetection
  nameWithType: ObjectDataSourceView.ConflictDetection
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ConvertNullToDBNull*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ConvertNullToDBNull
  nameWithType: ObjectDataSourceView.ConvertNullToDBNull
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DataObjectTypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DataObjectTypeName
  nameWithType: ObjectDataSourceView.DataObjectTypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Delete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Delete
  nameWithType: ObjectDataSourceView.Delete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteMethod
  nameWithType: ObjectDataSourceView.DeleteMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.DeleteParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: DeleteParameters
  nameWithType: ObjectDataSourceView.DeleteParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.EnablePaging*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: EnablePaging
  nameWithType: ObjectDataSourceView.EnablePaging
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteDelete*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteDelete
  nameWithType: ObjectDataSourceView.ExecuteDelete
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteInsert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteInsert
  nameWithType: ObjectDataSourceView.ExecuteInsert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteSelect*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteSelect
  nameWithType: ObjectDataSourceView.ExecuteSelect
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ExecuteUpdate*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ExecuteUpdate
  nameWithType: ObjectDataSourceView.ExecuteUpdate
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterExpression*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterExpression
  nameWithType: ObjectDataSourceView.FilterExpression
- uid: System.Web.UI.WebControls.ObjectDataSourceView.FilterParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: FilterParameters
  nameWithType: ObjectDataSourceView.FilterParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Insert*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Insert
  nameWithType: ObjectDataSourceView.Insert
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertMethod
  nameWithType: ObjectDataSourceView.InsertMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.InsertParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: InsertParameters
  nameWithType: ObjectDataSourceView.InsertParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: IsTrackingViewState
  nameWithType: ObjectDataSourceView.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: LoadViewState
  nameWithType: ObjectDataSourceView.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.MaximumRowsParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: MaximumRowsParameterName
  nameWithType: ObjectDataSourceView.MaximumRowsParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OldValuesParameterFormatString*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OldValuesParameterFormatString
  nameWithType: ObjectDataSourceView.OldValuesParameterFormatString
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleted
  nameWithType: ObjectDataSourceView.OnDeleted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnDeleting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnDeleting
  nameWithType: ObjectDataSourceView.OnDeleting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnFiltering*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnFiltering
  nameWithType: ObjectDataSourceView.OnFiltering
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserted*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserted
  nameWithType: ObjectDataSourceView.OnInserted
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnInserting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnInserting
  nameWithType: ObjectDataSourceView.OnInserting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreated
  nameWithType: ObjectDataSourceView.OnObjectCreated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectCreating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectCreating
  nameWithType: ObjectDataSourceView.OnObjectCreating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnObjectDisposing*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnObjectDisposing
  nameWithType: ObjectDataSourceView.OnObjectDisposing
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelected*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelected
  nameWithType: ObjectDataSourceView.OnSelected
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnSelecting*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnSelecting
  nameWithType: ObjectDataSourceView.OnSelecting
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdated*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdated
  nameWithType: ObjectDataSourceView.OnUpdated
- uid: System.Web.UI.WebControls.ObjectDataSourceView.OnUpdating*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: OnUpdating
  nameWithType: ObjectDataSourceView.OnUpdating
- uid: System.Web.UI.WebControls.ObjectDataSourceView.ParsingCulture*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: ParsingCulture
  nameWithType: ObjectDataSourceView.ParsingCulture
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SaveViewState
  nameWithType: ObjectDataSourceView.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Select*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Select
  nameWithType: ObjectDataSourceView.Select
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectCountMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectCountMethod
  nameWithType: ObjectDataSourceView.SelectCountMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectMethod
  nameWithType: ObjectDataSourceView.SelectMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SelectParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SelectParameters
  nameWithType: ObjectDataSourceView.SelectParameters
- uid: System.Web.UI.WebControls.ObjectDataSourceView.SortParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: SortParameterName
  nameWithType: ObjectDataSourceView.SortParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.StartRowIndexParameterName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: StartRowIndexParameterName
  nameWithType: ObjectDataSourceView.StartRowIndexParameterName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: ObjectDataSourceView.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TrackViewState*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TrackViewState
  nameWithType: ObjectDataSourceView.TrackViewState
- uid: System.Web.UI.WebControls.ObjectDataSourceView.TypeName*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: TypeName
  nameWithType: ObjectDataSourceView.TypeName
- uid: System.Web.UI.WebControls.ObjectDataSourceView.Update*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: Update
  nameWithType: ObjectDataSourceView.Update
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateMethod*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateMethod
  nameWithType: ObjectDataSourceView.UpdateMethod
- uid: System.Web.UI.WebControls.ObjectDataSourceView.UpdateParameters*
  parent: System.Web.UI.WebControls.ObjectDataSourceView
  isExternal: false
  name: UpdateParameters
  nameWithType: ObjectDataSourceView.UpdateParameters
