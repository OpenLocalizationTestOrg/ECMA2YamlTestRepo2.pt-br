### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TargetConverter
  id: TargetConverter
  children:
  - System.Web.UI.WebControls.TargetConverter.#ctor
  - System.Web.UI.WebControls.TargetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: TargetConverter
  nameWithType: TargetConverter
  fullName: System.Web.UI.WebControls.TargetConverter
  type: Class
  summary: "Converte um valor que representa o local (destino) para exibir o conteúdo resultante de uma navegação na Web para uma cadeia de caracteres. Essa classe também converte uma cadeia de caracteres em um valor de destino."
  remarks: "A classe TargetConverter cria uma coleção de valores que podem ser usados para especificar o local no qual exibir conteúdo resultante de uma navegação na Web, como a página para onde navegar quando um <xref:System.Web.UI.WebControls.HyperLink>controle é clicado.</xref:System.Web.UI.WebControls.HyperLink> Esta coleção normalmente é usada em um designer para exibir uma lista de valores que podem ser usados para o `Target` propriedade de navegação de uma controle, como o <xref:System.Web.UI.WebControls.HyperLink>controle.</xref:System.Web.UI.WebControls.HyperLink>"
  syntax:
    content: 'public class TargetConverter : System.ComponentModel.StringConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  - System.ComponentModel.StringConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.StringConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.StringConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.Web.UI.WebControls.TargetConverter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TargetConverter
  langs:
  - csharp
  name: TargetConverter()
  nameWithType: TargetConverter.TargetConverter()
  fullName: System.Web.UI.WebControls.TargetConverter.TargetConverter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TargetConverter&quot;> </xref> classe."
  syntax:
    content: public TargetConverter ();
    parameters: []
  overload: System.Web.UI.WebControls.TargetConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.TargetConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TargetConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.TargetConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retorna uma coleção de valores padrão do contexto padrão para este conversor de tipo foi projetado para o tipo de dados."
  remarks: "Esta é uma classe somente interno."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Um <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>que contém um conjunto padrão de valores válidos, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o tipo de dados não der suporte a um conjunto de valores padrão.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.Web.UI.WebControls.TargetConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.TargetConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TargetConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retorna um valor que indica se a coleção de valores padrão retornada do <xref:System.Web.UI.WebControls.TargetConverter.GetStandardValues*>método é uma lista exclusiva.</xref:System.Web.UI.WebControls.TargetConverter.GetStandardValues*>"
  remarks: "Esta é uma classe somente interno."
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>retornado por <xref:System.Web.UI.WebControls.TargetConverter.GetStandardValues*>é uma lista completa de valores possíveis; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se outros valores são possíveis.</xref:System.Web.UI.WebControls.TargetConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.TargetConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TargetConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retorna um valor que indica se esse objeto oferece suporte a um conjunto padrão de valores que podem ser escolhidos em uma lista, usando o contexto especificado."
  remarks: "Esta é uma classe somente interno."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.Web.UI.WebControls.TargetConverter.GetStandardValues*>deve ser chamado para localizar um conjunto comum de valores que o objeto suporta; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.TargetConverter.GetStandardValues*>"
  overload: System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.StringConverter
  isExternal: false
  name: System.ComponentModel.StringConverter
- uid: System.Web.UI.WebControls.TargetConverter.#ctor
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: TargetConverter()
  nameWithType: TargetConverter.TargetConverter()
  fullName: System.Web.UI.WebControls.TargetConverter.TargetConverter()
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TargetConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.TargetConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TargetConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TargetConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.Web.UI.WebControls.TargetConverter.#ctor*
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: TargetConverter
  nameWithType: TargetConverter.TargetConverter
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValues*
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: TargetConverter.GetStandardValues
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValuesExclusive*
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: TargetConverter.GetStandardValuesExclusive
- uid: System.Web.UI.WebControls.TargetConverter.GetStandardValuesSupported*
  parent: System.Web.UI.WebControls.TargetConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: TargetConverter.GetStandardValuesSupported
