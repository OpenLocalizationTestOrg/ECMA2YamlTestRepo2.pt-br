### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IMenuCommandService
  id: IMenuCommandService
  children:
  - System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)
  - System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)
  - System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)
  - System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)
  - System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)
  - System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  - System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  - System.ComponentModel.Design.IMenuCommandService.Verbs
  langs:
  - csharp
  name: IMenuCommandService
  nameWithType: IMenuCommandService
  fullName: System.ComponentModel.Design.IMenuCommandService
  type: Interface
  summary: "Fornece métodos para gerenciar os verbos do designer global e os comandos de menu disponíveis no modo de design e para mostrar alguns tipos de menus de atalho."
  remarks: "Essa interface fornece métodos para: - localizar, invocar, adicionar e remover comandos global verbo do designer.      -Localizar, invocar, adicionar e remover comandos de menu padrão.      -Altere os manipuladores de eventos associados com os comandos de menu padrão.      -Exibe um menu de atalho de comandos padrão que está associado um menu <xref:System.ComponentModel.Design.CommandID>.</xref:System.ComponentModel.Design.CommandID>       Verbos do Designer representam comandos personalizadas que são listados no menu de atalho no modo de design. Um verbo do designer pode fornecer um rótulo de texto especificado. Cada verbo do designer é automaticamente atribuído <xref:System.ComponentModel.Design.CommandID>.</xref:System.ComponentModel.Design.CommandID> exclusivo Um designer pode fornecer verbos do designer por meio de seu <xref:System.ComponentModel.Design.IDesigner.Verbs%2A>propriedade, mas eles estão disponíveis somente quando o componente do designer está selecionado no momento.</xref:System.ComponentModel.Design.IDesigner.Verbs%2A> Verbos do designer globais são comandos de verbo do designer que podem ser acessados de um menu de atalho do modo de design, independentemente do componente selecionado. Essa interface permite que você gerencie o conjunto de verbos do designer globais que estão disponíveis no modo de design.       Você pode adicionar um verbo do designer global usando o <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>método e você pode remover um verbo do designer global usando o <xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A>método.</xref:System.ComponentModel.Design.IMenuCommandService.RemoveVerb%2A> </xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> Você pode chamar um verbo do designer usando o <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>método se você souber o <xref:System.ComponentModel.Design.CommandID>do verbo.</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> O <xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A>propriedade desta interface contém o conjunto atual de comandos de verbo do designer para exibir um menu de atalho.</xref:System.ComponentModel.Design.IMenuCommandService.Verbs%2A> Este conjunto de comandos de verbo do designer consiste em todos os verbos do designer global e qualquer verbos do designer oferecidos pelo designer de qualquer componente selecionado no momento. Esse conjunto de verbos é atualizado sempre que um componente com um designer de oferta comandos verbo do designer é selecionado ou desmarcado.       Comandos de menu são limitados ao conjunto de comandos padrão predefinidos. A maioria dos comandos padrão predefinidas é definida no <xref:System.ComponentModel.Design.StandardCommands>e <xref:System.Windows.Forms.Design.MenuCommands>enumerações.</xref:System.Windows.Forms.Design.MenuCommands> </xref:System.ComponentModel.Design.StandardCommands> Você pode adicionar, remover e chamar comandos de menu e comandos de menu que foram adicionados a um menu usando métodos desta interface de pesquisa.       Você pode adicionar um comando de menu padrão usando o <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>método e remover um comando de menu padrão usando o <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>método.</xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> </xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> Você pode anexar um manipulador de eventos para um comando de menu padrão predefinidas, seguindo o procedimento detalhado na documentação para o <xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A>método.</xref:System.ComponentModel.Design.IMenuCommandService.AddCommand%2A> Você pode recuperar um comando de menu por <xref:System.ComponentModel.Design.CommandID>se ele tiver sido adicionado a um menu usando o <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>método.</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> </xref:System.ComponentModel.Design.CommandID> Você pode invocar um comando de menu ou verbo do designer por <xref:System.ComponentModel.Design.CommandID>usando o <xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A>método.</xref:System.ComponentModel.Design.IMenuCommandService.GlobalInvoke%2A> </xref:System.ComponentModel.Design.CommandID>      > [!NOTE] > Uma tentativa de adicionar um comando de menu com um já existente <xref:System.ComponentModel.Design.CommandID>gerará um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.ComponentModel.Design.CommandID> Ao adicionar um comando de menu, certifique-se de verificar se ele não ainda estiver em um menu usando o <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>método ou use exceção tratamento criteriosamente.</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>      > [!NOTE] > Um comando de menu podem ser adicionados a um menu e ter seu <xref:System.ComponentModel.Design.MenuCommand.Visible%2A>ou <xref:System.ComponentModel.Design.MenuCommand.Enabled%2A>propriedades definidas como `false`.</xref:System.ComponentModel.Design.MenuCommand.Enabled%2A> </xref:System.ComponentModel.Design.MenuCommand.Visible%2A> Se você não pode localizar visualmente um comando de menu que foi adicionado em um menu, uma dessas propriedades talvez tenha sido definida `false`.       Você pode mostrar determinados menus de atalho padrão que contém os comandos de menu em um local especificado usando o <xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A>método.</xref:System.ComponentModel.Design.IMenuCommandService.ShowContextMenu%2A> A documentação para este método contém uma tabela que lista as IDs de comando que especificam os menus válidos para mostrar."
  example:
  - "This example demonstrates using the IMenuCommandService to add a <xref:System.ComponentModel.Design.MenuCommand>.  \n  \n [!code-cpp[MenuCommand Example#1](~/add/codesnippet/cpp/t-system.componentmodel._76_1.cpp)]\n [!code-cs[MenuCommand Example#1](~/add/codesnippet/csharp/t-system.componentmodel._76_1.cs)]\n [!code-vb[MenuCommand Example#1](~/add/codesnippet/visualbasic/t-system.componentmodel._76_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IMenuCommandService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)
  id: AddCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: AddCommand(MenuCommand)
  nameWithType: IMenuCommandService.AddCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddCommand(MenuCommand)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adiciona o comando de menu padrão especificado para o menu."
  remarks: "O <xref:System.Windows.Forms.Design.MenuCommands>e <xref:System.ComponentModel.Design.StandardCommands>contêm enumerações <xref:System.ComponentModel.Design.CommandID>identificadores para predefinidos comandos padrão e comandos de menu que já estão associados com um local em um menu específico.</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.StandardCommands> </xref:System.Windows.Forms.Design.MenuCommands>      > [!NOTE] > Uma tentativa de adicionar um comando de menu com um já existente <xref:System.ComponentModel.Design.CommandID>gerará um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.ComponentModel.Design.CommandID> Ao adicionar um comando de menu, certifique-se de verificar se ele não ainda estiver em um menu usando o <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>método ou use exceção tratamento criteriosamente.</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>       Você pode anexar um manipulador de eventos para um comando de menu predefinidas com o procedimento a seguir: 1.  Se o comando de menu para vincular a um manipulador de eventos tiver sido adicionado a um menu ou encontra-se com o <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>método, considere se você deseja restaurar este comando de menu posteriormente, e se você deseja invocar o manipulador de eventos atual de seu novo manipulador de eventos.</xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A> Se seu código pode restaurar o comando de menu ou cadeia a invocação de manipuladores de eventos, certifique-se de armazenar uma referência para o comando de menu em algum lugar.      2.  Certifique-se de que qualquer comando de menu existente com o mesmo <xref:System.ComponentModel.Design.CommandID>foi removido do menu usando o <xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A>método.</xref:System.ComponentModel.Design.IMenuCommandService.RemoveCommand%2A> </xref:System.ComponentModel.Design.CommandID>      3.  Criar um novo <xref:System.ComponentModel.Design.MenuCommand>e especificar o manipulador de eventos no construtor, junto com um <xref:System.ComponentModel.Design.CommandID>que representa o comando a ser adicionado.</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.MenuCommand> Cada comando de menu padrão está associado um local de menu predefinidas onde ele é adicionado ao. As IDs de comando com suporte estão definidas na <xref:System.ComponentModel.Design.StandardCommands>e <xref:System.Windows.Forms.Design.MenuCommands>enumerações.</xref:System.Windows.Forms.Design.MenuCommands> </xref:System.ComponentModel.Design.StandardCommands>      4.  Se você deseja invocar qualquer preexistentes manipulador de eventos para o comando de menu, chame o <xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>método de substituição no menu do manipulador de eventos que manipula o evento invoke do comando de menu no comando de menu.</xref:System.ComponentModel.Design.MenuCommand.Invoke%2A>      5.  Se você estiver interessado no manipulador de eventos de um comando de menu preexistentes, substituição de restauração, adicione armazenado, preexistente comando de menu depois de remover o comando de menu de substituição que você criou. Você talvez queira adicionar esse comportamento para o `Dispose` método para seu tipo."
  syntax:
    content: public void AddCommand (System.ComponentModel.Design.MenuCommand command);
    parameters:
    - id: command
      type: System.ComponentModel.Design.MenuCommand
      description: "The <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;></xref> to add."
  overload: System.ComponentModel.Design.IMenuCommandService.AddCommand*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref> especificada <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref> já está presente em um menu."
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)
  id: AddVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: AddVerb(DesignerVerb)
  nameWithType: IMenuCommandService.AddVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddVerb(DesignerVerb)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Adiciona o verbo do designer especificado para o conjunto de verbos do designer global."
  remarks: "Os designers de componentes que fornecem os verbos do designer devem usar o <xref:System.ComponentModel.Design.IDesigner.Verbs%2A>propriedade de seu designer em vez de chamar esse método.</xref:System.ComponentModel.Design.IDesigner.Verbs%2A> Este método adiciona um verbo do designer global que pode ser acessado no menu de atalho com o botão direito no modo de design, independentemente do componente selecionado atualmente."
  syntax:
    content: public void AddVerb (System.ComponentModel.Design.DesignerVerb verb);
    parameters:
    - id: verb
      type: System.ComponentModel.Design.DesignerVerb
      description: "The <xref href=&quot;System.ComponentModel.Design.DesignerVerb&quot;></xref> to add."
  overload: System.ComponentModel.Design.IMenuCommandService.AddVerb*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)
  id: FindCommand(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: FindCommand(CommandID)
  nameWithType: IMenuCommandService.FindCommand(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.FindCommand(CommandID)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Procura a ID de comando especificado e retorna o comando de menu associado a ele."
  syntax:
    content: public System.ComponentModel.Design.MenuCommand FindCommand (System.ComponentModel.Design.CommandID commandID);
    parameters:
    - id: commandID
      type: System.ComponentModel.Design.CommandID
      description: "O <xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref> para pesquisar."
    return:
      type: System.ComponentModel.Design.MenuCommand
      description: "O <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref> associado à ID de comando, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum comando foi encontrado."
  overload: System.ComponentModel.Design.IMenuCommandService.FindCommand*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)
  id: GlobalInvoke(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: GlobalInvoke(CommandID)
  nameWithType: IMenuCommandService.GlobalInvoke(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(CommandID)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Invoca um comando de verbo de menu ou no designer de correspondência de ID de comando especificado."
  remarks: "Esse método de pesquisa para um comando de menu ou verbo do designer com <xref:System.ComponentModel.Design.CommandID>correspondência especificada <xref:System.ComponentModel.Design.CommandID>.</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.CommandID> Este método primeiro pesquisa dentro da coleção de verbos do designer consiste em global e ativos verbos fornecida pelo designer antes de continuar a pesquisa, se necessário, por meio do serviço de comando de ambiente global. Se um comando de menu correspondente ou o verbo do designer está localizado, o comando é invocado."
  syntax:
    content: public bool GlobalInvoke (System.ComponentModel.Design.CommandID commandID);
    parameters:
    - id: commandID
      type: System.ComponentModel.Design.CommandID
      description: "O <xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref> do comando para pesquisar e executar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o comando foi encontrado e é invocado com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)
  id: RemoveCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: RemoveCommand(MenuCommand)
  nameWithType: IMenuCommandService.RemoveCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(MenuCommand)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Remove o comando de menu padrão especificado no menu."
  remarks: "Este método Remove especificado <xref:System.ComponentModel.Design.MenuCommand>se ele for encontrado.</xref:System.ComponentModel.Design.MenuCommand> Esse método não gerar uma exceção ou retornar um valor se especificado <xref:System.ComponentModel.Design.MenuCommand>não foi encontrado.</xref:System.ComponentModel.Design.MenuCommand> Use o <xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>método para determinar se um <xref:System.ComponentModel.Design.MenuCommand>correspondência especificada <xref:System.ComponentModel.Design.CommandID>está localizado em um menu.</xref:System.ComponentModel.Design.CommandID> </xref:System.ComponentModel.Design.MenuCommand> </xref:System.ComponentModel.Design.IMenuCommandService.FindCommand%2A>"
  syntax:
    content: public void RemoveCommand (System.ComponentModel.Design.MenuCommand command);
    parameters:
    - id: command
      type: System.ComponentModel.Design.MenuCommand
      description: "O <xref href=&quot;System.ComponentModel.Design.MenuCommand&quot;> </xref> para remover."
  overload: System.ComponentModel.Design.IMenuCommandService.RemoveCommand*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  id: RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: RemoveVerb(DesignerVerb)
  nameWithType: IMenuCommandService.RemoveVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(DesignerVerb)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Remove o verbo do designer especificado da coleção de globais verbos do designer."
  remarks: "Este método Remove o verbo do designer global especificado se ele está dentro da coleção de globais verbos do designer. Você pode adicionar um verbo do designer para a coleção de verbos do designer global usando o <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>método.</xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>"
  syntax:
    content: public void RemoveVerb (System.ComponentModel.Design.DesignerVerb verb);
    parameters:
    - id: verb
      type: System.ComponentModel.Design.DesignerVerb
      description: "O <xref href=&quot;System.ComponentModel.Design.DesignerVerb&quot;> </xref> para remover."
  overload: System.ComponentModel.Design.IMenuCommandService.RemoveVerb*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  id: ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: ShowContextMenu(CommandID,Int32,Int32)
  nameWithType: IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
  fullName: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Mostra o menu de atalho especificado no local especificado."
  remarks: "O método Exibmenucontexto pode exibir qualquer os seguintes menus de atalho do Visual Studio que contém os comandos de menu em um momento específico: | Menu | ID de comando |   |----------|---------------|   | Menu de atalho exibido para um contêiner | <xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>|   | O menu de atalho exibido para bandeja do componente | <xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu>|   | Menu de atalho exibido para uma seleção | <xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu>|   | Menu de atalho exibido para uma seleção de bandeja | <xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu>|       Esse método também pode exibir outros menus de atalho registrado.</xref:System.Windows.Forms.Design.MenuCommands.TraySelectionMenu> </xref:System.Windows.Forms.Design.MenuCommands.SelectionMenu> </xref:System.Windows.Forms.Design.MenuCommands.ComponentTrayMenu> </xref:System.Windows.Forms.Design.MenuCommands.ContainerMenu>"
  syntax:
    content: public void ShowContextMenu (System.ComponentModel.Design.CommandID menuID, int x, int y);
    parameters:
    - id: menuID
      type: System.ComponentModel.Design.CommandID
      description: "O <xref href=&quot;System.ComponentModel.Design.CommandID&quot;> </xref> para mostrar o menu de atalho."
    - id: x
      type: System.Int32
      description: "A coordenada x no qual exibir o menu, em coordenadas da tela."
    - id: y
      type: System.Int32
      description: "A coordenada y no qual exibir o menu, em coordenadas da tela."
  overload: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IMenuCommandService.Verbs
  id: Verbs
  parent: System.ComponentModel.Design.IMenuCommandService
  langs:
  - csharp
  name: Verbs
  nameWithType: IMenuCommandService.Verbs
  fullName: System.ComponentModel.Design.IMenuCommandService.Verbs
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém uma coleção dos verbos do designer que estão disponíveis no momento."
  remarks: "O conjunto de verbos do designer disponíveis atualmente consiste em todos os global verbos do designer, que são adicionados pelo <xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A>método nessa interface e verbos do designer individuais, que são oferecidos pelo <xref:System.ComponentModel.Design.IDesigner.Verbs%2A>propriedade dos designers individuais.</xref:System.ComponentModel.Design.IDesigner.Verbs%2A> </xref:System.ComponentModel.Design.IMenuCommandService.AddVerb%2A> Se o nome de um verbo global está em conflito com o nome de um verbo do designer, o verbo do designer fornecida pelo designer terá precedência."
  syntax:
    content: public System.ComponentModel.Design.DesignerVerbCollection Verbs { get; }
    return:
      type: System.ComponentModel.Design.DesignerVerbCollection
      description: "Um <xref href=&quot;System.ComponentModel.Design.DesignerVerbCollection&quot;> </xref> que contém os verbos do designer que estão disponíveis no momento."
  overload: System.ComponentModel.Design.IMenuCommandService.Verbs*
  exceptions: []
  platform:
  - net462
references:
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddCommand(MenuCommand)
  nameWithType: IMenuCommandService.AddCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddCommand(MenuCommand)
- uid: System.ComponentModel.Design.MenuCommand
  parent: System.ComponentModel.Design
  isExternal: false
  name: MenuCommand
  nameWithType: MenuCommand
  fullName: System.ComponentModel.Design.MenuCommand
- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddVerb(DesignerVerb)
  nameWithType: IMenuCommandService.AddVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.AddVerb(DesignerVerb)
- uid: System.ComponentModel.Design.DesignerVerb
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerVerb
  nameWithType: DesignerVerb
  fullName: System.ComponentModel.Design.DesignerVerb
- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: FindCommand(CommandID)
  nameWithType: IMenuCommandService.FindCommand(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.FindCommand(CommandID)
- uid: System.ComponentModel.Design.CommandID
  parent: System.ComponentModel.Design
  isExternal: false
  name: CommandID
  nameWithType: CommandID
  fullName: System.ComponentModel.Design.CommandID
- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(System.ComponentModel.Design.CommandID)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: GlobalInvoke(CommandID)
  nameWithType: IMenuCommandService.GlobalInvoke(CommandID)
  fullName: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke(CommandID)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(System.ComponentModel.Design.MenuCommand)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveCommand(MenuCommand)
  nameWithType: IMenuCommandService.RemoveCommand(MenuCommand)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveCommand(MenuCommand)
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(System.ComponentModel.Design.DesignerVerb)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveVerb(DesignerVerb)
  nameWithType: IMenuCommandService.RemoveVerb(DesignerVerb)
  fullName: System.ComponentModel.Design.IMenuCommandService.RemoveVerb(DesignerVerb)
- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(System.ComponentModel.Design.CommandID,System.Int32,System.Int32)
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: ShowContextMenu(CommandID,Int32,Int32)
  nameWithType: IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
  fullName: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu(CommandID,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.IMenuCommandService.Verbs
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: Verbs
  nameWithType: IMenuCommandService.Verbs
  fullName: System.ComponentModel.Design.IMenuCommandService.Verbs
- uid: System.ComponentModel.Design.DesignerVerbCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerVerbCollection
  nameWithType: DesignerVerbCollection
  fullName: System.ComponentModel.Design.DesignerVerbCollection
- uid: System.ComponentModel.Design.IMenuCommandService.AddCommand*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddCommand
  nameWithType: IMenuCommandService.AddCommand
- uid: System.ComponentModel.Design.IMenuCommandService.AddVerb*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: AddVerb
  nameWithType: IMenuCommandService.AddVerb
- uid: System.ComponentModel.Design.IMenuCommandService.FindCommand*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: FindCommand
  nameWithType: IMenuCommandService.FindCommand
- uid: System.ComponentModel.Design.IMenuCommandService.GlobalInvoke*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: GlobalInvoke
  nameWithType: IMenuCommandService.GlobalInvoke
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveCommand*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveCommand
  nameWithType: IMenuCommandService.RemoveCommand
- uid: System.ComponentModel.Design.IMenuCommandService.RemoveVerb*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: RemoveVerb
  nameWithType: IMenuCommandService.RemoveVerb
- uid: System.ComponentModel.Design.IMenuCommandService.ShowContextMenu*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: ShowContextMenu
  nameWithType: IMenuCommandService.ShowContextMenu
- uid: System.ComponentModel.Design.IMenuCommandService.Verbs*
  parent: System.ComponentModel.Design.IMenuCommandService
  isExternal: false
  name: Verbs
  nameWithType: IMenuCommandService.Verbs
