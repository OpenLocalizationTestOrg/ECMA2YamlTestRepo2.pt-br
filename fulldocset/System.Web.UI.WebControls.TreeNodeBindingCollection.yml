### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection
  id: TreeNodeBindingCollection
  children:
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes
  - System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear
  - System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)
  - System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)
  langs:
  - csharp
  name: TreeNodeBindingCollection
  nameWithType: TreeNodeBindingCollection
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection
  type: Class
  summary: "Representa uma coleção de <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objetos no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controle. Essa classe não pode ser herdada."
  remarks: "A classe TreeNodeBindingCollection é usada para armazenar e gerenciar uma coleção de <xref:System.Web.UI.WebControls.TreeNodeBinding>objetos no <xref:System.Web.UI.WebControls.TreeView>controle.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNodeBinding> O <xref:System.Web.UI.WebControls.TreeView>controle usa a classe TreeNodeBindingCollection para sua <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>propriedade.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> </xref:System.Web.UI.WebControls.TreeView>       O <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>propriedade contém <xref:System.Web.UI.WebControls.TreeNodeBinding>objetos que definem a relação entre um item de dados e o nó que está associado.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> Quando a associação a uma fonte de dados onde cada item de dados contém várias propriedades (como um elemento XML com vários atributos), um nó exibe o valor retornado pelo `ToString` método do item de dados, por padrão. No caso de um elemento XML, o nó exibe o nome do elemento, que mostra a estrutura subjacente da árvore, mas não é muito útil, caso contrário. Você pode associar um nó a uma propriedade de item de dados específica, especificando ligações de nó de árvore. Embora o <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>coleção pode ser preenchida por meio de programação, é geralmente definida declarativamente.</xref:System.Web.UI.WebControls.TreeView.DataBindings%2A>       Para definir associações de nó de árvore de forma declarativa: 1.  Aninhar abrindo e fechando `<DataBindings>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.TreeView>controle.</xref:System.Web.UI.WebControls.TreeView>      2.  Local `<asp:TreeNodeBinding>` elementos entre a abertura e fechamento `<DataBindings>` marcas para cada associação do nó de árvore que você deseja especificar.       Você pode gerenciar programaticamente um TreeNodeBindingCollection adicionando e removendo <xref:System.Web.UI.WebControls.TreeNodeBinding>objetos.</xref:System.Web.UI.WebControls.TreeNodeBinding> Para adicionar um <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto à coleção, use o <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A>ou <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A>método.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding> Para remover nós da coleção, use o <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>, <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>, ou <xref:System.Web.UI.StateManagedCollection.Clear%2A?displayProperty=fullName>método.</xref:System.Web.UI.StateManagedCollection.Clear%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>       A classe TreeNodeBindingCollection dá suporte a várias maneiras de acessar os itens na coleção:-Use o <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A>indexador para recuperar um <xref:System.Web.UI.WebControls.TreeNode>objeto diretamente em um índice de base zero específico.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Item%2A>      -Usar o <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A?displayProperty=fullName>método para criar um enumerador que pode ser usado para iterar pela coleção.</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A?displayProperty=fullName>"
  example:
  - "This section contains two code examples. The first code example demonstrates how to populate a TreeNodeBindingCollection object declaratively. The second code example demonstrates how to populate a TreeNodeBindingCollection object programmatically.  \n  \n The following code example demonstrates how to populate a TreeNodeBindingCollection object declaratively. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeViewXml#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_291_1.aspx)]\n [!code-vb[TreeViewXml#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_291_1.aspx)]  \n  \n The following code example demonstrates how to populate a TreeNodeBindingCollection object programmatically. For this example to work correctly, you must copy the sample XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeViewCtor#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_291_2.aspx)]\n [!code-vb[TreeViewCtor#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_291_2.aspx)]  \n  \n The following is the XML data for the preceding code examples.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n       <Section Heading=\"Section 1\">  \n       </Section>  \n       <Section Heading=\"Section 2\">  \n       </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: 'public sealed class TreeNodeBindingCollection : System.Web.UI.StateManagedCollection'
  inheritance:
  - System.Object
  - System.Web.UI.StateManagedCollection
  implements: []
  inheritedMembers:
  - System.Web.UI.StateManagedCollection.Clear
  - System.Web.UI.StateManagedCollection.CopyTo(System.Array,System.Int32)
  - System.Web.UI.StateManagedCollection.Count
  - System.Web.UI.StateManagedCollection.GetEnumerator
  - System.Web.UI.StateManagedCollection.OnClearComplete
  - System.Web.UI.StateManagedCollection.OnInsert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnInsertComplete(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.OnRemove(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.SetDirty
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#Count
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#IsSynchronized
  - System.Web.UI.StateManagedCollection.System#Collections#ICollection#SyncRoot
  - System.Web.UI.StateManagedCollection.System#Collections#IEnumerable#GetEnumerator
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Add(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Clear
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Contains(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsFixedSize
  - System.Web.UI.StateManagedCollection.System#Collections#IList#IsReadOnly
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Item(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#Remove(System.Object)
  - System.Web.UI.StateManagedCollection.System#Collections#IList#RemoveAt(System.Int32)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.StateManagedCollection.System#Web#UI#IStateManager#TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)
  id: Add(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Add(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Add(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Acrescenta especificado <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objeto ao final do <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> objeto."
  remarks: "Use o método Add para acrescentar especificado <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto ao final do <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>objeto.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding>       Como alternativa, você pode inserir um <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto o <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>em um índice específico usando o <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A>método.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Insert%2A> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding>"
  example:
  - "The following code example demonstrates how to use the Add method to add a new <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically to a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/csharp/1c7f636a-948c-4466-bc6b-_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/visualbasic/1c7f636a-948c-4466-bc6b-_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public int Add (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> acrescentar."
    return:
      type: System.Int32
      description: "O índice de base zero do local de adicionado <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> no <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)
  id: Contains(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Contains(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Contains(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se o especificado <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objeto está na coleção."
  remarks: "Use o método Contains para determinar se um <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto está contido no <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>objeto.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding> Esse método é geralmente usado para testar a existência de uma <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto antes de executar uma tarefa, como adicionar ou remover um <xref:System.Web.UI.WebControls.TreeNodeBinding>da coleção.</xref:System.Web.UI.WebControls.TreeNodeBinding> </xref:System.Web.UI.WebControls.TreeNodeBinding>"
  syntax:
    content: public bool Contains (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> localizar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> está na coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  id: CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: CopyTo(TreeNodeBinding[],Int32)
  nameWithType: TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia todos os itens do <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> objeto em uma matriz unidimensional compatível de <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objetos, iniciando no índice especificado na matriz de destino."
  remarks: "Use o método CopyTo para copiar o conteúdo do <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>do objeto em `bindingArray`.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> Itens são copiados começando em `index`. Você pode usar a matriz para acessar os itens que estão na coleção.       Como alternativa, você pode usar o <xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>método para criar um enumerador que pode ser usado para acessar os itens na coleção.</xref:System.Web.UI.StateManagedCollection.GetEnumerator%2A>"
  example:
  - "The following code example demonstrates how to use the CopyTo method to copy the contents of the <xref:System.Web.UI.WebControls.TreeView.DataBindings%2A> collection to an array.  \n  \n [!code-cs[TreeNodeBindingCollectionCopyTo#1](~/add/codesnippet/csharp/57693c79-624a-4a4d-979f-_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionCopyTo#1](~/add/codesnippet/visualbasic/57693c79-624a-4a4d-979f-_1.aspx)]"
  syntax:
    content: public void CopyTo (System.Web.UI.WebControls.TreeNodeBinding[] bindingArray, int index);
    parameters:
    - id: bindingArray
      type: System.Web.UI.WebControls.TreeNodeBinding[]
      description: "Uma matriz com base em zero de <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objetos que recebe os itens copiados do <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>."
    - id: index
      type: System.Int32
      description: "A posição na `bindingArray` no qual começar a receber o conteúdo copiado."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)
  id: CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: CreateKnownType(Int32)
  nameWithType: TreeNodeBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override object CreateKnownType (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A ser adicionado."
    return:
      type: System.Object
      description: "A ser adicionado."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes
  id: GetKnownTypes
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: GetKnownTypes()
  nameWithType: TreeNodeBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override Type[] GetKnownTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "A ser adicionado."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  id: IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: IndexOf(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina o índice especificado <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objeto na coleção."
  remarks: "Use o método IndexOf para determinar o índice de base zero especificado <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto o <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>objeto.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding> Se o nó não está na coleção, o método retornará -1.      > [!NOTE] > Se especificado <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto aparece várias vezes na coleção, o índice da primeira ocorrência será retornado.</xref:System.Web.UI.WebControls.TreeNodeBinding>"
  syntax:
    content: public int IndexOf (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> para localizar."
    return:
      type: System.Int32
      description: "O índice baseado em zero da primeira ocorrência de <code> binding </code> dentro de <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>, se encontrado; caso contrário, -1."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  id: Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Insert(Int32,TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Insere especificado <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objeto para o <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> objeto no local do índice especificado."
  remarks: "Use o método de inserção para inserir especificado <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto para o <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>do objeto em `index`.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding>       Como alternativa, você pode acrescentar um <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto ao final do <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>usando o <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A>método.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Add%2A> </xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding>"
  example:
  - "The following code example demonstrates how to use the Insert method to insert a new <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically into a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-vb[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/visualbasic/b258c1b7-cd55-4993-aa16-_1.aspx)]\n [!code-cs[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/csharp/b258c1b7-cd55-4993-aa16-_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Insert (int index, System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: index
      type: System.Int32
      description: "O local do índice de base zero no qual inserir o <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref>."
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> para inserir."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: TreeNodeBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objeto no índice especificado no <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> objeto."
  remarks: "Use o indexador de Item para acessar um <xref:System.Web.UI.WebControls.TreeNodeBinding>de objeto o <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>objeto localizado em `i` usando a notação de matriz.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding> O indexador de Item permite que você modifique ou substitua um <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto na coleção diretamente.</xref:System.Web.UI.WebControls.TreeNodeBinding>"
  example:
  - "The following code example demonstrates how to use the Item indexer to access the items that are in a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. The <xref:System.Web.UI.WebControls.TreeNodeBinding> object for the third-level nodes is updated programmatically with new values. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeNodeBindingCollectionIndexer#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1093_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionIndexer#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1093_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeBinding this[int i] { get; set; }
    parameters:
    - id: i
      type: System.Int32
      description: "O índice de base zero de <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> para recuperar."
    return:
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> no índice especificado no <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear
  id: OnClear
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: OnClear()
  nameWithType: TreeNodeBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnClear ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  id: OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: OnRemoveComplete(Int32,Object)
  nameWithType: TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnRemoveComplete (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "A ser adicionado."
    - id: value
      type: System.Object
      description: "A ser adicionado."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)
  id: OnValidate(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: OnValidate(Object)
  nameWithType: TreeNodeBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void OnValidate (object value);
    parameters:
    - id: value
      type: System.Object
      description: "A ser adicionado."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)
  id: Remove(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: Remove(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Remove(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(TreeNodeBinding)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Remove o <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> de objeto o <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> objeto."
  remarks: "Use o método Remove para remover especificado <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto da coleção.</xref:System.Web.UI.WebControls.TreeNodeBinding> Todos os itens que seguem esse nó, em seguida, são movidos para cima para preencher a posição vaga nesse tipo. Os índices dos itens movidos também são atualizados.       Como alternativa, você pode remover um nó em um índice específico usando o <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A>método.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt%2A> Você também pode remover todos os nós na coleção usando o <xref:System.Web.UI.StateManagedCollection.Clear%2A>método.</xref:System.Web.UI.StateManagedCollection.Clear%2A>"
  example:
  - "The following code example demonstrates how to use the Remove method to remove a <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically from a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-cs[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/csharp/d829ba87-3d4f-4bb0-a238-_1.aspx)]\n [!code-vb[TreeNodeBindingCollectionAdd#1](~/add/codesnippet/visualbasic/d829ba87-3d4f-4bb0-a238-_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Remove (System.Web.UI.WebControls.TreeNodeBinding binding);
    parameters:
    - id: binding
      type: System.Web.UI.WebControls.TreeNodeBinding
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> para remover."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: TreeNodeBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Remove o <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> objeto no local do índice especificado do <xref href=&quot;System.Web.UI.WebControls.TreeNodeBindingCollection&quot;> </xref> objeto."
  remarks: "Use o método RemoveAt para remover o <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto localizado em `index` de um <xref:System.Web.UI.WebControls.TreeNodeBindingCollection>objeto.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection> </xref:System.Web.UI.WebControls.TreeNodeBinding> Todos os itens que seguem esse nó, em seguida, são movidos para cima para preencher a posição vaga nesse tipo. Os índices dos itens movidos também são atualizados.       Como alternativa, você pode remover um determinado <xref:System.Web.UI.WebControls.TreeNodeBinding>objeto usando o <xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A>método.</xref:System.Web.UI.WebControls.TreeNodeBindingCollection.Remove%2A> </xref:System.Web.UI.WebControls.TreeNodeBinding> Você também pode remover todos os nós na coleção usando o <xref:System.Web.UI.StateManagedCollection.Clear%2A>método.</xref:System.Web.UI.StateManagedCollection.Clear%2A>"
  example:
  - "The following code example demonstrates how to use the RemoveAt method to remove a <xref:System.Web.UI.WebControls.TreeNodeBinding> object programmatically from a <xref:System.Web.UI.WebControls.TreeNodeBindingCollection> object. For this example to work correctly, you must copy the XML data that is located at the end of this section to a file called Book.xml.  \n  \n [!code-vb[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_131_1.aspx)]\n [!code-cs[TreeNodeBindingCollectionInsert#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_131_1.aspx)]  \n  \n The following is the XML data for the preceding code example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\"  \n            Subject=\"Subject 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "A posição do índice com base em zero do <xref href=&quot;System.Web.UI.WebControls.TreeNodeBinding&quot;> </xref> para remover."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)
  id: SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  langs:
  - csharp
  name: SetDirtyObject(Object)
  nameWithType: TreeNodeBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  syntax:
    content: protected override void SetDirtyObject (object o);
    parameters:
    - id: o
      type: System.Object
      description: "A ser adicionado."
  overload: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.StateManagedCollection
  isExternal: false
  name: System.Web.UI.StateManagedCollection
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Add(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Add(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Add(TreeNodeBinding)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNodeBinding
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding
  fullName: System.Web.UI.WebControls.TreeNodeBinding
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Contains(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Contains(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains(TreeNodeBinding)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(System.Web.UI.WebControls.TreeNodeBinding[],System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CopyTo(TreeNodeBinding[],Int32)
  nameWithType: TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo(TreeNodeBinding[],Int32)
- uid: System.Web.UI.WebControls.TreeNodeBinding[]
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeBinding
  nameWithType: TreeNodeBinding
  fullName: System.Web.UI.WebControls.TreeNodeBinding[]
  spec.csharp:
  - uid: System.Web.UI.WebControls.TreeNodeBinding
    name: TreeNodeBinding
    nameWithType: TreeNodeBinding
    fullName: TreeNodeBinding[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CreateKnownType(Int32)
  nameWithType: TreeNodeBindingCollection.CreateKnownType(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType(Int32)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: GetKnownTypes()
  nameWithType: TreeNodeBindingCollection.GetKnownTypes()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes()
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: IndexOf(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf(TreeNodeBinding)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(System.Int32,System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Insert(Int32,TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert(Int32,TreeNodeBinding)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: TreeNodeBindingCollection.Item(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Item(Int32)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnClear()
  nameWithType: TreeNodeBindingCollection.OnClear()
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear()
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(System.Int32,System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnRemoveComplete(Int32,Object)
  nameWithType: TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete(Int32,Object)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnValidate(Object)
  nameWithType: TreeNodeBindingCollection.OnValidate(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate(Object)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(System.Web.UI.WebControls.TreeNodeBinding)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Remove(TreeNodeBinding)
  nameWithType: TreeNodeBindingCollection.Remove(TreeNodeBinding)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove(TreeNodeBinding)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(System.Int32)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: TreeNodeBindingCollection.RemoveAt(Int32)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt(Int32)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(System.Object)
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: SetDirtyObject(Object)
  nameWithType: TreeNodeBindingCollection.SetDirtyObject(Object)
  fullName: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject(Object)
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Add*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Add
  nameWithType: TreeNodeBindingCollection.Add
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Contains*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Contains
  nameWithType: TreeNodeBindingCollection.Contains
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CopyTo*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CopyTo
  nameWithType: TreeNodeBindingCollection.CopyTo
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.CreateKnownType*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: CreateKnownType
  nameWithType: TreeNodeBindingCollection.CreateKnownType
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.GetKnownTypes*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: GetKnownTypes
  nameWithType: TreeNodeBindingCollection.GetKnownTypes
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.IndexOf*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: IndexOf
  nameWithType: TreeNodeBindingCollection.IndexOf
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Insert*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Insert
  nameWithType: TreeNodeBindingCollection.Insert
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Item*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Item
  nameWithType: TreeNodeBindingCollection.Item
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnClear*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnClear
  nameWithType: TreeNodeBindingCollection.OnClear
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnRemoveComplete*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnRemoveComplete
  nameWithType: TreeNodeBindingCollection.OnRemoveComplete
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.OnValidate*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: OnValidate
  nameWithType: TreeNodeBindingCollection.OnValidate
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.Remove*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: Remove
  nameWithType: TreeNodeBindingCollection.Remove
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.RemoveAt*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: RemoveAt
  nameWithType: TreeNodeBindingCollection.RemoveAt
- uid: System.Web.UI.WebControls.TreeNodeBindingCollection.SetDirtyObject*
  parent: System.Web.UI.WebControls.TreeNodeBindingCollection
  isExternal: false
  name: SetDirtyObject
  nameWithType: TreeNodeBindingCollection.SetDirtyObject
