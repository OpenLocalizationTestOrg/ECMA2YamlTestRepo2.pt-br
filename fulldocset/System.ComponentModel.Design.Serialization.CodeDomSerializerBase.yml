### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  id: CodeDomSerializerBase
  children:
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  - System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  langs:
  - csharp
  name: CodeDomSerializerBase
  nameWithType: CodeDomSerializerBase
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  type: Class
  summary: "Fornece uma classe base para <xref href=&quot;System.ComponentModel.Design.Serialization.CodeDomSerializer&quot;> </xref> classes."
  remarks: "A classe CodeDomSerializerBase é usada como base compartilhada entre o <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>e <xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer>classes.</xref:System.ComponentModel.Design.Serialization.TypeCodeDomSerializer> </xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> Público <xref:System.ComponentModel.Design.Serialization.CodeDomSerializer>derivam da classe CodeDomSerializerBase.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializer> Cada classe pública define sua própria API pública. A classe CodeDomSerializerBase não define nenhuma API pública, mas oferece uma variedade de métodos de utilitário que pode ser usado para ajudar no processo de serialização."
  syntax:
    content: >-
      [System.ComponentModel.EditorBrowsable(System.ComponentModel.EditorBrowsableState.Never)]

      public abstract class CodeDomSerializerBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  id: DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  nameWithType: CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Desserializa a expressão especificada em um objeto de memória."
  remarks: "Este é um auxiliar pode chamada do método que classes derivadas para desserializar uma expressão. Ele desserializa a instrução, interpretar e executar a expressão de CodeDOM especificada pelo `expression` parâmetro e, em seguida, retorna os resultados. Se um objeto precisa ser criado como resultado dessa expressão, ela receberá o nome especificado pelo `name` parâmetro. O nome pode ser `null` se não é necessário para o objeto. A tabela a seguir descreve expressões específicas como são tratados.      | Expressão | Comportamento |   |----------------|--------------|   | <xref:System.CodeDom.CodeThisReferenceExpression>| Essa expressão representa `this` ou `Me`.</xref:System.CodeDom.CodeThisReferenceExpression> Para localizar o objeto que está associado esta expressão, o método DeserializeExpression examinará a pilha de contexto para <xref:System.ComponentModel.Design.Serialization.RootContext>.</xref:System.ComponentModel.Design.Serialization.RootContext> Este objeto contém o objeto raiz do gráfico e a expressão que o representa. Se o objeto está presente e a expressão corresponde, o objeto raiz será retornado. Um erro será relatado se uma instância não pode ser localizada. |   | <xref:System.CodeDom.CodeFieldReferenceExpression>| Se o destino da referência do campo for avaliada como o objeto raiz, o <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>método do parâmetro Gerenciador será usado para recuperar a instância do objeto com base no nome.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> </xref:System.CodeDom.CodeFieldReferenceExpression> Caso contrário, reflexão padrão é usado em relação ao objeto de destino para localizar o campo solicitado. Um erro será relatado se o campo não pode ser localizado. |   | <xref:System.CodeDom.CodeVariableReferenceExpression>| O <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>método o `manager` parâmetro é usado para localizar a instância que representa o nome da variável determinado.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> </xref:System.CodeDom.CodeVariableReferenceExpression> Um erro será relatado se uma instância não pode ser localizada. |       DeserializeExpression continua a interpretar expressões até que eles são completamente resolvidos para um objeto ou ele não pode simplificar a expressão. Nesse caso, DeserializeExpression retornará um <xref:System.CodeDom.CodeExpression>que contém a expressão mais simplificada.</xref:System.CodeDom.CodeExpression> Não há suporte para as seguintes expressões:- <xref:System.CodeDom.CodeEventReferenceExpression>- <xref:System.CodeDom.CodeMethodReferenceExpression>- <xref:System.CodeDom.CodeDelegateCreateExpression></xref:System.CodeDom.CodeDelegateCreateExpression> </xref:System.CodeDom.CodeMethodReferenceExpression> </xref:System.CodeDom.CodeEventReferenceExpression>"
  syntax:
    content: protected object DeserializeExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string name, System.CodeDom.CodeExpression expression);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: name
      type: System.String
      description: "O nome do objeto que é o resultado da expressão. Pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não é necessário para o objeto."
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "O <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> interpretar."
    return:
      type: System.Object
      description: "Um objeto resultante da interpretação <code> expression </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  id: DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  nameWithType: CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Retorna uma instância do tipo em questão."
  remarks: "O método DeserializeInstance é chamado durante a desserialização para obter uma instância de um objeto. Quando isso é chamado, uma instância do tipo solicitado deve ser retornada. A implementação padrão chama o <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>método o `manager` parâmetro.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>"
  syntax:
    content: protected virtual object DeserializeInstance (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type, object[] parameters, string name, bool addToContainer);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: type
      type: System.Type
      description: "O <xref:System.Type>da instância para retornar.</xref:System.Type>"
    - id: parameters
      type: System.Object[]
      description: "Os parâmetros para passar para o construtor para `type`."
    - id: name
      type: System.String
      description: "O nome do objeto desserializado."
    - id: addToContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para adicionar esse objeto para o contêiner de design; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O objeto deve implementar <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> para que isso tenha efeito."
    return:
      type: System.Object
      description: "Uma instância de <code> type </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  id: DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Desserializa propriedades em um determinado objeto de pacote de recursos da cultura invariável."
  remarks: "O método DeserializePropertiesFromResources é um método auxiliar que classes derivadas pode chamar. Ele procura por propriedades no objeto especificado e tenta carregar seus valores fora do pacote de recursos da cultura invariável. Isso geralmente é usado para lidar com as propriedades de tempo de design que não são emitidas no código-fonte. Ele não deve ser usado para propriedades localizadas, porque ela opera somente a cultura invariável.       Esse método verifica se todas as propriedades do `value` que corresponde aos atributos especificados pelo parâmetro de `filter` parâmetro e, em seguida, procura essas propriedades em um objeto de recurso binário. Isso é útil para desserializar propriedades que não podem ser representadas no código, como as propriedades de tempo de design.       Esse método requer que um carregador de designer oferece um <xref:System.ComponentModel.Design.IResourceService>para ler recursos.</xref:System.ComponentModel.Design.IResourceService> Se o <xref:System.ComponentModel.Design.IResourceService>fornece um <xref:System.Resources.ResXResourceReader>para a cultura invariável, em seguida, DeserializePropertiesFromResources lerá recursos da seção de metadados do arquivo de recurso (. resx) XML, que não está incluída no final código compilado.</xref:System.Resources.ResXResourceReader> </xref:System.ComponentModel.Design.IResourceService> Se esse serviço não estiver disponível, não há recursos serão lidos."
  syntax:
    content: protected void DeserializePropertiesFromResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O objeto do qual as propriedades devem ser desserializado."
    - id: filter
      type: System.Attribute[]
      description: "Um <xref:System.Attribute>matriz que filtra as propriedades que serão desserializadas.</xref:System.Attribute>"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  id: DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  nameWithType: CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Desserializa uma instrução, interpretar e executar uma instrução de CodeDOM."
  remarks: "O método DeserializeStatement é um método auxiliar que classes derivadas pode chamar. Ele interpreta o `statement` parâmetro.       O <xref:System.CodeDom.CodeStatement>que está sendo desserializado será enviado na pilha de contexto.</xref:System.CodeDom.CodeStatement>"
  syntax:
    content: protected void DeserializeStatement (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatement statement);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: statement
      type: System.CodeDom.CodeStatement
      description: "O <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> a ser desserializado."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  id: GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém uma coleção de atributos conforme definido na versão de destino do projeto do .NET Framework."
  syntax:
    content: protected static System.ComponentModel.AttributeCollection GetAttributesFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O Gerenciador de serialização."
    - id: type
      type: System.Type
      description: "O tipo de destino."
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Uma coleção de atributos conforme definido na versão de destino do projeto do .NET Framework."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetAttributesHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém uma coleção de atributos conforme definido na versão de destino do projeto do .NET Framework."
  syntax:
    content: protected static System.ComponentModel.AttributeCollection GetAttributesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O Gerenciador de serialização."
    - id: instance
      type: System.Object
      description: "Um objeto do tipo de destino."
    return:
      type: System.ComponentModel.AttributeCollection
      description: "Uma coleção de atributos conforme definido na versão de destino do projeto do .NET Framework."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  id: GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém uma coleção de eventos conforme definido na versão de destino do projeto do .NET Framework."
  syntax:
    content: protected static System.ComponentModel.EventDescriptorCollection GetEventsHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O Gerenciador de serialização."
    - id: instance
      type: System.Object
      description: "Um objeto do tipo de destino."
    - id: attributes
      type: System.Attribute[]
      description: "Uma matriz de atributos para passar para a versão de destino do .NET Framework."
    return:
      type: System.ComponentModel.EventDescriptorCollection
      description: "Uma coleção de eventos conforme definido na versão de destino do projeto do .NET Framework."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Retorna uma expressão para o objeto fornecido."
  remarks: "O método GetExpression retorna uma expressão que representa o objeto fornecido. Ele pode retornar `null`, indicando que nenhuma expressão foi definido que descreve o objeto. Expressões são adquiridas em uma destas três maneiras:-a expressão pode ser o resultado de uma chamada anterior para o <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>método.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>      -A expressão foi encontrada em <xref:System.ComponentModel.Design.Serialization.RootContext>.</xref:System.ComponentModel.Design.Serialization.RootContext>      -A expressão pode ser derivada por meio de <xref:System.ComponentModel.Design.IReferenceService>.</xref:System.ComponentModel.Design.IReferenceService>       Para derivar expressões por meio de <xref:System.ComponentModel.Design.IReferenceService>, o método GetExpression consulta o serviço de referência para um nome para o objeto fornecido.</xref:System.ComponentModel.Design.IReferenceService> Se o serviço de expressão retorna um nome válido, <xref:System.ComponentModel.Design.IReferenceService>, o método GetExpression verifica se há um &quot;.&quot; no nome.</xref:System.ComponentModel.Design.IReferenceService> Isso indica que o serviço de expressão encontrado esse objeto como o valor de retorno de uma propriedade somente leitura em outro objeto. Se houver um &quot;.&quot;, GetExpression dividirá a referência em partes. A parte mais à esquerda é um nome que será avaliado com o <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A>método.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance%2A> Para cada parte subsequente, uma expressão de referência de propriedade será criada. A expressão de final, em seguida, será retornada.       Se o objeto não tiver uma expressão definida ou se o objeto não foi encontrado no serviço de referência, GetExpression retornará `null`, indicando que há uma expressão existente para o objeto."
  syntax:
    content: protected System.CodeDom.CodeExpression GetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O objeto para o qual obter uma expressão."
    return:
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> representar v<code>alue</code>, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhuma expressão existente para v<code>alue</code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  id: GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém uma coleção de propriedades, conforme definido na versão de destino do projeto do .NET Framework."
  syntax:
    content: protected static System.ComponentModel.PropertyDescriptorCollection GetPropertiesHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance, Attribute[] attributes);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O Gerenciador de serialização."
    - id: instance
      type: System.Object
      description: "Um objeto do tipo de destino."
    - id: attributes
      type: System.Attribute[]
      description: "Uma matriz de atributos para passar para a versão de destino do .NET Framework."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Uma coleção de propriedades conforme definido na versão de destino do projeto do .NET Framework."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  id: GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém um tipo de reflexão gerado a partir de metadados do tipo."
  remarks: "O valor de retorno não serão igual a `type` e não deve ser usado para comparação com os tipos de não-reflexão."
  syntax:
    content: protected static Type GetReflectionTypeFromTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type type);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O Gerenciador de serialização."
    - id: type
      type: System.Type
      description: "O tipo para usar os metadados do."
    return:
      type: System.Type
      description: "Um tipo de reflexão gerado a partir de metadados do <code> type </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém um tipo de reflexão gerado a partir de metadados do objeto."
  remarks: "O valor de retorno não será igual ao tipo de objeto e não deve ser usado para comparação com os tipos de não-reflexão."
  syntax:
    content: protected static Type GetReflectionTypeHelper (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object instance);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O Gerenciador de serialização."
    - id: instance
      type: System.Object
      description: "O objeto para usar os metadados do."
    return:
      type: System.Type
      description: "Um tipo de reflexão gerado a partir de metadados do <code> object </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetSerializer(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Localiza um serializador para o valor do objeto especificado."
  remarks: "O método GetSerializer é uma extensão para o <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>método.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> O <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>método usa um tipo de objeto, em vez de um valor de objeto.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> Se um participante externo tinha substituído metadados para um objeto específico por meio de <xref:System.ComponentModel.TypeDescriptor>, essa substituição de metadados não deve ser considerada pelo <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>método, que usa apenas um tipo.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> </xref:System.ComponentModel.TypeDescriptor> O método GetSerializer verifica os metadados do valor e o tipo do valor. Se os dois forem diferentes, GetSerializer procurará para ver se há um atributo de serializador designer personalizado no valor. Nesse caso, GetSerializer tentar usá-lo. Caso contrário, ele irá passar para <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>"
  syntax:
    content: protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O objeto que especifica o serializador para recuperar."
    return:
      type: System.ComponentModel.Design.Serialization.CodeDomSerializer
      description: "Um <xref href=&quot;System.ComponentModel.Design.Serialization.CodeDomSerializer&quot;> </xref> que é apropriado para <code> value </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  id: GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetSerializer(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Localiza um serializador de determinado tipo."
  remarks: "O método GetSerializer é uma extensão para o <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>método.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName> O <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>método usa um tipo de objeto, em vez de um valor de objeto.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer%2A?displayProperty=fullName>"
  syntax:
    content: protected System.ComponentModel.Design.Serialization.CodeDomSerializer GetSerializer (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, Type valueType);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: valueType
      type: System.Type
      description: "O <xref:System.Type>especificando o serializador para recuperar.</xref:System.Type>"
    return:
      type: System.ComponentModel.Design.Serialization.CodeDomSerializer
      description: "Um <xref href=&quot;System.ComponentModel.Design.Serialization.CodeDomSerializer&quot;> </xref> que é apropriado para <code> valueType </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>valueType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  id: GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetTargetFrameworkProvider(IServiceProvider,Object)
  nameWithType: CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém um <xref href=&quot;System.ComponentModel.TypeDescriptionProvider&quot;> </xref> que está ciente de que a versão de destino do .NET Framework, para uso na filtragem de tipo."
  syntax:
    content: protected static System.ComponentModel.TypeDescriptionProvider GetTargetFrameworkProvider (IServiceProvider provider, object instance);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "O serviço de provedor de descrição de tipo."
    - id: instance
      type: System.Object
      description: "Um objeto do qual o serviço de provedor de descrição de tipo pode ser derivado, se `provider` é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.ComponentModel.TypeDescriptionProvider
      description: "Um provedor de descrição de tipo com reconhecimento de .NET Framework."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: GetUniqueName(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Retorna um nome exclusivo para o objeto fornecido."
  remarks: "As chamadas de método GetUniqueName o <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A>método.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName%2A> Se esse método não retorna um nome, em seguida, usa GetUniqueName <xref:System.ComponentModel.Design.Serialization.INameCreationService>para fabricar um nome válido para o objeto.</xref:System.ComponentModel.Design.Serialization.INameCreationService> Se o serviço não estiver disponível, GetUniqueName será fabricar um nome com base no nome do tipo curto combinado com um número de índice para torná-lo exclusivo. O nome resultante é associado com o Gerenciador de serialização chamando o <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A>método antes do novo nome será retornado.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName%2A>"
  syntax:
    content: protected string GetUniqueName (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O objeto para o qual o nome será recuperado."
    return:
      type: System.String
      description: "Um nome exclusivo para <code> value </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: IsSerialized(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Retorna um valor que indica se o objeto fornecido foi serializado."
  remarks: "Para o `value` serializado de parâmetro a serem considerados, o `manager` parâmetro ou outro serializador deve ter chamado o <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>método para criar uma relação entre `value` e uma expressão de referência.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>"
  syntax:
    content: protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O objeto a ser testado para serialização anterior."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> value </code> foi serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  id: IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: IsSerialized(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Retorna um valor que indica se o objeto fornecido foi serializado, opcionalmente, considerando expressões predefinidas."
  remarks: "Para o `value` serializado de parâmetro a serem considerados, o `manager` parâmetro ou outro serializador deve ter chamado o <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>método para criar uma relação entre `value` e uma expressão de referência.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>"
  syntax:
    content: protected bool IsSerialized (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool honorPreset);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O objeto a ser testado para serialização anterior."
    - id: honorPreset
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir expressões predefinidas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> value </code> foi serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  id: SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Retorna uma expressão que representa a criação do objeto especificado."
  remarks: "O método SerializeCreationExpression pode ser usado para serializar uma expressão que representa a criação do `value` parâmetro. Ele está ciente de descritores de instância.       O `isComplete` parâmetro está definido como `true` se a expressão representa um objeto totalmente configurado, ou `false` se ainda mais a serialização deve ser feita em Propriedades do objeto."
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeCreationExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, out bool isComplete);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O objeto a ser serializado."
    - id: isComplete
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se `value` foi totalmente serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.CodeDom.CodeExpression
      description: "Uma expressão que representa a criação de <code> value </code>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  id: SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa o evento para a coleção de instrução fornecida."
  remarks: "O método SerializeEvent é um método auxiliar que classes derivadas pode chamar para serializar um único evento em determinado <xref:System.CodeDom.CodeStatementCollection>.</xref:System.CodeDom.CodeStatementCollection> SerializeEvent consultará o Gerenciador de serialização para um <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>para um determinado evento e, em seguida, pede <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>para serializar o proprietário.</xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer> </xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>       Locais de SerializeEvent o `statements` e `descriptor` parâmetros em <xref:System.ComponentModel.Design.Serialization.ContextStack>.</xref:System.ComponentModel.Design.Serialization.ContextStack>       SerializeEvent requer um <xref:System.ComponentModel.Design.IEventBindingService>para descobrir associações de evento para métodos que não são compilados.</xref:System.ComponentModel.Design.IEventBindingService> Se esse serviço não estiver presente, associações de evento para métodos não compilada não serão gravadas. Associações de evento para métodos compilados ainda serão serializadas se os objetos aos quais os eventos são vinculados podem ser convertidos em expressões."
  syntax:
    content: protected void SerializeEvent (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.EventDescriptor descriptor);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "O <xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> em que o evento será serializado."
    - id: value
      type: System.Object
      description: "O objeto ao qual `descriptor` está associado."
    - id: descriptor
      type: System.ComponentModel.EventDescriptor
      description: "Um <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> especificando o evento para serializar."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, <code>statements</code>, or <code>descriptor</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.Design.Serialization.CodeDomSerializerException
    commentId: T:System.ComponentModel.Design.Serialization.CodeDomSerializerException
    description: "<xref href=&quot;System.ComponentModel.Design.IEventBindingService&quot;></xref>não está disponível."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  id: SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa os eventos especificados para a coleção de instrução fornecida."
  remarks: "O método SerializeEvents é um método auxiliar que classes derivadas pode chamar. Examina a eventos `value` parâmetro que corresponda a `filter` parâmetro e, em seguida, ele chama o <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>método para cada evento.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent%2A>       Os locais de método SerializeEvents o <xref:System.ComponentModel.InheritanceAttribute>para `value` em <xref:System.ComponentModel.Design.Serialization.ContextStack>.</xref:System.ComponentModel.Design.Serialization.ContextStack> </xref:System.ComponentModel.InheritanceAttribute>"
  syntax:
    content: protected void SerializeEvents (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "O <xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> em que o evento será serializado."
    - id: value
      type: System.Object
      description: "O objeto no qual os eventos poderão ser serializados."
    - id: filter
      type: System.Attribute[]
      description: "Um <xref:System.Attribute>matriz que filtra os eventos que serão serializados.</xref:System.Attribute>"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  id: SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa as propriedades no objeto especificado na coleção de instrução fornecida."
  remarks: "O método SerializeProperties é um método auxiliar que classes derivadas pode chamar. Ele analisa as propriedades `value` parâmetro que corresponda a `filter` parâmetro e, em seguida, ele chama o <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>método para cada propriedade.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty%2A>       Os locais de método SerializeProperties o <xref:System.ComponentModel.InheritanceAttribute>para `value` em <xref:System.ComponentModel.Design.Serialization.ContextStack>.</xref:System.ComponentModel.Design.Serialization.ContextStack> </xref:System.ComponentModel.InheritanceAttribute>"
  syntax:
    content: protected void SerializeProperties (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "O <xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> em que as propriedades serão serializadas."
    - id: value
      type: System.Object
      description: "O objeto no qual as propriedades serão serializadas."
    - id: filter
      type: System.Attribute[]
      description: "Um <xref:System.Attribute>matriz que filtra as propriedades que serão serializadas.</xref:System.Attribute>"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  id: SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa as propriedades no objeto fornecido no pacote de recursos da cultura invariável."
  remarks: "O método SerializePropertiesToResources é um método auxiliar que classes derivadas pode chamar. Ele analisa as propriedades `value` parâmetro que corresponda a `filter` parâmetro e, em seguida, serializa as propriedades para o pacote de recursos de cultura invariável. Se o serviço de recurso retorna um <xref:System.Resources.ResXResourceWriter>, os valores de propriedade serão armazenados na seção de metadados do arquivo de recurso (. resx) XML.</xref:System.Resources.ResXResourceWriter> O `statements` parâmetro não for usado.       Para ser serializada como um recurso, uma propriedade deve ser simples (não uma propriedade de conteúdo) e seu valor devem ser serializáveis. Propriedades que não está de acordo com esse padrão serão ignoradas.       SerializePropertiesToResources requer um <xref:System.ComponentModel.Design.IResourceService>para obter um <xref:System.Resources.ResourceWriter>gravar recursos para a cultura invariável.</xref:System.Resources.ResourceWriter> </xref:System.ComponentModel.Design.IResourceService> Se esse serviço não estiver disponível, não há recursos serão gravados."
  syntax:
    content: protected void SerializePropertiesToResources (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, Attribute[] filter);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "Não usado."
    - id: value
      type: System.Object
      description: "O objeto cujas propriedades serão serializadas."
    - id: filter
      type: System.Attribute[]
      description: "Um <xref:System.Attribute>matriz que filtra as propriedades que serão serializadas.</xref:System.Attribute>"
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>statements</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  id: SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa uma propriedade no objeto especificado."
  remarks: "O método SerializeProperty recupera um <xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>para o `propertyToSerialize` parâmetro e delegados para proprietário.</xref:System.ComponentModel.Design.Serialization.MemberCodeDomSerializer>       Locais de SerializeProperty o `statements` e `propertyToSerialize` parâmetros em <xref:System.ComponentModel.Design.Serialization.ContextStack>.</xref:System.ComponentModel.Design.Serialization.ContextStack>"
  syntax:
    content: protected void SerializeProperty (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, System.CodeDom.CodeStatementCollection statements, object value, System.ComponentModel.PropertyDescriptor propertyToSerialize);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: statements
      type: System.CodeDom.CodeStatementCollection
      description: "O <xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> em que a propriedade será serializada."
    - id: value
      type: System.Object
      description: "O objeto no qual a propriedade será serializada."
    - id: propertyToSerialize
      type: System.ComponentModel.PropertyDescriptor
      description: "A propriedade para serializar."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, <code>statements</code>, or <code>propertyToSerialize</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  id: SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeResource(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa o objeto fornecido em um pacote de recursos usando o nome do recurso especificado."
  remarks: "O método SerializeResource é um método auxiliar que serializa um valor para um pacote de recursos sob o nome fornecido. A cultura que o recurso é gravado é determinada por meio de pesquisa do Gerenciador de serialização <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A>coleção para uma propriedade chamada `ResourceCulture`.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties%2A> Se essa propriedade existir, recursos serão gravados para aquela cultura. Caso contrário, os recursos serão gravados para a cultura invariável. O `value` parâmetro deve ser serializável.       SerializeResource requer um <xref:System.ComponentModel.Design.IResourceService>para obter um <xref:System.Resources.ResourceWriter>gravar recursos para a cultura correto.</xref:System.Resources.ResourceWriter> </xref:System.ComponentModel.Design.IResourceService> Se esse serviço não estiver disponível, SerializeResource em vez disso, criará um objeto binário no código que representa o recurso."
  syntax:
    content: protected void SerializeResource (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: resourceName
      type: System.String
      description: "O nome do conjunto de recursos no qual `value` será serializado."
    - id: value
      type: System.Object
      description: "O objeto a ser serializado."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  id: SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa o objeto fornecido em um pacote de recursos usando o nome do recurso especificado."
  remarks: "O recurso é sempre gravado para a cultura invariável. O `value` parâmetro deve ser serializável.       O método SerializeResourceInvariant requer um <xref:System.ComponentModel.Design.IResourceService>para obter um <xref:System.Resources.ResourceWriter>gravar recursos para a cultura correto.</xref:System.Resources.ResourceWriter> </xref:System.ComponentModel.Design.IResourceService> Se esse serviço não estiver disponível, <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>em vez disso, criará um objeto binário no código que representa o recurso.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>"
  syntax:
    content: protected void SerializeResourceInvariant (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, string resourceName, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: resourceName
      type: System.String
      description: "O nome do conjunto de recursos no qual `value` será serializado."
    - id: value
      type: System.Object
      description: "O objeto a ser serializado."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeToExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa o objeto fornecido em uma expressão."
  remarks: "O `value` parâmetro pode ser `null`, caso em que uma expressão primitivo será retornada.       O método SerializeToExpression usa as seguintes regras para serialização de tipos: 1.  Primeiro, ele chama o <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>método para ver se uma expressão já foi criada para o objeto.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> Nesse caso, ele retorna a expressão existente.      2.  Ela localiza o serializador do objeto e pede que ele serializar.      3.  Se o valor de retorno do serializador do objeto é um <xref:System.CodeDom.CodeExpression>, a expressão é retornada.</xref:System.CodeDom.CodeExpression>      4.  Faz uma última chamada para <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>para ver se o serializador adicionada uma expressão.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>      5.  Finalmente, ele retorna `null`.       Se nenhuma expressão pode ser criado e nenhum serializador adequado foi encontrado, um erro será relatado por meio do Gerenciador de serialização. Nenhum erro será relatado se um serializador foi encontrado, mas ele não conseguiu produzir uma expressão. Nesse caso, será considerado que o serializador ou já relatou o erro ou não houve tentativa serializar o objeto.       Se o serializador retornado de uma instrução ou uma coleção de instruções, essas instruções não serão descartadas. O método SerializeToExpression primeiro procurará um <xref:System.ComponentModel.Design.Serialization.StatementContext>no contexto de pilha e adicione instruções para o objeto de contexto de instrução <xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A>propriedade.</xref:System.ComponentModel.Design.Serialization.StatementContext.StatementCollection%2A> </xref:System.ComponentModel.Design.Serialization.StatementContext> Se não houver nenhum contexto de instrução, o método SerializeToExpression examinará o contexto para um <xref:System.CodeDom.CodeStatementCollection>e adicione as instruções existe.</xref:System.CodeDom.CodeStatementCollection> Se o local pode ser encontrado para adicionar as instruções, um erro será gerado.      > [!NOTE] > Você não deve chamar o método SerializeToExpression em <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A>ao serializar seu próprio objeto.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService.Serialize%2A> Em vez disso, você deve chamar <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> Se ele retorna `null`, crie sua própria expressão e chame <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A>.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression%2A> Prossiga com o restante da sua serialização."
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeToExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O objeto a ser serializado. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
    return:
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> objeto se <code> value </code> pode ser serializado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  id: SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa o objeto fornecido em uma expressão."
  remarks: "O <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>é um método auxiliar que serializa um valor para uma expressão de recurso.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> Isso é, em comparação com o <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A>método, que grava um valor em um objeto de recurso binário.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource%2A> <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>vai mais além e retorna uma expressão que pode ser usada para recuperar o recurso.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A> Por exemplo, o valor de retorno pode ser &quot;rm. GetValue(&quot;SomeBitmap&quot;); &quot;. O nome do recurso é calculado a partir de <xref:System.ComponentModel.Design.Serialization.ExpressionContext>, se um pode ser encontrado na pilha de contexto.</xref:System.ComponentModel.Design.Serialization.ExpressionContext>       O <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>método aparecerão no <xref:System.ComponentModel.Design.Serialization.ContextStack>para os seguintes objetos:- <xref:System.CodeDom.CodeStatementCollection>— uma coleção de instruções para adicionar um Gerenciador de recursos, se um precisa ser declarada.</xref:System.CodeDom.CodeStatementCollection> </xref:System.ComponentModel.Design.Serialization.ContextStack> </xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression%2A>      - <xref:System.ComponentModel.Design.Serialization.RootContext>— a expressão de raiz, que é necessário para criar um recurso de Gerenciador.</xref:System.ComponentModel.Design.Serialization.RootContext>      - <xref:System.ComponentModel.Design.Serialization.ExpressionContext>— usados para fabricar um nome para o recurso e decidir que tipo de chamada de Gerenciador de recursos para tornar.</xref:System.ComponentModel.Design.Serialization.ExpressionContext>"
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O objeto a ser serializado."
    return:
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> contendo <code> value </code> como uma expressão serializada."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  id: SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa o objeto fornecido em uma expressão apropriada para a cultura invariável."
  remarks: "Se o `ensureInvariant` parâmetro é `true`, o método SerializeToResourceExpression também gravará o valor do recurso no arquivo de recursos da cultura invariável se atual `ResourceCulture` não é a cultura invariável."
  syntax:
    content: protected System.CodeDom.CodeExpression SerializeToResourceExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, bool ensureInvariant);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O objeto a ser serializado."
    - id: ensureInvariant
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para serializar para a cultura invariável; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> contendo <code> value </code> como uma expressão serializada."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  id: SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Associa um objeto com uma expressão."
  remarks: "O método SetExpression é um método auxiliar que associa um <xref:System.CodeDom.CodeExpression>com um objeto.</xref:System.CodeDom.CodeExpression> Objetos que foram associados a expressões dessa maneira são acessíveis por meio de <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>método.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> SetExpression armazena sua tabela de expressão como um objeto acrescentado na pilha de contexto para que ela é acessível por qualquer serializador <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>método.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>"
  syntax:
    content: protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O objeto a ser serializado."
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "O <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> ao qual associar `value`."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>manager</code>, <code>value</code>, or <code>expression</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  id: SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  langs:
  - csharp
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Associa um objeto com uma expressão, e, opcionalmente, especificando uma expressão predefinida."
  remarks: "O método SetExpression é um método auxiliar que associa um <xref:System.CodeDom.CodeExpression>com um objeto.</xref:System.CodeDom.CodeExpression> Objetos que foram associados a expressões dessa maneira são acessíveis por meio de <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>método.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A> O SetExpression armazena sua tabela de expressão como um objeto acrescentado na pilha de contexto para que ela é acessível por qualquer serializador <xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>método.</xref:System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression%2A>"
  syntax:
    content: protected void SetExpression (System.ComponentModel.Design.Serialization.IDesignerSerializationManager manager, object value, System.CodeDom.CodeExpression expression, bool isPreset);
    parameters:
    - id: manager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para serialização."
    - id: value
      type: System.Object
      description: "O objeto a ser serializado."
    - id: expression
      type: System.CodeDom.CodeExpression
      description: "O <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> ao qual associar `value`."
    - id: isPreset
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para especificar uma expressão predefinida; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerException
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: CodeDomSerializerException
  nameWithType: CodeDomSerializerException
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerException
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  nameWithType: CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression(IDesignerSerializationManager,String,CodeExpression)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type,System.Object[],System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  nameWithType: CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance(IDesignerSerializationManager,Type,Object[],String,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources(IDesignerSerializationManager,Object,Attribute[])
- uid: System.Attribute[]
  parent: System
  isExternal: true
  name: Attribute
  nameWithType: Attribute
  fullName: System.Attribute[]
  spec.csharp:
  - uid: System.Attribute
    name: Attribute
    nameWithType: Attribute
    fullName: Attribute[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatement)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  nameWithType: CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement(IDesignerSerializationManager,CodeStatement)
- uid: System.CodeDom.CodeStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper(IDesignerSerializationManager,Type)
- uid: System.ComponentModel.AttributeCollection
  parent: System.ComponentModel
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.ComponentModel.AttributeCollection
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper(IDesignerSerializationManager,Object,Attribute[])
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper(IDesignerSerializationManager,Object,Attribute[])
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper(IDesignerSerializationManager,Type)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetSerializer(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializer
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: CodeDomSerializer
  nameWithType: CodeDomSerializer
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializer
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Type)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetSerializer(IDesignerSerializationManager,Type)
  nameWithType: CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer(IDesignerSerializationManager,Type)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(System.IServiceProvider,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetTargetFrameworkProvider(IServiceProvider,Object)
  nameWithType: CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider(IServiceProvider,Object)
- uid: System.ComponentModel.TypeDescriptionProvider
  parent: System.ComponentModel
  isExternal: false
  name: TypeDescriptionProvider
  nameWithType: TypeDescriptionProvider
  fullName: System.ComponentModel.TypeDescriptionProvider
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetUniqueName(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: IsSerialized(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: IsSerialized(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized(IDesignerSerializationManager,Object,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean@)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression(IDesignerSerializationManager,Object,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent(IDesignerSerializationManager,CodeStatementCollection,Object,EventDescriptor)
- uid: System.CodeDom.CodeStatementCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeStatementCollection
  nameWithType: CodeStatementCollection
  fullName: System.CodeDom.CodeStatementCollection
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.Attribute[])
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  nameWithType: CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources(IDesignerSerializationManager,CodeStatementCollection,Object,Attribute[])
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeStatementCollection,System.Object,System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  nameWithType: CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty(IDesignerSerializationManager,CodeStatementCollection,Object,PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResource(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource(IDesignerSerializationManager,String,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.String,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  nameWithType: CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant(IDesignerSerializationManager,String,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression(IDesignerSerializationManager,Object,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.Object,System.CodeDom.CodeExpression,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  nameWithType: CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
  fullName: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression(IDesignerSerializationManager,Object,CodeExpression,Boolean)
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeExpression
  nameWithType: CodeDomSerializerBase.DeserializeExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeInstance*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeInstance
  nameWithType: CodeDomSerializerBase.DeserializeInstance
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializePropertiesFromResources*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializePropertiesFromResources
  nameWithType: CodeDomSerializerBase.DeserializePropertiesFromResources
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.DeserializeStatement*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: DeserializeStatement
  nameWithType: CodeDomSerializerBase.DeserializeStatement
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesFromTypeHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesFromTypeHelper
  nameWithType: CodeDomSerializerBase.GetAttributesFromTypeHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetAttributesHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetAttributesHelper
  nameWithType: CodeDomSerializerBase.GetAttributesHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetEventsHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetEventsHelper
  nameWithType: CodeDomSerializerBase.GetEventsHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetExpression
  nameWithType: CodeDomSerializerBase.GetExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetPropertiesHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetPropertiesHelper
  nameWithType: CodeDomSerializerBase.GetPropertiesHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeFromTypeHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeFromTypeHelper
  nameWithType: CodeDomSerializerBase.GetReflectionTypeFromTypeHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetReflectionTypeHelper*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetReflectionTypeHelper
  nameWithType: CodeDomSerializerBase.GetReflectionTypeHelper
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetSerializer*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetSerializer
  nameWithType: CodeDomSerializerBase.GetSerializer
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetTargetFrameworkProvider*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetTargetFrameworkProvider
  nameWithType: CodeDomSerializerBase.GetTargetFrameworkProvider
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.GetUniqueName*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: GetUniqueName
  nameWithType: CodeDomSerializerBase.GetUniqueName
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.IsSerialized*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: IsSerialized
  nameWithType: CodeDomSerializerBase.IsSerialized
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeCreationExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeCreationExpression
  nameWithType: CodeDomSerializerBase.SerializeCreationExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvent*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvent
  nameWithType: CodeDomSerializerBase.SerializeEvent
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeEvents*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeEvents
  nameWithType: CodeDomSerializerBase.SerializeEvents
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperties*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperties
  nameWithType: CodeDomSerializerBase.SerializeProperties
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializePropertiesToResources*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializePropertiesToResources
  nameWithType: CodeDomSerializerBase.SerializePropertiesToResources
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeProperty*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeProperty
  nameWithType: CodeDomSerializerBase.SerializeProperty
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResource*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResource
  nameWithType: CodeDomSerializerBase.SerializeResource
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeResourceInvariant*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeResourceInvariant
  nameWithType: CodeDomSerializerBase.SerializeResourceInvariant
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToExpression
  nameWithType: CodeDomSerializerBase.SerializeToExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SerializeToResourceExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SerializeToResourceExpression
  nameWithType: CodeDomSerializerBase.SerializeToResourceExpression
- uid: System.ComponentModel.Design.Serialization.CodeDomSerializerBase.SetExpression*
  parent: System.ComponentModel.Design.Serialization.CodeDomSerializerBase
  isExternal: false
  name: SetExpression
  nameWithType: CodeDomSerializerBase.SetExpression
