### YamlMime:ManagedReference
items:
- uid: System.Data.Objects.ObjectStateManager
  id: ObjectStateManager
  children:
  - System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  - System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  - System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  - System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  - System.Data.Objects.ObjectStateManager.MetadataWorkspace
  - System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  - System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  - System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  - System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  langs:
  - csharp
  name: ObjectStateManager
  nameWithType: ObjectStateManager
  fullName: System.Data.Objects.ObjectStateManager
  type: Class
  summary: "Mantém o gerenciamento de identidades e estado do objeto para instâncias de tipo de entidade e as instâncias de relação."
  remarks: "Rastreia ObjectStateManager resultados da consulta e fornece lógica para mesclar vários resultados de consulta sobrepostos. Ele também executa quando um usuário insere, exclui ou modifica objetos e fornece um conjunto de atualizações de alterações de controle de alterações na memória. Esse conjunto de alterações é usado pelo processador de alteração para manter as modificações.       Essa classe é normalmente usada por <xref:System.Data.Objects.ObjectContext>e não diretamente em aplicativos.</xref:System.Data.Objects.ObjectContext>"
  example:
  - "These examples are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n The following example gets the ObjectStateManager from the <xref:System.Data.Objects.ObjectContext> and uses the state manager to access an object in the context.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstatemanager)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstatemanager)]  \n  \n The following example uses the <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29> method on the returned ObjectStateManager to get an object based on its entity key.  \n  \n [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#applyitemupdates)]\n [!code-cs[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#applyitemupdates)]"
  syntax:
    content: public class ObjectStateManager
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  id: '#ctor(System.Data.Metadata.Edm.MetadataWorkspace)'
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ObjectStateManager(MetadataWorkspace)
  nameWithType: ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  type: Constructor
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref> classe."
  syntax:
    content: public ObjectStateManager (System.Data.Metadata.Edm.MetadataWorkspace metadataWorkspace);
    parameters:
    - id: metadataWorkspace
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "O <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref>, que fornece informações de mapeamento e metadados."
  overload: System.Data.Objects.ObjectStateManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  id: ChangeObjectState(System.Object,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeObjectState(Object,EntityState)
  nameWithType: ObjectStateManager.ChangeObjectState(Object,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeObjectState(Object,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Altera o estado do <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para um objeto específico especificado <code> entityState </code>."
  remarks: "Chamar o método ChangeObjectState para alterar o estado de um objeto <xref:System.Data.EntityState>não faz com que os objetos relacionados em uma relação restrita a ser excluído.</xref:System.Data.EntityState>       Alterar o estado de um objeto não afeta os objetos relacionados no gráfico de objeto.       Quando você altera a <xref:System.Data.EntityState>de uma entrada de objeto de entidade para <xref:System.Data.EntityState>, todas as propriedades do objeto são marcadas como modificada, independentemente dos valores atuais ou originais.</xref:System.Data.EntityState> </xref:System.Data.EntityState>       Quando o <xref:System.Data.EntityState>de um objeto de entidade entrada é alterada para <xref:System.Data.EntityState>, <xref:System.Data.EntityState>, ou <xref:System.Data.EntityState>, as entradas de relação para o objeto também são atualizadas.</xref:System.Data.EntityState> </xref:System.Data.EntityState> </xref:System.Data.EntityState> </xref:System.Data.EntityState>"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeObjectState (object entity, System.Data.EntityState entityState);
    parameters:
    - id: entity
      type: System.Object
      description: "O objeto para o qual o estado deve ser alterado."
    - id: entityState
      type: System.Data.EntityState
      description: "O novo estado do objeto."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "The <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;></xref> for the supplied <code>entity</code>."
  overload: System.Data.Objects.ObjectStateManager.ChangeObjectState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>entity</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando o objeto não é desanexado e não tem uma entrada no Gerenciador de estado.       - ou - quando você tenta alterar o estado para <xref href=&quot;System.Data.EntityState&quot;> </xref> de qualquer outro <xref:System.Data.EntityState.>- ou - quando <code> state </code> não é válido <xref href=&quot;System.Data.EntityState&quot;> </xref> valor.</xref:System.Data.EntityState.>"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  id: ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(Object,Object,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Alterações de estado da relação entre dois objetos de entidade especificado com base em dois objetos relacionados e o nome da propriedade de navegação."
  remarks: "As entradas para os objetos em ambas as extremidades da relação especificada devem existir em <xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager>      > [!NOTE] > Esse método não tem suporte para relações com base em uma associação de chave estrangeira."
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string navigationProperty, System.Data.EntityState relationshipState);
    parameters:
    - id: sourceEntity
      type: System.Object
      description: "A instância do objeto ou <xref href=&quot;System.Data.EntityKey&quot;> </xref> da entidade de origem em uma extremidade da relação."
    - id: targetEntity
      type: System.Object
      description: "A instância do objeto ou <xref href=&quot;System.Data.EntityKey&quot;> </xref> da entidade de destino na outra extremidade da relação."
    - id: navigationProperty
      type: System.String
      description: "O nome da propriedade de navegação em `source` que retorna a `target`."
    - id: relationshipState
      type: System.Data.EntityState
      description: "A solicitação <xref href=&quot;System.Data.EntityState&quot;> </xref> da relação especificada."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "O <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para a relação que foi alterada."
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code> or <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ao tentar alterar o estado da relação para um estado diferente de <xref href=&quot;System.Data.EntityState&quot;> </xref> ou <xref href=&quot;System.Data.EntityState&quot;> </xref> quando qualquer <code> source </code> ou <code> target </code> está em um <xref href=&quot;System.Data.EntityState&quot;> </xref> estado.       - ou - quando você tenta alterar o estado da relação para um estado diferente de <xref href=&quot;System.Data.EntityState&quot;> </xref> ou <xref href=&quot;System.Data.EntityState&quot;> </xref> quando qualquer <code> source </code> ou <code> target </code> está em um <xref href=&quot;System.Data.EntityState&quot;> </xref> estado.       - ou - quando <code> state </code> não é válido <xref href=&quot;System.Data.EntityState&quot;> </xref> valor."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  id: ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(Object,Object,String,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Alterações do estado da relação entre dois objetos de entidade especificado com base em dois objetos relacionados e as propriedades da relação."
  remarks: "As entradas para os objetos em ambas as extremidades da relação especificada devem existir em <xref:System.Data.Objects.ObjectStateManager>.</xref:System.Data.Objects.ObjectStateManager>      > [!NOTE] > Esse método não tem suporte para relações se baseiam em uma associação de chave estrangeira. Para obter mais informações, consulte [definindo e gerenciar relações](http://msdn.microsoft.com/en-us/2c92c097-56bd-4145-989e-16d92475ecda)"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry ChangeRelationshipState (object sourceEntity, object targetEntity, string relationshipName, string targetRoleName, System.Data.EntityState relationshipState);
    parameters:
    - id: sourceEntity
      type: System.Object
      description: "A instância do objeto ou <xref href=&quot;System.Data.EntityKey&quot;> </xref> da entidade de origem em uma extremidade da relação."
    - id: targetEntity
      type: System.Object
      description: "A instância do objeto ou <xref href=&quot;System.Data.EntityKey&quot;> </xref> da entidade de destino na outra extremidade da relação."
    - id: relationshipName
      type: System.String
      description: "O nome da relação."
    - id: targetRoleName
      type: System.String
      description: "O nome da função no `target` end da relação."
    - id: relationshipState
      type: System.Data.EntityState
      description: "A solicitação <xref href=&quot;System.Data.EntityState&quot;> </xref> da relação especificada."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "O <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para a relação que foi alterada."
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>source</code> or <code>target</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando você tenta alterar o estado da relação para um estado diferente de <xref href=&quot;System.Data.EntityState&quot;> </xref> ou <xref href=&quot;System.Data.EntityState&quot;> </xref> quando qualquer <code> source </code> ou <code> target </code> está em um <xref href=&quot;System.Data.EntityState&quot;> </xref> estado.       - ou - quando você tenta alterar o estado da relação para um estado diferente de <xref href=&quot;System.Data.EntityState&quot;> </xref> ou <xref href=&quot;System.Data.EntityState&quot;> </xref> quando qualquer <code> source </code> ou <code> target </code> está em um <xref href=&quot;System.Data.EntityState&quot;> </xref> estado.       - ou - quando <code> state </code> não é válido <xref href=&quot;System.Data.EntityState&quot;> </xref> valor."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  id: ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  syntax:
    content: 'public System.Data.Objects.ObjectStateEntry ChangeRelationshipState<TEntity> (TEntity sourceEntity, object targetEntity, System.Linq.Expressions.Expression<Func<TEntity,object>> navigationPropertySelector, System.Data.EntityState relationshipState) where TEntity : class;'
    parameters:
    - id: sourceEntity
      type: TEntity
      description: "A ser adicionado."
    - id: targetEntity
      type: System.Object
      description: "A ser adicionado."
    - id: navigationPropertySelector
      type: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}
      description: "A ser adicionado."
    - id: relationshipState
      type: System.Data.EntityState
      description: "A ser adicionado."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "A ser adicionado."
  overload: System.Data.Objects.ObjectStateManager.ChangeRelationshipState<TEntity>*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  id: GetObjectStateEntries(System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntries(EntityState)
  nameWithType: ObjectStateManager.GetObjectStateEntries(EntityState)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(EntityState)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Retorna uma coleção de <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> objetos para objetos ou relações com o estado especificado."
  remarks: "O <xref:System.Data.EntityState>é um campo de bits para entradas de estado de vários estados podem ser recuperadas em uma chamada seguindo um bit a bit ou de mais de um <xref:System.Data.EntityState>valores.</xref:System.Data.EntityState> </xref:System.Data.EntityState>"
  syntax:
    content: public System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectStateEntry> GetObjectStateEntries (System.Data.EntityState state);
    parameters:
    - id: state
      type: System.Data.EntityState
      description: "Um <xref href=&quot;System.Data.EntityState&quot;> </xref> usados para filtrar retornado <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> objetos."
    return:
      type: System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry}
      description: "Uma coleção de <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> objetos na determinado <xref href=&quot;System.Data.EntityState&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntries*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "When <code>state</code> is <xref href=&quot;System.Data.EntityState&quot;></xref>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  id: GetObjectStateEntry(System.Data.EntityKey)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntry(EntityKey)
  nameWithType: ObjectStateManager.GetObjectStateEntry(EntityKey)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(EntityKey)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Retorna um <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para a entrada de objeto ou relação com a chave especificada."
  remarks: "Use o <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>método para retornar um <xref:System.Data.Objects.ObjectStateEntry>objeto sem ter que lidar com o <xref:System.InvalidOperationException>gerado pelo método GetObjectStateEntry.</xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Data.EntityKey%2CSystem.Data.Objects.ObjectStateEntry%40%29>"
  example:
  - "The example in this topic is based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832). The example gets the <xref:System.Data.Objects.ObjectStateEntry> for the given <xref:System.Data.EntityKey> from the <xref:System.Data.Objects.ObjectStateManager>. Then it gets the current value of the `SalesOrderHeader.PurchaseOrderNumber` property, changes the property's value, and enumerates through the collection of modified properties.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateEntry](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstateentry)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateEntry](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstateentry)]"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (System.Data.EntityKey key);
    parameters:
    - id: key
      type: System.Data.EntityKey
      description: "The <xref href=&quot;System.Data.EntityKey&quot;></xref>."
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "O correspondente <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para o determinado <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "When <code>key</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Quando especificado <code> key </code> não foi encontrado no Gerenciador de estado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nenhuma entidade com especificado <xref href=&quot;System.Data.EntityKey&quot;> </xref> existe o <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  id: GetObjectStateEntry(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetObjectStateEntry(Object)
  nameWithType: ObjectStateManager.GetObjectStateEntry(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Retorna um <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para o objeto especificado."
  remarks: "Use o <xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29>método para retornar um <xref:System.Data.Objects.ObjectStateEntry>objeto sem ter que lidar com o <xref:System.InvalidOperationException>gerado pelo método GetObjectStateEntry.</xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry> </xref:System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry%28System.Object%2CSystem.Data.Objects.ObjectStateEntry%40%29>"
  syntax:
    content: public System.Data.Objects.ObjectStateEntry GetObjectStateEntry (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "O <xref:System.Object>ao qual recuperada <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> pertence.</xref:System.Object>"
    return:
      type: System.Data.Objects.ObjectStateEntry
      description: "O correspondente <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para determinado <xref:System.Object>.</xref:System.Object>"
  overload: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nenhuma entidade especificado <xref:System.Object>existe o <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>.</xref:System.Object>"
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  id: GetRelationshipManager(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: GetRelationshipManager(Object)
  nameWithType: ObjectStateManager.GetRelationshipManager(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetRelationshipManager(Object)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Retorna o <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> que é usado pelo objeto especificado."
  remarks: "Chamar o método GetRelationshipManager é o mesmo que chamar o <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>método, exceto que este método gera uma exceção em vez de retornar `false`.</xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>       Chamar o <xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>método para evitar o tratamento de <xref:System.InvalidOperationException>que ocorre quando um <xref:System.Data.Objects.DataClasses.RelationshipManager>não pode ser retornado para a entidade fornecida.</xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateManager.TryGetRelationshipManager%2A>"
  syntax:
    content: public System.Data.Objects.DataClasses.RelationshipManager GetRelationshipManager (object entity);
    parameters:
    - id: entity
      type: System.Object
      description: "O objeto para o qual retornar o <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref>."
    return:
      type: System.Data.Objects.DataClasses.RelationshipManager
      description: "O <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> para o objeto especificado."
  overload: System.Data.Objects.ObjectStateManager.GetRelationshipManager*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando um <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> não pode ser retornado para o <code> entity </code>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  id: MetadataWorkspace
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
  fullName: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  type: Property
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Obtém o <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> associado a este Gerenciador de estado."
  remarks: "O <xref:System.Data.Metadata.Edm.MetadataWorkspace>classe é uma interface de programação central que você pode usar para interagir com os metadados do modelo de dados de entidade (EDM) em tempo de execução e o contexto de um aplicativo.</xref:System.Data.Metadata.Edm.MetadataWorkspace>"
  syntax:
    content: public System.Data.Metadata.Edm.MetadataWorkspace MetadataWorkspace { get; }
    return:
      type: System.Data.Metadata.Edm.MetadataWorkspace
      description: "O <xref href=&quot;System.Data.Metadata.Edm.MetadataWorkspace&quot;> </xref> associado a esta <xref href=&quot;System.Data.Objects.ObjectStateManager&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.MetadataWorkspace*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  id: ObjectStateManagerChanged
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: ObjectStateManagerChanged
  nameWithType: ObjectStateManager.ObjectStateManagerChanged
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  type: Event
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Ocorre quando entidades são adicionadas ou removidas do Gerenciador de estado."
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler ObjectStateManagerChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  id: TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Tenta recuperar correspondente <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para o objeto ou a relação com a especificada <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
  remarks: "Use TryGetObjectStateEntry para retornar um <xref:System.Data.Objects.ObjectStateEntry>sem ter que lidar com o <xref:System.InvalidOperationException>gerado pelo <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29>método.</xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Data.EntityKey%29> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry>"
  example:
  - "The examples in this topic are based on the [AdventureWorks Sales Model](http://msdn.microsoft.com/en-us/f16cd988-673f-4376-b034-129ca93c7832).  \n  \n The example attempts to retrieve the corresponding <xref:System.Data.Objects.ObjectStateEntry> for the given <xref:System.Data.EntityKey>.  \n  \n [!code-vb[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#objectstatemanager)]\n [!code-cs[DP ObjectServices Concepts#ObjectStateManager](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#objectstatemanager)]  \n  \n The following example uses the TryGetObjectStateEntry method on the returned <xref:System.Data.Objects.ObjectStateManager> to get an object based on its entity key.  \n  \n [!code-vb[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/visualbasic/objectservicesconceptsvb/Source.vb#applyitemupdates)]\n [!code-cs[DP ObjectServices Concepts#ApplyItemUpdates](~/add/codesnippet/csharp/objectservicesconceptscs/Source.cs#applyitemupdates)]"
  syntax:
    content: public bool TryGetObjectStateEntry (System.Data.EntityKey key, out System.Data.Objects.ObjectStateEntry entry);
    parameters:
    - id: key
      type: System.Data.EntityKey
      description: "O determinado <xref href=&quot;System.Data.EntityKey&quot;> </xref>."
    - id: entry
      type: System.Data.Objects.ObjectStateEntry
      description: "Quando este método retorna, contém um <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para o determinado <xref href=&quot;System.Data.EntityKey&quot;> </xref> esse parâmetro é passado não inicializado."
    return:
      type: System.Boolean
      description: "Um valor booliano que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se não houver um correspondente <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para o determinado <xref href=&quot;System.Data.EntityKey&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic) valor é fornecido para <code> key </code>."
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  id: TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetObjectStateEntry(Object,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Tenta recuperar correspondente <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para <xref:System.Object>.</xref:System.Object> especificado"
  remarks: "Use o método TryGetObjectStateEntry para retornar um <xref:System.Data.Objects.ObjectStateEntry>sem ter que lidar com o <xref:System.InvalidOperationException>gerado pelo <xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29>método.</xref:System.Data.Objects.ObjectStateManager.GetObjectStateEntry%28System.Object%29> </xref:System.InvalidOperationException> </xref:System.Data.Objects.ObjectStateEntry>"
  syntax:
    content: public bool TryGetObjectStateEntry (object entity, out System.Data.Objects.ObjectStateEntry entry);
    parameters:
    - id: entity
      type: System.Object
      description: "O <xref:System.Object>ao qual recuperada <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> pertence.</xref:System.Object>"
    - id: entry
      type: System.Data.Objects.ObjectStateEntry
      description: "Quando este método retorna, contém o <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para o determinado <xref href=&quot;System.Data.EntityKey&quot;> </xref> esse parâmetro é passado não inicializado."
    return:
      type: System.Boolean
      description: "Um valor booliano que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se não houver um correspondente <xref href=&quot;System.Data.Objects.ObjectStateEntry&quot;> </xref> para o objeto fornecido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  id: TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  parent: System.Data.Objects.ObjectStateManager
  langs:
  - csharp
  name: TryGetRelationshipManager(Object,RelationshipManager)
  nameWithType: ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  fullName: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Objects
  summary: "Retorna o <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> que é usado pelo objeto especificado."
  remarks: "O <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>método é usado para obter o <xref:System.Data.Objects.DataClasses.RelationshipManager>para objetos com ignorância de persistência.</xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A> Quando objetos implementam <xref:System.Data.Objects.DataClasses.IEntityWithRelationships>ou herdar de <xref:System.Data.Objects.DataClasses.EntityObject>, o <xref:System.Data.Objects.DataClasses.RelationshipManager>é acessado a partir do <xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A>propriedade.</xref:System.Data.Objects.DataClasses.IEntityWithRelationships.RelationshipManager%2A> </xref:System.Data.Objects.DataClasses.RelationshipManager> </xref:System.Data.Objects.DataClasses.EntityObject> </xref:System.Data.Objects.DataClasses.IEntityWithRelationships>       O <xref:System.Data.Objects.DataClasses.RelationshipManager>não pode ser retornada quando o objeto está em um <xref:System.Data.EntityState>estado.</xref:System.Data.EntityState> </xref:System.Data.Objects.DataClasses.RelationshipManager>       Chamar o método TryGetRelationshipManager é o mesmo que chamar o <xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>método, exceto que este método retorna `false` em vez de gerar uma exceção.</xref:System.Data.Objects.ObjectStateManager.GetRelationshipManager%2A>"
  syntax:
    content: public bool TryGetRelationshipManager (object entity, out System.Data.Objects.DataClasses.RelationshipManager relationshipManager);
    parameters:
    - id: entity
      type: System.Object
      description: "O objeto para o qual retornar o <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref>."
    - id: relationshipManager
      type: System.Data.Objects.DataClasses.RelationshipManager
      description: "Quando este método retorna, contém o <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> para o `entity`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um <xref href=&quot;System.Data.Objects.DataClasses.RelationshipManager&quot;> </xref> instância foi retornada para fornecido <code> entity </code>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Objects.ObjectStateManager.#ctor(System.Data.Metadata.Edm.MetadataWorkspace)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManager(MetadataWorkspace)
  nameWithType: ObjectStateManager.ObjectStateManager(MetadataWorkspace)
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManager(MetadataWorkspace)
- uid: System.Data.Metadata.Edm.MetadataWorkspace
  parent: System.Data.Metadata.Edm
  isExternal: false
  name: MetadataWorkspace
  nameWithType: MetadataWorkspace
  fullName: System.Data.Metadata.Edm.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState(System.Object,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeObjectState(Object,EntityState)
  nameWithType: ObjectStateManager.ChangeObjectState(Object,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeObjectState(Object,EntityState)
- uid: System.Data.Objects.ObjectStateEntry
  parent: System.Data.Objects
  isExternal: false
  name: ObjectStateEntry
  nameWithType: ObjectStateEntry
  fullName: System.Data.Objects.ObjectStateEntry
- uid: System.Data.EntityState
  parent: System.Data
  isExternal: false
  name: EntityState
  nameWithType: EntityState
  fullName: System.Data.EntityState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(Object,Object,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,EntityState)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(System.Object,System.Object,System.String,System.String,System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(Object,Object,String,String,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(Object,Object,String,String,EntityState)
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState``1(``0,System.Object,System.Linq.Expressions.Expression{System.Func{``0,System.Object}},System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  nameWithType: ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
  fullName: System.Data.Objects.ObjectStateManager.ChangeRelationshipState(TEntity,Object,Expression<Func<TEntity,Object>>,EntityState)
- uid: TEntity
  isExternal: true
  name: TEntity
  nameWithType: TEntity
  fullName: TEntity
- uid: System.Linq.Expressions.Expression{System.Func{TEntity,System.Object}}
  parent: System.Linq.Expressions
  isExternal: true
  name: Expression<Func<TEntity,Object>>
  nameWithType: Expression<Func<TEntity,Object>>
  fullName: System.Linq.Expressions.Expression<System.Func<TEntity,System.Object>>
  spec.csharp:
  - uid: System.Linq.Expressions.Expression`1
    name: Expression
    nameWithType: Expression
    fullName: Expression<System.Func<TEntity,System.Object>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<TEntity,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: TEntity
    name: TEntity
    nameWithType: TEntity
    fullName: TEntity
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(System.Data.EntityState)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntries(EntityState)
  nameWithType: ObjectStateManager.GetObjectStateEntries(EntityState)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntries(EntityState)
- uid: System.Collections.Generic.IEnumerable{System.Data.Objects.ObjectStateEntry}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ObjectStateEntry>
  nameWithType: IEnumerable<ObjectStateEntry>
  fullName: System.Collections.Generic.IEnumerable<System.Data.Objects.ObjectStateEntry>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Data.Objects.ObjectStateEntry>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Data.Objects.ObjectStateEntry
    name: ObjectStateEntry
    nameWithType: ObjectStateEntry
    fullName: ObjectStateEntry
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Data.EntityKey)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry(EntityKey)
  nameWithType: ObjectStateManager.GetObjectStateEntry(EntityKey)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(EntityKey)
- uid: System.Data.EntityKey
  parent: System.Data
  isExternal: false
  name: EntityKey
  nameWithType: EntityKey
  fullName: System.Data.EntityKey
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry(Object)
  nameWithType: ObjectStateManager.GetObjectStateEntry(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetObjectStateEntry(Object)
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager(System.Object)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetRelationshipManager(Object)
  nameWithType: ObjectStateManager.GetRelationshipManager(Object)
  fullName: System.Data.Objects.ObjectStateManager.GetRelationshipManager(Object)
- uid: System.Data.Objects.DataClasses.RelationshipManager
  parent: System.Data.Objects.DataClasses
  isExternal: false
  name: RelationshipManager
  nameWithType: RelationshipManager
  fullName: System.Data.Objects.DataClasses.RelationshipManager
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
  fullName: System.Data.Objects.ObjectStateManager.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManagerChanged
  nameWithType: ObjectStateManager.ObjectStateManagerChanged
  fullName: System.Data.Objects.ObjectStateManager.ObjectStateManagerChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Data.EntityKey,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(EntityKey,ObjectStateEntry)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(System.Object,System.Data.Objects.ObjectStateEntry@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry(Object,ObjectStateEntry)
  nameWithType: ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
  fullName: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry(Object,ObjectStateEntry)
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(System.Object,System.Data.Objects.DataClasses.RelationshipManager@)
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetRelationshipManager(Object,RelationshipManager)
  nameWithType: ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
  fullName: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager(Object,RelationshipManager)
- uid: System.Data.Objects.ObjectStateManager.#ctor*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ObjectStateManager
  nameWithType: ObjectStateManager.ObjectStateManager
- uid: System.Data.Objects.ObjectStateManager.ChangeObjectState*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeObjectState
  nameWithType: ObjectStateManager.ChangeObjectState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState
  nameWithType: ObjectStateManager.ChangeRelationshipState
- uid: System.Data.Objects.ObjectStateManager.ChangeRelationshipState<TEntity>*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: ChangeRelationshipState<TEntity>
  nameWithType: ObjectStateManager.ChangeRelationshipState<TEntity>
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntries*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntries
  nameWithType: ObjectStateManager.GetObjectStateEntries
- uid: System.Data.Objects.ObjectStateManager.GetObjectStateEntry*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetObjectStateEntry
  nameWithType: ObjectStateManager.GetObjectStateEntry
- uid: System.Data.Objects.ObjectStateManager.GetRelationshipManager*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: GetRelationshipManager
  nameWithType: ObjectStateManager.GetRelationshipManager
- uid: System.Data.Objects.ObjectStateManager.MetadataWorkspace*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: MetadataWorkspace
  nameWithType: ObjectStateManager.MetadataWorkspace
- uid: System.Data.Objects.ObjectStateManager.TryGetObjectStateEntry*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetObjectStateEntry
  nameWithType: ObjectStateManager.TryGetObjectStateEntry
- uid: System.Data.Objects.ObjectStateManager.TryGetRelationshipManager*
  parent: System.Data.Objects.ObjectStateManager
  isExternal: false
  name: TryGetRelationshipManager
  nameWithType: ObjectStateManager.TryGetRelationshipManager
