### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  id: SupportedAddressingMode
  children:
  - System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  - System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  - System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  langs:
  - csharp
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
  type: Enum
  summary: "Especifica se um serviço oferece suporte a respostas de enviadas para endereços anônimos apenas, somente endereços não anônimas, ou em ambos."
  remarks: "Essa enumeração é usada para especificar a capacidade de um servidor, que, por sua vez, impõe uma necessidade em seus clientes.       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]tem uma variedade de controles de endereçamento para especificar onde as mensagens devem ser enviadas. Por exemplo, há lógico <xref:System.ServiceModel.Channels.MessageHeaders.To%2A>endereço para o destino da mensagem, físico endereço, usado pelo transporte, em que um serviço de escuta, (&quot;Via&quot;) e o <xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A>endereço do ponto de extremidade que fornece o endereço do ponto de extremidade de cliente.</xref:System.ServiceModel.Channels.MessageHeaders.ReplyTo%2A> </xref:System.ServiceModel.Channels.MessageHeaders.To%2A>       No caso mais básico, quando duas partes da trocam de mensagens entre si só, não é necessário especificar esses endereços separadamente. Mas como trocas podem envolver outros destinos de mensagens, você deve ser capaz de especificar quando os endereços devem ser fornecidos explicitamente. Até mesmo entre apenas duas partes essa capacidade às vezes é necessária, como com HTTP dupla onde o servidor deve criar sua própria solicitação HTTP. Os seguintes tipos de relações são definidos pela enumeração SupportedAddressingMode para capturar esses padrões de mensagens:-endereços anônimos são a forma mais básica de endereçamento. Endereçamento anônima é usada quando há um caminho padrão para uma resposta. O TCP é um transporte de comunicação bidirecional e a resposta a uma mensagem TCP pode ser enviada para o outro lado do soquete que enviou a mensagem original. Da mesma forma, o modelo de solicitação-resposta de HTTP envia respostas por meio do canal de resposta HTTP. Nenhuma dessas respostas requer a especificação de onde as mensagens de resposta serão. Quando um servidor requer anônimas respostas do cliente, ele usa o valor anônimo da enumeração. O [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] fornecido pelo sistema <xref:System.ServiceModel.NetTcpBinding>, <xref:System.ServiceModel.BasicHttpBinding>e <xref:System.ServiceModel.WSHttpBinding>associações sempre usam endereços anônimos.</xref:System.ServiceModel.WSHttpBinding> </xref:System.ServiceModel.BasicHttpBinding> </xref:System.ServiceModel.NetTcpBinding>      -Endereços anônimos são usados ao enviar a resposta requer a criação de um novo canal de comunicação. O [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] fornecido pelo sistema <xref:System.ServiceModel.WSDualHttpBinding>associação usa um endereço não anônimos.</xref:System.ServiceModel.WSDualHttpBinding> Com dois HTTP, o cliente cria uma solicitação HTTP para enviar uma mensagem e, em seguida, o servidor deve criar sua própria solicitação HTTP para enviar uma resposta. Porque o servidor está iniciando o envio, ele deve ter um ponto de extremidade específico para estabelecer a conexão. Você deve fornecer o endereço de um ponto de extremidade do servidor para sua resposta. Da mesma forma, se um serviço deve responder a uma mensagem unidirecional que recebeu, ele também requer um não anônimos endereço porque não há nenhum canal de retorno disponível para comunicação. Se o servidor envia uma mensagem, é necessária uma operação completamente separada daquele usado para enviar a primeira mensagem.      -Misto é uma terceira forma de endereçamento que combina endereços anônimo e não anônimos, dependendo da mensagem que está sendo enviado. Um exemplo típico de endereçamento de modo misto é o uso de um computador dedicado para processamento de mensagens de confirmação ou de falha. Se a sequência padrão do exchange para respostas HTTP ou TCP, as respostas usam endereçamento anônima mas as falhas usam endereçamento não anônimas. Enquanto [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] não fornece Mixed abordar a funcionalidade de uma das suas associações padrão, é possível gravar um canal que permite que o serviço enviar respostas diretamente no back-channel (quando o endereço de resposta é anônimo) ou em um canal separado (quando o endereço de resposta não anônimos). Nesse caso, o elemento de associação do canal é usado para setSupportedAddressingMode como Mixed."
  syntax:
    content: public enum SupportedAddressingMode
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  id: Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "O servidor só oferece suporte a endereços anônimos e clientes devem fornecer um endereço de resposta anônimo."
  syntax:
    content: Anonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  id: Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "O servidor dá suporte a endereços anônimos e não anônima e os clientes podem optar por usar um ou ambos."
  syntax:
    content: Mixed
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  id: NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  langs:
  - csharp
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  type: Field
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Channels
  summary: "O servidor só oferece suporte a endereços não anônimas e clientes devem fornecer um endereço de resposta não anônimas."
  syntax:
    content: NonAnonymous
    return:
      type: System.ServiceModel.Channels.SupportedAddressingMode
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Anonymous
  nameWithType: SupportedAddressingMode.Anonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Anonymous
- uid: System.ServiceModel.Channels.SupportedAddressingMode
  parent: System.ServiceModel.Channels
  isExternal: false
  name: SupportedAddressingMode
  nameWithType: SupportedAddressingMode
  fullName: System.ServiceModel.Channels.SupportedAddressingMode
- uid: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: Mixed
  nameWithType: SupportedAddressingMode.Mixed
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.Mixed
- uid: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
  parent: System.ServiceModel.Channels.SupportedAddressingMode
  isExternal: false
  name: NonAnonymous
  nameWithType: SupportedAddressingMode.NonAnonymous
  fullName: System.ServiceModel.Channels.SupportedAddressingMode.NonAnonymous
