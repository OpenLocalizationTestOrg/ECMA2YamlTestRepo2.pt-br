### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.IWebEditable
  id: IWebEditable
  children:
  - System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts
  - System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
  langs:
  - csharp
  name: IWebEditable
  nameWithType: IWebEditable
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable
  type: Interface
  summary: "Fornece uma interface para os desenvolvedores especifiquem controles de edição personalizados que são associados com um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controle."
  remarks: "A interface IWebEditable permite que você associe personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles com um controle de servidor – como um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle, um controle de usuário ou um controle de servidor personalizado.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> O <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles contidos com um <xref:System.Web.UI.WebControls.WebParts.EditorZone>controle e esta zona com seus controles de edição fornece aos usuários finais uma interface de usuário (UI) para modificar as propriedades, a aparência e comportamento de associado <xref:System.Web.UI.WebControls.WebParts.WebPart>controle.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorZone> </xref:System.Web.UI.WebControls.WebParts.EditorPart>       A interface de IWebEditable inclui dois membros expostos. O <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A>propriedade fornece uma maneira de <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles para obter uma referência para o controle de servidor associado.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> O <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>método é usado para criar uma instância de cada personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart>controle associado a um controle de servidor e retorná-los como uma coleção.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>       A interface IWebEditable já foi implementada na base <xref:System.Web.UI.WebControls.WebParts.WebPart>de classe, embora por padrão essa implementação não associar qualquer personalizados <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles com a <xref:System.Web.UI.WebControls.WebParts.WebPart>classe.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart> Para associar um derivado <xref:System.Web.UI.WebControls.WebParts.WebPart>controle personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles, você pode substituir o <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A>método.</xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates how to override the methods of the IWebEditable interface in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control, which then creates an instance of a custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> control when the <xref:System.Web.UI.WebControls.WebParts.WebPart> control enters edit mode.  \n  \n This example has four parts:  \n  \n-   The code for the custom class.  \n  \n-   The Web page that hosts the custom control.  \n  \n-   A user control that switches the page into edit mode.  \n  \n-   A description of how the example works in a browser.  \n  \n The first part of the code example is the custom `TextDisplayWebPart` class. Notice that the class derives from the <xref:System.Web.UI.WebControls.WebParts.WebPart> class and implements the IWebEditable interface, providing specific implementations for the <xref:System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts%2A> method and the <xref:System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject%2A> property. Notice also that nested within the `TextDisplayWebPart` class is a private, custom `TextDisplayEditorPart` class that derives from the base <xref:System.Web.UI.WebControls.WebParts.EditorPart> class. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. For a walkthrough that demonstrates both methods of compiling, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[WebParts_IWebEditable_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_204_1.vb)]\n [!code-cs[WebParts_IWebEditable_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_204_1.cs)]  \n  \n The second part of the code example is a Web page that hosts the custom control. Notice that although an <xref:System.Web.UI.WebControls.WebParts.EditorZone> control is declared in the markup of the page, the custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> control need not be referenced there, because it can be added programmatically at run time.  \n  \n [!code-vb[WebParts_IWebEditable_Overview#7](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_204_2.aspx)]\n [!code-cs[WebParts_IWebEditable_Overview#7](~/add/codesnippet/csharp/t-system.web.ui.webcontr_204_2.aspx)]  \n  \n The third part of the code example is a user control that enables a user to switch the page into edit mode. Notice that the user control is referenced in the hosting Web page. For a full description of how to create this user control, see [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_IWebEditable_Overview#8](~/add/codesnippet/csharp/t-system.web.ui.webcontr_204_3.ascx)]\n [!code-vb[WebParts_IWebEditable_Overview#8](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_204_3.ascx)]  \n  \n To run the code example, load the hosting Web page in a browser, add some text to the text box, and click the **Set Label Content** button to update the label in the control. To switch the page into edit mode, select **Edit** from the drop-down list containing the display modes. To display the UI from the custom `TextDisplayEditorPart` control, click the verbs menu drop-down arrow on the `TextDisplayWebPart` control, and select **Edit**. In the editing UI, you can use the drop-down list containing the font styles to update the text style for the label in the `TextDisplayWebPart` control. You must click **Browse Mode** in the display modes drop-down list to return the page to normal view and confirm that the text in the label now has the font style you selected while in edit mode."
  syntax:
    content: public interface IWebEditable
  implements: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts
  id: CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  langs:
  - csharp
  name: CreateEditorParts()
  nameWithType: IWebEditable.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Retorna uma coleção de personalizado <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controles associados a um controle de servidor que implementa o <xref href=&quot;System.Web.UI.WebControls.WebParts.IWebEditable&quot;> </xref> interface."
  remarks: "O método CreateEditorParts permite que você crie uma coleção de todos os personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles associados ao seu controle personalizado, <xref:System.Web.UI.WebControls.WebParts.WebPart>controle ou usuário controlar e retorná-los como um <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>objeto.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart> O <xref:System.Web.UI.WebControls.WebParts.WebPartManager>usa a coleção de controle e cria instâncias de todos os <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles sempre que o controle de servidor entra em modo de edição.</xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.WebPartManager>       Normalmente você implementar esse método em um personalizado <xref:System.Web.UI.WebControls.WebParts.WebPart>controle substituindo seu <xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A>método.</xref:System.Web.UI.WebControls.WebParts.WebPart.CreateEditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart> No método, você cria instâncias de personalizado <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles que você deseja associar as controles, adicioná-las a um <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection>de objeto e, em seguida, retornar esse objeto.</xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> </xref:System.Web.UI.WebControls.WebParts.EditorPart> A coleção de <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles é então atribuído ao <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>propriedade o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase>zona.</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase> </xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart>      > [!NOTE] > Qualquer <xref:System.Web.UI.WebControls.WebParts.EditorPart>que é adicionado à coleção de <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles em uma implementação do método CreateEditorParts devem ter um valor atribuído à sua propriedade ID, caso contrário, uma exceção será lançada quando a coleção é atribuída para o <xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A>propriedade.</xref:System.Web.UI.WebControls.WebParts.EditorZoneBase.EditorParts%2A> </xref:System.Web.UI.WebControls.WebParts.EditorPart> </xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates an override of the CreateEditorParts method in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. The complete source code required to run the sample is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> class overview topic.  \n  \n The code example contains both members of the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface. Note that the override of the CreateEditorParts method creates an <xref:System.Collections.ArrayList> to collect one or more custom <xref:System.Web.UI.WebControls.WebParts.EditorPart> controls, and then uses the list to create the <xref:System.Web.UI.WebControls.WebParts.EditorPartCollection> object.  \n  \n [!code-vb[WebParts_IWebEditable_Overview#4](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_112_1.vb)]\n [!code-cs[WebParts_IWebEditable_Overview#4](~/add/codesnippet/csharp/m-system.web.ui.webcontr_112_1.cs)]"
  syntax:
    content: public System.Web.UI.WebControls.WebParts.EditorPartCollection CreateEditorParts ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.WebParts.EditorPartCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPartCollection&quot;> </xref> que contém a coleção de personalizado <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controles associados a um controle de servidor."
  overload: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
  id: WebBrowsableObject
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  langs:
  - csharp
  name: WebBrowsableObject
  nameWithType: IWebEditable.WebBrowsableObject
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controle, controle de usuário ou um controle personalizado que será editado por <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controles."
  remarks: "A propriedade WebBrowsableObject fornece uma maneira de <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles para obter uma referência para os controles de servidor que estão associados.</xref:System.Web.UI.WebControls.WebParts.EditorPart>       Embora a propriedade em si é somente leitura, permite que a referência de objeto que ela retorna <xref:System.Web.UI.WebControls.WebParts.EditorPart>controles para alterar os valores no controle do servidor.</xref:System.Web.UI.WebControls.WebParts.EditorPart>"
  example:
  - "The following code example demonstrates how the WebBrowsableObject property can be overridden in a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. The complete source code required to run the example is found in the Example section of the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> class overview topic.  \n  \n The code example overrides both members of the <xref:System.Web.UI.WebControls.WebParts.IWebEditable> interface.  \n  \n [!code-vb[WebParts_IWebEditable_Overview#4](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_329_1.vb)]\n [!code-cs[WebParts_IWebEditable_Overview#4](~/add/codesnippet/csharp/p-system.web.ui.webcontr_329_1.cs)]"
  syntax:
    content: public object WebBrowsableObject { get; }
    return:
      type: System.Object
      description: "Uma referência de objeto para o controle associado a um <xref href=&quot;System.Web.UI.WebControls.WebParts.EditorPart&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  isExternal: false
  name: CreateEditorParts()
  nameWithType: IWebEditable.CreateEditorParts()
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts()
- uid: System.Web.UI.WebControls.WebParts.EditorPartCollection
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: EditorPartCollection
  nameWithType: EditorPartCollection
  fullName: System.Web.UI.WebControls.WebParts.EditorPartCollection
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  isExternal: false
  name: WebBrowsableObject
  nameWithType: IWebEditable.WebBrowsableObject
  fullName: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.CreateEditorParts*
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  isExternal: false
  name: CreateEditorParts
  nameWithType: IWebEditable.CreateEditorParts
- uid: System.Web.UI.WebControls.WebParts.IWebEditable.WebBrowsableObject*
  parent: System.Web.UI.WebControls.WebParts.IWebEditable
  isExternal: false
  name: WebBrowsableObject
  nameWithType: IWebEditable.WebBrowsableObject
