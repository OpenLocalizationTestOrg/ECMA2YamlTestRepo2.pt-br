### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Construction.ProjectItemGroupElement
  id: ProjectItemGroupElement
  children:
  - Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(System.String,System.String)
  - Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Microsoft.Build.Construction.ProjectItemGroupElement.Items
  langs:
  - csharp
  name: ProjectItemGroupElement
  nameWithType: ProjectItemGroupElement
  fullName: Microsoft.Build.Construction.ProjectItemGroupElement
  type: Class
  summary: "Representa um [elemento ItemGroup (MSBuild)](~/add/includes/ajax-current-ext-md.md) em um projeto do MSBuild."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("#Items={Count} Condition={Condition} Label={Label}")]

      public class ProjectItemGroupElement : Microsoft.Build.Construction.ProjectElementContainer
  inheritance:
  - System.Object
  - Microsoft.Build.Construction.ProjectElement
  - Microsoft.Build.Construction.ProjectElementContainer
  implements: []
  inheritedMembers:
  - Microsoft.Build.Construction.ProjectElement.AllParents
  - Microsoft.Build.Construction.ProjectElement.Condition
  - Microsoft.Build.Construction.ProjectElement.ConditionLocation
  - Microsoft.Build.Construction.ProjectElement.ContainingProject
  - Microsoft.Build.Construction.ProjectElement.Label
  - Microsoft.Build.Construction.ProjectElement.LabelLocation
  - Microsoft.Build.Construction.ProjectElement.Location
  - Microsoft.Build.Construction.ProjectElement.NextSibling
  - Microsoft.Build.Construction.ProjectElement.Parent
  - Microsoft.Build.Construction.ProjectElement.PreviousSibling
  - Microsoft.Build.Construction.ProjectElementContainer.AllChildren
  - Microsoft.Build.Construction.ProjectElementContainer.AppendChild(Microsoft.Build.Construction.ProjectElement)
  - Microsoft.Build.Construction.ProjectElementContainer.Children
  - Microsoft.Build.Construction.ProjectElementContainer.ChildrenReversed
  - Microsoft.Build.Construction.ProjectElementContainer.Count
  - Microsoft.Build.Construction.ProjectElementContainer.FirstChild
  - Microsoft.Build.Construction.ProjectElementContainer.InsertAfterChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  - Microsoft.Build.Construction.ProjectElementContainer.InsertBeforeChild(Microsoft.Build.Construction.ProjectElement,Microsoft.Build.Construction.ProjectElement)
  - Microsoft.Build.Construction.ProjectElementContainer.LastChild
  - Microsoft.Build.Construction.ProjectElementContainer.PrependChild(Microsoft.Build.Construction.ProjectElement)
  - Microsoft.Build.Construction.ProjectElementContainer.RemoveAllChildren
  - Microsoft.Build.Construction.ProjectElementContainer.RemoveChild(Microsoft.Build.Construction.ProjectElement)
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(System.String,System.String)
  id: AddItem(System.String,System.String)
  parent: Microsoft.Build.Construction.ProjectItemGroupElement
  langs:
  - csharp
  name: AddItem(String,String)
  nameWithType: ProjectItemGroupElement.AddItem(String,String)
  fullName: Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Adiciona um novo item ao grupo de itens. Itens são ordenados primeiro por nome de elemento do item e, em seguida, pelo atributo Include."
  remarks: "Esse método de conveniência escolhe um local no DOM MSBuild com base em uma heurística."
  syntax:
    content: public Microsoft.Build.Construction.ProjectItemElement AddItem (string itemType, string include);
    parameters:
    - id: itemType
      type: System.String
      description: "Nome do elemento item do item a ser adicionado."
    - id: include
      type: System.String
      description: "Inclua o atributo do item a ser adicionado."
    return:
      type: Microsoft.Build.Construction.ProjectItemElement
      description: "Retorna o novo elemento de item."
  overload: Microsoft.Build.Construction.ProjectItemGroupElement.AddItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Construction.ProjectItemGroupElement
  langs:
  - csharp
  name: AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: ProjectItemGroupElement.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Adiciona um novo item com metadados para o grupo de itens. Itens são ordenados primeiro por nome de elemento do item e, em seguida, pelo atributo Include."
  remarks: "O `Metadata` parâmetro pode ser nulo, que indica que nenhum metadado está presente."
  syntax:
    content: public Microsoft.Build.Construction.ProjectItemElement AddItem (string itemType, string include, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> metadata);
    parameters:
    - id: itemType
      type: System.String
      description: "Nome do elemento item do item a ser adicionado."
    - id: include
      type: System.String
      description: "Inclua o atributo do item a ser adicionado."
    - id: metadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: "Metadados a ser adicionado."
    return:
      type: Microsoft.Build.Construction.ProjectItemElement
      description: "Retorna o novo elemento de item."
  overload: Microsoft.Build.Construction.ProjectItemGroupElement.AddItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Construction.ProjectItemGroupElement.Items
  id: Items
  parent: Microsoft.Build.Construction.ProjectItemGroupElement
  langs:
  - csharp
  name: Items
  nameWithType: ProjectItemGroupElement.Items
  fullName: Microsoft.Build.Construction.ProjectItemGroupElement.Items
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Construction
  summary: "Obtém todos os itens filho."
  remarks: "A coleção pode ser modificada durante a enumeração."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemElement> Items { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectItemElement}
      description: "Retorna todos os itens filho."
  overload: Microsoft.Build.Construction.ProjectItemGroupElement.Items*
  exceptions: []
  platform:
  - net462
references:
- uid: Microsoft.Build.Construction.ProjectElementContainer
  isExternal: false
  name: Microsoft.Build.Construction.ProjectElementContainer
- uid: Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(System.String,System.String)
  parent: Microsoft.Build.Construction.ProjectItemGroupElement
  isExternal: false
  name: AddItem(String,String)
  nameWithType: ProjectItemGroupElement.AddItem(String,String)
  fullName: Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(String,String)
- uid: Microsoft.Build.Construction.ProjectItemElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectItemElement
  nameWithType: ProjectItemElement
  fullName: Microsoft.Build.Construction.ProjectItemElement
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Construction.ProjectItemGroupElement
  isExternal: false
  name: AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: ProjectItemGroupElement.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Construction.ProjectItemGroupElement.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,String>>
  nameWithType: IEnumerable<KeyValuePair<String,String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Construction.ProjectItemGroupElement.Items
  parent: Microsoft.Build.Construction.ProjectItemGroupElement
  isExternal: false
  name: Items
  nameWithType: ProjectItemGroupElement.Items
  fullName: Microsoft.Build.Construction.ProjectItemGroupElement.Items
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Construction.ProjectItemElement}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectItemElement>
  nameWithType: ICollection<ProjectItemElement>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Construction.ProjectItemElement>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Construction.ProjectItemElement>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Construction.ProjectItemElement
    name: ProjectItemElement
    nameWithType: ProjectItemElement
    fullName: ProjectItemElement
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Construction.ProjectItemGroupElement.AddItem*
  parent: Microsoft.Build.Construction.ProjectItemGroupElement
  isExternal: false
  name: AddItem
  nameWithType: ProjectItemGroupElement.AddItem
- uid: Microsoft.Build.Construction.ProjectItemGroupElement.Items*
  parent: Microsoft.Build.Construction.ProjectItemGroupElement
  isExternal: false
  name: Items
  nameWithType: ProjectItemGroupElement.Items
