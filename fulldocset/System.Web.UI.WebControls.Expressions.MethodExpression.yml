### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Expressions.MethodExpression
  id: MethodExpression
  children:
  - System.Web.UI.WebControls.Expressions.MethodExpression.#ctor
  - System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(System.Linq.IQueryable)
  - System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound
  - System.Web.UI.WebControls.Expressions.MethodExpression.MethodName
  - System.Web.UI.WebControls.Expressions.MethodExpression.TypeName
  langs:
  - csharp
  name: MethodExpression
  nameWithType: MethodExpression
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression
  type: Class
  summary: "Fornece uma maneira de especificar uma consulta LINQ personalizada que é definida em um método."
  remarks: "O <xref:System.Web.UI.WebControls.QueryExtender>controle oferece suporte a consultas LINQ personalizadas.</xref:System.Web.UI.WebControls.QueryExtender> Você pode definir uma consulta LINQ personalizada em um método e usar a opção de filtro MethodExpression para invocar a consulta a <xref:System.Web.UI.WebControls.QueryExtender>controle.</xref:System.Web.UI.WebControls.QueryExtender>       O método que contém a consulta LINQ personalizada deve atender aos seguintes critérios:-o método deve ser estático (`Shared` no Visual Basic). O primeiro parâmetro deve ser um <xref:System.Linq.IQueryable%601>ou <xref:System.Collections.Generic.IEnumerable%601>objeto.</xref:System.Collections.Generic.IEnumerable%601> </xref:System.Linq.IQueryable%601> O método pode ter mais de um parâmetro.      -O valor de retorno não é possível alterar o <xref:System.Linq.IQueryable%601>ou <xref:System.Collections.Generic.IEnumerable%601>tipo consultado.</xref:System.Collections.Generic.IEnumerable%601> </xref:System.Linq.IQueryable%601>       As pesquisas MethodExpression para o método que contém a consulta na seguinte ordem: 1.  Se um <xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A>propriedade é especificada no <xref:System.Web.UI.WebControls.QueryExtender>controle, o objeto MethodExpression procura o método no tipo especificado.</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.MethodExpression.TypeName%2A>      2.  Se a fonte de dados implementa <xref:System.Web.DynamicData.IDynamicDataSource>, o método é para o método do tipo de contexto (<xref:System.Data.Linq.DataContext> ou <xref:System.Data.Objects.ObjectContext>objeto.)</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Linq.DataContext> </xref:System.Web.DynamicData.IDynamicDataSource>      3.  O método procura o método em um modelo de controle, na classe base para a página ou em um controle de usuário.       A classe MethodExpression é semelhante a <xref:System.Web.UI.WebControls.Expressions.CustomExpression>classe exceto que a expressão de método é executado em resposta a uma chamada de método e a expressão personalizada é executada em resposta a um evento.</xref:System.Web.UI.WebControls.Expressions.CustomExpression>"
  example:
  - "The following example shows how to search the ListPrice field of the Products table in the AdventureWorks database for products that have a list price of 400 or more. This example shows how to create a custom LINQ query in a method in page code and how to invoke the method in the <xref:System.Web.UI.WebControls.QueryExtender> control.  \n  \n [Visual Basic]  \n  \n```  \nPublic Shared Function FilterStandardPrice(ByVal query As _  \n        IQueryable(Of Product)) As IQueryable(Of Product)  \n        Return From p In query _  \n            Where p.ListPrice >= 400 _  \n            Select p  \n    End Function  \n```  \n  \n [C#]  \n  \n```  \npublic static IQueryable<Product>   \n        FilterStandardPrice(IQueryable<Product> query)  \n{  \n        return from p in query  \n                  where p.ListPrice >= 400  \n                  select p;  \n  \n    }  \n```  \n  \n The following example shows how to call the method in the page.  \n  \n```  \n<html>  \n<head runat=\"server\">  \n  <title>Custom Filter</title>  \n</head>  \n<body>  \n  <form id=\"form1\" runat=\"server\">  \n    <asp:LinqDataSource ID=\"LinqDataSource1\" runat=\"server\"   \n        ContextTypeName=\"AdventureworksDataContext\" EntityTypeName=\"\"   \n        TableName=\"Products\">  \n    </asp:LinqDataSource>  \n  \n    <asp:QueryExtender ID=\"QueryExtender1\" runat=\"server\"   \n        TargetControlID=\"LinqDataSource1\">  \n      <asp:MethodExpression MethodName=\"FilterStandardPrice\" >  \n      </asp:MethodExpression>  \n    </asp:QueryExtender>  \n  \n    <asp:GridView ID=\"GridView1\" runat=\"server\"   \n        DataSourceID=\"LinqDataSource1\"   \n        DataKeyNames=\"ProductID\"   \n    </asp:GridView>  \n  </form>  \n</body>  \n</html>  \n```"
  syntax:
    content: 'public class MethodExpression : System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Expressions.DataSourceExpression
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Context
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.DataSource
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.Owner
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.SetDirty
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Expressions.DataSourceExpression.ViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.Parameters
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SaveViewState
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.SetContext(System.Web.UI.Control,System.Web.HttpContext,System.Web.UI.WebControls.IQueryableDataSource)
  - System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression.TrackViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  langs:
  - csharp
  name: MethodExpression()
  nameWithType: MethodExpression.MethodExpression()
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.MethodExpression()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.Expressions.MethodExpression&quot;> </xref> classe."
  syntax:
    content: public MethodExpression ();
    parameters: []
  overload: System.Web.UI.WebControls.Expressions.MethodExpression.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(System.Linq.IQueryable)
  id: GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  langs:
  - csharp
  name: GetQueryable(IQueryable)
  nameWithType: MethodExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(IQueryable)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "A expressão é resolvido usando especificado <xref:System.Linq.IQueryable>objeto.</xref:System.Linq.IQueryable>"
  syntax:
    content: public override System.Linq.IQueryable GetQueryable (System.Linq.IQueryable source);
    parameters:
    - id: source
      type: System.Linq.IQueryable
      description: "O controle da fonte de dados a ser usado."
    return:
      type: System.Linq.IQueryable
      description: "Uma instância do <xref:System.Linq.IQueryable>objeto que foi usado para resolver a expressão.</xref:System.Linq.IQueryable>"
  overload: System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O controle de fonte de dados é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método não foi encontrado.       - ou - o método não é estático.       o tipo de transmitido - ou - <xref uid=&quot;langword_csharp_IQuerable&lt;T&gt;&quot; name=&quot;IQuerable&lt;T&gt;&quot; href=&quot;&quot;> </xref> o objeto foi alterado."
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound
  id: IgnoreIfNotFound
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  langs:
  - csharp
  name: IgnoreIfNotFound
  nameWithType: MethodExpression.IgnoreIfNotFound
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Obtém ou define um valor que indica se a expressão deve ser ignorada."
  remarks: "O <xref:System.Web.UI.WebControls.Expressions.MethodExpression>objeto procura por um método que contém a consulta de busca em locais específicos e pesquisando em uma ordem específica.</xref:System.Web.UI.WebControls.Expressions.MethodExpression> Você pode definir essa propriedade `false` para lançar uma exceção se o <xref:System.Web.UI.WebControls.Expressions.CustomExpression>objeto não localizar um método que contém um LINQ.</xref:System.Web.UI.WebControls.Expressions.CustomExpression>"
  syntax:
    content: public bool IgnoreIfNotFound { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a expressão for ignorada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.MethodName
  id: MethodName
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  langs:
  - csharp
  name: MethodName
  nameWithType: MethodExpression.MethodName
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.MethodName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Obtém ou define o nome do método que contém uma consulta LINQ personalizada."
  remarks: "O <xref:System.Web.UI.WebControls.Expressions.MethodExpression>objeto permite que você chame uma consulta LINQ personalizada que é definida em um método.</xref:System.Web.UI.WebControls.Expressions.MethodExpression> Especifique o método de <xref:System.Web.UI.WebControls.QueryExtender>controle na página.</xref:System.Web.UI.WebControls.QueryExtender>"
  example:
  - "The following example shows how to specify the `FilterStandardPrice` method in the <xref:System.Web.UI.WebControls.QueryExtender> control. The custom LINQ query is defined in a `FilterStandardPrice` method.  \n  \n```  \n<asp:QueryExtender ID=\"QueryExtender1\" runat=\"server\"   \n    TargetControlID=\"LinqDataSource1\">  \n  <asp:MethodExpression MethodName=\"FilterStandardPrice\">  \n  </asp:MethodExpression>  \n  </asp:QueryExtender>  \n```"
  syntax:
    content: public string MethodName { get; set; }
    return:
      type: System.String
      description: "O nome do método que contém a consulta LINQ personalizada."
  overload: System.Web.UI.WebControls.Expressions.MethodExpression.MethodName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.TypeName
  id: TypeName
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  langs:
  - csharp
  name: TypeName
  nameWithType: MethodExpression.TypeName
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.TypeName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI.WebControls.Expressions
  summary: "Obtém ou define a classe cujo método contém a consulta personalizada."
  remarks: "O <xref:System.Web.UI.WebControls.Expressions.MethodExpression>classe permite que você especifique uma expressão personalizada para uma fonte de dados a <xref:System.Web.UI.WebControls.QueryExtender>controle.</xref:System.Web.UI.WebControls.QueryExtender> </xref:System.Web.UI.WebControls.Expressions.MethodExpression> Você pode usar a propriedade TypeName para especificar a classe à qual pertence o método."
  syntax:
    content: public string TypeName { get; set; }
    return:
      type: System.String
      description: "A classe que o método é membro."
  overload: System.Web.UI.WebControls.Expressions.MethodExpression.TypeName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
  isExternal: false
  name: System.Web.UI.WebControls.Expressions.ParameterDataSourceExpression
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.#ctor
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: MethodExpression()
  nameWithType: MethodExpression.MethodExpression()
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.MethodExpression()
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(System.Linq.IQueryable)
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: GetQueryable(IQueryable)
  nameWithType: MethodExpression.GetQueryable(IQueryable)
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable(IQueryable)
- uid: System.Linq.IQueryable
  parent: System.Linq
  isExternal: true
  name: IQueryable
  nameWithType: IQueryable
  fullName: System.Linq.IQueryable
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: IgnoreIfNotFound
  nameWithType: MethodExpression.IgnoreIfNotFound
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.MethodName
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: MethodName
  nameWithType: MethodExpression.MethodName
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.MethodName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.TypeName
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: TypeName
  nameWithType: MethodExpression.TypeName
  fullName: System.Web.UI.WebControls.Expressions.MethodExpression.TypeName
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.#ctor*
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: MethodExpression
  nameWithType: MethodExpression.MethodExpression
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.GetQueryable*
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: GetQueryable
  nameWithType: MethodExpression.GetQueryable
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.IgnoreIfNotFound*
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: IgnoreIfNotFound
  nameWithType: MethodExpression.IgnoreIfNotFound
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.MethodName*
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: MethodName
  nameWithType: MethodExpression.MethodName
- uid: System.Web.UI.WebControls.Expressions.MethodExpression.TypeName*
  parent: System.Web.UI.WebControls.Expressions.MethodExpression
  isExternal: false
  name: TypeName
  nameWithType: MethodExpression.TypeName
