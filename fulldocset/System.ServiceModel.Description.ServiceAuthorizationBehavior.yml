### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior
  id: ServiceAuthorizationBehavior
  children:
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  - System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  langs:
  - csharp
  name: ServiceAuthorizationBehavior
  nameWithType: ServiceAuthorizationBehavior
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior
  type: Class
  summary: "Fornece propriedades relacionadas ao comportamento de autorização de serviço."
  remarks: "A autorização ocorre no nível de serviço e no nível da operação. Essa classe contém propriedades relacionadas à autorização no nível de serviço."
  syntax:
    content: 'public sealed class ServiceAuthorizationBehavior : System.ServiceModel.Description.IServiceBehavior'
  inheritance:
  - System.Object
  implements:
  - System.ServiceModel.Description.IServiceBehavior
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ServiceAuthorizationBehavior()
  nameWithType: ServiceAuthorizationBehavior.ServiceAuthorizationBehavior()
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationBehavior()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Description.ServiceAuthorizationBehavior&quot;> </xref> classe."
  remarks: "Normalmente, aplicativos não chame o construtor diretamente. Em vez disso, eles recuperarem uma instância dessa classe chamando `ServiceHostBase.Description.Behaviors.Find<ServiceAuthorizationBehavior>`."
  example:
  - "The following code shows how to retrieve an instance of this class.  \n  \n [!code-vb[c_ImpersonationAndDelegation#3](~/add/codesnippet/visualbasic/m-system.servicemodel.de_6_1.vb)]\n [!code-cs[c_ImpersonationAndDelegation#3](~/add/codesnippet/csharp/m-system.servicemodel.de_6_1.cs)]"
  syntax:
    content: public ServiceAuthorizationBehavior ();
    parameters: []
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
  id: ExternalAuthorizationPolicies
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ExternalAuthorizationPolicies
  nameWithType: ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define uma coleção de políticas de autorização externa."
  remarks: "As políticas de autorização externa participarem do processo de avaliação de política resulta em um usuário <xref:System.ServiceModel.ServiceSecurityContext>.</xref:System.ServiceModel.ServiceSecurityContext>"
  example:
  - "The following code shows how to set this property to use a set of external authorization policies.  \n  \n [!code-cs[PrincipalPermissionMode#3](~/add/codesnippet/csharp/afaf6251-be20-495c-ad4d-_1.cs)]\n [!code-vb[PrincipalPermissionMode#3](~/add/codesnippet/visualbasic/afaf6251-be20-495c-ad4d-_1.vb)]"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ExternalAuthorizationPolicies { get; set; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "Uma coleção de políticas de autorização externa."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Comportamento é somente leitura."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
  id: ImpersonateCallerForAllOperations
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ImpersonateCallerForAllOperations
  nameWithType: ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define um valor que indica se o serviço executa representação para todas as operações que ele suporta."
  remarks: "Um valor de `false` indica que representação é especificada para cada operação."
  example:
  - "This code shows how to set this property.  \n  \n [!code-vb[c_ImpersonationAndDelegation#3](~/add/codesnippet/visualbasic/3f7065e9-a4c7-4253-9e00-_1.vb)]\n [!code-cs[c_ImpersonationAndDelegation#3](~/add/codesnippet/csharp/3f7065e9-a4c7-4253-9e00-_1.cs)]"
  syntax:
    content: public bool ImpersonateCallerForAllOperations { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o serviço executa representação para todas as operações que dá suporte a; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Comportamento é somente leitura."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
  id: ImpersonateOnSerializingReply
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ImpersonateOnSerializingReply
  nameWithType: ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define um valor que indica se o serviço executa representação serializar a resposta."
  syntax:
    content: public bool ImpersonateOnSerializingReply { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se o serviço executa representação serializar a resposta; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode
  id: PrincipalPermissionMode
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: PrincipalPermissionMode
  nameWithType: ServiceAuthorizationBehavior.PrincipalPermissionMode
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define o modo de permissão principal."
  remarks: "Esta propriedade contém um dos membros a <xref:System.ServiceModel.Description.PrincipalPermissionMode>enumeração.</xref:System.ServiceModel.Description.PrincipalPermissionMode> Os valores válidos são:- <xref:System.ServiceModel.Description.PrincipalPermissionMode>.</xref:System.ServiceModel.Description.PrincipalPermissionMode> Um personalizado `IAuthorizationPolicy` implementação é usada para popular `Thread.CurrentPrincipal`.      -   <xref:System.ServiceModel.Description.PrincipalPermissionMode>.</xref:System.ServiceModel.Description.PrincipalPermissionMode> O `Thread.CurrentPrincipal` propriedade não está definida.      -   <xref:System.ServiceModel.Description.PrincipalPermissionMode>.</xref:System.ServiceModel.Description.PrincipalPermissionMode> O `Thread.CurrentPrincipal` está definida como um `IPrincipal` com base nas informações de função do ASP.NET.      -   <xref:System.ServiceModel.Description.PrincipalPermissionMode>.</xref:System.ServiceModel.Description.PrincipalPermissionMode> O `Thread.CurrentPrincipal` está definida como um `WindowsPrincipal` com base nas credenciais do usuário da mensagem de entrada."
  example:
  - "This code shows how to set this property.  \n  \n [!code-vb[c_PrincipalPermissionAttribute#3](~/add/codesnippet/visualbasic/ed4c65e4-2594-4bf5-91f6-_1.vb)]\n [!code-cs[c_PrincipalPermissionAttribute#3](~/add/codesnippet/csharp/ed4c65e4-2594-4bf5-91f6-_1.cs)]"
  syntax:
    content: public System.ServiceModel.Description.PrincipalPermissionMode PrincipalPermissionMode { get; set; }
    return:
      type: System.ServiceModel.Description.PrincipalPermissionMode
      description: "O modo de permissão principal."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider
  id: RoleProvider
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: RoleProvider
  nameWithType: ServiceAuthorizationBehavior.RoleProvider
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define um provedor de função personalizado."
  remarks: "Retornado <xref:System.Web.Security.RoleProvider>objeto é uma implementação de um provedor de função personalizado.</xref:System.Web.Security.RoleProvider>"
  example:
  - "The following code shows how to get this property.  \n  \n [!code-cs[PrincipalPermissionMode#6](~/add/codesnippet/csharp/p-system.servicemodel.de_25_1.cs)]\n [!code-vb[PrincipalPermissionMode#6](~/add/codesnippet/visualbasic/p-system.servicemodel.de_25_1.vb)]"
  syntax:
    content: public System.Web.Security.RoleProvider RoleProvider { get; set; }
    return:
      type: System.Web.Security.RoleProvider
      description: "Um provedor de função personalizada."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Comportamento é somente leitura."
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager
  id: ServiceAuthorizationManager
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ServiceAuthorizationManager
  nameWithType: ServiceAuthorizationBehavior.ServiceAuthorizationManager
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Obtém ou define o Gerenciador de autorização do serviço."
  remarks: "O <xref:System.ServiceModel.ServiceAuthorizationManager>classe é responsável por avaliar todas as políticas, o encadeamento de encaminhamento e para trás, opcionalmente, conectar resultante <xref:System.IdentityModel.Policy.AuthorizationContext>para o <xref:System.ServiceModel.ServiceSecurityContext>e retornando a decisão de autorização de `true` ou `false` para permitir ou negar acesso.</xref:System.ServiceModel.ServiceSecurityContext> </xref:System.IdentityModel.Policy.AuthorizationContext> </xref:System.ServiceModel.ServiceAuthorizationManager>"
  example:
  - "The following code shows how to set this property to use a custom service authorization manager.  \n  \n [!code-cs[PrincipalPermissionMode#3](~/add/codesnippet/csharp/195deeee-7ce7-41ce-9ad6-_1.cs)]\n [!code-vb[PrincipalPermissionMode#3](~/add/codesnippet/visualbasic/195deeee-7ce7-41ce-9ad6-_1.vb)]"
  syntax:
    content: public System.ServiceModel.ServiceAuthorizationManager ServiceAuthorizationManager { get; set; }
    return:
      type: System.ServiceModel.ServiceAuthorizationManager
      description: "O Gerenciador de autorização de serviço."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies
  id: ShouldSerializeExternalAuthorizationPolicies
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ShouldSerializeExternalAuthorizationPolicies()
  nameWithType: ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies()
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Retorna um valor que indica se o <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies*>propriedade foi alterado do valor padrão e deve ser serializada.</xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies*>"
  syntax:
    content: public bool ShouldSerializeExternalAuthorizationPolicies ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies*>o valor da propriedade deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies*>"
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager
  id: ShouldSerializeServiceAuthorizationManager
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: ShouldSerializeServiceAuthorizationManager()
  nameWithType: ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager()
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager()
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Retorna um valor que indica se o <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager*>propriedade foi alterado do valor padrão e deve ser serializada.</xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager*>"
  syntax:
    content: public bool ShouldSerializeServiceAuthorizationManager ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager*>o valor da propriedade deve ser serializado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager*>"
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  id: System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  isEii: true
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Fornece a capacidade de transmitir dados personalizados para elementos de associação para dar suporte à implementação do contrato."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>instância é convertida em um <xref:System.ServiceModel.Description.IServiceBehavior>interface.</xref:System.ServiceModel.Description.IServiceBehavior> </xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>"
  syntax:
    content: void IServiceBehavior.AddBindingParameters (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase, System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint> endpoints, System.ServiceModel.Channels.BindingParameterCollection parameters);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "A descrição do serviço do serviço."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "O host do serviço."
    - id: endpoints
      type: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
      description: "Os pontos de extremidade de serviço."
    - id: parameters
      type: System.ServiceModel.Channels.BindingParameterCollection
      description: "Os objetos personalizados à associação de quais elementos têm acesso."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Define uma implementação de interface explícita que adiciona os comportamentos de expedição para configurar a associação."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>instância é convertida em um <xref:System.ServiceModel.Description.IServiceBehavior>interface.</xref:System.ServiceModel.Description.IServiceBehavior> </xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>"
  syntax:
    content: void IServiceBehavior.ApplyDispatchBehavior (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "A descrição do serviço."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "O host que está sendo criado."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  id: System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  isEii: true
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  langs:
  - csharp
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Fornece a capacidade de inspecionar o host de serviço e a descrição do serviço para confirmar que o serviço pode ser executado com êxito."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>instância é convertida em um <xref:System.ServiceModel.Description.IServiceBehavior>interface.</xref:System.ServiceModel.Description.IServiceBehavior> </xref:System.ServiceModel.Description.ServiceAuthorizationBehavior>"
  syntax:
    content: void IServiceBehavior.Validate (System.ServiceModel.Description.ServiceDescription description, System.ServiceModel.ServiceHostBase serviceHostBase);
    parameters:
    - id: description
      type: System.ServiceModel.Description.ServiceDescription
      description: "A descrição do serviço."
    - id: serviceHostBase
      type: System.ServiceModel.ServiceHostBase
      description: "O host de serviço que atualmente está sendo construído."
  overload: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ServiceAuthorizationBehavior()
  nameWithType: ServiceAuthorizationBehavior.ServiceAuthorizationBehavior()
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationBehavior()
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ExternalAuthorizationPolicies
  nameWithType: ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ImpersonateCallerForAllOperations
  nameWithType: ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ImpersonateOnSerializingReply
  nameWithType: ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: PrincipalPermissionMode
  nameWithType: ServiceAuthorizationBehavior.PrincipalPermissionMode
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode
- uid: System.ServiceModel.Description.PrincipalPermissionMode
  parent: System.ServiceModel.Description
  isExternal: false
  name: PrincipalPermissionMode
  nameWithType: PrincipalPermissionMode
  fullName: System.ServiceModel.Description.PrincipalPermissionMode
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: RoleProvider
  nameWithType: ServiceAuthorizationBehavior.RoleProvider
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider
- uid: System.Web.Security.RoleProvider
  parent: System.Web.Security
  isExternal: true
  name: RoleProvider
  nameWithType: RoleProvider
  fullName: System.Web.Security.RoleProvider
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ServiceAuthorizationManager
  nameWithType: ServiceAuthorizationBehavior.ServiceAuthorizationManager
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager
- uid: System.ServiceModel.ServiceAuthorizationManager
  parent: System.ServiceModel
  isExternal: false
  name: ServiceAuthorizationManager
  nameWithType: ServiceAuthorizationManager
  fullName: System.ServiceModel.ServiceAuthorizationManager
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ShouldSerializeExternalAuthorizationPolicies()
  nameWithType: ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies()
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies()
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ShouldSerializeServiceAuthorizationManager()
  nameWithType: ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager()
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager()
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase,System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint},System.ServiceModel.Channels.BindingParameterCollection)
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters(ServiceDescription,ServiceHostBase,Collection<ServiceEndpoint>,BindingParameterCollection)
- uid: System.ServiceModel.Description.ServiceDescription
  parent: System.ServiceModel.Description
  isExternal: false
  name: ServiceDescription
  nameWithType: ServiceDescription
  fullName: System.ServiceModel.Description.ServiceDescription
- uid: System.ServiceModel.ServiceHostBase
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHostBase
  nameWithType: ServiceHostBase
  fullName: System.ServiceModel.ServiceHostBase
- uid: System.Collections.ObjectModel.Collection{System.ServiceModel.Description.ServiceEndpoint}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ServiceEndpoint>
  nameWithType: Collection<ServiceEndpoint>
  fullName: System.Collections.ObjectModel.Collection<System.ServiceModel.Description.ServiceEndpoint>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.ServiceModel.Description.ServiceEndpoint>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.ServiceModel.Description.ServiceEndpoint
    name: ServiceEndpoint
    nameWithType: ServiceEndpoint
    fullName: ServiceEndpoint
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.ServiceModel.Channels.BindingParameterCollection
  parent: System.ServiceModel.Channels
  isExternal: true
  name: BindingParameterCollection
  nameWithType: BindingParameterCollection
  fullName: System.ServiceModel.Channels.BindingParameterCollection
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate(System.ServiceModel.Description.ServiceDescription,System.ServiceModel.ServiceHostBase)
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
  fullName: System.ServiceModel.Description.ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.Validate(ServiceDescription,ServiceHostBase)
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.#ctor*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ServiceAuthorizationBehavior
  nameWithType: ServiceAuthorizationBehavior.ServiceAuthorizationBehavior
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ExternalAuthorizationPolicies*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ExternalAuthorizationPolicies
  nameWithType: ServiceAuthorizationBehavior.ExternalAuthorizationPolicies
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ImpersonateCallerForAllOperations
  nameWithType: ServiceAuthorizationBehavior.ImpersonateCallerForAllOperations
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ImpersonateOnSerializingReply*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ImpersonateOnSerializingReply
  nameWithType: ServiceAuthorizationBehavior.ImpersonateOnSerializingReply
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.PrincipalPermissionMode*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: PrincipalPermissionMode
  nameWithType: ServiceAuthorizationBehavior.PrincipalPermissionMode
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.RoleProvider*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: RoleProvider
  nameWithType: ServiceAuthorizationBehavior.RoleProvider
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ServiceAuthorizationManager*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ServiceAuthorizationManager
  nameWithType: ServiceAuthorizationBehavior.ServiceAuthorizationManager
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ShouldSerializeExternalAuthorizationPolicies
  nameWithType: ServiceAuthorizationBehavior.ShouldSerializeExternalAuthorizationPolicies
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: ShouldSerializeServiceAuthorizationManager
  nameWithType: ServiceAuthorizationBehavior.ShouldSerializeServiceAuthorizationManager
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#AddBindingParameters*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.AddBindingParameters
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#ApplyDispatchBehavior*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.ApplyDispatchBehavior
- uid: System.ServiceModel.Description.ServiceAuthorizationBehavior.System#ServiceModel#Description#IServiceBehavior#Validate*
  parent: System.ServiceModel.Description.ServiceAuthorizationBehavior
  isExternal: false
  name: System.ServiceModel.Description.IServiceBehavior.Validate
  nameWithType: ServiceAuthorizationBehavior.System.ServiceModel.Description.IServiceBehavior.Validate
