### YamlMime:ManagedReference
items:
- uid: System.Data.ConstraintCollection
  id: ConstraintCollection
  children:
  - System.Data.ConstraintCollection.Add(System.Data.Constraint)
  - System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)
  - System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  - System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)
  - System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  - System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])
  - System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)
  - System.Data.ConstraintCollection.Clear
  - System.Data.ConstraintCollection.CollectionChanged
  - System.Data.ConstraintCollection.Contains(System.String)
  - System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)
  - System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)
  - System.Data.ConstraintCollection.IndexOf(System.String)
  - System.Data.ConstraintCollection.Item(System.Int32)
  - System.Data.ConstraintCollection.Item(System.String)
  - System.Data.ConstraintCollection.List
  - System.Data.ConstraintCollection.Remove(System.Data.Constraint)
  - System.Data.ConstraintCollection.Remove(System.String)
  - System.Data.ConstraintCollection.RemoveAt(System.Int32)
  langs:
  - csharp
  name: ConstraintCollection
  nameWithType: ConstraintCollection
  fullName: System.Data.ConstraintCollection
  type: Class
  summary: "Representa uma coleção de restrições para uma <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "ConstraintCollection é acessada por meio de <xref:System.Data.DataTable.Constraints%2A?displayProperty=fullName>propriedade.</xref:System.Data.DataTable.Constraints%2A?displayProperty=fullName>       ConstraintCollection pode conter os dois <xref:System.Data.UniqueConstraint> <xref:System.Data.ForeignKeyConstraint>objetos para <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.ForeignKeyConstraint> e</xref:System.Data.UniqueConstraint> Um <xref:System.Data.UniqueConstraint>objeto torna-se de que os dados em uma coluna específica sempre são exclusivos para preservar a integridade dos dados.</xref:System.Data.UniqueConstraint> O <xref:System.Data.ForeignKeyConstraint>determina o que ocorrerá em relacionados tabelas quando dados no <xref:System.Data.DataTable>é atualizado ou excluído.</xref:System.Data.DataTable> </xref:System.Data.ForeignKeyConstraint> Por exemplo, se uma linha for excluída, o <xref:System.Data.ForeignKeyConstraint>determinará se as linhas relacionadas também são excluídas (uma cascata) ou algum outro curso de ação.</xref:System.Data.ForeignKeyConstraint>      > [!NOTE] > Quando você adiciona um <xref:System.Data.DataRelation>que cria uma relação entre duas tabelas para um <xref:System.Data.DataSet>, ambos um <xref:System.Data.ForeignKeyConstraint>e um <xref:System.Data.UniqueConstraint>são criadas automaticamente.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataSet> </xref:System.Data.DataRelation> O <xref:System.Data.UniqueConstraint>é aplicada à coluna de chave primária no pai <xref:System.Data.DataTable>, e a restrição é adicionada à ConstraintCollection da tabela.</xref:System.Data.DataTable> </xref:System.Data.UniqueConstraint> O <xref:System.Data.ForeignKeyConstraint>é aplicada a coluna de chave primária e a coluna de chave estrangeira, e a restrição é adicionada à ConstraintCollection da tabela filho.</xref:System.Data.ForeignKeyConstraint>       ConstraintCollection usa métodos de coleção padrão como <xref:System.Data.ConstraintCollection.Add%2A>, <xref:System.Data.ConstraintCollection.Clear%2A>e <xref:System.Data.ConstraintCollection.Remove%2A>.</xref:System.Data.ConstraintCollection.Remove%2A> </xref:System.Data.ConstraintCollection.Clear%2A> </xref:System.Data.ConstraintCollection.Add%2A> Além disso, o <xref:System.Data.ConstraintCollection.Contains%2A>método pode ser usado para procurar a existência de uma restrição específica na coleção.</xref:System.Data.ConstraintCollection.Contains%2A>       Um <xref:System.Data.UniqueConstraint>é criado quando um <xref:System.Data.DataColumn>com seus <xref:System.Data.DataColumn.Unique%2A>propriedade definida como `true` é adicionado a um <xref:System.Data.DataTable>objeto <xref:System.Data.DataColumnCollection>.</xref:System.Data.DataColumnCollection> </xref:System.Data.DataTable> </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn> </xref:System.Data.UniqueConstraint>       Um <xref:System.Data.ForeignKeyConstraint>é criado quando um <xref:System.Data.DataRelation>é adicionado a um <xref:System.Data.DataSet>objeto <xref:System.Data.DataRelationCollection>.</xref:System.Data.DataRelationCollection> </xref:System.Data.DataSet> </xref:System.Data.DataRelation> </xref:System.Data.ForeignKeyConstraint>"
  example:
  - "The first example creates a <xref:System.Data.DataTable>, and adds a <xref:System.Data.DataColumn> (with its <xref:System.Data.DataColumn.Unique%2A> property set to `true`) to the <xref:System.Data.DataColumnCollection>. The second example creates a <xref:System.Data.DataSet>, two <xref:System.Data.DataTable> objects, four columns, and a <xref:System.Data.DataRelation>. The count of constraints is then printed to show that a <xref:System.Data.ForeignKeyConstraint> and a <xref:System.Data.UniqueConstraint> are created when a <xref:System.Data.DataRelation> is added to the <xref:System.Data.DataSet> object's <xref:System.Data.DataRelationCollection.%23ctor%2A>.  \n  \n [!code-vb[Classic WebData ConstraintCollection Example#1](~/add/codesnippet/visualbasic/t-system.data.constraint_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection Example#1](~/add/codesnippet/csharp/t-system.data.constraint_1.cs)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("CollectionChanged")]

      [System.ComponentModel.Editor("Microsoft.VSDesigner.Data.Design.ConstraintsCollectionEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      public sealed class ConstraintCollection : System.Data.InternalDataCollectionBase
  inheritance:
  - System.Object
  - System.Data.InternalDataCollectionBase
  implements: []
  inheritedMembers:
  - System.Data.InternalDataCollectionBase.CopyTo(System.Array,System.Int32)
  - System.Data.InternalDataCollectionBase.Count
  - System.Data.InternalDataCollectionBase.GetEnumerator
  - System.Data.InternalDataCollectionBase.IsReadOnly
  - System.Data.InternalDataCollectionBase.IsSynchronized
  - System.Data.InternalDataCollectionBase.SyncRoot
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.Data.Constraint)
  id: Add(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(Constraint)
  nameWithType: ConstraintCollection.Add(Constraint)
  fullName: System.Data.ConstraintCollection.Add(Constraint)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Adiciona o <xref href=&quot;System.Data.Constraint&quot;> </xref> objeto à coleção."
  remarks: "Se a coleção é alterada com êxito, adicionando ou removendo restrições, a <xref:System.Data.ConstraintCollection.CollectionChanged>evento ocorre.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example adds a <xref:System.Data.UniqueConstraint> to the <xref:System.Data.ConstraintCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.Add Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_2_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.Add Example#1](~/add/codesnippet/csharp/m-system.data.constraint_2_1.cs)]"
  syntax:
    content: public void Add (System.Data.Constraint constraint);
    parameters:
    - id: constraint
      type: System.Data.Constraint
      description: "The <xref uid=&quot;langword_csharp_Constraint&quot; name=&quot;Constraint&quot; href=&quot;&quot;></xref> to add."
  overload: System.Data.ConstraintCollection.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> constraint </code> argumento for nulo."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A restrição já pertence a esta coleção ou pertence a outra coleção."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A coleção já tem uma restrição com o mesmo nome. (A comparação não diferencia maiusculas de minúsculas)."
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)
  id: Add(System.String,System.Data.DataColumn,System.Boolean)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(String,DataColumn,Boolean)
  nameWithType: ConstraintCollection.Add(String,DataColumn,Boolean)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Constrói um novo <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> com o nome especificado, <xref href=&quot;System.Data.DataColumn&quot;> </xref>e o valor que indica se a coluna é uma chave primária e o adiciona à coleção."
  remarks: "O <xref:System.Data.ConstraintCollection.CollectionChanged>evento ocorrerá se a restrição é adicionada com êxito.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.ConstraintCollection.Add%2A> method to create and add a new <xref:System.Data.UniqueConstraint> to a <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.Add2 Example#1](~/add/codesnippet/visualbasic/08c49299-33fb-4956-b60e-_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.Add2 Example#1](~/add/codesnippet/csharp/08c49299-33fb-4956-b60e-_1.cs)]"
  syntax:
    content: public System.Data.Constraint Add (string name, System.Data.DataColumn column, bool primaryKey);
    parameters:
    - id: name
      type: System.String
      description: "O nome do <xref uid=&quot;langword_csharp_UniqueConstraint&quot; name=&quot;UniqueConstraint&quot; href=&quot;&quot;> </xref>."
    - id: column
      type: System.Data.DataColumn
      description: "O <xref href=&quot;System.Data.DataColumn&quot;> </xref> à qual a restrição se aplica."
    - id: primaryKey
      type: System.Boolean
      description: "Especifica se a coluna deve ser a chave primária. Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, a coluna será uma coluna de chave primária."
    return:
      type: System.Data.Constraint
      description: "A new <xref uid=&quot;langword_csharp_UniqueConstraint&quot; name=&quot;UniqueConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.ConstraintCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A restrição já pertence a esta coleção.       - Ou - a restrição pertence a outra coleção."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A coleção já tem uma restrição com o nome especificado. (A comparação não diferencia maiusculas de minúsculas)."
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  id: Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(String,DataColumn,DataColumn)
  nameWithType: ConstraintCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn,DataColumn)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Constrói um novo <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref> com o nome especificado, pai coluna e a coluna filho e adiciona a restrição na coleção."
  remarks: "O <xref:System.Data.ConstraintCollection.CollectionChanged>evento ocorrerá se a restrição é adicionada com êxito.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example adds a new <xref:System.Data.ForeignKeyConstraint> to the <xref:System.Data.ConstraintCollection> of a <xref:System.Data.DataTable>.  \n  \n [!code-cs[Classic WebData ConstraintCollection.Add3 Example#1](~/add/codesnippet/csharp/0f033e89-31da-4fc4-b9fb-_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.Add3 Example#1](~/add/codesnippet/visualbasic/0f033e89-31da-4fc4-b9fb-_1.vb)]"
  syntax:
    content: public System.Data.Constraint Add (string name, System.Data.DataColumn primaryKeyColumn, System.Data.DataColumn foreignKeyColumn);
    parameters:
    - id: name
      type: System.String
      description: "O nome do <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref>."
    - id: primaryKeyColumn
      type: System.Data.DataColumn
      description: "A chave primária ou pai, <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
    - id: foreignKeyColumn
      type: System.Data.DataColumn
      description: "A chave estrangeira ou filho, <xref href=&quot;System.Data.DataColumn&quot;> </xref>."
    return:
      type: System.Data.Constraint
      description: "A new <xref uid=&quot;langword_csharp_ForeignKeyConstraint&quot; name=&quot;ForeignKeyConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.ConstraintCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)
  id: Add(System.String,System.Data.DataColumn[],System.Boolean)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],Boolean)
  nameWithType: ConstraintCollection.Add(String,DataColumn[],Boolean)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn[],Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Constrói um novo <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref> com o nome especificado, a matriz de <xref href=&quot;System.Data.DataColumn&quot;> </xref> objetos e o valor que indica se a coluna é uma chave primária e o adiciona à coleção."
  remarks: "O <xref:System.Data.ConstraintCollection.CollectionChanged>evento ocorrerá se a restrição é adicionada com êxito.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example creates an array of <xref:System.Data.DataColumn> objects that are used to create a new <xref:System.Data.UniqueConstraint> in a specific <xref:System.Data.DataTable>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.Add1 Example#1](~/add/codesnippet/visualbasic/716b020f-3b2b-4515-aaa4-_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.Add1 Example#1](~/add/codesnippet/csharp/716b020f-3b2b-4515-aaa4-_1.cs)]"
  syntax:
    content: public System.Data.Constraint Add (string name, System.Data.DataColumn[] columns, bool primaryKey);
    parameters:
    - id: name
      type: System.String
      description: "O nome do <xref href=&quot;System.Data.UniqueConstraint&quot;> </xref>."
    - id: columns
      type: System.Data.DataColumn[]
      description: "Uma matriz de <xref href=&quot;System.Data.DataColumn&quot;> </xref> objetos aos quais a restrição se aplica."
    - id: primaryKey
      type: System.Boolean
      description: "Especifica se a coluna deve ser a chave primária. Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, a coluna será uma coluna de chave primária."
    return:
      type: System.Data.Constraint
      description: "A new <xref uid=&quot;langword_csharp_UniqueConstraint&quot; name=&quot;UniqueConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.ConstraintCollection.Add*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A restrição já pertence a esta coleção.       - Ou - a restrição pertence a outra coleção."
  - type: System.Data.DuplicateNameException
    commentId: T:System.Data.DuplicateNameException
    description: "A coleção já tem uma restrição com o nome especificado. (A comparação não diferencia maiusculas de minúsculas)."
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  id: Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: ConstraintCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn[],DataColumn[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Constrói um novo <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref>, com as matrizes especificadas de colunas pai e filho e adiciona a restrição na coleção."
  remarks: "O <xref:System.Data.ConstraintCollection.CollectionChanged>evento ocorrerá se a restrição é adicionada com êxito.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example creates two arrays of <xref:System.Data.DataColumn> objects, and then creates two <xref:System.Data.ForeignKeyConstraint> relationships between two tables in a dataset.  \n  \n [!code-cs[Classic WebData ConstraintCollection.Add4 Example#1](~/add/codesnippet/csharp/050b7657-d2ac-4ddc-a26f-_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.Add4 Example#1](~/add/codesnippet/visualbasic/050b7657-d2ac-4ddc-a26f-_1.vb)]"
  syntax:
    content: public System.Data.Constraint Add (string name, System.Data.DataColumn[] primaryKeyColumns, System.Data.DataColumn[] foreignKeyColumns);
    parameters:
    - id: name
      type: System.String
      description: "O nome do <xref href=&quot;System.Data.ForeignKeyConstraint&quot;> </xref>."
    - id: primaryKeyColumns
      type: System.Data.DataColumn[]
      description: "Uma matriz de <xref href=&quot;System.Data.DataColumn&quot;> </xref> objetos que são as colunas de chave primária, ou pai."
    - id: foreignKeyColumns
      type: System.Data.DataColumn[]
      description: "Uma matriz de <xref href=&quot;System.Data.DataColumn&quot;> </xref> objetos que são as colunas de chave estrangeira ou filho."
    return:
      type: System.Data.Constraint
      description: "A new <xref uid=&quot;langword_csharp_ForeignKeyConstraint&quot; name=&quot;ForeignKeyConstraint&quot; href=&quot;&quot;></xref>."
  overload: System.Data.ConstraintCollection.Add*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])
  id: AddRange(System.Data.Constraint[])
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: AddRange(Constraint[])
  nameWithType: ConstraintCollection.AddRange(Constraint[])
  fullName: System.Data.ConstraintCollection.AddRange(Constraint[])
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Copia os elementos do <xref href=&quot;System.Data.ConstraintCollection&quot;> </xref> matriz ao final da coleção."
  remarks: "Se <xref:System.Data.DataTable.BeginInit%2A>tiver sido chamado, `AddRange` não adiciona todos os objetos na coleção até <xref:System.Data.DataTable.EndInit%2A>é chamado.</xref:System.Data.DataTable.EndInit%2A> </xref:System.Data.DataTable.BeginInit%2A> No momento em que `EndInit` é chamado, a coleção será preenchida com os itens especificados na chamada mais recente para `AddRange`. Se `AddRange` for chamado várias vezes dentro de um `BeginInit`  /  `EndInit` de sequência, somente os itens especificados na chamada mais recente para `AddRange` são adicionados."
  example:
  - "The following example creates primary and foreign key constraints, and adds them to the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.AddRange Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_1_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.AddRange Example#1](~/add/codesnippet/csharp/m-system.data.constraint_1_1.cs)]"
  syntax:
    content: public void AddRange (System.Data.Constraint[] constraints);
    parameters:
    - id: constraints
      type: System.Data.Constraint[]
      description: "Uma matriz de <xref href=&quot;System.Data.ConstraintCollection&quot;> </xref> objetos para adicionar à coleção."
  overload: System.Data.ConstraintCollection.AddRange*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)
  id: CanRemove(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: CanRemove(Constraint)
  nameWithType: ConstraintCollection.CanRemove(Constraint)
  fullName: System.Data.ConstraintCollection.CanRemove(Constraint)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Indica se um <xref href=&quot;System.Data.Constraint&quot;> </xref> pode ser removido."
  remarks: "O comportamento padrão sempre que um <xref:System.Data.DataRelation>é adicionado a um <xref:System.Data.DataSet>, é adicionar um <xref:System.Data.ForeignKeyConstraint>à tabela pai e um <xref:System.Data.UniqueConstraint>para a tabela filho.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.DataSet> </xref:System.Data.DataRelation> O <xref:System.Data.UniqueConstraint>é aplicada à coluna de chave primária da tabela pai e o <xref:System.Data.ForeignKeyConstraint>é aplicada à coluna de chave estrangeira da tabela filho.</xref:System.Data.ForeignKeyConstraint> </xref:System.Data.UniqueConstraint> Porque a tentativa de remover o <xref:System.Data.UniqueConstraint>antes de remover o <xref:System.Data.ForeignKeyConstraint>faz com que uma exceção seja lançada, você deve sempre usar o método CanRemove antes de chamar remover, para certificar-se de que o <xref:System.Data.UniqueConstraint>pode ser removido.</xref:System.Data.UniqueConstraint> </xref:System.Data.ForeignKeyConstraint> </xref:System.Data.UniqueConstraint>"
  example:
  - "The following example uses the CanRemove method to determine whether a <xref:System.Data.Constraint> can be removed, before trying to remove it.  \n  \n [!code-vb[Classic WebData ConstraintCollection.CanRemove Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_11_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.CanRemove Example#1](~/add/codesnippet/csharp/m-system.data.constraint_11_1.cs)]"
  syntax:
    content: public bool CanRemove (System.Data.Constraint constraint);
    parameters:
    - id: constraint
      type: System.Data.Constraint
      description: "O <xref href=&quot;System.Data.Constraint&quot;> </xref> a ser testado para remoção da coleção."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Data.Constraint&quot;> </xref> pode ser removido da coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.ConstraintCollection.CanRemove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Clear
  id: Clear
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ConstraintCollection.Clear()
  fullName: System.Data.ConstraintCollection.Clear()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Limpa a coleção de qualquer <xref href=&quot;System.Data.Constraint&quot;> </xref> objetos."
  remarks: "O <xref:System.Data.ConstraintCollection.CollectionChanged>evento ocorrerá se a ação foi bem-sucedida.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example clears all constraints from the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-cs[Classic WebData ConstraintCollection.Clear Example#1](~/add/codesnippet/csharp/m-system.data.constraint_8_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.Clear Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_8_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Data.ConstraintCollection.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.CollectionChanged
  id: CollectionChanged
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: CollectionChanged
  nameWithType: ConstraintCollection.CollectionChanged
  fullName: System.Data.ConstraintCollection.CollectionChanged
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Ocorre sempre que o <xref href=&quot;System.Data.ConstraintCollection&quot;> </xref> é alterada por <xref href=&quot;System.Data.Constraint&quot;> </xref> objetos que estão sendo adicionados ou removidos."
  remarks: 'Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  example:
  - "The following example demonstrates how to use the CollectionChanged event.  \n  \n [!code-vb[Classic WebData ConstraintCollection.CollectionChanged Example#1](~/add/codesnippet/visualbasic/e-system.data.constraint_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.CollectionChanged Example#1](~/add/codesnippet/csharp/e-system.data.constraint_1.cs)]"
  syntax:
    content: public event System.ComponentModel.CollectionChangeEventHandler CollectionChanged;
    return:
      type: System.ComponentModel.CollectionChangeEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Contains(System.String)
  id: Contains(System.String)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Contains(String)
  nameWithType: ConstraintCollection.Contains(String)
  fullName: System.Data.ConstraintCollection.Contains(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Indica se o <xref href=&quot;System.Data.Constraint&quot;> </xref> especificado pelo nome do objeto existe na coleção."
  remarks: "Use o método Contains para determinar se especificado <xref:System.Data.Constraint>existe antes de tentar removê-lo da coleção.</xref:System.Data.Constraint> Você também pode usar o <xref:System.Data.ConstraintCollection.CanRemove%2A>método para determinar se um <xref:System.Data.Constraint>pode ser removido.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.CanRemove%2A>"
  example:
  - "The following example determines whether the specified <xref:System.Data.Constraint> exists in the <xref:System.Data.ConstraintCollection> before its deletion.  \n  \n [!code-cs[Classic WebData ConstraintCollection.Contains Example#1](~/add/codesnippet/csharp/m-system.data.constraint_6_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.Contains Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_6_1.vb)]"
  syntax:
    content: public bool Contains (string name);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.Data.Constraint.ConstraintName*>da restrição.</xref:System.Data.Constraint.ConstraintName*>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a coleção contém a restrição especificada. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.ConstraintCollection.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)
  id: CopyTo(System.Data.Constraint[],System.Int32)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: CopyTo(Constraint[],Int32)
  nameWithType: ConstraintCollection.CopyTo(Constraint[],Int32)
  fullName: System.Data.ConstraintCollection.CopyTo(Constraint[],Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Copia os objetos da coleção para um unidimensional <xref:System.Array>instância iniciando no índice especificado.</xref:System.Array>"
  syntax:
    content: public void CopyTo (System.Data.Constraint[] array, int index);
    parameters:
    - id: array
      type: System.Data.Constraint[]
      description: "O unidimensional <xref:System.Array>que é o destino dos valores copiados da coleção.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice da matriz na qual iniciar a inserção."
  overload: System.Data.ConstraintCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)
  id: IndexOf(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: IndexOf(Constraint)
  nameWithType: ConstraintCollection.IndexOf(Constraint)
  fullName: System.Data.ConstraintCollection.IndexOf(Constraint)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o índice do <xref href=&quot;System.Data.Constraint&quot;> </xref>."
  remarks: "Use o método IndexOf para retornar um índice a ser usado com qualquer um de <xref:System.Data.ConstraintCollection.Contains%2A>ou <xref:System.Data.ConstraintCollection.Remove%2A>método.</xref:System.Data.ConstraintCollection.Remove%2A> </xref:System.Data.ConstraintCollection.Contains%2A>"
  example:
  - "The following example uses the IndexOf method to return the index of a <xref:System.Data.Constraint>. The index is passed to the <xref:System.Data.ConstraintCollection.Contains%2A> method, before it is removed, to determine whether the collection contains the constraint.  \n  \n [!code-vb[Classic WebData ConstraintCollection.IndexOf1 Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_4_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.IndexOf1 Example#1](~/add/codesnippet/csharp/m-system.data.constraint_4_1.cs)]"
  syntax:
    content: public int IndexOf (System.Data.Constraint constraint);
    parameters:
    - id: constraint
      type: System.Data.Constraint
      description: "O <xref href=&quot;System.Data.Constraint&quot;> </xref> para pesquisar."
    return:
      type: System.Int32
      description: "O índice de base zero de <xref href=&quot;System.Data.Constraint&quot;> </xref> se ele estiver na coleção; caso contrário, -1."
  overload: System.Data.ConstraintCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.IndexOf(System.String)
  id: IndexOf(System.String)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: IndexOf(String)
  nameWithType: ConstraintCollection.IndexOf(String)
  fullName: System.Data.ConstraintCollection.IndexOf(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o índice do <xref href=&quot;System.Data.Constraint&quot;> </xref> especificado pelo nome."
  remarks: "Use o <xref:System.Data.ConstraintCollection.IndexOf%2A>método para retornar um índice a ser usado com qualquer um de <xref:System.Data.ConstraintCollection.Contains%2A>ou <xref:System.Data.ConstraintCollection.Remove%2A>método.</xref:System.Data.ConstraintCollection.Remove%2A> </xref:System.Data.ConstraintCollection.Contains%2A> </xref:System.Data.ConstraintCollection.IndexOf%2A>"
  example:
  - "The following example uses the <xref:System.Data.ConstraintCollection.IndexOf%2A> method to return the index of a <xref:System.Data.Constraint>. The index is passed to the <xref:System.Data.ConstraintCollection.Contains%2A> method to determine whether the collection contains the constraint, before removing it.  \n  \n [!code-vb[Classic WebData ConstraintCollection.IndexOf Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_0_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.IndexOf Example#1](~/add/codesnippet/csharp/m-system.data.constraint_0_1.cs)]"
  syntax:
    content: public int IndexOf (string constraintName);
    parameters:
    - id: constraintName
      type: System.String
      description: "O nome do <xref href=&quot;System.Data.Constraint&quot;> </xref>."
    return:
      type: System.Int32
      description: "O índice do <xref href=&quot;System.Data.Constraint&quot;> </xref> se ele estiver na coleção; caso contrário, -1."
  overload: System.Data.ConstraintCollection.IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Item(System.Int32)
  id: Item(System.Int32)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Item(Int32)
  nameWithType: ConstraintCollection.Item(Int32)
  fullName: System.Data.ConstraintCollection.Item(Int32)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o <xref href=&quot;System.Data.Constraint&quot;> </xref> da coleção no índice especificado."
  remarks: "Use o <xref:System.Data.ConstraintCollection.Contains%2A>método para testar a existência de uma restrição específica.</xref:System.Data.ConstraintCollection.Contains%2A>"
  example:
  - "The following example gets each <xref:System.Data.Constraint> from the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-vb[Classic WebData ConstraintCollection.this Example#1](~/add/codesnippet/visualbasic/p-system.data.constraint_2_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.this Example#1](~/add/codesnippet/csharp/p-system.data.constraint_2_1.cs)]"
  syntax:
    content: public System.Data.Constraint this[int index] { get; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice da restrição para retornar."
    return:
      type: System.Data.Constraint
      description: "O <xref href=&quot;System.Data.Constraint&quot;> </xref> no índice especificado."
  overload: System.Data.ConstraintCollection.Item*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "O valor de índice é maior que o número de itens na coleção."
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ConstraintCollection.Item(String)
  fullName: System.Data.ConstraintCollection.Item(String)
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Obtém o <xref href=&quot;System.Data.Constraint&quot;> </xref> da coleção com o nome especificado."
  remarks: "Use o <xref:System.Data.ConstraintCollection.Contains%2A>método para testar a existência de uma restrição específica.</xref:System.Data.ConstraintCollection.Contains%2A>"
  example:
  - "The following example gets the named <xref:System.Data.Constraint>.  \n  \n [!code-cs[Classic WebData ConstraintCollection.this1 Example#1](~/add/codesnippet/csharp/p-system.data.constraint_3_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.this1 Example#1](~/add/codesnippet/visualbasic/p-system.data.constraint_3_1.vb)]"
  syntax:
    content: public System.Data.Constraint this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.Data.Constraint.ConstraintName*>da restrição para retornar.</xref:System.Data.Constraint.ConstraintName*>"
    return:
      type: System.Data.Constraint
      description: "O <xref href=&quot;System.Data.Constraint&quot;> </xref> com o nome especificado; caso contrário, um valor nulo se o <xref href=&quot;System.Data.Constraint&quot;> </xref> não existe."
  overload: System.Data.ConstraintCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.List
  id: List
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: List
  nameWithType: ConstraintCollection.List
  fullName: System.Data.ConstraintCollection.List
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data
  syntax:
    content: protected override System.Collections.ArrayList List { get; }
    return:
      type: System.Collections.ArrayList
      description: "A ser adicionado."
  overload: System.Data.ConstraintCollection.List*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Remove(System.Data.Constraint)
  id: Remove(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Remove(Constraint)
  nameWithType: ConstraintCollection.Remove(Constraint)
  fullName: System.Data.ConstraintCollection.Remove(Constraint)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Remove o <xref href=&quot;System.Data.Constraint&quot;> </xref> da coleção."
  remarks: "Antes de usar o `Remove` método, você pode usar o <xref:System.Data.ConstraintCollection.Contains%2A>método para determinar se a coleção contém o destino <xref:System.Data.Constraint>e o <xref:System.Data.ConstraintCollection.CanRemove%2A>método para determinar se um <xref:System.Data.Constraint>pode ser removido.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.CanRemove%2A> </xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.Contains%2A>       O <xref:System.Data.ConstraintCollection.CollectionChanged>evento ocorrerá se a restrição for removida com êxito.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - >-
    [!code-cs[Classic WebData ConstraintCollection.Remove Example#1](~/add/codesnippet/csharp/m-system.data.constraint_9_1.cs)]
     [!code-vb[Classic WebData ConstraintCollection.Remove Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_9_1.vb)]
  syntax:
    content: public void Remove (System.Data.Constraint constraint);
    parameters:
    - id: constraint
      type: System.Data.Constraint
      description: "O <xref href=&quot;System.Data.Constraint&quot;> </xref> para remover."
  overload: System.Data.ConstraintCollection.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>constraint</code> argument is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A restrição não pertence à coleção."
  platform:
  - net462
- uid: System.Data.ConstraintCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ConstraintCollection.Remove(String)
  fullName: System.Data.ConstraintCollection.Remove(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Remove o <xref href=&quot;System.Data.Constraint&quot;> </xref> o objeto especificado pelo nome da coleção."
  remarks: "Antes de usar o `Remove` método, você pode usar o <xref:System.Data.ConstraintCollection.Contains%2A>método para determinar se a coleção contém o destino <xref:System.Data.Constraint>e o <xref:System.Data.ConstraintCollection.CanRemove%2A>método para determinar se um <xref:System.Data.Constraint>pode ser removido.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.CanRemove%2A> </xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.Contains%2A>       O <xref:System.Data.ConstraintCollection.CollectionChanged>evento ocorrerá se a restrição for removida com êxito.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example removes a <xref:System.Data.Constraint> from a <xref:System.Data.ConstraintCollection> after testing for its presence with the <xref:System.Data.ConstraintCollection.Contains%2A> method, and whether it can be removed with the <xref:System.Data.ConstraintCollection.CanRemove%2A> method.  \n  \n [!code-vb[Classic WebData ConstraintCollection.Remove1 Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_5_1.vb)]\n [!code-cs[Classic WebData ConstraintCollection.Remove1 Example#1](~/add/codesnippet/csharp/m-system.data.constraint_5_1.cs)]"
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do <xref href=&quot;System.Data.Constraint&quot;> </xref> para remover."
  overload: System.Data.ConstraintCollection.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Data.ConstraintCollection.RemoveAt(System.Int32)
  id: RemoveAt(System.Int32)
  parent: System.Data.ConstraintCollection
  langs:
  - csharp
  name: RemoveAt(Int32)
  nameWithType: ConstraintCollection.RemoveAt(Int32)
  fullName: System.Data.ConstraintCollection.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data
  summary: "Remove o <xref href=&quot;System.Data.Constraint&quot;> </xref> objeto no índice especificado da coleção."
  remarks: "O <xref:System.Data.ConstraintCollection.IndexOf%2A>método retorna o índice de um determinado <xref:System.Data.Constraint>.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.IndexOf%2A>       Antes de usar o `RemoveAt` método, você pode usar o <xref:System.Data.ConstraintCollection.Contains%2A>método para determinar se a coleção contém o destino <xref:System.Data.Constraint>e o <xref:System.Data.ConstraintCollection.CanRemove%2A>método para determinar se um <xref:System.Data.Constraint>pode ser removido.</xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.CanRemove%2A> </xref:System.Data.Constraint> </xref:System.Data.ConstraintCollection.Contains%2A>       O <xref:System.Data.ConstraintCollection.CollectionChanged>evento ocorrerá se a restrição for removida com êxito.</xref:System.Data.ConstraintCollection.CollectionChanged>"
  example:
  - "The following example uses the <xref:System.Data.ConstraintCollection.IndexOf%2A> method together with the RemoveAt method to remove a constraint from the <xref:System.Data.ConstraintCollection>.  \n  \n [!code-cs[Classic WebData ConstraintCollection.RemoveAt Example#1](~/add/codesnippet/csharp/m-system.data.constraint_7_1.cs)]\n [!code-vb[Classic WebData ConstraintCollection.RemoveAt Example#1](~/add/codesnippet/visualbasic/m-system.data.constraint_7_1.vb)]"
  syntax:
    content: public void RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice do <xref href=&quot;System.Data.Constraint&quot;> </xref> para remover."
  overload: System.Data.ConstraintCollection.RemoveAt*
  exceptions:
  - type: System.IndexOutOfRangeException
    commentId: T:System.IndexOutOfRangeException
    description: "A coleção não tem uma restrição no índice."
  platform:
  - net462
references:
- uid: System.Data.InternalDataCollectionBase
  isExternal: false
  name: System.Data.InternalDataCollectionBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.DuplicateNameException
  parent: System.Data
  isExternal: false
  name: DuplicateNameException
  nameWithType: DuplicateNameException
  fullName: System.Data.DuplicateNameException
- uid: System.IndexOutOfRangeException
  isExternal: true
  name: System.IndexOutOfRangeException
- uid: System.Data.ConstraintCollection.Add(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(Constraint)
  nameWithType: ConstraintCollection.Add(Constraint)
  fullName: System.Data.ConstraintCollection.Add(Constraint)
- uid: System.Data.Constraint
  parent: System.Data
  isExternal: false
  name: Constraint
  nameWithType: Constraint
  fullName: System.Data.Constraint
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Boolean)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(String,DataColumn,Boolean)
  nameWithType: ConstraintCollection.Add(String,DataColumn,Boolean)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn,Boolean)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.DataColumn
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn,System.Data.DataColumn)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(String,DataColumn,DataColumn)
  nameWithType: ConstraintCollection.Add(String,DataColumn,DataColumn)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn,DataColumn)
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Boolean)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(String,DataColumn[],Boolean)
  nameWithType: ConstraintCollection.Add(String,DataColumn[],Boolean)
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn[],Boolean)
- uid: System.Data.DataColumn[]
  parent: System.Data
  isExternal: false
  name: DataColumn
  nameWithType: DataColumn
  fullName: System.Data.DataColumn[]
  spec.csharp:
  - uid: System.Data.DataColumn
    name: DataColumn
    nameWithType: DataColumn
    fullName: DataColumn[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.ConstraintCollection.Add(System.String,System.Data.DataColumn[],System.Data.DataColumn[])
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add(String,DataColumn[],DataColumn[])
  nameWithType: ConstraintCollection.Add(String,DataColumn[],DataColumn[])
  fullName: System.Data.ConstraintCollection.Add(String,DataColumn[],DataColumn[])
- uid: System.Data.ConstraintCollection.AddRange(System.Data.Constraint[])
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: AddRange(Constraint[])
  nameWithType: ConstraintCollection.AddRange(Constraint[])
  fullName: System.Data.ConstraintCollection.AddRange(Constraint[])
- uid: System.Data.Constraint[]
  parent: System.Data
  isExternal: false
  name: Constraint
  nameWithType: Constraint
  fullName: System.Data.Constraint[]
  spec.csharp:
  - uid: System.Data.Constraint
    name: Constraint
    nameWithType: Constraint
    fullName: Constraint[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.ConstraintCollection.CanRemove(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CanRemove(Constraint)
  nameWithType: ConstraintCollection.CanRemove(Constraint)
  fullName: System.Data.ConstraintCollection.CanRemove(Constraint)
- uid: System.Data.ConstraintCollection.Clear
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Clear()
  nameWithType: ConstraintCollection.Clear()
  fullName: System.Data.ConstraintCollection.Clear()
- uid: System.Data.ConstraintCollection.CollectionChanged
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CollectionChanged
  nameWithType: ConstraintCollection.CollectionChanged
  fullName: System.Data.ConstraintCollection.CollectionChanged
- uid: System.ComponentModel.CollectionChangeEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CollectionChangeEventHandler
  nameWithType: CollectionChangeEventHandler
  fullName: System.ComponentModel.CollectionChangeEventHandler
- uid: System.Data.ConstraintCollection.Contains(System.String)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Contains(String)
  nameWithType: ConstraintCollection.Contains(String)
  fullName: System.Data.ConstraintCollection.Contains(String)
- uid: System.Data.ConstraintCollection.CopyTo(System.Data.Constraint[],System.Int32)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CopyTo(Constraint[],Int32)
  nameWithType: ConstraintCollection.CopyTo(Constraint[],Int32)
  fullName: System.Data.ConstraintCollection.CopyTo(Constraint[],Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.ConstraintCollection.IndexOf(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: IndexOf(Constraint)
  nameWithType: ConstraintCollection.IndexOf(Constraint)
  fullName: System.Data.ConstraintCollection.IndexOf(Constraint)
- uid: System.Data.ConstraintCollection.IndexOf(System.String)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: IndexOf(String)
  nameWithType: ConstraintCollection.IndexOf(String)
  fullName: System.Data.ConstraintCollection.IndexOf(String)
- uid: System.Data.ConstraintCollection.Item(System.Int32)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Item(Int32)
  nameWithType: ConstraintCollection.Item(Int32)
  fullName: System.Data.ConstraintCollection.Item(Int32)
- uid: System.Data.ConstraintCollection.Item(System.String)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Item(String)
  nameWithType: ConstraintCollection.Item(String)
  fullName: System.Data.ConstraintCollection.Item(String)
- uid: System.Data.ConstraintCollection.List
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: List
  nameWithType: ConstraintCollection.List
  fullName: System.Data.ConstraintCollection.List
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Data.ConstraintCollection.Remove(System.Data.Constraint)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Remove(Constraint)
  nameWithType: ConstraintCollection.Remove(Constraint)
  fullName: System.Data.ConstraintCollection.Remove(Constraint)
- uid: System.Data.ConstraintCollection.Remove(System.String)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ConstraintCollection.Remove(String)
  fullName: System.Data.ConstraintCollection.Remove(String)
- uid: System.Data.ConstraintCollection.RemoveAt(System.Int32)
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: RemoveAt(Int32)
  nameWithType: ConstraintCollection.RemoveAt(Int32)
  fullName: System.Data.ConstraintCollection.RemoveAt(Int32)
- uid: System.Data.ConstraintCollection.Add*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Add
  nameWithType: ConstraintCollection.Add
- uid: System.Data.ConstraintCollection.AddRange*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: AddRange
  nameWithType: ConstraintCollection.AddRange
- uid: System.Data.ConstraintCollection.CanRemove*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CanRemove
  nameWithType: ConstraintCollection.CanRemove
- uid: System.Data.ConstraintCollection.Clear*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Clear
  nameWithType: ConstraintCollection.Clear
- uid: System.Data.ConstraintCollection.Contains*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Contains
  nameWithType: ConstraintCollection.Contains
- uid: System.Data.ConstraintCollection.CopyTo*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: CopyTo
  nameWithType: ConstraintCollection.CopyTo
- uid: System.Data.ConstraintCollection.IndexOf*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: IndexOf
  nameWithType: ConstraintCollection.IndexOf
- uid: System.Data.ConstraintCollection.Item*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Item
  nameWithType: ConstraintCollection.Item
- uid: System.Data.ConstraintCollection.List*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: List
  nameWithType: ConstraintCollection.List
- uid: System.Data.ConstraintCollection.Remove*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: Remove
  nameWithType: ConstraintCollection.Remove
- uid: System.Data.ConstraintCollection.RemoveAt*
  parent: System.Data.ConstraintCollection
  isExternal: false
  name: RemoveAt
  nameWithType: ConstraintCollection.RemoveAt
