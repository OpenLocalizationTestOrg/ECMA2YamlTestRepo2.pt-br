### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.EntityDataSource
  id: EntityDataSource
  children:
  - System.Web.UI.WebControls.EntityDataSource.#ctor
  - System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)
  - System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  - System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  - System.Web.UI.WebControls.EntityDataSource.AutoPage
  - System.Web.UI.WebControls.EntityDataSource.AutoSort
  - System.Web.UI.WebControls.EntityDataSource.CommandParameters
  - System.Web.UI.WebControls.EntityDataSource.CommandText
  - System.Web.UI.WebControls.EntityDataSource.ConnectionString
  - System.Web.UI.WebControls.EntityDataSource.ContextCreated
  - System.Web.UI.WebControls.EntityDataSource.ContextCreating
  - System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  - System.Web.UI.WebControls.EntityDataSource.ContextType
  - System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  - System.Web.UI.WebControls.EntityDataSource.CreateView
  - System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  - System.Web.UI.WebControls.EntityDataSource.Deleted
  - System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  - System.Web.UI.WebControls.EntityDataSource.Deleting
  - System.Web.UI.WebControls.EntityDataSource.EnableDelete
  - System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  - System.Web.UI.WebControls.EntityDataSource.EnableInsert
  - System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  - System.Web.UI.WebControls.EntityDataSource.EntitySetName
  - System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  - System.Web.UI.WebControls.EntityDataSource.GetView(System.String)
  - System.Web.UI.WebControls.EntityDataSource.GetViewNames
  - System.Web.UI.WebControls.EntityDataSource.GroupBy
  - System.Web.UI.WebControls.EntityDataSource.Include
  - System.Web.UI.WebControls.EntityDataSource.Inserted
  - System.Web.UI.WebControls.EntityDataSource.Inserting
  - System.Web.UI.WebControls.EntityDataSource.InsertParameters
  - System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)
  - System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)
  - System.Web.UI.WebControls.EntityDataSource.OrderBy
  - System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  - System.Web.UI.WebControls.EntityDataSource.QueryCreated
  - System.Web.UI.WebControls.EntityDataSource.SaveControlState
  - System.Web.UI.WebControls.EntityDataSource.Select
  - System.Web.UI.WebControls.EntityDataSource.Selected
  - System.Web.UI.WebControls.EntityDataSource.Selecting
  - System.Web.UI.WebControls.EntityDataSource.SelectParameters
  - System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  - System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  - System.Web.UI.WebControls.EntityDataSource.TrackViewState
  - System.Web.UI.WebControls.EntityDataSource.Updated
  - System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  - System.Web.UI.WebControls.EntityDataSource.Updating
  - System.Web.UI.WebControls.EntityDataSource.Where
  - System.Web.UI.WebControls.EntityDataSource.WhereParameters
  langs:
  - csharp
  name: EntityDataSource
  nameWithType: EntityDataSource
  fullName: System.Web.UI.WebControls.EntityDataSource
  type: Class
  summary: "Representa um modelo de dados de entidade (EDM) para controles associados a dados em um aplicativo ASP.NET."
  remarks: "Neste tópico:- [Introdução](#introduction)      -   [sintaxe declarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # introdução você pode usar o controle de EntityDataSource junto com um controle associado a dados para recuperar dados de um EDM e para exibir, editar e classificar dados em uma página da Web usando pouco ou nenhum código.       Para obter mais informações, consulte [visão geral do controle de servidor Web EntityDataSource](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;declarative_syntax&quot;></a># # Sintaxe de declarativa```   <asp:EntityDataSource       AutoGenerateOrderByClause=&quot;True|False&quot;       AutoGenerateWhereClause=&quot;True|False&quot;       AutoPage=&quot;True|False&quot;       AutoSort=&quot;True|False&quot;       CommandText=&quot;string&quot;       ConnectionString=&quot;string&quot;       ContextType=&quot;typed ObjectContext&quot;       ContextTypeName=&quot;string&quot;       DefaultContainerName=&quot;string&quot;       EnableDelete=&quot;True|False&quot;       EnableInsert=&quot;True|False&quot;       EnableUpdate=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       EntitySetName=&quot;string&quot;       EntityTypeFilter=&quot;string&quot;       GroupBy=&quot;string&quot;       Include=&quot;string&quot;       OnContextCreated=&quot;ContextCreated event handler&quot;       OnContextCreating=&quot;ContextCreating event handler&quot;       OnContextDisposing=&quot;ContextDisposing event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDeleted=&quot;Deleted event handler&quot;       OnDeleting=&quot;Deleting event handler&quot;       OnException=&quot;IDynamicDataSource.Exception event handler&quot;       OnInserted=&quot;Inserted event handler&quot;       OnInserting=&quot;Inserting event handler&quot;       OnSelected=&quot;Selected event handler&quot;       OnSelecting=&quot;Selecting event handler&quot;       OnUpdated=&quot;Updated event handler&quot;       OnUpdating=&quot;Updating event handler&quot;       OrderBy=&quot;string&quot;       runat=&quot;server&quot;       Select=&quot;string&quot;       StoreOriginalValuesInViewState=&quot;True|False&quot;       Where=&quot;string&quot;   >           <CommandParameters />           <DeleteParameters />           <GroupByParameters />           <InsertParameters />           <OrderByParameters />           <SelectParameters />           <UpdateParameters />           <WhereParameters />   </asp:EntityDataSource>   ```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Selecting")]

      [System.ComponentModel.DefaultProperty("EntitySetName")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.EntityDataSourceDesigner, System.Web.Entity.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.EntityDataSource), "EntityDataSource.ico")]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class EntityDataSource : System.Web.UI.DataSourceControl, System.Web.DynamicData.IDynamicDataSource, System.Web.UI.WebControls.IQueryableDataSource
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.DataSourceControl
  implements:
  - System.Web.DynamicData.IDynamicDataSource
  - System.Web.UI.WebControls.IQueryableDataSource
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.DataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.DataSourceControl.ClientID
  - System.Web.UI.DataSourceControl.ClientIDMode
  - System.Web.UI.DataSourceControl.Controls
  - System.Web.UI.DataSourceControl.CreateControlCollection
  - System.Web.UI.DataSourceControl.EnableTheming
  - System.Web.UI.DataSourceControl.FindControl(System.String)
  - System.Web.UI.DataSourceControl.Focus
  - System.Web.UI.DataSourceControl.HasControls
  - System.Web.UI.DataSourceControl.RaiseDataSourceChangedEvent(System.EventArgs)
  - System.Web.UI.DataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.DataSourceControl.SkinID
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.DataSourceControl.System#ComponentModel#IListSource#GetList
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.DataSourceControl.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.DataSourceControl.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntityDataSource()
  nameWithType: EntityDataSource.EntityDataSource()
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource()
  type: Constructor
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> classe."
  syntax:
    content: public EntityDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.EntityDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)
  id: '#ctor(System.Data.EntityClient.EntityConnection)'
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntityDataSource(EntityConnection)
  nameWithType: EntityDataSource.EntityDataSource(EntityConnection)
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource(EntityConnection)
  type: Constructor
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> classe com a conexão fornecida."
  syntax:
    content: public EntityDataSource (System.Data.EntityClient.EntityConnection connection);
    parameters:
    - id: connection
      type: System.Data.EntityClient.EntityConnection
      description: "Um <xref href=&quot;System.Data.EntityClient.EntityConnection&quot;> </xref> para o modelo de dados de entidade (EDM)."
  overload: System.Web.UI.WebControls.EntityDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  id: AutoGenerateOrderByClause
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoGenerateOrderByClause
  nameWithType: EntityDataSource.AutoGenerateOrderByClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle cria dinamicamente uma cláusula ORDER BY com base nos valores de <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters*>coleção.</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters*>"
  remarks: "Quando a propriedade AutoGenerateOrderByClause o <xref:System.Web.UI.WebControls.EntityDataSource>controle é definido como `true`, o controle gera automaticamente uma cláusula ORDER BY do parâmetro no <xref:System.Web.UI.WebControls.ParameterCollection>atribuído ao <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> </xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> Isso elimina a necessidade de atribuir explicitamente uma cláusula ORDER BY para o <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>       Se você definir a propriedade AutoGenerateOrderByClause como `true`, você não deve atribuir explicitamente um valor para o <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>"
  example:
  - "The following example automatically generates the ORDER BY clause and uses the value of the `OrderByDropDownList` to set the value of the parameter.  \n  \n```  \n<asp:DropDownList AutoPostBack=\"true\" ID=\"OrderByDropDownList\" runat=\"server\">  \n    <asp:ListItem Value=\"TotalDue\"></asp:ListItem>  \n    <asp:ListItem Value=\"OrderDate\"></asp:ListItem>  \n</asp:DropDownList>  \n  \n<asp:EntityDataSource ID=\"EntityDataSourceWithAutoGenOrderBy\" runat=\"server\"   \nConnectionString=\"name=AdventureWorksEntities\"   \nDefaultContainerName=\"AdventureWorksEntities\"   \nEntitySetName=\"SalesOrderHeaders\"   \nSelect=\"it.SalesOrderID, it.TotalDue, it.OrderDate\"  \nAutoGenerateOrderByClause=\"True\">  \n<OrderByParameters>  \n    <asp:ControlParameter  \n    ControlID=\"OrderByDropDownList\"/>  \n</OrderByParameters>  \n</asp:EntityDataSource>  \n```  \n  \n The following example automatically generates the ORDER BY clause and uses the `DefaultValue` attribute of the `Parameter` element to set the value of the parameter.  \n  \n```  \n<asp:EntityDataSource ID=\"EntityDataSourceWithAutoGenOrderBy\" runat=\"server\"   \nConnectionString=\"name=AdventureWorksEntities\"   \nDefaultContainerName=\"AdventureWorksEntities\"   \nEntitySetName=\"SalesOrderHeaders\"   \nSelect=\"it.SalesOrderID, it.TotalDue, it.OrderDate\"  \nAutoGenerateOrderByClause=\"True\">  \n<OrderByParameters>  \n    <asp:Parameter  \n    DefaultValue=\"TotalDue\"/>  \n</OrderByParameters>  \n</asp:EntityDataSource>  \n```"
  syntax:
    content: public bool AutoGenerateOrderByClause { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle cria a cláusula ORDER BY; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando a propriedade AutoGenerateOrderByClause é definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy*>propriedade não é nula.</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  id: AutoGenerateWhereClause
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoGenerateWhereClause
  nameWithType: EntityDataSource.AutoGenerateWhereClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle cria dinamicamente uma cláusula WHERE com base nos valores definidos no <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters*>coleção.</xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters*>"
  remarks: "Para filtrar os resultados da consulta por uma propriedade de tipo de entidade para uma expressão que corresponda, você pode usar a propriedade AutoGenerateWhereClause. Quando a propriedade AutoGenerateWhereClause o <xref:System.Web.UI.WebControls.EntityDataSource>controle é definido como `true`, o controle gera automaticamente um `WHERE` cláusula de parâmetros no <xref:System.Web.UI.WebControls.ParameterCollection>do <xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.WhereParameters%2A> </xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> O <xref:System.Web.UI.WebControls.Parameter.Name%2A>propriedade de cada parâmetro deve corresponder a um nome de propriedade de tipo de entidade que está incluído nos resultados da consulta.</xref:System.Web.UI.WebControls.Parameter.Name%2A> Se você definir a propriedade AutoGenerateWhereClause como `true`, você não deve atribuir explicitamente um `WHERE` cláusula para o <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>      ## Exemplo no exemplo a seguir, a propriedade AutoGenerateWhereClause é definido como `true`. Portanto, o <xref:System.Web.UI.WebControls.Parameter.Name%2A>da propriedade deve corresponder a um nome de propriedade de tipo de entidade que está incluído nos resultados da consulta.</xref:System.Web.UI.WebControls.Parameter.Name%2A> A consulta seleciona as propriedades SalesOrderID e TotalDue do tipo de entidade SalesOrderHeader. Gerado automaticamente `WHERE` cláusula filtra os resultados da consulta, comparando o valor TotalDue para um valor selecionado no controle de caixa de listagem TotalDueList.      ```   <asp:EntityDataSource ID=&quot;SalesOrderHeaderWithAutoParam&quot; runat=&quot;server&quot;       ConnectionString=&quot;name=AdventureWorksEntities&quot;       DefaultContainerName=&quot;AdventureWorksEntities&quot;       EntitySetName=&quot;SalesOrderHeaders&quot;       Select=&quot;it.SalesOrderID, it.TotalDue&quot;       AutoGenerateWhereClause=&quot;True&quot;>       <WhereParameters>           <asp:ControlParameter ControlID=&quot;TotalDueList&quot;               Name=&quot;TotalDue&quot; PropertyName=&quot;SelectedValue&quot; DbType=&quot;Decimal&quot; />       </WhereParameters>   </asp:EntityDataSource>   ```# # Exemplo por padrão, a propriedade AutoGenerateWhereClause é definida como `false`. Isso significa que temos que fornecer o `WHERE` cláusula. No exemplo a seguir, o `WHERE` cláusula é `Where=&quot;it.TotalDue < @totalDueParam&quot;` e totalDueParam é o nome do parâmetro.      ```   <asp:EntityDataSource ID=&quot;SalesOrderHeaderWithOutAutoParam&quot; runat=&quot;server&quot;       ConnectionString=&quot;name=AdventureWorksEntities&quot;       DefaultContainerName=&quot;AdventureWorksEntities&quot;       EntitySetName=&quot;SalesOrderHeaders&quot;       Where=&quot;it.TotalDue < @totalDueParam&quot;        Select=&quot;it.SalesOrderID, it.TotalDue&quot;>       <WhereParameters>           <asp:ControlParameter ControlID=&quot;TotalDueList&quot;               Name=&quot;totalDueParam&quot; PropertyName=&quot;SelectedValue&quot; DbType=&quot;Decimal&quot; />       </WhereParameters>   </asp:EntityDataSource>   ```"
  syntax:
    content: public bool AutoGenerateWhereClause { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle cria a cláusula WHERE; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando a propriedade AutoGenerateWhereClause é definida como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e <xref:System.Web.UI.WebControls.EntityDataSource.Where*>propriedade não é nula.</xref:System.Web.UI.WebControls.EntityDataSource.Where*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoPage
  id: AutoPage
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoPage
  nameWithType: EntityDataSource.AutoPage
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoPage
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle oferece suporte à navegação pelas seções de dados em tempo de execução."
  remarks: "O <xref:System.Web.UI.WebControls.EntityDataSource>controle oferece suporte para paginação automaticamente os dados retornados por consultas.</xref:System.Web.UI.WebControls.EntityDataSource> A propriedade AutoPage é uma propriedade booleana que indica se a paginação está habilitada para os dados retornados por consultas associadas aos controles de dados. Quando essa propriedade é definida como `true`, o <xref:System.Web.UI.WebControls.EntityDataSource>controle adiciona os métodos de construtor de consulta apropriada para o <xref:System.Data.Objects.ObjectQuery%601>com base nas informações fornecidas para o <xref:System.Web.UI.WebControls.EntityDataSourceView>pelo controle associado a dados.</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Web.UI.WebControls.EntityDataSource>       O valor da propriedade AutoPage determina se o <xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A>propriedade do <xref:System.Web.UI.WebControls.EntityDataSourceView>controle que dá suporte à fonte de dados é `true` ou `false`.</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanPage%2A>       Quando você define uma projeção com paginação habilitada, você deve definir a propriedade pela qual ordenar os resultados. Isso significa que quando você definir o <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>propriedade para definir uma projeção e AutoPage definido como `true`, você também deve definir o <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>propriedade para definir a ordem ou definir o <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>propriedade `true` e adicione um parâmetro de ORDER BY para o <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>coleção.</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> </xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> </xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> </xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>"
  syntax:
    content: public bool AutoPage { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o usuário pode ler os dados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.EntityDataSource.AutoPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.AutoSort
  id: AutoSort
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: AutoSort
  nameWithType: EntityDataSource.AutoSort
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoSort
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle oferece suporte a classificação dos dados em tempo de execução."
  remarks: "O <xref:System.Web.UI.WebControls.EntityDataSource>controle dá suporte à classificação automaticamente os dados retornados por consultas.</xref:System.Web.UI.WebControls.EntityDataSource> A propriedade AutoClassificação o <xref:System.Web.UI.WebControls.EntityDataSource>controle é uma propriedade booleana que indica se a classificação está habilitada para os dados retornados por consultas que estão associadas a controles de dados.</xref:System.Web.UI.WebControls.EntityDataSource> Quando essa propriedade é definida como `true`, o <xref:System.Web.UI.WebControls.EntityDataSource>controle adiciona os métodos de construtor de consulta apropriada para o <xref:System.Data.Objects.ObjectQuery%601>com base nas informações fornecidas para o <xref:System.Web.UI.WebControls.EntityDataSourceView>pelo controle associado a dados.</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Web.UI.WebControls.EntityDataSource>       O valor da propriedade AutoClassificação determina se o <xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A>e <xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A>Propriedades do <xref:System.Web.UI.WebControls.EntityDataSourceView>controle que dá suporte à fonte de dados é `true` ou `false`.</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanRetrieveTotalRowCount%2A> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanSort%2A>"
  syntax:
    content: public bool AutoSort { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o usuário pode classificar os dados. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.EntityDataSource.AutoSort*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.CommandParameters
  id: CommandParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: CommandParameters
  nameWithType: EntityDataSource.CommandParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetro para a consulta."
  remarks: "A propriedade CommandParameters é usada para acessar o <xref:System.Web.UI.WebControls.ParameterCollection>de parâmetros que são passados para uma consulta Entity SQL explícita que é especificada usando o <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> </xref:System.Web.UI.WebControls.ParameterCollection>"
  example:
  - "The following example supplies Entity SQL command text that returns a collection of Product objects.  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT value p FROM Products AS p  \n        WHERE p.ProductID  \n        BETWEEN @OrderIdMin AND @OrderIdMax\"  \n    ConnectionString=\"name=AdventureWorksEntities\"   \n    DefaultContainerName=\"AdventureWorksEntities\" >  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIdMin\"   \n            ControlID=\"ProductIdMin\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIdMax\"   \n            ControlID=\"ProductIdMax\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```  \n  \n The following example returns a projected series of columns:  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  \n         FROM Products AS p   \n         WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax\"   \n         ContextTypeName=\"AdventureWorksModel. AdventureWorksEntities\">  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIDMin\"   \n               ControlID=\"ProductIDMinTextBox\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIDMax\"   \n               ControlID=\"ProductIDMaxTextBox\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection CommandParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.ParameterCollection&quot;> </xref> que contém os parâmetros que são passados para o comando de consulta."
  overload: System.Web.UI.WebControls.EntityDataSource.CommandParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.CommandText
  id: CommandText
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: CommandText
  nameWithType: EntityDataSource.CommandText
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandText
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um comando SQL da entidade que define a consulta."
  remarks: "A propriedade CommandText do <xref:System.Web.UI.WebControls.EntityDataSource>controle permite que você especifique uma consulta que usa uma expressão de Entity SQL personalizada.</xref:System.Web.UI.WebControls.EntityDataSource> Como a instrução SELECT, CommandText cria uma projeção dos dados originais que não são atualizáveis.       Quando a propriedade CommandText é atribuída, update, insert e delete funcionalidades estão desabilitadas. Nesse caso, os métodos <xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>, <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>, e <xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A>de relacionado <xref:System.Web.UI.WebControls.EntityDataSourceView>controle todos retornam `false`.</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>       Quando a propriedade CommandText é definida, uma exceção é lançada quando o <xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>método é chamado por um controle de dados associados a um <xref:System.Web.UI.WebControls.EntityDataSource>controlar se o valor de <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>, <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>, ou <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>é definido como `true`.</xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.DataSourceView.ExecuteSelect%2A>       Se o CommandText é definido como uma consulta que retorna uma projeção de propriedades (por exemplo, &quot;`SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`&quot;), um <xref:System.Data.Common.DbDataRecord>será retornado.</xref:System.Data.Common.DbDataRecord>"
  example:
  - "The following example uses the supplied Entity SQL command to returns a collection of Product objects.  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT value p FROM Products AS p  \n        WHERE p.ProductID  \n        BETWEEN @OrderIdMin AND @OrderIdMax\"  \n    ConnectionString=\"name=AdventureWorksEntities\"   \n    DefaultContainerName=\"AdventureWorksEntities\" >  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIdMin\"   \n            ControlID=\"ProductIdMin\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIdMax\"   \n            ControlID=\"ProductIdMax\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```  \n  \n The following example returns a projected series of columns:  \n  \n```  \n<asp:EntityDataSource ID=\"ProductDataSource\" runat=\"server\"   \n    CommandText=\"SELECT p.ProductID, p.ProductName, p.UnitsOnOrder  \n          FROM Products AS p   \n          WHERE p.ProductID BETWEEN @OrderIDMin AND @OrderIDMax\"   \n          ContextTypeName=\"AdventureWorksModel. AdventureWorksEntities\">  \n    <CommandParameters>  \n        <asp:ControlParameter Name=\"OrderIDMin\"   \n                ControlID=\"ProductIDMinTextBox\" Type=\"Int32\"/>  \n        <asp:ControlParameter Name=\"OrderIDMax\"   \n                ControlID=\"ProductIDMaxTextBox\" Type=\"Int32\" />  \n    </CommandParameters>  \n</asp:EntityDataSource>  \n  \n```"
  syntax:
    content: public string CommandText { get; set; }
    return:
      type: System.String
      description: "Um <xref uid=&quot;langword_csharp_string&quot; name=&quot;string&quot; href=&quot;&quot;> </xref> valor que é a consulta SQL de entidade."
  overload: System.Web.UI.WebControls.EntityDataSource.CommandText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ConnectionString
  id: ConnectionString
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ConnectionString
  nameWithType: EntityDataSource.ConnectionString
  fullName: System.Web.UI.WebControls.EntityDataSource.ConnectionString
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia de caracteres de conexão que é usada para executar a consulta."
  remarks: "A propriedade ConnectionString do <xref:System.Web.UI.WebControls.EntityDataSource>controle pode ser inicializado de uma cadeia de conexão nomeada EDM armazenada no elemento do arquivo de configuração do aplicativo.</xref:System.Web.UI.WebControls.EntityDataSource> Quando o EDM é criado usando o Assistente de modelo de dados de entidade, uma conexão de EDM nomeado é criado no arquivo de configuração do aplicativo. Quando uma cadeia de caracteres de conexão nomeada EDM é encontrada no arquivo de configuração do aplicativo, a conexão está visível como uma opção no Assistente para configurar a fonte de dados do designer EntityDataSource. Para obter mais informações, consulte [configurar Assistente de fonte de dados (Controle EntityDataSource)](http://msdn.microsoft.com/en-us/263976a5-2406-47c0-8919-c6af6e76d78e).       Se o <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>propriedade não for especificada, ambos os <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>e propriedades ConnectionString devem ser definidas para o controle criar <xref:System.Data.Objects.ObjectContext>.</xref:System.Data.Objects.ObjectContext> </xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A> </xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>"
  syntax:
    content: public string ConnectionString { get; set; }
    return:
      type: System.String
      description: "A cadeia de caracteres de conexão para a consulta."
  overload: System.Web.UI.WebControls.EntityDataSource.ConnectionString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreated
  id: ContextCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextCreated
  nameWithType: EntityDataSource.ContextCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreated
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando o <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> acabou de criar o <xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref> que é usado para trabalhar com objetos de dados de entidade."
  remarks: "Lidar com esse evento para acessar o <xref:System.Data.Objects.ObjectContext>que é usada pelo <xref:System.Web.UI.WebControls.EntityDataSource>controle para executar a consulta e rastrear alterações.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> Esse objeto de contexto pode ser armazenado e usado para operações sucessivas fora <xref:System.Web.UI.WebControls.EntityDataSource>.</xref:System.Web.UI.WebControls.EntityDataSource> O <xref:System.Data.Objects.ObjectContext>é obtido a partir de <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>que é retornado pelo evento ContextCreated.</xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs> </xref:System.Data.Objects.ObjectContext> Para obter mais informações, consulte [o gerenciamento de ciclo de vida de contexto de objeto (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160). Para obter mais informações sobre o contexto de objeto, consulte [resolução de identidade, gerenciamento de estado e controle de alterações](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0).       O evento ContextCreated permite que você atribua a <xref:System.Data.Objects.ObjectContext>que foi criado em uma variável para operações sucessivas fora <xref:System.Web.UI.WebControls.EntityDataSource>.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> O <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName>propriedade contém o contexto que foi criado na <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>evento.</xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating> </xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName> Se o usuário não atribuir um contexto durante a <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>evento, a instância do contexto contidos em <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName>é criado pelo <xref:System.Web.UI.WebControls.EntityDataSource>com base no <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=fullName>, <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=fullName>, ou <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=fullName>Propriedades.</xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs.Context%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.EntityDataSource.ContextCreating>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs> ContextCreated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreating
  id: ContextCreating
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextCreating
  nameWithType: EntityDataSource.ContextCreating
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreating
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando o <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> cria o <xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref> que é usado para trabalhar com objetos de dados de entidade."
  remarks: "Manipular o evento ContextCreating para fornecer seu próprio <xref:System.Data.Objects.ObjectContext>em vez de ter um novo <xref:System.Data.Objects.ObjectContext>criado.</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext> Se o evento ContextCreating não é manipulado ou o manipulador não oferece uma <xref:System.Data.Objects.ObjectContext>, o <xref:System.Web.UI.WebControls.EntityDataSource>cria um acordo com sua configuração.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> Quando um <xref:System.Data.Objects.ObjectContext>é fornecido para o evento ContextCreating, a mesma instância é atribuída para o `Context` propriedade do objeto de evento de eventos sucessivos.</xref:System.Data.Objects.ObjectContext> Para obter mais informações, consulte [o gerenciamento de ciclo de vida de contexto de objeto (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160). Para obter mais informações sobre o contexto de objeto, consulte [resolução de identidade, gerenciamento de estado e controle de alterações](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)."
  example:
  - "The following example shows how to create an <xref:System.Data.Objects.ObjectContext> variable of the <xref:System.Web.UI.Page> object and assign it to the <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs.Context%2A> property of the <xref:System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs> object.  \n  \n```c#  \npublic partial class _Default : System.Web.UI.Page  \n    {  \n        AdventureWorksModel.AdventureWorksEntities objCtx =  \n            new AdventureWorksModel.AdventureWorksEntities();  \n  \n        protected void EntityDataSource2_ContextCreating(object sender,   \n            EntityDataSourceContextCreatingEventArgs e)  \n        {  \n            e.Context = objCtx;  \n        }  \n    }  \n```"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs> ContextCreating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  id: ContextDisposing
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextDisposing
  nameWithType: EntityDataSource.ContextDisposing
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de um <xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref> é descartado."
  remarks: "Lidar com esse evento para impedir que o <xref:System.Data.Objects.ObjectContext>usado pelo <xref:System.Web.UI.WebControls.EntityDataSource>controle do que está sendo descartado.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> Faça isso quando você deseja usar um único <xref:System.Data.Objects.ObjectContext>instância em sua página com vários controles ou instâncias do <xref:System.Web.UI.WebControls.EntityDataSource>controle.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> Para impedir que o <xref:System.Data.Objects.ObjectContext>de sendo descartadas, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade do <xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>do objeto para `true`.</xref:System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> </xref:System.Data.Objects.ObjectContext> Para obter mais informações, consulte [o gerenciamento de ciclo de vida de contexto de objeto (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160). Para obter mais informações sobre o contexto de objeto, consulte [resolução de identidade, gerenciamento de estado e controle de alterações](http://msdn.microsoft.com/en-us/3bd49311-0e72-4ea4-8355-38fe57036ba0)."
  example:
  - "To keep an existing <xref:System.Data.Objects.ObjectContext> instance member for future reference cancel the <xref:System.Web.UI.WebControls.EntityDataSource.ContextCreated> event as shown by the following code.  \n  \n```c#  \nprotected void EntityDataSource2_ContextDisposing(object sender,   \n    EntityDataSourceContextDisposingEventArgs e)  \n{  \n    e.Cancel = true;  \n}  \n  \n```"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs> ContextDisposing;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextType
  id: ContextType
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextType
  nameWithType: EntityDataSource.ContextType
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextType
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o tipo <xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref> usado pelo <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle."
  remarks: "O <xref:System.Data.Objects.ObjectContext>usado pelo <xref:System.Web.UI.WebControls.EntityDataSource>controle pode ser acessado da propriedade ContextType.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> Para obter mais informações, consulte [o gerenciamento de ciclo de vida de contexto de objeto (EntityDataSource)](http://msdn.microsoft.com/en-us/67bc2486-112c-47c3-b23f-0297f7ac2160)."
  syntax:
    content: public Type ContextType { get; set; }
    return:
      type: System.Type
      description: "Um objeto que deriva de <xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref>."
  overload: System.Web.UI.WebControls.EntityDataSource.ContextType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  id: ContextTypeName
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: ContextTypeName
  nameWithType: EntityDataSource.ContextTypeName
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome totalmente qualificado do tipado <xref href=&quot;System.Data.Objects.ObjectContext&quot;> </xref> que é usada pelo <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle."
  remarks: "A propriedade ContextTypeName do <xref:System.Web.UI.WebControls.EntityDataSource>controle é uma cadeia de caracteres que especifica o nome de tipo totalmente qualificado do tipado <xref:System.Data.Objects.ObjectContext>que é usada pelo <xref:System.Web.UI.WebControls.EntityDataSource>controle.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Data.Objects.ObjectContext> </xref:System.Web.UI.WebControls.EntityDataSource> Se o ContextTypeName propriedade não é especificado, ambos o <xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>e <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>propriedades devem ser definidas para o controle criar <xref:System.Data.Objects.ObjectContext>.</xref:System.Data.Objects.ObjectContext> </xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> </xref:System.Web.UI.WebControls.EntityDataSource.DefaultContainerName%2A>"
  syntax:
    content: public string ContextTypeName { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.String>que é o nome totalmente qualificado do tipo.</xref:System.String>"
  overload: System.Web.UI.WebControls.EntityDataSource.ContextTypeName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.CreateView
  id: CreateView
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: CreateView()
  nameWithType: EntityDataSource.CreateView()
  fullName: System.Web.UI.WebControls.EntityDataSource.CreateView()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Cria uma nova instância do <xref href=&quot;System.Web.UI.WebControls.EntityDataSourceView&quot;> </xref> que está associado este controle."
  remarks: "Para fornecer uma exibição personalizada, você pode substituir esse método em uma classe derivada."
  syntax:
    content: protected virtual System.Web.UI.WebControls.EntityDataSourceView CreateView ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.EntityDataSourceView
      description: "Um objeto que atua como a interface para controles associados a dados."
  overload: System.Web.UI.WebControls.EntityDataSource.CreateView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  id: DefaultContainerName
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: DefaultContainerName
  nameWithType: EntityDataSource.DefaultContainerName
  fullName: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do contêiner padrão."
  remarks: "Se o <xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>propriedade não for especificada, tanto o DefaultContainerName e <xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A>propriedades devem ser definidas para o controle criar <xref:System.Data.Objects.ObjectContext>.</xref:System.Data.Objects.ObjectContext> </xref:System.Web.UI.WebControls.EntityDataSource.ConnectionString%2A> </xref:System.Web.UI.WebControls.EntityDataSource.ContextTypeName%2A>"
  syntax:
    content: public string DefaultContainerName { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.String>que é o nome do contêiner padrão.</xref:System.String>"
  overload: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Deleted
  id: Deleted
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Deleted
  nameWithType: EntityDataSource.Deleted
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleted
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Ocorre depois que um objeto foi excluído da fonte de dados."
  remarks: "O evento excluído é gerado após o <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>método apenas foi chamado com êxito no <xref:System.Data.Objects.ObjectContext>para excluir um objeto.</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext.SaveChanges%2A> O <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>objeto é usado para acessar o objeto excluído.</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> Esse objeto está em um <xref:System.Data.EntityState>estado.</xref:System.Data.EntityState>       Se ocorrer um erro quando um objeto é excluído, o evento excluído é gerado, o <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>objeto é definido para retornado <xref:System.Exception>e o <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>está definida como `null`.</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A> </xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> Se você lidar com a exceção no manipulador de eventos excluído, defina o <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>propriedade `true`.</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> Isso impede que a exceção seja gerado novamente. Quando você especifica um valor de `false` para o <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>propriedade, o <xref:System.Web.UI.WebControls.EntityDataSource>gera novamente a exceção.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> Deleted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  id: DeleteParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: DeleteParameters
  nameWithType: EntityDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que são usados durante uma operação de exclusão."
  remarks: "Para aplicativos web que se destinam a ASP.NET 4 ou anterior, o valor da propriedade é armazenado em estado de exibição e é mantido automaticamente entre postbacks. Para aplicativos web ASP.NET 4.5 de destino, o valor da propriedade não é armazenado em estado de exibição, e você deve definir o valor para cada solicitação HTTP."
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection DeleteParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Os parâmetros que são usados durante uma operação de exclusão."
  overload: System.Web.UI.WebControls.EntityDataSource.DeleteParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Deleting
  id: Deleting
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Deleting
  nameWithType: EntityDataSource.Deleting
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleting
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes que um objeto é excluído da fonte de dados."
  remarks: "A exclusão é gerado antes do <xref:System.Data.Objects.ObjectContext.SaveChanges%2A>método é chamado no <xref:System.Data.Objects.ObjectContext>para excluir um objeto.</xref:System.Data.Objects.ObjectContext> </xref:System.Data.Objects.ObjectContext.SaveChanges%2A> O <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>objeto é usado para acessar o objeto a ser excluído.</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> As propriedades deste objeto não podem ser totalmente definidas. Somente as propriedades necessárias para identificar o objeto devem ser definidas.       Para interromper o objeto que está sendo excluído, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>do objeto para `true`.</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Se ocorrer um erro durante a preparação para excluir que um objeto, o evento de exclusão é gerado e a <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>propriedade do <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>objeto é definida como o retornado <xref:System.Exception>.</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>       Ao lidar com a exceção no manipulador de eventos de exclusão, defina o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>propriedade `true`.</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> Isso impede que a exceção seja gerado novamente. Quando você especifica um valor de `false` para o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>propriedade, o <xref:System.Web.UI.WebControls.EntityDataSource>gera novamente a exceção.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> Deleting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableDelete
  id: EnableDelete
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableDelete
  nameWithType: EntityDataSource.EnableDelete
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableDelete
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se objetos podem ser excluídos por meio de <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle."
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>não pode ser definido se a propriedade EnableDelete está habilitada.</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       Um `false` valor atribuído à propriedade EnableDelete o <xref:System.Web.UI.WebControls.EntityDataSource>força o <xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A>propriedade relacionado <xref:System.Web.UI.WebControls.EntityDataSourceView>objeto para retornar `false`.</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanDelete%2A> </xref:System.Web.UI.WebControls.EntityDataSource> Quando a propriedade EnableDelete for definida como `false`, um <xref:System.NotSupportedException>será gerado se o controle de associação de dados chama o <xref:System.Web.UI.DataSourceView.ExecuteDelete%2A>método em <xref:System.Web.UI.WebControls.EntityDataSourceView>.</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.DataSourceView.ExecuteDelete%2A> </xref:System.NotSupportedException>       Se qualquer uma das condições de atualização não forem atendidos e a propriedade EnableDelete está definida como `true`, o <xref:System.Web.UI.WebControls.EntityDataSource>gera uma exceção.</xref:System.Web.UI.WebControls.EntityDataSource>"
  syntax:
    content: public bool EnableDelete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as operações de exclusão automática estiverem habilitadas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.EntityDataSource.EnableDelete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  id: EnableFlattening
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableFlattening
  nameWithType: EntityDataSource.EnableFlattening
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o valor que indica se você deseja desativar a criação do wrapper."
  remarks: "Quando você inicializa o <xref:System.Web.UI.WebControls.EntityDataSource>controle usando o <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>propriedade, o <xref:System.Web.UI.WebControls.EntityDataSource>encapsula cada instância de entidade em resultados em um objeto do <xref:System.ComponentModel.ICustomTypeDescriptor>tipo.</xref:System.ComponentModel.ICustomTypeDescriptor> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> </xref:System.Web.UI.WebControls.EntityDataSource> Para obter mais informações, consulte [objetos nivelamento (EntityDataSource)](http://msdn.microsoft.com/en-us/08a30ef3-1132-4ac4-856c-5ed3d65eaf16)."
  syntax:
    content: public bool EnableFlattening { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se as propriedades serão niveladas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.EntityDataSource.EnableFlattening*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableInsert
  id: EnableInsert
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableInsert
  nameWithType: EntityDataSource.EnableInsert
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableInsert
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se objetos podem ser adicionados por meio de <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle."
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>não pode ser definido se a propriedade EnableInsert está definida como `true`.</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       Um `false` valor atribuído à propriedade EnableInsert o <xref:System.Web.UI.WebControls.EntityDataSource>força o <xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A>propriedade relacionado <xref:System.Web.UI.WebControls.EntityDataSourceView>objeto para retornar `false`.</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSource> Quando a propriedade EnableInsert é definida como `false`, um <xref:System.NotSupportedException>será gerado se o controle de associação de dados chama o <xref:System.Web.UI.DataSourceView.ExecuteInsert%2A>método em <xref:System.Web.UI.WebControls.EntityDataSourceView>.</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.DataSourceView.ExecuteInsert%2A> </xref:System.NotSupportedException>       Se qualquer uma das condições de atualização não forem atendidos e a propriedade EnableInsert está definida como `true`, o <xref:System.Web.UI.WebControls.EntityDataSource>gera uma exceção.</xref:System.Web.UI.WebControls.EntityDataSource>"
  syntax:
    content: public bool EnableInsert { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as operações de inserção automática estiverem habilitadas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.EntityDataSource.EnableInsert*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  id: EnableUpdate
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EnableUpdate
  nameWithType: EntityDataSource.EnableUpdate
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se objetos podem ser modificados por meio de <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle."
  remarks: "<xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>não pode ser definido se a propriedade EnableUpdate está definida como `true`.</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       Um `false` valor atribuído para o força de propriedade EnableUpdate o <xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A>propriedade relacionado <xref:System.Web.UI.WebControls.EntityDataSourceView>objeto para retornar `false`.</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.WebControls.EntityDataSourceView.CanUpdate%2A> Quando a propriedade EnableUpdate é definida como `false`, um <xref:System.NotSupportedException>será gerado se o controle de associação de dados chama o <xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A>método em <xref:System.Web.UI.WebControls.EntityDataSourceView>.</xref:System.Web.UI.WebControls.EntityDataSourceView> </xref:System.Web.UI.DataSourceView.ExecuteUpdate%2A> </xref:System.NotSupportedException>       Definindo a propriedade EnableUpdate como `true` não garante a capacidade de atualização.       Se qualquer uma das condições de atualização não forem atendidos e a propriedade EnableUpdate está definida como `true`, o <xref:System.Web.UI.WebControls.EntityDataSource>gera uma exceção.</xref:System.Web.UI.WebControls.EntityDataSource>"
  syntax:
    content: public bool EnableUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as operações de atualização automática estiverem habilitadas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.EntityDataSource.EnableUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EntitySetName
  id: EntitySetName
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntitySetName
  nameWithType: EntityDataSource.EntitySetName
  fullName: System.Web.UI.WebControls.EntityDataSource.EntitySetName
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do conjunto de entidades usado pelo <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle."
  remarks: "A propriedade EntitySetName o <xref:System.Web.UI.WebControls.EntityDataSource>controle é usado para especificar o conjunto de entidades do tipo dos objetos que são acessados pelo controle.</xref:System.Web.UI.WebControls.EntityDataSource> O valor da propriedade EntitySetName é a instrução SELECT padrão que é usada pelo controle. A configuração não será necessária se a consulta é especificada como uma expressão de Entity SQL que é fornecida para o <xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.CommandText%2A> Para obter mais informações, consulte [texto de comando personalizado (EntityDataSource)](http://msdn.microsoft.com/en-us/d42e90d0-1443-474e-8940-53f504d6fc91)."
  syntax:
    content: public string EntitySetName { get; set; }
    return:
      type: System.String
      description: "Nome do conjunto de entidade."
  overload: System.Web.UI.WebControls.EntityDataSource.EntitySetName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  id: EntityTypeFilter
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: EntityTypeFilter
  nameWithType: EntityDataSource.EntityTypeFilter
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a expressão que limita a consulta apenas os resultados de um tipo derivado específico."
  remarks: "Quando o <xref:System.Web.UI.WebControls.EntityDataSource>controle deve retornar um tipo derivado específico, a propriedade EntityTypeFilter também deve ser definida para especificar o nome deste tipo derivado.</xref:System.Web.UI.WebControls.EntityDataSource> Se o <xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A>propriedade especifica um conjunto de entidades que pode gerar resultados polimórficos, a propriedade EntityTypeFilter deve ser capaz de editar os dados.</xref:System.Web.UI.WebControls.EntityDataSource.EntitySetName%2A> Isso tem o mesmo efeito da aplicação do <xref:System.Data.Objects.ObjectQuery%601.OfType%2A>método <xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.OfType%2A> Se a associação de dados é somente leitura, a propriedade EntityTypeFilter não é necessária. Nesse caso, as propriedades do objeto retornado pela consulta serão aquelas do tipo de entidade padrão para o conjunto de theentity."
  syntax:
    content: public string EntityTypeFilter { get; set; }
    return:
      type: System.String
      description: "A expressão de filtro."
  overload: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.GetView(System.String)
  id: GetView(System.String)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: GetView(String)
  nameWithType: EntityDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.EntityDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém a exibição da fonte de dados nomeada que está associada com o controle de fonte de dados."
  remarks: "O <xref:System.Web.UI.WebControls.EntityDataSource>controle oferece suporte à exibição da fonte de dados de apenas um.</xref:System.Web.UI.WebControls.EntityDataSource> Como todos os objetos de exibição de fonte de dados, o <xref:System.Web.UI.WebControls.EntityDataSourceView>objeto que está associado com o controle de fonte de dados define seus recursos, executa todo o trabalho que é necessário para recuperar dados do banco de dados subjacente e executa operações, como classificação, inserção, exclusão e atualização.</xref:System.Web.UI.WebControls.EntityDataSourceView>"
  syntax:
    content: protected override System.Web.UI.DataSourceView GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "O nome do modo de exibição para recuperar. Porque o <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle oferece suporte a apenas um modo de exibição, `viewName` será ignorado."
    return:
      type: System.Web.UI.DataSourceView
      description: "O <xref href=&quot;System.Web.UI.WebControls.EntityDataSourceView&quot;> </xref> que está associado a <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.EntityDataSource.GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.GetViewNames
  id: GetViewNames
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: GetViewNames()
  nameWithType: EntityDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.EntityDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma coleção de nomes que representa a lista de objetos de exibição que estão associados a <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle."
  remarks: "O <xref:System.Web.UI.WebControls.EntityDataSource>controle oferece suporte a apenas uma exibição em seus dados subjacentes.</xref:System.Web.UI.WebControls.EntityDataSource> O método GetViewNames retorna uma coleção de elemento único desse nome de um modo de exibição como uma cadeia de caracteres."
  syntax:
    content: protected override System.Collections.ICollection GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que contém os nomes das exibições associadas a <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.EntityDataSource.GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.GroupBy
  id: GroupBy
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: GroupBy
  nameWithType: EntityDataSource.GroupBy
  fullName: System.Web.UI.WebControls.EntityDataSource.GroupBy
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a expressão de Entity SQL que especifica como agrupar os resultados da consulta."
  syntax:
    content: public string GroupBy { get; set; }
    return:
      type: System.String
      description: "A cláusula GROUP BY."
  overload: System.Web.UI.WebControls.EntityDataSource.GroupBy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Include
  id: Include
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Include
  nameWithType: EntityDataSource.Include
  fullName: System.Web.UI.WebControls.EntityDataSource.Include
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a expressão que especifica os objetos relacionados para incluir nos resultados da consulta."
  remarks: "A propriedade incluem o <xref:System.Web.UI.WebControls.EntityDataSource>controle especifica uma lista separada por vírgulas de caminhos de consulta que definem o que são de objetos retornado junto com o objeto especificamente consultado.</xref:System.Web.UI.WebControls.EntityDataSource> Cada valor separado por vírgula na cadeia de caracteres for passado, sem modificações, como uma chamada separada para o <xref:System.Data.Objects.ObjectQuery%601.Include%2A>método de um <xref:System.Data.Objects.ObjectQuery%601>que é executado o [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)].</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Include%2A> Essa consulta é a fonte de dados controlados pelo <xref:System.Web.UI.WebControls.EntityDataSource>controle.</xref:System.Web.UI.WebControls.EntityDataSource> A propriedade Include é o argumento aplicado para o <xref:System.Data.Objects.ObjectQuery%601>antes de ser executado.</xref:System.Data.Objects.ObjectQuery%601>       A cadeia de caracteres fornecida para a propriedade Include usa o mesmo formato, como a cadeia de caracteres que é passada para o <xref:System.Data.Objects.ObjectQuery%601.Include%2A>método de <xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Include%2A> Para obter exemplos de como usar caminhos de consulta para carregar automaticamente os objetos relacionados, consulte [como: usar caminhos de consulta para os resultados de forma](http://msdn.microsoft.com/en-us/100bf7f5-00ba-4c17-8e27-7a8a14831093).       Quando a propriedade Include é usada para especificar caminhos de consulta, as propriedades das entidades relacionadas só podem ser usadas para associação de dados somente leitura. Se os objetos relacionados não estão explicitamente incluídos no caminho de consulta, os descritores de propriedade ainda estão disponíveis para associação de dados, mas as propriedades próprias retornam valores nulos. Nesse caso, os objetos relacionados devem ser explicitamente carregados para exibir seus valores. Para obter mais informações, consulte [objetos relacionados ao carregar](http://msdn.microsoft.com/en-us/452347d2-7b3b-44cd-9001-231299a28cb1)."
  example:
  - "The following XML markup defines a query path that returns `SalesOrderHeader` objects related to the returned `Contact` object. With each `SalesOrderHeader`, the related `SalesOrderDetail` and `Address` objects are also returned.  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `customers`:  \n  \n```  \nObjectQuery<Contact> customers =  \n      context.Contact  \n       .Where(\"it.ContactID = @ContactID\",  \n         new ObjectParameter(\"ContactID\", customerId))  \n        .Include(\"SalesOrderHeader.SalesOrderDetail\")  \n        .Include(\"SalesOrderHeader.Address\");  \n  \n```"
  syntax:
    content: public string Include { get; set; }
    return:
      type: System.String
      description: "Lista separada por vírgulas de caminhos de consulta para retornar os resultados da consulta."
  overload: System.Web.UI.WebControls.EntityDataSource.Include*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Inserted
  id: Inserted
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Inserted
  nameWithType: EntityDataSource.Inserted
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserted
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Ocorre depois que um novo objeto é criado na fonte de dados."
  remarks: "O evento Inserted é gerado quando o objeto adicionado é criado na fonte de dados ou se ocorreu um erro quando os dados do objeto são mantidos para a fonte de dados. O <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>objeto é usado para acessar o objeto adicionado.</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>       As propriedades desse objeto contêm valores que são retornados da fonte de dados, incluindo quaisquer valores gerados por fonte de dados.       Se ocorrer um erro quando um objeto é persistido para a fonte de dados, o evento Inserted é gerado e a <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>propriedade do <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>objeto é definido como o retornado <xref:System.Exception>.</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> Se você lidar com a exceção no manipulador de eventos inseridas, defina o <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>propriedade `true`.</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> Isso impede que a exceção seja gerado novamente. Quando você especifica um valor de `false` para o <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>propriedade, o <xref:System.Web.UI.WebControls.EntityDataSource>gera novamente a exceção.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> Inserted;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Inserting
  id: Inserting
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Inserting
  nameWithType: EntityDataSource.Inserting
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserting
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de um novo objeto é persistido para a fonte de dados."
  remarks: "O evento inserindo é gerado antes que um novo objeto é persistido para a fonte de dados. O evento inserindo permite que você modifique ou verifique se o objeto que está sendo adicionado, adicione um objeto diferente ou cancelar a operação. Você pode acessar o objeto a ser adicionado do <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>objeto.</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> Se fornecer um objeto diferente, o usuário é responsável por definir o tipo de entidade correto no <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>       Para interromper o objeto que está sendo adicionado, defina a <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>do objeto para `true`.</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Se ocorrer um erro ao criar um novo objeto, o evento inserindo é gerado e a <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>propriedade do <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>objeto é definido como o retornado <xref:System.Exception>.</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>       Ao lidar com a exceção no manipulador de eventos inserindo, defina o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>propriedade `true`.</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> Isso impede que a exceção seja gerado novamente. Quando você especifica um valor de `false` para o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>propriedade, o <xref:System.Web.UI.WebControls.EntityDataSource>gera novamente a exceção.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> Inserting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.InsertParameters
  id: InsertParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: InsertParameters
  nameWithType: EntityDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.InsertParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que são usados durante uma operação de inserção."
  remarks: "Para aplicativos web que se destinam a ASP.NET 4 ou anterior, o valor da propriedade é armazenado em estado de exibição e é mantido automaticamente entre postbacks. Para aplicativos web ASP.NET 4.5 de destino, o valor da propriedade não é armazenado em estado de exibição, e você deve definir o valor para cada solicitação HTTP."
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection InsertParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Os parâmetros que são usados durante uma operação de inserção."
  overload: System.Web.UI.WebControls.EntityDataSource.InsertParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: EntityDataSource.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.EntityDataSource.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Carrega o estado das propriedades de <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle que precisam ser persistente."
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "O <xref:System.Object>que contém informações de estado.</xref:System.Object>"
  overload: System.Web.UI.WebControls.EntityDataSource.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: EntityDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Adiciona um <xref href=&quot;System.Web.UI.Page.LoadComplete&quot;> </xref> manipulador de eventos para o <xref href=&quot;System.Web.UI.Page&quot;> </xref> controle que contém o <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.EntityDataSource.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: EntityDataSource.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> eventos."
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.EntityDataSource.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OrderBy
  id: OrderBy
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OrderBy
  nameWithType: EntityDataSource.OrderBy
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderBy
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a expressão de Entity SQL que especifica como ordenar os resultados da consulta."
  remarks: 'A propriedade OrderBy do <xref:System.Web.UI.WebControls.EntityDataSource>controle é uma cadeia de caracteres que representa uma expressão de uma consulta SQL de entidade.</xref:System.Web.UI.WebControls.EntityDataSource> Essa cadeia de caracteres for passada, sem modificações, como um <xref:System.Data.Objects.ObjectQuery%601>que é executado o [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)].</xref:System.Data.Objects.ObjectQuery%601> Essa consulta é a fonte de dados controlados pelo <xref:System.Web.UI.WebControls.EntityDataSource>controle.</xref:System.Web.UI.WebControls.EntityDataSource> A cadeia de caracteres fornecida à propriedade OrderBy usa o mesmo formato que a cadeia de caracteres que é passada para o <xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A>método de <xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.OrderBy%2A> Para obter exemplos de como usar a cláusula para ordenar os resultados de consulta, consulte [como: classificar dados](http://msdn.microsoft.com/en-us/c05f2506-cb9d-4ebc-822b-300042ad53e7).'
  example:
  - "The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is equivalent to the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:  \n  \n```  \nObjectQuery<SalesOrderHeader> onlineOrders =  \n      context.SalesOrderHeader  \n       .Where(\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\",  \n         new ObjectParameter(\"ordercost\", orderCost))  \n        .OrderBy(\"it.TotalDue DESC\");  \n  \n```"
  syntax:
    content: public string OrderBy { get; set; }
    return:
      type: System.String
      description: "A cláusula ORDER BY."
  overload: System.Web.UI.WebControls.EntityDataSource.OrderBy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  id: OrderByParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: OrderByParameters
  nameWithType: EntityDataSource.OrderByParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que são usados para criar a cláusula ORDER BY."
  remarks: "Quando o <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>propriedade do <xref:System.Web.UI.WebControls.EntityDataSource>controle é definido como `true`, o controle gera automaticamente uma cláusula ORDER BY do parâmetro no <xref:System.Web.UI.WebControls.ParameterCollection>atribuído à propriedade OrderByParameters.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> Isso elimina a necessidade de atribuir explicitamente uma cláusula ORDER BY para o <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> A construção da cláusula ORDER BY da propriedade OrderByParameters requer que o <xref:System.Web.UI.WebControls.Parameter.Name%2A>propriedade do parâmetro na coleção identifica uma única propriedade do item que é retornado da consulta.</xref:System.Web.UI.WebControls.Parameter.Name%2A>"
  example:
  - "The following example automatically generates the ORDER BY clause and uses the value of the `orderByDropDownList` to set the value of the parameter.  \n  \n```  \n<asp:EntityDataSource ID=\"SalesOrderHeader\" runat=\"server\"   \n    ConnectionString=\"name=AdventureWorksEntities\"  \n    DefaultContainerName=\"AdventureWorksEntities\" EnableDelete=\"True\"   \n    EnableInsert=\"True\" EnableUpdate=\"True\" EntitySetName=\"SalesOrderHeader\"   \n    Where=\"it.OnlineOrderFlag = true\" AutoGenerateOrderByClause=\"True\">  \n    <OrderByParameters>  \n        <asp:ControlParameter Name=\"OrderByParameter\"   \n            ControlID=\"orderByDropDownList\" Type=\"String\" />  \n    </OrderByParameters>  \n</asp:EntityDataSource>  \n  \n```"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection OrderByParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Os parâmetros que são usados para criar a cláusula ORDER BY."
  overload: System.Web.UI.WebControls.EntityDataSource.OrderByParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.QueryCreated
  id: QueryCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: QueryCreated
  nameWithType: EntityDataSource.QueryCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.QueryCreated
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Ocorre após o <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> cria uma consulta SQL de entidade que foi especificada durante a configuração do <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle."
  remarks: "Para obter mais informações, consulte [aplicar consultas LINQ para EntityDataSource](http://msdn.microsoft.com/en-us/cb70db56-9f9d-4b79-98fe-f03dd5ad1e38)."
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.QueryCreatedEventArgs> QueryCreated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.QueryCreatedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: EntityDataSource.SaveControlState()
  fullName: System.Web.UI.WebControls.EntityDataSource.SaveControlState()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Salva o estado das propriedades de <xref href=&quot;System.Web.UI.WebControls.EntityDataSource&quot;> </xref> controle que precisam ser persistente."
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "O <xref:System.Object>que contém informações de estado.</xref:System.Object>"
  overload: System.Web.UI.WebControls.EntityDataSource.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Select
  id: Select
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Select
  nameWithType: EntityDataSource.Select
  fullName: System.Web.UI.WebControls.EntityDataSource.Select
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a projeção que define as propriedades a serem incluídas nos resultados da consulta."
  remarks: "A propriedade Select do <xref:System.Web.UI.WebControls.EntityDataSource>controle contém uma cadeia de caracteres que representa a instrução de consulta SQL de entidade.</xref:System.Web.UI.WebControls.EntityDataSource> Isso permite projetar um conjunto especificado de propriedades de objetos retornados pela consulta.       Essa cadeia de caracteres for passada, sem modificações, para o <xref:System.Data.Objects.ObjectQuery%601>que é executado o [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)].</xref:System.Data.Objects.ObjectQuery%601> Essa consulta é a fonte de dados controlados pelo <xref:System.Web.UI.WebControls.EntityDataSource>controle.</xref:System.Web.UI.WebControls.EntityDataSource> A cadeia de caracteres fornecida para a propriedade Select usa o mesmo formato, como a cadeia de caracteres que é passada para o <xref:System.Data.Objects.ObjectQuery%601.Select%2A>método de <xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Select%2A> Para obter exemplos de como usar a cláusula para definir uma projeção de uma consulta, consulte [como: executar uma consulta que retorna os objetos do tipo anônimo](http://msdn.microsoft.com/en-us/3b264025-e911-4d73-90ce-992d2b9d189d).       Não há suporte para atualizações para dados projetados. Isso significa que quando você usa a propriedade Select para especificar uma projeção, a associação de dados associados não oferecer suporte a atualizações.       Quando você define uma projeção com paginação habilitada, você deve definir a propriedade pela qual ordenar os resultados. Isso significa que quando você definir a propriedade Select definido uma projeção e ter <xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>definido como `true`, você também deve definir o <xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A>propriedade para definir a ordem ou definir o <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A>propriedade `true` e adicione um parâmetro de ORDER BY para o <xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A>coleção.</xref:System.Web.UI.WebControls.EntityDataSource.OrderByParameters%2A> </xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause%2A> </xref:System.Web.UI.WebControls.EntityDataSource.OrderBy%2A> </xref:System.Web.UI.WebControls.EntityDataSource.AutoPage%2A>       Selecione não pode ser definida se <xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>, <xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A>, ou <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A>está habilitado.</xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableDelete%2A> </xref:System.Web.UI.WebControls.EntityDataSource.EnableUpdate%2A>       Se a instrução Select for definido como uma consulta que retorna uma projeção de propriedades (por exemplo, `SELECT p.ProductID, p. Name FROM AdventureWorksEntities.Products AS p`), um <xref:System.Data.Common.DbDataRecord>será retornado.</xref:System.Data.Common.DbDataRecord>"
  example:
  - "The following XML markup uses the Select property to specify a projection with six of the properties of the Product type:  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `products`:  \n  \n```  \nObjectQuery<Product> products = context.Product  \n    .Select(it.[ProductID], it.[Name], it.[ListPrice],   \n      it.[Size], it.[Style], it.[Weight])  \n    .OrderBy(\"it.[ProductID]\");  \n  \n```"
  syntax:
    content: public string Select { get; set; }
    return:
      type: System.String
      description: "Os parâmetros que são usados para criar a cláusula ORDER BY."
  overload: System.Web.UI.WebControls.EntityDataSource.Select*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Quando a propriedade Select Especifica uma projeção de consulta e o valor de <> </> *>, <> </> *>, ou <xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert*>é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.WebControls.EntityDataSource.EnableInsert*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Selected
  id: Selected
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Selected
  nameWithType: EntityDataSource.Selected
  fullName: System.Web.UI.WebControls.EntityDataSource.Selected
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Ocorre depois que uma consulta é executada."
  remarks: "O evento selecionado é gerado depois que uma consulta tiver sido executada e dado foi retornado. Ele também é gerado se ocorreu um erro durante a preparação da consulta ou a execução.       O <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>objeto contém um <xref:System.Collections.IEnumerable>de objetos que são retornados da consulta.</xref:System.Collections.IEnumerable> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A> Manipular o evento selecionado para recuperar e armazenar entidades retornadas em <xref:System.Web.UI.Control.ViewState%2A>.</xref:System.Web.UI.Control.ViewState%2A> Faça isso para manter as alterações do objeto na página.       O <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>objeto mostra o número total de objetos em todas as páginas, independentemente dos valores passados pelo controle associado a dados para paginação.</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A> <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>é somente recuperados, se o controle associado a dados precisa, como se paginação está habilitada.</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.TotalRowCount%2A>       Se ocorrer um erro quando a consulta é preparada ou executada, o evento selecionado é gerado, o <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>objeto é definido para retornado <xref:System.Exception>e o <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A>está definida como `null`.</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Results%2A> </xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.Exception%2A> Se você lidar com a exceção no manipulador de eventos selecionados, defina o <xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A>propriedade `true`.</xref:System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs.ExceptionHandled%2A> Isso impede que a exceção seja gerado novamente. Quando você especifica um valor de `false` para o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>propriedade, o <xref:System.Web.UI.WebControls.EntityDataSource>gera novamente a exceção.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs> Selected;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Selecting
  id: Selecting
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Selecting
  nameWithType: EntityDataSource.Selecting
  fullName: System.Web.UI.WebControls.EntityDataSource.Selecting
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes que uma consulta é construída e executada."
  remarks: "O evento Selecting é gerado antes de uma consulta é construída e executada. Manipular o evento Selecting para modificar a configuração do <xref:System.Web.UI.WebControls.EntityDataSource>ou ler ou alterar os argumentos do controle associado a dados antes que a consulta é construída e executada.</xref:System.Web.UI.WebControls.EntityDataSource>       Definir o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>do objeto para `true` para cancelar a consulta.</xref:System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Quando a operação SELECT será cancelada, nenhum dado é retornado para o controle associado a dados.       Se `AllowPaging` é definido como `true` no controle associado a dados, o <xref:System.Web.UI.WebControls.EntityDataSource>invoca o <xref:System.Data.Objects.ObjectQuery%601.Skip%2A>e <xref:System.Data.Objects.ObjectQuery%601.Top%2A>métodos de construtor de consulta em <xref:System.Data.Objects.ObjectQuery%601>usando os valores da <xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A>e <xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A>Propriedades do <xref:System.Web.UI.DataSourceSelectArguments>objeto.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.MaximumRows%2A> </xref:System.Web.UI.DataSourceSelectArguments.StartRowIndex%2A> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Top%2A> </xref:System.Data.Objects.ObjectQuery%601.Skip%2A> </xref:System.Web.UI.WebControls.EntityDataSource>       Se `AllowSorting` é definido como `true` no controle associado a dados, o <xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A>do <xref:System.Web.UI.DataSourceSelectArguments>objeto pode ser alterado quando ocorre o evento Selecting.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.DataSourceSelectArguments.SortExpression%2A> Quaisquer outros operadores de consulta, como WHERE ou ORDER BY, que são especificados na marcação da página são aplicadas depois que o evento Selecting é gerado."
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs> Selecting;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.SelectParameters
  id: SelectParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: SelectParameters
  nameWithType: EntityDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.SelectParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que são usados para criar a projeção."
  remarks: "Como o <xref:System.Data.Objects.ObjectQuery%601.Select%2A>método o <xref:System.Data.Objects.ObjectQuery%601>classe parâmetros podem ser passados para a projeção é definida pelo <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Select%2A> A propriedade SelectParameters o <xref:System.Web.UI.WebControls.EntityDataSource>controle especifica um <xref:System.Web.UI.WebControls.ParameterCollection>que contém os parâmetros para fornecer a instrução SELECT da consulta.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> A propriedade SelectParameters usa argumentos nomeados para se referir aos parâmetros que são especificados na cadeia de caracteres que é fornecida para o <xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.Select%2A>       Se o SelectParametersproperty não estiver definida, não é feita nenhuma substituição de parâmetro. Todos os nomes de parâmetro na instrução SELECT, o prefixo de &quot;`@&quot;` símbolo`,` deve ter um nome correspondente em <xref:System.Web.UI.WebControls.ParameterCollection>.</xref:System.Web.UI.WebControls.ParameterCollection> Não são permitidos valores nulos para parâmetros em <xref:System.Web.UI.WebControls.ParameterCollection>.</xref:System.Web.UI.WebControls.ParameterCollection>"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection SelectParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Os parâmetros que são usados para criar a projeção."
  overload: System.Web.UI.WebControls.EntityDataSource.SelectParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  id: StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: StoreOriginalValuesInViewState
  nameWithType: EntityDataSource.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se os dados da fonte de dados devem ser armazenados em estado de exibição para certificar-se de que os dados não foi alterados por outro processo antes de ser atualizado ou excluído."
  remarks: "Para controlar alterações quando atualizar e excluir operações estão habilitadas, o <xref:System.Web.UI.WebControls.EntityDataSource>controle deve armazenar informações sobre os valores originais dos objetos carregados em <xref:System.Web.UI.PageStatePersister.ControlState%2A>.</xref:System.Web.UI.PageStatePersister.ControlState%2A> </xref:System.Web.UI.WebControls.EntityDataSource> Armazenar as informações necessárias no estado de exibição, você aumentará o tamanho da página. Você pode desabilitar armazenar valores originais no estado de exibição, definindo a propriedade StoreOriginalValuesInViewState para `false`. Se você fizer isso, o [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)] não é possível rastrear a simultaneidade em objetos atualizados. Para obter mais informações, consulte [atualizando dados (EntityDataSource)](http://msdn.microsoft.com/en-us/ca153eec-6817-4c1d-b262-efd6d35b0246)."
  syntax:
    content: public bool StoreOriginalValuesInViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os valores serão armazenados na exibição de estado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  id: System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  isEii: true
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  nameWithType: EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  fullName: System.Web.UI.WebControls.EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Notifica o controle associado a dados que um objeto de parâmetro foi alterado e o controle associado a dados precisa ser atualizado."
  syntax:
    content: void IQueryableDataSource.RaiseViewChanged ();
    parameters: []
  overload: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: EntityDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.EntityDataSource.TrackViewState()
  type: Method
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Faz com que o controle de alterações de estado de exibição para o controle de servidor para que eles podem ser armazenados no controle de servidor <xref href=&quot;System.Web.UI.StateBag&quot;> </xref> objeto. Este objeto é acessível por meio de &lt;xref:System.Web.UI.Control.ViewState%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Para obter mais informações, consulte <xref:System.Web.UI.Control.TrackViewState%2A>.</xref:System.Web.UI.Control.TrackViewState%2A>"
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.EntityDataSource.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Updated
  id: Updated
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Updated
  nameWithType: EntityDataSource.Updated
  fullName: System.Web.UI.WebControls.EntityDataSource.Updated
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Ocorre depois que foram mantidas alterações em um objeto para a fonte de dados."
  remarks: "O evento Updated é gerado quando as alterações para um objeto modificado são mantidas para a fonte de dados ou se ocorreu um erro ao aplicar as alterações. O <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>objeto é usado para acessar o objeto modificado.</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Entity%2A>       As propriedades deste objeto contêm os valores retornados da fonte de dados, incluindo quaisquer valores gerados pelo servidor.       Se ocorrer um erro quando as alterações são mantidas para a fonte de dados, o evento Updated é gerado e a <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A>propriedade do <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>objeto é definido como o retornado <xref:System.Exception>.</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.Exception%2A> Se você lidar com a exceção no manipulador de eventos atualizados, defina o <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>propriedade `true`.</xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A> Isso impede que a exceção seja gerado novamente. Quando você especifica um valor de `false` para o <xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>propriedade, o <xref:System.Web.UI.WebControls.EntityDataSource>gera novamente a exceção.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangedEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs> Updated;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  id: UpdateParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: UpdateParameters
  nameWithType: EntityDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que são usados durante uma operação de atualização."
  remarks: "Para aplicativos web que se destinam a ASP.NET 4 ou anterior, o valor da propriedade é armazenado em estado de exibição e é mantido automaticamente entre postbacks. Para aplicativos web ASP.NET 4.5 de destino, o valor da propriedade não é armazenado em estado de exibição, e você deve definir o valor para cada solicitação HTTP."
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection UpdateParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Os parâmetros que são usados durante uma operação de atualização."
  overload: System.Web.UI.WebControls.EntityDataSource.UpdateParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Updating
  id: Updating
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Updating
  nameWithType: EntityDataSource.Updating
  fullName: System.Web.UI.WebControls.EntityDataSource.Updating
  type: Event
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes de alterações em um objeto são mantidas para a fonte de dados."
  remarks: "O evento de atualização é gerado antes que as alterações nas propriedades de um objeto são mantidas para a fonte de dados. O evento de atualização permite que você modifique ou verificar as alterações ao objeto, forneça um objeto diferente ou cancelar a operação antes que as alterações são mantidas. Você pode acessar o objeto modificado das <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>propriedade do <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>objeto.</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A> Se fornecer um objeto diferente, o usuário é responsável por definir o tipo de entidade correto no <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Entity%2A>       Manipular o evento de atualização, se for necessário modificar o <xref:System.Data.Objects.ObjectStateEntry>para o objeto definir diferentes valores originais para controle de simultaneidade.</xref:System.Data.Objects.ObjectStateEntry> Para obter mais informações, consulte [salvar as alterações e gerenciamento de simultaneidade](http://msdn.microsoft.com/en-us/b8378601-4f26-4a05-a24a-f50aeb68610e).       Para interromper as alterações sejam persistentes, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>do objeto para `true`.</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Se ocorrer um erro ao instanciar um objeto ou modificar propriedades, a atualização é gerado e a <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>propriedade do <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>objeto é definido como o retornado <xref:System.Exception>.</xref:System.Exception> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.Exception%2A>       Ao lidar com a exceção no manipulador de eventos de atualização, defina o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>propriedade `true`.</xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A> Isso impede que a exceção seja gerado novamente. Quando você especifica um valor de `false` para o <xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>propriedade, o <xref:System.Web.UI.WebControls.EntityDataSource>gera novamente a exceção.</xref:System.Web.UI.WebControls.EntityDataSource> </xref:System.Web.UI.WebControls.EntityDataSourceChangingEventArgs.ExceptionHandled%2A>"
  syntax:
    content: public event EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs> Updating;
    return:
      type: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.Where
  id: Where
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: Where
  nameWithType: EntityDataSource.Where
  fullName: System.Web.UI.WebControls.EntityDataSource.Where
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a expressão de Entity SQL que especifica como filtrar os resultados da consulta."
  remarks: "Onde a propriedade do <xref:System.Web.UI.WebControls.EntityDataSource>controle é uma cadeia de caracteres que representa uma cláusula que é o predicado de consulta SQL de entidade.</xref:System.Web.UI.WebControls.EntityDataSource> Essa cadeia de caracteres for passada, sem modificações, como um <xref:System.Data.Objects.ObjectQuery%601>que é executado o [!INCLUDE[adonet_ef](~/add/includes/adonet-ef-md.md)].</xref:System.Data.Objects.ObjectQuery%601> Essa consulta é a fonte de dados controlados pelo <xref:System.Web.UI.WebControls.EntityDataSource>controle.</xref:System.Web.UI.WebControls.EntityDataSource> A cadeia de caracteres fornecida para onde propriedade usa o mesmo formato que a cadeia de caracteres que é passada para o <xref:System.Data.Objects.ObjectQuery%601.Where%2A>método de <xref:System.Data.Objects.ObjectQuery%601>.</xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Where%2A> Para obter exemplos de como usar a cláusula para filtrar uma consulta, consulte [como: filtrar dados](http://msdn.microsoft.com/en-us/776f8556-3350-4572-804a-b1513515c1b2).       Para filtrar os resultados da consulta por uma propriedade de tipo de entidade para uma expressão que corresponda, obter informações sobre o <xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause%2A>"
  example:
  - "The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the Where property.  \n  \n<CodeContentPlaceHolder>0</CodeContentPlaceHolder>  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:  \n  \n```  \nObjectQuery<SalesOrderHeader> onlineOrders =  \n      context.SalesOrderHeader  \n       .Where(\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\",  \n         new ObjectParameter(\"ordercost\", orderCost))  \n        .OrderBy(\"it.TotalDue DESC\");  \n```"
  syntax:
    content: public string Where { get; set; }
    return:
      type: System.String
      description: "A cláusula WHERE."
  overload: System.Web.UI.WebControls.EntityDataSource.Where*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.EntityDataSource.WhereParameters
  id: WhereParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  langs:
  - csharp
  name: WhereParameters
  nameWithType: EntityDataSource.WhereParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.WhereParameters
  type: Property
  assemblies:
  - System.Web.Entity
  namespace: System.Web.UI.WebControls
  summary: "Obtém a coleção de parâmetros que são usados para criar a cláusula WHERE."
  remarks: "Como o <xref:System.Data.Objects.ObjectQuery%601.Where%2A>método do <xref:System.Data.Objects.ObjectQuery%601>classe parâmetros podem ser passados para o predicado atribuído para o <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> </xref:System.Data.Objects.ObjectQuery%601> </xref:System.Data.Objects.ObjectQuery%601.Where%2A> A propriedade WhereParameters o <xref:System.Web.UI.WebControls.EntityDataSource>controle especifica um <xref:System.Web.UI.WebControls.ParameterCollection>que contém os parâmetros para fornecer à cláusula WHERE da consulta.</xref:System.Web.UI.WebControls.ParameterCollection> </xref:System.Web.UI.WebControls.EntityDataSource> A propriedade WhereParameters usa argumentos nomeados para se referir aos parâmetros que são especificados na cadeia de caracteres que é fornecida para o <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>propriedade.</xref:System.Web.UI.WebControls.EntityDataSource.Where%2A>       Se o WhereParametersproperty não estiver definida, não é feita nenhuma substituição de parâmetro. Todos os nomes de parâmetro na cláusula WHERE precedido pelo símbolo de &quot;`@&quot;` deve ter um nome correspondente em <xref:System.Web.UI.WebControls.ParameterCollection>.</xref:System.Web.UI.WebControls.ParameterCollection> Não são permitidos valores nulos para parâmetros em <xref:System.Web.UI.WebControls.ParameterCollection>.</xref:System.Web.UI.WebControls.ParameterCollection>"
  example:
  - "The XML markup in the following example, in an .aspx file, retrieves a value from a control and passes it as a parameter to the <xref:System.Web.UI.WebControls.EntityDataSource.Where%2A> property.  \n  \n```  \n<asp:EntityDataSource ID=\"SalesOrderHeader\" runat=\"server\"   \n  ConnectionString=\"name=AdventureWorksEntities\"   \n  DefaultContainerName=\"AdventureWorksEntities\" EnableDelete=\"True\"   \n  EnableInsert=\"True\" EnableUpdate=\"True\" EntitySetName=\"SalesOrderHeader\"   \n  EntityTypeFilter=\"\" OrderBy=\"it.TotalDue DESC\" Select=\"\"   \n   Where=\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\">  \n  <WhereParameters>  \n    <asp:ControlParameter ControlID=\"costLimit\" DbType=\"Int32\"   \n      DefaultValue=\"2500\" Name=\"ordercost\" PropertyName=\"Text\" />  \n  </WhereParameters>  \n</asp:EntityDataSource>  \n  \n```  \n  \n The previous XML example is the same as the following <xref:System.Data.Objects.ObjectQuery%601> named `onlineOrders`:  \n  \n```  \nObjectQuery<SalesOrderHeader> onlineOrders =  \n      context.SalesOrderHeader  \n       .Where(\"it.OnlineOrderFlag = TRUE AND it.TotalDue > @ordercost\",  \n         new ObjectParameter(\"ordercost\", orderCost))  \n        .OrderBy(\"it.TotalDue DESC\");  \n  \n```"
  syntax:
    content: public System.Web.UI.WebControls.ParameterCollection WhereParameters { get; }
    return:
      type: System.Web.UI.WebControls.ParameterCollection
      description: "Os parâmetros que são usados para criar a cláusula WHERE."
  overload: System.Web.UI.WebControls.EntityDataSource.WhereParameters*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.DataSourceControl
  isExternal: false
  name: System.Web.UI.DataSourceControl
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityDataSource()
  nameWithType: EntityDataSource.EntityDataSource()
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource()
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor(System.Data.EntityClient.EntityConnection)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityDataSource(EntityConnection)
  nameWithType: EntityDataSource.EntityDataSource(EntityConnection)
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityDataSource(EntityConnection)
- uid: System.Data.EntityClient.EntityConnection
  parent: System.Data.EntityClient
  isExternal: false
  name: EntityConnection
  nameWithType: EntityConnection
  fullName: System.Data.EntityClient.EntityConnection
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateOrderByClause
  nameWithType: EntityDataSource.AutoGenerateOrderByClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateWhereClause
  nameWithType: EntityDataSource.AutoGenerateWhereClause
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause
- uid: System.Web.UI.WebControls.EntityDataSource.AutoPage
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoPage
  nameWithType: EntityDataSource.AutoPage
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoPage
- uid: System.Web.UI.WebControls.EntityDataSource.AutoSort
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoSort
  nameWithType: EntityDataSource.AutoSort
  fullName: System.Web.UI.WebControls.EntityDataSource.AutoSort
- uid: System.Web.UI.WebControls.EntityDataSource.CommandParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandParameters
  nameWithType: EntityDataSource.CommandParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandParameters
- uid: System.Web.UI.WebControls.ParameterCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: ParameterCollection
  nameWithType: ParameterCollection
  fullName: System.Web.UI.WebControls.ParameterCollection
- uid: System.Web.UI.WebControls.EntityDataSource.CommandText
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandText
  nameWithType: EntityDataSource.CommandText
  fullName: System.Web.UI.WebControls.EntityDataSource.CommandText
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.EntityDataSource.ConnectionString
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ConnectionString
  nameWithType: EntityDataSource.ConnectionString
  fullName: System.Web.UI.WebControls.EntityDataSource.ConnectionString
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextCreated
  nameWithType: EntityDataSource.ContextCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreated
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceContextCreatedEventArgs>
  nameWithType: EventHandler<EntityDataSourceContextCreatedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceContextCreatedEventArgs
    name: EntityDataSourceContextCreatedEventArgs
    nameWithType: EntityDataSourceContextCreatedEventArgs
    fullName: EntityDataSourceContextCreatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.ContextCreating
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextCreating
  nameWithType: EntityDataSource.ContextCreating
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextCreating
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceContextCreatingEventArgs>
  nameWithType: EventHandler<EntityDataSourceContextCreatingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceContextCreatingEventArgs
    name: EntityDataSourceContextCreatingEventArgs
    nameWithType: EntityDataSourceContextCreatingEventArgs
    fullName: EntityDataSourceContextCreatingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextDisposing
  nameWithType: EntityDataSource.ContextDisposing
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextDisposing
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceContextDisposingEventArgs>
  nameWithType: EventHandler<EntityDataSourceContextDisposingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceContextDisposingEventArgs
    name: EntityDataSourceContextDisposingEventArgs
    nameWithType: EntityDataSourceContextDisposingEventArgs
    fullName: EntityDataSourceContextDisposingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.ContextType
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextType
  nameWithType: EntityDataSource.ContextType
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextTypeName
  nameWithType: EntityDataSource.ContextTypeName
  fullName: System.Web.UI.WebControls.EntityDataSource.ContextTypeName
- uid: System.Web.UI.WebControls.EntityDataSource.CreateView
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CreateView()
  nameWithType: EntityDataSource.CreateView()
  fullName: System.Web.UI.WebControls.EntityDataSource.CreateView()
- uid: System.Web.UI.WebControls.EntityDataSourceView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: EntityDataSourceView
  nameWithType: EntityDataSourceView
  fullName: System.Web.UI.WebControls.EntityDataSourceView
- uid: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DefaultContainerName
  nameWithType: EntityDataSource.DefaultContainerName
  fullName: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName
- uid: System.Web.UI.WebControls.EntityDataSource.Deleted
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Deleted
  nameWithType: EntityDataSource.Deleted
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleted
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceChangedEventArgs>
  nameWithType: EventHandler<EntityDataSourceChangedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceChangedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceChangedEventArgs
    name: EntityDataSourceChangedEventArgs
    nameWithType: EntityDataSourceChangedEventArgs
    fullName: EntityDataSourceChangedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: EntityDataSource.DeleteParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.EntityDataSource.Deleting
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Deleting
  nameWithType: EntityDataSource.Deleting
  fullName: System.Web.UI.WebControls.EntityDataSource.Deleting
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceChangingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceChangingEventArgs>
  nameWithType: EventHandler<EntityDataSourceChangingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceChangingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceChangingEventArgs
    name: EntityDataSourceChangingEventArgs
    nameWithType: EntityDataSourceChangingEventArgs
    fullName: EntityDataSourceChangingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.EnableDelete
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableDelete
  nameWithType: EntityDataSource.EnableDelete
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableDelete
- uid: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableFlattening
  nameWithType: EntityDataSource.EnableFlattening
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableFlattening
- uid: System.Web.UI.WebControls.EntityDataSource.EnableInsert
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableInsert
  nameWithType: EntityDataSource.EnableInsert
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableInsert
- uid: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableUpdate
  nameWithType: EntityDataSource.EnableUpdate
  fullName: System.Web.UI.WebControls.EntityDataSource.EnableUpdate
- uid: System.Web.UI.WebControls.EntityDataSource.EntitySetName
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntitySetName
  nameWithType: EntityDataSource.EntitySetName
  fullName: System.Web.UI.WebControls.EntityDataSource.EntitySetName
- uid: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityTypeFilter
  nameWithType: EntityDataSource.EntityTypeFilter
  fullName: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter
- uid: System.Web.UI.WebControls.EntityDataSource.GetView(System.String)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetView(String)
  nameWithType: EntityDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.EntityDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.EntityDataSource.GetViewNames
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetViewNames()
  nameWithType: EntityDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.EntityDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.EntityDataSource.GroupBy
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GroupBy
  nameWithType: EntityDataSource.GroupBy
  fullName: System.Web.UI.WebControls.EntityDataSource.GroupBy
- uid: System.Web.UI.WebControls.EntityDataSource.Include
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Include
  nameWithType: EntityDataSource.Include
  fullName: System.Web.UI.WebControls.EntityDataSource.Include
- uid: System.Web.UI.WebControls.EntityDataSource.Inserted
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Inserted
  nameWithType: EntityDataSource.Inserted
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserted
- uid: System.Web.UI.WebControls.EntityDataSource.Inserting
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Inserting
  nameWithType: EntityDataSource.Inserting
  fullName: System.Web.UI.WebControls.EntityDataSource.Inserting
- uid: System.Web.UI.WebControls.EntityDataSource.InsertParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: EntityDataSource.InsertParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.InsertParameters
- uid: System.Web.UI.WebControls.EntityDataSource.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: EntityDataSource.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.EntityDataSource.LoadControlState(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.EntityDataSource.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: EntityDataSource.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.EntityDataSource.OnUnload(System.EventArgs)
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: EntityDataSource.OnUnload(EventArgs)
  fullName: System.Web.UI.WebControls.EntityDataSource.OnUnload(EventArgs)
- uid: System.Web.UI.WebControls.EntityDataSource.OrderBy
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderBy
  nameWithType: EntityDataSource.OrderBy
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderBy
- uid: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderByParameters
  nameWithType: EntityDataSource.OrderByParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.OrderByParameters
- uid: System.Web.UI.WebControls.EntityDataSource.QueryCreated
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: QueryCreated
  nameWithType: EntityDataSource.QueryCreated
  fullName: System.Web.UI.WebControls.EntityDataSource.QueryCreated
- uid: System.EventHandler{System.Web.UI.WebControls.QueryCreatedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<QueryCreatedEventArgs>
  nameWithType: EventHandler<QueryCreatedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.QueryCreatedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.QueryCreatedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.QueryCreatedEventArgs
    name: QueryCreatedEventArgs
    nameWithType: QueryCreatedEventArgs
    fullName: QueryCreatedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.SaveControlState
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SaveControlState()
  nameWithType: EntityDataSource.SaveControlState()
  fullName: System.Web.UI.WebControls.EntityDataSource.SaveControlState()
- uid: System.Web.UI.WebControls.EntityDataSource.Select
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Select
  nameWithType: EntityDataSource.Select
  fullName: System.Web.UI.WebControls.EntityDataSource.Select
- uid: System.Web.UI.WebControls.EntityDataSource.Selected
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Selected
  nameWithType: EntityDataSource.Selected
  fullName: System.Web.UI.WebControls.EntityDataSource.Selected
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceSelectedEventArgs>
  nameWithType: EventHandler<EntityDataSourceSelectedEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceSelectedEventArgs
    name: EntityDataSourceSelectedEventArgs
    nameWithType: EntityDataSourceSelectedEventArgs
    fullName: EntityDataSourceSelectedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.Selecting
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Selecting
  nameWithType: EntityDataSource.Selecting
  fullName: System.Web.UI.WebControls.EntityDataSource.Selecting
- uid: System.EventHandler{System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<EntityDataSourceSelectingEventArgs>
  nameWithType: EventHandler<EntityDataSourceSelectingEventArgs>
  fullName: System.EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.UI.WebControls.EntityDataSourceSelectingEventArgs
    name: EntityDataSourceSelectingEventArgs
    nameWithType: EntityDataSourceSelectingEventArgs
    fullName: EntityDataSourceSelectingEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.EntityDataSource.SelectParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: EntityDataSource.SelectParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.SelectParameters
- uid: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: EntityDataSource.StoreOriginalValuesInViewState
  fullName: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  nameWithType: EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
  fullName: System.Web.UI.WebControls.EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged()
- uid: System.Web.UI.WebControls.EntityDataSource.TrackViewState
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: TrackViewState()
  nameWithType: EntityDataSource.TrackViewState()
  fullName: System.Web.UI.WebControls.EntityDataSource.TrackViewState()
- uid: System.Web.UI.WebControls.EntityDataSource.Updated
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Updated
  nameWithType: EntityDataSource.Updated
  fullName: System.Web.UI.WebControls.EntityDataSource.Updated
- uid: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: EntityDataSource.UpdateParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.EntityDataSource.Updating
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Updating
  nameWithType: EntityDataSource.Updating
  fullName: System.Web.UI.WebControls.EntityDataSource.Updating
- uid: System.Web.UI.WebControls.EntityDataSource.Where
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Where
  nameWithType: EntityDataSource.Where
  fullName: System.Web.UI.WebControls.EntityDataSource.Where
- uid: System.Web.UI.WebControls.EntityDataSource.WhereParameters
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: WhereParameters
  nameWithType: EntityDataSource.WhereParameters
  fullName: System.Web.UI.WebControls.EntityDataSource.WhereParameters
- uid: System.Web.UI.WebControls.EntityDataSource.#ctor*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityDataSource
  nameWithType: EntityDataSource.EntityDataSource
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateOrderByClause*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateOrderByClause
  nameWithType: EntityDataSource.AutoGenerateOrderByClause
- uid: System.Web.UI.WebControls.EntityDataSource.AutoGenerateWhereClause*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoGenerateWhereClause
  nameWithType: EntityDataSource.AutoGenerateWhereClause
- uid: System.Web.UI.WebControls.EntityDataSource.AutoPage*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoPage
  nameWithType: EntityDataSource.AutoPage
- uid: System.Web.UI.WebControls.EntityDataSource.AutoSort*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: AutoSort
  nameWithType: EntityDataSource.AutoSort
- uid: System.Web.UI.WebControls.EntityDataSource.CommandParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandParameters
  nameWithType: EntityDataSource.CommandParameters
- uid: System.Web.UI.WebControls.EntityDataSource.CommandText*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CommandText
  nameWithType: EntityDataSource.CommandText
- uid: System.Web.UI.WebControls.EntityDataSource.ConnectionString*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ConnectionString
  nameWithType: EntityDataSource.ConnectionString
- uid: System.Web.UI.WebControls.EntityDataSource.ContextType*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextType
  nameWithType: EntityDataSource.ContextType
- uid: System.Web.UI.WebControls.EntityDataSource.ContextTypeName*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: ContextTypeName
  nameWithType: EntityDataSource.ContextTypeName
- uid: System.Web.UI.WebControls.EntityDataSource.CreateView*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: CreateView
  nameWithType: EntityDataSource.CreateView
- uid: System.Web.UI.WebControls.EntityDataSource.DefaultContainerName*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DefaultContainerName
  nameWithType: EntityDataSource.DefaultContainerName
- uid: System.Web.UI.WebControls.EntityDataSource.DeleteParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: DeleteParameters
  nameWithType: EntityDataSource.DeleteParameters
- uid: System.Web.UI.WebControls.EntityDataSource.EnableDelete*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableDelete
  nameWithType: EntityDataSource.EnableDelete
- uid: System.Web.UI.WebControls.EntityDataSource.EnableFlattening*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableFlattening
  nameWithType: EntityDataSource.EnableFlattening
- uid: System.Web.UI.WebControls.EntityDataSource.EnableInsert*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableInsert
  nameWithType: EntityDataSource.EnableInsert
- uid: System.Web.UI.WebControls.EntityDataSource.EnableUpdate*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EnableUpdate
  nameWithType: EntityDataSource.EnableUpdate
- uid: System.Web.UI.WebControls.EntityDataSource.EntitySetName*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntitySetName
  nameWithType: EntityDataSource.EntitySetName
- uid: System.Web.UI.WebControls.EntityDataSource.EntityTypeFilter*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: EntityTypeFilter
  nameWithType: EntityDataSource.EntityTypeFilter
- uid: System.Web.UI.WebControls.EntityDataSource.GetView*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetView
  nameWithType: EntityDataSource.GetView
- uid: System.Web.UI.WebControls.EntityDataSource.GetViewNames*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GetViewNames
  nameWithType: EntityDataSource.GetViewNames
- uid: System.Web.UI.WebControls.EntityDataSource.GroupBy*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: GroupBy
  nameWithType: EntityDataSource.GroupBy
- uid: System.Web.UI.WebControls.EntityDataSource.Include*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Include
  nameWithType: EntityDataSource.Include
- uid: System.Web.UI.WebControls.EntityDataSource.InsertParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: InsertParameters
  nameWithType: EntityDataSource.InsertParameters
- uid: System.Web.UI.WebControls.EntityDataSource.LoadControlState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: LoadControlState
  nameWithType: EntityDataSource.LoadControlState
- uid: System.Web.UI.WebControls.EntityDataSource.OnInit*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnInit
  nameWithType: EntityDataSource.OnInit
- uid: System.Web.UI.WebControls.EntityDataSource.OnUnload*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OnUnload
  nameWithType: EntityDataSource.OnUnload
- uid: System.Web.UI.WebControls.EntityDataSource.OrderBy*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderBy
  nameWithType: EntityDataSource.OrderBy
- uid: System.Web.UI.WebControls.EntityDataSource.OrderByParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: OrderByParameters
  nameWithType: EntityDataSource.OrderByParameters
- uid: System.Web.UI.WebControls.EntityDataSource.SaveControlState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SaveControlState
  nameWithType: EntityDataSource.SaveControlState
- uid: System.Web.UI.WebControls.EntityDataSource.Select*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Select
  nameWithType: EntityDataSource.Select
- uid: System.Web.UI.WebControls.EntityDataSource.SelectParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: SelectParameters
  nameWithType: EntityDataSource.SelectParameters
- uid: System.Web.UI.WebControls.EntityDataSource.StoreOriginalValuesInViewState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: StoreOriginalValuesInViewState
  nameWithType: EntityDataSource.StoreOriginalValuesInViewState
- uid: System.Web.UI.WebControls.EntityDataSource.System#Web#UI#WebControls#IQueryableDataSource#RaiseViewChanged*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged
  nameWithType: EntityDataSource.System.Web.UI.WebControls.IQueryableDataSource.RaiseViewChanged
- uid: System.Web.UI.WebControls.EntityDataSource.TrackViewState*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: TrackViewState
  nameWithType: EntityDataSource.TrackViewState
- uid: System.Web.UI.WebControls.EntityDataSource.UpdateParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: UpdateParameters
  nameWithType: EntityDataSource.UpdateParameters
- uid: System.Web.UI.WebControls.EntityDataSource.Where*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: Where
  nameWithType: EntityDataSource.Where
- uid: System.Web.UI.WebControls.EntityDataSource.WhereParameters*
  parent: System.Web.UI.WebControls.EntityDataSource
  isExternal: false
  name: WhereParameters
  nameWithType: EntityDataSource.WhereParameters
