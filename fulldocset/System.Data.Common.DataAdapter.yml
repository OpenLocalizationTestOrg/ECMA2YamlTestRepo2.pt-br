### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DataAdapter
  id: DataAdapter
  children:
  - System.Data.Common.DataAdapter.#ctor
  - System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  - System.Data.Common.DataAdapter.AcceptChangesDuringFill
  - System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  - System.Data.Common.DataAdapter.CloneInternals
  - System.Data.Common.DataAdapter.ContinueUpdateOnError
  - System.Data.Common.DataAdapter.CreateTableMappings
  - System.Data.Common.DataAdapter.Dispose(System.Boolean)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  - System.Data.Common.DataAdapter.FillError
  - System.Data.Common.DataAdapter.FillLoadOption
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  - System.Data.Common.DataAdapter.GetFillParameters
  - System.Data.Common.DataAdapter.HasTableMappings
  - System.Data.Common.DataAdapter.MissingMappingAction
  - System.Data.Common.DataAdapter.MissingSchemaAction
  - System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  - System.Data.Common.DataAdapter.ResetFillLoadOption
  - System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  - System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  - System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  - System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  - System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  - System.Data.Common.DataAdapter.TableMappings
  - System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  langs:
  - csharp
  name: DataAdapter
  nameWithType: DataAdapter
  fullName: System.Data.Common.DataAdapter
  type: Class
  summary: "Representa um conjunto de comandos SQL e uma conexão de banco de dados que são usados para preencher o <xref href=&quot;System.Data.DataSet&quot;> </xref> e atualizar a fonte de dados."
  remarks: "O DataAdapter atua como uma ponte entre uma <xref:System.Data.DataSet>e uma fonte de dados para recuperar e salvar dados.</xref:System.Data.DataSet> O DataAdapter fornece essa ponte mapeando <xref:System.Data.Common.DataAdapter.Fill%2A>, que altera os dados <xref:System.Data.DataSet>para corresponder aos dados na fonte de dados e <xref:System.Data.IDataAdapter.Update%2A>, que altera os dados na fonte de dados para corresponder aos dados em <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.IDataAdapter.Update%2A> </xref:System.Data.DataSet> </xref:System.Data.Common.DataAdapter.Fill%2A>       Se você estiver se conectando a um banco de dados do SQL Server, você pode aumentar o desempenho geral usando o <xref:System.Data.SqlClient.SqlDataAdapter>junto com seus associados <xref:System.Data.SqlClient.SqlCommand>e <xref:System.Data.SqlClient.SqlConnection>objetos.</xref:System.Data.SqlClient.SqlConnection> </xref:System.Data.SqlClient.SqlCommand> </xref:System.Data.SqlClient.SqlDataAdapter> Para fontes de dados compatíveis com OLE DB, use o DataAdapter com seus associados <xref:System.Data.OleDb.OleDbCommand>e <xref:System.Data.OleDb.OleDbConnection>objetos.</xref:System.Data.OleDb.OleDbConnection> </xref:System.Data.OleDb.OleDbCommand> Para fontes de dados com suporte ODBC, use o DataAdapter com seus associados <xref:System.Data.Odbc.OdbcCommand>e <xref:System.Data.Odbc.OdbcConnection>objetos.</xref:System.Data.Odbc.OdbcConnection> </xref:System.Data.Odbc.OdbcCommand> Para bancos de dados Oracle, use o DataAdapter com seus associados <xref:System.Data.OracleClient.OracleCommand>e <xref:System.Data.OracleClient.OracleConnection>objetos.</xref:System.Data.OracleClient.OracleConnection> </xref:System.Data.OracleClient.OracleCommand>       Quando uma instância do DataAdapter é criada, as propriedades de leitura/gravação são definidas como valores iniciais. Para obter uma lista desses valores, consulte o construtor DataAdapter."
  syntax:
    content: 'public class DataAdapter : System.ComponentModel.Component, System.Data.IDataAdapter'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.Data.IDataAdapter
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.#ctor
  id: '#ctor'
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: DataAdapter()
  nameWithType: DataAdapter.DataAdapter()
  fullName: System.Data.Common.DataAdapter.DataAdapter()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inicializa uma nova instância de um <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> classe."
  remarks: "Quando uma instância de <xref:System.Data.Common.DataAdapter>é criado, os seguintes propriedades são definidas para os seguintes valores iniciais de leitura/gravação.</xref:System.Data.Common.DataAdapter>      | Propriedades | Valor inicial |   |----------------|-------------------|   | <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>| `MissingMappingAction.Passthrough`|   | <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>| `MissingSchemaAction.Add`|   | <xref:System.Data.Common.DataAdapter.TableMappings%2A>| Uma matriz de objetos <xref:System.Data.Common.DataAdapter.TableMappings%2A>. |       Você pode alterar o valor de qualquer uma dessas propriedades por meio de uma chamada separada para a propriedade.</xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.Common.DataAdapter.TableMappings%2A> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>"
  syntax:
    content: protected DataAdapter ();
    parameters: []
  overload: System.Data.Common.DataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  id: '#ctor(System.Data.Common.DataAdapter)'
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: DataAdapter(DataAdapter)
  nameWithType: DataAdapter.DataAdapter(DataAdapter)
  fullName: System.Data.Common.DataAdapter.DataAdapter(DataAdapter)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inicializa uma nova instância de um <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> classe a partir de um objeto existente do mesmo tipo."
  remarks: "Esta sobrecarga do <xref:System.Data.Common.DataAdapter>construtor é projetado para uso por um provedor de dados .NET Framework ao implementar um construtor semelhante para uso em uma implementação de clone.</xref:System.Data.Common.DataAdapter>"
  syntax:
    content: protected DataAdapter (System.Data.Common.DataAdapter from);
    parameters:
    - id: from
      type: System.Data.Common.DataAdapter
      description: "Um <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> objeto usado para criar o novo <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  id: AcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define um valor que indica se <> </> *> é chamado em um <xref href=&quot;System.Data.DataRow&quot;> </xref> depois que ele é adicionado ao <xref href=&quot;System.Data.DataTable&quot;> </xref> durante qualquer uma da * *preencher** operações."
  remarks: "Se `false`, <xref:System.Data.DataRow.AcceptChanges%2A>não for chamado, e as linhas recém-adicionadas são tratadas como linhas inseridas.</xref:System.Data.DataRow.AcceptChanges%2A>"
  syntax:
    content: public bool AcceptChangesDuringFill { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.Data.DataRow.AcceptChanges*>é chamado de <xref href=&quot;System.Data.DataRow&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.DataRow.AcceptChanges*> O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.AcceptChangesDuringFill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  id: AcceptChangesDuringUpdate
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define se <> </> *> é chamado durante uma <> </> *>."
  remarks: "Durante uma chamada para o `Update` método de um `DataAdapter`, o banco de dados pode enviar dados ao seu aplicativo ADO.NET, como parâmetros de saída ou como o primeiro registro retornado de um conjunto de resultados. ADO.NET pode recuperar esses valores e atualizar as colunas correspondentes no <xref:System.Data.DataRow>que está sendo atualizada.</xref:System.Data.DataRow> Por padrão, o ADO.NET chama o `AcceptChanges` método o `DataRow` após a atualização. No entanto, se você deseja mesclar a linha atualizada volta para o outro <xref:System.Data.DataTable>, talvez você queira preservar o valor original de uma coluna de chave primária.</xref:System.Data.DataTable> Por exemplo, uma coluna de chave primária correspondente a uma coluna incrementada automaticamente no banco de dados, como uma coluna de identidade, pode conter os novos valores que são atribuídos pelo banco de dados que não coincidem com os valores originais atribuídos a `DataRow`. Por padrão, `AcceptChanges` é chamado implicitamente após uma atualização e os valores originais na linha, que pode ter sido <xref:System.Data.DataColumn.AutoIncrement%2A>valores atribuídos por ADO.NET, serão perdidas.</xref:System.Data.DataColumn.AutoIncrement%2A> Você pode preservar os valores originais no `DataRow` impedindo `ADO.NET` chamar `AcceptChanges` depois que ele executa uma atualização em uma linha, definindo a propriedade AcceptChangesDuringUpdate como `false`, que preserva os valores originais.      > [!NOTE] > Configuração o `AcceptChangesDuringUpdate` propriedade `false` se aplica a todas as modificações de dados, não só insere. Se você deseja editar ou excluir linhas em que a mesma atualização, e se você desejar suprimir a chamada para `AcceptChanges` apenas para inserções, em seguida, em vez de configuração `AccceptChangesDuringUpdate` para `false`, use um manipulador de eventos para o `RowUpdated` eventos do `DataAdapter`. No evento manipulador você pode verificar o <xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A>para determinar se a modificação de dados for uma inserção e se `true`, defina a <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>propriedade de <xref:System.Data.Common.RowUpdatedEventArgs> <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> </xref:System.Data.Common.RowUpdatedEventArgs.Status%2A> </xref:System.Data.Common.RowUpdatedEventArgs.StatementType%2A> Para obter mais informações e um exemplo, consulte [recuperando identidade ou valores de Autonumber](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This example demonstrates extracting changed rows from a `DataTable` and using a <xref:System.Data.SqlClient.SqlDataAdapter> to update the data source and retrieve a new identity column value. By setting the `AcceptChangesDuringUpdate` property of the <xref:System.Data.SqlClient.SqlDataAdapter> to `false` to preserve the original auto increment value, the new data can then be merged into the original <xref:System.Data.DataTable>, even if the new identity value does not match the original auto increment value in the `DataTable`.  \n  \n [!code-vb[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_7_1.vb)]\n [!code-cs[DataWorks SqlClient.AcceptChangesDuringUpdate#1](~/add/codesnippet/csharp/p-system.data.common.dat_7_1.cs)]"
  syntax:
    content: public bool AcceptChangesDuringUpdate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <> </> *> é chamado durante uma <> </> *>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.CloneInternals
  id: CloneInternals
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: CloneInternals()
  nameWithType: DataAdapter.CloneInternals()
  fullName: System.Data.Common.DataAdapter.CloneInternals()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Cria uma cópia desta instância do <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  remarks: "Este método é preterido. O <xref:System.Data.Common.DataAdapter.%23ctor%2A>construtor deve ser usado em vez desse método.</xref:System.Data.Common.DataAdapter.%23ctor%2A>       Todos os comandos, o <xref:System.Data.Common.DataAdapter.TableMappings%2A>, o <xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A>e o <xref:System.Data.Common.DataAdapter.MissingMappingAction%2A>são clonados.</xref:System.Data.Common.DataAdapter.MissingMappingAction%2A> </xref:System.Data.Common.DataAdapter.MissingSchemaAction%2A> </xref:System.Data.Common.DataAdapter.TableMappings%2A> No entanto, as conexões para os comandos não são copiadas, mas compartilhadas. Portanto, o clonado <xref:System.Data.Common.DataAdapter>pode ser usado com a mesma conexão que o original.</xref:System.Data.Common.DataAdapter>"
  syntax:
    content: protected virtual System.Data.Common.DataAdapter CloneInternals ();
    parameters: []
    return:
      type: System.Data.Common.DataAdapter
      description: "A instância clonada de <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.CloneInternals*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError
  id: ContinueUpdateOnError
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
  fullName: System.Data.Common.DataAdapter.ContinueUpdateOnError
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define um valor que especifica se gerar uma exceção quando um erro é encontrado durante uma atualização de linha."
  remarks: "Se `ContinueUpdateOnError` é definido como `true`, nenhuma exceção é lançada quando ocorre um erro durante a atualização de uma linha. A atualização da linha é ignorada e as informações de erro são colocadas no <xref:System.Data.DataRow.RowError%2A>propriedade da linha no erro.</xref:System.Data.DataRow.RowError%2A> O <xref:System.Data.Common.DataAdapter>continua a atualizar linhas subsequentes.</xref:System.Data.Common.DataAdapter>       Se `ContinueUpdateOnError` é definido como `false`, uma exceção é lançada quando ocorre um erro durante a atualização de uma linha."
  syntax:
    content: public bool ContinueUpdateOnError { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para continuar a atualização sem gerar uma exceção; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.ContinueUpdateOnError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.CreateTableMappings
  id: CreateTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: CreateTableMappings()
  nameWithType: DataAdapter.CreateTableMappings()
  fullName: System.Data.Common.DataAdapter.CreateTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Cria um novo <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.Common.DataTableMappingCollection CreateTableMappings ();
    parameters: []
    return:
      type: System.Data.Common.DataTableMappingCollection
      description: "Um novo conjunto de mapeamentos de tabela."
  overload: System.Data.Common.DataAdapter.CreateTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DataAdapter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Libera os recursos não gerenciados usados pelo <xref href=&quot;System.Data.Common.DataAdapter&quot;> </xref> e, opcionalmente, libera os recursos gerenciados."
  remarks: "Este método é chamado pelo público <xref:System.IDisposable.Dispose%2A>método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> </xref:System.IDisposable.Dispose%2A> `Dispose`invoca o protegido `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Data.Common.DataAdapter>referências.</xref:System.Data.Common.DataAdapter> Este método chama o `Dispose` método de cada objeto referenciado."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para liberar apenas recursos não gerenciados."
  overload: System.Data.Common.DataAdapter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  id: Fill(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataSet)
  nameWithType: DataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona ou atualiza linhas no <xref href=&quot;System.Data.DataSet&quot;> </xref> para corresponder da fonte de dados."
  remarks: "O método de preenchimento recupera linhas da fonte de dados usando a instrução SELECT especificada por um associado <xref:System.Data.IDbDataAdapter.SelectCommand%2A>propriedade.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> O objeto de conexão associado com a instrução SELECT deve ser válido, mas ele não precisa ser aberta. Se a conexão é fechada antes de preenchimento é chamado, ele é aberto para recuperar dados e fechado. Se a conexão está aberta antes de preenchimento é chamado, ele permanecerá aberto.       A operação de preenchimento, em seguida, adiciona as linhas para o destino <xref:System.Data.DataTable>objetos no <xref:System.Data.DataSet>, criando o <xref:System.Data.DataTable>objetos se eles ainda não existirem.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable> Ao criar <xref:System.Data.DataTable>objetos, a operação de preenchimento normalmente cria apenas os metadados de nome de coluna.</xref:System.Data.DataTable> No entanto, se o <xref:System.Data.IDataAdapter.MissingSchemaAction%2A>está definida como `AddWithKey`, restrições e chaves primárias apropriadas também são criadas.</xref:System.Data.IDataAdapter.MissingSchemaAction%2A>       Se o `SelectCommand` retorna os resultados de uma junção externa, o `DataAdapter` não define um <xref:System.Data.DataTable.PrimaryKey%2A>valor para o <xref:System.Data.DataTable>.</xref:System.Data.DataTable> resultante</xref:System.Data.DataTable.PrimaryKey%2A> Você deve definir explicitamente a chave primária para garantir que as linhas duplicadas são resolvidas corretamente. Para obter mais informações, consulte [definindo chaves primárias](~/add/includes/ajax-current-ext-md.md).       Se o adaptador de dados encontrar colunas duplicadas ao preencher um <xref:System.Data.DataTable>, ele gera nomes para as colunas subsequentes, usando o padrão &quot;nome_da_coluna1&quot;, &quot;columnname2&quot;, &quot;columnname3&quot; e assim por diante.</xref:System.Data.DataTable> Se os dados de entrada contém colunas sem nome, eles são colocados no <xref:System.Data.DataSet>acordo com o padrão &quot;Coluna1&quot;, &quot;Coluna2&quot; e assim por diante.</xref:System.Data.DataSet> Quando vários conjuntos de resultados são adicionados para o <xref:System.Data.DataSet>cada conjunto de resultados é colocado em uma tabela separada.</xref:System.Data.DataSet> Conjuntos de resultados adicionais são nomeados adicionando valores inteiros para o nome da tabela especificada (por exemplo, &quot;Table&quot;, &quot;Table1&quot;, &quot;Tabela2&quot; e assim por diante). Aplicativos que usam nomes de coluna e tabela devem garantir que está em conflito com esses padrões de nomenclatura não ocorra.       Quando a instrução SELECT é usada para popular o <xref:System.Data.DataSet>retornar vários resultados, como um instruções SQL de lote, se um dos resultados contiver um erro, todos os resultados subsequentes são ignorados e não adicionados ao <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataSet>       Você pode usar o método de preenchimento várias vezes na mesma <xref:System.Data.DataTable>.</xref:System.Data.DataTable> Se existir uma chave primária, linhas de entrada são mescladas com as linhas correspondentes que já existem. Se nenhuma chave primária existe, linhas de entrada são acrescentadas ao <xref:System.Data.DataTable>.</xref:System.Data.DataTable>      > [!NOTE] > Ao tratar instruções SQL em lotes que retornem vários resultados, a implementação de <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>para o provedor de dados .NET Framework para OLE DB recupera informações de esquema para apenas o primeiro resultado.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Para recuperar informações de esquema para vários resultados, use <xref:System.Data.Common.DbDataAdapter.Fill%2A>com o <xref:System.Data.MissingSchemaAction>definido como `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public virtual int Fill (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Um <xref href=&quot;System.Data.DataSet&quot;> </xref> para preencher com registros e, se necessário, esquema."
    return:
      type: System.Int32
      description: "O número de linhas com êxito adicionado ou atualizado no <xref href=&quot;System.Data.DataSet&quot;> </xref>. Isso não inclui linhas afetadas pelas instruções que não retornam linhas."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  id: Fill(System.Data.DataTable,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataTable,IDataReader)
  nameWithType: DataAdapter.Fill(DataTable,IDataReader)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona ou atualiza linhas no <xref href=&quot;System.Data.DataTable&quot;> </xref> para corresponder da fonte de dados usando o <xref href=&quot;System.Data.DataTable&quot;> </xref> nome e especificado <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
  remarks: "Consulte os comentários para `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` para obter informações adicionais."
  syntax:
    content: protected virtual int Fill (System.Data.DataTable dataTable, System.Data.IDataReader dataReader);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> para preencher com registros."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Uma instância de <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    return:
      type: System.Int32
      description: "O número de linhas com êxito adicionado ou atualizado no <xref href=&quot;System.Data.DataTable&quot;> </xref>. Isso não inclui linhas afetadas pelas instruções que não retornam linhas."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  id: Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataTable[],IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona ou atualiza linhas em um intervalo especificado na coleção de <xref href=&quot;System.Data.DataTable&quot;> </xref> objetos para corresponder da fonte de dados."
  remarks: "Consulte os comentários para `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` para obter informações adicionais."
  syntax:
    content: protected virtual int Fill (System.Data.DataTable[] dataTables, System.Data.IDataReader dataReader, int startRecord, int maxRecords);
    parameters:
    - id: dataTables
      type: System.Data.DataTable[]
      description: "Uma coleção de <xref href=&quot;System.Data.DataTable&quot;> </xref> objetos para preencher com registros."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Uma instância de <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: startRecord
      type: System.Int32
      description: "O índice de base zero do registro inicial."
    - id: maxRecords
      type: System.Int32
      description: "Um inteiro que indica o número máximo de registros."
    return:
      type: System.Int32
      description: "O número de linhas com êxito adicionado ou atualizado no <xref href=&quot;System.Data.DataTable&quot;> </xref>. Isso não inclui linhas afetadas pelas instruções que não retornam linhas."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  id: Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Fill(DataSet,String,IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona ou atualiza linhas em um intervalo especificado no <xref href=&quot;System.Data.DataSet&quot;> </xref> para corresponder da fonte de dados usando o <xref href=&quot;System.Data.DataSet&quot;> </xref> e <xref href=&quot;System.Data.DataTable&quot;> </xref> nomes."
  remarks: "Consulte os comentários para `System.Data.Common.DataAdapter.Fill(System.Data.DataSet)` para obter informações adicionais."
  syntax:
    content: protected virtual int Fill (System.Data.DataSet dataSet, string srcTable, System.Data.IDataReader dataReader, int startRecord, int maxRecords);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "Um <xref href=&quot;System.Data.DataSet&quot;> </xref> para preencher com registros."
    - id: srcTable
      type: System.String
      description: "Uma cadeia de caracteres que indica o nome da tabela de origem."
    - id: dataReader
      type: System.Data.IDataReader
      description: "Uma instância de <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: startRecord
      type: System.Int32
      description: "O índice de base zero do registro inicial."
    - id: maxRecords
      type: System.Int32
      description: "Um inteiro que indica o número máximo de registros."
    return:
      type: System.Int32
      description: "O número de linhas com êxito adicionado ou atualizado no <xref href=&quot;System.Data.DataSet&quot;> </xref>. Isso não inclui linhas afetadas pelas instruções que não retornam linhas."
  overload: System.Data.Common.DataAdapter.Fill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillError
  id: FillError
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillError
  nameWithType: DataAdapter.FillError
  fullName: System.Data.Common.DataAdapter.FillError
  type: Event
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Retornado quando ocorre um erro durante uma operação de preenchimento."
  remarks: "O **FillError** evento permite que um usuário determinar se a operação de preenchimento deve continuar depois do erro. Exemplos de quando o **FillError** evento pode ocorrer são: - os dados que está sendo adicionados a um `DataSet` não pode ser convertido em um tipo common language runtime sem perda de precisão.      -A linha que está sendo adicionada contém dados que violam uma restrição que deve ser aplicada em uma `DataColumn` no `DataSet`."
  syntax:
    content: public event System.Data.FillErrorEventHandler FillError;
    return:
      type: System.Data.FillErrorEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillLoadOption
  id: FillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
  fullName: System.Data.Common.DataAdapter.FillLoadOption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define o <xref href=&quot;System.Data.LoadOption&quot;> </xref> que determina como o adaptador preenche o <xref href=&quot;System.Data.DataTable&quot;> </xref> do <xref href=&quot;System.Data.Common.DbDataReader&quot;> </xref>."
  syntax:
    content: public System.Data.LoadOption FillLoadOption { get; set; }
    return:
      type: System.Data.LoadOption
      description: "A <xref href=&quot;System.Data.LoadOption&quot;></xref> value."
  overload: System.Data.Common.DataAdapter.FillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona um <xref href=&quot;System.Data.DataTable&quot;> </xref> especificado <xref href=&quot;System.Data.DataSet&quot;> </xref> e configura o esquema para corresponder da fonte de dados com base em especificado <xref href=&quot;System.Data.SchemaType&quot;> </xref>."
  remarks: "O método FillSchema recupera o esquema da fonte de dados usando o <xref:System.Data.IDbDataAdapter.SelectCommand%2A>.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> O objeto de conexão associado a <xref:System.Data.IDbDataAdapter.SelectCommand%2A>devem ser válidos, mas não precisa estar aberta.</xref:System.Data.IDbDataAdapter.SelectCommand%2A> Se a conexão é fechada antes FillSchema é chamado, ele é aberto para recuperar dados e, em seguida, fechado. Se a conexão está aberta antes de FillSchema é chamado, ele permanecerá aberto.       Uma operação de FillSchema adiciona um <xref:System.Data.DataTable>para o destino <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataTable> Em seguida, adiciona colunas para o <xref:System.Data.DataColumnCollection>do <xref:System.Data.DataTable>e configura o seguinte <xref:System.Data.DataColumn>propriedades se eles existirem na fonte de dados:- <xref:System.Data.DataColumn.AllowDBNull%2A>- <xref:System.Data.DataColumn.AutoIncrement%2A>.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn.AllowDBNull%2A> </xref:System.Data.DataColumn> </xref:System.Data.DataTable> </xref:System.Data.DataColumnCollection> Você deve definir <xref:System.Data.DataColumn.AutoIncrementStep%2A>e <xref:System.Data.DataColumn.AutoIncrementSeed%2A>separadamente.</xref:System.Data.DataColumn.AutoIncrementSeed%2A> </xref:System.Data.DataColumn.AutoIncrementStep%2A>      - <xref:System.Data.DataColumn.MaxLength%2A>- <xref:System.Data.DataColumn.ReadOnly%2A>- <xref:System.Data.DataColumn.Unique%2A>FillSchema também configura o <xref:System.Data.DataTable.PrimaryKey%2A>e <xref:System.Data.DataTable.Constraints%2A>Propriedades de acordo com as seguintes regras: - se uma ou mais colunas de chave primária são retornadas pelo <xref:System.Data.IDbDataAdapter.SelectCommand%2A>elas são usadas como colunas de chave primária para <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.IDbDataAdapter.SelectCommand%2A> </xref:System.Data.DataTable.Constraints%2A> </xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.DataColumn.Unique%2A> </xref:System.Data.DataColumn.ReadOnly%2A> </xref:System.Data.DataColumn.MaxLength%2A>      -Se não há colunas de chave primária são retornadas, mas são colunas exclusivas, as colunas exclusivas são usadas como chave primária se e somente se, todas as colunas exclusivas são não nulas. Se qualquer uma das colunas são nulas, um <xref:System.Data.UniqueConstraint>é adicionado ao <xref:System.Data.ConstraintCollection>, mas o <xref:System.Data.DataTable.PrimaryKey%2A>propriedade não está definida.</xref:System.Data.DataTable.PrimaryKey%2A> </xref:System.Data.ConstraintCollection> </xref:System.Data.UniqueConstraint>      -Se colunas de chave primária e de colunas exclusivas são retornadas, colunas de chave primária são usadas como colunas de chave primária para <xref:System.Data.DataTable>.</xref:System.Data.DataTable>      > [!NOTE] > O repositório de dados subjacentes pode permitir que os atributos de coluna que não têm suporte em um <xref:System.Data.DataColumn>, que faz com que alguns atributos de coluna não traduzam corretamente.</xref:System.Data.DataColumn> Por exemplo, [!INCLUDE[ssNoVersion](~/add/includes/ssnoversion-md.md)] permite que uma coluna de identidade com um tipo de dados tinyint enquanto um <xref:System.Data.DataColumn>permite apenas Int16, Int32 e Int64 tenha o <xref:System.Data.DataColumn.AutoIncrement%2A>conjunto de propriedades.</xref:System.Data.DataColumn.AutoIncrement%2A> </xref:System.Data.DataColumn> `FillSchema`ignora silenciosamente casos onde o <xref:System.Data.DataColumn>com precisão não é possível espelhar a fonte de dados e não gera nenhuma exceção.</xref:System.Data.DataColumn>       Observe que as chaves primárias e restrições exclusivas serão adicionadas para o <xref:System.Data.ConstraintCollection>acordo com as regras precedentes, mas outra restrição de tipos não são adicionados.</xref:System.Data.ConstraintCollection>       Se o cluster de um único índice é definido em uma coluna ou colunas em uma tabela do SQL Server e a restrição de chave primária é definida em um conjunto separado de colunas, em seguida, os nomes das colunas no índice clusterizado serão retornados. Para retornar o nome ou nomes de colunas de chave primária, use uma dica de consulta com a instrução SELECT que especifica o nome do índice de chave primária. Para obter mais informações sobre como especificar dicas de consulta, consulte [a dica de consulta (Transact-SQL)](http://msdn.microsoft.com/library/ms181714.aspx).       Se o <xref:System.Data.Common.DataAdapter>encontra colunas duplicadas ao preencher um <xref:System.Data.DataTable>, ele gera nomes para as colunas subsequentes, usando o padrão &quot;*columnname*1&quot;, &quot;*columnname*2&quot;,&quot;*columnname*3&quot;, e assim por diante.</xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter> Se os dados de entrada contém colunas sem nome, eles são colocados no <xref:System.Data.DataSet>acordo com o padrão &quot;Coluna1&quot;, &quot;Coluna2&quot; e assim por diante.</xref:System.Data.DataSet> Quando vários conjuntos de resultados são adicionados para o <xref:System.Data.DataSet>cada conjunto de resultados é colocado em uma tabela separada.</xref:System.Data.DataSet> Conjuntos de resultados adicionais são nomeados adicionando valores inteiros para o nome da tabela especificada (por exemplo, &quot;Table&quot;, &quot;Table1&quot;, &quot;Tabela2&quot; e assim por diante). Aplicativos que usam nomes de coluna e tabela devem garantir que está em conflito com esses padrões de nomenclatura não ocorra.       FillSchema não retornar linhas. Use o <xref:System.Data.Common.DataAdapter.Fill%2A>método para adicionar linhas a serem <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.Common.DataAdapter.Fill%2A>      > [!NOTE] > Ao tratar instruções SQL em lotes que retornem vários resultados, a implementação de <xref:System.Data.Common.DbDataAdapter.FillSchema%2A>para o provedor de dados .NET Framework para OLE DB recupera informações de esquema para apenas o primeiro resultado.</xref:System.Data.Common.DbDataAdapter.FillSchema%2A> Para recuperar informações de esquema para vários resultados, use <xref:System.Data.Common.DbDataAdapter.Fill%2A>com o <xref:System.Data.MissingSchemaAction>definido como `AddWithKey`.</xref:System.Data.MissingSchemaAction> </xref:System.Data.Common.DbDataAdapter.Fill%2A>"
  syntax:
    content: public virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "O <xref href=&quot;System.Data.DataSet&quot;> </xref> a ser preenchido com o esquema da fonte de dados."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Uma da <xref href=&quot;System.Data.SchemaType&quot;> </xref> valores."
    return:
      type: System.Data.DataTable[]
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> retornado do objeto que contém informações de esquema da fonte de dados."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  id: FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataTable,SchemaType,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona um <xref href=&quot;System.Data.DataTable&quot;> </xref> especificado <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.DataTable FillSchema (System.Data.DataTable dataTable, System.Data.SchemaType schemaType, System.Data.IDataReader dataReader);
    parameters:
    - id: dataTable
      type: System.Data.DataTable
      description: "O <xref href=&quot;System.Data.DataTable&quot;> </xref> ser preenchidas do <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Uma da <xref href=&quot;System.Data.SchemaType&quot;> </xref> valores."
    - id: dataReader
      type: System.Data.IDataReader
      description: "O <xref href=&quot;System.Data.IDataReader&quot;> </xref> a ser usado como a fonte de dados durante o preenchimento de <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> retornado do objeto que contém informações de esquema da fonte de dados."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  id: FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: FillSchema(DataSet,SchemaType,String,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona um <xref href=&quot;System.Data.DataTable&quot;> </xref> especificado <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  syntax:
    content: protected virtual System.Data.DataTable[] FillSchema (System.Data.DataSet dataSet, System.Data.SchemaType schemaType, string srcTable, System.Data.IDataReader dataReader);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "O <xref href=&quot;System.Data.DataTable&quot;> </xref> ser preenchidas do <xref href=&quot;System.Data.IDataReader&quot;> </xref>."
    - id: schemaType
      type: System.Data.SchemaType
      description: "Uma da <xref href=&quot;System.Data.SchemaType&quot;> </xref> valores."
    - id: srcTable
      type: System.String
      description: "O nome da tabela de origem a ser usado para mapeamento de tabela."
    - id: dataReader
      type: System.Data.IDataReader
      description: "O <xref href=&quot;System.Data.IDataReader&quot;> </xref> a ser usado como a fonte de dados durante o preenchimento de <xref href=&quot;System.Data.DataTable&quot;> </xref>."
    return:
      type: System.Data.DataTable[]
      description: "Uma referência a uma coleção de <xref href=&quot;System.Data.DataTable&quot;> </xref> objetos que foram adicionados para o <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.FillSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.GetFillParameters
  id: GetFillParameters
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: GetFillParameters()
  nameWithType: DataAdapter.GetFillParameters()
  fullName: System.Data.Common.DataAdapter.GetFillParameters()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém os parâmetros definidos pelo usuário ao executar uma instrução SQL SELECT."
  syntax:
    content: public virtual System.Data.IDataParameter[] GetFillParameters ();
    parameters: []
    return:
      type: System.Data.IDataParameter[]
      description: "Uma matriz de <xref href=&quot;System.Data.IDataParameter&quot;> </xref> objetos que contém os parâmetros definidos pelo usuário."
  overload: System.Data.Common.DataAdapter.GetFillParameters*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.HasTableMappings
  id: HasTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: HasTableMappings()
  nameWithType: DataAdapter.HasTableMappings()
  fullName: System.Data.Common.DataAdapter.HasTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Indica se um <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> foi criado."
  syntax:
    content: protected bool HasTableMappings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um <xref href=&quot;System.Data.Common.DataTableMappingCollection&quot;> </xref> foi criado; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.HasTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.MissingMappingAction
  id: MissingMappingAction
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
  fullName: System.Data.Common.DataAdapter.MissingMappingAction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina a ação a ser tomada quando os dados de entrada não tem uma tabela ou coluna correspondente."
  remarks: "A <xref:System.Data.Common.DataAdapter.TableMappings%2A>propriedade fornece o mapeamento entre os registros retornados e <xref:System.Data.DataSet>.</xref:System.Data.DataSet> de mestre</xref:System.Data.Common.DataAdapter.TableMappings%2A>"
  example:
  - "The following example creates a derived class, <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_4_1.vb)]\n [!code-cs[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_4_1.cs)]"
  syntax:
    content: public System.Data.MissingMappingAction MissingMappingAction { get; set; }
    return:
      type: System.Data.MissingMappingAction
      description: "Uma da <xref href=&quot;System.Data.MissingMappingAction&quot;> </xref> valores. O padrão é <xref uid=&quot;langword_csharp_Passthrough&quot; name=&quot;Passthrough&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.MissingMappingAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O conjunto de valor não é um do <xref href=&quot;System.Data.MissingMappingAction&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.MissingSchemaAction
  id: MissingSchemaAction
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
  fullName: System.Data.Common.DataAdapter.MissingSchemaAction
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina a ação a ser tomada quando existente <xref href=&quot;System.Data.DataSet&quot;> </xref> esquema não coincide com os dados de entrada."
  remarks: ''
  example:
  - "The following example creates a derived class, <xref:System.Data.OleDb.OleDbDataAdapter> and sets some of its properties.  \n  \n [!code-vb[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_9_1.vb)]\n [!code-cs[Classic WebData DataAdapter.MissingMappingAction Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_9_1.cs)]"
  syntax:
    content: public System.Data.MissingSchemaAction MissingSchemaAction { get; set; }
    return:
      type: System.Data.MissingSchemaAction
      description: "Uma da <xref href=&quot;System.Data.MissingSchemaAction&quot;> </xref> valores. O padrão é <xref uid=&quot;langword_csharp_Add&quot; name=&quot;Add&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.MissingSchemaAction*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O conjunto de valor não é um do <xref href=&quot;System.Data.MissingSchemaAction&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  id: OnFillError(System.Data.FillErrorEventArgs)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: OnFillError(FillErrorEventArgs)
  nameWithType: DataAdapter.OnFillError(FillErrorEventArgs)
  fullName: System.Data.Common.DataAdapter.OnFillError(FillErrorEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Chamado quando ocorre um erro durante uma <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: protected virtual void OnFillError (System.Data.FillErrorEventArgs value);
    parameters:
    - id: value
      type: System.Data.FillErrorEventArgs
      description: "A <xref href=&quot;System.Data.FillErrorEventArgs&quot;></xref> object."
  overload: System.Data.Common.DataAdapter.OnFillError*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption
  id: ResetFillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ResetFillLoadOption()
  nameWithType: DataAdapter.ResetFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ResetFillLoadOption()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Redefine <> </> *> para seu estado padrão e causas &lt;xref:System.Data.Common.DataAdapter.Fill%2A?displayProperty=fullName&gt; cumprir <> </> *>."
  syntax:
    content: public void ResetFillLoadOption ();
    parameters: []
  overload: System.Data.Common.DataAdapter.ResetFillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  id: ReturnProviderSpecificTypes
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
  fullName: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define se o <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref> método deve retornar valores específicos do provedor ou comum compatível com CLS."
  remarks: "O valor padrão é `false`."
  syntax:
    content: public virtual bool ReturnProviderSpecificTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref uid=&quot;langword_csharp_Fill&quot; name=&quot;Fill&quot; href=&quot;&quot;> </xref> método deve retornar valores específicos de provedor; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para retornar os valores comuns compatível com CLS."
  overload: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  id: ShouldSerializeAcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeAcceptChangesDuringFill()
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina se o <xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>propriedade deve ser persistida.</xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>"
  syntax:
    content: public virtual bool ShouldSerializeAcceptChangesDuringFill ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>propriedade for persistente; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.Common.DataAdapter.AcceptChangesDuringFill*>"
  overload: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  id: ShouldSerializeFillLoadOption
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeFillLoadOption()
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina se o <xref:System.Data.Common.DataAdapter.FillLoadOption*>propriedade deve ser persistida.</xref:System.Data.Common.DataAdapter.FillLoadOption*>"
  syntax:
    content: public virtual bool ShouldSerializeFillLoadOption ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Data.Common.DataAdapter.FillLoadOption*>propriedade for persistente; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Data.Common.DataAdapter.FillLoadOption*>"
  overload: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  id: ShouldSerializeTableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: ShouldSerializeTableMappings()
  nameWithType: DataAdapter.ShouldSerializeTableMappings()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeTableMappings()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Determina se um ou mais <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objetos existem e eles devem ser persistentes."
  syntax:
    content: protected virtual bool ShouldSerializeTableMappings ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um ou mais <xref href=&quot;System.Data.Common.DataTableMapping&quot;> </xref> objetos existirem; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.ShouldSerializeTableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  id: System#Data#IDataAdapter#TableMappings
  isEii: true
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.System.Data.IDataAdapter.TableMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Indica como uma tabela de origem é mapeada para uma tabela de conjunto de dados."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Data.Common.DataAdapter>instância é convertida em um <xref:System.Data.IDataAdapter>interface.</xref:System.Data.IDataAdapter> </xref:System.Data.Common.DataAdapter>       Para obter mais informações, consulte <xref:System.Data.IDataAdapter.TableMappings%2A>.</xref:System.Data.IDataAdapter.TableMappings%2A>"
  syntax:
    content: System.Data.ITableMappingCollection System.Data.IDataAdapter.TableMappings { get; }
    return:
      type: System.Data.ITableMappingCollection
      description: "Uma coleção que fornece o mapeamento entre os registros retornados de mestre e o <xref href=&quot;System.Data.DataSet&quot;> </xref>. O valor padrão é uma coleção vazia."
  overload: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.TableMappings
  id: TableMappings
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.TableMappings
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém uma coleção que fornece o mapeamento mestre entre uma tabela de origem e um <xref href=&quot;System.Data.DataTable&quot;> </xref>."
  remarks: "Quando reconciliar as alterações, que <xref:System.Data.Common.DataAdapter>usa a <xref:System.Data.Common.DataTableMappingCollection>coleção para associar os nomes de coluna usados pela fonte de dados com os nomes de coluna usados pelo <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.Common.DataTableMappingCollection> </xref:System.Data.Common.DataAdapter>"
  example:
  - "The following example uses a derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to add <xref:System.Data.Common.DataTableMapping> objects to its TableMappings collection and display a list of those mapped source tables. This example assumes that an <xref:System.Data.OleDb.OleDbDataAdapter> has already been created.  \n  \n [!code-vb[Classic WebData DataAdapter.TableMappings Example#1](~/add/codesnippet/visualbasic/p-system.data.common.dat_14_1.vb)]\n [!code-cs[Classic WebData DataAdapter.TableMappings Example#1](~/add/codesnippet/csharp/p-system.data.common.dat_14_1.cs)]"
  syntax:
    content: public System.Data.Common.DataTableMappingCollection TableMappings { get; }
    return:
      type: System.Data.Common.DataTableMappingCollection
      description: "Uma coleção que fornece o mapeamento entre os registros retornados de mestre e o <xref href=&quot;System.Data.DataSet&quot;> </xref>. O valor padrão é uma coleção vazia."
  overload: System.Data.Common.DataAdapter.TableMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  id: Update(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  langs:
  - csharp
  name: Update(DataSet)
  nameWithType: DataAdapter.Update(DataSet)
  fullName: System.Data.Common.DataAdapter.Update(DataSet)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Chama as respectivas instruções INSERT, UPDATE ou DELETE para cada inseridas, atualizadas ou excluídas de linha especificado na <xref href=&quot;System.Data.DataSet&quot;> </xref> de um <xref href=&quot;System.Data.DataTable&quot;> </xref> chamado &quot;Table&quot;."
  remarks: "A atualização é executada em uma base por linha. Para cada linha inserida, excluída e modificada, o método Update determina o tipo de alteração que foi executada nele (Inserir, atualizar ou excluir). Dependendo do tipo de alteração, o `Insert`, `Update,` ou `Delete` modelo de comando executa para propagar a linha modificada para a fonte de dados. Quando um aplicativo chama o método de atualização, o <xref:System.Data.Common.DataAdapter>examina o <xref:System.Data.DataRow.RowState%2A>propriedade e executa as instruções INSERT, UPDATE ou DELETE necessárias iterativamente para cada linha, com base na ordem de índices configurados em <xref:System.Data.DataSet>.</xref:System.Data.DataSet> </xref:System.Data.DataRow.RowState%2A> </xref:System.Data.Common.DataAdapter> Por exemplo, a atualização pode executar uma instrução DELETE, seguida por uma instrução INSERT e, em seguida, outra instrução de exclusão, devido a ordenação de linhas em <xref:System.Data.DataTable>.</xref:System.Data.DataTable>       Observe que essas instruções não são executadas como um processo em lote; cada linha é atualizada individualmente. Um aplicativo pode chamar o <xref:System.Data.DataSet.GetChanges%2A>método em situações em que você deve controlar a sequência de tipos de instrução (por exemplo, inserir antes da atualização).</xref:System.Data.DataSet.GetChanges%2A> Para obter mais informações, consulte [Atualizar fontes de dados com DataAdapters](~/add/includes/ajax-current-ext-md.md).       Se as instruções INSERT, UPDATE ou DELETE não forem especificados, o método de atualização gera uma exceção. No entanto, você pode criar um <xref:System.Data.SqlClient.SqlCommandBuilder>ou <xref:System.Data.OleDb.OleDbCommandBuilder>objeto para gerar automaticamente instruções SQL para atualizações de tabela única se você definir o `SelectCommand` propriedade de um provedor de dados .NET Framework.</xref:System.Data.OleDb.OleDbCommandBuilder> </xref:System.Data.SqlClient.SqlCommandBuilder> Em seguida, qualquer instrução SQL adicional que você não defina é geradas pelo **CommandBuilder**. Essa lógica de geração exige informações de coluna de chave esteja presente em <xref:System.Data.DataSet>.</xref:System.Data.DataSet> Para obter mais informações, consulte [gerar comandos com CommandBuilders](~/add/includes/ajax-current-ext-md.md).       O método de atualização recupera linhas da tabela listada no mapeamento primeiro antes de executar uma atualização. A atualização, em seguida, atualiza a linha usando o valor de <xref:System.Data.IDbCommand.UpdatedRowSource%2A>propriedade.</xref:System.Data.IDbCommand.UpdatedRowSource%2A> As linhas adicionais retornadas são ignoradas.       Depois que os dados sejam carregados para o <xref:System.Data.DataSet>, o <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>é gerado, permitindo que o usuário inspecionar o reconciliado <xref:System.Data.DataSet>retornados pelo comando de parâmetros de saída de linha e qualquer.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A> </xref:System.Data.DataSet> Depois que uma linha é atualizado com êxito, as alterações a essa linha são aceitas.       Ao usar a atualização, a ordem de execução é o seguinte: 1.  Os valores de <xref:System.Data.DataRow>são movidos para os valores de parâmetro.</xref:System.Data.DataRow>      2.  O <xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>é gerado.</xref:System.Data.Common.DbDataAdapter.OnRowUpdating%2A>      3.  O comando é executado.      4.  Se o comando é definido como `FirstReturnedRecord`, retornado do primeiro resultado é colocado em <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      5.  Se não houver parâmetros de saída, eles são colocados em <xref:System.Data.DataRow>.</xref:System.Data.DataRow>      6.  O <xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>é gerado.</xref:System.Data.Common.DbDataAdapter.OnRowUpdated%2A>      7.  <xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName>é chamado.</xref:System.Data.DataRow.AcceptChanges%2A?displayProperty=fullName> Isso gerará ambos o <xref:System.Data.DataTable.RowChanging?displayProperty=fullName>e os <xref:System.Data.DataTable.RowChanged?displayProperty=fullName>eventos de atualizado <xref:System.Data.DataRow>.</xref:System.Data.DataRow> </xref:System.Data.DataTable.RowChanged?displayProperty=fullName> </xref:System.Data.DataTable.RowChanging?displayProperty=fullName>       Cada comando associado que <xref:System.Data.Common.DataAdapter>geralmente tem uma coleção de parâmetros associada a.</xref:System.Data.Common.DataAdapter> Parâmetros são mapeados para a linha atual por meio de `SourceColumn` e `SourceVersion` propriedades do provedor de dados.NET `Parameter` classe. `SourceColumn`refere-se a um <xref:System.Data.DataTable>coluna que o <xref:System.Data.Common.DataAdapter>referências para obter valores de parâmetro para a linha atual.</xref:System.Data.Common.DataAdapter> </xref:System.Data.DataTable>       `SourceColumn`refere-se ao nome da coluna mapeada antes de qualquer mapeamento de tabela tiverem sido aplicado. Se `SourceColumn` refere-se a uma coluna que não existe, a ação tomada depende de um dos seguintes <xref:System.Data.MissingMappingAction>valores.</xref:System.Data.MissingMappingAction>      | Valor de enumeração | Ação realizada |   |-----------------------|------------------|   | `MissingMappingAction.Passthrough`| Use os nomes de coluna de origem e os nomes de tabela o <xref:System.Data.DataSet>se nenhum mapeamento estiver presente. |   | `MissingMappingAction.Ignore`| Um <xref:System.SystemException>é gerado.</xref:System.SystemException> </xref:System.Data.DataSet> Quando os mapeamentos são explicitamente definidos, um mapeamento ausente para um parâmetro de entrada é geralmente o resultado de um erro. |   | `MissingMappingAction.Error`| É gerado um <xref:System.SystemException>. |       O `SourceColumn` propriedade também é usada para mapear o valor de saída ou parâmetros de entrada/saída de volta para o `DataSet`.</xref:System.SystemException> Uma exceção é gerada se ela se refere a uma coluna que não existe.       O `SourceVersion` propriedade de um provedor de dados .NET `Parameter` classe determina se deve usar a versão Original, atual ou proposta do valor da coluna. Geralmente, esse recurso é usado para incluir valores originais na cláusula WHERE de uma instrução UPDATE para verificar se há violações de simultaneidade otimista.       Chamar o <xref:System.Data.DataSet.AcceptChanges%2A>método ou o <xref:System.Data.DataTable.AcceptChanges%2A>método confirmará todas as alterações na <xref:System.Data.DataSet>ou <xref:System.Data.DataTable>.</xref:System.Data.DataTable> </xref:System.Data.DataSet> </xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataSet.AcceptChanges%2A> Se qualquer um desses métodos forem chamado antes do <xref:System.Data.Common.DbDataAdapter.Update%2A>método é chamado, nenhuma alteração será confirmada quando o <xref:System.Data.Common.DbDataAdapter.Update%2A>método é chamado, a menos que outras alterações foram feitas desde <xref:System.Data.DataSet.AcceptChanges%2A>ou <xref:System.Data.DataTable.AcceptChanges%2A>foi chamado.</xref:System.Data.DataTable.AcceptChanges%2A> </xref:System.Data.DataSet.AcceptChanges%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>      > [!NOTE] > Se ocorrer um erro ao atualizar uma linha, uma exceção será lançada e a execução da atualização será interrompida. Para continuar a operação de atualização sem gerar exceções quando um erro for encontrado, defina o <xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A>propriedade `true` antes de chamar <xref:System.Data.Common.DbDataAdapter.Update%2A>.</xref:System.Data.Common.DbDataAdapter.Update%2A> </xref:System.Data.Common.DataAdapter.ContinueUpdateOnError%2A> Você também pode responder a erros em uma base por linha dentro de `RowUpdated` eventos de um DataAdapter. Para continuar a operação de atualização sem gerar uma exceção dentro de `RowUpdated` evento, defina a <xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>propriedade de <xref:System.Data.Common.RowUpdatedEventArgs> <xref:System.Data.UpdateStatus>.</xref:System.Data.UpdateStatus> </xref:System.Data.Common.RowUpdatedEventArgs> </xref:System.Data.Common.RowUpdatedEventArgs.Status%2A>   >> Para cada coluna que propagam para onUpdate de fonte de dados, um parâmetro deve ser adicionado para o `InsertCommand`, `UpdateCommand`, ou `DeleteCommand`. O `SourceColumn` propriedade do parâmetro deve ser definida como o nome da coluna. Essa configuração indica que o valor do parâmetro não for definido manualmente, mas é obtido da coluna particular na linha processada no momento."
  example:
  - "The following example uses the derived class, <xref:System.Data.OleDb.OleDbDataAdapter>, to Update the data source.  \n  \n [!code-cs[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/add/codesnippet/csharp/m-system.data.common.dat_26_1.cs)]\n [!code-vb[Classic WebData DataAdapter.IDataAdapter.Update Example#1](~/add/codesnippet/visualbasic/m-system.data.common.dat_26_1.vb)]"
  syntax:
    content: public virtual int Update (System.Data.DataSet dataSet);
    parameters:
    - id: dataSet
      type: System.Data.DataSet
      description: "O <xref href=&quot;System.Data.DataSet&quot;> </xref> usado para atualizar a fonte de dados."
    return:
      type: System.Int32
      description: "O número de linhas atualizadas com êxito a partir de <xref href=&quot;System.Data.DataSet&quot;> </xref>."
  overload: System.Data.Common.DataAdapter.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A tabela de origem é inválida."
  - type: System.Data.DBConcurrencyException
    commentId: T:System.Data.DBConcurrencyException
    description: "Uma tentativa de executar uma instrução INSERT, UPDATE ou DELETE resultou em zero registros afetados."
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.DBConcurrencyException
  parent: System.Data
  isExternal: false
  name: DBConcurrencyException
  nameWithType: DBConcurrencyException
  fullName: System.Data.DBConcurrencyException
- uid: System.Data.Common.DataAdapter.#ctor
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter()
  nameWithType: DataAdapter.DataAdapter()
  fullName: System.Data.Common.DataAdapter.DataAdapter()
- uid: System.Data.Common.DataAdapter.#ctor(System.Data.Common.DataAdapter)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter(DataAdapter)
  nameWithType: DataAdapter.DataAdapter(DataAdapter)
  fullName: System.Data.Common.DataAdapter.DataAdapter(DataAdapter)
- uid: System.Data.Common.DataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DataAdapter
  nameWithType: DataAdapter
  fullName: System.Data.Common.DataAdapter
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringFill
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
  fullName: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate
- uid: System.Data.Common.DataAdapter.CloneInternals
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CloneInternals()
  nameWithType: DataAdapter.CloneInternals()
  fullName: System.Data.Common.DataAdapter.CloneInternals()
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
  fullName: System.Data.Common.DataAdapter.ContinueUpdateOnError
- uid: System.Data.Common.DataAdapter.CreateTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CreateTableMappings()
  nameWithType: DataAdapter.CreateTableMappings()
  fullName: System.Data.Common.DataAdapter.CreateTableMappings()
- uid: System.Data.Common.DataTableMappingCollection
  parent: System.Data.Common
  isExternal: false
  name: DataTableMappingCollection
  nameWithType: DataTableMappingCollection
  fullName: System.Data.Common.DataTableMappingCollection
- uid: System.Data.Common.DataAdapter.Dispose(System.Boolean)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DataAdapter.Dispose(Boolean)
  fullName: System.Data.Common.DataAdapter.Dispose(Boolean)
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataSet)
  nameWithType: DataAdapter.Fill(DataSet)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.DataSet
  parent: System.Data
  isExternal: false
  name: DataSet
  nameWithType: DataSet
  fullName: System.Data.DataSet
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataTable,IDataReader)
  nameWithType: DataAdapter.Fill(DataTable,IDataReader)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable,IDataReader)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.IDataReader
  parent: System.Data
  isExternal: false
  name: IDataReader
  nameWithType: IDataReader
  fullName: System.Data.IDataReader
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataTable[],System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataTable[],IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataTable[],IDataReader,Int32,Int32)
- uid: System.Data.DataTable[]
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable[]
  spec.csharp:
  - uid: System.Data.DataTable
    name: DataTable
    nameWithType: DataTable
    fullName: DataTable[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataAdapter.Fill(System.Data.DataSet,System.String,System.Data.IDataReader,System.Int32,System.Int32)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill(DataSet,String,IDataReader,Int32,Int32)
  nameWithType: DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
  fullName: System.Data.Common.DataAdapter.Fill(DataSet,String,IDataReader,Int32,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DataAdapter.FillError
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillError
  nameWithType: DataAdapter.FillError
  fullName: System.Data.Common.DataAdapter.FillError
- uid: System.Data.FillErrorEventHandler
  parent: System.Data
  isExternal: false
  name: FillErrorEventHandler
  nameWithType: FillErrorEventHandler
  fullName: System.Data.FillErrorEventHandler
- uid: System.Data.Common.DataAdapter.FillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
  fullName: System.Data.Common.DataAdapter.FillLoadOption
- uid: System.Data.LoadOption
  parent: System.Data
  isExternal: false
  name: LoadOption
  nameWithType: LoadOption
  fullName: System.Data.LoadOption
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType)
- uid: System.Data.SchemaType
  parent: System.Data
  isExternal: false
  name: SchemaType
  nameWithType: SchemaType
  fullName: System.Data.SchemaType
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataTable,System.Data.SchemaType,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataTable,SchemaType,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataTable,SchemaType,IDataReader)
- uid: System.Data.Common.DataAdapter.FillSchema(System.Data.DataSet,System.Data.SchemaType,System.String,System.Data.IDataReader)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema(DataSet,SchemaType,String,IDataReader)
  nameWithType: DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
  fullName: System.Data.Common.DataAdapter.FillSchema(DataSet,SchemaType,String,IDataReader)
- uid: System.Data.Common.DataAdapter.GetFillParameters
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: GetFillParameters()
  nameWithType: DataAdapter.GetFillParameters()
  fullName: System.Data.Common.DataAdapter.GetFillParameters()
- uid: System.Data.IDataParameter[]
  parent: System.Data
  isExternal: false
  name: IDataParameter
  nameWithType: IDataParameter
  fullName: System.Data.IDataParameter[]
  spec.csharp:
  - uid: System.Data.IDataParameter
    name: IDataParameter
    nameWithType: IDataParameter
    fullName: IDataParameter[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Data.Common.DataAdapter.HasTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: HasTableMappings()
  nameWithType: DataAdapter.HasTableMappings()
  fullName: System.Data.Common.DataAdapter.HasTableMappings()
- uid: System.Data.Common.DataAdapter.MissingMappingAction
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
  fullName: System.Data.Common.DataAdapter.MissingMappingAction
- uid: System.Data.MissingMappingAction
  parent: System.Data
  isExternal: false
  name: MissingMappingAction
  nameWithType: MissingMappingAction
  fullName: System.Data.MissingMappingAction
- uid: System.Data.Common.DataAdapter.MissingSchemaAction
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
  fullName: System.Data.Common.DataAdapter.MissingSchemaAction
- uid: System.Data.MissingSchemaAction
  parent: System.Data
  isExternal: false
  name: MissingSchemaAction
  nameWithType: MissingSchemaAction
  fullName: System.Data.MissingSchemaAction
- uid: System.Data.Common.DataAdapter.OnFillError(System.Data.FillErrorEventArgs)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: OnFillError(FillErrorEventArgs)
  nameWithType: DataAdapter.OnFillError(FillErrorEventArgs)
  fullName: System.Data.Common.DataAdapter.OnFillError(FillErrorEventArgs)
- uid: System.Data.FillErrorEventArgs
  parent: System.Data
  isExternal: false
  name: FillErrorEventArgs
  nameWithType: FillErrorEventArgs
  fullName: System.Data.FillErrorEventArgs
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ResetFillLoadOption()
  nameWithType: DataAdapter.ResetFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ResetFillLoadOption()
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
  fullName: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeAcceptChangesDuringFill()
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill()
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeFillLoadOption()
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption()
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeTableMappings()
  nameWithType: DataAdapter.ShouldSerializeTableMappings()
  fullName: System.Data.Common.DataAdapter.ShouldSerializeTableMappings()
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.System.Data.IDataAdapter.TableMappings
- uid: System.Data.ITableMappingCollection
  parent: System.Data
  isExternal: false
  name: ITableMappingCollection
  nameWithType: ITableMappingCollection
  fullName: System.Data.ITableMappingCollection
- uid: System.Data.Common.DataAdapter.TableMappings
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
  fullName: System.Data.Common.DataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.Update(System.Data.DataSet)
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Update(DataSet)
  nameWithType: DataAdapter.Update(DataSet)
  fullName: System.Data.Common.DataAdapter.Update(DataSet)
- uid: System.Data.Common.DataAdapter.#ctor*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: DataAdapter
  nameWithType: DataAdapter.DataAdapter
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringFill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringFill
  nameWithType: DataAdapter.AcceptChangesDuringFill
- uid: System.Data.Common.DataAdapter.AcceptChangesDuringUpdate*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: AcceptChangesDuringUpdate
  nameWithType: DataAdapter.AcceptChangesDuringUpdate
- uid: System.Data.Common.DataAdapter.CloneInternals*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CloneInternals
  nameWithType: DataAdapter.CloneInternals
- uid: System.Data.Common.DataAdapter.ContinueUpdateOnError*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ContinueUpdateOnError
  nameWithType: DataAdapter.ContinueUpdateOnError
- uid: System.Data.Common.DataAdapter.CreateTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: CreateTableMappings
  nameWithType: DataAdapter.CreateTableMappings
- uid: System.Data.Common.DataAdapter.Dispose*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Dispose
  nameWithType: DataAdapter.Dispose
- uid: System.Data.Common.DataAdapter.Fill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Fill
  nameWithType: DataAdapter.Fill
- uid: System.Data.Common.DataAdapter.FillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillLoadOption
  nameWithType: DataAdapter.FillLoadOption
- uid: System.Data.Common.DataAdapter.FillSchema*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: FillSchema
  nameWithType: DataAdapter.FillSchema
- uid: System.Data.Common.DataAdapter.GetFillParameters*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: GetFillParameters
  nameWithType: DataAdapter.GetFillParameters
- uid: System.Data.Common.DataAdapter.HasTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: HasTableMappings
  nameWithType: DataAdapter.HasTableMappings
- uid: System.Data.Common.DataAdapter.MissingMappingAction*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingMappingAction
  nameWithType: DataAdapter.MissingMappingAction
- uid: System.Data.Common.DataAdapter.MissingSchemaAction*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: MissingSchemaAction
  nameWithType: DataAdapter.MissingSchemaAction
- uid: System.Data.Common.DataAdapter.OnFillError*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: OnFillError
  nameWithType: DataAdapter.OnFillError
- uid: System.Data.Common.DataAdapter.ResetFillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ResetFillLoadOption
  nameWithType: DataAdapter.ResetFillLoadOption
- uid: System.Data.Common.DataAdapter.ReturnProviderSpecificTypes*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ReturnProviderSpecificTypes
  nameWithType: DataAdapter.ReturnProviderSpecificTypes
- uid: System.Data.Common.DataAdapter.ShouldSerializeAcceptChangesDuringFill*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeAcceptChangesDuringFill
  nameWithType: DataAdapter.ShouldSerializeAcceptChangesDuringFill
- uid: System.Data.Common.DataAdapter.ShouldSerializeFillLoadOption*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeFillLoadOption
  nameWithType: DataAdapter.ShouldSerializeFillLoadOption
- uid: System.Data.Common.DataAdapter.ShouldSerializeTableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: ShouldSerializeTableMappings
  nameWithType: DataAdapter.ShouldSerializeTableMappings
- uid: System.Data.Common.DataAdapter.System#Data#IDataAdapter#TableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: System.Data.IDataAdapter.TableMappings
  nameWithType: DataAdapter.System.Data.IDataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.TableMappings*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: TableMappings
  nameWithType: DataAdapter.TableMappings
- uid: System.Data.Common.DataAdapter.Update*
  parent: System.Data.Common.DataAdapter
  isExternal: false
  name: Update
  nameWithType: DataAdapter.Update
