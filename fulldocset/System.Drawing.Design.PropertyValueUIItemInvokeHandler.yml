### YamlMime:ManagedReference
items:
- uid: System.Drawing.Design.PropertyValueUIItemInvokeHandler
  id: PropertyValueUIItemInvokeHandler
  langs:
  - csharp
  name: PropertyValueUIItemInvokeHandler
  nameWithType: PropertyValueUIItemInvokeHandler
  fullName: System.Drawing.Design.PropertyValueUIItemInvokeHandler
  type: Delegate
  summary: "Representa o método que manipulará o <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler*>eventos de um <xref href=&quot;System.Drawing.Design.PropertyValueUIItem&quot;> </xref>.</xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler*>"
  remarks: "Clicando duas vezes em um ícone na janela Propriedades irá gerar o <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A>evento o <xref:System.Drawing.Design.PropertyValueUIItem>o ícone associado.</xref:System.Drawing.Design.PropertyValueUIItem> </xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> O <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A>evento normalmente inicia uma interface do usuário (UI) para editar o valor da propriedade.</xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A> Adicionar um PropertyValueUIItemInvokeHandler para o <xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A>propriedade de um <xref:System.Drawing.Design.PropertyValueUIItem>para atribuir um manipulador de eventos para executar o comportamento adequado quando o ícone exibido ao lado do nome da propriedade é clicado duas vezes.</xref:System.Drawing.Design.PropertyValueUIItem> </xref:System.Drawing.Design.PropertyValueUIItem.InvokeHandler%2A>       Quando você cria um delegado PropertyValueUIItemInvokeHandler, identifica o método que manipulará o evento. Para associar o evento com o manipulador de eventos, adicione uma instância do representante ao evento. O manipulador de eventos é chamado sempre que o evento ocorre, a menos que você remova o delegado. Para obter mais informações sobre delegados de manipulador de eventos, consulte [eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example provides a <xref:System.Drawing.Design.PropertyValueUIItem> object for any properties of the component named `HorizontalMargin` or `VerticalMargin`. The <xref:System.Drawing.Design.PropertyValueUIItem> for these properties provides an image, a ToolTip, and an event handler that displays a message box when the image for the property is clicked. This code example is part of a larger example provided for the <xref:System.Drawing.Design.IPropertyValueUIService> interface.  \n  \n [!code-cpp[IPropertyValueUIServiceExample#2](~/add/codesnippet/cpp/t-system.drawing.design._12_1.cpp)]\n [!code-cs[IPropertyValueUIServiceExample#2](~/add/codesnippet/csharp/t-system.drawing.design._12_1.cs)]\n [!code-vb[IPropertyValueUIServiceExample#2](~/add/codesnippet/visualbasic/t-system.drawing.design._12_1.vb)]"
  syntax:
    content: public delegate void PropertyValueUIItemInvokeHandler(ITypeDescriptorContext context, PropertyDescriptor descriptor, PropertyValueUIItem invokedItem);
  inheritance:
  - System.Delegate
  platform:
  - net462
references:
- uid: System.Delegate
  isExternal: false
  name: System.Delegate
