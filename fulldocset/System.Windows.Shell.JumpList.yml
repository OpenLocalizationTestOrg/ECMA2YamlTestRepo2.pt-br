### YamlMime:ManagedReference
items:
- uid: System.Windows.Shell.JumpList
  id: JumpList
  children:
  - System.Windows.Shell.JumpList.#ctor
  - System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)
  - System.Windows.Shell.JumpList.AddToRecentCategory(System.String)
  - System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)
  - System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)
  - System.Windows.Shell.JumpList.Apply
  - System.Windows.Shell.JumpList.BeginInit
  - System.Windows.Shell.JumpList.EndInit
  - System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)
  - System.Windows.Shell.JumpList.JumpItems
  - System.Windows.Shell.JumpList.JumpItemsRejected
  - System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  - System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  - System.Windows.Shell.JumpList.ShowFrequentCategory
  - System.Windows.Shell.JumpList.ShowRecentCategory
  langs:
  - csharp
  name: JumpList
  nameWithType: JumpList
  fullName: System.Windows.Shell.JumpList
  type: Class
  summary: "Representa uma lista de itens e tarefas exibidas como um menu em um [!INCLUDE[win7](~/add/includes/win7-md.md)] botão da barra de tarefas."
  remarks: "O [!INCLUDE[win7](~/add/includes/win7-md.md)] na barra de tarefas oferece funcionalidade aprimorada para iniciar programas diretamente a partir do botão de barra de tarefas usando listas de saltos. As listas de saltos também são usadas no [!INCLUDE[win7](~/add/includes/win7-md.md)] menu Iniciar. Você acessa uma lista de atalhos, clicando em um botão de barra de tarefas ou clicando na seta ao lado de um programa no menu Iniciar. Para obter mais informações sobre listas de saltos, consulte o [na barra de tarefas](http://go.microsoft.com/fwlink/?LinkId=178478) seção as diretrizes de interação de experiência de usuário do Windows.       A classe JumpList fornece um wrapper gerenciado para a funcionalidade de lista de atalhos do [!INCLUDE[win7](~/add/includes/win7-md.md)] na barra de tarefas e gerencia os dados passados para o [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] shell. A funcionalidade exposta pela classe JumpList não está disponível em versões do [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] anteriores [!INCLUDE[win7](~/add/includes/win7-md.md)]. Aplicativos que usam a classe JumpList serão executado em outras versões do [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)], mas a lista de atalhos não estará disponível. Para obter mais informações sobre o shell do Windows e APIs nativas de lista de salto, consulte [extensões da barra de tarefas](http://go.microsoft.com/fwlink/?LinkId=178479).       A ilustração a seguir mostra o salto lista do Windows Media Player, com itens no **tarefas** e **frequentes** categorias.       ![Lista de atalhos do Windows Media Player](~/add/media/wpfshell-jumplist.png &quot;lista de atalhos do Windows Media Player&quot;) lista de atalhos do Windows Media Player # # configurar uma lista de salto listas de saltos pode conter dois tipos de itens, um <xref:System.Windows.Shell.JumpTask>e <xref:System.Windows.Shell.JumpPath>.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask> Um <xref:System.Windows.Shell.JumpTask>é um link para um programa e um <xref:System.Windows.Shell.JumpPath>é um link para um arquivo.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask> Você pode separar visualmente os itens em uma lista de atalhos, criando um <xref:System.Windows.Shell.JumpTask>que não tem um <xref:System.Windows.Shell.JumpTask.Title%2A>e <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>especificado.</xref:System.Windows.Shell.JumpItem.CustomCategory%2A> </xref:System.Windows.Shell.JumpTask.Title%2A> </xref:System.Windows.Shell.JumpTask> Este vazio <xref:System.Windows.Shell.JumpTask>será exibido como uma linha horizontal na lista de saltos.</xref:System.Windows.Shell.JumpTask>      > [!NOTE] > Se o tipo do arquivo especificado em um <xref:System.Windows.Shell.JumpPath>não está registrado com seu aplicativo, o arquivo não será exibido na lista de saltos.</xref:System.Windows.Shell.JumpPath> Por exemplo, se você adicionar um <xref:System.Windows.Shell.JumpPath>que aponta para um arquivo. txt, seu aplicativo deve ser registrado para manipular arquivos. txt.</xref:System.Windows.Shell.JumpPath> Para obter mais informações, consulte [Introdução às associações de arquivo](http://go.microsoft.com/fwlink/?LinkId=178480).       Itens de salto são colocados em categorias em JumpList. Por padrão, um <xref:System.Windows.Shell.JumpItem>é exibido no **tarefas** categoria.</xref:System.Windows.Shell.JumpItem> Como alternativa, você pode especificar uma <xref:System.Windows.Shell.JumpItem.CustomCategory%2A>para <xref:System.Windows.Shell.JumpItem>.</xref:System.Windows.Shell.JumpItem> </xref:System.Windows.Shell.JumpItem.CustomCategory%2A>       Você pode especificar se o padrão **recentes** e **frequentes** as categorias são exibidas no JumpList definindo a <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>e <xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A>Propriedades.</xref:System.Windows.Shell.JumpList.ShowFrequentCategory%2A> </xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A> O conteúdo dessas categorias é gerenciado pelo [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] shell. Porque essas categorias podem conter muitos dos mesmos dados, você normalmente exibe um ou outro no seu JumpList, mas não ambos. [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)]gerencia automaticamente os itens recentes, se eles são abertos por meio de uma caixa de diálogo comuns ou usados para abrir um aplicativo por meio de associação de tipo de arquivo. Quando um item é acessado por meio da lista de atalhos, você pode notificar o [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] shell para adicionar o item a **recentes** categoria chamando o <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>método.</xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>      ## Aplicação de uma lista de atalhos para o Shell do Windows você não pode acessar a lista de atalhos do shell diretamente ou ler o conteúdo para a classe JumpList. Em vez disso, a classe JumpList fornece uma representação de uma lista de atalhos que você pode trabalhar com e, em seguida, aplicar ao [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] shell. Normalmente, você cria um JumpList e defini-la uma vez quando o aplicativo é executado pela primeira vez. No entanto, você pode modificar ou substituir a JumpList em tempo de execução.       Quando você tiver definido as propriedades de JumpList, você deve aplicar JumpList para o shell do Windows antes de seu conteúdo é exibido na lista de atalhos da barra de tarefas. Isso é feito automaticamente quando o JumpList é anexado primeiro a um aplicativo em XAML ou em uma chamada para o <xref:System.Windows.Shell.JumpList.SetJumpList%2A>método.</xref:System.Windows.Shell.JumpList.SetJumpList%2A> Se você modificar o conteúdo de JumpList em tempo de execução, você deve chamar o <xref:System.Windows.Shell.JumpList.Apply%2A>método para aplicar o conteúdo atual para o shell do Windows.</xref:System.Windows.Shell.JumpList.Apply%2A>      ## Definindo uma lista de atalhos no XAML A JumpList não é automaticamente conectado a um <xref:System.Windows.Application>objeto.</xref:System.Windows.Application> Anexar um JumpList para um <xref:System.Windows.Application>objeto em XAML usando a sintaxe da propriedade anexada.</xref:System.Windows.Application> A classe implementa JumpList o <xref:System.ComponentModel.ISupportInitialize>interface para oferecer suporte a declaração de XAML de um JumpList.</xref:System.ComponentModel.ISupportInitialize> Se a JumpList é declarada em XAML e anexada ao atual <xref:System.Windows.Application>, é aplicada automaticamente para o [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] shell quando o JumpList é inicializado.</xref:System.Windows.Application>      ## Configuração e a modificação de uma lista de atalhos no código você anexar um JumpList para um <xref:System.Windows.Application>objeto no código chamando estático <xref:System.Windows.Shell.JumpList.SetJumpList%2A>método.</xref:System.Windows.Shell.JumpList.SetJumpList%2A> </xref:System.Windows.Application> Isso também se aplica a JumpList para o [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] shell.       Para modificar um JumpList em tempo de execução, você chama o <xref:System.Windows.Shell.JumpList.GetJumpList%2A>método para obter o JumpList que está atualmente anexado ao <xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList.GetJumpList%2A> Depois que você modificou as propriedades de JumpList, você deve chamar o <xref:System.Windows.Shell.JumpList.Apply%2A>método para aplicar as alterações para o shell do Windows.</xref:System.Windows.Shell.JumpList.Apply%2A>      > [!NOTE] > Você geralmente cria um JumpList que está associada a <xref:System.Windows.Application>e aplicadas ao [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] shell.</xref:System.Windows.Application> No entanto, você pode criar vários objetos JumpList. JumpList apenas uma por vez pode ser aplicada para o [!INCLUDE[TLA#tla_mswin](~/add/includes/tlasharptla-mswin-md.md)] um JumpList shell e somente por vez pode ser associado um <xref:System.Windows.Application>.</xref:System.Windows.Application> O .NET Framework não exige que eles ser o mesmo JumpList.      > [!NOTE] > Essa classe contém uma demanda de link no nível de classe que se aplica a todos os membros. Um <xref:System.Security.SecurityException>é gerada quando o chamador imediato não tem permissão de confiança total.</xref:System.Security.SecurityException> Para obter mais informações sobre as exigências de segurança, consulte [demandas de Link](~/add/includes/ajax-current-ext-md.md) e [demandas de herança](http://msdn.microsoft.com/en-us/28b9adbb-8f08-4f10-b856-dbf59eb932d9)."
  example:
  - "The following example shows an application with a Jump List. The application has three buttons that enable you to add a task to the current Jump List, clear the contents of the Jump List, and apply a new Jump List to the application.  \n  \n The following example shows how to declare a JumpList in markup. The JumpList contains two <xref:System.Windows.Shell.JumpTask> links and one <xref:System.Windows.Shell.JumpPath>. Applying the <xref:System.Windows.Shell.JumpPath> to the shell will fail if the application is not registered to handle the .txt file name extension.  \n  \n [!code-xml[Shell_JumpListSample#000](~/add/codesnippet/xaml/jumplistsample/app.xaml#000)]  \n  \n The following example shows the code-behind page for `App.xaml`. This code handles the <xref:System.Windows.Shell.JumpList.JumpItemsRejected> and <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> events.  \n  \n [!code-cs[Shell_JumpListSample#100](~/add/codesnippet/csharp/jumplistsample/app.xaml.cs#100)]  \n  \n The following example shows the markup used to create the application user interface.  \n  \n [!code-xml[Shell_JumpListSample#300](~/add/codesnippet/xaml/jumplistsample/mainwindow.xaml#300)]  \n  \n The following example shows the code-behind page for `MainWindow.xaml`. This code demonstrates how to modify, clear, and create a JumpList in procedural code. For the new Jump List, the static <xref:System.Windows.Shell.JumpList.SetJumpList%2A> method is called to associate the JumpList with the current application and apply the JumpList to the Windows shell.  \n  \n [!code-cs[Shell_JumpListSample#200](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#200)]"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      [System.Windows.Markup.ContentProperty("JumpItems")]

      public sealed class JumpList : System.ComponentModel.ISupportInitialize
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.ISupportInitialize
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.#ctor
  id: '#ctor'
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpList()
  nameWithType: JumpList.JumpList()
  fullName: System.Windows.Shell.JumpList.JumpList()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> classe."
  syntax:
    content: public JumpList ();
    parameters: []
  overload: System.Windows.Shell.JumpList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)'
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  nameWithType: JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  fullName: System.Windows.Shell.JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> classe com os parâmetros especificados."
  remarks: "O **recentes** e **frequentes** categorias geralmente contêm muitos dos mesmos itens de salto. Como resultado, aplicativos normalmente exibem um o **recentes** ou **frequentes** categoria na lista de atalhos, mas não ambos."
  syntax:
    content: public JumpList (System.Collections.Generic.IEnumerable<System.Windows.Shell.JumpItem> items, bool showFrequent, bool showRecent);
    parameters:
    - id: items
      type: System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem}
      description: "A coleção de <xref href=&quot;System.Windows.Shell.JumpItem&quot;> </xref> objetos que são exibidos na lista de saltos."
    - id: showFrequent
      type: System.Boolean
      description: "Um valor que indica se os itens usados com frequência são exibidas na lista de saltos."
    - id: showRecent
      type: System.Boolean
      description: "Um valor que indica se os itens usados recentemente são exibidas na lista de saltos."
  overload: System.Windows.Shell.JumpList.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.String)
  id: AddToRecentCategory(System.String)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: AddToRecentCategory(String)
  nameWithType: JumpList.AddToRecentCategory(String)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(String)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Adiciona o caminho do item especificado para o **recentes** categoria da lista de saltos."
  remarks: "O conteúdo do **recentes** categoria são gerenciados pelo shell do Windows. Para exibir itens usados recentemente na lista de saltos, defina o <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>propriedade `true`.</xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>       Você pode chamar o método AddToRecentCategory para solicitar que o shell do Windows adicione um caminho de item para o **recentes** lista de itens. Se seu aplicativo não está registrado para manipular o tipo de arquivo do item, ele não aparecerá no **recentes** lista e chamadas AddToRecentCategory falhará silenciosamente."
  syntax:
    content: public static void AddToRecentCategory (string itemPath);
    parameters:
    - id: itemPath
      type: System.String
      description: "O caminho para adicionar a lista de atalhos."
  overload: System.Windows.Shell.JumpList.AddToRecentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)
  id: AddToRecentCategory(System.Windows.Shell.JumpPath)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: AddToRecentCategory(JumpPath)
  nameWithType: JumpList.AddToRecentCategory(JumpPath)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpPath)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Adiciona o caminho de salto especificado para o **recentes** categoria da lista de saltos."
  remarks: "O conteúdo do **recentes** categoria são gerenciados pelo shell do Windows. Para exibir itens usados recentemente na lista de saltos, defina o <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>propriedade `true`.</xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>       Você pode chamar o método AddToRecentCategory para solicitar que o shell do Windows adicionar o caminho de salto especificado para o **recentes** lista de itens. Se seu aplicativo não está registrado para manipular o tipo de arquivo do item, ele não aparecerá no **recentes** lista e chamadas AddToRecentCategory falhará silenciosamente."
  syntax:
    content: public static void AddToRecentCategory (System.Windows.Shell.JumpPath jumpPath);
    parameters:
    - id: jumpPath
      type: System.Windows.Shell.JumpPath
      description: "O <xref href=&quot;System.Windows.Shell.JumpPath&quot;> </xref> para adicionar a lista de atalhos."
  overload: System.Windows.Shell.JumpList.AddToRecentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)
  id: AddToRecentCategory(System.Windows.Shell.JumpTask)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: AddToRecentCategory(JumpTask)
  nameWithType: JumpList.AddToRecentCategory(JumpTask)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpTask)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Adiciona a tarefa de salto especificado para o **recentes** categoria da lista de saltos."
  remarks: "O conteúdo do **recentes** categoria são gerenciados pelo shell do Windows. Para exibir itens usados recentemente na lista de saltos, defina o <xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>propriedade `true`.</xref:System.Windows.Shell.JumpList.ShowRecentCategory%2A>       Você pode chamar o método AddToRecentCategory para solicitar que o shell do Windows adicionar a tarefa de salto especificado para o **recentes** lista de itens."
  syntax:
    content: public static void AddToRecentCategory (System.Windows.Shell.JumpTask jumpTask);
    parameters:
    - id: jumpTask
      type: System.Windows.Shell.JumpTask
      description: "O <xref href=&quot;System.Windows.Shell.JumpTask&quot;> </xref> para adicionar a lista de atalhos."
  overload: System.Windows.Shell.JumpList.AddToRecentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.Apply
  id: Apply
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: Apply()
  nameWithType: JumpList.Apply()
  fullName: System.Windows.Shell.JumpList.Apply()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Envia o <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> para o shell do Windows em seu estado atual."
  remarks: "O método Apply envia o conteúdo do <xref:System.Windows.Shell.JumpList>para o shell do Windows em seu estado atual.</xref:System.Windows.Shell.JumpList> Depois que esta chamada é concluída, o <xref:System.Windows.Shell.JumpList.JumpItems%2A>propriedade é modificada para conter somente os itens que o shell do Windows é adicionado com êxito à sua lista de atalhos da barra de tarefas.</xref:System.Windows.Shell.JumpList.JumpItems%2A> Você pode acessar as listas de itens removidos por meio de manipuladores de eventos para o <xref:System.Windows.Shell.JumpList.JumpItemsRejected>e <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>eventos.</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> </xref:System.Windows.Shell.JumpList.JumpItemsRejected>"
  example:
  - "The following example shows how to get the current <xref:System.Windows.Shell.JumpList> and clear the contents of the <xref:System.Windows.Shell.JumpList.JumpItems%2A> collection. The Apply method is then called to apply the <xref:System.Windows.Shell.JumpList> changes to the Windows shell. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#230](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#230)]"
  syntax:
    content: public void Apply ();
    parameters: []
  overload: System.Windows.Shell.JumpList.Apply*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> não está completamente inicializado."
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.BeginInit
  id: BeginInit
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: BeginInit()
  nameWithType: JumpList.BeginInit()
  fullName: System.Windows.Shell.JumpList.BeginInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Indica o início do <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> inicialização."
  remarks: "A <xref:System.Windows.Shell.JumpList>classe implementa a <xref:System.ComponentModel.ISupportInitialize>interface para oferecer suporte a declaração de XAML de <xref:System.Windows.Shell.JumpList>.</xref:System.Windows.Shell.JumpList> </xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Shell.JumpList> O método BeginInit só é chamado quando o <xref:System.Windows.Shell.JumpList>é declarado em XAML e anexado a um <xref:System.Windows.Application>usando a sintaxe da propriedade anexada.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> Não chame este método do seu código."
  syntax:
    content: public void BeginInit ();
    parameters: []
  overload: System.Windows.Shell.JumpList.BeginInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Essa chamada para BeginInit está aninhada em uma chamada anterior para BeginInit."
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.EndInit
  id: EndInit
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: EndInit()
  nameWithType: JumpList.EndInit()
  fullName: System.Windows.Shell.JumpList.EndInit()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Sinaliza o término do <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> inicialização."
  remarks: "A <xref:System.Windows.Shell.JumpList>classe implementa a <xref:System.ComponentModel.ISupportInitialize>interface para oferecer suporte a declaração de XAML de <xref:System.Windows.Shell.JumpList>.</xref:System.Windows.Shell.JumpList> </xref:System.ComponentModel.ISupportInitialize> </xref:System.Windows.Shell.JumpList> O método EndInit só é chamado quando o <xref:System.Windows.Shell.JumpList>é declarado em XAML e anexado a um <xref:System.Windows.Application>usando a sintaxe da propriedade anexada.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> Não chame este método do seu código.       O método EndInit tem o mesmo efeito que o <xref:System.Windows.Shell.JumpList.Apply%2A>método.</xref:System.Windows.Shell.JumpList.Apply%2A> EndInit envia o conteúdo do <xref:System.Windows.Shell.JumpList>para o shell do Windows em seu estado atual.</xref:System.Windows.Shell.JumpList> Depois que esta chamada é concluída, o <xref:System.Windows.Shell.JumpList.JumpItems%2A>propriedade é modificada para conter somente os itens que o shell do Windows foi adicionado com êxito a lista de saltos.</xref:System.Windows.Shell.JumpList.JumpItems%2A> Você pode acessar as listas de itens removidos por meio de manipuladores de eventos para o <xref:System.Windows.Shell.JumpList.JumpItemsRejected>e <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>eventos.</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> </xref:System.Windows.Shell.JumpList.JumpItemsRejected>"
  syntax:
    content: public void EndInit ();
    parameters: []
  overload: System.Windows.Shell.JumpList.EndInit*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Essa chamada para EndInit não está emparelhada com uma chamada para <xref:System.Windows.Shell.JumpList.BeginInit*>.</xref:System.Windows.Shell.JumpList.BeginInit*>"
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)
  id: GetJumpList(System.Windows.Application)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: GetJumpList(Application)
  nameWithType: JumpList.GetJumpList(Application)
  fullName: System.Windows.Shell.JumpList.GetJumpList(Application)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Retorna o <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> objeto associado a um aplicativo."
  remarks: "Você pode chamar o método GetJumpList para obter <xref:System.Windows.Shell.JumpList>atualmente associado a um <xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> O .NET Framework não exige que esse seja o <xref:System.Windows.Shell.JumpList>que está aplicada atualmente no shell do Windows.</xref:System.Windows.Shell.JumpList>"
  example:
  - "The following example shows how to get the <xref:System.Windows.Shell.JumpList> associated with the current application. A <xref:System.Windows.Shell.JumpTask> is added to the <xref:System.Windows.Shell.JumpList.JumpItems%2A> collection and added to the **Recent** category. The <xref:System.Windows.Shell.JumpList.Apply%2A> method is called to apply the updated <xref:System.Windows.Shell.JumpList> to the Windows shell. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#240](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#240)]"
  syntax:
    content: public static System.Windows.Shell.JumpList GetJumpList (System.Windows.Application application);
    parameters:
    - id: application
      type: System.Windows.Application
      description: "O aplicativo associado a <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>."
    return:
      type: System.Windows.Shell.JumpList
      description: "O <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> objeto associado com o aplicativo especificado."
  overload: System.Windows.Shell.JumpList.GetJumpList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.JumpItems
  id: JumpItems
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpItems
  nameWithType: JumpList.JumpItems
  fullName: System.Windows.Shell.JumpList.JumpItems
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Obtém a coleção de <xref href=&quot;System.Windows.Shell.JumpItem&quot;> </xref> objetos que são exibidos na lista de saltos."
  remarks: "Listas de salto podem conter dois tipos de itens, um <xref:System.Windows.Shell.JumpTask>e <xref:System.Windows.Shell.JumpPath>.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask> Um <xref:System.Windows.Shell.JumpTask>é um link para um programa e um <xref:System.Windows.Shell.JumpPath>é um link para um arquivo.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask>       Quando um <xref:System.Windows.Shell.JumpList>é criado, o JumpItems coleção está vazia.</xref:System.Windows.Shell.JumpList> Você pode adicionar qualquer <xref:System.Windows.Shell.JumpTask>ou <xref:System.Windows.Shell.JumpPath>objetos na coleção.</xref:System.Windows.Shell.JumpPath> </xref:System.Windows.Shell.JumpTask> A coleção conterá somente os itens que foram adicionados pelo seu programa. Após o <xref:System.Windows.Shell.JumpList>foi passado para o shell do Windows por uma chamada bem-sucedida para o <xref:System.Windows.Shell.JumpList.EndInit%2A>ou <xref:System.Windows.Shell.JumpList.Apply%2A>métodos, a coleção de JumpItems conterá somente os itens que foram adicionados com êxito a lista de atalhos da barra de tarefas.</xref:System.Windows.Shell.JumpList.Apply%2A> </xref:System.Windows.Shell.JumpList.EndInit%2A> </xref:System.Windows.Shell.JumpList> Itens que não foram adicionados com êxito são removidos da coleção JumpItems. Você pode acessar as listas de itens removidos por meio de manipuladores de eventos para o <xref:System.Windows.Shell.JumpList.JumpItemsRejected>e <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>eventos.</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser> </xref:System.Windows.Shell.JumpList.JumpItemsRejected>"
  example:
  - "The following example shows how to get the current <xref:System.Windows.Shell.JumpList> and clear the contents of the JumpItems collection. The <xref:System.Windows.Shell.JumpList.Apply%2A> method is then called to apply the <xref:System.Windows.Shell.JumpList> changes to the Windows shell. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#230](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#230)]"
  syntax:
    content: public System.Collections.Generic.List<System.Windows.Shell.JumpItem> JumpItems { get; }
    return:
      type: System.Collections.Generic.List{System.Windows.Shell.JumpItem}
      description: "A coleção de <xref href=&quot;System.Windows.Shell.JumpItem&quot;> </xref> objetos exibidos na lista de saltos. O padrão é uma coleção vazia."
  overload: System.Windows.Shell.JumpList.JumpItems*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.JumpItemsRejected
  id: JumpItemsRejected
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpItemsRejected
  nameWithType: JumpList.JumpItemsRejected
  fullName: System.Windows.Shell.JumpList.JumpItemsRejected
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Ocorre quando itens de salto não são adicionados com êxito a lista de atalhos pelo shell do Windows."
  remarks: "Depois do conteúdo do <xref:System.Windows.Shell.JumpList>são aplicadas para o shell do Windows, o <xref:System.Windows.Shell.JumpList.JumpItems%2A>propriedade é modificada para conter somente os itens que o shell do Windows foi adicionado com êxito a lista de saltos.</xref:System.Windows.Shell.JumpList.JumpItems%2A> </xref:System.Windows.Shell.JumpList> Você pode acessar as listas de itens removidos por meio de manipuladores de eventos para o JumpItemsRejected e <xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>eventos.</xref:System.Windows.Shell.JumpList.JumpItemsRemovedByUser>"
  example:
  - "The following example shows how to handle the JumpItemsRejected event to display the rejected items in a message box. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#110](~/add/codesnippet/csharp/jumplistsample/app.xaml.cs#110)]"
  syntax:
    content: public event EventHandler<System.Windows.Shell.JumpItemsRejectedEventArgs> JumpItemsRejected;
    return:
      type: System.EventHandler{System.Windows.Shell.JumpItemsRejectedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  id: JumpItemsRemovedByUser
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: JumpItemsRemovedByUser
  nameWithType: JumpList.JumpItemsRemovedByUser
  fullName: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  type: Event
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Ocorre quando itens de salto anteriormente na lista de saltos são removidos da lista pelo usuário."
  remarks: "Depois do conteúdo do <xref:System.Windows.Shell.JumpList>são aplicadas para o shell do Windows, o <xref:System.Windows.Shell.JumpList.JumpItems%2A>propriedade é modificada para conter somente os itens que o shell do Windows foi adicionado com êxito a lista de saltos.</xref:System.Windows.Shell.JumpList.JumpItems%2A> </xref:System.Windows.Shell.JumpList> Você pode acessar as listas de itens removidos por meio de manipuladores de eventos para o <xref:System.Windows.Shell.JumpList.JumpItemsRejected>e eventos de JumpItemsRemovedByUser.</xref:System.Windows.Shell.JumpList.JumpItemsRejected>"
  example:
  - "The following example shows how to handle the JumpItemsRemovedByUser event to display the rejected items in a message box. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#120](~/add/codesnippet/csharp/jumplistsample/app.xaml.cs#120)]"
  syntax:
    content: public event EventHandler<System.Windows.Shell.JumpItemsRemovedEventArgs> JumpItemsRemovedByUser;
    return:
      type: System.EventHandler{System.Windows.Shell.JumpItemsRemovedEventArgs}
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  id: SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: SetJumpList(Application,JumpList)
  nameWithType: JumpList.SetJumpList(Application,JumpList)
  fullName: System.Windows.Shell.JumpList.SetJumpList(Application,JumpList)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Conjuntos de <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> objeto associado a um aplicativo."
  remarks: "Você pode criar várias <xref:System.Windows.Shell.JumpList>objetos.</xref:System.Windows.Shell.JumpList> No entanto, apenas uma <xref:System.Windows.Shell.JumpList>por vez pode ser associado um <xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList> Chame o método SetJumpList para definir <xref:System.Windows.Shell.JumpList>atualmente associado a um <xref:System.Windows.Application>.</xref:System.Windows.Application> </xref:System.Windows.Shell.JumpList>"
  example:
  - "The following example shows how to create a <xref:System.Windows.Shell.JumpList> in code. The static SetJumpList method is called to associate the <xref:System.Windows.Shell.JumpList> with the current application. The <xref:System.Windows.Shell.JumpList> is automatically applied to the Windows shell when it is set. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-cs[Shell_JumpListSample#210](~/add/codesnippet/csharp/jumplistsample/mainwindow.xaml.cs#210)]"
  syntax:
    content: public static void SetJumpList (System.Windows.Application application, System.Windows.Shell.JumpList value);
    parameters:
    - id: application
      type: System.Windows.Application
      description: "O aplicativo associado a <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref>."
    - id: value
      type: System.Windows.Shell.JumpList
      description: "O <xref href=&quot;System.Windows.Shell.JumpList&quot;> </xref> para associar o aplicativo."
  overload: System.Windows.Shell.JumpList.SetJumpList*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.ShowFrequentCategory
  id: ShowFrequentCategory
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: ShowFrequentCategory
  nameWithType: JumpList.ShowFrequentCategory
  fullName: System.Windows.Shell.JumpList.ShowFrequentCategory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Obtém ou define um valor que indica se os itens usados com frequência são exibidas na lista de saltos."
  remarks: "O conteúdo do **frequentes** categoria são gerenciados pelo shell do Windows. Para exibir itens usados com frequência na lista de saltos, defina a propriedade ShowFrequentCategory `true`.       O **recentes** e **frequentes** categorias geralmente contêm muitos dos mesmos itens de salto. Como resultado, aplicativos normalmente exibem um o **recentes** ou **frequentes** categoria na lista de atalhos, mas não ambos."
  example:
  - "The following example shows a <xref:System.Windows.Shell.JumpList> configured to show the **Frequent** category. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-xml[Shell_JumpListSample#001](~/add/codesnippet/xaml/jumplistsample/app.xaml#001)]"
  syntax:
    content: public bool ShowFrequentCategory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os itens usados com frequência são exibidos na lista de saltos; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpList.ShowFrequentCategory*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Shell.JumpList.ShowRecentCategory
  id: ShowRecentCategory
  parent: System.Windows.Shell.JumpList
  langs:
  - csharp
  name: ShowRecentCategory
  nameWithType: JumpList.ShowRecentCategory
  fullName: System.Windows.Shell.JumpList.ShowRecentCategory
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows.Shell
  summary: "Obtém ou define um valor que indica se os itens usados recentemente são exibidas na lista de saltos."
  remarks: "O conteúdo do **recentes** categoria são gerenciados pelo shell do Windows. Para exibir itens usados com frequência na lista de saltos, defina a propriedade ShowRecentCategory `true`.       O **recentes** e **frequentes** categorias geralmente contêm muitos dos mesmos itens de salto. Como resultado, aplicativos normalmente exibem um o **recentes** ou **frequentes** categoria na lista de atalhos, mas não ambos.       Você pode chamar o <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>método para solicitar que o shell do Windows adicionar itens para o **recentes** lista de itens.</xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A> Se seu aplicativo não está registrado para manipular o tipo de nome de arquivo do item, ele não aparecerá no **recentes** lista e chamadas <xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>falhará em modo silencioso.</xref:System.Windows.Shell.JumpList.AddToRecentCategory%2A>"
  example:
  - "The following example shows a <xref:System.Windows.Shell.JumpList> configured to show the **Recent** category. This example is part of a larger example available in the <xref:System.Windows.Shell.JumpList> class overview.  \n  \n [!code-xml[Shell_JumpListSample#001](~/add/codesnippet/xaml/jumplistsample/app.xaml#001)]"
  syntax:
    content: public bool ShowRecentCategory { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os itens usados recentemente são exibidas na lista de saltos; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Shell.JumpList.ShowRecentCategory*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Windows.Shell.JumpList.#ctor
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpList()
  nameWithType: JumpList.JumpList()
  fullName: System.Windows.Shell.JumpList.JumpList()
- uid: System.Windows.Shell.JumpList.#ctor(System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem},System.Boolean,System.Boolean)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  nameWithType: JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
  fullName: System.Windows.Shell.JumpList.JumpList(IEnumerable<JumpItem>,Boolean,Boolean)
- uid: System.Collections.Generic.IEnumerable{System.Windows.Shell.JumpItem}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<JumpItem>
  nameWithType: IEnumerable<JumpItem>
  fullName: System.Collections.Generic.IEnumerable<System.Windows.Shell.JumpItem>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Windows.Shell.JumpItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItem
    name: JumpItem
    nameWithType: JumpItem
    fullName: JumpItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.String)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory(String)
  nameWithType: JumpList.AddToRecentCategory(String)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpPath)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory(JumpPath)
  nameWithType: JumpList.AddToRecentCategory(JumpPath)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpPath)
- uid: System.Windows.Shell.JumpPath
  parent: System.Windows.Shell
  isExternal: false
  name: JumpPath
  nameWithType: JumpPath
  fullName: System.Windows.Shell.JumpPath
- uid: System.Windows.Shell.JumpList.AddToRecentCategory(System.Windows.Shell.JumpTask)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory(JumpTask)
  nameWithType: JumpList.AddToRecentCategory(JumpTask)
  fullName: System.Windows.Shell.JumpList.AddToRecentCategory(JumpTask)
- uid: System.Windows.Shell.JumpTask
  parent: System.Windows.Shell
  isExternal: false
  name: JumpTask
  nameWithType: JumpTask
  fullName: System.Windows.Shell.JumpTask
- uid: System.Windows.Shell.JumpList.Apply
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: Apply()
  nameWithType: JumpList.Apply()
  fullName: System.Windows.Shell.JumpList.Apply()
- uid: System.Windows.Shell.JumpList.BeginInit
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: BeginInit()
  nameWithType: JumpList.BeginInit()
  fullName: System.Windows.Shell.JumpList.BeginInit()
- uid: System.Windows.Shell.JumpList.EndInit
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: EndInit()
  nameWithType: JumpList.EndInit()
  fullName: System.Windows.Shell.JumpList.EndInit()
- uid: System.Windows.Shell.JumpList.GetJumpList(System.Windows.Application)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: GetJumpList(Application)
  nameWithType: JumpList.GetJumpList(Application)
  fullName: System.Windows.Shell.JumpList.GetJumpList(Application)
- uid: System.Windows.Shell.JumpList
  parent: System.Windows.Shell
  isExternal: false
  name: JumpList
  nameWithType: JumpList
  fullName: System.Windows.Shell.JumpList
- uid: System.Windows.Application
  parent: System.Windows
  isExternal: false
  name: Application
  nameWithType: Application
  fullName: System.Windows.Application
- uid: System.Windows.Shell.JumpList.JumpItems
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItems
  nameWithType: JumpList.JumpItems
  fullName: System.Windows.Shell.JumpList.JumpItems
- uid: System.Collections.Generic.List{System.Windows.Shell.JumpItem}
  parent: System.Collections.Generic
  isExternal: true
  name: List<JumpItem>
  nameWithType: List<JumpItem>
  fullName: System.Collections.Generic.List<System.Windows.Shell.JumpItem>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Windows.Shell.JumpItem>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItem
    name: JumpItem
    nameWithType: JumpItem
    fullName: JumpItem
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Shell.JumpList.JumpItemsRejected
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItemsRejected
  nameWithType: JumpList.JumpItemsRejected
  fullName: System.Windows.Shell.JumpList.JumpItemsRejected
- uid: System.EventHandler{System.Windows.Shell.JumpItemsRejectedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<JumpItemsRejectedEventArgs>
  nameWithType: EventHandler<JumpItemsRejectedEventArgs>
  fullName: System.EventHandler<System.Windows.Shell.JumpItemsRejectedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Shell.JumpItemsRejectedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItemsRejectedEventArgs
    name: JumpItemsRejectedEventArgs
    nameWithType: JumpItemsRejectedEventArgs
    fullName: JumpItemsRejectedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItemsRemovedByUser
  nameWithType: JumpList.JumpItemsRemovedByUser
  fullName: System.Windows.Shell.JumpList.JumpItemsRemovedByUser
- uid: System.EventHandler{System.Windows.Shell.JumpItemsRemovedEventArgs}
  parent: System
  isExternal: true
  name: EventHandler<JumpItemsRemovedEventArgs>
  nameWithType: EventHandler<JumpItemsRemovedEventArgs>
  fullName: System.EventHandler<System.Windows.Shell.JumpItemsRemovedEventArgs>
  spec.csharp:
  - uid: System.EventHandler`1
    name: EventHandler
    nameWithType: EventHandler
    fullName: EventHandler<System.Windows.Shell.JumpItemsRemovedEventArgs>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Windows.Shell.JumpItemsRemovedEventArgs
    name: JumpItemsRemovedEventArgs
    nameWithType: JumpItemsRemovedEventArgs
    fullName: JumpItemsRemovedEventArgs
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Windows.Shell.JumpList.SetJumpList(System.Windows.Application,System.Windows.Shell.JumpList)
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: SetJumpList(Application,JumpList)
  nameWithType: JumpList.SetJumpList(Application,JumpList)
  fullName: System.Windows.Shell.JumpList.SetJumpList(Application,JumpList)
- uid: System.Windows.Shell.JumpList.ShowFrequentCategory
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowFrequentCategory
  nameWithType: JumpList.ShowFrequentCategory
  fullName: System.Windows.Shell.JumpList.ShowFrequentCategory
- uid: System.Windows.Shell.JumpList.ShowRecentCategory
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowRecentCategory
  nameWithType: JumpList.ShowRecentCategory
  fullName: System.Windows.Shell.JumpList.ShowRecentCategory
- uid: System.Windows.Shell.JumpList.#ctor*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpList
  nameWithType: JumpList.JumpList
- uid: System.Windows.Shell.JumpList.AddToRecentCategory*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: AddToRecentCategory
  nameWithType: JumpList.AddToRecentCategory
- uid: System.Windows.Shell.JumpList.Apply*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: Apply
  nameWithType: JumpList.Apply
- uid: System.Windows.Shell.JumpList.BeginInit*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: BeginInit
  nameWithType: JumpList.BeginInit
- uid: System.Windows.Shell.JumpList.EndInit*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: EndInit
  nameWithType: JumpList.EndInit
- uid: System.Windows.Shell.JumpList.GetJumpList*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: GetJumpList
  nameWithType: JumpList.GetJumpList
- uid: System.Windows.Shell.JumpList.JumpItems*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: JumpItems
  nameWithType: JumpList.JumpItems
- uid: System.Windows.Shell.JumpList.SetJumpList*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: SetJumpList
  nameWithType: JumpList.SetJumpList
- uid: System.Windows.Shell.JumpList.ShowFrequentCategory*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowFrequentCategory
  nameWithType: JumpList.ShowFrequentCategory
- uid: System.Windows.Shell.JumpList.ShowRecentCategory*
  parent: System.Windows.Shell.JumpList
  isExternal: false
  name: ShowRecentCategory
  nameWithType: JumpList.ShowRecentCategory
