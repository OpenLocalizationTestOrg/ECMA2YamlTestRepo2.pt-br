### YamlMime:ManagedReference
items:
- uid: System.Web.UI.MasterPage
  id: MasterPage
  children:
  - System.Web.UI.MasterPage.#ctor
  - System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  - System.Web.UI.MasterPage.ContentPlaceHolders
  - System.Web.UI.MasterPage.ContentTemplates
  - System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  - System.Web.UI.MasterPage.Master
  - System.Web.UI.MasterPage.MasterPageFile
  langs:
  - csharp
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
  type: Class
  summary: "Atua como um modelo e o contêiner de mesclagem para páginas que são compostas apenas de <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> controles e seus respectivos filho."
  remarks: "Uma página mestra funciona como um contêiner de modelo e a mesclagem de página das páginas de conteúdo em seu aplicativo da Web do ASP.NET. Páginas mestras fornecem uma maneira conveniente para compartilhar a estrutura e o conteúdo em um conjunto de páginas de conteúdo. Você pode usar espaços reservados de conteúdo para definir as seções da página mestra para substituir o conteúdo das páginas de conteúdo.       Quando você usa uma página mestra e suas páginas de conteúdo relacionadas, você adiciona as marcas de documento XHTML necessárias (como `html`, `head`, e `body`) apenas para a página mestra e não está mais criar seus outros arquivos. aspx (páginas ASP.NET) como páginas da Web independentes. As páginas de conteúdo definem o conteúdo para inserir os espaços reservados na página mestra.       Quando é feita uma solicitação HTTP para uma página em tempo de execução, a página mestra e páginas de conteúdo são combinadas em uma única classe com o mesmo nome que as páginas de conteúdo. Resultante compilado, mesclada classe deriva de <xref:System.Web.UI.Page>classe.</xref:System.Web.UI.Page>       Uma página mestra pode conter marcação direta e controles de servidor, bem como os controles de contêiner. Cada elemento que é colocado na página mestra fora de um <xref:System.Web.UI.WebControls.ContentPlaceHolder>controle é processado em todas as páginas são provenientes de mesclagem, a página mestra e páginas de conteúdo.</xref:System.Web.UI.WebControls.ContentPlaceHolder>       Cada página de conteúdo que está relacionada à página mestra deve fazer referência a página mestra em um `MasterPageFile` atributo da sua diretiva. Conteúdo de páginas podem conter apenas um `@ Page` diretiva e uma ou mais <xref:System.Web.UI.WebControls.Content>controles.</xref:System.Web.UI.WebControls.Content> Todos os controles de servidor, texto e marcação de página devem ser colocados em <xref:System.Web.UI.WebControls.Content>controles.</xref:System.Web.UI.WebControls.Content> Identificar o <xref:System.Web.UI.WebControls.ContentPlaceHolder>controle de um mestre de página que um <xref:System.Web.UI.WebControls.Content>controle está associado, definindo o <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A>propriedade o <xref:System.Web.UI.WebControls.Content>controle.</xref:System.Web.UI.WebControls.Content> </xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> </xref:System.Web.UI.WebControls.Content> </xref:System.Web.UI.WebControls.ContentPlaceHolder>       No tempo de execução, o conteúdo dinâmico de cada <xref:System.Web.UI.WebControls.Content>controle em uma página solicitada é mesclada com a página mestra a localização exata de relacionado <xref:System.Web.UI.WebControls.ContentPlaceHolder>controle.</xref:System.Web.UI.WebControls.ContentPlaceHolder> </xref:System.Web.UI.WebControls.Content> Qualquer marcação e controles na página mestra não são afetados. Manipuladores de eventos podem ser definidos na classe mestre e na página de conteúdo. Para obter mais informações, consulte [eventos no mestre do ASP.NET e páginas de conteúdo](~/add/includes/ajax-current-ext-md.md).       A classe de página mestre está associada a arquivos que têm uma extensão. master. Esses arquivos são compilados em tempo de execução como objetos MasterPage e são armazenados em cache na memória do servidor.       A página mestra ficam disponível para a página de conteúdo por meio da <xref:System.Web.UI.Page.Master%2A>propriedade de <xref:System.Web.UI.Page>classe</xref:System.Web.UI.Page> base</xref:System.Web.UI.Page.Master%2A> A <xref:System.Web.UI.Page.Master%2A>propriedade retorna a instância da página mestra; no entanto, ele é digitado como a classe base de página mestre.</xref:System.Web.UI.Page.Master%2A> Controles de acesso, propriedades e funções da página mestra, o <xref:System.Web.UI.Page.Master%2A>propriedade pode ser convertida em um objeto MasterPage.</xref:System.Web.UI.Page.Master%2A> O nome da classe da página mestra for definido usando o `ClassName` atributo da diretiva.      > [!NOTE] > Arquivos com extensões. master não são oferecidos a um navegador.       As diretivas que são válidas em uma página mestre são as mesmas que estão disponíveis em um <xref:System.Web.UI.UserControl>objeto.</xref:System.Web.UI.UserControl> They can include the following attributes:      -   `AutoEventWireup`      -   `ClassName`      -   `CodeFile`      -   `CompilerMode`      -   `CompilerOptions`      -   `Debug`      -   `Description`      -   `EnableTheming`      -   `EnableViewState`      -   `Explicit`      -   `Inherits`      -   `Language`      -   `LinePragmas`      -   `MasterPageFile`      -   `Src`      -   `Strict`      -   `WarningLevel`       Master page directives do not override the directives on individual content pages.       Páginas mestras geralmente são criadas declarativamente. Se você quiser criar uma página mestra programaticamente, deriva diretamente da classe de página mestre. Além de estender a classe de página mestre, você deve criar o arquivo. master para exibir visualmente a interface do usuário (UI) que está associada com as classes que invocado no arquivo de origem.      > [!NOTE] > Quando você cria uma página mestra criando sua própria classe pela primeira vez, você deve incluir todos os namespaces que são necessários para as classes que são usadas pela página.       Para obter mais informações sobre páginas mestras, consulte [páginas mestras ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This section contains four code examples:  \n  \n-   The first code example demonstrates how to create a master page declaratively.  \n  \n-   The second code example represents the content page that is associated with the master page that was created in the first code example.  \n  \n-   The third code example demonstrates how to add a property to a master page.  \n  \n-   The fourth code example demonstrates how to use a content page to access a public property on the master page.  \n  \n The following example demonstrates how to create a master page declaratively and to add some content to it using a content page. The first Web page is the .master page named `MasterPageSample_1.master`.  \n  \n```c#  \n<%@ Master Language=\"C#\" %>  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\" />  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" %>  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\" />  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following example represents the content page that is associated with `MasterPageSample_1.master`. It contains a <xref:System.Web.UI.WebControls.Content> control and identifies the <xref:System.Web.UI.WebControls.ContentPlaceHolder> control that the content is associated with by using the <xref:System.Web.UI.WebControls.Content.ContentPlaceHolderID%2A> property.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPageSample_1cs.master\" Title=\"Content Page\"%>  \n  \n<asp:content   \n    runat=\"server\"  \n    contentplaceholderid=\"ContentPlaceHolder1\" >Hello, Master Pages!</asp:content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/MasterPageSample_1vb.master\" Title=\"Content Page\"%>  \n  \n<asp:content   \n    runat=\"server\"  \n    contentplaceholderid=\"ContentPlaceHolder1\" >Hello, Master Pages!</asp:content>  \n```  \n  \n The following example demonstrates how to add a property to a master page. The `ClassName` attribute is used to name the master page.  \n  \n```c#  \n<%@ Master Language=\"C#\" ClassName=\"MasterExample\" %>  \n  \n<script runat=\"server\">  \n        public string SiteName  \n        {  \n            get { return \"My Site Name\"; }  \n        }  \n</script>  \n  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" ClassName=\"MasterExample\" %>  \n  \n<script runat=\"server\">  \n  Public ReadOnly Property SiteName() As String  \n    Get  \n      Return \"My Site Name\"  \n    End Get  \n  End Property  \n  \n</script>  \n  \n<html >  \n<head runat=\"server\">  \n    <title>MasterPage Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following example shows how to use a content page to access the public property `SiteName` on the master page in the preceding code example.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/MasterPage.master\" Title=\"MasterPage Example\" %>  \n  \n<script runat=\"server\">  \n  protected void Page_Load(object sender, EventArgs e)  \n  {  \n    MasterExample m = (MasterExample)Page.Master;  \n    mylabel.Text = m.SiteName;  \n  }  \n</script>  \n  \n<asp:Content ID=\"Content1\" ContentPlaceHolderID=\"ContentPlaceHolder1\" runat=\"Server\">  \n    Hello, Master Pages!  \n    <asp:Label runat=\"server\" Text=\"Label\" ID=\"mylabel\"></asp:Label>  \n</asp:Content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/MasterPage.master\" Title=\"MasterPage Example\" %>  \n  \n<script runat=\"server\">  \n  \n  Protected Sub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs)  \n    Dim m As MasterExample = CType(Page.Master, MasterPage)  \n    mylabel.Text = m.SiteName  \n  End Sub  \n</script>  \n  \n<asp:Content ID=\"Content1\" ContentPlaceHolderID=\"ContentPlaceHolder1\" runat=\"Server\">  \n    Hello, Master Pages!  \n    <asp:Label runat=\"server\" Text=\"Label\" ID=\"mylabel\"></asp:Label>  \n</asp:Content>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.MasterPageWebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.Web.UI.ControlBuilder(typeof(System.Web.UI.MasterPageControlBuilder))]

      [System.Web.UI.ParseChildren(false)]

      public class MasterPage : System.Web.UI.UserControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.TemplateControl
  - System.Web.UI.UserControl
  implements: []
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.TemplateControl.AbortTransaction
  - System.Web.UI.TemplateControl.AppRelativeVirtualPath
  - System.Web.UI.TemplateControl.AutoHandlers
  - System.Web.UI.TemplateControl.CommitTransaction
  - System.Web.UI.TemplateControl.Construct
  - System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.EnableTheming
  - System.Web.UI.TemplateControl.Error
  - System.Web.UI.TemplateControl.Eval(System.String)
  - System.Web.UI.TemplateControl.Eval(System.String,System.String)
  - System.Web.UI.TemplateControl.FrameworkInitialize
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.Type,System.Object[])
  - System.Web.UI.TemplateControl.LoadTemplate(System.String)
  - System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnError(System.EventArgs)
  - System.Web.UI.TemplateControl.ParseControl(System.String)
  - System.Web.UI.TemplateControl.ParseControl(System.String,System.Boolean)
  - System.Web.UI.TemplateControl.ReadStringResource
  - System.Web.UI.TemplateControl.ReadStringResource(System.Type)
  - System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)
  - System.Web.UI.TemplateControl.SupportAutoEvents
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.UI.TemplateControl.TestDeviceFilter(System.String)
  - System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.XPath(System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPath(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPathSelect(System.String)
  - System.Web.UI.TemplateControl.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.UserControl.Application
  - System.Web.UI.UserControl.Attributes
  - System.Web.UI.UserControl.Cache
  - System.Web.UI.UserControl.CachePolicy
  - System.Web.UI.UserControl.DesignerInitialize
  - System.Web.UI.UserControl.InitializeAsUserControl(System.Web.UI.Page)
  - System.Web.UI.UserControl.IsPostBack
  - System.Web.UI.UserControl.LoadViewState(System.Object)
  - System.Web.UI.UserControl.MapPath(System.String)
  - System.Web.UI.UserControl.OnInit(System.EventArgs)
  - System.Web.UI.UserControl.Request
  - System.Web.UI.UserControl.Response
  - System.Web.UI.UserControl.SaveViewState
  - System.Web.UI.UserControl.Server
  - System.Web.UI.UserControl.Session
  - System.Web.UI.UserControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.UserControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.UserControl.System#Web#UI#IUserControlDesignerAccessor#InnerText
  - System.Web.UI.UserControl.System#Web#UI#IUserControlDesignerAccessor#TagName
  - System.Web.UI.UserControl.Trace
  - System.Web.UI.UserControl.TryUpdateModel``1(``0)
  - System.Web.UI.UserControl.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.UserControl.UpdateModel``1(``0)
  - System.Web.UI.UserControl.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  platform:
  - net462
- uid: System.Web.UI.MasterPage.#ctor
  id: '#ctor'
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: MasterPage()
  nameWithType: MasterPage.MasterPage()
  fullName: System.Web.UI.MasterPage.MasterPage()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Cria uma nova instância do <xref href=&quot;System.Web.UI.MasterPage&quot;> </xref> classe."
  syntax:
    content: public MasterPage ();
    parameters: []
  overload: System.Web.UI.MasterPage.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  id: AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: AddContentTemplate(String,ITemplate)
  nameWithType: MasterPage.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.MasterPage.AddContentTemplate(String,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adiciona um <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> o controle para o <xref:System.Web.UI.MasterPage.ContentTemplates*>dicionário.</xref:System.Web.UI.MasterPage.ContentTemplates*>"
  remarks: "Classes derivadas de página mestra podem adicionar <xref:System.Web.UI.WebControls.Content>controles para o <xref:System.Web.UI.MasterPage.ContentTemplates%2A>dicionário usando o método AddContentTemplate.</xref:System.Web.UI.MasterPage.ContentTemplates%2A> </xref:System.Web.UI.WebControls.Content> Tipos derivados não substituir o método AddContentTemplate normalmente."
  syntax:
    content: protected void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);
    parameters:
    - id: templateName
      type: System.String
      description: "Um nome exclusivo para o <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref>."
    - id: template
      type: System.Web.UI.ITemplate
      description: "The <xref href=&quot;System.Web.UI.WebControls.Content&quot;></xref>."
  overload: System.Web.UI.MasterPage.AddContentTemplate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Um <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> controle com o mesmo nome já existe o <xref:System.Web.UI.MasterPage.ContentTemplates*>dicionário.</xref:System.Web.UI.MasterPage.ContentTemplates*>"
  platform:
  - net462
- uid: System.Web.UI.MasterPage.ContentPlaceHolders
  id: ContentPlaceHolders
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: ContentPlaceHolders
  nameWithType: MasterPage.ContentPlaceHolders
  fullName: System.Web.UI.MasterPage.ContentPlaceHolders
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma lista de <xref href=&quot;System.Web.UI.WebControls.ContentPlaceHolder&quot;> </xref> controles que usa a página mestra para definir diferentes regiões de conteúdo."
  remarks: "Classes derivadas de página mestra acessar a propriedade ContentPlaceHolders para listar atual <xref:System.Web.UI.WebControls.ContentPlaceHolder>controles que estão contidos pelo mestre.</xref:System.Web.UI.WebControls.ContentPlaceHolder> Tipos derivados não substituem a propriedade ContentPlaceHolders normalmente."
  syntax:
    content: protected System.Collections.IList ContentPlaceHolders { get; }
    return:
      type: System.Collections.IList
      description: "Um <xref:System.Collections.IList>de <xref href=&quot;System.Web.UI.WebControls.ContentPlaceHolder&quot;> </xref> controles que usa a página mestra como espaços reservados para <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> controles encontrados em páginas de conteúdo.</xref:System.Collections.IList>"
  overload: System.Web.UI.MasterPage.ContentPlaceHolders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.ContentTemplates
  id: ContentTemplates
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: ContentTemplates
  nameWithType: MasterPage.ContentTemplates
  fullName: System.Web.UI.MasterPage.ContentTemplates
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma lista de controles de conteúdo que estão associados com a página mestra."
  remarks: "Classes derivadas de página mestra acessar a propriedade ContentTemplates para recuperar atual <xref:System.Web.UI.WebControls.Content>controla, conforme definido pelas páginas de conteúdo associadas.</xref:System.Web.UI.WebControls.Content> Tipos derivados não substituem a propriedade ContentTemplates normalmente."
  syntax:
    content: protected System.Collections.IDictionary ContentTemplates { get; }
    return:
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IList>de controles de conteúdo associados à página mestre.</xref:System.Collections.IList>"
  overload: System.Web.UI.MasterPage.ContentTemplates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  id: InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: InstantiateInContentPlaceHolder(Control,ITemplate)
  nameWithType: MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
  fullName: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Fornece um método para definir o controle de modelo atual para uma página que possui a página mestra."
  syntax:
    content: public void InstantiateInContentPlaceHolder (System.Web.UI.Control contentPlaceHolder, System.Web.UI.ITemplate template);
    parameters:
    - id: contentPlaceHolder
      type: System.Web.UI.Control
      description: "O controle que representa o contêiner do conteúdo."
    - id: template
      type: System.Web.UI.ITemplate
      description: "O <xref href=&quot;System.Web.UI.WebControls.Content&quot;> </xref> instância a ser usada."
  overload: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.Master
  id: Master
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: Master
  nameWithType: MasterPage.Master
  fullName: System.Web.UI.MasterPage.Master
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o pai de mestre de página do mestre atual em aninhados cenários de páginas mestras."
  remarks: "O mestre de propriedade é somente leitura, porque a página mestra hierarquias não podem ser criadas em tempo de execução."
  example:
  - "This section contains three code examples. The first code example demonstrates how to create a nested master page`.` The second code example demonstrates how to reference the master page that was created in the first code example. The third code example demonstrates how to use a content page to reference the master page that was created in the second code example.  \n  \n The following code example demonstrates how to create a nested master page and represents the parent master page named `ParentMasterPage_1`.  \n  \n```c#  \n<%@ Master Language=\"C#\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following code example demonstrates how to use a nested master page named `ChildMasterPage_1` that references the master page that was created in the preceding code example.  \n  \n```c#  \n<%@ Master Language=\"C#\" MasterPageFile=\"~/ParentMasterPage_1cs.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" MasterPageFile=\"~/ParentMasterPage_1vb.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n The following code example demonstrates how to use a content page named `ContentPage` that references the `ChildMasterPage_1` that was created in the preceding code example.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/ChildMasterPage_1cs.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/ChildMasterPage_1vb.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```"
  syntax:
    content: public System.Web.UI.MasterPage Master { get; }
    return:
      type: System.Web.UI.MasterPage
      description: "A página mestra que é o pai da página mestra atual; Caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se a página mestra atual não tem nenhum pai."
  overload: System.Web.UI.MasterPage.Master*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.MasterPage.MasterPageFile
  id: MasterPageFile
  parent: System.Web.UI.MasterPage
  langs:
  - csharp
  name: MasterPageFile
  nameWithType: MasterPage.MasterPageFile
  fullName: System.Web.UI.MasterPage.MasterPageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o nome da página mestra que contém o conteúdo atual."
  remarks: ''
  example:
  - "This section contains three code examples. The first code example demonstrates how to create a nested master page`.` The second code example demonstrates how to reference the master page that was created in the first code example. The third code example demonstrates how to use a content page to reference the master page that was created in the second code example.  \n  \n The following code example demonstrates how to create a nested master page and represents the parent master page named `ParentMasterPage_1`.  \n  \n```c#  \n<%@ Master Language=\"C#\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" %>  \n  \n<!DOCTYPE html PUBLIC \"-//W3C//DTD XHTML 1.1//EN\" \"http://www.w3.org/TR/xhtml11/DTD/xhtml11.dtd\">  \n  \n<html >  \n<head runat=\"server\">  \n    <title>Nested Master Page Example</title>  \n</head>  \n<body>  \n    <form id=\"form1\" runat=\"server\">  \n    <h1>This is content in the parent master page.</h1>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder1\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n    </form>  \n</body>  \n</html>  \n```  \n  \n The following code example demonstrates how to use a nested master page named `ChildMasterPage_1` that references the master page that was created in the preceding code example.  \n  \n```c#  \n<%@ Master Language=\"C#\" MasterPageFile=\"~/ParentMasterPage_1cs.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n```vb#  \n<%@ Master Language=\"VB\" MasterPageFile=\"~/ParentMasterPage_1vb.master\" %>  \n  \n<asp:Content Runat=\"Server\" ContentPlaceHolderID=\"ContentPlaceHolder1\">  \n    <h2>This is the content of a nested Master Page.</h2>  \n    <div>  \n        <asp:contentplaceholder id=\"ContentPlaceHolder2\" runat=\"server\">  \n        </asp:contentplaceholder>  \n    </div>  \n</asp:Content>  \n```  \n  \n The following code example demonstrates how to use a content page named `ContentPage` that references the `ChildMasterPage_1` that was created in the preceding code example.  \n  \n```c#  \n<%@ Page Language=\"C#\" MasterPageFile=\"~/ChildMasterPage_1cs.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```  \n  \n```vb#  \n<%@ Page Language=\"VB\" MasterPageFile=\"~/ChildMasterPage_1vb.master\" Title=\"Untitled Page\"%>  \n  \n<asp:content runat=\"server\" contentplaceholderid=\"ContentPlaceHolder2\">  \nThis is the content of a Content control.  \n</asp:content>  \n```"
  syntax:
    content: public string MasterPageFile { get; set; }
    return:
      type: System.String
      description: "O nome da página mestra que é o pai da página mestra atual; Caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se a página mestra atual não tem nenhum pai."
  overload: System.Web.UI.MasterPage.MasterPageFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade MasterPageFile somente pode ser definida em ou antes do <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> eventos."
  platform:
  - net462
references:
- uid: System.Web.UI.UserControl
  isExternal: false
  name: System.Web.UI.UserControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.MasterPage.#ctor
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPage()
  nameWithType: MasterPage.MasterPage()
  fullName: System.Web.UI.MasterPage.MasterPage()
- uid: System.Web.UI.MasterPage.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: AddContentTemplate(String,ITemplate)
  nameWithType: MasterPage.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.MasterPage.AddContentTemplate(String,ITemplate)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.MasterPage.ContentPlaceHolders
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentPlaceHolders
  nameWithType: MasterPage.ContentPlaceHolders
  fullName: System.Web.UI.MasterPage.ContentPlaceHolders
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.UI.MasterPage.ContentTemplates
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentTemplates
  nameWithType: MasterPage.ContentTemplates
  fullName: System.Web.UI.MasterPage.ContentTemplates
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(System.Web.UI.Control,System.Web.UI.ITemplate)
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: InstantiateInContentPlaceHolder(Control,ITemplate)
  nameWithType: MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
  fullName: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder(Control,ITemplate)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.MasterPage.Master
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: Master
  nameWithType: MasterPage.Master
  fullName: System.Web.UI.MasterPage.Master
- uid: System.Web.UI.MasterPage
  parent: System.Web.UI
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
- uid: System.Web.UI.MasterPage.MasterPageFile
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPageFile
  nameWithType: MasterPage.MasterPageFile
  fullName: System.Web.UI.MasterPage.MasterPageFile
- uid: System.Web.UI.MasterPage.#ctor*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage.MasterPage
- uid: System.Web.UI.MasterPage.AddContentTemplate*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: AddContentTemplate
  nameWithType: MasterPage.AddContentTemplate
- uid: System.Web.UI.MasterPage.ContentPlaceHolders*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentPlaceHolders
  nameWithType: MasterPage.ContentPlaceHolders
- uid: System.Web.UI.MasterPage.ContentTemplates*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: ContentTemplates
  nameWithType: MasterPage.ContentTemplates
- uid: System.Web.UI.MasterPage.InstantiateInContentPlaceHolder*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: InstantiateInContentPlaceHolder
  nameWithType: MasterPage.InstantiateInContentPlaceHolder
- uid: System.Web.UI.MasterPage.Master*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: Master
  nameWithType: MasterPage.Master
- uid: System.Web.UI.MasterPage.MasterPageFile*
  parent: System.Web.UI.MasterPage
  isExternal: false
  name: MasterPageFile
  nameWithType: MasterPage.MasterPageFile
