### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  id: BasicDesignerLoader
  children:
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  - System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload
  langs:
  - csharp
  name: BasicDesignerLoader
  nameWithType: BasicDesignerLoader
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  type: Class
  summary: "Fornece uma implementação de <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot;> </xref> interface."
  remarks: "Um BasicDesignerLoader é uma implementação completa de um carregador de designer sem nada relacionado a um formato de persistência. Um BasicDesignerLoader não indicar um texto ou binária persistência, mas ele suporta os seguintes recursos: - várias dependências de carga.      -Monitoramento de alterações no designer.      -Adiada recarregando o tempo ocioso.       Um BasicDesignerLoader adiciona dois tipos de serviços ao contêiner de serviço do host designer: serviços substituíveis e serviços insubstituíveis. Você pode substituir um serviço substituível alterando o valor de protegido <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A>propriedade.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost%2A> Você não pode substituir serviços insubstituíveis porque suas implementações dependem uns aos outros.       A tabela a seguir descreve os serviços que são fornecidos por padrão.      | Serviço padrão | Descrição |   |---------------------|-----------------|   | <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>| Permite que os objetos solicitar que o designer de recarregar quando ele estiver ocioso.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> Este é um serviço substituível. |   | <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>| Usado para serializar e desserializar objetos.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> O Gerenciador de serialização é adicionado como um serviço para que objetos que precisam para realizar a serialização podem utilizar qualquer provedor de serialização que foram adicionados ao Gerenciador de serialização. Este é um serviço insubstituíveis. |"
  syntax:
    content: >-
      [System.Security.SecurityCritical]

      public abstract class BasicDesignerLoader : System.ComponentModel.Design.Serialization.DesignerLoader, System.ComponentModel.Design.Serialization.IDesignerLoaderService
  inheritance:
  - System.Object
  - System.ComponentModel.Design.Serialization.DesignerLoader
  implements:
  - System.ComponentModel.Design.Serialization.IDesignerLoaderService
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: BasicDesignerLoader()
  nameWithType: BasicDesignerLoader.BasicDesignerLoader()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BasicDesignerLoader()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot;> </xref> classe."
  syntax:
    content: protected BasicDesignerLoader ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  id: BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: BeginLoad(IDesignerLoaderHost)
  nameWithType: BasicDesignerLoader.BeginLoad(IDesignerLoaderHost)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(IDesignerLoaderHost)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicia o processo de carregamento."
  remarks: "Esta é uma implementação do resumo <xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=fullName>método.</xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A?displayProperty=fullName> Você não precisa substituir este método em sua própria classe. O método BeginLoad executa as seguintes ações:-ele verifica a superfície de design ainda não tenha carregado.      -Na primeira chamada, ele adiciona serviços relevantes e chama o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A>método.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize%2A>      -Ele chama o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>, e <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>métodos.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>       Se o serviço de carregador de designer não tiver sido removido do contêiner de serviços, BeginLoad chamará o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A>e <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>métodos em vez da <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>e <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>métodos.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> Nessa situação, é responsabilidade do serviço de carregador de designer para chamar <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>e <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>"
  syntax:
    content: public override void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);
    parameters:
    - id: host
      type: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
      description: "O host do carregador de designer para carregar."
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>host</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O designer já está carregado ou BeginLoad foi chamado com um host diferente de carregador de designer."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "<code>host</code>foi descartado."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: Dispose()
  nameWithType: BasicDesignerLoader.Dispose()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Libera os recursos usados pelo <xref href=&quot;System.ComponentModel.Design.Serialization.BasicDesignerLoader&quot;> </xref>."
  remarks: "Chamar o método Dispose não liberar alterações para o carregador do designer. Se você quiser que as alterações a serem salvas, chame <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>antes de chamar Dispose.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>       Chamar Dispose quando terminar de usar o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> O método Dispose deixa a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>em um estado inutilizável.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> Depois de chamar Dispose, você deve liberar todas as referências para o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>para o coletor de lixo possa recuperar a memória que o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>estava ocupando.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada Dispose antes de liberar sua última referência a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>do objeto `Finalize` método.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>"
  syntax:
    content: public override void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)
  id: EnableComponentNotification(System.Boolean)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: EnableComponentNotification(Boolean)
  nameWithType: BasicDesignerLoader.EnableComponentNotification(Boolean)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Habilita ou desabilita a notificação de componente com o <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerLoader&quot;> </xref>."
  syntax:
    content: protected virtual bool EnableComponentNotification (bool enable);
    parameters:
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para ativar a notificação de componente, o <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerLoader&quot;> </xref>; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para desabilitar a notificação de componente, o <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerLoader&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a notificação do componente foi habilitada antes desta chamada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush
  id: Flush
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: Flush()
  nameWithType: BasicDesignerLoader.Flush()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Libera as alterações pendentes no carregador do designer."
  remarks: "Se o carregador de designer não foi carregado ou não tiver sido marcado como modificada, o método de liberação retorna imediatamente. Caso contrário, a liberação solicita que o Gerenciador de serialização para criar uma sessão de serialização e, em seguida, chama <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: BasicDesignerLoader.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém o serviço solicitado."
  remarks: "GetService é um método auxiliar que permite que classes derivadas de <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>para acessar os serviços oferecidos pelo host do carregador de designer.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>"
  syntax:
    content: protected object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O <xref:System.Type>do serviço.</xref:System.Type>"
    return:
      type: System.Object
      description: "O serviço solicitado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o serviço solicitado não pode ser encontrado."
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize
  id: Initialize
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: Initialize()
  nameWithType: BasicDesignerLoader.Initialize()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicializa a serviços."
  remarks: "O método Initialize é chamado da primeira vez <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>é invocado.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> Você pode adicionar todos os serviços necessários para hospedar o carregador de designer neste momento. A implementação base adiciona serviços que <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>oferece, portanto, depois de chamar a implementação base, você pode substituir os serviços existentes.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> Você deve remover quaisquer serviços personalizados que você adicionar aqui, substituindo <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose%2A>"
  syntax:
    content: protected virtual void Initialize ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref> não foi inicializado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref> foi descartado."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded
  id: IsReloadNeeded
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: IsReloadNeeded()
  nameWithType: BasicDesignerLoader.IsReloadNeeded()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Indica se o designer deve ser recarregado."
  remarks: "O método IsReloadNeeded é usado por alguns carregadores de designer para otimizar o recarregamento. Este método pode ser substituído se o carregador de designer oferece suporte ao recarregar inteligente. Alguns carregadores de designer podem detectar alterações feitas em seu documento subjacente e determinar se um recarregamento do designer é realmente necessário. Se não, eles devem retornar `false` deste método. A implementação padrão sempre retorna `true`, que indica que qualquer chamada para <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A>terá êxito.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload%2A>"
  syntax:
    content: protected virtual bool IsReloadNeeded ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o designer deve ser recarregado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. A implementação padrão sempre retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost
  id: LoaderHost
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: LoaderHost
  nameWithType: BasicDesignerLoader.LoaderHost
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém o host do carregador."
  remarks: "Esse método retorna o host do carregador que foi fornecido para o carregador de designer. Isso pode ser `null` se <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>ainda não foi chamado ou se o carregador de designer foi descartado.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>"
  syntax:
    content: protected System.ComponentModel.Design.Serialization.IDesignerLoaderHost LoaderHost { get; }
    return:
      type: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref> que foi passado para o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad*>método.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad*>"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref> não foi inicializado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref> foi descartado."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading
  id: Loading
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: Loading
  nameWithType: BasicDesignerLoader.Loading
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém um valor que indica se o carregador de designer está carregando a superfície de design."
  remarks: "O <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>classe fornece a <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>, que oferece suporte ao carregar dependências.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> Essa propriedade tem dependências de carga em conta e irá retornar `true` se houver qualquer dependência de carga pendentes."
  syntax:
    content: public override bool Loading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o carregador de designer atualmente está carregando a superfície de design; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified
  id: Modified
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: Modified
  nameWithType: BasicDesignerLoader.Modified
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém ou define um valor que indica se o designer foi modificado."
  remarks: "Determina se o carregador de designer detectou que o designer foi modificado. Se essa propriedade for `true` quando o carregador de designer <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>método é chamado, o carregador de designer chamará o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A>método.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>"
  syntax:
    content: protected virtual bool Modified { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o designer foi modificado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>,"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad
  id: OnBeginLoad
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: OnBeginLoad()
  nameWithType: BasicDesignerLoader.OnBeginLoad()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Notifica o carregador do designer que carregamento está prestes a começar."
  remarks: "O método OnBeginLoad é chamado para iniciar o processo de carregamento. Você deve executar qualquer inicialização necessária para carregamento no momento. Este método não deve ser usado para executar a carga real. A implementação padrão desativa as notificações de alteração e configura o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>para carregamento.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>       Se você implementar <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>para fornecer suporte a carga dependente, você deve chamar OnBeginLoad quando ocorre o primeiro carregamento dependente.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> Chamar o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>método após a última chamada para o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>método.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> Por padrão, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>implementa <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>e faz isso para você.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> Se <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>não está disponível quando <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>é chamado, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>diretamente chamará OnBeginLoad.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>       Se você fornecer seu próprio serviço de carregador, ou se você optar por não fornecer um serviço de carregador, você é responsável por chamar esse método. O <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>isso indiretamente chamando automaticamente será chamada de método <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A>se <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>estiver disponível, ou diretamente se não for.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>"
  syntax:
    content: protected virtual void OnBeginLoad ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload
  id: OnBeginUnload
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: OnBeginUnload()
  nameWithType: BasicDesignerLoader.OnBeginUnload()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Notifica o carregador do designer que descarregar está prestes a começar."
  remarks: "O método OnBeginUnload é invocado quando o carregador de designer está prestes a descarregar o documento.       O documento pode ser descarregado em preparação para recarregar, ou se a falha ao carregar o documento. Se você adicionou serviços específicos do documento em <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>ou <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A>, remova-os aqui.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>"
  syntax:
    content: protected virtual void OnBeginUnload ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)
  id: OnEndLoad(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: OnEndLoad(Boolean,ICollection)
  nameWithType: BasicDesignerLoader.OnEndLoad(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(Boolean,ICollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Notifica o carregador do designer que o carregamento for concluído."
  remarks: "O método OnEndLoad é invocado quando o carregamento for concluído. Ele é chamado, mesmo se uma exceção for lançada durante o carregamento. O valor de `successful` será definida como `true` se a carga for bem-sucedida, ou `false` se ocorreu um erro fatal. O `errors` coleção contém objetos que foram relatados como erros. Normalmente, esses objetos são exceções.       Se você implementar <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>para fornecer suporte a carga dependente, você deve chamar o método de OnEndLoad após a última chamada para o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>método.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> Por padrão, <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader>implementa <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>e faz isso para você.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader> Se <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>não está disponível quando <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>é chamado <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>diretamente chamará OnEndLoad após chamar <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A>.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>       Esse método deve ser chamado pelo serviço de carregador de designer quando todas as cargas dependentes tiverem sido concluídas.  Isso interrompe o processo de carregamento foi iniciado pelo <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>método.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A> Se você fornecer seu próprio serviço de carregador, ou se você optar por não fornecer um serviço de carregador, você é responsável por chamar esse método. O <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>método automaticamente chamará isso indiretamente chamando o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A>método se <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService>estiver disponível, ou diretamente se não for.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23DependentLoadComplete%2A> </xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad%2A>"
  syntax:
    content: protected virtual void OnEndLoad (bool successful, System.Collections.ICollection errors);
    parameters:
    - id: successful
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a carga foi concluída com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: errors
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que contém objetos (normalmente exceções) que foram relatados como erros.</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref> não foi inicializado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref> foi descartado."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying
  id: OnModifying
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: OnModifying()
  nameWithType: BasicDesignerLoader.OnModifying()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Notifica o carregador do designer que o estado do documento está prestes a ser modificado."
  remarks: "O método OnModifying é chamado em resposta a uma alteração de componente, adicionando, ou remover o evento que indica que o designer está prestes a ser modificado. Você pode implementar o controle do código fonte, substituir esse método. Uma chamada para OnModifying não significa que o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A>propriedade posteriormente será definida como `true`; ela simplesmente indica uma intenção de fazê-lo.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified%2A>"
  syntax:
    content: protected virtual void OnModifying ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  id: PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: PerformFlush(IDesignerSerializationManager)
  nameWithType: BasicDesignerLoader.PerformFlush(IDesignerSerializationManager)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(IDesignerSerializationManager)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Libera todas as alterações para o designer."
  remarks: "O método PerformFlush é invocado quando o carregador de designer precisa liberar para persistência todas as alterações feitas aos designers. Ele é chamado em resposta a uma chamada para o <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>método.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>"
  syntax:
    content: protected abstract void PerformFlush (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);
    parameters:
    - id: serializationManager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Um <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para manter o estado dos designers carregados."
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  id: PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: PerformLoad(IDesignerSerializationManager)
  nameWithType: BasicDesignerLoader.PerformLoad(IDesignerSerializationManager)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(IDesignerSerializationManager)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Carrega um designer de persistência."
  remarks: "O método PerformLoad é invocado quando o carregador de designer precisa carregar seu estado. PerformLoad é chamado antes de <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A>método.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad%2A> Você deve implementar esse método para carregar o conteúdo do designer."
  syntax:
    content: protected abstract void PerformLoad (System.ComponentModel.Design.Serialization.IDesignerSerializationManager serializationManager);
    parameters:
    - id: serializationManager
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
      description: "Um <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> a ser usado para carregar o estado para os designers."
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider
  id: PropertyProvider
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: PropertyProvider
  nameWithType: BasicDesignerLoader.PropertyProvider
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém ou define o provedor de propriedade para o Gerenciador de serialização que está sendo usado pelo carregador."
  remarks: "O Gerenciador de serialização fornece um `Properties` propriedade em sua interface principal que pode ser lido por serializadores Personalize sua serialização para necessidades específicas. As propriedades que são examinadas pelos serializadores variam dependendo do tipo de serializador usado."
  syntax:
    content: protected object PropertyProvider { get; set; }
    return:
      type: System.Object
      description: "Um objeto cujas propriedades devem ser fornecidos para o Gerenciador de serialização."
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref> não foi inicializado."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)
  id: Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: Reload(BasicDesignerLoader+ReloadOptions)
  nameWithType: BasicDesignerLoader.Reload(BasicDesignerLoader+ReloadOptions)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(BasicDesignerLoader+ReloadOptions)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  syntax:
    content: protected void Reload (System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions flags);
    parameters:
    - id: flags
      type: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions
      description: "A ser adicionado."
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending
  id: ReloadPending
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: ReloadPending
  nameWithType: BasicDesignerLoader.ReloadPending
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém um valor que indica se um recarregamento foi enfileirado."
  syntax:
    content: protected bool ReloadPending { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se uma chamada para <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload*>colocou em fila para uma solicitação de recarregamento; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload*>"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)
  id: ReportFlushErrors(System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: ReportFlushErrors(ICollection)
  nameWithType: BasicDesignerLoader.ReportFlushErrors(ICollection)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(ICollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Relatórios de erros que ocorreram durante a liberação de alterações."
  remarks: "O método ReportFlushErrors é chamado durante a <xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A>se um ou mais erros ao liberar alterações.</xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush%2A> Os valores de `errors` coleção pode ser exceções ou objetos com <xref:System.Object.ToString%2A>valores que descrevem o erro.</xref:System.Object.ToString%2A> A implementação padrão de ReportFlushErrors gera a última exceção na coleção."
  syntax:
    content: protected virtual void ReportFlushErrors (System.Collections.ICollection errors);
    parameters:
    - id: errors
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que contém objetos de erro, geralmente exceções.</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Um ou mais erros ao liberar alterações."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)
  id: SetBaseComponentClassName(System.String)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: SetBaseComponentClassName(String)
  nameWithType: BasicDesignerLoader.SetBaseComponentClassName(String)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Define o nome completo da classe do componente base."
  remarks: "O método SetBaseComponentClassName deve ser chamado durante o carregamento para estabelecer o nome completo do componente de que criação de um designer."
  syntax:
    content: protected void SetBaseComponentClassName (string name);
    parameters:
    - id: name
      type: System.String
      description: "Uma cadeia de caracteres que representa o nome completo do componente a ser criado."
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency
  id: System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency
  isEii: true
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Registra um componente externo como parte do processo de carga gerenciado pelo <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderService&quot;> </xref>."
  remarks: "Chamar o <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>método uma vez para cada objeto externo que participam do processo de carregamento.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> O <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>método é chamado quando o trabalho do processo de carregamento é feito.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>"
  syntax:
    content: void IDesignerLoaderService.AddLoadDependency ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref> não foi inicializado."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  id: System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Indica que uma carga dependente foi concluída."
  remarks: "O método IDesignerLoaderService.DependentLoadComplete é chamado para sinalizar que uma operação de carregamento dependente foi concluída. Chamar o <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>método uma vez para cada processo que foi registrado por chamar o <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A>método, que já foi concluída.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency%2A> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete%2A>       Se a carga dependente for bem-sucedida, os conjuntos de chamador de `successful` parâmetro `true` e passa em uma coleção vazia ou `null` para o `errorCollection` parâmetro. Se a carga dependente encontrar erros, o chamador define o `successful` parâmetro `false` e passa uma coleção de exceções que indicam o motivo ou os motivos da falha para o `errorCollection` parâmetro."
  syntax:
    content: void IDesignerLoaderService.DependentLoadComplete (bool successful, System.Collections.ICollection errorCollection);
    parameters:
    - id: successful
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>carregar com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: errorCollection
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que contém erros que ocorreram durante o carregamento.</xref:System.Collections.ICollection>"
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nenhuma dependência de carga foram adicionada por &lt;xref:System.ComponentModel.Design.Serialization.BasicDesignerLoader.System%23ComponentModel%23Design%23Serialization%23IDesignerLoaderService%23AddLoadDependency%2A&gt;, ou o <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref> não foi inicializado."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerLoaderHost&quot;> </xref> foi descartado."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload
  id: System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload
  isEii: true
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Recarrega o documento de design."
  remarks: "Qualquer objeto pode chamar o método IDesignerLoaderService.Reload para solicitar que a recarga de carregador o documento de design. Se o carregador dá suporte ao recarregar e está em conformidade com o recarregamento, o carregador de designer pode retornar `true`. Caso contrário, retornará `false`, indicando que a recarga não ocorrerá. Chamadores não podem contar com a recarga acontecendo imediatamente. o carregador de designer pode agendá-la para outro momento, ou ele pode tentar recarregar o designer de uma vez.       O chamador pode exibir uma mensagem para o usuário se o designer não pode ser recarregado."
  syntax:
    content: bool IDesignerLoaderService.Reload ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a solicitação de recarregamento for aceita; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o carregador não permitir a recarga."
  overload: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.DesignerLoader
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: BasicDesignerLoader()
  nameWithType: BasicDesignerLoader.BasicDesignerLoader()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BasicDesignerLoader()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: BeginLoad(IDesignerLoaderHost)
  nameWithType: BasicDesignerLoader.BeginLoad(IDesignerLoaderHost)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad(IDesignerLoaderHost)
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerLoaderHost
  nameWithType: IDesignerLoaderHost
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Dispose()
  nameWithType: BasicDesignerLoader.Dispose()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(System.Boolean)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: EnableComponentNotification(Boolean)
  nameWithType: BasicDesignerLoader.EnableComponentNotification(Boolean)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Flush()
  nameWithType: BasicDesignerLoader.Flush()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: GetService(Type)
  nameWithType: BasicDesignerLoader.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService(Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Initialize()
  nameWithType: BasicDesignerLoader.Initialize()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: IsReloadNeeded()
  nameWithType: BasicDesignerLoader.IsReloadNeeded()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: LoaderHost
  nameWithType: BasicDesignerLoader.LoaderHost
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Loading
  nameWithType: BasicDesignerLoader.Loading
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Modified
  nameWithType: BasicDesignerLoader.Modified
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnBeginLoad()
  nameWithType: BasicDesignerLoader.OnBeginLoad()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnBeginUnload()
  nameWithType: BasicDesignerLoader.OnBeginUnload()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnEndLoad(Boolean,ICollection)
  nameWithType: BasicDesignerLoader.OnEndLoad(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad(Boolean,ICollection)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnModifying()
  nameWithType: BasicDesignerLoader.OnModifying()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: PerformFlush(IDesignerSerializationManager)
  nameWithType: BasicDesignerLoader.PerformFlush(IDesignerSerializationManager)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush(IDesignerSerializationManager)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationManager
  nameWithType: IDesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationManager
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(System.ComponentModel.Design.Serialization.IDesignerSerializationManager)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: PerformLoad(IDesignerSerializationManager)
  nameWithType: BasicDesignerLoader.PerformLoad(IDesignerSerializationManager)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad(IDesignerSerializationManager)
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: PropertyProvider
  nameWithType: BasicDesignerLoader.PropertyProvider
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Reload(BasicDesignerLoader+ReloadOptions)
  nameWithType: BasicDesignerLoader.Reload(BasicDesignerLoader+ReloadOptions)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload(BasicDesignerLoader+ReloadOptions)
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadOptions
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: BasicDesignerLoader+ReloadOptions
  nameWithType: BasicDesignerLoader+ReloadOptions
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader+ReloadOptions
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: ReloadPending
  nameWithType: BasicDesignerLoader.ReloadPending
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: ReportFlushErrors(ICollection)
  nameWithType: BasicDesignerLoader.ReportFlushErrors(ICollection)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors(ICollection)
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(System.String)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: SetBaseComponentClassName(String)
  nameWithType: BasicDesignerLoader.SetBaseComponentClassName(String)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete(System.Boolean,System.Collections.ICollection)
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete(Boolean,ICollection)
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
  fullName: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload()
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.#ctor*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: BasicDesignerLoader
  nameWithType: BasicDesignerLoader.BasicDesignerLoader
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.BeginLoad*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: BeginLoad
  nameWithType: BasicDesignerLoader.BeginLoad
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Dispose*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Dispose
  nameWithType: BasicDesignerLoader.Dispose
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.EnableComponentNotification*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: EnableComponentNotification
  nameWithType: BasicDesignerLoader.EnableComponentNotification
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Flush*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Flush
  nameWithType: BasicDesignerLoader.Flush
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.GetService*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: GetService
  nameWithType: BasicDesignerLoader.GetService
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Initialize*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Initialize
  nameWithType: BasicDesignerLoader.Initialize
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.IsReloadNeeded*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: IsReloadNeeded
  nameWithType: BasicDesignerLoader.IsReloadNeeded
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.LoaderHost*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: LoaderHost
  nameWithType: BasicDesignerLoader.LoaderHost
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Loading*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Loading
  nameWithType: BasicDesignerLoader.Loading
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Modified*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Modified
  nameWithType: BasicDesignerLoader.Modified
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginLoad*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnBeginLoad
  nameWithType: BasicDesignerLoader.OnBeginLoad
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnBeginUnload*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnBeginUnload
  nameWithType: BasicDesignerLoader.OnBeginUnload
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnEndLoad*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnEndLoad
  nameWithType: BasicDesignerLoader.OnEndLoad
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.OnModifying*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: OnModifying
  nameWithType: BasicDesignerLoader.OnModifying
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformFlush*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: PerformFlush
  nameWithType: BasicDesignerLoader.PerformFlush
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PerformLoad*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: PerformLoad
  nameWithType: BasicDesignerLoader.PerformLoad
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.PropertyProvider*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: PropertyProvider
  nameWithType: BasicDesignerLoader.PropertyProvider
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.Reload*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: Reload
  nameWithType: BasicDesignerLoader.Reload
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReloadPending*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: ReloadPending
  nameWithType: BasicDesignerLoader.ReloadPending
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.ReportFlushErrors*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: ReportFlushErrors
  nameWithType: BasicDesignerLoader.ReportFlushErrors
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.SetBaseComponentClassName*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: SetBaseComponentClassName
  nameWithType: BasicDesignerLoader.SetBaseComponentClassName
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#AddLoadDependency*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.AddLoadDependency
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#DependentLoadComplete*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.DependentLoadComplete
- uid: System.ComponentModel.Design.Serialization.BasicDesignerLoader.System#ComponentModel#Design#Serialization#IDesignerLoaderService#Reload*
  parent: System.ComponentModel.Design.Serialization.BasicDesignerLoader
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
  nameWithType: BasicDesignerLoader.System.ComponentModel.Design.Serialization.IDesignerLoaderService.Reload
