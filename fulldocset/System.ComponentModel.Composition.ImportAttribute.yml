### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.ImportAttribute
  id: ImportAttribute
  children:
  - System.ComponentModel.Composition.ImportAttribute.#ctor
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  - System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  - System.ComponentModel.Composition.ImportAttribute.AllowDefault
  - System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  - System.ComponentModel.Composition.ImportAttribute.ContractName
  - System.ComponentModel.Composition.ImportAttribute.ContractType
  - System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  - System.ComponentModel.Composition.ImportAttribute.Source
  langs:
  - csharp
  name: ImportAttribute
  nameWithType: ImportAttribute
  fullName: System.ComponentModel.Composition.ImportAttribute
  type: Class
  summary: "Especifica que um valor de propriedade, campo ou parâmetro deve ser fornecido pelo <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>.object"
  remarks: "No atribuído modelo de programação, o Atributoimportar é usado para declarar imports ou dependências de uma determinada parte. Ele pode decorar uma propriedade, um campo ou um método. Durante a composição, importações da parte serão preenchidas pelo <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>objeto ao qual pertence essa parte, usando as exportações fornecidas para que <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>objeto.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> </xref:System.ComponentModel.Composition.Hosting.CompositionContainer>       Se uma importação coincide com a exportação de uma determinada é determinado principalmente pelo comparando o nome do contrato e o tipo de contrato. Em geral, você não precisa especificar qualquer uma delas usando o atributo de importação no código, e eles serão inferidos automaticamente do tipo do membro decorado. Se a importação deve corresponder a uma exportação de um tipo diferente (por exemplo, uma subclasse do tipo de membro decorado ou uma interface implementada por esse membro), em seguida, o tipo de contrato deve ser especificado explicitamente. O nome do contrato pode também ser especificado explicitamente, por exemplo, para distinguir entre vários contratos com o mesmo tipo, mas é melhor fazer isso por meio de metadados. Para obter mais informações sobre metadados, consulte <xref:System.ComponentModel.Composition.PartMetadataAttribute>.</xref:System.ComponentModel.Composition.PartMetadataAttribute>"
  example:
  - "The following example shows three classes with members decorated with the ImportAttribute, and three exports that match them.  \n  \n [!code-cs[ImportAndExport#1](~/add/codesnippet/csharp/consoleapplication3/program.cs#1)]\n [!code-vb[ImportAndExport#1](~/add/codesnippet/visualbasic/consoleapplication4/module1.vb#1)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Property | System.AttributeTargets.Field | System.AttributeTargets.Parameter, AllowMultiple=false, Inherited=false)]

      public class ImportAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute()
  nameWithType: ImportAttribute.ImportAttribute()
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute()
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> classe, importando a exportação com o nome do contrato padrão."
  remarks: "O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>método no tipo de propriedade, campo ou parâmetro que ele é marcado com esse atributo.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       O nome do contrato é comparado com o uso de <xref:System.StringComparer.Ordinal%2A>propriedade para executar uma comparação não linguística, diferencia maiusculas de minúsculas.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportAttribute ();
    parameters: []
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(String)
  nameWithType: ImportAttribute.ImportAttribute(String)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> classe, importando a exportação com o nome do contrato especificado."
  remarks: "O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>método no tipo de propriedade, campo ou parâmetro está marcado com esse atributo.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       O nome do contrato é comparado com o uso de <xref:System.StringComparer.Ordinal%2A>propriedade para executar uma comparação não linguística, diferencia maiusculas de minúsculas.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportAttribute (string contractName);
    parameters:
    - id: contractName
      type: System.String
      description: "O nome do contrato da exportação para importação ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia (&quot;&quot;) para usar o nome do contrato padrão."
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(Type)
  nameWithType: ImportAttribute.ImportAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> classe, importando a exportação com o nome do contrato é derivado do tipo especificado."
  remarks: "O nome do contrato é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>método `contractType`.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       O nome do contrato padrão é o resultado de chamar o <xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>método no tipo de propriedade, campo ou parâmetro está marcado com esse atributo.</xref:System.ComponentModel.Composition.AttributedModelServices.GetContractName%2A>       O nome do contrato é comparado com o uso de <xref:System.StringComparer.Ordinal%2A>propriedade para executar uma comparação não linguística, diferencia maiusculas de minúsculas.</xref:System.StringComparer.Ordinal%2A>"
  syntax:
    content: public ImportAttribute (Type contractType);
    parameters:
    - id: contractType
      type: System.Type
      description: "O tipo para derivar o nome do contrato da exportação, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para usar o nome do contrato padrão."
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  id: '#ctor(System.String,System.Type)'
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ImportAttribute(String,Type)
  nameWithType: ImportAttribute.ImportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String,Type)
  type: Constructor
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Composition.ImportAttribute&quot;> </xref> importando a exportação com o nome do contrato especificado e o tipo de classe."
  syntax:
    content: public ImportAttribute (string contractName, Type contractType);
    parameters:
    - id: contractName
      type: System.String
      description: "O nome do contrato da exportação para importação ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia (&quot;&quot;) para usar o nome do contrato padrão."
    - id: contractType
      type: System.Type
      description: "O tipo de exportação para importar."
  overload: System.ComponentModel.Composition.ImportAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  id: AllowDefault
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Obtém ou define um valor que indica se a propriedade, campo ou parâmetro será definido para o valor padrão do seu tipo quando uma exportação com o nome do contrato não está presente no contêiner."
  remarks: "O valor padrão do tipo de propriedade, campo ou parâmetro é `null` para tipos de referência e zero para tipos de valor numérico. Para outros tipos de valor, o valor padrão será de cada campo do tipo de valor inicializado a zero se o campo é um tipo de valor, ou `null` se o campo for um tipo de referência."
  syntax:
    content: public bool AllowDefault { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a propriedade, campo ou parâmetro será definido para o valor padrão do seu tipo quando não houver nenhuma exportação com o <xref:System.ComponentModel.Composition.ImportAttribute.ContractName*>no <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.Composition.ImportAttribute.ContractName*> O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.ImportAttribute.AllowDefault*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  id: AllowRecomposition
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Obtém ou define um valor que indica se a propriedade ou campo será recomposto quando exportações com um contrato correspondente tem sido alterado no contêiner."
  syntax:
    content: public bool AllowRecomposition { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a propriedade ou campo permite recomposition quando exporta com uma correspondência <xref:System.ComponentModel.Composition.ImportAttribute.ContractName*>são adicionados ou removidos do <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.ComponentModel.Composition.ImportAttribute.ContractName*> O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName
  id: ContractName
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ContractName
  nameWithType: ImportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractName
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Obtém o nome do contrato da exportação para importar."
  syntax:
    content: public string ContractName { get; }
    return:
      type: System.String
      description: "O nome do contrato da exportação para importar. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.ComponentModel.Composition.ImportAttribute.ContractName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType
  id: ContractType
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: ContractType
  nameWithType: ImportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractType
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Obtém o tipo de exportação para importar."
  syntax:
    content: public Type ContractType { get; }
    return:
      type: System.Type
      description: "O tipo de exportação para importar."
  overload: System.ComponentModel.Composition.ImportAttribute.ContractType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  id: RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Obtém ou define um valor que indica que o importador requer um determinado <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref> para as exportações usadas para satisfazer essa importação."
  syntax:
    content: public System.ComponentModel.Composition.CreationPolicy RequiredCreationPolicy { get; set; }
    return:
      type: System.ComponentModel.Composition.CreationPolicy
      description: "Um dos seguintes valores: <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>, se o importador de não exigir um determinado <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;> </xref>. Esse é o padrão.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>para exigir que todas as exportações usadas ser compartilhado por todas as partes no contêiner.       <xref href=&quot;System.ComponentModel.Composition.CreationPolicy&quot;></xref>para exigir que todas as exportações usadas seja não compartilhado em um contêiner. Nesse caso, cada parte recebe sua própria instância."
  overload: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.ImportAttribute.Source
  id: Source
  parent: System.ComponentModel.Composition.ImportAttribute
  langs:
  - csharp
  name: Source
  nameWithType: ImportAttribute.Source
  fullName: System.ComponentModel.Composition.ImportAttribute.Source
  type: Property
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition
  summary: "Obtém ou define um valor que especifica os escopos do qual essa importação pode ser atendida."
  syntax:
    content: public System.ComponentModel.Composition.ImportSource Source { get; set; }
    return:
      type: System.ComponentModel.Composition.ImportSource
      description: "Um valor que especifica os escopos do qual essa importação pode ser atendida."
  overload: System.ComponentModel.Composition.ImportAttribute.Source*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute()
  nameWithType: ImportAttribute.ImportAttribute()
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute()
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(String)
  nameWithType: ImportAttribute.ImportAttribute(String)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.Type)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(Type)
  nameWithType: ImportAttribute.ImportAttribute(Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor(System.String,System.Type)
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute(String,Type)
  nameWithType: ImportAttribute.ImportAttribute(String,Type)
  fullName: System.ComponentModel.Composition.ImportAttribute.ImportAttribute(String,Type)
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowDefault
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
  fullName: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportAttribute.ContractName
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportAttribute.ContractType
  fullName: System.ComponentModel.Composition.ImportAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
  fullName: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.CreationPolicy
  parent: System.ComponentModel.Composition
  isExternal: false
  name: CreationPolicy
  nameWithType: CreationPolicy
  fullName: System.ComponentModel.Composition.CreationPolicy
- uid: System.ComponentModel.Composition.ImportAttribute.Source
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: Source
  nameWithType: ImportAttribute.Source
  fullName: System.ComponentModel.Composition.ImportAttribute.Source
- uid: System.ComponentModel.Composition.ImportSource
  parent: System.ComponentModel.Composition
  isExternal: false
  name: ImportSource
  nameWithType: ImportSource
  fullName: System.ComponentModel.Composition.ImportSource
- uid: System.ComponentModel.Composition.ImportAttribute.#ctor*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ImportAttribute
  nameWithType: ImportAttribute.ImportAttribute
- uid: System.ComponentModel.Composition.ImportAttribute.AllowDefault*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowDefault
  nameWithType: ImportAttribute.AllowDefault
- uid: System.ComponentModel.Composition.ImportAttribute.AllowRecomposition*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: AllowRecomposition
  nameWithType: ImportAttribute.AllowRecomposition
- uid: System.ComponentModel.Composition.ImportAttribute.ContractName*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractName
  nameWithType: ImportAttribute.ContractName
- uid: System.ComponentModel.Composition.ImportAttribute.ContractType*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: ContractType
  nameWithType: ImportAttribute.ContractType
- uid: System.ComponentModel.Composition.ImportAttribute.RequiredCreationPolicy*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: RequiredCreationPolicy
  nameWithType: ImportAttribute.RequiredCreationPolicy
- uid: System.ComponentModel.Composition.ImportAttribute.Source*
  parent: System.ComponentModel.Composition.ImportAttribute
  isExternal: false
  name: Source
  nameWithType: ImportAttribute.Source
