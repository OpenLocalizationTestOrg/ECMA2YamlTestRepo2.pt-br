### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  id: X509SubjectKeyIdentifierClause
  children:
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString
  - System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)
  langs:
  - csharp
  name: X509SubjectKeyIdentifierClause
  nameWithType: X509SubjectKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  type: Class
  summary: "Representa uma cláusula de identificador de chave que identifica um <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> token de segurança usando a extensão do identificador da chave de assunto do certificado x.&509;."
  remarks: "Normalmente, o X509SubjectKeyIdentifierClause não precisa ser usada, diferente de quando um serviço de token de segurança personalizada é criado. Quando um serviço de token de segurança retorna um token de segurança, o token de segurança emitido contém referências aos tokens de segurança anexados ou não. Consultem referências associadas aos tokens de segurança que estão contidos dentro do cabeçalho de segurança de uma mensagem SOAP e referências não são tokens de segurança que não estão incluídas no cabeçalho de segurança de uma mensagem SOAP. Normalmente, essas referências confirmar a autenticidade do token de segurança emitido. Use o <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause>a referência de classe um <xref:System.IdentityModel.Tokens.X509SecurityToken>token de segurança usando a extensão do identificador da chave de assunto do certificado x.&509;.</xref:System.IdentityModel.Tokens.X509SecurityToken> </xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> O <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A>método retorna o assunto extensão do identificador de chave.</xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier%2A>       [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)]suporta os seguintes tipos de referências de token de segurança do <xref:System.IdentityModel.Tokens.X509SecurityToken>tokens de segurança.</xref:System.IdentityModel.Tokens.X509SecurityToken>      - <xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>- <xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause>-X509SubjectKeyIdentifierClause <xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause></xref:System.IdentityModel.Tokens.X509ThumbprintKeyIdentifierClause> </xref:System.IdentityModel.Tokens.X509RawDataKeyIdentifierClause> </xref:System.IdentityModel.Tokens.X509IssuerSerialKeyIdentifierClause>"
  syntax:
    content: 'public class X509SubjectKeyIdentifierClause : System.IdentityModel.Tokens.BinaryKeyIdentifierClause'
  inheritance:
  - System.Object
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  implements: []
  inheritedMembers:
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.GetRawBuffer
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[])
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.Byte[],System.Int32)
  - System.IdentityModel.Tokens.BinaryKeyIdentifierClause.Matches(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CanCreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.ClauseType
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.CreateKey
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.DerivationLength
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.GetDerivationNonce
  - System.IdentityModel.Tokens.SecurityKeyIdentifierClause.Id
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: X509SubjectKeyIdentifierClause(Byte[])
  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&quot;> </xref> classe usando o identificador de chave de entidade especificado."
  syntax:
    content: public X509SubjectKeyIdentifierClause (byte[] ski);
    parameters:
    - id: ski
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém o identificador de chave de entidade.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ski</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: CanCreateFrom(X509Certificate2)
  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um valor que indica se uma cláusula de identificador de chave pode ser criada para o certificado x.&509; especificado."
  remarks: "Uma cláusula de identificador de chave pode ser criada quando o `certificate` parâmetro contém o <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>extensão.</xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>"
  syntax:
    content: public static bool CanCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> que contém o certificado x.&509;."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma cláusula de identificador de chave pode ser criada para <code> certificate </code>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier
  id: GetX509SubjectKeyIdentifier
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: GetX509SubjectKeyIdentifier()
  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém a chave de assunto identificador."
  syntax:
    content: public byte[] GetX509SubjectKeyIdentifier ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém o identificador de chave de entidade.</xref:System.Byte>"
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: Matches(X509Certificate2)
  nameWithType: X509SubjectKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(X509Certificate2)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retorna um valor que indica se o identificador de chave para essa instância é equivalente ao identificador de chave do certificado x.&509; especificado."
  remarks: "O método de correspondência compara o <xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>extensão para os dois certificados x.&509;.</xref:System.Security.Cryptography.X509Certificates.X509SubjectKeyIdentifierExtension>"
  syntax:
    content: public bool Matches (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> que contém o certificado x.&509; a ser comparado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> certificate </code> tem o mesmo identificador de chave de entidade que a instância atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString
  id: ToString
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: ToString()
  nameWithType: X509SubjectKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Retorna uma cadeia de caracteres que representa o objeto atual."
  remarks: "O método ToString retorna a chave de assunto identificador."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Um <xref:System.String>que representa o objeto atual.</xref:System.String>"
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)
  id: TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  langs:
  - csharp
  name: TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Cria uma cláusula de identificador de chave usando o certificado x.&509; especificado."
  remarks: "Um <xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>cláusula de identificador de chave pode ser criada para o certificado x.&509; quando ele contém um identificador de chave de entidade.</xref:System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause>"
  syntax:
    content: public static bool TryCreateFrom (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate, out System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause keyIdentifierClause);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> para criar a cláusula de identificador de chave para."
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
      description: "Quando este método retorna, contém um <xref href=&quot;System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause&quot;> </xref> que representa a cláusula de identificador de chave. Esse parâmetro é passado não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando uma cláusula de identificador de chave pode ser criada para o certificado x.&509; especificado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>certificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
  isExternal: false
  name: System.IdentityModel.Tokens.BinaryKeyIdentifierClause
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor(System.Byte[])
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: X509SubjectKeyIdentifierClause(Byte[])
  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: CanCreateFrom(X509Certificate2)
  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom(X509Certificate2)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: GetX509SubjectKeyIdentifier()
  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier()
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: Matches(X509Certificate2)
  nameWithType: X509SubjectKeyIdentifierClause.Matches(X509Certificate2)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches(X509Certificate2)
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: ToString()
  nameWithType: X509SubjectKeyIdentifierClause.ToString()
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(System.Security.Cryptography.X509Certificates.X509Certificate2,System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause@)
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom(X509Certificate2,X509SubjectKeyIdentifierClause)
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: X509SubjectKeyIdentifierClause
  nameWithType: X509SubjectKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.#ctor*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: X509SubjectKeyIdentifierClause
  nameWithType: X509SubjectKeyIdentifierClause.X509SubjectKeyIdentifierClause
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.CanCreateFrom*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: CanCreateFrom
  nameWithType: X509SubjectKeyIdentifierClause.CanCreateFrom
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: GetX509SubjectKeyIdentifier
  nameWithType: X509SubjectKeyIdentifierClause.GetX509SubjectKeyIdentifier
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.Matches*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: Matches
  nameWithType: X509SubjectKeyIdentifierClause.Matches
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.ToString*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: ToString
  nameWithType: X509SubjectKeyIdentifierClause.ToString
- uid: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause.TryCreateFrom*
  parent: System.IdentityModel.Tokens.X509SubjectKeyIdentifierClause
  isExternal: false
  name: TryCreateFrom
  nameWithType: X509SubjectKeyIdentifierClause.TryCreateFrom
