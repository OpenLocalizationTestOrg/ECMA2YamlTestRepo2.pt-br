### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.BYOT
  id: BYOT
  children:
  - System.EnterpriseServices.BYOT.CreateWithTipTransaction(System.String,System.Type)
  - System.EnterpriseServices.BYOT.CreateWithTransaction(System.Object,System.Type)
  langs:
  - csharp
  name: BYOT
  nameWithType: BYOT
  fullName: System.EnterpriseServices.BYOT
  type: Class
  summary: "Encapsula o COM+ <xref uid=&quot;langword_csharp_ByotServerEx&quot; name=&quot;ByotServerEx&quot; href=&quot;&quot;> </xref> classe e as interfaces de COM+ DTC <xref uid=&quot;langword_csharp_ICreateWithTransactionEx&quot; name=&quot;ICreateWithTransactionEx&quot; href=&quot;&quot;> </xref> e <xref uid=&quot;langword_csharp_ICreateWithTipTransactionEx&quot; name=&quot;ICreateWithTipTransactionEx&quot; href=&quot;&quot;> </xref>. Essa classe não pode ser herdada."
  remarks: "BYOT (Traga sua própria transação) permite que um componente a ser criada com ou herdar de uma transação externa. Ou seja, um componente que ainda não tiver uma transação associada pode adquirir uma transação. COM+ permite definir uma transação de coordenador de transações distribuídas (DTC) ou protocolo de Internet de transação (dica) pré-existente arbitrária como a propriedade de transação de contexto de um novo componente. Isso permite que os componentes COM+ deve ser associada com transações cujos tempos de vida são controlados por uma monitor (PA), o seletor de tarefa do objeto (OTS) ou o sistema de gerenciamento de banco de dados (DBMS) de processamento de transações.       Transações BYOT devem ser usadas com cuidado. Em determinadas situações, pode resultar em uma transação abrangendo vários domínios de sincronização — ou seja, eles permitem que o paralelismo em outra transação, fazendo com que uma condição de deadlock.       Transações automáticas, em vez de transações BYOT, são o modelo de programação preferido para os autores de componentes de negócios."
  syntax:
    content: public sealed class BYOT
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.BYOT.CreateWithTipTransaction(System.String,System.Type)
  id: CreateWithTipTransaction(System.String,System.Type)
  parent: System.EnterpriseServices.BYOT
  langs:
  - csharp
  name: CreateWithTipTransaction(String,Type)
  nameWithType: BYOT.CreateWithTipTransaction(String,Type)
  fullName: System.EnterpriseServices.BYOT.CreateWithTipTransaction(String,Type)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Cria um objeto que está inscrita em uma transação manual usando a transação de protocolo TIP (Internet)."
  remarks: "CreateWithTipTransaction executa o equivalente gerenciado do método COM+ DTC `ICreateWithTIPTransaction::CreateInstance`."
  syntax:
    content: public static object CreateWithTipTransaction (string url, Type t);
    parameters:
    - id: url
      type: System.String
      description: "Uma URL dica que especifica uma transação."
    - id: t
      type: System.Type
      description: "O tipo."
    return:
      type: System.Object
      description: "A transação solicitada."
  overload: System.EnterpriseServices.BYOT.CreateWithTipTransaction*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.BYOT.CreateWithTransaction(System.Object,System.Type)
  id: CreateWithTransaction(System.Object,System.Type)
  parent: System.EnterpriseServices.BYOT
  langs:
  - csharp
  name: CreateWithTransaction(Object,Type)
  nameWithType: BYOT.CreateWithTransaction(Object,Type)
  fullName: System.EnterpriseServices.BYOT.CreateWithTransaction(Object,Type)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Cria um objeto que está inscrita em uma transação manual."
  remarks: "O equivalente gerenciado do método COM+ DTC Distributed Transaction Coordinator () executa a CreateWithTransaction `ICreateWithTransaction::CreateInstance`."
  syntax:
    content: public static object CreateWithTransaction (object transaction, Type t);
    parameters:
    - id: transaction
      type: System.Object
      description: "O <xref href=&quot;System.EnterpriseServices.ITransaction&quot;> </xref> ou <xref href=&quot;System.Transactions.Transaction&quot;> </xref> objeto que especifica uma transação."
    - id: t
      type: System.Type
      description: "O tipo especificado."
    return:
      type: System.Object
      description: "A transação solicitada."
  overload: System.EnterpriseServices.BYOT.CreateWithTransaction*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.EnterpriseServices.BYOT.CreateWithTipTransaction(System.String,System.Type)
  parent: System.EnterpriseServices.BYOT
  isExternal: false
  name: CreateWithTipTransaction(String,Type)
  nameWithType: BYOT.CreateWithTipTransaction(String,Type)
  fullName: System.EnterpriseServices.BYOT.CreateWithTipTransaction(String,Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.EnterpriseServices.BYOT.CreateWithTransaction(System.Object,System.Type)
  parent: System.EnterpriseServices.BYOT
  isExternal: false
  name: CreateWithTransaction(Object,Type)
  nameWithType: BYOT.CreateWithTransaction(Object,Type)
  fullName: System.EnterpriseServices.BYOT.CreateWithTransaction(Object,Type)
- uid: System.EnterpriseServices.BYOT.CreateWithTipTransaction*
  parent: System.EnterpriseServices.BYOT
  isExternal: false
  name: CreateWithTipTransaction
  nameWithType: BYOT.CreateWithTipTransaction
- uid: System.EnterpriseServices.BYOT.CreateWithTransaction*
  parent: System.EnterpriseServices.BYOT
  isExternal: false
  name: CreateWithTransaction
  nameWithType: BYOT.CreateWithTransaction
