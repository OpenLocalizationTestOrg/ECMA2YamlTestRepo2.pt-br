### YamlMime:ManagedReference
items:
- uid: System.Messaging.AccessControlEntry
  id: AccessControlEntry
  children:
  - System.Messaging.AccessControlEntry.#ctor
  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  - System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  - System.Messaging.AccessControlEntry.CustomAccessRights
  - System.Messaging.AccessControlEntry.EntryType
  - System.Messaging.AccessControlEntry.GenericAccessRights
  - System.Messaging.AccessControlEntry.StandardAccessRights
  - System.Messaging.AccessControlEntry.Trustee
  langs:
  - csharp
  name: AccessControlEntry
  nameWithType: AccessControlEntry
  fullName: System.Messaging.AccessControlEntry
  type: Class
  summary: "Especifica os direitos de acesso para um objeto de confiança (usuário, grupo ou computador) para executar implementações específicas do aplicativo das tarefas comuns."
  remarks: "Muitos aplicativos têm operações semelhantes ao qual um objeto de confiança pode ser atribuído direitos, por exemplo, leitura, gravação e exclusão de objetos. Quando você atribuir direitos para essas operações em gerais, o aplicativo interpreta de uma maneira específica para esse aplicativo. Por exemplo, o enfileiramento de mensagens interpreta a operação de leitura como receber ou exibir mensagens de uma fila. A classe AccessControlEntry fornece acesso a esses direitos comuns.       Ao trabalhar com entradas de controle de acesso, você pode especificar um objeto de confiança para o qual você está atribuindo direitos. Você deve definir pelo menos uma da <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, ou <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>Propriedades para indicar quais direitos para o objeto de confiança.</xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> Você pode definir o <xref:System.Messaging.AccessControlEntry.EntryType%2A>propriedade para especificar se os direitos que você indique devem ser concedidos ou negados.</xref:System.Messaging.AccessControlEntry.EntryType%2A> O tipo de entrada padrão é permitir que os direitos."
  syntax:
    content: public class AccessControlEntry
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor
  id: '#ctor'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry()
  nameWithType: AccessControlEntry.AccessControlEntry()
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry()
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> classe que especifica um objeto de confiança, nem conjunto de direitos para aplicar."
  remarks: "Definir o <xref:System.Messaging.AccessControlEntry.Trustee%2A>propriedade e pelo menos uma da <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, ou <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>propriedades antes de usar este <xref:System.Messaging.AccessControlEntry>instância definir direitos de acesso para um objeto de confiança.</xref:System.Messaging.AccessControlEntry> </xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> </xref:System.Messaging.AccessControlEntry.Trustee%2A>       Você pode definir opcionalmente o <xref:System.Messaging.AccessControlEntry.EntryType%2A>propriedade, embora o padrão é `Allow` se você optar por não fazê-lo.</xref:System.Messaging.AccessControlEntry.EntryType%2A>"
  syntax:
    content: public AccessControlEntry ();
    parameters: []
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  id: '#ctor(System.Messaging.Trustee)'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry(Trustee)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> classe que especifica um objeto de confiança para o qual os direitos são concedidos ou negados."
  remarks: "Definir o <xref:System.Messaging.AccessControlEntry.EntryType%2A>propriedade e pelo menos uma da <xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A>, <xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A>, ou <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>propriedades antes de usar este <xref:System.Messaging.AccessControlEntry>instância definir direitos de acesso para um objeto de confiança.</xref:System.Messaging.AccessControlEntry> </xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A> </xref:System.Messaging.AccessControlEntry.StandardAccessRights%2A> </xref:System.Messaging.AccessControlEntry.GenericAccessRights%2A> </xref:System.Messaging.AccessControlEntry.EntryType%2A>"
  syntax:
    content: public AccessControlEntry (System.Messaging.Trustee trustee);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "Um <xref href=&quot;System.Messaging.Trustee&quot;> </xref> que especifica um usuário, grupo, computador, domínio ou alias."
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>trustee</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  id: '#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)'
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  type: Constructor
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> classe que especifica um objeto de confiança, direitos e se deseja conceder ou negar esses direitos."
  remarks: "Essa sobrecarga dos conjuntos de construtor do <xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>propriedade a uma combinação bit a bit do `genericAccessRights` e `standardAccessRights` parâmetros que você especificar.</xref:System.Messaging.AccessControlEntry.CustomAccessRights%2A>"
  syntax:
    content: public AccessControlEntry (System.Messaging.Trustee trustee, System.Messaging.GenericAccessRights genericAccessRights, System.Messaging.StandardAccessRights standardAccessRights, System.Messaging.AccessControlEntryType entryType);
    parameters:
    - id: trustee
      type: System.Messaging.Trustee
      description: "Um <xref href=&quot;System.Messaging.Trustee&quot;> </xref> que especifica um usuário, grupo, computador, domínio ou alias."
    - id: genericAccessRights
      type: System.Messaging.GenericAccessRights
      description: "Uma combinação bit a bit do <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> valores."
    - id: standardAccessRights
      type: System.Messaging.StandardAccessRights
      description: "Uma combinação bit a bit do <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> valores."
    - id: entryType
      type: System.Messaging.AccessControlEntryType
      description: "Uma da <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> valores, que especifica se deve permitir, negar, definir ou revogar os direitos especificados."
  overload: System.Messaging.AccessControlEntry.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>trustee</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O <code> genericAccessRights </code>, <code> standardAccessRights </code>, ou <code> entryType </code> parâmetros não são valores de enumeração válidos."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.CustomAccessRights
  id: CustomAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
  fullName: System.Messaging.AccessControlEntry.CustomAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define os direitos de acesso personalizados."
  syntax:
    content: protected int CustomAccessRights { get; set; }
    return:
      type: System.Int32
      description: "Direitos de acesso específicas do aplicativo, geralmente definidos como um sinalizador de bit."
  overload: System.Messaging.AccessControlEntry.CustomAccessRights*
  exceptions: []
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.EntryType
  id: EntryType
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
  fullName: System.Messaging.AccessControlEntry.EntryType
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define um valor que indica como os direitos de acesso se aplicam ao objeto de confiança."
  syntax:
    content: public System.Messaging.AccessControlEntryType EntryType { get; set; }
    return:
      type: System.Messaging.AccessControlEntryType
      description: "Uma da <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> valores, que especifica se deve permitir, negar, definir ou revogar os direitos especificados. O padrão é <xref uid=&quot;langword_csharp_Allow&quot; name=&quot;Allow&quot; href=&quot;&quot;> </xref>."
  overload: System.Messaging.AccessControlEntry.EntryType*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O tipo de entrada não é válido <xref href=&quot;System.Messaging.AccessControlEntryType&quot;> </xref> valor de enumeração."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.GenericAccessRights
  id: GenericAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
  fullName: System.Messaging.AccessControlEntry.GenericAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define um conjunto comum de direitos de acesso que mapeiam para ambos os direitos de acesso padrão e específica de objetos para leitura, gravação e execução."
  remarks: "Objetos protegíveis usam os quatro bits de ordem superior do Windows 2000 e Windows NT formato de máscara de acesso para especificar os direitos de acesso genérico. Cada tipo de objeto protegível mapeia esses bits para um conjunto de seus direitos de acesso padrão e específica de objetos. Aplicativos que definem objetos protegíveis privados também podem usar os direitos de acesso genérico."
  syntax:
    content: public System.Messaging.GenericAccessRights GenericAccessRights { get; set; }
    return:
      type: System.Messaging.GenericAccessRights
      description: "Uma combinação bit a bit do <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> valores."
  overload: System.Messaging.AccessControlEntry.GenericAccessRights*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor definido não é uma combinação válida de <xref href=&quot;System.Messaging.GenericAccessRights&quot;> </xref> membros de sinalizador de bit."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.StandardAccessRights
  id: StandardAccessRights
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
  fullName: System.Messaging.AccessControlEntry.StandardAccessRights
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define um conjunto padrão de direitos de acesso que correspondem às operações comuns à maioria dos tipos de objetos protegíveis."
  remarks: "O formato de máscara de acesso do Windows 2000 e Windows NT inclui um conjunto de bits para os direitos de acesso padrão. Cada tipo de objeto protegível tem um conjunto de direitos de acesso que correspondem às operações específicas para esse tipo de objeto. Além desses direitos de acesso de objeto específico, há um conjunto padrão de direitos de acesso que correspondem às operações comuns à maioria dos tipos de objetos protegíveis."
  syntax:
    content: public System.Messaging.StandardAccessRights StandardAccessRights { get; set; }
    return:
      type: System.Messaging.StandardAccessRights
      description: "Uma combinação bit a bit do <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> valores."
  overload: System.Messaging.AccessControlEntry.StandardAccessRights*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor definido não é uma combinação válida de <xref href=&quot;System.Messaging.StandardAccessRights&quot;> </xref> membros de sinalizador de bit."
  platform:
  - net462
- uid: System.Messaging.AccessControlEntry.Trustee
  id: Trustee
  parent: System.Messaging.AccessControlEntry
  langs:
  - csharp
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
  fullName: System.Messaging.AccessControlEntry.Trustee
  type: Property
  assemblies:
  - System.Messaging
  namespace: System.Messaging
  summary: "Obtém ou define o usuário, grupo, domínio ou alias ao qual você está atribuindo direitos de acesso."
  remarks: "Os usuários e programas, como os serviços de Win32, usam contas de usuário para fazer logon no computador local. Contas de grupo não pode ser usadas para fazer logon um computador, mas são úteis para <xref:System.Messaging.AccessControlEntry>instâncias para permitir ou negar a um conjunto de direitos de acesso para uma ou mais contas de usuário.</xref:System.Messaging.AccessControlEntry>"
  syntax:
    content: public System.Messaging.Trustee Trustee { get; set; }
    return:
      type: System.Messaging.Trustee
      description: "Um <xref href=&quot;System.Messaging.Trustee&quot;> </xref> que especifica uma conta de usuário, a conta de grupo ou a sessão de logon para o qual um <xref href=&quot;System.Messaging.AccessControlEntry&quot;> </xref> se aplica."
  overload: System.Messaging.AccessControlEntry.Trustee*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A propriedade do objeto de confiança é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.Messaging.AccessControlEntry.#ctor
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry()
  nameWithType: AccessControlEntry.AccessControlEntry()
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry()
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee)
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry(Trustee)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee)
- uid: System.Messaging.Trustee
  parent: System.Messaging
  isExternal: false
  name: Trustee
  nameWithType: Trustee
  fullName: System.Messaging.Trustee
- uid: System.Messaging.AccessControlEntry.#ctor(System.Messaging.Trustee,System.Messaging.GenericAccessRights,System.Messaging.StandardAccessRights,System.Messaging.AccessControlEntryType)
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  nameWithType: AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
  fullName: System.Messaging.AccessControlEntry.AccessControlEntry(Trustee,GenericAccessRights,StandardAccessRights,AccessControlEntryType)
- uid: System.Messaging.GenericAccessRights
  parent: System.Messaging
  isExternal: false
  name: GenericAccessRights
  nameWithType: GenericAccessRights
  fullName: System.Messaging.GenericAccessRights
- uid: System.Messaging.StandardAccessRights
  parent: System.Messaging
  isExternal: false
  name: StandardAccessRights
  nameWithType: StandardAccessRights
  fullName: System.Messaging.StandardAccessRights
- uid: System.Messaging.AccessControlEntryType
  parent: System.Messaging
  isExternal: false
  name: AccessControlEntryType
  nameWithType: AccessControlEntryType
  fullName: System.Messaging.AccessControlEntryType
- uid: System.Messaging.AccessControlEntry.CustomAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
  fullName: System.Messaging.AccessControlEntry.CustomAccessRights
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Messaging.AccessControlEntry.EntryType
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
  fullName: System.Messaging.AccessControlEntry.EntryType
- uid: System.Messaging.AccessControlEntry.GenericAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
  fullName: System.Messaging.AccessControlEntry.GenericAccessRights
- uid: System.Messaging.AccessControlEntry.StandardAccessRights
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
  fullName: System.Messaging.AccessControlEntry.StandardAccessRights
- uid: System.Messaging.AccessControlEntry.Trustee
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
  fullName: System.Messaging.AccessControlEntry.Trustee
- uid: System.Messaging.AccessControlEntry.#ctor*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: AccessControlEntry
  nameWithType: AccessControlEntry.AccessControlEntry
- uid: System.Messaging.AccessControlEntry.CustomAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: CustomAccessRights
  nameWithType: AccessControlEntry.CustomAccessRights
- uid: System.Messaging.AccessControlEntry.EntryType*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: EntryType
  nameWithType: AccessControlEntry.EntryType
- uid: System.Messaging.AccessControlEntry.GenericAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: GenericAccessRights
  nameWithType: AccessControlEntry.GenericAccessRights
- uid: System.Messaging.AccessControlEntry.StandardAccessRights*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: StandardAccessRights
  nameWithType: AccessControlEntry.StandardAccessRights
- uid: System.Messaging.AccessControlEntry.Trustee*
  parent: System.Messaging.AccessControlEntry
  isExternal: false
  name: Trustee
  nameWithType: AccessControlEntry.Trustee
