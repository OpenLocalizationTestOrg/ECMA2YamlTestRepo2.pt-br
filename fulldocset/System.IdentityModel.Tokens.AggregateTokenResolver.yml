### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.AggregateTokenResolver
  id: AggregateTokenResolver
  children:
  - System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})
  - System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  langs:
  - csharp
  name: AggregateTokenResolver
  nameWithType: AggregateTokenResolver
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver
  type: Class
  summary: "Representa um resolvedor de token de segurança que pode envolver vários resolvedores de token e resolver tokens em todos os resolvedores encapsulados."
  remarks: "Um <xref:System.IdentityModel.Selectors.SecurityTokenResolver>objeto representa uma classe de utilitário que pode recuperar tokens de segurança ou chaves quando você tem uma cláusula de identificador de chave ou identificador de chave.</xref:System.IdentityModel.Selectors.SecurityTokenResolver> O AggregateTokenResolver envolve várias <xref:System.IdentityModel.Selectors.SecurityTokenResolver>objetos.</xref:System.IdentityModel.Selectors.SecurityTokenResolver> Os resolvedores de token a ser encapsulado são especificados no construtor. O <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A>propriedade retorna a coleção de resolvedores de token que são quebrados pelo resolvedor de agregação.</xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A>"
  syntax:
    content: 'public class AggregateTokenResolver : System.IdentityModel.Selectors.SecurityTokenResolver'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenResolver
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenResolver.CreateDefaultSecurityTokenResolver(System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Tokens.SecurityToken},System.Boolean)
  - System.IdentityModel.Selectors.SecurityTokenResolver.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier)
  - System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  - System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})'
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  nameWithType: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.AggregateTokenResolver&quot;> </xref> classe usando a lista especificada de resolvedores de token."
  remarks: "O <xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A>propriedade é inicializada com a lista especificada de resolvedores de token.</xref:System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers%2A>"
  syntax:
    content: public AggregateTokenResolver (System.Collections.Generic.IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver> tokenResolvers);
    parameters:
    - id: tokenResolvers
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver}
      description: "Uma lista de resolvedores de token de segurança a ser disposto por essa instância."
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>tokenResolvers</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  id: TokenResolvers
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TokenResolvers
  nameWithType: AggregateTokenResolver.TokenResolvers
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém a segurança resolvedores de token que estão dispostos por essa instância."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver> TokenResolvers { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Selectors.SecurityTokenResolver}
      description: "Uma coleção somente leitura que contém os resolvedores de token que estão dispostos por essa instância."
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  id: TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Tenta recuperar a chave que é referenciada na cláusula de identificador de chave especificado."
  remarks: "O método TryResolveSecurityKeyCore é chamado pelo <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>e <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A>métodos.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveSecurityKey%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveSecurityKey%2A>"
  syntax:
    content: protected override bool TryResolveSecurityKeyCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityKey key);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A cláusula de identificador de chave para recuperar a chave."
    - id: key
      type: System.IdentityModel.Tokens.SecurityKey
      description: "Quando este método retorna, contém a chave que é referenciada na cláusula de identificador de chave especificado. Esse parâmetro é passado não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando uma chave pode ser recuperada para a cláusula de identificador de chave especificado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Tenta recuperar o token de segurança que corresponde a pelo menos uma das cláusulas de identificador de chave contidas dentro do identificador de chave especificado."
  remarks: "O método TryResolveTokenCore é chamado pelo <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>e <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>métodos.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifier keyIdentifier, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifier
      type: System.IdentityModel.Tokens.SecurityKeyIdentifier
      description: "O identificador de segurança a chave para recuperar o token."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Quando este método retorna, contém um token que representa o identificador de chave especificado. Esse parâmetro é passado não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando um token pode ser recuperado para o identificador de chave especificado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifier</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  id: TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  langs:
  - csharp
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Tenta resolver o token de segurança que corresponda a cláusula de identificador de chave especificado."
  remarks: "O método TryResolveTokenCore é chamado pelo <xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>e <xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A>métodos.</xref:System.IdentityModel.Selectors.SecurityTokenResolver.ResolveToken%2A> </xref:System.IdentityModel.Selectors.SecurityTokenResolver.TryResolveToken%2A>"
  syntax:
    content: protected override bool TryResolveTokenCore (System.IdentityModel.Tokens.SecurityKeyIdentifierClause keyIdentifierClause, out System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: keyIdentifierClause
      type: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
      description: "A cláusula de identificador de chave para criar um token de segurança para."
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "Quando este método retorna, contém um token de segurança que representa a cláusula de identificador de chave especificado. Esse parâmetro é passado não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando um token de segurança pode ser recuperado para a cláusula de identificador de chave especificado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>keyIdentifierClause</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver})
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  nameWithType: AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.AggregateTokenResolver(IEnumerable<SecurityTokenResolver>)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Selectors.SecurityTokenResolver}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SecurityTokenResolver>
  nameWithType: IEnumerable<SecurityTokenResolver>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Selectors.SecurityTokenResolver>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Selectors.SecurityTokenResolver
    name: SecurityTokenResolver
    nameWithType: SecurityTokenResolver
    fullName: SecurityTokenResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TokenResolvers
  nameWithType: AggregateTokenResolver.TokenResolvers
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Selectors.SecurityTokenResolver}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<SecurityTokenResolver>
  nameWithType: ReadOnlyCollection<SecurityTokenResolver>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Selectors.SecurityTokenResolver>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Selectors.SecurityTokenResolver
    name: SecurityTokenResolver
    nameWithType: SecurityTokenResolver
    fullName: SecurityTokenResolver
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityKey@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore(SecurityKeyIdentifierClause,SecurityKey)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifierClause
  nameWithType: SecurityKeyIdentifierClause
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifierClause
- uid: System.IdentityModel.Tokens.SecurityKey
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKey
  nameWithType: SecurityKey
  fullName: System.IdentityModel.Tokens.SecurityKey
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifier,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifier,SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityKeyIdentifier
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityKeyIdentifier
  nameWithType: SecurityKeyIdentifier
  fullName: System.IdentityModel.Tokens.SecurityKeyIdentifier
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(System.IdentityModel.Tokens.SecurityKeyIdentifierClause,System.IdentityModel.Tokens.SecurityToken@)
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  nameWithType: AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
  fullName: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore(SecurityKeyIdentifierClause,SecurityToken)
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.#ctor*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: AggregateTokenResolver
  nameWithType: AggregateTokenResolver.AggregateTokenResolver
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TokenResolvers*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TokenResolvers
  nameWithType: AggregateTokenResolver.TokenResolvers
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveSecurityKeyCore*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveSecurityKeyCore
  nameWithType: AggregateTokenResolver.TryResolveSecurityKeyCore
- uid: System.IdentityModel.Tokens.AggregateTokenResolver.TryResolveTokenCore*
  parent: System.IdentityModel.Tokens.AggregateTokenResolver
  isExternal: false
  name: TryResolveTokenCore
  nameWithType: AggregateTokenResolver.TryResolveTokenCore
