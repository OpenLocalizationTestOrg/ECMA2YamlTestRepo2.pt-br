### YamlMime:ManagedReference
items:
- uid: System.Web.Util.RequestValidator
  id: RequestValidator
  children:
  - System.Web.Util.RequestValidator.#ctor
  - System.Web.Util.RequestValidator.Current
  - System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  - System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  langs:
  - csharp
  name: RequestValidator
  nameWithType: RequestValidator
  fullName: System.Web.Util.RequestValidator
  type: Class
  summary: "Define métodos de base para a validação de solicitação personalizado."
  remarks: "Por padrão, ASP.NET não valida solicitações até que o código solicita explicitamente um valor da solicitação. Por exemplo, ASP.NET não valida valores de cadeia de caracteres de consulta até que o código acessa o <xref:System.Web.HttpRequest.QueryString%2A>coleção.</xref:System.Web.HttpRequest.QueryString%2A> Por padrão, ASP.NET também não validar alguns tipos de dados de solicitação, como valores de formulário, cookies, os nomes dos arquivos que foram carregados usando HTTP e o valor de <xref:System.Web.HttpRequest.RawUrl%2A>propriedade.</xref:System.Web.HttpRequest.RawUrl%2A>       A classe RequestValidator é uma classe base que você pode implementar para fornecer a validação de solicitação personalizado. Ao implementar essa classe, você pode determinar quando ocorre a validação e o tipo de dados de solicitação para executar a validação.       Por padrão, o ASP.NET oferece verificações de script entre sites (XSS). No entanto, você pode suplementar ou substituir a lógica de validação de solicitação que é fornecida no ASP.NET, criando uma implementação personalizada do XSS. Por exemplo, você pode escrever uma implementação de validação de solicitação personalizado que as verificações de ataques de injeção de SQL além de verificar para ataques XSS.       Para criar a validação de solicitação personalizado, você deve escrever uma classe personalizada que é derivada da classe base RequestValidator. Você, em seguida, configurar o ASP.NET para usar o validador de solicitação personalizado no arquivo Web. config de nível de aplicativo. Você pode colocar a classe personalizada na pasta App_Code, em uma biblioteca de classe compilados na pasta Bin, ou em uma biblioteca de classe compilados no GAC.      > [!NOTE] > Apenas um tipo de validação de solicitação personalizado pode ser configurado para um aplicativo. Não é possível configurar um tipo de validação de solicitação diferentes para caminhos virtuais individuais ou páginas."
  example:
  - "The following example shows how to create a custom request validator that allows only a specific string to be used for query-string values.  \n  \n [!code-cs[System.Web.Util.RequestValidator#1](~/add/codesnippet/csharp/t-system.web.util.reques_1.cs)]\n [!code-vb[System.Web.Util.RequestValidator#1](~/add/codesnippet/visualbasic/t-system.web.util.reques_1.vb)]  \n  \n The following example shows how to configure ASP.NET to use the custom validator in the Web.config file for an application.  \n  \n```  \n<system.web>  \n  <httpRuntime requestValidationType=\"CustomRequestValidation\" />  \n</system.web>  \n```"
  syntax:
    content: public class RequestValidator
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.#ctor
  id: '#ctor'
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: RequestValidator()
  nameWithType: RequestValidator.RequestValidator()
  fullName: System.Web.Util.RequestValidator.RequestValidator()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Util.RequestValidator&quot;> </xref> classe."
  remarks: "O <xref:System.Web.Util.RequestValidator>classe tem um construtor padrão.</xref:System.Web.Util.RequestValidator> Quando uma nova instância da classe é inicializada, um método interno recupera os detalhes de validação personalizada de informações de configuração do aplicativo. Os detalhes de configuração estão contidos no <xref:System.Web.Configuration.HttpRuntimeSection>seção.</xref:System.Web.Configuration.HttpRuntimeSection> Para obter mais informações, consulte [httpRuntime Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e9b81350-8aaf-47cc-9843-5f7d0c59f369) e <xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A>atributo.</xref:System.Web.Configuration.HttpRuntimeSection.RequestValidationType%2A>       Durante a inicialização, uma única instância de <xref:System.Web.Util.RequestValidator>classe é criada, e uma referência para a instância é mantida no <xref:System.Web.Util.RequestValidator.Current%2A>propriedade.</xref:System.Web.Util.RequestValidator.Current%2A> </xref:System.Web.Util.RequestValidator> ASP.NET não cria uma nova instância de validador de solicitação por solicitação. Portanto, implementações personalizadas de <xref:System.Web.Util.RequestValidator>classe deve ser thread-safe.</xref:System.Web.Util.RequestValidator>"
  syntax:
    content: public RequestValidator ();
    parameters: []
  overload: System.Web.Util.RequestValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.Current
  id: Current
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: Current
  nameWithType: RequestValidator.Current
  fullName: System.Web.Util.RequestValidator.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "Obtém ou define uma referência ao atual <xref href=&quot;System.Web.Util.RequestValidator&quot;> </xref> instância que será usada em um aplicativo."
  remarks: "A propriedade atual mantém uma referência para a instância única permitida da <xref:System.Web.Util.RequestValidator>classe.</xref:System.Web.Util.RequestValidator> Se nenhuma instância existir, um novo será criado. Se já existir uma instância, a instância atual é retornada.       Durante a inicialização, uma única instância de <xref:System.Web.Util.RequestValidator>classe é criada, e uma referência para a instância está disponível na propriedade atual.</xref:System.Web.Util.RequestValidator> ASP.NET não cria uma nova instância de validador de solicitação por solicitação. Portanto, implementações personalizadas de <xref:System.Web.Util.RequestValidator>classe deve ser thread-safe.</xref:System.Web.Util.RequestValidator>      > [!NOTE] > Atual a propriedade não é thread-safe, enquanto a propriedade está definindo uma referência para o atual <xref:System.Web.Util.RequestValidator>classe.</xref:System.Web.Util.RequestValidator>"
  syntax:
    content: public static System.Web.Util.RequestValidator Current { get; set; }
    return:
      type: System.Web.Util.RequestValidator
      description: "Uma instância do <xref href=&quot;System.Web.Util.RequestValidator&quot;> </xref> classe."
  overload: System.Web.Util.RequestValidator.Current*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A propriedade é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  id: InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "Fornece um método público que chama o protegido <xref:System.Web.Util.RequestValidator.IsValidRequestString*>método para validar dados de solicitação HTTP.</xref:System.Web.Util.RequestValidator.IsValidRequestString*>"
  remarks: "O método InvokeIsValidRequestString fornece acesso público ao protegido <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A>método.</xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> Isso permite que você crie uma classe wrapper personalizado para a <xref:System.Web.Util.RequestValidator>classe e chame o <xref:System.Web.Util.RequestValidator.IsValidRequestString%2A>método sem a necessidade de herdar da <xref:System.Web.Util.RequestValidator>classe</xref:System.Web.Util.RequestValidator> de</xref:System.Web.Util.RequestValidator.IsValidRequestString%2A> </xref:System.Web.Util.RequestValidator>       Para obter informações sobre a validação de solicitação, consulte <xref:System.Web.UnvalidatedRequestValues>.</xref:System.Web.UnvalidatedRequestValues>"
  syntax:
    content: public bool InvokeIsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O contexto HTTP da solicitação."
    - id: value
      type: System.String
      description: "Os dados da solicitação HTTP para validar."
    - id: requestValidationSource
      type: System.Web.Util.RequestValidationSource
      description: "Uma enumeração que representa a fonte de dados de solicitação que está sendo validados. A seguir estão os valores possíveis para a enumeração:-<xref uid=&quot;langword_csharp_QueryString&quot; name=&quot;QueryString&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Form &quot; name=&quot;Form &quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Cookies&quot; name=&quot;Cookies&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Files&quot; name=&quot;Files&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Path&quot; name=&quot;Path&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_PathInfo&quot; name=&quot;PathInfo&quot; href=&quot;&quot;></xref>      -   <xref uid=&quot;langword_csharp_Headers&quot; name=&quot;Headers&quot; href=&quot;&quot;></xref>"
    - id: collectionKey
      type: System.String
      description: "(Opcional) A chave da coleção de solicitação do item para validar. Esse parâmetro é usado se os dados para validar são obtidos de uma coleção. Se os dados para validar não forem de uma coleção, esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: validationFailureIndex
      type: System.Int32
      description: "Quando este método retorna, indica o ponto de partida com base em zero do texto inválido ou um problema na coleção de solicitação. Esse parâmetro é passado não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a cadeia de caracteres para validar não contém caracteres sem codificação que podem ser usadas em um ataque de script mal-intencionados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Util.RequestValidator.InvokeIsValidRequestString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  id: IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  langs:
  - csharp
  name: IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Util
  summary: "Valida uma cadeia de caracteres que contém dados de solicitação HTTP."
  remarks: "Implementar esse método para executar a validação personalizada dos dados de solicitação. O comportamento de base do método IsValidRequestString é como o comportamento que o ASP.NET implementa internamente para verificar se há cadeias de caracteres perigosas na validação de scripts entre sites. Para obter mais informações, consulte [como: evitar o scripts intersites no ASP.NET](http://go.microsoft.com/fwlink/?LinkID=178708).       Se a lógica de validação personalizada detecta um erro, esse método deve retornar `false` e forneça um valor em `validationFailureIndex` para indicar o ponto de partida do texto que causou o erro. O valor em `validationFailureIndex` deve ser 0 ou um número inteiro positivo.       A lógica em uma verificação de validação de solicitação procede da seguinte maneira: - o <xref:System.Web.HttpRequest>classe executa uma verificação de remoção de caractere nulo nos dados de entrada.</xref:System.Web.HttpRequest>      -A <xref:System.Web.HttpRequest>classe chama o método de IsValidRequestString (a implementação padrão do método base) ou chama uma versão derivada do método.</xref:System.Web.HttpRequest>      -Se o método IsValidRequestString retorna `false` para indicar uma falha de validação, o ASP.NET constrói uma cadeia de caracteres de erro (se necessário) e gera um <xref:System.Web.HttpRequestValidationException>exceção.</xref:System.Web.HttpRequestValidationException>"
  syntax:
    content: protected virtual bool IsValidRequestString (System.Web.HttpContext context, string value, System.Web.Util.RequestValidationSource requestValidationSource, string collectionKey, out int validationFailureIndex);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O contexto da solicitação atual."
    - id: value
      type: System.String
      description: "Os dados da solicitação HTTP para validar."
    - id: requestValidationSource
      type: System.Web.Util.RequestValidationSource
      description: "Uma enumeração que representa a fonte de dados de solicitação que está sendo validados. Esses são os valores possíveis para a enumeração:<xref uid=&quot;langword_csharp_QueryString&quot; name=&quot;QueryString&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Form &quot; name=&quot;Form &quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Cookies&quot; name=&quot;Cookies&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Files&quot; name=&quot;Files&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_RawUrl&quot; name=&quot;RawUrl&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Path&quot; name=&quot;Path&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_PathInfo&quot; name=&quot;PathInfo&quot; href=&quot;&quot;></xref><xref uid=&quot;langword_csharp_Headers&quot; name=&quot;Headers&quot; href=&quot;&quot;></xref>"
    - id: collectionKey
      type: System.String
      description: "A chave da coleção de solicitação do item para validar. Esse parâmetro é opcional. Esse parâmetro é usado se os dados para validar são obtidos de uma coleção. Se não forem para validar os dados de uma coleção, `collectionKey` pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: validationFailureIndex
      type: System.Int32
      description: "Quando este método retorna, indica o ponto de partida com base em zero do texto inválido ou um problema na coleção de solicitação. Esse parâmetro é passado não inicializado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a cadeia de caracteres a ser validado é válida. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Util.RequestValidator.IsValidRequestString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.Util.RequestValidator.#ctor
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: RequestValidator()
  nameWithType: RequestValidator.RequestValidator()
  fullName: System.Web.Util.RequestValidator.RequestValidator()
- uid: System.Web.Util.RequestValidator.Current
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: Current
  nameWithType: RequestValidator.Current
  fullName: System.Web.Util.RequestValidator.Current
- uid: System.Web.Util.RequestValidator
  parent: System.Web.Util
  isExternal: false
  name: RequestValidator
  nameWithType: RequestValidator
  fullName: System.Web.Util.RequestValidator
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.InvokeIsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Util.RequestValidationSource
  parent: System.Web.Util
  isExternal: false
  name: RequestValidationSource
  nameWithType: RequestValidationSource
  fullName: System.Web.Util.RequestValidationSource
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Util.RequestValidator.IsValidRequestString(System.Web.HttpContext,System.String,System.Web.Util.RequestValidationSource,System.String,System.Int32@)
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  nameWithType: RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
  fullName: System.Web.Util.RequestValidator.IsValidRequestString(HttpContext,String,RequestValidationSource,String,Int32)
- uid: System.Web.Util.RequestValidator.#ctor*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: RequestValidator
  nameWithType: RequestValidator.RequestValidator
- uid: System.Web.Util.RequestValidator.Current*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: Current
  nameWithType: RequestValidator.Current
- uid: System.Web.Util.RequestValidator.InvokeIsValidRequestString*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: InvokeIsValidRequestString
  nameWithType: RequestValidator.InvokeIsValidRequestString
- uid: System.Web.Util.RequestValidator.IsValidRequestString*
  parent: System.Web.Util.RequestValidator
  isExternal: false
  name: IsValidRequestString
  nameWithType: RequestValidator.IsValidRequestString
