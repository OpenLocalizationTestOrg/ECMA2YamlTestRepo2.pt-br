### YamlMime:ManagedReference
items:
- uid: System.Drawing.Brush
  id: Brush
  children:
  - System.Drawing.Brush.#ctor
  - System.Drawing.Brush.Clone
  - System.Drawing.Brush.Dispose
  - System.Drawing.Brush.Dispose(System.Boolean)
  - System.Drawing.Brush.Finalize
  - System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  langs:
  - csharp
  name: Brush
  nameWithType: Brush
  fullName: System.Drawing.Brush
  type: Class
  summary: "Define os objetos usados para preencher os interiores das formas de gráficos como retângulos, elipses, tortas, polígonos e caminhos."
  remarks: "Essa é uma classe base abstrata e não pode ser instanciada. Para criar um objeto pincel, use classes derivadas de pincel, como <xref:System.Drawing.SolidBrush>, <xref:System.Drawing.TextureBrush>e <xref:System.Drawing.Drawing2D.LinearGradientBrush>.</xref:System.Drawing.Drawing2D.LinearGradientBrush> </xref:System.Drawing.TextureBrush> </xref:System.Drawing.SolidBrush>"
  syntax:
    content: 'public abstract class Brush : MarshalByRefObject, ICloneable, IDisposable'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements:
  - System.ICloneable
  - System.IDisposable
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Drawing.Brush.#ctor
  id: '#ctor'
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Brush()
  nameWithType: Brush.Brush()
  fullName: System.Drawing.Brush.Brush()
  type: Constructor
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Drawing.Brush&quot;> </xref> classe."
  syntax:
    content: protected Brush ();
    parameters: []
  overload: System.Drawing.Brush.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.Clone
  id: Clone
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Clone()
  nameWithType: Brush.Clone()
  fullName: System.Drawing.Brush.Clone()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Quando substituído em uma classe derivada, cria uma cópia exata desta <xref href=&quot;System.Drawing.Brush&quot;> </xref>."
  syntax:
    content: public abstract object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "O novo <xref href=&quot;System.Drawing.Brush&quot;> </xref> que esse método cria."
  overload: System.Drawing.Brush.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.Dispose
  id: Dispose
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Dispose()
  nameWithType: Brush.Dispose()
  fullName: System.Drawing.Brush.Dispose()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Libera todos os recursos usados por este <xref href=&quot;System.Drawing.Brush&quot;> </xref> objeto."
  remarks: "Chamar Dispose permite que os recursos usados por este <xref:System.Drawing.Brush>objeto a ser realocada para outros fins.</xref:System.Drawing.Brush>       Chamar Dispose quando terminar de usar o <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> O método Dispose deixa a <xref:System.Drawing.Brush>em um estado inutilizável.</xref:System.Drawing.Brush> Depois de chamar Dispose, você deve liberar todas as referências para o <xref:System.Drawing.Brush>para o coletor de lixo possa recuperar a memória que o <xref:System.Drawing.Brush>estava ocupando.</xref:System.Drawing.Brush> </xref:System.Drawing.Brush> Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada Dispose antes de liberar sua última referência a <xref:System.Drawing.Brush>.</xref:System.Drawing.Brush> Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.Drawing.Brush>do objeto `Finalize` método.</xref:System.Drawing.Brush>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Drawing.Brush.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Brush.Dispose(Boolean)
  fullName: System.Drawing.Brush.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Libera os recursos não gerenciados usados pelo <xref href=&quot;System.Drawing.Brush&quot;> </xref> e, opcionalmente, libera os recursos gerenciados."
  remarks: "Este método é chamado pelo público `Dispose()`método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose()`invoca o protegido `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Drawing.Brush>referências.</xref:System.Drawing.Brush> Este método chama o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para liberar apenas recursos não gerenciados."
  overload: System.Drawing.Brush.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.Finalize
  id: Finalize
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: Finalize()
  nameWithType: Brush.Finalize()
  fullName: System.Drawing.Brush.Finalize()
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Permite que um objeto tente liberar recursos e executar outras operações de limpeza antes que ela é recuperada pela coleta de lixo."
  syntax:
    content: ~Brush ();
    parameters: []
  overload: System.Drawing.Brush.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  id: SetNativeBrush(System.IntPtr)
  parent: System.Drawing.Brush
  langs:
  - csharp
  name: SetNativeBrush(IntPtr)
  nameWithType: Brush.SetNativeBrush(IntPtr)
  fullName: System.Drawing.Brush.SetNativeBrush(IntPtr)
  type: Method
  assemblies:
  - System.Drawing
  namespace: System.Drawing
  summary: "Em uma classe derivada, define uma referência um [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] objeto pincel."
  syntax:
    content: protected void SetNativeBrush (IntPtr brush);
    parameters:
    - id: brush
      type: System.IntPtr
      description: "Um ponteiro para o [!INCLUDE[ndptecgdiplus](~/add/includes/ndptecgdiplus-md.md)] objeto pincel."
  overload: System.Drawing.Brush.SetNativeBrush*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.Drawing.Brush.#ctor
  parent: System.Drawing.Brush
  isExternal: false
  name: Brush()
  nameWithType: Brush.Brush()
  fullName: System.Drawing.Brush.Brush()
- uid: System.Drawing.Brush.Clone
  parent: System.Drawing.Brush
  isExternal: false
  name: Clone()
  nameWithType: Brush.Clone()
  fullName: System.Drawing.Brush.Clone()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Drawing.Brush.Dispose
  parent: System.Drawing.Brush
  isExternal: false
  name: Dispose()
  nameWithType: Brush.Dispose()
  fullName: System.Drawing.Brush.Dispose()
- uid: System.Drawing.Brush.Dispose(System.Boolean)
  parent: System.Drawing.Brush
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Brush.Dispose(Boolean)
  fullName: System.Drawing.Brush.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Drawing.Brush.Finalize
  parent: System.Drawing.Brush
  isExternal: false
  name: Finalize()
  nameWithType: Brush.Finalize()
  fullName: System.Drawing.Brush.Finalize()
- uid: System.Drawing.Brush.SetNativeBrush(System.IntPtr)
  parent: System.Drawing.Brush
  isExternal: false
  name: SetNativeBrush(IntPtr)
  nameWithType: Brush.SetNativeBrush(IntPtr)
  fullName: System.Drawing.Brush.SetNativeBrush(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Drawing.Brush.#ctor*
  parent: System.Drawing.Brush
  isExternal: false
  name: Brush
  nameWithType: Brush.Brush
- uid: System.Drawing.Brush.Clone*
  parent: System.Drawing.Brush
  isExternal: false
  name: Clone
  nameWithType: Brush.Clone
- uid: System.Drawing.Brush.Dispose*
  parent: System.Drawing.Brush
  isExternal: false
  name: Dispose
  nameWithType: Brush.Dispose
- uid: System.Drawing.Brush.Finalize*
  parent: System.Drawing.Brush
  isExternal: false
  name: Finalize
  nameWithType: Brush.Finalize
- uid: System.Drawing.Brush.SetNativeBrush*
  parent: System.Drawing.Brush
  isExternal: false
  name: SetNativeBrush
  nameWithType: Brush.SetNativeBrush
