### YamlMime:ManagedReference
items:
- uid: System.Web.Management.EventLogWebEventProvider
  id: EventLogWebEventProvider
  children:
  - System.Web.Management.EventLogWebEventProvider.Flush
  - System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  - System.Web.Management.EventLogWebEventProvider.Shutdown
  langs:
  - csharp
  name: EventLogWebEventProvider
  nameWithType: EventLogWebEventProvider
  fullName: System.Web.Management.EventLogWebEventProvider
  type: Class
  summary: "Implementa um provedor de eventos que registra eventos de monitoramento de integridade do ASP.NET no Log de eventos de aplicativo do Windows."
  remarks: "Monitoramento de integridade do ASP.NET permite que a equipe de produção e operações gerenciar a implantação de aplicativos da Web. O <xref:System.Web.Management>namespace contém os tipos de eventos responsáveis pela compactação de dados de status de integridade do aplicativo e os tipos de provedor responsáveis pelo processamento de dados.</xref:System.Web.Management> Ele também contém tipos de suporte para ajudá-lo durante o gerenciamento de eventos de integridade.       O EventLogWebEventProvider, a auditoria de falha e os eventos de monitoramento de integridade de erro são configurados (habilitado) por padrão. Isso significa que a auditoria de falha e o erro eventos de monitoramento de integridade são registrados no Log de eventos de aplicativo do Windows por padrão.      > [!NOTE] > Na maioria dos casos, você será capaz de usar os tipos de monitoramento de integridade do ASP.NET, conforme implementado e controlará o sistema de monitoramento de integridade, especificando valores a `healthMonitoring` seção de configuração. Você também pode derivar dos tipos de monitoramento de integridade para criar seus próprios eventos personalizados e provedores. Para obter um exemplo de criação de um provedor personalizado, consulte [como: implementar a integridade de monitoramento personalizado provedor exemplo](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following configuration file excerpt shows how to specify a provider of type EventLogWebEventProvider to handle success audit events. The EventLogWebEventProvider and the failure audit health-event types to monitor are configured by default. To monitor the success audits, you need to configure them, as shown in the example code.  \n  \n```  \n<healthMonitoring   \n  enabled=\"true\" heartbeatInterval=\"10\">  \n  \n  <rule>  \n    <add name=\"Success Audits Default\"  \n      eventName=\"Success Audits\"  \n      provider=\"EventLogProvider\"  \n      profile=\"Default\"  \n      minInterval=\"00:01:00\" />  \n  </rule>  \n  \n</healthMonitoring>  \n```"
  syntax:
    content: 'public sealed class EventLogWebEventProvider : System.Web.Management.WebEventProvider'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  - System.Web.Management.WebEventProvider
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Flush
  id: Flush
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Flush()
  nameWithType: EventLogWebEventProvider.Flush()
  fullName: System.Web.Management.EventLogWebEventProvider.Flush()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Move os eventos de buffer do provedor no log de eventos."
  remarks: "Quando este método é chamado, todos os eventos no buffer do provedor são gravados imediatamente ao Log de eventos de aplicativo do Windows, independentemente de quanto tempo decorrido desde a última gravação ou quantos eventos no buffer. A hora da última gravação é redefinida para o tempo da ação de liberação. Se o mecanismo de armazenamento em buffer não está habilitado, chamar este método não tem nenhum efeito."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Web.Management.EventLogWebEventProvider.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  id: Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Initialize(String,NameValueCollection)
  nameWithType: EventLogWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.EventLogWebEventProvider.Initialize(String,NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Define os valores iniciais para este objeto."
  remarks: "Este método é chamado para inicializar o <xref:System.Web.Management.EventLogWebEventProvider>com o nome conforme especificado no arquivo de configuração e definições de configuração.</xref:System.Web.Management.EventLogWebEventProvider>"
  syntax:
    content: public override void Initialize (string name, System.Collections.Specialized.NameValueCollection config);
    parameters:
    - id: name
      type: System.String
      description: "O nome usado no arquivo de configuração para identificar esse provedor."
    - id: config
      type: System.Collections.Specialized.NameValueCollection
      description: "Um <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> que especifica os atributos atribuídos para esse provedor no arquivo de configuração."
  overload: System.Web.Management.EventLogWebEventProvider.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  id: ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: ProcessEvent(WebBaseEvent)
  nameWithType: EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Processa o evento passado para o provedor."
  remarks: "Esse é o método que o monitoramento de integridade do ASP.NET chama para iniciar o processamento do evento."
  syntax:
    content: public override void ProcessEvent (System.Web.Management.WebBaseEvent eventRaised);
    parameters:
    - id: eventRaised
      type: System.Web.Management.WebBaseEvent
      description: "O <xref href=&quot;System.Web.Management.WebBaseEvent&quot;> </xref> o objeto para o processo."
  overload: System.Web.Management.EventLogWebEventProvider.ProcessEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown
  id: Shutdown
  parent: System.Web.Management.EventLogWebEventProvider
  langs:
  - csharp
  name: Shutdown()
  nameWithType: EventLogWebEventProvider.Shutdown()
  fullName: System.Web.Management.EventLogWebEventProvider.Shutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Management
  summary: "Executa tarefas associadas a desligar o provedor."
  remarks: "ASP.NET chama o método de desligamento quando o domínio de aplicativo que hospeda o aplicativo Web é encerrado. O método é chamado para executar tarefas que permitirá que o aplicativo terminar normalmente."
  syntax:
    content: public override void Shutdown ();
    parameters: []
  overload: System.Web.Management.EventLogWebEventProvider.Shutdown*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Management.WebEventProvider
  isExternal: false
  name: System.Web.Management.WebEventProvider
- uid: System.Web.Management.EventLogWebEventProvider.Flush
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Flush()
  nameWithType: EventLogWebEventProvider.Flush()
  fullName: System.Web.Management.EventLogWebEventProvider.Flush()
- uid: System.Web.Management.EventLogWebEventProvider.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Initialize(String,NameValueCollection)
  nameWithType: EventLogWebEventProvider.Initialize(String,NameValueCollection)
  fullName: System.Web.Management.EventLogWebEventProvider.Initialize(String,NameValueCollection)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent(System.Web.Management.WebBaseEvent)
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: ProcessEvent(WebBaseEvent)
  nameWithType: EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
  fullName: System.Web.Management.EventLogWebEventProvider.ProcessEvent(WebBaseEvent)
- uid: System.Web.Management.WebBaseEvent
  parent: System.Web.Management
  isExternal: false
  name: WebBaseEvent
  nameWithType: WebBaseEvent
  fullName: System.Web.Management.WebBaseEvent
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Shutdown()
  nameWithType: EventLogWebEventProvider.Shutdown()
  fullName: System.Web.Management.EventLogWebEventProvider.Shutdown()
- uid: System.Web.Management.EventLogWebEventProvider.Flush*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Flush
  nameWithType: EventLogWebEventProvider.Flush
- uid: System.Web.Management.EventLogWebEventProvider.Initialize*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Initialize
  nameWithType: EventLogWebEventProvider.Initialize
- uid: System.Web.Management.EventLogWebEventProvider.ProcessEvent*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: ProcessEvent
  nameWithType: EventLogWebEventProvider.ProcessEvent
- uid: System.Web.Management.EventLogWebEventProvider.Shutdown*
  parent: System.Web.Management.EventLogWebEventProvider
  isExternal: false
  name: Shutdown
  nameWithType: EventLogWebEventProvider.Shutdown
