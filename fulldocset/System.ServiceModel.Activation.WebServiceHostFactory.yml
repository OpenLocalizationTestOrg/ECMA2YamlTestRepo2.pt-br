### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Activation.WebServiceHostFactory
  id: WebServiceHostFactory
  children:
  - System.ServiceModel.Activation.WebServiceHostFactory.#ctor
  - System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  langs:
  - csharp
  name: WebServiceHostFactory
  nameWithType: WebServiceHostFactory
  fullName: System.ServiceModel.Activation.WebServiceHostFactory
  type: Class
  summary: "Uma fábrica que fornece instâncias da <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> em ambientes em que a instância de host é criada dinamicamente em resposta a mensagens de entrada de hospedagem gerenciado."
  remarks: "Os ambientes de hospedagem gerenciados que oferece suporte à ativação dinâmica são serviços de informações da Internet (IIS) e o serviço de ativação de processos do Windows (WAS).       Se você tiver implementado um personalizado derivado do <xref:System.ServiceModel.Web.WebServiceHost>, considere também a implementação de uma fábrica que deriva da classe WebServiceHostFactory.</xref:System.ServiceModel.Web.WebServiceHost>"
  example:
  - "The following example shows how to derive a class from WebServiceHostFactory.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n To have your derived Web service host factory used, specify it in a .SVC file. The following example shows the syntax used in a .svc file.  \n  \n```  \n<%@ServiceHost language=c# Service=\"Microsoft.Samples.MyWCFService\" Factory=\"Microsoft.Samples.MyWebServiceHostFactory\" %>  \n```"
  syntax:
    content: 'public class WebServiceHostFactory : System.ServiceModel.Activation.ServiceHostFactory'
  inheritance:
  - System.ServiceModel.Activation.ServiceHostFactory
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WebServiceHostFactory.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Activation.WebServiceHostFactory
  langs:
  - csharp
  name: WebServiceHostFactory()
  nameWithType: WebServiceHostFactory.WebServiceHostFactory()
  fullName: System.ServiceModel.Activation.WebServiceHostFactory.WebServiceHostFactory()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Activation
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Activation.WebServiceHostFactory&quot;> </xref> classe."
  remarks: "Este método não é chamado diretamente. Ele é chamado quando um serviço está sendo ativado dinamicamente."
  syntax:
    content: public WebServiceHostFactory ();
    parameters: []
  overload: System.ServiceModel.Activation.WebServiceHostFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  id: CreateServiceHost(System.Type,System.Uri[])
  parent: System.ServiceModel.Activation.WebServiceHostFactory
  langs:
  - csharp
  name: CreateServiceHost(Type,Uri[])
  nameWithType: WebServiceHostFactory.CreateServiceHost(Type,Uri[])
  fullName: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(Type,Uri[])
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Activation
  summary: "Cria uma instância especificada <xref href=&quot;System.ServiceModel.Web.WebServiceHost&quot;> </xref> derivado da classe com os endereços de base especificados."
  remarks: "Substitua este método para criar o tipo de host de serviço necessários e executar qualquer processamento necessário."
  example:
  - "The following example shows a basic implementation of this method.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]"
  syntax:
    content: protected override System.ServiceModel.ServiceHost CreateServiceHost (Type serviceType, Uri[] baseAddresses);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O tipo de host de serviço para criar."
    - id: baseAddresses
      type: System.Uri[]
      description: "Uma matriz de endereços de base para o serviço."
    return:
      type: System.ServiceModel.ServiceHost
      description: "Uma instância de um <xref href=&quot;System.ServiceModel.ServiceHost&quot;> </xref> classe derivada."
  overload: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Activation.ServiceHostFactory
  isExternal: false
  name: System.ServiceModel.Activation.ServiceHostFactory
- uid: System.ServiceModel.Activation.WebServiceHostFactory.#ctor
  parent: System.ServiceModel.Activation.WebServiceHostFactory
  isExternal: false
  name: WebServiceHostFactory()
  nameWithType: WebServiceHostFactory.WebServiceHostFactory()
  fullName: System.ServiceModel.Activation.WebServiceHostFactory.WebServiceHostFactory()
- uid: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(System.Type,System.Uri[])
  parent: System.ServiceModel.Activation.WebServiceHostFactory
  isExternal: false
  name: CreateServiceHost(Type,Uri[])
  nameWithType: WebServiceHostFactory.CreateServiceHost(Type,Uri[])
  fullName: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost(Type,Uri[])
- uid: System.ServiceModel.ServiceHost
  parent: System.ServiceModel
  isExternal: false
  name: ServiceHost
  nameWithType: ServiceHost
  fullName: System.ServiceModel.ServiceHost
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Uri[]
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri[]
  spec.csharp:
  - uid: System.Uri
    name: Uri
    nameWithType: Uri
    fullName: Uri[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ServiceModel.Activation.WebServiceHostFactory.#ctor*
  parent: System.ServiceModel.Activation.WebServiceHostFactory
  isExternal: false
  name: WebServiceHostFactory
  nameWithType: WebServiceHostFactory.WebServiceHostFactory
- uid: System.ServiceModel.Activation.WebServiceHostFactory.CreateServiceHost*
  parent: System.ServiceModel.Activation.WebServiceHostFactory
  isExternal: false
  name: CreateServiceHost
  nameWithType: WebServiceHostFactory.CreateServiceHost
