### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  id: ProtectedKey
  children:
  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])
  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes
  - System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  langs:
  - csharp
  name: ProtectedKey
  nameWithType: ProtectedKey
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  type: Class
  summary: "Representa o conteúdo de um wst:Entropy ou um elemento wst:RequestedProofToken dentro da RequestSecurityToken e RequestSecurityTokenResponse."
  remarks: "Representa o conteúdo de um wst:Entropy ou um elemento wst:RequestedProofToken dentro de wst:RequestSecurityToken (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken>) e wst:RequestSecurityTokenResponse (<xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse>) mensagens.</xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityTokenResponse> </xref:System.IdentityModel.Protocols.WSTrust.RequestSecurityToken>       Para obter mais informações sobre o elemento que essa classe representa, consulte a versão da especificação WS-Trust que se aplica ao seu cenário."
  syntax:
    content: public class ProtectedKey
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])
  id: '#ctor(System.Byte[])'
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  langs:
  - csharp
  name: ProtectedKey(Byte[])
  nameWithType: ProtectedKey.ProtectedKey(Byte[])
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey(Byte[])
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Protocols.WSTrust.ProtectedKey&quot;> </xref> classe sem criptografia."
  remarks: "Use este construtor para enviar o material da chave em texto não criptografado. O <xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials%2A>está definida como `null` no novo <xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey>instância.</xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey> </xref:System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials%2A>"
  syntax:
    content: public ProtectedKey (byte[] secret);
    parameters:
    - id: secret
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém o material da chave a ser protegido.</xref:System.Byte>"
  overload: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  id: '#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)'
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  langs:
  - csharp
  name: ProtectedKey(Byte[],EncryptingCredentials)
  nameWithType: ProtectedKey.ProtectedKey(Byte[],EncryptingCredentials)
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey(Byte[],EncryptingCredentials)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Protocols.WSTrust.ProtectedKey&quot;> </xref> classe usando as credenciais de criptografia especificadas."
  remarks: "Use este construtor para enviar o material da chave criptografado."
  syntax:
    content: public ProtectedKey (byte[] secret, System.IdentityModel.Tokens.EncryptingCredentials wrappingCredentials);
    parameters:
    - id: secret
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém o material da chave a ser protegido.</xref:System.Byte>"
    - id: wrappingCredentials
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.EncryptingCredentials&quot;> </xref> que contém as credenciais usadas para criptografar o material da chave."
  overload: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes
  id: GetKeyBytes
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  langs:
  - csharp
  name: GetKeyBytes()
  nameWithType: ProtectedKey.GetKeyBytes()
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Obtém o material da chave."
  syntax:
    content: public byte[] GetKeyBytes ();
    parameters: []
    return:
      type: System.Byte[]
      description: "Uma matriz de <xref:System.Byte>que contém o material da chave.</xref:System.Byte>"
  overload: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  id: WrappingCredentials
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  langs:
  - csharp
  name: WrappingCredentials
  nameWithType: ProtectedKey.WrappingCredentials
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Protocols.WSTrust
  summary: "Obtém as credenciais de criptografia da chave."
  syntax:
    content: public System.IdentityModel.Tokens.EncryptingCredentials WrappingCredentials { get; }
    return:
      type: System.IdentityModel.Tokens.EncryptingCredentials
      description: "Um <xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials>que representa as credenciais usadas para criptografar a chave.</xref:System.IdentityModel.SecurityTokenService.EncryptingCredentials> <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>indica que a chave não é criptografada."
  overload: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[])
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: ProtectedKey(Byte[])
  nameWithType: ProtectedKey.ProtectedKey(Byte[])
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey(Byte[])
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor(System.Byte[],System.IdentityModel.Tokens.EncryptingCredentials)
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: ProtectedKey(Byte[],EncryptingCredentials)
  nameWithType: ProtectedKey.ProtectedKey(Byte[],EncryptingCredentials)
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.ProtectedKey(Byte[],EncryptingCredentials)
- uid: System.IdentityModel.Tokens.EncryptingCredentials
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: EncryptingCredentials
  nameWithType: EncryptingCredentials
  fullName: System.IdentityModel.Tokens.EncryptingCredentials
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: GetKeyBytes()
  nameWithType: ProtectedKey.GetKeyBytes()
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes()
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: WrappingCredentials
  nameWithType: ProtectedKey.WrappingCredentials
  fullName: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.#ctor*
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: ProtectedKey
  nameWithType: ProtectedKey.ProtectedKey
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.GetKeyBytes*
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: GetKeyBytes
  nameWithType: ProtectedKey.GetKeyBytes
- uid: System.IdentityModel.Protocols.WSTrust.ProtectedKey.WrappingCredentials*
  parent: System.IdentityModel.Protocols.WSTrust.ProtectedKey
  isExternal: false
  name: WrappingCredentials
  nameWithType: ProtectedKey.WrappingCredentials
