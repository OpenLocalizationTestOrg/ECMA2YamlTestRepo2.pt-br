### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  id: BinaryServerFormatterSink
  children:
  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)
  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink
  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties
  - System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel
  langs:
  - csharp
  name: BinaryServerFormatterSink
  nameWithType: BinaryServerFormatterSink
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  type: Class
  summary: "Fornece a implementação de um coletor do formatador do servidor que usa o <xref href=&quot;System.Runtime.Serialization.Formatters.Binary.BinaryFormatter&quot;> </xref>."
  remarks: "The request stream propagates from the server transport sink through the server channel sinks until it reaches the appropriate formatter sink. The formatter sink deserializes the message and passes it through the pipeline. A special dispatch sink is inserted at the end of the channel sink chain by the <xref:System.Runtime.Remoting.Channels.ChannelServices.CreateServerChannelSinkChain%2A?displayProperty=fullName> method, which is called by server channels to create the server channel sink chains. When the message reaches the dispatch sink, the dispatch sink passes the message to the remoting infrastructure.  \n  \n The following table shows the sink configuration properties that can be specified for the current sink provider.  \n  \n|Property|Description|  \n|--------------|-----------------|  \n|`includeVersions`|Specifies whether the formatter will include versioning information. Values `true` or `false`.|  \n|`strictBinding`|Indicates that a receiving formatter will first try to identify the type using complete version information if it exists before using only the type name and assembly name without version information. Values `true` or `false`. The default for both system-provided formatters is `false`.|  \n|`typeFilterLevel`|A string value that specifies the level of automatic deserialization that a server channel attempts. Supported values are `Low` (the default) and `Full`. For details about deserialization levels, see [&#91;\\<topic://cpconAutomaticDeserializationInNETRemoting>&#93;](http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b).<br /><br /> This property is supported only by the .NET Framework version 1.1 on the following platforms: Windows 98, Windows NT 4.0, Windows Millennium Edition, Windows 2000, Windows XP Home Edition, Windows XP Professional, and Windows Server 2003 family.|  \n  \n> [!IMPORTANT]\n>  Using an instance of this object with untrusted data or across an unsecure channel is a security risk. Use this object only with trusted data and across a secure channel. For more information, see [Untrusted Data Security Risks](http://go.microsoft.com/fwlink/?LinkId=330378)."
  syntax:
    content: 'public class BinaryServerFormatterSink : System.Runtime.Remoting.Channels.IServerChannelSink'
  inheritance:
  - System.Object
  implements:
  - System.Runtime.Remoting.Channels.IServerChannelSink
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)
  id: '#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)'
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  langs:
  - csharp
  name: BinaryServerFormatterSink(BinaryServerFormatterSink+Protocol,IServerChannelSink,IChannelReceiver)
  nameWithType: BinaryServerFormatterSink.BinaryServerFormatterSink(BinaryServerFormatterSink+Protocol,IServerChannelSink,IChannelReceiver)
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.BinaryServerFormatterSink(BinaryServerFormatterSink+Protocol,IServerChannelSink,IChannelReceiver)
  type: Constructor
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels
  syntax:
    content: public BinaryServerFormatterSink (System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol protocol, System.Runtime.Remoting.Channels.IServerChannelSink nextSink, System.Runtime.Remoting.Channels.IChannelReceiver receiver);
    parameters:
    - id: protocol
      type: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol
      description: "A ser adicionado."
    - id: nextSink
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "A ser adicionado."
    - id: receiver
      type: System.Runtime.Remoting.Channels.IChannelReceiver
      description: "A ser adicionado."
  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  id: AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  langs:
  - csharp
  name: AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  nameWithType: BinaryServerFormatterSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels
  summary: "Processamento de solicitações de resposta de uma chamada de método que é enviada de forma assíncrona."
  syntax:
    content: public void AsyncProcessResponse (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers, System.IO.Stream stream);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
      description: "Uma pilha de Coletores que está gerando o coletor de transporte do servidor."
    - id: state
      type: System.Object
      description: "Informações que está associadas com o coletor atual, gerado no lado de solicitação e necessária no lado de resposta."
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "A mensagem de resposta."
    - id: headers
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "Os cabeçalhos para adicionar à mensagem de retorno é o cabeçalho para o cliente."
    - id: stream
      type: System.IO.Stream
      description: "O fluxo que é o cabeçalho para o coletor de transporte."
  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  id: GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  langs:
  - csharp
  name: GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  nameWithType: BinaryServerFormatterSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels
  summary: "Retorna o <xref:System.IO.Stream>até que a mensagem de resposta fornecida é a ser serializado.</xref:System.IO.Stream>"
  remarks: "Esse método é chamado quando um fluxo de resposta deve ser criada."
  syntax:
    content: public System.IO.Stream GetResponseStream (System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack sinkStack, object state, System.Runtime.Remoting.Messaging.IMessage msg, System.Runtime.Remoting.Channels.ITransportHeaders headers);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
      description: "Uma pilha de Coletores que está gerando o coletor de transporte do servidor."
    - id: state
      type: System.Object
      description: "Informações que está associadas com o coletor atual, gerado no lado de solicitação e necessária no lado de resposta."
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "A mensagem de resposta para serializar."
    - id: headers
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "Os cabeçalhos para colocar no fluxo de resposta ao cliente."
    return:
      type: System.IO.Stream
      description: "O <xref:System.IO.Stream>até que a mensagem de resposta fornecida é a ser serializado.</xref:System.IO.Stream>"
  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink
  id: NextChannelSink
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  langs:
  - csharp
  name: NextChannelSink
  nameWithType: BinaryServerFormatterSink.NextChannelSink
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels
  summary: "Obtém o próximo <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSink&quot;> </xref> na cadeia de coletor."
  syntax:
    content: public System.Runtime.Remoting.Channels.IServerChannelSink NextChannelSink { get; }
    return:
      type: System.Runtime.Remoting.Channels.IServerChannelSink
      description: "O próximo <xref href=&quot;System.Runtime.Remoting.Channels.IServerChannelSink&quot;> </xref> na cadeia de coletor."
  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  id: ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  langs:
  - csharp
  name: ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  nameWithType: BinaryServerFormatterSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  type: Method
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels
  summary: "Mensagem de solicitações de processamento do coletor atual."
  remarks: "Trabalho de proxy é converter uma chamada de método é invocada nela em uma mensagem. A mensagem, que implementa o <xref:System.Runtime.Remoting.Messaging.IMessage>interface, é passado do lado do cliente para o final do servidor invocando <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A>em objetos de coletor de mensagem.</xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> </xref:System.Runtime.Remoting.Messaging.IMessage> Coletores de mensagem são encadeadas, que significa que cada receptor da mensagem é responsável por chamar <xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A>no coletor próxima mensagem depois que o coletor de mensagem atual concluiu seu trabalho.</xref:System.Runtime.Remoting.Channels.IServerChannelSink.ProcessMessage%2A> Por exemplo, um coletor de mensagens relacionadas a sincronização pode causar um bloqueio ser adquirido ou liberado e delegado para o coletor de mensagem downstream.       Quando o coletor de canal de formatador obtém uma mensagem que precisa ser enviada pelo canal, ele chama <xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A>, passando a mensagem como um parâmetro.</xref:System.Runtime.Remoting.Messaging.IMessageSink.SyncProcessMessage%2A> O coletor do formatador, em seguida, cria a matriz de cabeçalho de transporte e chama <xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A>no coletor do formatador.</xref:System.Runtime.Remoting.Channels.IClientChannelSink.GetRequestStream%2A> Esta chamada é encaminhada para baixo da cadeia de coletor e qualquer coletor pode criar um fluxo de solicitação que será passado para o coletor do formatador. Depois disso, chame retorna, a mensagem é serializada, <xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A>é chamado da primeira cadeia na cadeia de coletor, e a mensagem é passada para o coletor de canal.</xref:System.Runtime.Remoting.Channels.IClientChannelSink.ProcessMessage%2A>       Depois que o canal coletores receber a mensagem, pode gravar dados no fluxo, adicionar cabeçalhos para a matriz de cabeçalho e adicionam-se à pilha do coletor antes de encaminhar a chamada para o coletor de Avançar. Quando a chamada alcançar o coletor de transporte no final da cadeia, o coletor de transporte envia os cabeçalhos e serializado mensagem sobre o canal para o servidor, em que o processo é revertido.       Quando a mensagem fica ao lado do servidor, o coletor de transporte e recupera os cabeçalhos serializado mensagem do fluxo e encaminha-os por meio da cadeia de coletor até que o coletor do formatador for atingido. O coletor do formatador em seguida desserializa a mensagem e encaminha para a infraestrutura de comunicação remota. Em seguida, a infraestrutura de comunicação remota transforma a mensagem em uma chamada de método e chama o objeto de servidor."
  syntax:
    content: public System.Runtime.Remoting.Channels.ServerProcessing ProcessMessage (System.Runtime.Remoting.Channels.IServerChannelSinkStack sinkStack, System.Runtime.Remoting.Messaging.IMessage requestMsg, System.Runtime.Remoting.Channels.ITransportHeaders requestHeaders, System.IO.Stream requestStream, out System.Runtime.Remoting.Messaging.IMessage responseMsg, out System.Runtime.Remoting.Channels.ITransportHeaders responseHeaders, out System.IO.Stream responseStream);
    parameters:
    - id: sinkStack
      type: System.Runtime.Remoting.Channels.IServerChannelSinkStack
      description: "Uma pilha de canal coletores que chamou o coletor atual."
    - id: requestMsg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "A mensagem que contém a solicitação."
    - id: requestHeaders
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "Cabeçalhos que são recuperados da mensagem de entrada do cliente."
    - id: requestStream
      type: System.IO.Stream
      description: "O fluxo que precisa ser processada e passados para o coletor de desserialização."
    - id: responseMsg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "Quando este método retorna, contém um <xref href=&quot;System.Runtime.Remoting.Messaging.IMessage&quot;> </xref> que contém a mensagem de resposta. Esse parâmetro é passado não inicializado."
    - id: responseHeaders
      type: System.Runtime.Remoting.Channels.ITransportHeaders
      description: "Quando este método retorna, contém um <xref href=&quot;System.Runtime.Remoting.Channels.ITransportHeaders&quot;> </xref> que contém os cabeçalhos para adicionar à mensagem de retorno é o cabeçalho para o cliente. Esse parâmetro é passado não inicializado."
    - id: responseStream
      type: System.IO.Stream
      description: "Quando este método retorna, contém um <xref:System.IO.Stream>que é o título para o coletor de transporte.</xref:System.IO.Stream> Esse parâmetro é passado não inicializado."
    return:
      type: System.Runtime.Remoting.Channels.ServerProcessing
      description: "Um <xref href=&quot;System.Runtime.Remoting.Channels.ServerProcessing&quot;> </xref> valor de status que fornece informações sobre como a mensagem foi processada."
  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties
  id: Properties
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  langs:
  - csharp
  name: Properties
  nameWithType: BinaryServerFormatterSink.Properties
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels
  summary: "Obtém um <xref:System.Collections.IDictionary>de propriedades para o coletor de canal atual.</xref:System.Collections.IDictionary>"
  remarks: "Para obter mais informações, consulte [[\\<topic://cpconchannelformatterconfigurationproperties >]](http://msdn.microsoft.com/en-us/226ecf74-ebbd-4ea0-a701-dcf4441deefe)."
  syntax:
    content: public System.Collections.IDictionary Properties { get; }
    return:
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>de propriedades para o coletor de canal atual.</xref:System.Collections.IDictionary>"
  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel
  id: TypeFilterLevel
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  langs:
  - csharp
  name: TypeFilterLevel
  nameWithType: BinaryServerFormatterSink.TypeFilterLevel
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel
  type: Property
  assemblies:
  - System.Runtime.Remoting
  namespace: System.Runtime.Remoting.Channels
  summary: "Obtém ou define o <xref uid=&quot;langword_csharp_TypeFilterLevel&quot; name=&quot;TypeFilterLevel&quot; href=&quot;&quot;> </xref> valor automático de desserialização que o <xref uid=&quot;langword_csharp_BinaryServerFormatterSink&quot; name=&quot;BinaryServerFormatterSink&quot; href=&quot;&quot;> </xref> executa."
  remarks: "Valores com suporte são `Low` (o padrão) e `Full`. Para obter detalhes sobre os níveis de desserialização, consulte [desserialização automática no .NET Remoting](http://msdn.microsoft.com/en-us/313a0e88-5b2b-4a17-8391-0ddf9f7a787b)."
  syntax:
    content: public System.Runtime.Serialization.Formatters.TypeFilterLevel TypeFilterLevel { get; set; }
    return:
      type: System.Runtime.Serialization.Formatters.TypeFilterLevel
      description: "O <xref uid=&quot;langword_csharp_TypeFilterLevel&quot; name=&quot;TypeFilterLevel&quot; href=&quot;&quot;> </xref> que representa o nível atual de desserialização automática."
  overload: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor(System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol,System.Runtime.Remoting.Channels.IServerChannelSink,System.Runtime.Remoting.Channels.IChannelReceiver)
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: BinaryServerFormatterSink(BinaryServerFormatterSink+Protocol,IServerChannelSink,IChannelReceiver)
  nameWithType: BinaryServerFormatterSink.BinaryServerFormatterSink(BinaryServerFormatterSink+Protocol,IServerChannelSink,IChannelReceiver)
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.BinaryServerFormatterSink(BinaryServerFormatterSink+Protocol,IServerChannelSink,IChannelReceiver)
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Protocol
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: BinaryServerFormatterSink+Protocol
  nameWithType: BinaryServerFormatterSink+Protocol
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink+Protocol
- uid: System.Runtime.Remoting.Channels.IServerChannelSink
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSink
  nameWithType: IServerChannelSink
  fullName: System.Runtime.Remoting.Channels.IServerChannelSink
- uid: System.Runtime.Remoting.Channels.IChannelReceiver
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IChannelReceiver
  nameWithType: IChannelReceiver
  fullName: System.Runtime.Remoting.Channels.IChannelReceiver
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream)
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  nameWithType: BinaryServerFormatterSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders,Stream)
- uid: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerResponseChannelSinkStack
  nameWithType: IServerResponseChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack
- uid: System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Channels.ITransportHeaders
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ITransportHeaders
  nameWithType: ITransportHeaders
  fullName: System.Runtime.Remoting.Channels.ITransportHeaders
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(System.Runtime.Remoting.Channels.IServerResponseChannelSinkStack,System.Object,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders)
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  nameWithType: BinaryServerFormatterSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream(IServerResponseChannelSinkStack,Object,IMessage,ITransportHeaders)
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: NextChannelSink
  nameWithType: BinaryServerFormatterSink.NextChannelSink
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(System.Runtime.Remoting.Channels.IServerChannelSinkStack,System.Runtime.Remoting.Messaging.IMessage,System.Runtime.Remoting.Channels.ITransportHeaders,System.IO.Stream,System.Runtime.Remoting.Messaging.IMessage@,System.Runtime.Remoting.Channels.ITransportHeaders@,System.IO.Stream@)
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  nameWithType: BinaryServerFormatterSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage(IServerChannelSinkStack,IMessage,ITransportHeaders,Stream,IMessage,ITransportHeaders,Stream)
- uid: System.Runtime.Remoting.Channels.ServerProcessing
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: ServerProcessing
  nameWithType: ServerProcessing
  fullName: System.Runtime.Remoting.Channels.ServerProcessing
- uid: System.Runtime.Remoting.Channels.IServerChannelSinkStack
  parent: System.Runtime.Remoting.Channels
  isExternal: false
  name: IServerChannelSinkStack
  nameWithType: IServerChannelSinkStack
  fullName: System.Runtime.Remoting.Channels.IServerChannelSinkStack
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: Properties
  nameWithType: BinaryServerFormatterSink.Properties
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: TypeFilterLevel
  nameWithType: BinaryServerFormatterSink.TypeFilterLevel
  fullName: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel
- uid: System.Runtime.Serialization.Formatters.TypeFilterLevel
  parent: System.Runtime.Serialization.Formatters
  isExternal: false
  name: TypeFilterLevel
  nameWithType: TypeFilterLevel
  fullName: System.Runtime.Serialization.Formatters.TypeFilterLevel
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.#ctor*
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: BinaryServerFormatterSink
  nameWithType: BinaryServerFormatterSink.BinaryServerFormatterSink
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.AsyncProcessResponse*
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: AsyncProcessResponse
  nameWithType: BinaryServerFormatterSink.AsyncProcessResponse
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.GetResponseStream*
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: GetResponseStream
  nameWithType: BinaryServerFormatterSink.GetResponseStream
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.NextChannelSink*
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: NextChannelSink
  nameWithType: BinaryServerFormatterSink.NextChannelSink
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.ProcessMessage*
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: ProcessMessage
  nameWithType: BinaryServerFormatterSink.ProcessMessage
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.Properties*
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: Properties
  nameWithType: BinaryServerFormatterSink.Properties
- uid: System.Runtime.Remoting.Channels.BinaryServerFormatterSink.TypeFilterLevel*
  parent: System.Runtime.Remoting.Channels.BinaryServerFormatterSink
  isExternal: false
  name: TypeFilterLevel
  nameWithType: BinaryServerFormatterSink.TypeFilterLevel
