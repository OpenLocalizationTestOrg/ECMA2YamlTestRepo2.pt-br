### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Page
  id: Page
  children:
  - System.Web.UI.Page.#ctor
  - System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  - System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  - System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  - System.Web.UI.Page.Application
  - System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  - System.Web.UI.Page.AspCompatMode
  - System.Web.UI.Page.AsyncMode
  - System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  - System.Web.UI.Page.AsyncTimeout
  - System.Web.UI.Page.AutoPostBackControl
  - System.Web.UI.Page.Buffer
  - System.Web.UI.Page.Cache
  - System.Web.UI.Page.ClientQueryString
  - System.Web.UI.Page.ClientScript
  - System.Web.UI.Page.ClientTarget
  - System.Web.UI.Page.CodePage
  - System.Web.UI.Page.ContentType
  - System.Web.UI.Page.Context
  - System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  - System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  - System.Web.UI.Page.Culture
  - System.Web.UI.Page.DesignerInitialize
  - System.Web.UI.Page.DeterminePostBackMode
  - System.Web.UI.Page.DeterminePostBackModeUnvalidated
  - System.Web.UI.Page.EnableEventValidation
  - System.Web.UI.Page.EnableViewState
  - System.Web.UI.Page.EnableViewStateMac
  - System.Web.UI.Page.ErrorPage
  - System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  - System.Web.UI.Page.FileDependencies
  - System.Web.UI.Page.FindControl(System.String)
  - System.Web.UI.Page.Form
  - System.Web.UI.Page.FrameworkInitialize
  - System.Web.UI.Page.GetDataItem
  - System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  - System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  - System.Web.UI.Page.GetTypeHashCode
  - System.Web.UI.Page.GetValidators(System.String)
  - System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  - System.Web.UI.Page.Header
  - System.Web.UI.Page.ID
  - System.Web.UI.Page.IdSeparator
  - System.Web.UI.Page.InitComplete
  - System.Web.UI.Page.InitializeCulture
  - System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  - System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  - System.Web.UI.Page.IsAsync
  - System.Web.UI.Page.IsCallback
  - System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  - System.Web.UI.Page.IsCrossPagePostBack
  - System.Web.UI.Page.IsPostBack
  - System.Web.UI.Page.IsPostBackEventControlRegistered
  - System.Web.UI.Page.IsReusable
  - System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  - System.Web.UI.Page.IsValid
  - System.Web.UI.Page.Items
  - System.Web.UI.Page.LCID
  - System.Web.UI.Page.LoadComplete
  - System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  - System.Web.UI.Page.MaintainScrollPositionOnPostBack
  - System.Web.UI.Page.MapPath(System.String)
  - System.Web.UI.Page.Master
  - System.Web.UI.Page.MasterPageFile
  - System.Web.UI.Page.MaxPageStateFieldLength
  - System.Web.UI.Page.MetaDescription
  - System.Web.UI.Page.MetaKeywords
  - System.Web.UI.Page.ModelBindingExecutionContext
  - System.Web.UI.Page.ModelState
  - System.Web.UI.Page.OnInit(System.EventArgs)
  - System.Web.UI.Page.OnInitComplete(System.EventArgs)
  - System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  - System.Web.UI.Page.OnPreInit(System.EventArgs)
  - System.Web.UI.Page.OnPreLoad(System.EventArgs)
  - System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  - System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  - System.Web.UI.Page.PageAdapter
  - System.Web.UI.Page.PageStatePersister
  - System.Web.UI.Page.postEventArgumentID
  - System.Web.UI.Page.postEventSourceID
  - System.Web.UI.Page.PreInit
  - System.Web.UI.Page.PreLoad
  - System.Web.UI.Page.PreRenderComplete
  - System.Web.UI.Page.PreviousPage
  - System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  - System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  - System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  - System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  - System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  - System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  - System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  - System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  - System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  - System.Web.UI.Page.RegisterRequiresViewStateEncryption
  - System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  - System.Web.UI.Page.RegisterViewStateHandler
  - System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Page.Request
  - System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.Response
  - System.Web.UI.Page.ResponseEncoding
  - System.Web.UI.Page.RouteData
  - System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  - System.Web.UI.Page.SaveStateComplete
  - System.Web.UI.Page.Server
  - System.Web.UI.Page.Session
  - System.Web.UI.Page.SetFocus(System.String)
  - System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  - System.Web.UI.Page.SkipFormActionValidation
  - System.Web.UI.Page.SmartNavigation
  - System.Web.UI.Page.StyleSheetTheme
  - System.Web.UI.Page.Theme
  - System.Web.UI.Page.Title
  - System.Web.UI.Page.Trace
  - System.Web.UI.Page.TraceEnabled
  - System.Web.UI.Page.TraceModeValue
  - System.Web.UI.Page.TransactionMode
  - System.Web.UI.Page.TryUpdateModel``1(``0)
  - System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.Page.UICulture
  - System.Web.UI.Page.UniqueFilePathSuffix
  - System.Web.UI.Page.UnobtrusiveValidationMode
  - System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  - System.Web.UI.Page.UpdateModel``1(``0)
  - System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  - System.Web.UI.Page.User
  - System.Web.UI.Page.Validate
  - System.Web.UI.Page.Validate(System.String)
  - System.Web.UI.Page.ValidateRequestMode
  - System.Web.UI.Page.Validators
  - System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  - System.Web.UI.Page.ViewStateEncryptionMode
  - System.Web.UI.Page.ViewStateUserKey
  - System.Web.UI.Page.Visible
  langs:
  - csharp
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
  type: Class
  summary: "Representa um arquivo. aspx, também conhecido como uma página de Web Forms, solicitado a partir de um servidor que hospeda um aplicativo Web ASP.NET."
  remarks: "A classe de página é associada a arquivos que têm uma extensão. Esses arquivos são compilados em tempo de execução como objetos de página e armazenados em cache na memória do servidor.       Se você quiser criar uma página de Web Forms usando a técnica de lógica, derive dessa classe. Designers de desenvolvimento (RAD) rápido de aplicativos, como o Microsoft Visual Studio automaticamente usam esse modelo para criar páginas Web Forms.       O serve de objeto de página como o contêiner de nomeação para todos os controles de servidor em uma página, exceto aqueles que implementam o <xref:System.Web.UI.INamingContainer>interface ou controles filho de controles que implementam esta interface.</xref:System.Web.UI.INamingContainer>       A classe de página é um controle que atua como a interface do usuário para seu aplicativo da Web e como tal deve ser examinado para certificar-se de que as práticas recomendadas para escrever código seguro e proteger aplicativos são seguidas. Para obter informações gerais sobre esses tópicos, consulte [visão geral da Web aplicativo contra ameaças à segurança](~/add/includes/ajax-current-ext-md.md), [NIB: práticas recomendadas de política de segurança](http://msdn.microsoft.com/en-us/d49bc4d5-efb7-4caa-a2fe-e4d3cec63c05), e [conceitos de segurança de chave](~/add/includes/ajax-current-ext-md.md). Para obter informações mais específicas, consulte [protegendo controles padrão](~/add/includes/ajax-current-ext-md.md), [como: exibir mensagens de erro de segurança](~/add/includes/ajax-current-ext-md.md), [como: proteger contra scripts maliciosos em um aplicativo da Web aplicando codificação HTML a cadeias de caracteres](~/add/includes/ajax-current-ext-md.md), e [Introdução aos controles de validação](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190)."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192425).  \n  \n The following code example demonstrates how the Page class is used in the code-behind page model. Note that the code-behind source file declares a partial class that inherits from a base page class. The base page class can be Page, or it can be another class that derives from Page. Furthermore, note that the partial class allows the code-behind file to use controls defined on the page without the need to define them as field members.  \n  \n [!code-cs[System.Web.UI.Page_Overview#2](~/add/codesnippet/csharp/t-system.web.ui.page_1.cs)]\n [!code-vb[System.Web.UI.Page_Overview#2](~/add/codesnippet/visualbasic/t-system.web.ui.page_1.vb)]  \n  \n The following code example shows the .aspx file that corresponds to the preceding code-behind source file.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.page_2.aspx)]\n [!code-vb[System.Web.UI.Page_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_2.aspx)]  \n  \n You must use the  directive and use the `Inherits` and `CodeFile` attributes to link the code-behind file to the .aspx file. In this example, the `Inherits` attribute indicates the `MyCodeBehind` class and the `CodeFile` attribute indicates the path to the language-specific file that contains the class.  \n  \n The following code example demonstrates the single-file page model and how to access the <xref:System.Web.UI.Page.IsPostBack%2A> property and the <xref:System.Web.UI.Page.Response%2A> property of the Page.  \n  \n [!code-vb[System.Web.UI.Page_Overview2#1](~/add/codesnippet/visualbasic/t-system.web.ui.page_3.aspx)]\n [!code-cs[System.Web.UI.Page_Overview2#1](~/add/codesnippet/csharp/t-system.web.ui.page_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Load")]

      [System.ComponentModel.Design.Serialization.DesignerSerializer("Microsoft.VisualStudio.Web.WebForms.WebFormCodeDomSerializer, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.TypeCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Designer("Microsoft.VisualStudio.Web.WebForms.WebFormDesigner, Microsoft.VisualStudio.Web, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", typeof(System.ComponentModel.Design.IRootDesigner))]

      [System.ComponentModel.DesignerCategory("ASPXCodeBehind")]

      [System.ComponentModel.ToolboxItem(false)]

      public class Page : System.Web.UI.TemplateControl, System.Web.IHttpHandler
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.TemplateControl
  implements:
  - System.Web.IHttpHandler
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.TemplateControl.AbortTransaction
  - System.Web.UI.TemplateControl.AppRelativeVirtualPath
  - System.Web.UI.TemplateControl.AutoHandlers
  - System.Web.UI.TemplateControl.CommitTransaction
  - System.Web.UI.TemplateControl.Construct
  - System.Web.UI.TemplateControl.CreateResourceBasedLiteralControl(System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.EnableTheming
  - System.Web.UI.TemplateControl.Error
  - System.Web.UI.TemplateControl.Eval(System.String)
  - System.Web.UI.TemplateControl.Eval(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String)
  - System.Web.UI.TemplateControl.GetGlobalResourceObject(System.String,System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String)
  - System.Web.UI.TemplateControl.GetLocalResourceObject(System.String,System.Type,System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.String)
  - System.Web.UI.TemplateControl.LoadControl(System.Type,System.Object[])
  - System.Web.UI.TemplateControl.LoadTemplate(System.String)
  - System.Web.UI.TemplateControl.OnAbortTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnCommitTransaction(System.EventArgs)
  - System.Web.UI.TemplateControl.OnError(System.EventArgs)
  - System.Web.UI.TemplateControl.ParseControl(System.String)
  - System.Web.UI.TemplateControl.ParseControl(System.String,System.Boolean)
  - System.Web.UI.TemplateControl.ReadStringResource
  - System.Web.UI.TemplateControl.ReadStringResource(System.Type)
  - System.Web.UI.TemplateControl.SetStringResourcePointer(System.Object,System.Int32)
  - System.Web.UI.TemplateControl.SupportAutoEvents
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#CompareFilters(System.String,System.String)
  - System.Web.UI.TemplateControl.System#Web#UI#IFilterResolutionService#EvaluateFilter(System.String)
  - System.Web.UI.TemplateControl.TestDeviceFilter(System.String)
  - System.Web.UI.TemplateControl.WriteUTF8ResourceString(System.Web.UI.HtmlTextWriter,System.Int32,System.Int32,System.Boolean)
  - System.Web.UI.TemplateControl.XPath(System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String)
  - System.Web.UI.TemplateControl.XPath(System.String,System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPath(System.String,System.Xml.IXmlNamespaceResolver)
  - System.Web.UI.TemplateControl.XPathSelect(System.String)
  - System.Web.UI.TemplateControl.XPathSelect(System.String,System.Xml.IXmlNamespaceResolver)
  platform:
  - net462
- uid: System.Web.UI.Page.#ctor
  id: '#ctor'
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Page()
  nameWithType: Page.Page()
  fullName: System.Web.UI.Page.Page()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.Page&quot;> </xref> classe."
  remarks: "O construtor padrão inicializa todos os campos com seus valores padrão."
  syntax:
    content: public Page ();
    parameters: []
  overload: System.Web.UI.Page.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  id: AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddContentTemplate(String,ITemplate)
  nameWithType: Page.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Chamado durante a inicialização da página para criar uma coleção de conteúdo (controles de conteúdo) que é entregue para uma página mestre, se a página atual ou a página mestra se refere a uma página mestra."
  syntax:
    content: protected void AddContentTemplate (string templateName, System.Web.UI.ITemplate template);
    parameters:
    - id: templateName
      type: System.String
      description: "O nome do modelo de conteúdo a adicionar."
    - id: template
      type: System.Web.UI.ITemplate
      description: "O modelo de conteúdo"
  overload: System.Web.UI.Page.AddContentTemplate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Um modelo de conteúdo com o mesmo nome já existe."
  platform:
  - net462
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra o início e fim delegados do manipulador de eventos que não exigem informações de estado para uma página assíncrona."
  remarks: "Use o método AddOnPreRenderCompleteAsync para adicionar manipuladores para uma página da Web assíncrona.       Você pode registrar vários manipuladores assíncronos; No entanto, apenas um manipulador é executado por vez. Se você quiser processar vários métodos assíncronos simultaneamente, você deve usar um único <xref:System.Web.BeginEventHandler>método e iniciar várias operações assíncronas desse manipulador.</xref:System.Web.BeginEventHandler>       Os manipuladores assíncronos são chamados entre o <xref:System.Web.UI.Control.PreRender>e <xref:System.Web.UI.Page.PreRenderComplete>eventos.</xref:System.Web.UI.Page.PreRenderComplete> </xref:System.Web.UI.Control.PreRender>       Primeiro, todos os <xref:System.Web.UI.Page>eventos (por meio de <xref:System.Web.UI.Control.PreRender>evento) executado e, em seguida, cada registrado <xref:System.Web.BeginEventHandler>método é chamado.</xref:System.Web.BeginEventHandler> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Page> Quando o manipulador é concluído, o correspondente <xref:System.Web.EndEventHandler>método é chamado.</xref:System.Web.EndEventHandler> Se houver vários manipuladores assíncronos, o próximo manipulador é chamado.       Depois de tem sido chamados os manipuladores de eventos assíncrono registrado, o restante dos eventos de página são chamados, começando com o <xref:System.Web.UI.Page.PreRenderComplete>evento.</xref:System.Web.UI.Page.PreRenderComplete>"
  example:
  - "The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/211d473e-4a2a-4d51-99f6-_1.aspx)]\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/211d473e-4a2a-4d51-99f6-_1.aspx)]"
  syntax:
    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "O representante para a <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> método."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "O representante para a <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> método."
  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_&lt;async&gt;\" name=\"&lt;async&gt;\" href=\"\"></xref> page directive is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The AddOnPreRenderCompleteAsync method is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <>*> or <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  id: AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registros de abertura e fechamento delegados de manipulador de eventos para uma página assíncrona."
  remarks: "Use o método AddOnPreRenderCompleteAsync para adicionar manipuladores que exigem informações de estado para uma página da Web assíncrona. O objeto passado a `state` parâmetro pode ser qualquer objeto que seu aplicativo requer para transferir informações entre os representantes de manipulador de eventos especificados no `beginHandler` e `endHandler` parâmetros.       Você pode registrar vários manipuladores assíncronos; No entanto, apenas um manipulador é executado por vez. Se você quiser processar vários métodos assíncronos simultaneamente, você deve usar um único <xref:System.Web.BeginEventHandler>método e iniciar várias operações assíncronas desse manipulador.</xref:System.Web.BeginEventHandler>       Os manipuladores assíncronos são chamados entre o <xref:System.Web.UI.Control.PreRender>e <xref:System.Web.UI.Page.PreRenderComplete>eventos.</xref:System.Web.UI.Page.PreRenderComplete> </xref:System.Web.UI.Control.PreRender>       Primeiro, todos os <xref:System.Web.UI.Page>eventos (por meio de <xref:System.Web.UI.Control.PreRender>evento) executado e, em seguida, cada registrado <xref:System.Web.BeginEventHandler>método é chamado.</xref:System.Web.BeginEventHandler> </xref:System.Web.UI.Control.PreRender> </xref:System.Web.UI.Page> Quando o manipulador é concluído, o correspondente <xref:System.Web.EndEventHandler>método é chamado.</xref:System.Web.EndEventHandler> Se houver vários manipuladores assíncronos, o próximo manipulador é chamado.       Depois de tem sido chamados os manipuladores de eventos assíncrono registrado, o restante dos eventos de página são chamados, começando com o <xref:System.Web.UI.Page.PreRenderComplete>evento.</xref:System.Web.UI.Page.PreRenderComplete>"
  example:
  - "The following code example uses an asynchronous request to display the HTML source code of the local Web server's default page in a <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/visualbasic/7b7f2daf-1a25-4639-a06e-_1.aspx)]\n [!code-cs[PageAddOnPreRenderCompleteAsync#1](~/add/codesnippet/csharp/7b7f2daf-1a25-4639-a06e-_1.aspx)]"
  syntax:
    content: public void AddOnPreRenderCompleteAsync (System.Web.BeginEventHandler beginHandler, System.Web.EndEventHandler endHandler, object state);
    parameters:
    - id: beginHandler
      type: System.Web.BeginEventHandler
      description: "O representante para a <xref href=&quot;System.Web.BeginEventHandler&quot;> </xref> método."
    - id: endHandler
      type: System.Web.EndEventHandler
      description: "O representante para a <xref href=&quot;System.Web.EndEventHandler&quot;> </xref> método."
    - id: state
      type: System.Object
      description: "Um objeto que contém informações de estado para os manipuladores de eventos."
  overload: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref uid=\"langword_csharp_&lt;async&gt;\" name=\"&lt;async&gt;\" href=\"\"></xref> page directive is not set to <xref uid=\"langword_csharp_true\" name=\"true\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The <xref:System.Web.UI.Page.AddOnPreRenderCompleteAsync*> method is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <>*> or <>*> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  id: AddWrappedFileDependencies(System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AddWrappedFileDependencies(Object)
  nameWithType: Page.AddWrappedFileDependencies(Object)
  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adiciona uma lista de arquivos dependentes que compõem a página atual. Esse método é usado internamente pela estrutura de página ASP.NET e não se destina a ser usado diretamente no seu código."
  remarks: "O método AddWrappedFileDependencies adiciona uma lista de arquivos, como arquivos de controle de usuário, que compõem a página atual. Se qualquer uma dessas páginas for modificada, a página inteira é compilada na próxima vez que forem solicitados. Este método dá suporte à infraestrutura .NET Framework e não se destina a ser usado diretamente no seu código."
  syntax:
    content: protected void AddWrappedFileDependencies (object virtualFileDependencies);
    parameters:
    - id: virtualFileDependencies
      type: System.Object
      description: "Um <xref:System.Object>que contém a lista de nomes de arquivo.</xref:System.Object>"
  overload: System.Web.UI.Page.AddWrappedFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Application
  id: Application
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Application
  nameWithType: Page.Application
  fullName: System.Web.UI.Page.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> objeto para a solicitação da Web atual."
  remarks: ''
  example:
  - >-
    [!code-cs[Page.Application_Sample1#1](~/add/codesnippet/csharp/p-system.web.ui.page.app_1.aspx)]
     [!code-vb[Page.Application_Sample1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.app_1.aspx)]
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "Os dados atuais a <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> classe."
  overload: System.Web.UI.Page.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicia uma solicitação de recursos do Active Server Page (ASP). Este método é fornecido para compatibilidade com aplicativos herdados do ASP."
  remarks: "Não chame este método."
  syntax:
    content: protected IAsyncResult AspCompatBeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Um <xref href=&quot;System.Web.HttpContext&quot;> </xref> com informações sobre a solicitação atual."
    - id: cb
      type: System.AsyncCallback
      description: "O método de retorno de chamada."
    - id: extraData
      type: System.Object
      description: "Qualquer dado extra necessário para processar a solicitação da mesma maneira como uma solicitação ASP."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto.</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AspCompatBeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  id: AspCompatEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatEndProcessRequest(IAsyncResult)
  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Encerra uma solicitação para recursos do Active Server Page (ASP). Este método é fornecido para compatibilidade com aplicativos herdados do ASP."
  remarks: "Não chame este método."
  syntax:
    content: protected void AspCompatEndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A página ASP gerada pela solicitação."
  overload: System.Web.UI.Page.AspCompatEndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AspCompatMode
  id: AspCompatMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
  fullName: System.Web.UI.Page.AspCompatMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define um valor que indica se a página pode ser executada em um thread de single-threaded apartment (STA)."
  remarks: "Quando definido como `true`, essa propriedade permite que a página a ser executada em um thread de single-threaded apartment (STA). Isso permite que a página chamar componentes do STA, como componentes desenvolvidos com o Visual Basic 6.0. Definir essa propriedade como `true` também permite que a página chamam componentes COM+ que exigem acesso a objetos interno do ASP não gerenciado. Eles são acessíveis por meio do ASP `ObjectContext` objeto ou o `OnStartPage` método.       Na maioria das circunstâncias, não defina essa propriedade no código. Definir o `aspcompat` atributo `true` usando a diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define a propriedade."
  syntax:
    content: protected bool AspCompatMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a página dá suporte a código de Active Server Pages (ASP); Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.AspCompatMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncMode
  id: AsyncMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncMode
  nameWithType: Page.AsyncMode
  fullName: System.Web.UI.Page.AsyncMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define um valor que indica se a página é processada de forma síncrona ou assíncrona."
  remarks: "A propriedade AsyncMode é definida pelo <xref:System.Web.UI.Page>Analisador quando o código para a página é gerado.</xref:System.Web.UI.Page> Use o `Async` atributo na diretiva para definir esse valor.       Páginas assíncronas não funcionam quando o `AspCompat` atributo é definido como `true` ou `Transaction` atributo é definido como um valor diferente de `Disabled` na diretiva."
  syntax:
    content: protected bool AsyncMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a página é processada de forma assíncrona. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.AsyncMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Começa a processar uma solicitação de página assíncrona."
  syntax:
    content: protected IAsyncResult AsyncPageBeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para a solicitação."
    - id: callback
      type: System.AsyncCallback
      description: "O método de retorno de chamada para notificar quando o processo for concluído."
    - id: extraData
      type: System.Object
      description: "Dados de estado para o método assíncrono."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que faz referência a solicitação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AsyncPageBeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  id: AsyncPageEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncPageEndProcessRequest(IAsyncResult)
  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Extensão de processamento de uma solicitação de página assíncrona."
  syntax:
    content: protected void AsyncPageEndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>fazendo referência a uma solicitação assíncrona pendente.</xref:System.IAsyncResult>"
  overload: System.Web.UI.Page.AsyncPageEndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.AsyncTimeout
  id: AsyncTimeout
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
  fullName: System.Web.UI.Page.AsyncTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica o intervalo de tempo limite usado durante o processamento de tarefas assíncronas."
  remarks: "O tempo limite assíncrono da página representa a quantidade de tempo que a página esperará para executar tarefas assíncronas. Na maioria das circunstâncias, não defina essa propriedade no código. Definir o intervalo de tempo limite assíncrono de página usando do arquivo de configuração da Web ou na diretiva. Valores definidos na seção de configuração da página são substituídos pela diretiva de página.       Definir sua tarefa assíncrona usando o <xref:System.Web.UI.PageAsyncTask>classe e registrar um manipulador de tempo limite de um início e um final.</xref:System.Web.UI.PageAsyncTask> Se a tarefa assíncrona não for concluída no intervalo de tempo especificado, o manipulador de tempo limite será invocado."
  example:
  - "The following code example demonstrates the use of the AsyncTimeout property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the AsyncTimeout property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time. Note that the AsyncTimeout property is set in the page directive.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/p-system.web.ui.page.asy_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/p-system.web.ui.page.asy_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.asy_2.vb)]"
  syntax:
    content: public TimeSpan AsyncTimeout { get; set; }
    return:
      type: System.TimeSpan
      description: "Um <xref:System.TimeSpan>que contém o intervalo de tempo permitido para a conclusão da tarefa assíncrona.</xref:System.TimeSpan> O intervalo de tempo padrão é 45 segundos."
  overload: System.Web.UI.Page.AsyncTimeout*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A propriedade foi definida como um valor negativo."
  platform:
  - net462
- uid: System.Web.UI.Page.AutoPostBackControl
  id: AutoPostBackControl
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
  fullName: System.Web.UI.Page.AutoPostBackControl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o controle na página que é usada para executar postbacks."
  syntax:
    content: public System.Web.UI.Control AutoPostBackControl { get; set; }
    return:
      type: System.Web.UI.Control
      description: "O controle que é usado para executar postbacks."
  overload: System.Web.UI.Page.AutoPostBackControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Buffer
  id: Buffer
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Buffer
  nameWithType: Page.Buffer
  fullName: System.Web.UI.Page.Buffer
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define um valor que indica se a saída da página é armazenada em buffer."
  remarks: "Na maioria das circunstâncias, não defina essa propriedade no código. Defina o atributo de Buffer para `true` usando a diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define a propriedade.      > [!NOTE] > Propriedade o Buffer define e obtém o <xref:System.Web.HttpResponse.BufferOutput%2A>propriedade.</xref:System.Web.HttpResponse.BufferOutput%2A>"
  syntax:
    content: public bool Buffer { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a saída de página é armazenada em buffer; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.Buffer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Cache
  id: Cache
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Cache
  nameWithType: Page.Cache
  fullName: System.Web.UI.Page.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> objeto associado com o aplicativo no qual a página reside."
  remarks: "Um aplicativo <xref:System.Web.Caching.Cache>objeto permite que você armazene e recupere dados arbitrários em solicitações subsequentes.</xref:System.Web.Caching.Cache> O cache não é especificamente associado uma sessão de usuário ou de página. Ele é usado principalmente para melhorar o desempenho do aplicativo. Para obter mais informações, consulte [cache de dados de aplicativo](~/add/includes/ajax-current-ext-md.md). Para obter mais informações sobre a diferença entre o aplicativo em cache e cache de saída de página, consulte [visão geral de cache ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example inserts the sum of two integers into the <xref:System.Web.Caching.Cache?displayProperty=fullName> object using the Cache property. It then retrieves the value using the <xref:System.Web.Caching.Cache.Get%2A?displayProperty=fullName> method and writes it to a <xref:System.Web.UI.WebControls.Label> Web server control.  \n  \n [!code-vb[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.cache_1.aspx)]\n [!code-cs[System.Web.Page.Cache_Replacement#1](~/add/codesnippet/csharp/p-system.web.ui.page.cache_1.aspx)]"
  syntax:
    content: public System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "O <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> associado ao aplicativo da página."
  overload: System.Web.UI.Page.Cache*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Uma instância de <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> não é criado."
  platform:
  - net462
- uid: System.Web.UI.Page.ClientQueryString
  id: ClientQueryString
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
  fullName: System.Web.UI.Page.ClientQueryString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a parte da cadeia de caracteres de consulta da URL solicitada."
  remarks: "A propriedade ClientQueryString contém a parte da cadeia de caracteres de consulta da URL solicitada pelo navegador. Por exemplo, se a URL solicitada é &quot;http://www.contoso.com/default.aspx?id=100&quot;, a propriedade ClientQueryString conterá &quot;id =&100;&quot;. A propriedade ClientQueryString é codificada; Use o <xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName>método decodificar a cadeia de caracteres de consulta.</xref:System.Web.HttpServerUtility.UrlDecode%2A?displayProperty=fullName>"
  syntax:
    content: public string ClientQueryString { get; }
    return:
      type: System.String
      description: "A parte da cadeia de caracteres de consulta da URL solicitada."
  overload: System.Web.UI.Page.ClientQueryString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ClientScript
  id: ClientScript
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientScript
  nameWithType: Page.ClientScript
  fullName: System.Web.UI.Page.ClientScript
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um <xref href=&quot;System.Web.UI.ClientScriptManager&quot;> </xref> objeto usado para registrar e adicionar script para a página."
  remarks: "Use a propriedade ClientScript para obter um <xref:System.Web.UI.ClientScriptManager>objeto que pode ser usado para registrar e adicionar script para uma página da Web.</xref:System.Web.UI.ClientScriptManager> Para obter mais informações, consulte a <xref:System.Web.UI.ClientScriptManager>classe.</xref:System.Web.UI.ClientScriptManager>       O <xref:System.Web.UI.ClientScriptManager>classe é nova no [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)] e substitui <xref:System.Web.UI.Page>classe métodos para gerenciar scripts que agora são preteridos.</xref:System.Web.UI.Page> </xref:System.Web.UI.ClientScriptManager>"
  example:
  - For an example, see the <xref:System.Web.UI.ClientScriptManager> class overview topic.
  syntax:
    content: public System.Web.UI.ClientScriptManager ClientScript { get; }
    return:
      type: System.Web.UI.ClientScriptManager
      description: "A <xref href=&quot;System.Web.UI.ClientScriptManager&quot;></xref> object."
  overload: System.Web.UI.Page.ClientScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ClientTarget
  id: ClientTarget
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ClientTarget
  nameWithType: Page.ClientTarget
  fullName: System.Web.UI.Page.ClientTarget
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que permite que você substitua a detecção automática de recursos do navegador e especificar como uma página é processada para clientes de navegador específico."
  remarks: "Se você não definir a propriedade ClientTarget, o <xref:System.Web.HttpBrowserCapabilities>objeto associado a <xref:System.Web.UI.Page.Request%2A?displayProperty=fullName>propriedade reflete os recursos do navegador do cliente.</xref:System.Web.UI.Page.Request%2A?displayProperty=fullName> </xref:System.Web.HttpBrowserCapabilities> Se você definir essa propriedade, detecção de navegador do cliente é desabilitada e a página irá usar recursos do navegador associados com o valor (alias) que você fornecer.       O arquivo de configuração de Web. config de raiz no computador do servidor Web define os seguintes aliases padrão que você pode usar como abreviada para cadeias de caracteres de agente de usuário comuns:- `uplevel`, que especifica os recursos do navegador equivalentes para o Internet Explorer 6.0.      - `downlevel`, que especifica os recursos do navegador equivalentes para navegadores mais antigos que não oferecem suporte a script de cliente. Você pode usar este alias para determinar como páginas da Web funcionaria em um navegador que tem o script de cliente desabilitado.       Você pode definir o alias programaticamente usando essa propriedade, ou você pode defini-lo usando o `ClientTarget` atributo da diretiva.       Você pode definir um alias adicional no `clientTarget` seção do arquivo Web. config de nível de aplicativo. Para obter mais informações, consulte [clientTarget Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/17a0fa6e-a065-49cc-b900-ef73eda6a922)."
  example:
  - "The following code example defines an `ie302` alias and includes sections needed to configure your application in its Web.config file. Using this alias, you can set the ClientTarget property to `ie302` and customize pages specifically for Internet Explorer 3.02 browsers.  \n  \n```  \n<configuration>  \n  <system.web>  \n   <clientTarget>  \n    <add alias=\"ie302\" useragent=\"Mozilla/2.0 (compatible; MSIE 3.02; Windows NT 3.5)\" />  \n   </clientTarget>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: public string ClientTarget { get; set; }
    return:
      type: System.String
      description: "Um <xref:System.String>que especifica os recursos do navegador que você deseja substituir.</xref:System.String>"
  overload: System.Web.UI.Page.ClientTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CodePage
  id: CodePage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CodePage
  nameWithType: Page.CodePage
  fullName: System.Web.UI.Page.CodePage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define o identificador de página de código atual <xref href=&quot;System.Web.UI.Page&quot;> </xref>."
  remarks: "Na maioria das circunstâncias, não defina essa propriedade no código. Definir o `CodePage` de atributo para o valor desejado usando a diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define a propriedade."
  syntax:
    content: public int CodePage { get; set; }
    return:
      type: System.Int32
      description: "Um inteiro que representa o identificador de página de código atual <xref href=&quot;System.Web.UI.Page&quot;> </xref>."
  overload: System.Web.UI.Page.CodePage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ContentType
  id: ContentType
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ContentType
  nameWithType: Page.ContentType
  fullName: System.Web.UI.Page.ContentType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define o tipo MIME de HTTP para o <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objeto associado à página."
  remarks: "Na maioria das circunstâncias, não defina essa propriedade no código. Definir o `ContentType` atributo usando a diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define a propriedade."
  syntax:
    content: public string ContentType { get; set; }
    return:
      type: System.String
      description: "O tipo MIME do HTTP associado à página atual."
  overload: System.Web.UI.Page.ContentType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Context
  id: Context
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Context
  nameWithType: Page.Context
  fullName: System.Web.UI.Page.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto associado à página."
  remarks: "Esta propriedade fornece acesso programático para o contexto em que a página é executada, incluindo informações sobre a solicitação, resposta, sessão e aplicativo."
  example:
  - "The following code example uses the Context property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=fullName> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=fullName> property. The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array. It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the Context property.  \n  \n [!code-vb[System.Web.UI.Page.Context#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.con_1.aspx)]\n [!code-cs[System.Web.UI.Page.Context#1](~/add/codesnippet/csharp/p-system.web.ui.page.con_1.aspx)]"
  syntax:
    content: protected override System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "Um <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto que contém informações associadas à página atual."
  overload: System.Web.UI.Page.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  id: CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: Page.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Cria um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto para renderizar o conteúdo da página."
  remarks: "O método CreateHtmlTextWriter cria um <xref:System.IO.TextWriter>por meio de <xref:System.Web.HttpRequest.Browser%2A>propriedade do <xref:System.Web.HttpContext.Request%2A>objeto associado à solicitação de página.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.IO.TextWriter> Você pode adicionar uma referência a um <xref:System.Web.UI.HtmlTextWriter>no `browserCaps` seção de configuração.</xref:System.Web.UI.HtmlTextWriter> Substitua o método CreateHtmlTextWriter para executar pesquisas personalizadas."
  example:
  - "The following code example uses the CreateHtmlTextWriter method to create an instance of a custom <xref:System.Web.UI.HtmlTextWriter> object named `MyHtmlTextWriter`. The CreateHtmlTextWriter method is overridden in the `MyPage` class, which is derived from <xref:System.Web.UI.Page>, so that `MyHtmlTextWriter` renders ASP.NET server controls when the page is requested. Note that this example will prevent adapter <xref:System.IO.TextWriter> behavior.  \n  \n [!code-cs[Page_CreateHtmlTextWriter#2](~/add/codesnippet/csharp/m-system.web.ui.page.cre_1.cs)]\n [!code-vb[Page_CreateHtmlTextWriter#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.cre_1.vb)]"
  syntax:
    content: protected virtual System.Web.UI.HtmlTextWriter CreateHtmlTextWriter (System.IO.TextWriter tw);
    parameters:
    - id: tw
      type: System.IO.TextWriter
      description: "O <xref:System.IO.TextWriter>usado para criar o <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>.</xref:System.IO.TextWriter>"
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "An <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;></xref> or <xref href=&quot;System.Web.UI.Html32TextWriter&quot;></xref>."
  overload: System.Web.UI.Page.CreateHtmlTextWriter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  id: CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: CreateHtmlTextWriterFromType(TextWriter,Type)
  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Cria um especificado <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto para renderizar o conteúdo da página."
  remarks: "Esse método é usado internamente em adaptadores de página."
  syntax:
    content: public static System.Web.UI.HtmlTextWriter CreateHtmlTextWriterFromType (System.IO.TextWriter tw, Type writerType);
    parameters:
    - id: tw
      type: System.IO.TextWriter
      description: "O <xref:System.IO.TextWriter>usado para criar o <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref>.</xref:System.IO.TextWriter>"
    - id: writerType
      type: System.Type
      description: "O tipo de gravador de texto para criar."
    return:
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que renderiza o conteúdo da página."
  overload: System.Web.UI.Page.CreateHtmlTextWriterFromType*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <code> writerType </code> parâmetro for definido como um tipo inválido."
  platform:
  - net462
- uid: System.Web.UI.Page.Culture
  id: Culture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Culture
  nameWithType: Page.Culture
  fullName: System.Web.UI.Page.Culture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define a ID de cultura para o <xref href=&quot;System.Threading.Thread&quot;> </xref> objeto associado à página."
  remarks: "Definir o `Culture` atributo na diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define o valor dessa propriedade. Além disso, você pode definir explicitamente o valor da propriedade cultura programaticamente ou no elemento do arquivo Web. config.       A propriedade Culture é usada para ajudar a localizar conteúdo da página. Você pode configurá-lo para qualquer ID de cultura válida. Por exemplo, o `en-us` identificação da cultura define a página como American enquanto em inglês, o `fr` identificação da cultura define a página como francês. Você também pode definir o valor `auto` que realizará a detecção automática do navegador do idioma preferencial e defina-o. A detecção automática de idioma pode ser qualificada com um valor padrão como `auto:en-us`.       Para obter mais informações, consulte o <xref:System.Globalization.CultureInfo>Visão geral da classe.</xref:System.Globalization.CultureInfo>"
  syntax:
    content: public string Culture { get; set; }
    return:
      type: System.String
      description: "Uma identificação de cultura válida."
  overload: System.Web.UI.Page.Culture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DesignerInitialize
  id: DesignerInitialize
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DesignerInitialize()
  nameWithType: Page.DesignerInitialize()
  fullName: System.Web.UI.Page.DesignerInitialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Executa qualquer inicialização da instância do <xref href=&quot;System.Web.UI.Page&quot;> </xref> classe que é exigido pelos designers RAD. Esse método é usado somente em tempo de design."
  syntax:
    content: public void DesignerInitialize ();
    parameters: []
  overload: System.Web.UI.Page.DesignerInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DeterminePostBackMode
  id: DeterminePostBackMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DeterminePostBackMode()
  nameWithType: Page.DeterminePostBackMode()
  fullName: System.Web.UI.Page.DeterminePostBackMode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Retorna um <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> de dados enviados de volta para a página usando um POST ou um comando GET."
  remarks: "O método DeterminePostBackMode retorna um <xref:System.Collections.Specialized.NameValueCollection>lançadas de objeto que contém os dados de volta para a página.</xref:System.Collections.Specialized.NameValueCollection> A presença da página oculta campos VIEWSTATE e EVENTTARGET é usado para ajudar a determinar se ocorreu um evento de postback. O <xref:System.Web.UI.Page.IsPostBack%2A>propriedade é definida quando o método DeterminePostBackMode é chamado.</xref:System.Web.UI.Page.IsPostBack%2A>"
  syntax:
    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackMode ();
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Um <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> objeto que contém os dados do formulário. Se o postback usado o comando POST, as informações do formulário são retornadas do <xref:System.Web.UI.Page.Context*>objeto.</xref:System.Web.UI.Page.Context*> Se o postback usado o comando GET, as informações de cadeia de caracteres de consulta são retornadas. Se a página está sendo solicitada pela primeira vez, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é retornado."
  overload: System.Web.UI.Page.DeterminePostBackMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated
  id: DeterminePostBackModeUnvalidated
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: DeterminePostBackModeUnvalidated()
  nameWithType: Page.DeterminePostBackModeUnvalidated()
  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Retorna uma coleção de nome-valor de dados que foi lançadas para a página usando um POST ou um comando GET, sem executar a validação de solicitação do ASP.NET na solicitação."
  remarks: "Para obter mais informações, consulte a <xref:System.Web.UnvalidatedRequestValues>classe.</xref:System.Web.UnvalidatedRequestValues>"
  syntax:
    content: protected virtual System.Collections.Specialized.NameValueCollection DeterminePostBackModeUnvalidated ();
    parameters: []
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Um objeto que contém os dados de formulário invalidados."
  overload: System.Web.UI.Page.DeterminePostBackModeUnvalidated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.EnableEventValidation
  id: EnableEventValidation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
  fullName: System.Web.UI.Page.EnableEventValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se a página valida os eventos de postback e retorno de chamada."
  remarks: "Quando a propriedade EnableEventValidation é definida como `true`, ASP.NET valida que um evento de controle proveniente da interface do usuário que foi processado pelo controle. Um controle registra seus eventos durante o processamento e, em seguida, valida os eventos durante o tratamento de postback ou de retorno de chamada. Por exemplo, se um controle de lista inclui opções numeradas de 1, 2 ou 3 quando a página é renderizada, e se é recebida uma solicitação de postback especificando o número de opção 4, o ASP.NET gera uma exceção. Todos os controles controlada por evento no ASP.NET usam esse recurso por padrão.       Se você gravar um script de cliente que altera um controle no cliente em tempo de execução, talvez você precise usar o <xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>método para evitar erros de validação de evento false.</xref:System.Web.UI.ClientScriptManager.RegisterForEventValidation%2A>      > [!IMPORTANT] > Esse recurso reduz o risco de solicitações de postback não autorizadas ou mal-intencionados e retornos de chamada. É altamente recomendável que você não desabilitar a validação do evento.       Defina a propriedade EnableEventValidation definindo o `enableEventValidation` atributo da diretiva ou `enableEventValidation` atributo do elemento no arquivo Web. config. Se você definir essa propriedade no código, você deve configurá-lo antes da página é inicializada."
  syntax:
    content: public virtual bool EnableEventValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a página valida eventos de postback e retorno de chamada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.EnableEventValidation*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade EnableEventValidation foi definida depois que a página foi inicializada."
  platform:
  - net462
- uid: System.Web.UI.Page.EnableViewState
  id: EnableViewState
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableViewState
  nameWithType: Page.EnableViewState
  fullName: System.Web.UI.Page.EnableViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se a página mantém seu estado de exibição e controla o estado de exibição de qualquer servidor ele contém, quando a solicitação de página atual termina."
  remarks: "Para obter informações sobre por que talvez você queira desativar o estado de exibição, consulte <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>.</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>       Mesmo que seja EnableViewState `false`, a página pode conter um campo de estado de exibição oculto que é usado pelo ASP.NET para detectar um postback."
  example:
  - "The following code example sets the EnableViewState property to `false` when the page is loaded. This disables view state for the <xref:System.Web.UI.Page> object, meaning that neither view-state information for the page nor any controls contained by the page are saved.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ena_1.cs)]\n [!code-vb[Page_EnableViewState_ReSubmit_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ena_1.vb)]"
  syntax:
    content: public override bool EnableViewState { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a página mantém seu estado de exibição; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.EnableViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.EnableViewStateMac
  id: EnableViewStateMac
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
  fullName: System.Web.UI.Page.EnableViewStateMac
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se o ASP.NET deve verificar os códigos de autenticação de mensagem (MAC) no estado de exibição da página quando a página é postada a partir do cliente."
  remarks: "Um MAC de estado de exibição é uma versão criptografada da variável oculta o estado de exibição da página persiste quando a página é enviada para o navegador. Quando essa propriedade é definida como `true`, o estado de exibição criptografado é verificado para confirmar que ele não foi adulterado no cliente.       Não defina essa propriedade no código. Definir o `EnableViewStateMac` atributo usando a diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define a propriedade.      > [!IMPORTANT] > Esse atributo nunca deve ser definido como `false` em um site de produção, mesmo se o aplicativo ou página não usar o estado de exibição. O estado de exibição MAC ajuda a garantir a segurança de outras funções ASP.NET além do estado de exibição."
  syntax:
    content: public bool EnableViewStateMac { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o estado de exibição deve ser MAC verificada e codificado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.EnableViewStateMac*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ErrorPage
  id: ErrorPage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ErrorPage
  nameWithType: Page.ErrorPage
  fullName: System.Web.UI.Page.ErrorPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define a página de erro para o qual o navegador solicitante é redirecionado no caso de uma exceção sem tratamento de página."
  remarks: ''
  example:
  - >-
    [!code-vb[Page_ErrorPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.err_1.aspx)]
     [!code-cs[Page_ErrorPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.err_1.aspx)]
  syntax:
    content: public string ErrorPage { get; set; }
    return:
      type: System.String
      description: "A página de erro para o qual o navegador é redirecionado."
  overload: System.Web.UI.Page.ErrorPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  id: ExecuteRegisteredAsyncTasks
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ExecuteRegisteredAsyncTasks()
  nameWithType: Page.ExecuteRegisteredAsyncTasks()
  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicia a execução de uma tarefa assíncrona."
  remarks: "Definir uma tarefa assíncrona usando a <xref:System.Web.UI.PageAsyncTask>classe.</xref:System.Web.UI.PageAsyncTask> Depois que a tarefa está definida e está registrada com a página usando o <xref:System.Web.UI.Page.RegisterAsyncTask%2A>método, o método ExecuteRegisteredAsyncTasks pode ser chamado para iniciar a tarefa assíncrona.</xref:System.Web.UI.Page.RegisterAsyncTask%2A>       Os ExecuteRegisteredAsyncTasks método é chamado automaticamente no ponto em que o processamento da página quando qualquer registrado tarefas assíncronas, caso existam, são chamados de uma página não pode ser assíncrona. Essa chamada automática para ExecuteRegisteredAsyncTasks ocorre imediatamente antes do <xref:System.Web.UI.Page.PreRenderComplete>evento.</xref:System.Web.UI.Page.PreRenderComplete> Chame o método de ExecuteRegisteredAsyncTasks para tarefas que você deseja às vezes chamado que não seja a chamada automática para esse método. Observe que tarefas assíncronas serão executadas apenas uma vez, embora ExecuteRegisteredAsyncTasks pode ser chamado mais de uma vez.       O <xref:System.Web.UI.Page.AsyncTimeout%2A>propriedade será redefinida em cada chamada ao método ExecuteRegisteredAsyncTasks.</xref:System.Web.UI.Page.AsyncTimeout%2A> O último valor da <xref:System.Web.UI.Page.AsyncTimeout%2A>antes de chamar o ExecuteRegisteredAsyncTasks método prevalece.</xref:System.Web.UI.Page.AsyncTimeout%2A> Se uma tarefa assíncrona demorar mais do que o <xref:System.Web.UI.Page.AsyncTimeout%2A>, tarefas subsequentes invocadas durante a chamada ExecuteRegisteredAsyncTasks se esgotou imediatamente.</xref:System.Web.UI.Page.AsyncTimeout%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the ExecuteRegisteredAsyncTasks and <xref:System.Web.UI.Page.RegisterAsyncTask%2A> methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.exe_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.exe_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.exe_2.vb)]"
  syntax:
    content: public void ExecuteRegisteredAsyncTasks ();
    parameters: []
  overload: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Há uma exceção na tarefa assíncrona."
  platform:
  - net462
- uid: System.Web.UI.Page.FileDependencies
  id: FileDependencies
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FileDependencies
  nameWithType: Page.FileDependencies
  fullName: System.Web.UI.Page.FileDependencies
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define uma matriz de arquivos que atual <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objeto depende."
  remarks: "Essa propriedade foi preterida. Use o <xref:System.Web.HttpResponse.AddFileDependencies%2A>método ou o <xref:System.Web.HttpResponse.AddFileDependency%2A>método o <xref:System.Web.HttpResponse>classe em vez disso.</xref:System.Web.HttpResponse> </xref:System.Web.HttpResponse.AddFileDependency%2A> </xref:System.Web.HttpResponse.AddFileDependencies%2A>       Na maioria das circunstâncias, não defina essa propriedade no código. Definir o `FileDependencies` atributo `true` usando a diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define a propriedade."
  syntax:
    content: protected System.Collections.ArrayList FileDependencies { set; }
    return:
      type: System.Collections.ArrayList
      description: "A matriz de arquivos atual <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objeto depende."
  overload: System.Web.UI.Page.FileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.FindControl(System.String)
  id: FindControl(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FindControl(String)
  nameWithType: Page.FindControl(String)
  fullName: System.Web.UI.Page.FindControl(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Pesquisa o contêiner de nomeação de página para um controle de servidor com o identificador especificado."
  remarks: "O método FindControl pode ser usado para acessar um controle cujo <xref:System.Web.UI.Control.ID%2A>não está disponível em tempo de design.</xref:System.Web.UI.Control.ID%2A> O método de pesquisa somente da página imediata ou de nível superior, contêiner; Isso é feito não a pesquisa recursivamente para controles em contêineres de nomenclatura contidos na página. Para acessar os controles em um contêiner de nomenclatura subordinado, chamar o `FindControl` método do contêiner."
  example:
  - "The following code example demonstrates how to use the FindControl method to locate controls inside templates. In this example, two <xref:System.Web.UI.WebControls.Repeater> controls are defined; each shows a different way to catch the <xref:System.Web.UI.WebControls.LinkButton.Click> event of a <xref:System.Web.UI.WebControls.LinkButton> inside the repeater item template.  \n  \n [!code-cs[System.Web.UI.Page_FindControl#1](~/add/codesnippet/csharp/m-system.web.ui.page.fin_1.aspx)]\n [!code-vb[System.Web.UI.Page_FindControl#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.fin_1.aspx)]"
  syntax:
    content: public override System.Web.UI.Control FindControl (string id);
    parameters:
    - id: id
      type: System.String
      description: "O identificador para o controle a ser localizado."
    return:
      type: System.Web.UI.Control
      description: "O controle especificado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o controle especificado não existe."
  overload: System.Web.UI.Page.FindControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Form
  id: Form
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Form
  nameWithType: Page.Form
  fullName: System.Web.UI.Page.Form
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o formulário HTML para a página."
  remarks: "Use a propriedade de formato para acessar os métodos e propriedades do <xref:System.Web.UI.HtmlControls.HtmlForm>objeto que é a base da hierarquia de controle na página.</xref:System.Web.UI.HtmlControls.HtmlForm>"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlForm Form { get; }
    return:
      type: System.Web.UI.HtmlControls.HtmlForm
      description: "O <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> objeto associado à página."
  overload: System.Web.UI.Page.Form*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.FrameworkInitialize
  id: FrameworkInitialize
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: FrameworkInitialize()
  nameWithType: Page.FrameworkInitialize()
  fullName: System.Web.UI.Page.FrameworkInitialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa a árvore de controle durante a geração de página com base na natureza declarativa da página."
  remarks: "O método FrameworkInitialize inicializa o <xref:System.Web.UI.Page>de objeto e cria a árvore de controle com base na natureza declarativa da página.</xref:System.Web.UI.Page> O método FrameworkInitialize é substituído pela página de análise e geração de código para o <xref:System.Web.UI.Page>classe para uma página declarativa.</xref:System.Web.UI.Page> Em geral, você deve não sobre a necessidade de substituir esse método. Se a substituição, certifique-se de chamar o método de FrameworkInitialize da classe base."
  syntax:
    content: protected override void FrameworkInitialize ();
    parameters: []
  overload: System.Web.UI.Page.FrameworkInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetDataItem
  id: GetDataItem
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetDataItem()
  nameWithType: Page.GetDataItem()
  fullName: System.Web.UI.Page.GetDataItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o item de dados na parte superior da pilha de contexto de associação de dados."
  syntax:
    content: public object GetDataItem ();
    parameters: []
    return:
      type: System.Object
      description: "O objeto no topo da pilha de contexto de associação de dados."
  overload: System.Web.UI.Page.GetDataItem*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não há nenhum contexto de associação de dados para a página."
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  id: GetPostBackClientEvent(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackClientEvent(Control,String)
  nameWithType: Page.GetPostBackClientEvent(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência que pode ser usada em um evento de cliente volta para o servidor para o controle especificado e com os argumentos do evento especificado."
  remarks: "Consulte o <xref:System.Web.UI.ClientScriptManager>classe para alternativas para esse membro obsoleto.</xref:System.Web.UI.ClientScriptManager>"
  syntax:
    content: public string GetPostBackClientEvent (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O controle de servidor que recebe a postagem de eventos do cliente."
    - id: argument
      type: System.String
      description: "Um <xref:System.String>que é passado para &lt;xref:System.Web.UI.IPostBackEventHandler.RaisePostBackEvent%2A?displayProperty=fullName&gt;.</xref:System.String>"
    return:
      type: System.String
      description: "A cadeia de caracteres que representa o evento de cliente."
  overload: System.Web.UI.Page.GetPostBackClientEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  id: GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: Page.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma referência com <xref uid=&quot;langword_csharp_javascript:&quot; name=&quot;javascript:&quot; href=&quot;&quot;> </xref> anexado ao início do mesmo, que pode ser usado em um evento de cliente volta para o servidor para o controle especificado e com os argumentos do evento especificado."
  remarks: "Consulte o <xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>método para obter uma alternativa a esse membro preterido.</xref:System.Web.UI.ClientScriptManager.GetPostBackClientHyperlink%2A>"
  syntax:
    content: public string GetPostBackClientHyperlink (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O controle de servidor para processar o postback."
    - id: argument
      type: System.String
      description: "O parâmetro passado para o controle de servidor."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa uma chamada de JavaScript para a função de postback que inclui os argumentos de evento e de ID do controle de destino."
  overload: System.Web.UI.Page.GetPostBackClientHyperlink*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  id: GetPostBackEventReference(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackEventReference(Control)
  nameWithType: Page.GetPostBackEventReference(Control)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Retorna uma cadeia de caracteres que pode ser usada em um evento de cliente para causar um postback para o servidor. A cadeia de caracteres de referência é definida por especificado <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto."
  remarks: "Esse método foi preterido. Use o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método o <xref:System.Web.UI.ClientScriptManager>classe em vez disso.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - >-
    [!code-cs[Page_GetPostBackEventReference#2](~/add/codesnippet/csharp/m-system.web.ui.page.get_1_1.cs)]
     [!code-vb[Page_GetPostBackEventReference#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_1_1.vb)]
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O controle de servidor para processar a postagem no servidor."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que, quando tratado como um script no cliente, inicia o postback."
  overload: System.Web.UI.Page.GetPostBackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  id: GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetPostBackEventReference(Control,String)
  nameWithType: Page.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Retorna uma cadeia de caracteres que pode ser usada em um evento de cliente para causar um postback para o servidor. A cadeia de caracteres de referência é definida pelo controle especificado que manipula a postagem e um argumento de cadeia de caracteres de informações de evento adicionais."
  remarks: "Esse método foi preterido. Use o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método o <xref:System.Web.UI.ClientScriptManager>classe em vez disso.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>"
  example:
  - >-
    [!code-cs[Page_GetPostBackEventReference#1](~/add/codesnippet/csharp/3b7b8690-0737-43de-b442-_1.cs)]
     [!code-vb[Page_GetPostBackEventReference#1](~/add/codesnippet/visualbasic/3b7b8690-0737-43de-b442-_1.vb)]
  syntax:
    content: public string GetPostBackEventReference (System.Web.UI.Control control, string argument);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O controle de servidor para processar o postback."
    - id: argument
      type: System.String
      description: "O parâmetro passado para o controle de servidor."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que, quando tratado como um script no cliente, inicia o postback."
  overload: System.Web.UI.Page.GetPostBackEventReference*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetTypeHashCode
  id: GetTypeHashCode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetTypeHashCode()
  nameWithType: Page.GetTypeHashCode()
  fullName: System.Web.UI.Page.GetTypeHashCode()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Recupera um código de hash que é gerado pelo <xref href=&quot;System.Web.UI.Page&quot;> </xref> objetos que são gerados em tempo de execução. Esse código de hash é exclusivo para o <xref href=&quot;System.Web.UI.Page&quot;> </xref> hierarquia de controle do objeto."
  remarks: "Não substitua este método."
  syntax:
    content: public virtual int GetTypeHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código de hash gerado em tempo de execução. O padrão é 0."
  overload: System.Web.UI.Page.GetTypeHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetValidators(System.String)
  id: GetValidators(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetValidators(String)
  nameWithType: Page.GetValidators(String)
  fullName: System.Web.UI.Page.GetValidators(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Retorna uma coleção de validadores de controle para um grupo de validação especificada."
  remarks: "O método GetValidators retorna todos os objetos de validação associados a um grupo de validação específico. Você pode retornar o grupo de validação padrão (todos os controles de validação associados a controles sem o `ValidationGroup` conjunto de propriedades), definindo o `validationGroup` parâmetro `null`.       Para validar os membros do grupo de validação, você pode enumerar sobre a coleta e a chamada a <xref:System.Web.UI.IValidator.Validate%2A>retornado do método de cada validador.</xref:System.Web.UI.IValidator.Validate%2A>"
  example:
  - "The following code example uses the GetValidators method to return the default validation group.  \n  \n [!code-vb[PageGetValidators#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.get_0_1.aspx)]\n [!code-cs[PageGetValidators#1](~/add/codesnippet/csharp/m-system.web.ui.page.get_0_1.aspx)]"
  syntax:
    content: public System.Web.UI.ValidatorCollection GetValidators (string validationGroup);
    parameters:
    - id: validationGroup
      type: System.String
      description: "O grupo de validação para retornar, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> para retornar o grupo de validação padrão."
    return:
      type: System.Web.UI.ValidatorCollection
      description: "Um <xref href=&quot;System.Web.UI.ValidatorCollection&quot;> </xref> que contém os validadores de controle para o grupo de validação especificada."
  overload: System.Web.UI.Page.GetValidators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  id: GetWrappedFileDependencies(System.String[])
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: GetWrappedFileDependencies(String[])
  nameWithType: Page.GetWrappedFileDependencies(String[])
  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Retorna uma lista de nomes de arquivo físico que corresponde a uma lista de locais de arquivo virtual."
  remarks: "O método GetWrappedFileDependencies obtém uma lista de arquivos, como arquivos de controle de usuário, que compõem a página atual. Se qualquer uma dessas páginas são modificados, a página inteira é compilada na próxima vez que forem solicitados. Não substitua este método."
  syntax:
    content: protected object GetWrappedFileDependencies (string[] virtualFileDependencies);
    parameters:
    - id: virtualFileDependencies
      type: System.String[]
      description: "Uma matriz de cadeia de caracteres de locais de arquivo virtual."
    return:
      type: System.Object
      description: "Um objeto que contém uma lista de locais de arquivo físico."
  overload: System.Web.UI.Page.GetWrappedFileDependencies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Header
  id: Header
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Header
  nameWithType: Page.Header
  fullName: System.Web.UI.Page.Header
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o cabeçalho do documento para a página, se o <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref> elemento é definido com um <xref uid=&quot;langword_csharp_runat=server&quot; name=&quot;runat=server&quot; href=&quot;&quot;> </xref> na declaração da página."
  remarks: "A propriedade de cabeçalho obtém uma referência a um <xref:System.Web.UI.HtmlControls.HtmlHead>que você pode usar para definir as informações de cabeçalho do documento para a página do objeto.</xref:System.Web.UI.HtmlControls.HtmlHead> O <xref:System.Web.UI.HtmlControls.HtmlHead>permite que você adicione informações como folhas de estilo, regras de estilo, um título e os metadados para o `head` elemento.</xref:System.Web.UI.HtmlControls.HtmlHead>      > [!NOTE] > Adicionando estilos programaticamente usando os métodos do <xref:System.Web.UI.IStyleSheet>não há suporte para a interface durante postbacks assíncronos.</xref:System.Web.UI.IStyleSheet> Quando você adiciona recursos AJAX a uma página da Web, postbacks assíncronos atualizar regiões da página sem atualizar a página inteira. Para obter mais informações, consulte [visão geral do Microsoft Ajax](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to access the <xref:System.Web.UI.HtmlControls.HtmlHead> control programmatically using the Header property. A `title` element and `style` element are added to the `head` element of the page.  \n  \n [!code-cs[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/csharp/p-system.web.ui.page.hea_1.aspx)]\n [!code-vb[System.Web.UI.HtmlControls.HtmlHeadClass#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.hea_1.aspx)]"
  syntax:
    content: public System.Web.UI.HtmlControls.HtmlHead Header { get; }
    return:
      type: System.Web.UI.HtmlControls.HtmlHead
      description: "Um <xref href=&quot;System.Web.UI.HtmlControls.HtmlHead&quot;> </xref> que contém o cabeçalho de página."
  overload: System.Web.UI.Page.Header*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ID
  id: ID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ID
  nameWithType: Page.ID
  fullName: System.Web.UI.Page.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um identificador para uma instância específica do <xref href=&quot;System.Web.UI.Page&quot;> </xref> classe."
  syntax:
    content: public override string ID { get; set; }
    return:
      type: System.String
      description: "O identificador para a instância do <xref href=&quot;System.Web.UI.Page&quot;> </xref> classe. O valor padrão é &quot;_Page&quot;."
  overload: System.Web.UI.Page.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IdSeparator
  id: IdSeparator
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IdSeparator
  nameWithType: Page.IdSeparator
  fullName: System.Web.UI.Page.IdSeparator
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o caractere usado para separar os identificadores de controle ao criar uma ID exclusiva para um controle em uma página."
  syntax:
    content: public virtual char IdSeparator { get; }
    return:
      type: System.Char
      description: "O caractere usado para separar os identificadores de controle. O padrão é definido pelo <xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref> instância que processa a página. O IdSeparator é um campo do lado do servidor e não deve ser modificado."
  overload: System.Web.UI.Page.IdSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitComplete
  id: InitComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitComplete
  nameWithType: Page.InitComplete
  fullName: System.Web.UI.Page.InitComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre quando a página de inicialização é concluída."
  remarks: "O evento InitComplete é chamado no final do estágio de inicialização da página. Neste estágio do ciclo de vida da página, todos declarados controles na página são inicializados, mas o estado da página ainda não está preenchido. Você pode acessar os controles de servidor, mas eles ainda não conterá informações retornadas do usuário.       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler InitComplete;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitializeCulture
  id: InitializeCulture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitializeCulture()
  nameWithType: Page.InitializeCulture()
  fullName: System.Web.UI.Page.InitializeCulture()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Conjuntos de <> </> *> e <> </> *> para o thread atual da página."
  remarks: "O método InitializeCulture não contém nenhuma lógica de codificação. Controlar os desenvolvedores estender a funcionalidade do <xref:System.Web.UI.Page>classe pode substituir o método InitializeCulture para inicializar o <xref:System.Web.UI.Page.Culture%2A>e <xref:System.Web.UI.Page.UICulture%2A>informações para a página.</xref:System.Web.UI.Page.UICulture%2A> </xref:System.Web.UI.Page.Culture%2A> </xref:System.Web.UI.Page>"
  syntax:
    content: protected virtual void InitializeCulture ();
    parameters: []
  overload: System.Web.UI.Page.InitializeCulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  id: InitOutputCache(System.Web.UI.OutputCacheParameters)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(OutputCacheParameters)
  nameWithType: Page.InitOutputCache(OutputCacheParameters)
  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa o cache de saída para a solicitação de página atual com base em um <xref href=&quot;System.Web.UI.OutputCacheParameters&quot;> </xref> objeto."
  remarks: "Você não deve chamar esse método. Para habilitar e manipular o cache de saída para uma página, use ou a diretiva no arquivo. aspx, ou os métodos e propriedades da <xref:System.Web.HttpCachePolicy>classe.</xref:System.Web.HttpCachePolicy> O segundo é acessível por meio de `Response.Cache` sintaxe no arquivo de bloco ou code-behind de declaração de código da página. Para obter mais informações, consulte [Caching ASP.NET Pages](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void InitOutputCache (System.Web.UI.OutputCacheParameters cacheSettings);
    parameters:
    - id: cacheSettings
      type: System.Web.UI.OutputCacheParameters
      description: "Um <xref href=&quot;System.Web.UI.OutputCacheParameters&quot;> </xref> que contém as configurações de cache."
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The cache profile was not found.  \n  \n \\- or -  \n  \n A missing directive or configuration settings profile attribute."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O local de configurações de cache de saída é inválido."
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  id: InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa o cache de saída para a solicitação de página atual."
  remarks: "Você não deve chamar esse método. Para habilitar e manipular o cache de saída para uma página, use ou a diretiva no arquivo. aspx, ou os métodos e propriedades da <xref:System.Web.HttpCachePolicy>classe.</xref:System.Web.HttpCachePolicy> O segundo é acessível por meio de `Response.Cache` sintaxe no código da página. Para obter mais informações, consulte [Caching ASP.NET Pages](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void InitOutputCache (int duration, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);
    parameters:
    - id: duration
      type: System.Int32
      description: "A quantidade de tempo que os objetos armazenados no cache de saída são válidos."
    - id: varyByHeader
      type: System.String
      description: "Uma lista separada por ponto e vírgula de cabeçalhos de conteúdo do cache de saída variam por."
    - id: varyByCustom
      type: System.String
      description: "O <xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;> </xref> cabeçalho HTTP."
    - id: location
      type: System.Web.UI.OutputCacheLocation
      description: "Uma da <xref href=&quot;System.Web.UI.OutputCacheLocation&quot;> </xref> valores."
    - id: varyByParam
      type: System.String
      description: "Uma lista separada por vírgulas de parâmetros recebidos por um método GET ou POST que o conteúdo do cache de saída variam por."
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um valor inválido é especificado para <code> location </code>."
  platform:
  - net462
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  id: InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa o cache de saída para a solicitação de página atual."
  remarks: "Você não deve chamar esse método. Para habilitar e manipular o cache de saída para uma página, use ou a diretiva no arquivo. aspx, ou métodos e propriedades de <xref:System.Web.HttpCachePolicy>classe.</xref:System.Web.HttpCachePolicy> O segundo é acessível por meio de `Response.Cache` sintaxe no código da página. Para obter mais informações, consulte [Caching ASP.NET Pages](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: protected virtual void InitOutputCache (int duration, string varyByContentEncoding, string varyByHeader, string varyByCustom, System.Web.UI.OutputCacheLocation location, string varyByParam);
    parameters:
    - id: duration
      type: System.Int32
      description: "A quantidade de tempo que os objetos armazenados no cache de saída são válidos."
    - id: varyByContentEncoding
      type: System.String
      description: "Uma lista separada por ponto e vírgula-de conjuntos de caracteres (codificações de conteúdo) que o conteúdo do cache de saída variam por."
    - id: varyByHeader
      type: System.String
      description: "Uma lista separada por ponto e vírgula de cabeçalhos de conteúdo do cache de saída variam por."
    - id: varyByCustom
      type: System.String
      description: "O <xref uid=&quot;langword_csharp_Vary&quot; name=&quot;Vary&quot; href=&quot;&quot;> </xref> cabeçalho HTTP."
    - id: location
      type: System.Web.UI.OutputCacheLocation
      description: "Uma da <xref href=&quot;System.Web.UI.OutputCacheLocation&quot;> </xref> valores."
    - id: varyByParam
      type: System.String
      description: "Uma lista separada por vírgulas de parâmetros recebidos por um método GET ou POST que o conteúdo do cache de saída variam por."
  overload: System.Web.UI.Page.InitOutputCache*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Um valor inválido é especificado para <code> location </code>."
  platform:
  - net462
- uid: System.Web.UI.Page.IsAsync
  id: IsAsync
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsAsync
  nameWithType: Page.IsAsync
  fullName: System.Web.UI.Page.IsAsync
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se a página é processada de forma assíncrona."
  remarks: "Use a propriedade é assíncrono para determinar se a página da Web está em execução no modo assíncrono. Essas informações são úteis se precisar de código na página ou controles modificar seu comportamento dependendo se a página é assíncrona. Para obter mais informações sobre a programação assíncrona, consulte [operações assíncronas](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsAsync { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a página estiver no modo assíncrono; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>;"
  overload: System.Web.UI.Page.IsAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsCallback
  id: IsCallback
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsCallback
  nameWithType: Page.IsCallback
  fullName: System.Web.UI.Page.IsCallback
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se a solicitação de página é o resultado de um retorno de chamada."
  remarks: "Para obter mais informações, consulte [implementando retornos de chamada de cliente sem Postbacks](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool IsCallback { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a solicitação de página é o resultado de retorno de chamada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsCallback*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  id: IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsClientScriptBlockRegistered(String)
  nameWithType: Page.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o bloco de script de cliente com a chave especificada está registrado com a página."
  remarks: "Chame esse método antes de chamar <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName>para evitar desnecessariamente montando o script do lado do cliente.</xref:System.Web.UI.Page.RegisterClientScriptBlock%2A?displayProperty=fullName> Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.       O método IsClientScriptBlockRegistered foi preterido. Use o <xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>método de <xref:System.Web.UI.ClientScriptManager>classe.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.IsClientScriptBlockRegistered%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> method in conjunction with the IsClientScriptBlockRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsClientScriptBlockRegistered, then a <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.isc_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.isc_1.aspx)]"
  syntax:
    content: public bool IsClientScriptBlockRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "A chave de cadeia de caracteres do script de cliente para pesquisar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o bloco de script estiver registrado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsClientScriptBlockRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsCrossPagePostBack
  id: IsCrossPagePostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
  fullName: System.Web.UI.Page.IsCrossPagePostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se a página está envolvida em uma postagem entre páginas."
  remarks: "O ASP.NET fornece dois mecanismos para transferir o controle de uma página para outra. Você pode usar o <xref:System.Web.HttpServerUtility.Transfer%2A>método para transferir o processamento entre páginas, ou você pode fazer uma solicitação de página atribuindo uma URL de página para o <xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A>propriedade de um controle de botão que implementa o <xref:System.Web.UI.WebControls.IButtonControl>interface.</xref:System.Web.UI.WebControls.IButtonControl> </xref:System.Web.UI.WebControls.IButtonControl.PostBackUrl%2A> </xref:System.Web.HttpServerUtility.Transfer%2A>       Em ambos os casos, o <xref:System.Web.UI.Page.PreviousPage%2A>propriedade página conterá um objeto que representa a página anterior ou originador.</xref:System.Web.UI.Page.PreviousPage%2A> Se, por exemplo, Page A envia para a página B, propriedade de IsCrossPagePostBack da página A (acessível por meio de <xref:System.Web.UI.Page.PreviousPage%2A>propriedade) será `true` e <xref:System.Web.UI.Page.PreviousPage%2A>propriedade terá o nome da página a da página B</xref:System.Web.UI.Page.PreviousPage%2A> </xref:System.Web.UI.Page.PreviousPage%2A>"
  syntax:
    content: public bool IsCrossPagePostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a página estiver participando de uma solicitação de página; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsCrossPagePostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsPostBack
  id: IsPostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsPostBack
  nameWithType: Page.IsPostBack
  fullName: System.Web.UI.Page.IsPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se a página está sendo processada pela primeira vez ou está sendo carregada em resposta a um postback."
  remarks: "Para obter uma explicação da diferença entre postbacks e retornos de chamada, consulte [implementando retornos de chamada de cliente sem Postbacks](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to test the value of the IsPostBack property when the page is loaded in order to determine whether the page is being rendered for the first time or is responding to a postback. If the page is being rendered for the first time, the code calls the <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> method.  \n  \n The page markup (not shown) contains <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls that display asterisks if no entry is made for a required input field. Calling <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> causes the asterisks to be displayed immediately when the page is rendered, instead of waiting until the user clicks the Submit button. After a postback, you do not have to call <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>, because that method is called as part of the <xref:System.Web.UI.Page> life cycle.  \n  \n [!code-vb[System.Web.UI.Page.Validate#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.isp_1.aspx)]\n [!code-cs[System.Web.UI.Page.Validate#1](~/add/codesnippet/csharp/p-system.web.ui.page.isp_1.aspx)]"
  syntax:
    content: public bool IsPostBack { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a página está sendo carregada em resposta a uma postagem de cliente; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered
  id: IsPostBackEventControlRegistered
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o controle em uma página que executa postbacks foi registrado."
  syntax:
    content: public bool IsPostBackEventControlRegistered { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle tiver sido registrado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsPostBackEventControlRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsReusable
  id: IsReusable
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsReusable
  nameWithType: Page.IsReusable
  fullName: System.Web.UI.Page.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto pode ser reutilizado."
  syntax:
    content: public bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Web.UI.Page.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  id: IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsStartupScriptRegistered(String)
  nameWithType: Page.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o script de inicialização do cliente está registrado com o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto."
  remarks: "Chame esse método antes de chamar <xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName>para evitar desnecessariamente montando o script do lado do cliente.</xref:System.Web.UI.Page.RegisterStartupScript%2A?displayProperty=fullName> Isso é particularmente importante se o script requer uma grande quantidade de recursos de servidor para criar.       O método IsStartupScriptRegistered foi preterido. Use o <xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>método de <xref:System.Web.UI.ClientScriptManager>classe.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.IsStartupScriptRegistered%2A>"
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method in conjunction with the IsStartupScriptRegistered method. If the ECMAScript written in the code declaration block has not already been registered, as determined by IsStartupScriptRegistered, then a <xref:System.Web.UI.Page.RegisterStartupScript%2A> call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.iss_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.iss_1.aspx)]"
  syntax:
    content: public bool IsStartupScriptRegistered (string key);
    parameters:
    - id: key
      type: System.String
      description: "A chave de cadeia de caracteres do script de inicialização para pesquisar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o script de inicialização estiver registrado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsStartupScriptRegistered*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.IsValid
  id: IsValid
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: IsValid
  nameWithType: Page.IsValid
  fullName: System.Web.UI.Page.IsValid
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se a validação de página foi bem-sucedida."
  remarks: "Para essa propriedade retornar `true`, todos os controles de servidor de validação no grupo de validação atual devem validar com êxito. Você deve verificar essa propriedade somente depois de ter chamado o <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>método ou conjunto o `CausesValidation` propriedade `true` no `OnServerClick` manipulador de eventos para um controle de servidor ASP.NET que inicia o processamento do formulário.</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> Esses controles de servidor incluem o <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.HtmlControls.HtmlButton>, <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, <xref:System.Web.UI.WebControls.ImageButton>, e <xref:System.Web.UI.WebControls.LinkButton>classes.</xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.WebControls.Button>       Se você forçar a validação de um grupo de validação usando o <xref:System.Web.UI.Page.Validate%2A>método e, em seguida, todos os controles de validação no grupo de validação especificada devem validar com sucesso bem.</xref:System.Web.UI.Page.Validate%2A>"
  example:
  - "The following code example demonstrates using the IsValid property to set up a conditional statement. If the property returns `true`, the `Text` property of the `lblOutput` control is set to \"Page is valid!\" Otherwise, it is set to \"Some of the required fields are empty.\"  \n  \n [!code-vb[System.Web.UI.Page.Validate#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.isv_1.aspx)]\n [!code-cs[System.Web.UI.Page.Validate#2](~/add/codesnippet/csharp/p-system.web.ui.page.isv_1.aspx)]"
  syntax:
    content: public bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a validação de página foi bem-sucedida. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.IsValid*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A propriedade IsValid é chamada antes de validação ocorreu."
  platform:
  - net462
- uid: System.Web.UI.Page.Items
  id: Items
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Items
  nameWithType: Page.Items
  fullName: System.Web.UI.Page.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma lista de objetos armazenados no contexto da página."
  remarks: "Use a propriedade Items para armazenar objetos com a mesma duração que a solicitação de página. Essa propriedade é somente leitura; No entanto, você pode adicionar objetos para o <xref:System.Collections.IDictionary>objeto retorna.</xref:System.Collections.IDictionary>       Objetos adicionados para a propriedade de itens estão disponíveis durante o tempo de vida da página, você pode adicionar objetos à propriedade Items em eventos no início do ciclo de vida da página e acessar os objetos nos eventos posteriores."
  syntax:
    content: public System.Collections.IDictionary Items { get; }
    return:
      type: System.Collections.IDictionary
      description: "Uma referência a um <xref:System.Collections.IDictionary>que contém os objetos armazenados no contexto da página.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.Page.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LCID
  id: LCID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LCID
  nameWithType: Page.LCID
  fullName: System.Web.UI.Page.LCID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define o identificador de localidade para o <xref href=&quot;System.Threading.Thread&quot;> </xref> objeto associado à página."
  remarks: "Na maioria das circunstâncias, não defina essa propriedade no código. O `LCID` atributo pode ser definido na diretiva de arquivo. aspx, no entanto, o método preferencial de definir o identificador de localidade é através do uso do <xref:System.Web.UI.Page.Culture%2A>e <xref:System.Web.UI.Page.UICulture%2A>Propriedades.</xref:System.Web.UI.Page.UICulture%2A> </xref:System.Web.UI.Page.Culture%2A>"
  syntax:
    content: public int LCID { get; set; }
    return:
      type: System.Int32
      description: "O identificador de localidade para passar para o <xref href=&quot;System.Threading.Thread&quot;> </xref>."
  overload: System.Web.UI.Page.LCID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LoadComplete
  id: LoadComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LoadComplete
  nameWithType: Page.LoadComplete
  fullName: System.Web.UI.Page.LoadComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre no final do estágio de carga do ciclo de vida da página."
  remarks: "O evento LoadComplete ocorre após a postagem de todos os dados e dados de estado de exibição são carregados para a página e depois o <xref:System.Web.UI.Control.OnLoad%2A>método foi chamado para todos os controles na página.</xref:System.Web.UI.Control.OnLoad%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler LoadComplete;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  id: LoadPageStateFromPersistenceMedium
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: LoadPageStateFromPersistenceMedium()
  nameWithType: Page.LoadPageStateFromPersistenceMedium()
  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Carrega qualquer salva informações de estado de exibição para o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto."
  remarks: "O método LoadPageStateFromPersistenceMedium usa o <xref:System.Web.UI.PageStatePersister.Load%2A>método do <xref:System.Web.UI.PageStatePersister?displayProperty=fullName>objeto referenciado pelo <xref:System.Web.UI.Page.PageStatePersister%2A>propriedade ao carregar qualquer salva informações de estado de exibição para o <xref:System.Web.UI.Page>objeto.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.PageStatePersister%2A> </xref:System.Web.UI.PageStatePersister?displayProperty=fullName> </xref:System.Web.UI.PageStatePersister.Load%2A>       O ASP.NET inclui dois descendentes do <xref:System.Web.UI.PageStatePersister>classe, o <xref:System.Web.UI.HiddenFieldPageStatePersister>classe que salva informações de estado de um campo oculto incluído na página do ASP.NET, e o <xref:System.Web.UI.SessionPageStatePersister>classe que salva o estado no <xref:System.Web.UI.Page.Session%2A>objeto associado à solicitação.</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.UI.HiddenFieldPageStatePersister> </xref:System.Web.UI.PageStatePersister>       Para salvar o estado no local de sua escolha, você deve criar um novo descendente do <xref:System.Web.UI.PageStatePersister>classe salva e carrega o estado para a mídia de persistência de sua escolha.</xref:System.Web.UI.PageStatePersister> Para obter um exemplo de criação de um novo <xref:System.Web.UI.PageStatePersister>objeto, consulte a <xref:System.Web.UI.PageStatePersister>classe.</xref:System.Web.UI.PageStatePersister> </xref:System.Web.UI.PageStatePersister>       Se você estiver usando o .NET Framework versão 1.0 ou 1.1, substitua este método se você deseja carregar o <xref:System.Web.UI.Page>estado de qualquer coisa diferente de um campo oculto.</xref:System.Web.UI.Page> Se você optar por fazer isso, você também deve substituir o <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>método.</xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>"
  syntax:
    content: protected virtual object LoadPageStateFromPersistenceMedium ();
    parameters: []
    return:
      type: System.Object
      description: "O estado de exibição salvo."
  overload: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  id: MaintainScrollPositionOnPostBack
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se deve retornar o usuário para a mesma posição no navegador do cliente depois de postback. Essa propriedade substitui a obsoleto <xref:System.Web.UI.Page.SmartNavigation*>propriedade.</xref:System.Web.UI.Page.SmartNavigation*>"
  remarks: "Quando páginas da Web são postadas no servidor, o usuário é retornado para a parte superior da página. Em páginas da Web longo, isso significa que o usuário tem que rolar a página de volta para a última posição na página.       Quando a propriedade MaintainScrollPositionOnPostBack é definida como `true`, o usuário é voltará para a última posição na página.       Defina a propriedade MaintainScrollPositionOnPostBack [@ Page](http://msdn.microsoft.com/en-us/f06cf9e5-22bb-461d-8b8f-549e53ff40a4) diretiva."
  syntax:
    content: public bool MaintainScrollPositionOnPostBack { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a posição do cliente deve ser mantida; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.MaintainScrollPositionOnPostBack*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: Page.MapPath(String)
  fullName: System.Web.UI.Page.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Recupera o caminho físico que mapeia um caminho virtual, absoluto ou relativo, ou um caminho relativo de aplicativo."
  remarks: >-
    > [!CAUTION]

    >  The MapPath property can potentially contain sensitive information about the hosting environment. The return value should not be displayed to users.
  example:
  - "The following example uses the MapPath method to obtain the physical path of a subfolder. It then appends the file name that is read from the <xref:System.Web.UI.WebControls.TextBox.Text%2A> property of a <xref:System.Web.UI.WebControls.TextBox> control. The result is the absolute physical path to that file.  \n  \n [!code-cs[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/csharp/m-system.web.ui.page.map_1.aspx)]\n [!code-vb[Page_MapPath_ResponseEncoding#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.map_1.aspx)]"
  syntax:
    content: public string MapPath (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "Um <xref:System.String>que representa o caminho virtual.</xref:System.String>"
    return:
      type: System.String
      description: "O caminho físico associado ao caminho virtual ou um caminho relativo de aplicativo."
  overload: System.Web.UI.Page.MapPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Master
  id: Master
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Master
  nameWithType: Page.Master
  fullName: System.Web.UI.Page.Master
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a página mestra que determina a aparência geral da página."
  remarks: "O mestre de propriedade retorna o <xref:System.Web.UI.MasterPage>objeto associado a esta página.</xref:System.Web.UI.MasterPage> Essa propriedade é somente leitura; No entanto, você pode definir propriedades no <xref:System.Web.UI.MasterPage>objeto retorna.</xref:System.Web.UI.MasterPage>       O mestre de propriedade é válida somente em páginas que referenciam uma página mestra a <xref:System.Web.UI.Page.MasterPageFile%2A>propriedade.</xref:System.Web.UI.Page.MasterPageFile%2A> Se você acessar o mestre de propriedade em uma página que não faz referência a uma página mestra, `null` será retornado. O conteúdo de uma página mestra não está disponível até que o <xref:System.Web.UI.Page.PreInit>evento foi gerado.</xref:System.Web.UI.Page.PreInit>"
  syntax:
    content: public System.Web.UI.MasterPage Master { get; }
    return:
      type: System.Web.UI.MasterPage
      description: "O <xref href=&quot;System.Web.UI.MasterPage&quot;> </xref> associado esta página se existir; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.Master*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.MasterPageFile
  id: MasterPageFile
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
  fullName: System.Web.UI.Page.MasterPageFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o caminho virtual da página mestra."
  remarks: "A propriedade MasterPageFile é um caminho virtual (a partir da raiz do aplicativo) do arquivo de página mestra associado a esta página. A propriedade MasterPageFile pode ser definida apenas no <xref:System.Web.UI.Page.PreInit>evento; ao tentar definir a propriedade MasterPageFile após o <xref:System.Web.UI.Page.PreInit>evento lançará um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Web.UI.Page.PreInit> </xref:System.Web.UI.Page.PreInit> Se a propriedade MasterPageFile não for válida, uma exceção do tipo <xref:System.Web.HttpException>é lançada posteriormente no ciclo de vida da página, mas nenhuma exceção é lançada quando a propriedade é definida <xref:System.Web.UI.Page.PreInit>evento.</xref:System.Web.UI.Page.PreInit> </xref:System.Web.HttpException>       Páginas que tem a propriedade MasterPageFile definida são páginas de conteúdo e, portanto, pode conter controles somente de nível superior que são <xref:System.Web.UI.WebControls.Content>controles.</xref:System.Web.UI.WebControls.Content>"
  syntax:
    content: public virtual string MasterPageFile { get; set; }
    return:
      type: System.String
      description: "O caminho virtual da página mestra."
  overload: System.Web.UI.Page.MasterPageFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade MasterPageFile é definida após o <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> evento for concluído."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The file specified in the MasterPageFile property does not exist.  \n  \n \\- or -  \n  \n The page does not have a <xref href=\"System.Web.UI.WebControls.Content\"></xref> control as the top level control."
  platform:
  - net462
- uid: System.Web.UI.Page.MaxPageStateFieldLength
  id: MaxPageStateFieldLength
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
  fullName: System.Web.UI.Page.MaxPageStateFieldLength
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o comprimento máximo para o campo de estado da página."
  remarks: "Quando a propriedade MaxPageStateFieldLength é definida como um número positivo, o estado de exibição enviado para o navegador do cliente é dividido em vários campos ocultos, e cada valor de campo é menor que o tamanho especificado na propriedade MaxPageStateFieldLength.       Definir a propriedade MaxPageStateFieldLength como um número negativo (o padrão) indica que o campo de estado de exibição não deverá ser separado em partes. Configuração MaxPageStateFieldLength com um número pequeno pode resultar em baixo desempenho.       Defina o valor da propriedade MaxPageStateFieldLength no do arquivo Web. config."
  syntax:
    content: public int MaxPageStateFieldLength { get; set; }
    return:
      type: System.Int32
      description: "O comprimento máximo, em bytes, para o campo de estado da página. O padrão é -1."
  overload: System.Web.UI.Page.MaxPageStateFieldLength*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A propriedade MaxPageStateFieldLength não é igual a -1 ou um número positivo."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade MaxPageStateFieldLength foi definida depois que a página foi inicializada."
  platform:
  - net462
- uid: System.Web.UI.Page.MetaDescription
  id: MetaDescription
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MetaDescription
  nameWithType: Page.MetaDescription
  fullName: System.Web.UI.Page.MetaDescription
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o conteúdo de &quot;Descrição&quot; <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "HTML `meta` elementos podem ser usados para melhorar o mecanismo de pesquisa. &quot;Descrição&quot; `meta` elemento é usado por alguns mecanismos de pesquisa para melhorar as visualizações de lista.       Se não houver nenhuma &quot;Descrição&quot; `meta` elemento o `head` elemento de marcação da página, o `meta` elemento é adicionado à página quando a página é renderizada. Se a marcação de página já tem uma &quot;Descrição&quot; `meta` elemento, essa propriedade obtém ou define o `content` atributo o `meta` elemento.       Você também pode definir essa propriedade na diretiva."
  example:
  - "If you set the MetaDescription property of a page to \"ASP.NET Overview\", the following element will appear in the rendered HTML:  \n  \n `<meta name=\"description\" content=\"ASP.NET Overview\" />`"
  syntax:
    content: public string MetaDescription { get; set; }
    return:
      type: System.String
      description: "O conteúdo de &quot;Descrição&quot; <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Web.UI.Page.MetaDescription*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A página não tem um controle de cabeçalho (um <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref> elemento com o <xref uid=&quot;langword_csharp_runat&quot; name=&quot;runat&quot; href=&quot;&quot;> </xref> atributo definido como &quot;servidor&quot;)."
  platform:
  - net462
- uid: System.Web.UI.Page.MetaKeywords
  id: MetaKeywords
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
  fullName: System.Web.UI.Page.MetaKeywords
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o conteúdo de &quot;palavras-chave&quot; <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "HTML `meta` elementos podem ser usados para melhorar o mecanismo de pesquisa. &quot;keywords&quot; `meta` elemento não for usado em todos os ou recebe um peso muito pouco por principais mecanismos de pesquisa.       Se não houver nenhuma &quot;palavra-chave&quot; `meta` elemento o `head` elemento de marcação da página, o `meta` elemento é adicionado à página quando a página é renderizada. Se a marcação de página já tem um &quot;palavras-chave&quot; `meta` elemento, essa propriedade obtém ou define o `content` atributo o `meta` elemento.       Você também pode definir essa propriedade na diretiva."
  example:
  - "If you set the MetaKeywords property of a page to \"HTML,CSS,XML,JavaScript\", the following element will appear in the rendered HTML:  \n  \n `<meta name=\"keywords\" content=\" HTML,CSS,XML,JavaScript\" />`"
  syntax:
    content: public string MetaKeywords { get; set; }
    return:
      type: System.String
      description: "O conteúdo de &quot;palavras-chave&quot; <xref uid=&quot;langword_csharp_meta&quot; name=&quot;meta&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Web.UI.Page.MetaKeywords*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A página não tem um controle de cabeçalho (um <xref uid=&quot;langword_csharp_head&quot; name=&quot;head&quot; href=&quot;&quot;> </xref> elemento com o <xref uid=&quot;langword_csharp_runat&quot; name=&quot;runat&quot; href=&quot;&quot;> </xref> atributo definido como &quot;servidor&quot;)."
  platform:
  - net462
- uid: System.Web.UI.Page.ModelBindingExecutionContext
  id: ModelBindingExecutionContext
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
  fullName: System.Web.UI.Page.ModelBindingExecutionContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o contexto de execução de associação de modelo."
  syntax:
    content: public System.Web.ModelBinding.ModelBindingExecutionContext ModelBindingExecutionContext { get; }
    return:
      type: System.Web.ModelBinding.ModelBindingExecutionContext
      description: "O contexto de execução de associação de modelo. Se o contexto de execução de associação de modelo é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, uma nova é criada e retornada."
  overload: System.Web.UI.Page.ModelBindingExecutionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ModelState
  id: ModelState
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ModelState
  nameWithType: Page.ModelState
  fullName: System.Web.UI.Page.ModelState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o objeto de dicionário de estado de modelo que contém o estado do modelo e da validação de associação de modelo."
  remarks: "Para uma série de tutoriais sobre como usar a associação de modelo com formulários da Web, consulte [modelo de associação e formulários da Web](http://go.microsoft.com/fwlink/?LinkId=286117)."
  syntax:
    content: public System.Web.ModelBinding.ModelStateDictionary ModelState { get; }
    return:
      type: System.Web.ModelBinding.ModelStateDictionary
      description: "O objeto de dicionário de estado de modelo."
  overload: System.Web.UI.Page.ModelState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> evento para inicializar a página."
  remarks: "O método OnInit executa as etapas de inicialização e configuração necessárias para criar um <xref:System.Web.UI.Page>instância.</xref:System.Web.UI.Page> Neste estágio do ciclo de vida da página, os controles de servidor declarado na página são inicializados ao seu estado padrão. No entanto, o estado de exibição de cada controle não é populado ainda. Um controle na página não é possível acessar outros controles de servidor na página durante a `Page_Init` fase, independentemente se os outros controles são controles filho ou pai. Não há garantia de que outros controles de servidor ser criado e está pronto para acesso.       O método OnInit é chamado após o <xref:System.Web.UI.Page.OnPreInit%2A>método e antes do <xref:System.Web.UI.Page.OnInitComplete%2A>método.</xref:System.Web.UI.Page.OnInitComplete%2A> </xref:System.Web.UI.Page.OnPreInit%2A>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [eventos](~/add/includes/ajax-current-ext-md.md).       O método OnInit também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)
  id: OnInitComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnInitComplete(EventArgs)
  nameWithType: Page.OnInitComplete(EventArgs)
  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Page.InitComplete&quot;> </xref> evento após a inicialização da página."
  remarks: "O método OnInitComplete é chamado após a conclusão da inicialização da página. Neste estágio do ciclo de vida da página, todos declarados controles na página são inicializados, mas o estado de exibição da página ainda não está preenchido. Você pode acessar os controles de servidor, mas eles ainda não conterá informações retornadas do usuário.       O método OnInitComplete ocorre no final do <xref:System.Web.UI.Page>estágio de inicialização e antes do estágio de carga.</xref:System.Web.UI.Page>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [eventos](~/add/includes/ajax-current-ext-md.md).       O método OnInitComplete também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnInitComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnInitComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  id: OnLoadComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnLoadComplete(EventArgs)
  nameWithType: Page.OnLoadComplete(EventArgs)
  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Page.LoadComplete&quot;> </xref> evento no final do estágio de carregamento de página."
  remarks: "O método OnLoadComplete é chamado no final do estágio de carregamento de página. Neste ponto do ciclo de vida da página, todos os dados de postagem e dados de estado de exibição é carregado em controles na página.       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnLoadComplete também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnLoadComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnLoadComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)
  id: OnPreInit(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreInit(EventArgs)
  nameWithType: Page.OnPreInit(EventArgs)
  fullName: System.Web.UI.Page.OnPreInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> evento no início da página de inicialização."
  remarks: "O método OnPreInit é chamado no início do estágio de inicialização de página.       Depois que o método OnPreInit é chamado, informações de personalização são carregadas e o tema da página, se houver, é inicializado. Isso também é o estágio preferencial para definir dinamicamente um <xref:System.Web.UI.PageTheme>ou <xref:System.Web.UI.MasterPage>para a página.</xref:System.Web.UI.MasterPage> </xref:System.Web.UI.PageTheme>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [eventos](~/add/includes/ajax-current-ext-md.md).       O método OnPreInit também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnPreInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  id: OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Page.PreLoad&quot;> </xref> evento após os dados de postagem são carregados nos controles de servidor da página, mas antes de <xref:System.Web.UI.Control.OnLoad*>evento.</xref:System.Web.UI.Control.OnLoad*>"
  remarks: "O método é chamado depois que todos os dados retornados do usuário de postback de OnPreLoad é carregado. Neste estágio do ciclo de vida da página, as informações de estado de exibição e dados de postagem para declarado controles e criado durante o estágio de inicialização são carregados nos controles da página.       Os controles criados no método OnPreLoad também serão carregados com dados de postagem e estado de exibição.       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [eventos](~/add/includes/ajax-current-ext-md.md).       O método OnPreLoad também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnPreLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  id: OnPreRenderComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnPreRenderComplete(EventArgs)
  nameWithType: Page.OnPreRenderComplete(EventArgs)
  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Page.PreRenderComplete&quot;> </xref> evento após o evento OnPreRenderComplete e antes da página é renderizada."
  remarks: "O método OnPreRenderComplete é chamado quando o estágio de pré-processamento do ciclo de vida da página é concluído. Neste estágio do ciclo de vida da página, todos os controles são criados e a página está pronta para processar a saída.       Este é o último evento chamado antes que o estado de exibição da página é salvo.       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [eventos](~/add/includes/ajax-current-ext-md.md).       O método OnPreRenderComplete também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnPreRenderComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnPreRenderComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  id: OnSaveStateComplete(System.EventArgs)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: OnSaveStateComplete(EventArgs)
  nameWithType: Page.OnSaveStateComplete(EventArgs)
  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Page.SaveStateComplete&quot;> </xref> evento após o estado da página foi salvo na mídia de persistência."
  remarks: "O método OnSaveStateComplete é chamado quando as informações de estado para o controle foram gravadas para a mídia de persistência para a página. As informações de estado são gravadas na mídia de persistência chamando o <xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>método.</xref:System.Web.UI.Page.SavePageStateToPersistenceMedium%2A>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [eventos](~/add/includes/ajax-current-ext-md.md).       O método OnSaveStateComplete também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSaveStateComplete (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.Page.OnSaveStateComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PageAdapter
  id: PageAdapter
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PageAdapter
  nameWithType: Page.PageAdapter
  fullName: System.Web.UI.Page.PageAdapter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o adaptador que renderiza a página para o navegador solicitante específico."
  remarks: "A propriedade PageAdapter retorna específico <xref:System.Web.UI.Adapters.PageAdapter>que modifica o comportamento do objeto de <xref:System.Web.UI.Page>objeto para o navegador solicitante.</xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter>       Específico <xref:System.Web.UI.Adapters.PageAdapter>objeto é determinado pelo exame características de entrada <xref:System.Web.UI.Page.Request%2A>objeto.</xref:System.Web.UI.Page.Request%2A> </xref:System.Web.UI.Adapters.PageAdapter> Quando um adaptador é escolhido para a solicitação, quaisquer eventos de ciclo de vida no <xref:System.Web.UI.Adapters.PageAdapter>objeto substituir os eventos correspondentes no <xref:System.Web.UI.Page>objeto.</xref:System.Web.UI.Page> </xref:System.Web.UI.Adapters.PageAdapter>"
  syntax:
    content: public System.Web.UI.Adapters.PageAdapter PageAdapter { get; }
    return:
      type: System.Web.UI.Adapters.PageAdapter
      description: "O <xref href=&quot;System.Web.UI.Adapters.PageAdapter&quot;> </xref> que processa a página."
  overload: System.Web.UI.Page.PageAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PageStatePersister
  id: PageStatePersister
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
  fullName: System.Web.UI.Page.PageStatePersister
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> objeto associado à página."
  remarks: "Solicitações e respostas HTTP são inerentemente sem monitoração de estado. Para manter o estado entre as solicitações HTTP, páginas de servidor ASP.NET podem armazenar <xref:System.Web.UI.Page>estado.</xref:System.Web.UI.Page> Nesse estado, chamado de estado de exibição, consiste em página e as configurações de controle e os dados que tornam os controles que aparecem como se eles são os mesmos que o usuário ver e interagir com em seu último ida e volta para a página e a página. Existem vários mecanismos para armazenar o estado de exibição entre as solicitações sucessivas para a mesma página. O resumo <xref:System.Web.UI.PageStatePersister>classe representa a classe base para esses mecanismos de armazenamento de estado.</xref:System.Web.UI.PageStatePersister>       Os desenvolvedores de página geralmente não precisará usar a propriedade PageStatePersister. A propriedade PageStatePersister é usada principalmente por desenvolvedores de controle estender a funcionalidade da <xref:System.Web.UI.Page>classe.</xref:System.Web.UI.Page>"
  syntax:
    content: protected virtual System.Web.UI.PageStatePersister PageStatePersister { get; }
    return:
      type: System.Web.UI.PageStatePersister
      description: "Um <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> associado à página."
  overload: System.Web.UI.Page.PageStatePersister*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.postEventArgumentID
  id: postEventArgumentID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: postEventArgumentID
  nameWithType: Page.postEventArgumentID
  fullName: System.Web.UI.Page.postEventArgumentID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Uma cadeia de caracteres que define o campo oculto EVENTARGUMENT na página renderizada."
  syntax:
    content: public const string postEventArgumentID;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.postEventSourceID
  id: postEventSourceID
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: postEventSourceID
  nameWithType: Page.postEventSourceID
  fullName: System.Web.UI.Page.postEventSourceID
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Uma cadeia de caracteres que define o campo oculto EVENTTARGET na página renderizada."
  syntax:
    content: public const string postEventSourceID;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreInit
  id: PreInit
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreInit
  nameWithType: Page.PreInit
  fullName: System.Web.UI.Page.PreInit
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre antes da inicialização da página."
  remarks: "Esse evento permite que você verifique condições da solicitação de página, como se a página está sendo carregada em resposta a um postback. Você também pode verificar os valores das propriedades de perfil.       O evento permite que você defina os valores que são usados mais tarde no ciclo de vida da página. Dinamicamente, você pode definir uma página mestra ou um tema para a página solicitada e criar controles dinâmicos.       Para obter mais informações sobre como se o evento PreInit adapta o ciclo de vida do ASP.NET, consulte [visão geral do ciclo de vida de página ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler PreInit;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreLoad
  id: PreLoad
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreLoad
  nameWithType: Page.PreLoad
  fullName: System.Web.UI.Page.PreLoad
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre antes da página <xref href=&quot;System.Web.UI.Control.Load&quot;> </xref> eventos."
  remarks: 'O pré-carregamento é gerado depois que todos os dados de processamento de postback e antes do <xref:System.Web.UI.Control.Load>evento.</xref:System.Web.UI.Control.Load> Há uma segunda tentativa para carregar dados de postagem antes do <xref:System.Web.UI.Page.OnLoadComplete%2A>evento.</xref:System.Web.UI.Page.OnLoadComplete%2A> Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).'
  syntax:
    content: public event EventHandler PreLoad;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreRenderComplete
  id: PreRenderComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreRenderComplete
  nameWithType: Page.PreRenderComplete
  fullName: System.Web.UI.Page.PreRenderComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre antes do conteúdo da página é renderizado."
  remarks: "O evento PreRenderComplete é gerado quando o estágio de pré-processamento do ciclo de vida da página for concluído. Neste estágio do ciclo de vida da página, todos os controles são criados, qualquer paginação necessária é concluída e a página está pronta para processar para a saída.       Este é o último evento gerado antes do estado de exibição da página é salvo.       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  syntax:
    content: public event EventHandler PreRenderComplete;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.PreviousPage
  id: PreviousPage
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: PreviousPage
  nameWithType: Page.PreviousPage
  fullName: System.Web.UI.Page.PreviousPage
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a página que transferidos controle para a página atual."
  remarks: "Quando você usa o <xref:System.Web.HttpServerUtility.Transfer%2A>método ou use entre páginas de lançamento para transferir o processamento de uma página ASP.NET para outra, a página de origem contém informações de solicitação que podem ser necessárias para a página de destino.</xref:System.Web.HttpServerUtility.Transfer%2A> Você pode usar a propriedade PreviousPage para acessar essas informações.       Se a página atual está sendo processada como resultado de uma solicitação direta (não uma transferência ou post cruzada de outra página), a propriedade PreviousPage contém `null`."
  example:
  - "The following example is in two parts. The first is an ASP.NET page that uses the <xref:System.Web.HttpServerUtility.Transfer%2A> method, exposed in the page model as `Server.Transfer(\"path\")`. The second part is the target page, which uses the PreviousPage property to get the title of the first page.  \n  \n [!code-cs[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/csharp/p-system.web.ui.page.pre_1.aspx)]\n [!code-vb[System.Web.UI.Page.PreviousPage#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/csharp/p-system.web.ui.page.pre_2.aspx)]\n [!code-vb[System.Web.UI.Page.PreviousPage#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.pre_2.aspx)]"
  syntax:
    content: public System.Web.UI.Page PreviousPage { get; }
    return:
      type: System.Web.UI.Page
      description: "O <xref href=&quot;System.Web.UI.Page&quot;> </xref> que representa a página que transferiu o controle para a página atual."
  overload: System.Web.UI.Page.PreviousPage*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O usuário atual não tem permissão para acessar a página anterior.       - ou - roteamento ASP.NET está em uso e a URL da página anterior é uma URL roteada. Quando o ASP.NET verifica as permissões de acesso, ele pressupõe que a URL é um caminho real para um arquivo. Como isso não é o caso com uma URL roteada, a verificação falhar."
  platform:
  - net462
- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: Page.ProcessRequest(HttpContext)
  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define os objetos do servidor intrínsecos do <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto, como o <> </> *>, <> </> *>, <> </> *>, e <> </> *> propriedades."
  remarks: "Você não deve chamar esse método."
  syntax:
    content: public virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Um <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto que fornece referências a objetos do servidor intrínsecos (por exemplo, <> </> *>, <> </> *>, e <xref:System.Web.HttpContext.Session*>) usado para atender solicitações HTTP.</xref:System.Web.HttpContext.Session*>"
  overload: System.Web.UI.Page.ProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  id: RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RaisePostBackEvent(IPostBackEventHandler,String)
  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)
  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Notifica o controle de servidor que causou o postback que ele deve manipular um evento de postback de entrada."
  remarks: "O <xref:System.Web.UI.Page>objeto chama o método RaisePostBackEvent quando ocorre um postback.</xref:System.Web.UI.Page> Essa chamada ocorre no ciclo de vida da página após a conclusão de carregamento e alterações de notificação, mas antes da ocorrência de pré-processamento."
  example:
  - "The following example uses the RaisePostBackEvent method to notify ASP.NET that a post-back event is raised when a custom `userButton` server control is clicked.  \n  \n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/335ff4eb-daeb-4abc-bff6-_1.aspx)]\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/335ff4eb-daeb-4abc-bff6-_1.aspx)]"
  syntax:
    content: protected virtual void RaisePostBackEvent (System.Web.UI.IPostBackEventHandler sourceControl, string eventArgument);
    parameters:
    - id: sourceControl
      type: System.Web.UI.IPostBackEventHandler
      description: "O controle de servidor ASP.NET que causou o postback. Este controle deve implementar o <xref href=&quot;System.Web.UI.IPostBackEventHandler&quot;> </xref> interface."
    - id: eventArgument
      type: System.String
      description: "O argumento de postback."
  overload: System.Web.UI.Page.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  id: RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterArrayDeclaration(String,String)
  nameWithType: Page.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Declara um valor que é declarado como uma declaração de matriz ECMAScript quando a página é renderizada."
  remarks: "Esse método pode ser usado por controles de script para declarar-se em uma matriz para que uma biblioteca de script de cliente possa trabalhar com todos os controles do mesmo tipo.       O método RegisterArrayDeclaration foi preterido. Use o <xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>método de <xref:System.Web.UI.ClientScriptManager>classe.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterArrayDeclaration%2A>"
  example:
  - "The following code example uses the RegisterArrayDeclaration method to declare an array, `myArray`, that contains three objects named `x`, `y`, and `z`. The example defines and registers a startup script using the <xref:System.Web.UI.Page.RegisterStartupScript%2A> method. When the ECMAScript `doClick` function is called from the page that contains this code, the array and its objects are initialized.  \n  \n [!code-vb[Page_RegisterArrayDeclaration#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_5_1.aspx)]\n [!code-cs[Page_RegisterArrayDeclaration#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_5_1.aspx)]"
  syntax:
    content: public void RegisterArrayDeclaration (string arrayName, string arrayValue);
    parameters:
    - id: arrayName
      type: System.String
      description: "O nome da matriz na qual o valor de declarar."
    - id: arrayValue
      type: System.String
      description: "O valor para colocar na matriz."
  overload: System.Web.UI.Page.RegisterArrayDeclaration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  id: RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterAsyncTask(PageAsyncTask)
  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)
  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra uma nova tarefa assíncrona com a página."
  remarks: "Definir uma tarefa assíncrona usando a <xref:System.Web.UI.PageAsyncTask>classe.</xref:System.Web.UI.PageAsyncTask> Quando a tarefa é definida, use o método de RegisterAsyncTask para registrar a tarefa com a página. Depois de registrar a tarefa, invoque o <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>método para iniciar a tarefa assíncrona.</xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A>       O método RegisterAsyncTask pode ser usado com páginas síncronas e assíncronas."
  example:
  - "The following code example demonstrates the use of the <xref:System.Web.UI.Page.AsyncTimeout%2A> property with the <xref:System.Web.UI.Page.ExecuteRegisteredAsyncTasks%2A> and RegisterAsyncTask methods. Note the use of beginning, ending, and time-out handlers. In the example, an artificial delay is introduced to demonstrate the situation of an asynchronous task exceeding the allotted time for the task as specified in the <xref:System.Web.UI.Page.AsyncTimeout%2A> property. In a real-world scenario, an asynchronous task could be used to perform database calls or image generation, for example, and the time-out handler provides graceful degradation if the task is not performed in a specified amount of time.  \n  \n [!code-vb[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_1.aspx)]\n [!code-cs[System.Web.UI.Page.AsyncTimeout#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_1.aspx)]  \n  \n [!code-cs[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_8_2.cs)]\n [!code-vb[System.Web.UI.Page.AsyncTimeout#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_8_2.vb)]"
  syntax:
    content: public void RegisterAsyncTask (System.Web.UI.PageAsyncTask task);
    parameters:
    - id: task
      type: System.Web.UI.PageAsyncTask
      description: "Um <xref href=&quot;System.Web.UI.PageAsyncTask&quot;> </xref> que define a tarefa assíncrona."
  overload: System.Web.UI.Page.RegisterAsyncTask*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "A tarefa assíncrona é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  id: RegisterClientScriptBlock(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterClientScriptBlock(String,String)
  nameWithType: Page.RegisterClientScriptBlock(String,String)
  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Emite blocos de script do lado do cliente para a resposta."
  remarks: "O script do lado do cliente é emitido somente após a marca de abertura do <xref:System.Web.UI.Page>do objeto `<form runat= server>` elemento.</xref:System.Web.UI.Page> Certifique-se de incluir a abertura e fechamento `<script>` elementos ao redor do script bloqueiam a cadeia de caracteres especificada no `script` parâmetro.       Como esse método usa uma chave para identificar o bloco de script, o bloco de script não precisa ser emitido para o fluxo de saída de cada vez que forem solicitados por uma instância do controle de servidor diferente. Usando uma chave também diminui a probabilidade de blocos de script de controles diferentes interfiram umas com as outras.       Os scripts de blocos com o mesmo `key` valores de parâmetro são considerados duplicatas.      > [!NOTE] > Lembre-se de incluir marcas de comentário HTML ao redor de seu script para que ele não será renderizado se o navegador solicitante não oferece suporte a scripts.       O método RegisterClientScriptBlock foi preterido. Use o <xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>método o <xref:System.Web.UI.ClientScriptManager>classe em vez disso.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterClientScriptBlock%2A>"
  example:
  - "The following code example demonstrates the use of the RegisterClientScriptBlock method in conjunction with the <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A> method. If the ECMAScript in the code declaration block has not already been registered, as determined by <xref:System.Web.UI.Page.IsClientScriptBlockRegistered%2A>, the RegisterClientScriptBlock call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_0_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_0_1.aspx)]"
  syntax:
    content: public virtual void RegisterClientScriptBlock (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "Chave exclusiva que identifica um bloco de script."
    - id: script
      type: System.String
      description: "Conteúdo do script que é enviado ao cliente."
  overload: System.Web.UI.Page.RegisterClientScriptBlock*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  id: RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterHiddenField(String,String)
  nameWithType: Page.RegisterHiddenField(String,String)
  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Permite que os controles de servidor registrar automaticamente um campo oculto do formulário. O campo será enviado para o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto quando o <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> controle de servidor é processado."
  remarks: "O método RegisterHiddenField foi preterido. Use o <xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>método de <xref:System.Web.UI.ClientScriptManager>classe.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterHiddenField%2A>"
  example:
  - "The following code example uses the RegisterHiddenField method to help create ECMAScript code that is passed to the requesting browser. The name of the hidden field is set to `myHiddenField` and its value is set to \"Welcome to Microsoft!\" The <xref:System.Web.UI.Page.RegisterStartupScript%2A> method calls the `myHiddenField` value when the user clicks a button on the page.  \n  \n> [!IMPORTANT]\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Page_RegisterHiddenField#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_3_1.aspx)]\n [!code-cs[Page_RegisterHiddenField#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_3_1.aspx)]"
  syntax:
    content: public virtual void RegisterHiddenField (string hiddenFieldName, string hiddenFieldInitialValue);
    parameters:
    - id: hiddenFieldName
      type: System.String
      description: "O nome exclusivo do campo oculto para ser processado."
    - id: hiddenFieldInitialValue
      type: System.String
      description: "O valor a ser emitido no formulário oculto."
  overload: System.Web.UI.Page.RegisterHiddenField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  id: RegisterOnSubmitStatement(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterOnSubmitStatement(String,String)
  nameWithType: Page.RegisterOnSubmitStatement(String,String)
  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Permite que uma página acessar o cliente <xref uid=&quot;langword_csharp_OnSubmit&quot; name=&quot;OnSubmit&quot; href=&quot;&quot;> </xref> eventos. O script deve ser uma chamada de função para o código de cliente registrado em outro lugar."
  remarks: "O método RegisterOnSubmitStatement foi preterido. Use o <xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>método de <xref:System.Web.UI.ClientScriptManager>classe.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterOnSubmitStatement%2A>"
  example:
  - "The following code example demonstrates using the RegisterOnSubmitStatement to access a script that responds when a client-side Submit button is clicked. When this event occurs, the registered ECMAScript code is executed on the client.  \n  \n> [!IMPORTANT]\n>  This example has a hidden field, which is a potential security threat. By default, you should validate the value of a hidden field as you would the value of a text box. ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[Page_RegisterHiddenField#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_7_1.aspx)]\n [!code-cs[Page_RegisterHiddenField#2](~/add/codesnippet/csharp/m-system.web.ui.page.reg_7_1.aspx)]"
  syntax:
    content: public void RegisterOnSubmitStatement (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "Chave exclusiva que identifica um bloco de script."
    - id: script
      type: System.String
      description: "O script do lado do cliente a ser enviado ao cliente."
  overload: System.Web.UI.Page.RegisterOnSubmitStatement*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  id: RegisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresControlState(Control)
  nameWithType: Page.RegisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra um controle como um cujo estado de controle deve ser persistente."
  remarks: "Controles personalizados de servidor que usam o estado de controle devem chamar o método de RegisterRequiresControlState em cada solicitação porque o registro para o estado de controle não é transportado da solicitação à solicitação durante um evento de postback. É recomendável que o registro ocorra no <xref:System.Web.UI.Control.Init>evento.</xref:System.Web.UI.Control.Init>"
  example:
  - "The following code example shows a custom server control calling the RegisterRequiresControlState method.  \n  \n [!code-vb[ControlState#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_6_1.aspx)]\n [!code-cs[ControlState#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_6_1.aspx)]"
  syntax:
    content: public void RegisterRequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O controle para registrar."
  overload: System.Web.UI.Page.RegisterRequiresControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Para registrar o controle é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método RegisterRequiresControlState pode ser chamado somente antes ou durante o <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> eventos."
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  id: RegisterRequiresPostBack(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresPostBack(Control)
  nameWithType: Page.RegisterRequiresPostBack(Control)
  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra um controle como requer tratamento postback quando a página é postada para o servidor."
  remarks: "O controle a ser registrado deve implementar o <xref:System.Web.UI.IPostBackDataHandler>interface ou um <xref:System.Web.HttpException>é gerado.</xref:System.Web.HttpException> </xref:System.Web.UI.IPostBackDataHandler> Quando implementado por um controle, o <xref:System.Web.UI.IPostBackDataHandler>habilita a interface de tratamento de dados de postagem e aumento de qualquer publicação fazer dados de eventos alterados.</xref:System.Web.UI.IPostBackDataHandler> Para obter mais informações sobre o modelo de evento de controle de servidor, consulte [modelo de evento de controle do ASP.NET Web Forms Server](~/add/includes/ajax-current-ext-md.md).       Registrar controles na página até o `Page_PreRender` eventos de ciclo de vida da página."
  example:
  - "The following code example uses the RegisterRequiresPostBack method to require a text box control, `myTextBox`, to be posted back before any code associated with the text box can execute. <xref:System.Web.UI.WebControls.TextBox> controls implement the <xref:System.Web.UI.IPostBackDataHandler> interface.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Page_RegisterRequiresPostBack#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_9_1.aspx)]\n [!code-vb[Page_RegisterRequiresPostBack#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_9_1.aspx)]"
  syntax:
    content: public void RegisterRequiresPostBack (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O controle a ser registrado."
  overload: System.Web.UI.Page.RegisterRequiresPostBack*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Não implementa o controle para registrar o <xref href=&quot;System.Web.UI.IPostBackDataHandler&quot;> </xref> interface."
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  id: RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)
  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra um controle de servidor ASP.NET como uma necessidade de um evento ser gerado quando o controle é processado no <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto."
  remarks: "Controle de apenas um servidor pode ser registrado por solicitação de página. O RegisterRequiresRaiseEvent deve ser usado quando o controle não tem seu controle de dados de postagem de ID no formulário. Além disso, o controle que está registrado deve implementar o <xref:System.Web.UI.IPostBackEventHandler>interface.</xref:System.Web.UI.IPostBackEventHandler>"
  example:
  - "The following code example uses the RegisterRequiresRaiseEvent method to register a <xref:System.Web.UI.WebControls.Button> Web server control as requiring an event to be raised. After you have registered the first <xref:System.Web.UI.WebControls.Button> control, you can cause the second <xref:System.Web.UI.WebControls.Button> control declared in the code to post the results of the first button's click event to the page.  \n  \n [!code-cs[Page_RaisePostBackEvent#1](~/add/codesnippet/csharp/f04498f9-b87e-4549-85d7-_1.aspx)]\n [!code-vb[Page_RaisePostBackEvent#1](~/add/codesnippet/visualbasic/f04498f9-b87e-4549-85d7-_1.aspx)]"
  syntax:
    content: public virtual void RegisterRequiresRaiseEvent (System.Web.UI.IPostBackEventHandler control);
    parameters:
    - id: control
      type: System.Web.UI.IPostBackEventHandler
      description: "O controle para registrar."
  overload: System.Web.UI.Page.RegisterRequiresRaiseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption
  id: RegisterRequiresViewStateEncryption
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterRequiresViewStateEncryption()
  nameWithType: Page.RegisterRequiresViewStateEncryption()
  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Registra um controle com a página como uma que exigem criptografia de estado de exibição."
  remarks: "Se você estiver desenvolvendo um controle personalizado que lida com informações potencialmente confidenciais, chame o método RegisterRequiresViewStateEncryption para registrar o controle com a página e certifique-se de que o estado de exibição para o controle é criptografado.       O estado da página inteira será criptografado se o <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>estiver definido como <xref:System.Web.UI.ViewStateEncryptionMode>ou <xref:System.Web.UI.ViewStateEncryptionMode>.</xref:System.Web.UI.ViewStateEncryptionMode> </xref:System.Web.UI.ViewStateEncryptionMode> </xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>"
  example:
  - "The following code example demonstrates setting the view-state encryption mode for a <xref:System.Web.UI.Page> object and requesting encryption of the view state through RegisterRequiresViewStateEncryption. In this example, view state will be encrypted when customer information is retrieved from a database.  \n  \n [!code-cs[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_2_1.aspx)]\n [!code-vb[System.Web.UI.ViewStateEncryptionMode#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_2_1.aspx)]"
  syntax:
    content: public void RegisterRequiresViewStateEncryption ();
    parameters: []
  overload: System.Web.UI.Page.RegisterRequiresViewStateEncryption*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método RegisterRequiresViewStateEncryption deve ser chamado antes ou durante a página <xref uid=&quot;langword_csharp_PreRender&quot; name=&quot;PreRender&quot; href=&quot;&quot;> </xref>fase no ciclo de vida da página."
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  id: RegisterStartupScript(System.String,System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterStartupScript(String,String)
  nameWithType: Page.RegisterStartupScript(String,String)
  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Emite um bloco de script do lado do cliente na resposta da página."
  remarks: "Como o <xref:System.Web.UI.Page.RegisterClientScriptBlock%2A>método, o método RegisterStartupScript emite o script antes da marca de fechamento do <xref:System.Web.UI.Page>do objeto `<form runat= server>` elemento.</xref:System.Web.UI.Page> </xref:System.Web.UI.Page.RegisterClientScriptBlock%2A> Certifique-se de incluir a abertura e fechamento `<script>` elementos ao redor do script bloqueiam a cadeia de caracteres especificada no `script` parâmetro.       Como esse método usa uma chave para identificar o bloco de script, o bloco de script não precisa ser emitido para o fluxo de saída de cada vez que forem solicitados por uma instância do controle de servidor diferente os blocos de script com o mesmo `key` valores de parâmetro são considerados duplicatas.      > [!NOTE] > Lembre-se de incluir marcas de comentário HTML ao redor de seu script para que ele não será renderizado se o navegador solicitante não oferece suporte a scripts.       O método RegisterStartupScript foi preterido. Use o <xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>método o <xref:System.Web.UI.ClientScriptManager>classe em vez disso.</xref:System.Web.UI.ClientScriptManager> </xref:System.Web.UI.ClientScriptManager.RegisterStartupScript%2A>"
  example:
  - "The following code example demonstrates the use of the RegisterStartupScript method in conjunction with the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method. If the ECMAScript written in the code declaration block has not already been registered, as determined by the <xref:System.Web.UI.Page.IsStartupScriptRegistered%2A> method, then a RegisterStartupScript call is made.  \n  \n [!code-vb[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_1_1.aspx)]\n [!code-cs[System.Web.UI.Page.RegisterClientScriptBlock#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_1_1.aspx)]"
  syntax:
    content: public virtual void RegisterStartupScript (string key, string script);
    parameters:
    - id: key
      type: System.String
      description: "Chave exclusiva que identifica um bloco de script."
    - id: script
      type: System.String
      description: "Conteúdo do script que será enviada ao cliente."
  overload: System.Web.UI.Page.RegisterStartupScript*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RegisterViewStateHandler
  id: RegisterViewStateHandler
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RegisterViewStateHandler()
  nameWithType: Page.RegisterViewStateHandler()
  fullName: System.Web.UI.Page.RegisterViewStateHandler()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Faz com que o estado de exibição de página sejam mantidas, se for chamado."
  remarks: "O método RegisterViewStateHandler é chamado automaticamente por meio de <xref:System.Web.UI.HtmlControls.HtmlForm>controle de servidor.</xref:System.Web.UI.HtmlControls.HtmlForm> Se esse método não for chamado, o estado de exibição de página não será mantido.      > [!NOTE] > Normalmente, somente o <xref:System.Web.UI.HtmlControls.HtmlForm>controle de servidor para a página chama esse método.</xref:System.Web.UI.HtmlControls.HtmlForm>"
  example:
  - >-
    [!code-vb[Page_RegisterViewStateHandler#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.reg_4_1.vb)]
     [!code-cs[Page_RegisterViewStateHandler#1](~/add/codesnippet/csharp/m-system.web.ui.page.reg_4_1.cs)]
  syntax:
    content: public void RegisterViewStateHandler ();
    parameters: []
  overload: System.Web.UI.Page.RegisterViewStateHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: Page.Render(HtmlTextWriter)
  fullName: System.Web.UI.Page.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa o <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto e chamadas nos controles filho do <xref href=&quot;System.Web.UI.Page&quot;> </xref> para processar."
  remarks: "O método de renderização é responsável por criar o texto e marcação que é enviada para o navegador do cliente. As chamadas de método de renderização padrão <xref:System.Web.UI.Control.RenderChildren%2A>para escrever o texto e marcação para os controles contidos na página.</xref:System.Web.UI.Control.RenderChildren%2A>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que recebe o conteúdo da página."
  overload: System.Web.UI.Page.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Request
  id: Request
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Request
  nameWithType: Page.Request
  fullName: System.Web.UI.Page.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objeto para a página solicitada."
  remarks: "O <xref:System.Web.HttpRequest>objeto contém informações sobre a solicitação HTTP atual.</xref:System.Web.HttpRequest>"
  example:
  - "The following example demonstrates how to obtain the <xref:System.Web.HttpRequest.Headers%2A> collection from the <xref:System.Web.HttpRequest> object and write it to an ASP.NET page.  \n  \n [!code-cs[Classic HttpRequest.Headers Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.req_1.cs)]\n [!code-vb[Classic HttpRequest.Headers Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.req_1.vb)]"
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "Atual <xref href=&quot;System.Web.HttpRequest&quot;> </xref> associado à página."
  overload: System.Web.UI.Page.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Ocorre quando o <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objeto não está disponível."
  platform:
  - net462
- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  id: RequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RequiresControlState(Control)
  nameWithType: Page.RequiresControlState(Control)
  fullName: System.Web.UI.Page.RequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o especificado <xref href=&quot;System.Web.UI.Control&quot;> </xref> o objeto foi registrado para participar do gerenciamento de estado do controle."
  remarks: "Estado do controle é um objeto composto de dados de estado de exibição essenciais que precisam de controles de servidor Web para funcionar; ele está contido em um objeto separado do estado de exibição normal.       Controles personalizados usando o estado do controle devem chamar o <xref:System.Web.UI.Page.RegisterRequiresControlState%2A>método antes de salvar o estado do controle.</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> Use o método RequiresControlState para verificar se há controles que estão registrados com a página exigir o estado do controle."
  syntax:
    content: public bool RequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> para verificar se há um requisito de estado do controle."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref href=&quot;System.Web.UI.Control&quot;> </xref> requer controle estado; caso contrário,<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>"
  overload: System.Web.UI.Page.RequiresControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Response
  id: Response
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Response
  nameWithType: Page.Response
  fullName: System.Web.UI.Page.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objeto associado a <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto. Este objeto permite que você envie dados de resposta HTTP para um cliente e contém informações sobre essa resposta."
  remarks: ''
  example:
  - "The following code example demonstrates creating a cookie and adding it to the page's HTTP output by using the <xref:System.Web.HttpResponse> object.  \n  \n [!code-cs[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/csharp/p-system.web.ui.page.res_1.cs)]\n [!code-vb[Classic HttpResponse.Cookies Example#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.res_1.vb)]"
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "Atual <xref href=&quot;System.Web.HttpResponse&quot;> </xref> associado à página."
  overload: System.Web.UI.Page.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objeto não está disponível."
  platform:
  - net462
- uid: System.Web.UI.Page.ResponseEncoding
  id: ResponseEncoding
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
  fullName: System.Web.UI.Page.ResponseEncoding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define o idioma de codificação atual <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objeto."
  remarks: "Na maioria das circunstâncias, não defina essa propriedade no código. Definir o `ResponseEncoding` de atributo para o valor desejado usando a diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define a propriedade."
  syntax:
    content: public string ResponseEncoding { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o idioma de codificação atual <xref href=&quot;System.Web.HttpResponse&quot;> </xref>."
  overload: System.Web.UI.Page.ResponseEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.RouteData
  id: RouteData
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: RouteData
  nameWithType: Page.RouteData
  fullName: System.Web.UI.Page.RouteData
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o &lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; valor atual &lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt; instância."
  remarks: "Se uma página está sendo executada em resposta a uma solicitação feita por meio de roteamento do ASP.NET, esta propriedade fornece acesso para os valores de parâmetro de URL que foram passados como dados de rota. Se a página é executada em resposta a uma URL física, em vez de uma URL da rota, essa propriedade é `null`. O exemplo a seguir mostra como extrair o valor de um parâmetro de URL chamado `year`.       [Visual Basic]      ```   Dim year As Integer = Convert.ToInt32(Page.RouteData.Values(&quot;year&quot;))   ``` [C#] ```   int year = Convert.ToInt32(Page.RouteData.Values[&quot;year&quot;])   ``` se a rota é definida usando o padrão de URL `{locale}/{year}` para o domínio `contoso.com`, e se a URL solicitada é `contoso.com/US/2010`, `year` conterá o valor &quot;2010&quot; quando esse código é executado.       Para obter mais informações sobre roteamento ASP.NET, consulte [roteamento ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Web.Routing.RouteData RouteData { get; }
    return:
      type: System.Web.Routing.RouteData
      description: "O &lt;xref:System.Web.Routing.RequestContext.RouteData%2A?displayProperty=fullName&gt; valor atual &lt;xref:System.Web.Routing.RequestContext?displayProperty=fullName&gt; instância."
  overload: System.Web.UI.Page.RouteData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  id: SavePageStateToPersistenceMedium(System.Object)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SavePageStateToPersistenceMedium(Object)
  nameWithType: Page.SavePageStateToPersistenceMedium(Object)
  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Salva informações de estado de controle e estado de exibição para a página."
  remarks: "O método SavePageStateToPersistenceMedium usa o <xref:System.Web.UI.PageStatePersister.Save%2A>método do <xref:System.Web.UI.PageStatePersister?displayProperty=fullName>objeto referenciado pelo <xref:System.Web.UI.Page.PageStatePersister%2A>propriedade para armazenar informações de estado de controle e estado de exibição para a página.</xref:System.Web.UI.Page.PageStatePersister%2A> </xref:System.Web.UI.PageStatePersister?displayProperty=fullName> </xref:System.Web.UI.PageStatePersister.Save%2A>       O ASP.NET inclui dois descendentes do <xref:System.Web.UI.PageStatePersister>classe, o <xref:System.Web.UI.HiddenFieldPageStatePersister>classe que salva informações de estado de um campo oculto incluído na página do ASP.NET, e o <xref:System.Web.UI.SessionPageStatePersister>classe que salva o estado no <xref:System.Web.UI.Page.Session%2A>objeto associado à solicitação.</xref:System.Web.UI.Page.Session%2A> </xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.UI.HiddenFieldPageStatePersister> </xref:System.Web.UI.PageStatePersister> Observe que ao usar o <xref:System.Web.UI.SessionPageStatePersister>classe campo oculto VIEWSTATE ainda é processado como isso é usado para determinar o postback.</xref:System.Web.UI.SessionPageStatePersister>       Para salvar o estado no local de sua escolha, você deve criar um novo descendente do <xref:System.Web.UI.PageStatePersister>classe salva e carrega o estado para a mídia de persistência de sua escolha.</xref:System.Web.UI.PageStatePersister> Para obter um exemplo de criação de um novo <xref:System.Web.UI.PageStatePersister>objeto, consulte a <xref:System.Web.UI.PageStatePersister>classe.</xref:System.Web.UI.PageStatePersister> </xref:System.Web.UI.PageStatePersister>       Se você estiver usando o .NET Framework versão 1.0 ou 1.1, substitua este método se você deseja salvar o <xref:System.Web.UI.Page>estado em algo diferente de um campo oculto.</xref:System.Web.UI.Page> Se você optar por fazer isso, você também deve substituir o <xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>método.</xref:System.Web.UI.Page.LoadPageStateFromPersistenceMedium%2A>"
  syntax:
    content: protected virtual void SavePageStateToPersistenceMedium (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Um <xref:System.Object>para armazenar as informações de estado de exibição.</xref:System.Object>"
  overload: System.Web.UI.Page.SavePageStateToPersistenceMedium*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SaveStateComplete
  id: SaveStateComplete
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SaveStateComplete
  nameWithType: Page.SaveStateComplete
  fullName: System.Web.UI.Page.SaveStateComplete
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Ocorre após a página Salvar todas as exibição estado e controle de informações do estado da página e controles na página."
  remarks: "Informações de estado para controles na página da Web é salvo após a <xref:System.Web.UI.Page.PreRenderComplete>evento.</xref:System.Web.UI.Page.PreRenderComplete> O evento SaveStateComplete é gerado depois que o estado de exibição e o estado de controle da página e controles da página são salvos na mídia de persistência.       Este é o último evento gerado antes da página é renderizada no navegador do solicitante.       Para obter mais informações sobre a manipulação de eventos, consulte [eventos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler SaveStateComplete;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Server
  id: Server
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Server
  nameWithType: Page.Server
  fullName: System.Web.UI.Page.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref> objeto, que é uma ocorrência da <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> classe."
  remarks: "Esta propriedade fornece acesso aos usados com frequência <xref:System.Web.HttpServerUtility.HtmlEncode%2A>e <xref:System.Web.HttpServerUtility.MapPath%2A>métodos, entre outros.</xref:System.Web.HttpServerUtility.MapPath%2A> </xref:System.Web.HttpServerUtility.HtmlEncode%2A>"
  example:
  - "The following code example demonstrates how to access error information from the server by using the `Server` object. In particular, the example gets the requested URL from the `Request` object, the most recent error from the `Server` object (using the <xref:System.Web.HttpServerUtility.GetLastError%2A> method) and converts them both to strings that can be displayed by the client. Once the `message` variable is written to the client, the error is deleted using the <xref:System.Web.HttpServerUtility.ClearError%2A> method.  \n  \n [!code-vb[System.Web.UI.Page_Error method#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ser_1.aspx)]\n [!code-cs[System.Web.UI.Page_Error method#1](~/add/codesnippet/csharp/p-system.web.ui.page.ser_1.aspx)]"
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "Atual <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref> objeto associado à página."
  overload: System.Web.UI.Page.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Session
  id: Session
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Session
  nameWithType: Page.Session
  fullName: System.Web.UI.Page.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém a atual <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref> objeto fornecido pelo ASP.NET."
  remarks: "Esta propriedade fornece informações sobre sessão a solicitação atual. Um `Session` objeto é mantido para cada usuário que solicita uma página ou um documento de um aplicativo ASP.NET. Variáveis armazenadas no `Session` objeto não serão descartadas quando o usuário move de uma página no aplicativo; em vez disso, essas variáveis persistem desde que o usuário está acessando páginas em seu aplicativo. Para obter mais informações sobre o estado de sessão, consulte [visão geral sobre o estado de sessão ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a `GetStyle` function that retrieves a key stored in the session state of the Web Forms page and converts its value to a string.  \n  \n [!code-cs[Page.Session_Samples1#1](~/add/codesnippet/csharp/p-system.web.ui.page.ses_1.aspx)]\n [!code-vb[Page.Session_Samples1#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.ses_1.aspx)]"
  syntax:
    content: public virtual System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "Os dados de estado da sessão atuais."
  overload: System.Web.UI.Page.Session*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Ocorre quando as informações de sessão são definidas como <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.SetFocus(System.String)
  id: SetFocus(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SetFocus(String)
  nameWithType: Page.SetFocus(String)
  fullName: System.Web.UI.Page.SetFocus(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define o foco do navegador para o controle com o identificador especificado."
  remarks: "Use o método SetFocus para tornar o controle com a cadeia de ID especificado, o controle ativo na página da Web exibida pelo navegador. O método SetFocus deve ser chamado antes que a página está preparada para renderização para o cliente a <xref:System.Web.UI.Control.PreRender>evento.</xref:System.Web.UI.Control.PreRender>      > [!NOTE] > SetFocus o método só funcionará em navegadores com suporte ECMAScript versão 1.3 ou posterior."
  example:
  - "The following code example sets the focus to the second text box on a Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[PageSetFocus#1](~/add/codesnippet/csharp/m-system.web.ui.page.set_1_1.aspx)]\n [!code-vb[PageSetFocus#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_1_1.aspx)]"
  syntax:
    content: public void SetFocus (string clientID);
    parameters:
    - id: clientID
      type: System.String
      description: "A ID do controle para definir o foco para."
  overload: System.Web.UI.Page.SetFocus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>clientID</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SetFocus is called when the control is not part of a Web Forms page.  \n  \n \\- or -  \n  \n SetFocus is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  id: SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SetFocus(Control)
  nameWithType: Page.SetFocus(Control)
  fullName: System.Web.UI.Page.SetFocus(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define o foco do navegador para o controle especificado."
  remarks: "Use o método SetFocus para tornar o controle especificado o controle ativo na página da Web exibida pelo navegador. O método SetFocus deve ser chamado antes que a página está preparada para renderização para o cliente a <xref:System.Web.UI.Control.PreRender>evento.</xref:System.Web.UI.Control.PreRender>      > [!NOTE] > SetFocus o método só funcionará em navegadores com suporte ECMAScript versão 1.3 ou posterior."
  example:
  - "The following code example sets the focus to the second text box on a Web page.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[PageSetFocus#2](~/add/codesnippet/csharp/m-system.web.ui.page.set_0_1.aspx)]\n [!code-vb[PageSetFocus#2](~/add/codesnippet/visualbasic/m-system.web.ui.page.set_0_1.aspx)]"
  syntax:
    content: public void SetFocus (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O controle para receber o foco."
  overload: System.Web.UI.Page.SetFocus*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>control</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "SetFocus is called when the control is not part of a Web Forms page.  \n  \n \\- or -  \n  \n SetFocus is called after the <xref href=\"System.Web.UI.Control.PreRender\"></xref> event."
  platform:
  - net462
- uid: System.Web.UI.Page.SkipFormActionValidation
  id: SkipFormActionValidation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
  fullName: System.Web.UI.Page.SkipFormActionValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se o valor de cadeia de caracteres de consulta é validado."
  syntax:
    content: public bool SkipFormActionValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a validação da cadeia de caracteres de consulta deve ser ignorada (a cadeia de caracteres de consulta não deve ser validada); Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se a validação da cadeia de caracteres de consulta deve levar colocar como normal. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.SkipFormActionValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.SmartNavigation
  id: SmartNavigation
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
  fullName: System.Web.UI.Page.SmartNavigation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se a navegação inteligente está habilitada. Essa propriedade é preterida."
  remarks: "Na maioria das circunstâncias, não defina essa propriedade no código. Definir o `SmartNavigation` atributo `true` na diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define essa propriedade.      > [!NOTE] > No ASP.NET versão 2.0, o SmartNavigation propriedade foi preterida. Use o <xref:System.Web.UI.Page.SetFocus%2A>método e o <xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A>propriedade em vez disso.</xref:System.Web.UI.Page.MaintainScrollPositionOnPostBack%2A> </xref:System.Web.UI.Page.SetFocus%2A>       Quando uma página é solicitada pelo navegador Microsoft Internet Explorer 5.5 ou posterior, navegação inteligente aprimora a experiência do usuário da página, executando o seguinte:-eliminando o flash causado pela navegação.      -Manter a posição de rolagem ao mover de uma página.      -Foco de elemento persistentes entre navegações.      -Preservando apenas o último estado de página no histórico do navegador.       Navegação inteligente é melhor usada com páginas ASP.NET que exigem postagens frequentes, mas com conteúdo visual que não se altera drasticamente no retorno. Considerar isso com cuidado ao decidir se deve definir essa propriedade como `true`."
  syntax:
    content: public bool SmartNavigation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a navegação inteligente está ativada. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.SmartNavigation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.StyleSheetTheme
  id: StyleSheetTheme
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
  fullName: System.Web.UI.Page.StyleSheetTheme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o nome do tema que é aplicado à página no início do ciclo de vida da página."
  remarks: "Essa propriedade não faz referência diretamente a uma folha de estilo em cascata (CSS). A propriedade contém o nome de um tema ASP.NET, que pode incluir arquivos CSS dentro dele.       A propriedade StyleSheetTheme Especifica o nome de um tema aplicado a uma página no início do ciclo de vida da página, enquanto o <xref:System.Web.UI.Page.Theme%2A>propriedade especifica o nome de um tema aplicado a uma página mais tarde no ciclo de vida da página.</xref:System.Web.UI.Page.Theme%2A> Isso significa que as configurações na página têm precedência sobre configurações no tema de folha de estilos. Para obter mais informações, consulte [capas e temas do ASP.NET](~/add/includes/ajax-current-ext-md.md).       Normalmente, um valor para essa propriedade é definida na diretiva de página ou substituindo a propriedade. Para obter informações, consulte os tópicos a seguir:- [como: aplicar temas do ASP.NET](~/add/includes/ajax-current-ext-md.md)      -   [como: aplicar temas ASP.NET programaticamente](~/add/includes/ajax-current-ext-md.md))"
  syntax:
    content: public virtual string StyleSheetTheme { get; set; }
    return:
      type: System.String
      description: "O nome do tema que é aplicado à página no início do ciclo de vida da página."
  overload: System.Web.UI.Page.StyleSheetTheme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa de definir a propriedade StyleSheetTheme após o <xref:System.Web.UI.Page.FrameworkInitialize*>método foi chamado.</xref:System.Web.UI.Page.FrameworkInitialize*>"
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "StyleSheetTheme é definido como um nome de tema inválido. Essa exceção é lançada quando o <xref:System.Web.UI.Page.FrameworkInitialize*>método é chamado, não pela propriedade setter.</xref:System.Web.UI.Page.FrameworkInitialize*>"
  platform:
  - net462
- uid: System.Web.UI.Page.Theme
  id: Theme
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Theme
  nameWithType: Page.Theme
  fullName: System.Web.UI.Page.Theme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o nome do tema da página."
  remarks: "A propriedade de tema define o nome do tema usado para a página. Se você quiser que as configurações na página têm precedência sobre as configurações no tema, use o <xref:System.Web.UI.Page.StyleSheetTheme%2A>propriedade.</xref:System.Web.UI.Page.StyleSheetTheme%2A> Para obter mais informações, consulte [capas e temas do ASP.NET](~/add/includes/ajax-current-ext-md.md).       A propriedade de tema deve ser definida antes do <xref:System.Web.UI.Page.PreInit>evento; a configuração da propriedade de tema após o <xref:System.Web.UI.Page.PreInit>evento fará com que um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException> </xref:System.Web.UI.Page.PreInit> </xref:System.Web.UI.Page.PreInit>       O tema especificado deve existir como um aplicativo ou um tema global. Se o tema não existir, um <xref:System.Web.HttpException>exceção será lançada.</xref:System.Web.HttpException>"
  example:
  - "The following code example sets the Theme property to a name passed in the query string.  \n  \n [!code-cs[PageTheme#1](~/add/codesnippet/csharp/p-system.web.ui.page.theme_1.aspx)]\n [!code-vb[PageTheme#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.theme_1.aspx)]"
  syntax:
    content: public virtual string Theme { get; set; }
    return:
      type: System.String
      description: "O nome do tema da página."
  overload: System.Web.UI.Page.Theme*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Foi feita uma tentativa para definir o tema após o <xref href=&quot;System.Web.UI.Page.PreInit&quot;> </xref> evento ocorreu."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Tema está definido como um nome de tema inválido."
  platform:
  - net462
- uid: System.Web.UI.Page.Title
  id: Title
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Title
  nameWithType: Page.Title
  fullName: System.Web.UI.Page.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o título da página."
  remarks: "Use a propriedade Title para definir o título da página no cabeçalho HTML enviado ao navegador do solicitante.      > [!NOTE] > A página deve conter um `head` elemento que tem o atributo `runat=&quot;server&quot;`, caso contrário, o título não será processada."
  syntax:
    content: public string Title { get; set; }
    return:
      type: System.String
      description: "O título da página."
  overload: System.Web.UI.Page.Title*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade Title requer um controle de cabeçalho da página."
  platform:
  - net462
- uid: System.Web.UI.Page.Trace
  id: Trace
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Trace
  nameWithType: Page.Trace
  fullName: System.Web.UI.Page.Trace
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref href=&quot;System.Web.TraceContext&quot;> </xref> objeto para a solicitação da Web atual."
  remarks: "O rastreamento controla e apresenta os detalhes de execução sobre uma solicitação da Web. Para dados de rastreamento ser visível em uma página renderizada, você deve ativar o rastreamento no nível do aplicativo ou página.       O rastreamento em uma página está desabilitado por padrão. Para habilitar o rastreamento para uma página, use a diretiva `<% @ Page trace=&quot;true&quot; %>`. Para habilitar o rastreamento para um aplicativo inteiro, você deve habilitá-la no arquivo de configuração do aplicativo, Web. config, que reside no diretório raiz do aplicativo. Para obter mais informações, consulte [visão geral do rastreamento ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates accessing the <xref:System.Web.TraceContext.IsEnabled%2A?displayProperty=fullName> property and the <xref:System.Web.TraceContext.Write%2A?displayProperty=fullName> method through the Trace property. This code calls the <xref:System.Diagnostics.Trace.Write%2A> method only when tracing is enabled for the <xref:System.Web.UI.Page> object. If it is not enabled, this code will not run, which can help reduce overhead for your application.  \n  \n [!code-vb[System.Web.UI.Page.Trace#2](~/add/codesnippet/visualbasic/p-system.web.ui.page.trace_1.aspx)]\n [!code-cs[System.Web.UI.Page.Trace#2](~/add/codesnippet/csharp/p-system.web.ui.page.trace_1.aspx)]"
  syntax:
    content: public System.Web.TraceContext Trace { get; }
    return:
      type: System.Web.TraceContext
      description: "Dados do <xref href=&quot;System.Web.TraceContext&quot;> </xref> objeto para a solicitação da Web atual."
  overload: System.Web.UI.Page.Trace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TraceEnabled
  id: TraceEnabled
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
  fullName: System.Web.UI.Page.TraceEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define um valor que indica se o rastreamento está habilitado para o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto."
  remarks: "Na maioria das circunstâncias, não defina essa propriedade no código. Definir o `Trace` atributo `true` na diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define a propriedade."
  syntax:
    content: public bool TraceEnabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o rastreamento está habilitado para a página. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.TraceEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TraceModeValue
  id: TraceModeValue
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
  fullName: System.Web.UI.Page.TraceModeValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define o modo no qual o rastreamento, as instruções são exibidas na página."
  remarks: "Na maioria das circunstâncias, não defina essa propriedade no código. Definir o `TraceMode` atributo na diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define a propriedade."
  syntax:
    content: public System.Web.TraceMode TraceModeValue { get; set; }
    return:
      type: System.Web.TraceMode
      description: "Uma da <xref href=&quot;System.Web.TraceMode&quot;> </xref> membros de enumeração."
  overload: System.Web.UI.Page.TraceModeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TransactionMode
  id: TransactionMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TransactionMode
  nameWithType: Page.TransactionMode
  fullName: System.Web.UI.Page.TransactionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define o nível de transação suporte para a página."
  remarks: "Na maioria das circunstâncias, não defina essa propriedade no código. Definir o `Transaction` atributo na diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define a propriedade."
  syntax:
    content: protected int TransactionMode { get; set; }
    return:
      type: System.Int32
      description: "Um inteiro que representa uma da <xref href=&quot;System.EnterpriseServices.TransactionOption&quot;> </xref> membros de enumeração."
  overload: System.Web.UI.Page.TransactionMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TryUpdateModel``1(``0)
  id: TryUpdateModel``1(``0)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TryUpdateModel(TModel)
  nameWithType: Page.TryUpdateModel(TModel)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual bool TryUpdateModel<TModel> (TModel model) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "A ser adicionado."
    return:
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Web.UI.Page.TryUpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  id: TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: TryUpdateModel(TModel,IValueProvider)
  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual bool TryUpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "A ser adicionado."
    - id: valueProvider
      type: System.Web.ModelBinding.IValueProvider
      description: "A ser adicionado."
    return:
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Web.UI.Page.TryUpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UICulture
  id: UICulture
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UICulture
  nameWithType: Page.UICulture
  fullName: System.Web.UI.Page.UICulture
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define a ID de interface de usuário para o <xref href=&quot;System.Threading.Thread&quot;> </xref> objeto associado à página."
  remarks: "Essa propriedade é um atalho para o <xref:System.Threading.Thread.CurrentThread%2A>propriedade.</xref:System.Threading.Thread.CurrentThread%2A> A cultura é uma propriedade de thread em execução conjunto o `UICulture` atributo na diretiva no arquivo. aspx. Quando a página é solicitada, a classe gerada dinamicamente define o valor dessa propriedade. Além disso, você pode definir explicitamente o valor da propriedade UICulture na do arquivo Web. config."
  syntax:
    content: public string UICulture { get; set; }
    return:
      type: System.String
      description: "A ID de interface do usuário."
  overload: System.Web.UI.Page.UICulture*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UniqueFilePathSuffix
  id: UniqueFilePathSuffix
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
  fullName: System.Web.UI.Page.UniqueFilePathSuffix
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um sufixo exclusivo para acrescentar ao caminho do arquivo de cache de navegadores."
  remarks: "A propriedade UniqueFilePathSuffix retorna uma cadeia de caracteres que é acrescentada ao final de um caminho de arquivo quando necessário para o cache de navegadores. A cadeia de caracteres é usada para identificar o caminho de arquivo associado a uma solicitação específica."
  syntax:
    content: protected virtual string UniqueFilePathSuffix { get; }
    return:
      type: System.String
      description: "Um sufixo exclusivo acrescentado ao caminho do arquivo. O padrão é &quot;__ufps =&quot; mais um número exclusivo de 6 dígitos."
  overload: System.Web.UI.Page.UniqueFilePathSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UnobtrusiveValidationMode
  id: UnobtrusiveValidationMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
  fullName: System.Web.UI.Page.UnobtrusiveValidationMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se o JavaScript discreto é usado para validação do lado do cliente."
  syntax:
    content: public System.Web.UI.UnobtrusiveValidationMode UnobtrusiveValidationMode { get; set; }
    return:
      type: System.Web.UI.UnobtrusiveValidationMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se for usado o JavaScript discreto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.UnobtrusiveValidationMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  id: UnregisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UnregisterRequiresControlState(Control)
  nameWithType: Page.UnregisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Interrompe a persistência de estado de controle para o controle especificado."
  remarks: "Controles personalizados de servidor que usam o estado de controle devem chamar o <xref:System.Web.UI.Page.RegisterRequiresControlState%2A>em cada solicitação durante antes que o estado é mantido.</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> Registro de estado de controle não sejam transportado da solicitação à solicitação durante um postback. Use o método UnregisterRequiresControlState para garantir que o estado de controle não é persistente para controles que não precisam ser mantidos para postback.       Internamente, o método UnregisterRequiresControlState é invocado ao usar o <xref:System.Web.UI.Control.RemovedControl%2A>método para remover um controle de uma coleção de controles.</xref:System.Web.UI.Control.RemovedControl%2A>"
  syntax:
    content: public void UnregisterRequiresControlState (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O <xref href=&quot;System.Web.UI.Control&quot;> </xref> para qual parar a persistência de estado do controle."
  overload: System.Web.UI.Page.UnregisterRequiresControlState*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref href=&quot;System.Web.UI.Control&quot;></xref> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.UpdateModel``1(``0)
  id: UpdateModel``1(``0)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UpdateModel(TModel)
  nameWithType: Page.UpdateModel(TModel)
  fullName: System.Web.UI.Page.UpdateModel(TModel)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual void UpdateModel<TModel> (TModel model) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "A ser adicionado."
  overload: System.Web.UI.Page.UpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  id: UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: UpdateModel(TModel,IValueProvider)
  nameWithType: Page.UpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  syntax:
    content: 'public virtual void UpdateModel<TModel> (TModel model, System.Web.ModelBinding.IValueProvider valueProvider) where TModel : class;'
    parameters:
    - id: model
      type: TModel
      description: "A ser adicionado."
    - id: valueProvider
      type: System.Web.ModelBinding.IValueProvider
      description: "A ser adicionado."
  overload: System.Web.UI.Page.UpdateModel<TModel>*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.User
  id: User
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: User
  nameWithType: Page.User
  fullName: System.Web.UI.Page.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém informações sobre o usuário que fez a solicitação de página."
  remarks: "Um <xref:System.Security.Principal.IPrincipal>objeto representa o contexto de segurança do usuário em cujo nome o código está sendo executado, incluindo a identidade do usuário e todas as funções às quais eles pertencem.</xref:System.Security.Principal.IPrincipal>       Esta propriedade usa o <xref:System.Web.HttpContext>do objeto <xref:System.Web.HttpContext.User%2A>propriedade para determinar onde se origina a solicitação.</xref:System.Web.HttpContext.User%2A> </xref:System.Web.HttpContext>"
  example:
  - "The following code example uses the User property to access authentication and identity information for the current user. If the user is not authenticated, it redirects them to a login page.  \n  \n [!code-cs[Page_User#1](~/add/codesnippet/csharp/p-system.web.ui.page.user_1.aspx)]\n [!code-vb[Page_User#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.user_1.aspx)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Um <xref:System.Security.Principal.IPrincipal>que representa o usuário que fez a solicitação de página.</xref:System.Security.Principal.IPrincipal>"
  overload: System.Web.UI.Page.User*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validate
  id: Validate
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validate()
  nameWithType: Page.Validate()
  fullName: System.Web.UI.Page.Validate()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Instrui os controles de validação incluídos na página para validar as informações atribuídas."
  remarks: "Esse método é chamado quando um usuário clica em qualquer controle de servidor ASP.NET que tenha o `CausesValidation` propriedade definida como `true`, que é o padrão. Eles incluem o <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, e <xref:System.Web.UI.WebControls.LinkButton>controles de servidor Web, o <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, e <xref:System.Web.UI.HtmlControls.HtmlButton>controles de servidor HTML e controles que podem lançar automaticamente para o servidor, como o <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, e <xref:System.Web.UI.WebControls.BulletedList>controles.</xref:System.Web.UI.WebControls.BulletedList> </xref:System.Web.UI.WebControls.ListControl> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button>       Para desabilitar a validação para qualquer controle de botão na página, defina o controle de botão `CausesValidation` propriedade `false`.       Quando esse método é chamado, ele itera os controles de validação contidos no <xref:System.Web.UI.ValidatorCollection>objeto associado a <xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName>propriedade e invoca a lógica de validação para cada controle de validação no grupo de validação atual.</xref:System.Web.UI.Page.Validators%2A?displayProperty=fullName> </xref:System.Web.UI.ValidatorCollection> O grupo de validação é determinado pelo controle que lançadas a página para o servidor. Se nenhum grupo de validação for especificado, nenhum grupo de validação é usado.      > [!NOTE] > O comportamento de validação de página mudou. Em [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)], controles não chamam o método Validate; eles usam o <xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName>método em vez disso.</xref:System.Web.UI.Page.Validate%28System.String%29?displayProperty=fullName> Se você usar o método de validação em um [!INCLUDE[vstecasplong](~/add/includes/vstecasplong-md.md)] página, grupos de validação são ignorados e todos os controles são validados."
  example:
  - "The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_0_1.aspx)]\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_0_1.aspx)]"
  syntax:
    content: public virtual void Validate ();
    parameters: []
  overload: System.Web.UI.Page.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validate(String)
  nameWithType: Page.Validate(String)
  fullName: System.Web.UI.Page.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Instrui os controles de validação no grupo de validação especificada para validar as informações atribuídas."
  remarks: "Esse método é chamado quando um usuário clica em qualquer controle de servidor ASP.NET que tenha o `CausesValidation` propriedade definida como `true`, que é o padrão. Eles incluem o <xref:System.Web.UI.WebControls.Button>, <xref:System.Web.UI.WebControls.ImageButton>, e <xref:System.Web.UI.WebControls.LinkButton>controles de servidor Web, o <xref:System.Web.UI.HtmlControls.HtmlInputButton>, <xref:System.Web.UI.HtmlControls.HtmlInputImage>, e <xref:System.Web.UI.HtmlControls.HtmlButton>controles de servidor HTML e controles que podem lançar automaticamente para o servidor, como o <xref:System.Web.UI.WebControls.TextBox>, <xref:System.Web.UI.WebControls.CheckBox>, <xref:System.Web.UI.WebControls.ListControl>, e <xref:System.Web.UI.WebControls.BulletedList>controles.</xref:System.Web.UI.WebControls.BulletedList> </xref:System.Web.UI.WebControls.ListControl> </xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> </xref:System.Web.UI.HtmlControls.HtmlButton> </xref:System.Web.UI.HtmlControls.HtmlInputImage> </xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.WebControls.LinkButton> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.Button>       Para desabilitar a validação para qualquer controle de botão na página, defina o controle de botão `CausesValidation` propriedade `false`.       O método Validate valida o grupo de validação especificada. Depois de chamar o método Validate em um grupo de validação, o <xref:System.Web.UI.Page.IsValid%2A>método retornará `true` somente se o grupo de validação especificado e o grupo de validação do controle que causou a página ser postada para o servidor são válidos.</xref:System.Web.UI.Page.IsValid%2A>"
  example:
  - "The following code example calls the Validate method on a page in a scenario with several different validation groups defined.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.UI.Page.Validate2#1](~/add/codesnippet/csharp/m-system.web.ui.page.val_1_1.aspx)]\n [!code-vb[System.Web.UI.Page.Validate2#1](~/add/codesnippet/visualbasic/m-system.web.ui.page.val_1_1.aspx)]"
  syntax:
    content: public virtual void Validate (string validationGroup);
    parameters:
    - id: validationGroup
      type: System.String
      description: "O nome do grupo de validação de controles para validar."
  overload: System.Web.UI.Page.Validate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
  fullName: System.Web.UI.Page.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se a página verifica entradas de cliente do navegador para valores potencialmente perigosos."
  remarks: "O valor <xref:System.Web.UI.ValidateRequestMode>não é usado no <xref:System.Web.UI.Page>classe porque não há nada para herdar de.</xref:System.Web.UI.Page> </xref:System.Web.UI.ValidateRequestMode>"
  syntax:
    content: public override System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "Um valor que indica se a página verifica a entrada do cliente. O padrão é <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>."
  overload: System.Web.UI.Page.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.Validators
  id: Validators
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Validators
  nameWithType: Page.Validators
  fullName: System.Web.UI.Page.Validators
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma coleção de todos os controles de validação que continha a página solicitada."
  remarks: "Você pode usar essa propriedade para manipular os métodos e propriedades do <xref:System.Web.UI.ValidatorCollection>objeto associado atual <xref:System.Web.UI.Page>instância.</xref:System.Web.UI.Page> </xref:System.Web.UI.ValidatorCollection> Esta coleção contém todos os controles de servidor de validação que estão contidos em uma página.       Chamar o <xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName>método faz com que a lógica de validação a ser executado para cada controle de servidor de validação no grupo de validação atual.</xref:System.Web.UI.Page.Validate%2A?displayProperty=fullName> Se qualquer um desses controles não passar o <xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>propriedade retorna `false`.</xref:System.Web.UI.Page.IsValid%2A?displayProperty=fullName>       Para obter mais informações sobre controles de validação, consulte [controles de validação ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public System.Web.UI.ValidatorCollection Validators { get; }
    return:
      type: System.Web.UI.ValidatorCollection
      description: "A coleção de controles de validação."
  overload: System.Web.UI.Page.Validators*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  id: VerifyRenderingInServerForm(System.Web.UI.Control)
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: VerifyRenderingInServerForm(Control)
  nameWithType: Page.VerifyRenderingInServerForm(Control)
  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Confirma que um <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> controle é renderizado para o controle de servidor ASP.NET especificado em tempo de execução."
  remarks: "Os controles devem estar dentro de `<form runat=server>` marcas podem chamar esse método antes que eles sejam renderizados para que uma mensagem de erro é mostrada se eles são colocados fora das marcas. Controles que carregada novamente ou dependem de blocos de script registrado devem chamar esse método em uma substituição do <xref:System.Web.UI.Control.Render%2A?displayProperty=fullName>método.</xref:System.Web.UI.Control.Render%2A?displayProperty=fullName> Páginas que têm uma maneira diferente de renderizar o elemento de formulário do servidor podem substituir este método para gerar uma exceção em condições diferentes.       Controles de servidor que carregada novamente ou usam o script do lado do cliente não funcionará se eles não estão entre os <xref:System.Web.UI.HtmlControls.HtmlForm>controle de servidor (`form runat=&quot;server&quot;>`) marcas.</xref:System.Web.UI.HtmlControls.HtmlForm> Esses controles podem chamar este método quando eles processem para fornecer uma mensagem de erro criptografado quando eles não estão entre os <xref:System.Web.UI.HtmlControls.HtmlForm>controle.</xref:System.Web.UI.HtmlControls.HtmlForm>       Quando você desenvolve um controle de servidor personalizado, é comum para chamar esse método quando você substituir o `Render` método para qualquer tipo de marca de entrada. Isso é particularmente importante se o controle de entrada chama <xref:System.Web.UI.Page.GetPostBackEventReference%2A>, ou se o cliente emite script</xref:System.Web.UI.Page.GetPostBackEventReference%2A> Um controle composto de servidor não precisa fazer essa chamada."
  example:
  - "The following code example overrides the <xref:System.Web.UI.Page.Render%2A?displayProperty=fullName> method of a custom server control. When this control writes its content to a page, it uses the VerifyRenderingInServerForm method to make sure that the control appears between the opening and closing tags of an <xref:System.Web.UI.HtmlControls.HtmlForm> control.  \n  \n [!code-cs[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/csharp/m-system.web.ui.page.ver_1.cs)]\n [!code-vb[System.Web.UI.Page_VerifyRenderingInServerForm#3](~/add/codesnippet/visualbasic/m-system.web.ui.page.ver_1.vb)]"
  syntax:
    content: public virtual void VerifyRenderingInServerForm (System.Web.UI.Control control);
    parameters:
    - id: control
      type: System.Web.UI.Control
      description: "O controle de servidor ASP.NET que é necessário o <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> controle."
  overload: System.Web.UI.Page.VerifyRenderingInServerForm*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O controle de servidor especificado não está entre as marcas de abertura e fechamento do <xref href=&quot;System.Web.UI.HtmlControls.HtmlForm&quot;> </xref> controle de servidor em tempo de execução."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Verifique se o controle é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.Page.ViewStateEncryptionMode
  id: ViewStateEncryptionMode
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
  fullName: System.Web.UI.Page.ViewStateEncryptionMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o modo de criptografia do estado de exibição."
  remarks: "A propriedade ViewStateEncryptionMode não pode ser definida no código. Só pode ser definida na diretiva de ou além de< element of the configuration file. element=&quot;&quot; of=&quot;&quot; the=&quot;&quot; configuration=&quot;&quot;></ element of the configuration file.> Valores definidos na diretiva substituem todos os valores definidos no arquivo de configuração.       A sintaxe para definir essa propriedade na diretiva é da seguinte maneira: ```vb#   <%@ Page Language=&quot;VB&quot; ViewStateEncryptionMode=&quot;Always&quot; %>      ``` ```c#   <%@ Page Language=&quot;C#&quot; ViewStateEncryptionMode=&quot;Always&quot; %>   ``` a sintaxe para definir esta propriedade no arquivo de configuração é o seguinte: ```vb#   <system.web>     <pages viewStateEncryptionMode=&quot;Always&quot; />   </system.web>      ``` ```c#   <system.web>     <pages viewStateEncryptionMode=&quot;Always&quot; />   </system.web>   ``` os desenvolvedores de controle personalizado talvez queira verificar o valor dessa propriedade no código antes de salvar dados potencialmente confidenciais e estado de exibição em seu controle.            "
  syntax:
    content: public System.Web.UI.ViewStateEncryptionMode ViewStateEncryptionMode { get; set; }
    return:
      type: System.Web.UI.ViewStateEncryptionMode
      description: "Uma da <xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref> valores. O valor padrão é <xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref>."
  overload: System.Web.UI.Page.ViewStateEncryptionMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O conjunto de valor não é um membro do <xref href=&quot;System.Web.UI.ViewStateEncryptionMode&quot;> </xref> enumeração."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade ViewStateEncryptionMode pode ser definida somente em ou antes da página <xref uid=&quot;langword_csharp_PreRender&quot; name=&quot;PreRender&quot; href=&quot;&quot;> </xref>fase no ciclo de vida da página."
  platform:
  - net462
- uid: System.Web.UI.Page.ViewStateUserKey
  id: ViewStateUserKey
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
  fullName: System.Web.UI.Page.ViewStateUserKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Atribui um identificador para um usuário individual na variável de estado de exibição associado à página atual."
  remarks: "Definindo a propriedade ViewStateUserKey pode ajudar a impedir ataques em seu aplicativo contra usuários mal-intencionados. Ele faz isso, permitindo que você atribua um identificador para a variável de estado de exibição para usuários individuais para que eles não podem usar a variável para gerar um ataque. Para obter mais informações sobre ataques de Web e que você pode fazer para ajudar a evitá-los, consulte [tirar vantagem do ASP.NET recursos internos para procurá-los fora da Web ataques](http://go.microsoft.com/fwlink/?LinkId=163557).       Você pode definir essa propriedade como qualquer valor de cadeia de caracteres, como o usuário do nome autenticado ou <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valor.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>      > [!NOTE] > Você deve definir essa propriedade durante o `Page_Init` fase do processamento da página. A definição dessa propriedade durante o `Page_Load` fase lança uma exceção."
  syntax:
    content: public string ViewStateUserKey { get; set; }
    return:
      type: System.String
      description: "O identificador para o usuário individual."
  overload: System.Web.UI.Page.ViewStateUserKey*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A propriedade ViewStateUserKey foi acessada muito tarde durante o processamento da página."
  platform:
  - net462
- uid: System.Web.UI.Page.Visible
  id: Visible
  parent: System.Web.UI.Page
  langs:
  - csharp
  name: Visible
  nameWithType: Page.Visible
  fullName: System.Web.UI.Page.Visible
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto é processado."
  remarks: ''
  example:
  - "The following example sets the Visible property to `false` to hide the rendered content of a page. When this page is first requested, a data source is populated and displayed in the page. When a user clicks the button, the `HideButton_Click` event handler hides the entire rendered content of the page.  \n  \n [!code-cs[Page_Visible#1](~/add/codesnippet/csharp/p-system.web.ui.page.vis_1.aspx)]\n [!code-vb[Page_Visible#1](~/add/codesnippet/visualbasic/p-system.web.ui.page.vis_1.aspx)]"
  syntax:
    content: public override bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.Page&quot;> </xref> deve ser renderizado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Page.Visible*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.TemplateControl
  isExternal: false
  name: System.Web.UI.TemplateControl
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.Page.#ctor
  parent: System.Web.UI.Page
  isExternal: false
  name: Page()
  nameWithType: Page.Page()
  fullName: System.Web.UI.Page.Page()
- uid: System.Web.UI.Page.AddContentTemplate(System.String,System.Web.UI.ITemplate)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddContentTemplate(String,ITemplate)
  nameWithType: Page.AddContentTemplate(String,ITemplate)
  fullName: System.Web.UI.Page.AddContentTemplate(String,ITemplate)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler)
- uid: System.Web.BeginEventHandler
  parent: System.Web
  isExternal: false
  name: BeginEventHandler
  nameWithType: BeginEventHandler
  fullName: System.Web.BeginEventHandler
- uid: System.Web.EndEventHandler
  parent: System.Web
  isExternal: false
  name: EndEventHandler
  nameWithType: EndEventHandler
  fullName: System.Web.EndEventHandler
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync(System.Web.BeginEventHandler,System.Web.EndEventHandler,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  nameWithType: Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
  fullName: System.Web.UI.Page.AddOnPreRenderCompleteAsync(BeginEventHandler,EndEventHandler,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.Page.AddWrappedFileDependencies(System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AddWrappedFileDependencies(Object)
  nameWithType: Page.AddWrappedFileDependencies(Object)
  fullName: System.Web.UI.Page.AddWrappedFileDependencies(Object)
- uid: System.Web.UI.Page.Application
  parent: System.Web.UI.Page
  isExternal: false
  name: Application
  nameWithType: Page.Application
  fullName: System.Web.UI.Page.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AspCompatBeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.UI.Page.AspCompatEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatEndProcessRequest(IAsyncResult)
  nameWithType: Page.AspCompatEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AspCompatEndProcessRequest(IAsyncResult)
- uid: System.Web.UI.Page.AspCompatMode
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
  fullName: System.Web.UI.Page.AspCompatMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Page.AsyncMode
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncMode
  nameWithType: Page.AsyncMode
  fullName: System.Web.UI.Page.AsyncMode
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.UI.Page.AsyncPageBeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest(System.IAsyncResult)
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageEndProcessRequest(IAsyncResult)
  nameWithType: Page.AsyncPageEndProcessRequest(IAsyncResult)
  fullName: System.Web.UI.Page.AsyncPageEndProcessRequest(IAsyncResult)
- uid: System.Web.UI.Page.AsyncTimeout
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
  fullName: System.Web.UI.Page.AsyncTimeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.UI.Page.AutoPostBackControl
  parent: System.Web.UI.Page
  isExternal: false
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
  fullName: System.Web.UI.Page.AutoPostBackControl
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.Page.Buffer
  parent: System.Web.UI.Page
  isExternal: false
  name: Buffer
  nameWithType: Page.Buffer
  fullName: System.Web.UI.Page.Buffer
- uid: System.Web.UI.Page.Cache
  parent: System.Web.UI.Page
  isExternal: false
  name: Cache
  nameWithType: Page.Cache
  fullName: System.Web.UI.Page.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.UI.Page.ClientQueryString
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
  fullName: System.Web.UI.Page.ClientQueryString
- uid: System.Web.UI.Page.ClientScript
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientScript
  nameWithType: Page.ClientScript
  fullName: System.Web.UI.Page.ClientScript
- uid: System.Web.UI.ClientScriptManager
  parent: System.Web.UI
  isExternal: false
  name: ClientScriptManager
  nameWithType: ClientScriptManager
  fullName: System.Web.UI.ClientScriptManager
- uid: System.Web.UI.Page.ClientTarget
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientTarget
  nameWithType: Page.ClientTarget
  fullName: System.Web.UI.Page.ClientTarget
- uid: System.Web.UI.Page.CodePage
  parent: System.Web.UI.Page
  isExternal: false
  name: CodePage
  nameWithType: Page.CodePage
  fullName: System.Web.UI.Page.CodePage
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.Page.ContentType
  parent: System.Web.UI.Page
  isExternal: false
  name: ContentType
  nameWithType: Page.ContentType
  fullName: System.Web.UI.Page.ContentType
- uid: System.Web.UI.Page.Context
  parent: System.Web.UI.Page
  isExternal: false
  name: Context
  nameWithType: Page.Context
  fullName: System.Web.UI.Page.Context
- uid: System.Web.UI.Page.CreateHtmlTextWriter(System.IO.TextWriter)
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriter(TextWriter)
  nameWithType: Page.CreateHtmlTextWriter(TextWriter)
  fullName: System.Web.UI.Page.CreateHtmlTextWriter(TextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType(System.IO.TextWriter,System.Type)
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriterFromType(TextWriter,Type)
  nameWithType: Page.CreateHtmlTextWriterFromType(TextWriter,Type)
  fullName: System.Web.UI.Page.CreateHtmlTextWriterFromType(TextWriter,Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.Page.Culture
  parent: System.Web.UI.Page
  isExternal: false
  name: Culture
  nameWithType: Page.Culture
  fullName: System.Web.UI.Page.Culture
- uid: System.Web.UI.Page.DesignerInitialize
  parent: System.Web.UI.Page
  isExternal: false
  name: DesignerInitialize()
  nameWithType: Page.DesignerInitialize()
  fullName: System.Web.UI.Page.DesignerInitialize()
- uid: System.Web.UI.Page.DeterminePostBackMode
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackMode()
  nameWithType: Page.DeterminePostBackMode()
  fullName: System.Web.UI.Page.DeterminePostBackMode()
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackModeUnvalidated()
  nameWithType: Page.DeterminePostBackModeUnvalidated()
  fullName: System.Web.UI.Page.DeterminePostBackModeUnvalidated()
- uid: System.Web.UI.Page.EnableEventValidation
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
  fullName: System.Web.UI.Page.EnableEventValidation
- uid: System.Web.UI.Page.EnableViewState
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewState
  nameWithType: Page.EnableViewState
  fullName: System.Web.UI.Page.EnableViewState
- uid: System.Web.UI.Page.EnableViewStateMac
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
  fullName: System.Web.UI.Page.EnableViewStateMac
- uid: System.Web.UI.Page.ErrorPage
  parent: System.Web.UI.Page
  isExternal: false
  name: ErrorPage
  nameWithType: Page.ErrorPage
  fullName: System.Web.UI.Page.ErrorPage
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks
  parent: System.Web.UI.Page
  isExternal: false
  name: ExecuteRegisteredAsyncTasks()
  nameWithType: Page.ExecuteRegisteredAsyncTasks()
  fullName: System.Web.UI.Page.ExecuteRegisteredAsyncTasks()
- uid: System.Web.UI.Page.FileDependencies
  parent: System.Web.UI.Page
  isExternal: false
  name: FileDependencies
  nameWithType: Page.FileDependencies
  fullName: System.Web.UI.Page.FileDependencies
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.Page.FindControl(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: FindControl(String)
  nameWithType: Page.FindControl(String)
  fullName: System.Web.UI.Page.FindControl(String)
- uid: System.Web.UI.Page.Form
  parent: System.Web.UI.Page
  isExternal: false
  name: Form
  nameWithType: Page.Form
  fullName: System.Web.UI.Page.Form
- uid: System.Web.UI.HtmlControls.HtmlForm
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlForm
  nameWithType: HtmlForm
  fullName: System.Web.UI.HtmlControls.HtmlForm
- uid: System.Web.UI.Page.FrameworkInitialize
  parent: System.Web.UI.Page
  isExternal: false
  name: FrameworkInitialize()
  nameWithType: Page.FrameworkInitialize()
  fullName: System.Web.UI.Page.FrameworkInitialize()
- uid: System.Web.UI.Page.GetDataItem
  parent: System.Web.UI.Page
  isExternal: false
  name: GetDataItem()
  nameWithType: Page.GetDataItem()
  fullName: System.Web.UI.Page.GetDataItem()
- uid: System.Web.UI.Page.GetPostBackClientEvent(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientEvent(Control,String)
  nameWithType: Page.GetPostBackClientEvent(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientEvent(Control,String)
- uid: System.Web.UI.Page.GetPostBackClientHyperlink(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientHyperlink(Control,String)
  nameWithType: Page.GetPostBackClientHyperlink(Control,String)
  fullName: System.Web.UI.Page.GetPostBackClientHyperlink(Control,String)
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference(Control)
  nameWithType: Page.GetPostBackEventReference(Control)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control)
- uid: System.Web.UI.Page.GetPostBackEventReference(System.Web.UI.Control,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference(Control,String)
  nameWithType: Page.GetPostBackEventReference(Control,String)
  fullName: System.Web.UI.Page.GetPostBackEventReference(Control,String)
- uid: System.Web.UI.Page.GetTypeHashCode
  parent: System.Web.UI.Page
  isExternal: false
  name: GetTypeHashCode()
  nameWithType: Page.GetTypeHashCode()
  fullName: System.Web.UI.Page.GetTypeHashCode()
- uid: System.Web.UI.Page.GetValidators(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: GetValidators(String)
  nameWithType: Page.GetValidators(String)
  fullName: System.Web.UI.Page.GetValidators(String)
- uid: System.Web.UI.ValidatorCollection
  parent: System.Web.UI
  isExternal: false
  name: ValidatorCollection
  nameWithType: ValidatorCollection
  fullName: System.Web.UI.ValidatorCollection
- uid: System.Web.UI.Page.GetWrappedFileDependencies(System.String[])
  parent: System.Web.UI.Page
  isExternal: false
  name: GetWrappedFileDependencies(String[])
  nameWithType: Page.GetWrappedFileDependencies(String[])
  fullName: System.Web.UI.Page.GetWrappedFileDependencies(String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.Page.Header
  parent: System.Web.UI.Page
  isExternal: false
  name: Header
  nameWithType: Page.Header
  fullName: System.Web.UI.Page.Header
- uid: System.Web.UI.HtmlControls.HtmlHead
  parent: System.Web.UI.HtmlControls
  isExternal: false
  name: HtmlHead
  nameWithType: HtmlHead
  fullName: System.Web.UI.HtmlControls.HtmlHead
- uid: System.Web.UI.Page.ID
  parent: System.Web.UI.Page
  isExternal: false
  name: ID
  nameWithType: Page.ID
  fullName: System.Web.UI.Page.ID
- uid: System.Web.UI.Page.IdSeparator
  parent: System.Web.UI.Page
  isExternal: false
  name: IdSeparator
  nameWithType: Page.IdSeparator
  fullName: System.Web.UI.Page.IdSeparator
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Web.UI.Page.InitComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: InitComplete
  nameWithType: Page.InitComplete
  fullName: System.Web.UI.Page.InitComplete
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.Page.InitializeCulture
  parent: System.Web.UI.Page
  isExternal: false
  name: InitializeCulture()
  nameWithType: Page.InitializeCulture()
  fullName: System.Web.UI.Page.InitializeCulture()
- uid: System.Web.UI.Page.InitOutputCache(System.Web.UI.OutputCacheParameters)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(OutputCacheParameters)
  nameWithType: Page.InitOutputCache(OutputCacheParameters)
  fullName: System.Web.UI.Page.InitOutputCache(OutputCacheParameters)
- uid: System.Web.UI.OutputCacheParameters
  parent: System.Web.UI
  isExternal: false
  name: OutputCacheParameters
  nameWithType: OutputCacheParameters
  fullName: System.Web.UI.OutputCacheParameters
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,OutputCacheLocation,String)
- uid: System.Web.UI.OutputCacheLocation
  parent: System.Web.UI
  isExternal: false
  name: OutputCacheLocation
  nameWithType: OutputCacheLocation
  fullName: System.Web.UI.OutputCacheLocation
- uid: System.Web.UI.Page.InitOutputCache(System.Int32,System.String,System.String,System.String,System.Web.UI.OutputCacheLocation,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  nameWithType: Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
  fullName: System.Web.UI.Page.InitOutputCache(Int32,String,String,String,OutputCacheLocation,String)
- uid: System.Web.UI.Page.IsAsync
  parent: System.Web.UI.Page
  isExternal: false
  name: IsAsync
  nameWithType: Page.IsAsync
  fullName: System.Web.UI.Page.IsAsync
- uid: System.Web.UI.Page.IsCallback
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCallback
  nameWithType: Page.IsCallback
  fullName: System.Web.UI.Page.IsCallback
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: IsClientScriptBlockRegistered(String)
  nameWithType: Page.IsClientScriptBlockRegistered(String)
  fullName: System.Web.UI.Page.IsClientScriptBlockRegistered(String)
- uid: System.Web.UI.Page.IsCrossPagePostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
  fullName: System.Web.UI.Page.IsCrossPagePostBack
- uid: System.Web.UI.Page.IsPostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBack
  nameWithType: Page.IsPostBack
  fullName: System.Web.UI.Page.IsPostBack
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
  fullName: System.Web.UI.Page.IsPostBackEventControlRegistered
- uid: System.Web.UI.Page.IsReusable
  parent: System.Web.UI.Page
  isExternal: false
  name: IsReusable
  nameWithType: Page.IsReusable
  fullName: System.Web.UI.Page.IsReusable
- uid: System.Web.UI.Page.IsStartupScriptRegistered(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: IsStartupScriptRegistered(String)
  nameWithType: Page.IsStartupScriptRegistered(String)
  fullName: System.Web.UI.Page.IsStartupScriptRegistered(String)
- uid: System.Web.UI.Page.IsValid
  parent: System.Web.UI.Page
  isExternal: false
  name: IsValid
  nameWithType: Page.IsValid
  fullName: System.Web.UI.Page.IsValid
- uid: System.Web.UI.Page.Items
  parent: System.Web.UI.Page
  isExternal: false
  name: Items
  nameWithType: Page.Items
  fullName: System.Web.UI.Page.Items
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.UI.Page.LCID
  parent: System.Web.UI.Page
  isExternal: false
  name: LCID
  nameWithType: Page.LCID
  fullName: System.Web.UI.Page.LCID
- uid: System.Web.UI.Page.LoadComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadComplete
  nameWithType: Page.LoadComplete
  fullName: System.Web.UI.Page.LoadComplete
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadPageStateFromPersistenceMedium()
  nameWithType: Page.LoadPageStateFromPersistenceMedium()
  fullName: System.Web.UI.Page.LoadPageStateFromPersistenceMedium()
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack
  parent: System.Web.UI.Page
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
  fullName: System.Web.UI.Page.MaintainScrollPositionOnPostBack
- uid: System.Web.UI.Page.MapPath(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: MapPath(String)
  nameWithType: Page.MapPath(String)
  fullName: System.Web.UI.Page.MapPath(String)
- uid: System.Web.UI.Page.Master
  parent: System.Web.UI.Page
  isExternal: false
  name: Master
  nameWithType: Page.Master
  fullName: System.Web.UI.Page.Master
- uid: System.Web.UI.MasterPage
  parent: System.Web.UI
  isExternal: false
  name: MasterPage
  nameWithType: MasterPage
  fullName: System.Web.UI.MasterPage
- uid: System.Web.UI.Page.MasterPageFile
  parent: System.Web.UI.Page
  isExternal: false
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
  fullName: System.Web.UI.Page.MasterPageFile
- uid: System.Web.UI.Page.MaxPageStateFieldLength
  parent: System.Web.UI.Page
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
  fullName: System.Web.UI.Page.MaxPageStateFieldLength
- uid: System.Web.UI.Page.MetaDescription
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaDescription
  nameWithType: Page.MetaDescription
  fullName: System.Web.UI.Page.MetaDescription
- uid: System.Web.UI.Page.MetaKeywords
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
  fullName: System.Web.UI.Page.MetaKeywords
- uid: System.Web.UI.Page.ModelBindingExecutionContext
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
  fullName: System.Web.UI.Page.ModelBindingExecutionContext
- uid: System.Web.ModelBinding.ModelBindingExecutionContext
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: ModelBindingExecutionContext
  fullName: System.Web.ModelBinding.ModelBindingExecutionContext
- uid: System.Web.UI.Page.ModelState
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelState
  nameWithType: Page.ModelState
  fullName: System.Web.UI.Page.ModelState
- uid: System.Web.ModelBinding.ModelStateDictionary
  parent: System.Web.ModelBinding
  isExternal: false
  name: ModelStateDictionary
  nameWithType: ModelStateDictionary
  fullName: System.Web.ModelBinding.ModelStateDictionary
- uid: System.Web.UI.Page.OnInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: Page.OnInit(EventArgs)
  fullName: System.Web.UI.Page.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.Page.OnInitComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInitComplete(EventArgs)
  nameWithType: Page.OnInitComplete(EventArgs)
  fullName: System.Web.UI.Page.OnInitComplete(EventArgs)
- uid: System.Web.UI.Page.OnLoadComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnLoadComplete(EventArgs)
  nameWithType: Page.OnLoadComplete(EventArgs)
  fullName: System.Web.UI.Page.OnLoadComplete(EventArgs)
- uid: System.Web.UI.Page.OnPreInit(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreInit(EventArgs)
  nameWithType: Page.OnPreInit(EventArgs)
  fullName: System.Web.UI.Page.OnPreInit(EventArgs)
- uid: System.Web.UI.Page.OnPreLoad(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreLoad(EventArgs)
  nameWithType: Page.OnPreLoad(EventArgs)
  fullName: System.Web.UI.Page.OnPreLoad(EventArgs)
- uid: System.Web.UI.Page.OnPreRenderComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreRenderComplete(EventArgs)
  nameWithType: Page.OnPreRenderComplete(EventArgs)
  fullName: System.Web.UI.Page.OnPreRenderComplete(EventArgs)
- uid: System.Web.UI.Page.OnSaveStateComplete(System.EventArgs)
  parent: System.Web.UI.Page
  isExternal: false
  name: OnSaveStateComplete(EventArgs)
  nameWithType: Page.OnSaveStateComplete(EventArgs)
  fullName: System.Web.UI.Page.OnSaveStateComplete(EventArgs)
- uid: System.Web.UI.Page.PageAdapter
  parent: System.Web.UI.Page
  isExternal: false
  name: PageAdapter
  nameWithType: Page.PageAdapter
  fullName: System.Web.UI.Page.PageAdapter
- uid: System.Web.UI.Adapters.PageAdapter
  parent: System.Web.UI.Adapters
  isExternal: false
  name: PageAdapter
  nameWithType: PageAdapter
  fullName: System.Web.UI.Adapters.PageAdapter
- uid: System.Web.UI.Page.PageStatePersister
  parent: System.Web.UI.Page
  isExternal: false
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
  fullName: System.Web.UI.Page.PageStatePersister
- uid: System.Web.UI.PageStatePersister
  parent: System.Web.UI
  isExternal: false
  name: PageStatePersister
  nameWithType: PageStatePersister
  fullName: System.Web.UI.PageStatePersister
- uid: System.Web.UI.Page.postEventArgumentID
  parent: System.Web.UI.Page
  isExternal: false
  name: postEventArgumentID
  nameWithType: Page.postEventArgumentID
  fullName: System.Web.UI.Page.postEventArgumentID
- uid: System.Web.UI.Page.postEventSourceID
  parent: System.Web.UI.Page
  isExternal: false
  name: postEventSourceID
  nameWithType: Page.postEventSourceID
  fullName: System.Web.UI.Page.postEventSourceID
- uid: System.Web.UI.Page.PreInit
  parent: System.Web.UI.Page
  isExternal: false
  name: PreInit
  nameWithType: Page.PreInit
  fullName: System.Web.UI.Page.PreInit
- uid: System.Web.UI.Page.PreLoad
  parent: System.Web.UI.Page
  isExternal: false
  name: PreLoad
  nameWithType: Page.PreLoad
  fullName: System.Web.UI.Page.PreLoad
- uid: System.Web.UI.Page.PreRenderComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: PreRenderComplete
  nameWithType: Page.PreRenderComplete
  fullName: System.Web.UI.Page.PreRenderComplete
- uid: System.Web.UI.Page.PreviousPage
  parent: System.Web.UI.Page
  isExternal: false
  name: PreviousPage
  nameWithType: Page.PreviousPage
  fullName: System.Web.UI.Page.PreviousPage
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.Page.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.UI.Page
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: Page.ProcessRequest(HttpContext)
  fullName: System.Web.UI.Page.ProcessRequest(HttpContext)
- uid: System.Web.UI.Page.RaisePostBackEvent(System.Web.UI.IPostBackEventHandler,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RaisePostBackEvent(IPostBackEventHandler,String)
  nameWithType: Page.RaisePostBackEvent(IPostBackEventHandler,String)
  fullName: System.Web.UI.Page.RaisePostBackEvent(IPostBackEventHandler,String)
- uid: System.Web.UI.IPostBackEventHandler
  parent: System.Web.UI
  isExternal: false
  name: IPostBackEventHandler
  nameWithType: IPostBackEventHandler
  fullName: System.Web.UI.IPostBackEventHandler
- uid: System.Web.UI.Page.RegisterArrayDeclaration(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterArrayDeclaration(String,String)
  nameWithType: Page.RegisterArrayDeclaration(String,String)
  fullName: System.Web.UI.Page.RegisterArrayDeclaration(String,String)
- uid: System.Web.UI.Page.RegisterAsyncTask(System.Web.UI.PageAsyncTask)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterAsyncTask(PageAsyncTask)
  nameWithType: Page.RegisterAsyncTask(PageAsyncTask)
  fullName: System.Web.UI.Page.RegisterAsyncTask(PageAsyncTask)
- uid: System.Web.UI.PageAsyncTask
  parent: System.Web.UI
  isExternal: false
  name: PageAsyncTask
  nameWithType: PageAsyncTask
  fullName: System.Web.UI.PageAsyncTask
- uid: System.Web.UI.Page.RegisterClientScriptBlock(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterClientScriptBlock(String,String)
  nameWithType: Page.RegisterClientScriptBlock(String,String)
  fullName: System.Web.UI.Page.RegisterClientScriptBlock(String,String)
- uid: System.Web.UI.Page.RegisterHiddenField(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterHiddenField(String,String)
  nameWithType: Page.RegisterHiddenField(String,String)
  fullName: System.Web.UI.Page.RegisterHiddenField(String,String)
- uid: System.Web.UI.Page.RegisterOnSubmitStatement(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterOnSubmitStatement(String,String)
  nameWithType: Page.RegisterOnSubmitStatement(String,String)
  fullName: System.Web.UI.Page.RegisterOnSubmitStatement(String,String)
- uid: System.Web.UI.Page.RegisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresControlState(Control)
  nameWithType: Page.RegisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.RegisterRequiresControlState(Control)
- uid: System.Web.UI.Page.RegisterRequiresPostBack(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresPostBack(Control)
  nameWithType: Page.RegisterRequiresPostBack(Control)
  fullName: System.Web.UI.Page.RegisterRequiresPostBack(Control)
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent(System.Web.UI.IPostBackEventHandler)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresRaiseEvent(IPostBackEventHandler)
  nameWithType: Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
  fullName: System.Web.UI.Page.RegisterRequiresRaiseEvent(IPostBackEventHandler)
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresViewStateEncryption()
  nameWithType: Page.RegisterRequiresViewStateEncryption()
  fullName: System.Web.UI.Page.RegisterRequiresViewStateEncryption()
- uid: System.Web.UI.Page.RegisterStartupScript(System.String,System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterStartupScript(String,String)
  nameWithType: Page.RegisterStartupScript(String,String)
  fullName: System.Web.UI.Page.RegisterStartupScript(String,String)
- uid: System.Web.UI.Page.RegisterViewStateHandler
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterViewStateHandler()
  nameWithType: Page.RegisterViewStateHandler()
  fullName: System.Web.UI.Page.RegisterViewStateHandler()
- uid: System.Web.UI.Page.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.Page
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: Page.Render(HtmlTextWriter)
  fullName: System.Web.UI.Page.Render(HtmlTextWriter)
- uid: System.Web.UI.Page.Request
  parent: System.Web.UI.Page
  isExternal: false
  name: Request
  nameWithType: Page.Request
  fullName: System.Web.UI.Page.Request
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.UI.Page.RequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: RequiresControlState(Control)
  nameWithType: Page.RequiresControlState(Control)
  fullName: System.Web.UI.Page.RequiresControlState(Control)
- uid: System.Web.UI.Page.Response
  parent: System.Web.UI.Page
  isExternal: false
  name: Response
  nameWithType: Page.Response
  fullName: System.Web.UI.Page.Response
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.UI.Page.ResponseEncoding
  parent: System.Web.UI.Page
  isExternal: false
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
  fullName: System.Web.UI.Page.ResponseEncoding
- uid: System.Web.UI.Page.RouteData
  parent: System.Web.UI.Page
  isExternal: false
  name: RouteData
  nameWithType: Page.RouteData
  fullName: System.Web.UI.Page.RouteData
- uid: System.Web.Routing.RouteData
  parent: System.Web.Routing
  isExternal: true
  name: RouteData
  nameWithType: RouteData
  fullName: System.Web.Routing.RouteData
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium(System.Object)
  parent: System.Web.UI.Page
  isExternal: false
  name: SavePageStateToPersistenceMedium(Object)
  nameWithType: Page.SavePageStateToPersistenceMedium(Object)
  fullName: System.Web.UI.Page.SavePageStateToPersistenceMedium(Object)
- uid: System.Web.UI.Page.SaveStateComplete
  parent: System.Web.UI.Page
  isExternal: false
  name: SaveStateComplete
  nameWithType: Page.SaveStateComplete
  fullName: System.Web.UI.Page.SaveStateComplete
- uid: System.Web.UI.Page.Server
  parent: System.Web.UI.Page
  isExternal: false
  name: Server
  nameWithType: Page.Server
  fullName: System.Web.UI.Page.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.UI.Page.Session
  parent: System.Web.UI.Page
  isExternal: false
  name: Session
  nameWithType: Page.Session
  fullName: System.Web.UI.Page.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.UI.Page.SetFocus(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus(String)
  nameWithType: Page.SetFocus(String)
  fullName: System.Web.UI.Page.SetFocus(String)
- uid: System.Web.UI.Page.SetFocus(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus(Control)
  nameWithType: Page.SetFocus(Control)
  fullName: System.Web.UI.Page.SetFocus(Control)
- uid: System.Web.UI.Page.SkipFormActionValidation
  parent: System.Web.UI.Page
  isExternal: false
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
  fullName: System.Web.UI.Page.SkipFormActionValidation
- uid: System.Web.UI.Page.SmartNavigation
  parent: System.Web.UI.Page
  isExternal: false
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
  fullName: System.Web.UI.Page.SmartNavigation
- uid: System.Web.UI.Page.StyleSheetTheme
  parent: System.Web.UI.Page
  isExternal: false
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
  fullName: System.Web.UI.Page.StyleSheetTheme
- uid: System.Web.UI.Page.Theme
  parent: System.Web.UI.Page
  isExternal: false
  name: Theme
  nameWithType: Page.Theme
  fullName: System.Web.UI.Page.Theme
- uid: System.Web.UI.Page.Title
  parent: System.Web.UI.Page
  isExternal: false
  name: Title
  nameWithType: Page.Title
  fullName: System.Web.UI.Page.Title
- uid: System.Web.UI.Page.Trace
  parent: System.Web.UI.Page
  isExternal: false
  name: Trace
  nameWithType: Page.Trace
  fullName: System.Web.UI.Page.Trace
- uid: System.Web.TraceContext
  parent: System.Web
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
- uid: System.Web.UI.Page.TraceEnabled
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
  fullName: System.Web.UI.Page.TraceEnabled
- uid: System.Web.UI.Page.TraceModeValue
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
  fullName: System.Web.UI.Page.TraceModeValue
- uid: System.Web.TraceMode
  parent: System.Web
  isExternal: false
  name: TraceMode
  nameWithType: TraceMode
  fullName: System.Web.TraceMode
- uid: System.Web.UI.Page.TransactionMode
  parent: System.Web.UI.Page
  isExternal: false
  name: TransactionMode
  nameWithType: Page.TransactionMode
  fullName: System.Web.UI.Page.TransactionMode
- uid: System.Web.UI.Page.TryUpdateModel``1(``0)
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel(TModel)
  nameWithType: Page.TryUpdateModel(TModel)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel)
- uid: TModel
  isExternal: true
  name: TModel
  nameWithType: TModel
  fullName: TModel
- uid: System.Web.UI.Page.TryUpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel(TModel,IValueProvider)
  nameWithType: Page.TryUpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.TryUpdateModel(TModel,IValueProvider)
- uid: System.Web.ModelBinding.IValueProvider
  parent: System.Web.ModelBinding
  isExternal: false
  name: IValueProvider
  nameWithType: IValueProvider
  fullName: System.Web.ModelBinding.IValueProvider
- uid: System.Web.UI.Page.UICulture
  parent: System.Web.UI.Page
  isExternal: false
  name: UICulture
  nameWithType: Page.UICulture
  fullName: System.Web.UI.Page.UICulture
- uid: System.Web.UI.Page.UniqueFilePathSuffix
  parent: System.Web.UI.Page
  isExternal: false
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
  fullName: System.Web.UI.Page.UniqueFilePathSuffix
- uid: System.Web.UI.Page.UnobtrusiveValidationMode
  parent: System.Web.UI.Page
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
  fullName: System.Web.UI.Page.UnobtrusiveValidationMode
- uid: System.Web.UI.UnobtrusiveValidationMode
  parent: System.Web.UI
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: UnobtrusiveValidationMode
  fullName: System.Web.UI.UnobtrusiveValidationMode
- uid: System.Web.UI.Page.UnregisterRequiresControlState(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: UnregisterRequiresControlState(Control)
  nameWithType: Page.UnregisterRequiresControlState(Control)
  fullName: System.Web.UI.Page.UnregisterRequiresControlState(Control)
- uid: System.Web.UI.Page.UpdateModel``1(``0)
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel(TModel)
  nameWithType: Page.UpdateModel(TModel)
  fullName: System.Web.UI.Page.UpdateModel(TModel)
- uid: System.Web.UI.Page.UpdateModel``1(``0,System.Web.ModelBinding.IValueProvider)
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel(TModel,IValueProvider)
  nameWithType: Page.UpdateModel(TModel,IValueProvider)
  fullName: System.Web.UI.Page.UpdateModel(TModel,IValueProvider)
- uid: System.Web.UI.Page.User
  parent: System.Web.UI.Page
  isExternal: false
  name: User
  nameWithType: Page.User
  fullName: System.Web.UI.Page.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.UI.Page.Validate
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate()
  nameWithType: Page.Validate()
  fullName: System.Web.UI.Page.Validate()
- uid: System.Web.UI.Page.Validate(System.String)
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate(String)
  nameWithType: Page.Validate(String)
  fullName: System.Web.UI.Page.Validate(String)
- uid: System.Web.UI.Page.ValidateRequestMode
  parent: System.Web.UI.Page
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
  fullName: System.Web.UI.Page.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.Page.Validators
  parent: System.Web.UI.Page
  isExternal: false
  name: Validators
  nameWithType: Page.Validators
  fullName: System.Web.UI.Page.Validators
- uid: System.Web.UI.Page.VerifyRenderingInServerForm(System.Web.UI.Control)
  parent: System.Web.UI.Page
  isExternal: false
  name: VerifyRenderingInServerForm(Control)
  nameWithType: Page.VerifyRenderingInServerForm(Control)
  fullName: System.Web.UI.Page.VerifyRenderingInServerForm(Control)
- uid: System.Web.UI.Page.ViewStateEncryptionMode
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
  fullName: System.Web.UI.Page.ViewStateEncryptionMode
- uid: System.Web.UI.ViewStateEncryptionMode
  parent: System.Web.UI
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: ViewStateEncryptionMode
  fullName: System.Web.UI.ViewStateEncryptionMode
- uid: System.Web.UI.Page.ViewStateUserKey
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
  fullName: System.Web.UI.Page.ViewStateUserKey
- uid: System.Web.UI.Page.Visible
  parent: System.Web.UI.Page
  isExternal: false
  name: Visible
  nameWithType: Page.Visible
  fullName: System.Web.UI.Page.Visible
- uid: System.Web.UI.Page.#ctor*
  parent: System.Web.UI.Page
  isExternal: false
  name: Page
  nameWithType: Page.Page
- uid: System.Web.UI.Page.AddContentTemplate*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddContentTemplate
  nameWithType: Page.AddContentTemplate
- uid: System.Web.UI.Page.AddOnPreRenderCompleteAsync*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddOnPreRenderCompleteAsync
  nameWithType: Page.AddOnPreRenderCompleteAsync
- uid: System.Web.UI.Page.AddWrappedFileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: AddWrappedFileDependencies
  nameWithType: Page.AddWrappedFileDependencies
- uid: System.Web.UI.Page.Application*
  parent: System.Web.UI.Page
  isExternal: false
  name: Application
  nameWithType: Page.Application
- uid: System.Web.UI.Page.AspCompatBeginProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatBeginProcessRequest
  nameWithType: Page.AspCompatBeginProcessRequest
- uid: System.Web.UI.Page.AspCompatEndProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatEndProcessRequest
  nameWithType: Page.AspCompatEndProcessRequest
- uid: System.Web.UI.Page.AspCompatMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: AspCompatMode
  nameWithType: Page.AspCompatMode
- uid: System.Web.UI.Page.AsyncMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncMode
  nameWithType: Page.AsyncMode
- uid: System.Web.UI.Page.AsyncPageBeginProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageBeginProcessRequest
  nameWithType: Page.AsyncPageBeginProcessRequest
- uid: System.Web.UI.Page.AsyncPageEndProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncPageEndProcessRequest
  nameWithType: Page.AsyncPageEndProcessRequest
- uid: System.Web.UI.Page.AsyncTimeout*
  parent: System.Web.UI.Page
  isExternal: false
  name: AsyncTimeout
  nameWithType: Page.AsyncTimeout
- uid: System.Web.UI.Page.AutoPostBackControl*
  parent: System.Web.UI.Page
  isExternal: false
  name: AutoPostBackControl
  nameWithType: Page.AutoPostBackControl
- uid: System.Web.UI.Page.Buffer*
  parent: System.Web.UI.Page
  isExternal: false
  name: Buffer
  nameWithType: Page.Buffer
- uid: System.Web.UI.Page.Cache*
  parent: System.Web.UI.Page
  isExternal: false
  name: Cache
  nameWithType: Page.Cache
- uid: System.Web.UI.Page.ClientQueryString*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientQueryString
  nameWithType: Page.ClientQueryString
- uid: System.Web.UI.Page.ClientScript*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientScript
  nameWithType: Page.ClientScript
- uid: System.Web.UI.Page.ClientTarget*
  parent: System.Web.UI.Page
  isExternal: false
  name: ClientTarget
  nameWithType: Page.ClientTarget
- uid: System.Web.UI.Page.CodePage*
  parent: System.Web.UI.Page
  isExternal: false
  name: CodePage
  nameWithType: Page.CodePage
- uid: System.Web.UI.Page.ContentType*
  parent: System.Web.UI.Page
  isExternal: false
  name: ContentType
  nameWithType: Page.ContentType
- uid: System.Web.UI.Page.Context*
  parent: System.Web.UI.Page
  isExternal: false
  name: Context
  nameWithType: Page.Context
- uid: System.Web.UI.Page.CreateHtmlTextWriter*
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriter
  nameWithType: Page.CreateHtmlTextWriter
- uid: System.Web.UI.Page.CreateHtmlTextWriterFromType*
  parent: System.Web.UI.Page
  isExternal: false
  name: CreateHtmlTextWriterFromType
  nameWithType: Page.CreateHtmlTextWriterFromType
- uid: System.Web.UI.Page.Culture*
  parent: System.Web.UI.Page
  isExternal: false
  name: Culture
  nameWithType: Page.Culture
- uid: System.Web.UI.Page.DesignerInitialize*
  parent: System.Web.UI.Page
  isExternal: false
  name: DesignerInitialize
  nameWithType: Page.DesignerInitialize
- uid: System.Web.UI.Page.DeterminePostBackMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackMode
  nameWithType: Page.DeterminePostBackMode
- uid: System.Web.UI.Page.DeterminePostBackModeUnvalidated*
  parent: System.Web.UI.Page
  isExternal: false
  name: DeterminePostBackModeUnvalidated
  nameWithType: Page.DeterminePostBackModeUnvalidated
- uid: System.Web.UI.Page.EnableEventValidation*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableEventValidation
  nameWithType: Page.EnableEventValidation
- uid: System.Web.UI.Page.EnableViewState*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewState
  nameWithType: Page.EnableViewState
- uid: System.Web.UI.Page.EnableViewStateMac*
  parent: System.Web.UI.Page
  isExternal: false
  name: EnableViewStateMac
  nameWithType: Page.EnableViewStateMac
- uid: System.Web.UI.Page.ErrorPage*
  parent: System.Web.UI.Page
  isExternal: false
  name: ErrorPage
  nameWithType: Page.ErrorPage
- uid: System.Web.UI.Page.ExecuteRegisteredAsyncTasks*
  parent: System.Web.UI.Page
  isExternal: false
  name: ExecuteRegisteredAsyncTasks
  nameWithType: Page.ExecuteRegisteredAsyncTasks
- uid: System.Web.UI.Page.FileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: FileDependencies
  nameWithType: Page.FileDependencies
- uid: System.Web.UI.Page.FindControl*
  parent: System.Web.UI.Page
  isExternal: false
  name: FindControl
  nameWithType: Page.FindControl
- uid: System.Web.UI.Page.Form*
  parent: System.Web.UI.Page
  isExternal: false
  name: Form
  nameWithType: Page.Form
- uid: System.Web.UI.Page.FrameworkInitialize*
  parent: System.Web.UI.Page
  isExternal: false
  name: FrameworkInitialize
  nameWithType: Page.FrameworkInitialize
- uid: System.Web.UI.Page.GetDataItem*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetDataItem
  nameWithType: Page.GetDataItem
- uid: System.Web.UI.Page.GetPostBackClientEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientEvent
  nameWithType: Page.GetPostBackClientEvent
- uid: System.Web.UI.Page.GetPostBackClientHyperlink*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackClientHyperlink
  nameWithType: Page.GetPostBackClientHyperlink
- uid: System.Web.UI.Page.GetPostBackEventReference*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetPostBackEventReference
  nameWithType: Page.GetPostBackEventReference
- uid: System.Web.UI.Page.GetTypeHashCode*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetTypeHashCode
  nameWithType: Page.GetTypeHashCode
- uid: System.Web.UI.Page.GetValidators*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetValidators
  nameWithType: Page.GetValidators
- uid: System.Web.UI.Page.GetWrappedFileDependencies*
  parent: System.Web.UI.Page
  isExternal: false
  name: GetWrappedFileDependencies
  nameWithType: Page.GetWrappedFileDependencies
- uid: System.Web.UI.Page.Header*
  parent: System.Web.UI.Page
  isExternal: false
  name: Header
  nameWithType: Page.Header
- uid: System.Web.UI.Page.ID*
  parent: System.Web.UI.Page
  isExternal: false
  name: ID
  nameWithType: Page.ID
- uid: System.Web.UI.Page.IdSeparator*
  parent: System.Web.UI.Page
  isExternal: false
  name: IdSeparator
  nameWithType: Page.IdSeparator
- uid: System.Web.UI.Page.InitializeCulture*
  parent: System.Web.UI.Page
  isExternal: false
  name: InitializeCulture
  nameWithType: Page.InitializeCulture
- uid: System.Web.UI.Page.InitOutputCache*
  parent: System.Web.UI.Page
  isExternal: false
  name: InitOutputCache
  nameWithType: Page.InitOutputCache
- uid: System.Web.UI.Page.IsAsync*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsAsync
  nameWithType: Page.IsAsync
- uid: System.Web.UI.Page.IsCallback*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCallback
  nameWithType: Page.IsCallback
- uid: System.Web.UI.Page.IsClientScriptBlockRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsClientScriptBlockRegistered
  nameWithType: Page.IsClientScriptBlockRegistered
- uid: System.Web.UI.Page.IsCrossPagePostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsCrossPagePostBack
  nameWithType: Page.IsCrossPagePostBack
- uid: System.Web.UI.Page.IsPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBack
  nameWithType: Page.IsPostBack
- uid: System.Web.UI.Page.IsPostBackEventControlRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsPostBackEventControlRegistered
  nameWithType: Page.IsPostBackEventControlRegistered
- uid: System.Web.UI.Page.IsReusable*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsReusable
  nameWithType: Page.IsReusable
- uid: System.Web.UI.Page.IsStartupScriptRegistered*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsStartupScriptRegistered
  nameWithType: Page.IsStartupScriptRegistered
- uid: System.Web.UI.Page.IsValid*
  parent: System.Web.UI.Page
  isExternal: false
  name: IsValid
  nameWithType: Page.IsValid
- uid: System.Web.UI.Page.Items*
  parent: System.Web.UI.Page
  isExternal: false
  name: Items
  nameWithType: Page.Items
- uid: System.Web.UI.Page.LCID*
  parent: System.Web.UI.Page
  isExternal: false
  name: LCID
  nameWithType: Page.LCID
- uid: System.Web.UI.Page.LoadPageStateFromPersistenceMedium*
  parent: System.Web.UI.Page
  isExternal: false
  name: LoadPageStateFromPersistenceMedium
  nameWithType: Page.LoadPageStateFromPersistenceMedium
- uid: System.Web.UI.Page.MaintainScrollPositionOnPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: MaintainScrollPositionOnPostBack
  nameWithType: Page.MaintainScrollPositionOnPostBack
- uid: System.Web.UI.Page.MapPath*
  parent: System.Web.UI.Page
  isExternal: false
  name: MapPath
  nameWithType: Page.MapPath
- uid: System.Web.UI.Page.Master*
  parent: System.Web.UI.Page
  isExternal: false
  name: Master
  nameWithType: Page.Master
- uid: System.Web.UI.Page.MasterPageFile*
  parent: System.Web.UI.Page
  isExternal: false
  name: MasterPageFile
  nameWithType: Page.MasterPageFile
- uid: System.Web.UI.Page.MaxPageStateFieldLength*
  parent: System.Web.UI.Page
  isExternal: false
  name: MaxPageStateFieldLength
  nameWithType: Page.MaxPageStateFieldLength
- uid: System.Web.UI.Page.MetaDescription*
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaDescription
  nameWithType: Page.MetaDescription
- uid: System.Web.UI.Page.MetaKeywords*
  parent: System.Web.UI.Page
  isExternal: false
  name: MetaKeywords
  nameWithType: Page.MetaKeywords
- uid: System.Web.UI.Page.ModelBindingExecutionContext*
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelBindingExecutionContext
  nameWithType: Page.ModelBindingExecutionContext
- uid: System.Web.UI.Page.ModelState*
  parent: System.Web.UI.Page
  isExternal: false
  name: ModelState
  nameWithType: Page.ModelState
- uid: System.Web.UI.Page.OnInit*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInit
  nameWithType: Page.OnInit
- uid: System.Web.UI.Page.OnInitComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnInitComplete
  nameWithType: Page.OnInitComplete
- uid: System.Web.UI.Page.OnLoadComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnLoadComplete
  nameWithType: Page.OnLoadComplete
- uid: System.Web.UI.Page.OnPreInit*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreInit
  nameWithType: Page.OnPreInit
- uid: System.Web.UI.Page.OnPreLoad*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreLoad
  nameWithType: Page.OnPreLoad
- uid: System.Web.UI.Page.OnPreRenderComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnPreRenderComplete
  nameWithType: Page.OnPreRenderComplete
- uid: System.Web.UI.Page.OnSaveStateComplete*
  parent: System.Web.UI.Page
  isExternal: false
  name: OnSaveStateComplete
  nameWithType: Page.OnSaveStateComplete
- uid: System.Web.UI.Page.PageAdapter*
  parent: System.Web.UI.Page
  isExternal: false
  name: PageAdapter
  nameWithType: Page.PageAdapter
- uid: System.Web.UI.Page.PageStatePersister*
  parent: System.Web.UI.Page
  isExternal: false
  name: PageStatePersister
  nameWithType: Page.PageStatePersister
- uid: System.Web.UI.Page.PreviousPage*
  parent: System.Web.UI.Page
  isExternal: false
  name: PreviousPage
  nameWithType: Page.PreviousPage
- uid: System.Web.UI.Page.ProcessRequest*
  parent: System.Web.UI.Page
  isExternal: false
  name: ProcessRequest
  nameWithType: Page.ProcessRequest
- uid: System.Web.UI.Page.RaisePostBackEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Page.RaisePostBackEvent
- uid: System.Web.UI.Page.RegisterArrayDeclaration*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterArrayDeclaration
  nameWithType: Page.RegisterArrayDeclaration
- uid: System.Web.UI.Page.RegisterAsyncTask*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterAsyncTask
  nameWithType: Page.RegisterAsyncTask
- uid: System.Web.UI.Page.RegisterClientScriptBlock*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterClientScriptBlock
  nameWithType: Page.RegisterClientScriptBlock
- uid: System.Web.UI.Page.RegisterHiddenField*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterHiddenField
  nameWithType: Page.RegisterHiddenField
- uid: System.Web.UI.Page.RegisterOnSubmitStatement*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterOnSubmitStatement
  nameWithType: Page.RegisterOnSubmitStatement
- uid: System.Web.UI.Page.RegisterRequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresControlState
  nameWithType: Page.RegisterRequiresControlState
- uid: System.Web.UI.Page.RegisterRequiresPostBack*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresPostBack
  nameWithType: Page.RegisterRequiresPostBack
- uid: System.Web.UI.Page.RegisterRequiresRaiseEvent*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresRaiseEvent
  nameWithType: Page.RegisterRequiresRaiseEvent
- uid: System.Web.UI.Page.RegisterRequiresViewStateEncryption*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterRequiresViewStateEncryption
  nameWithType: Page.RegisterRequiresViewStateEncryption
- uid: System.Web.UI.Page.RegisterStartupScript*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterStartupScript
  nameWithType: Page.RegisterStartupScript
- uid: System.Web.UI.Page.RegisterViewStateHandler*
  parent: System.Web.UI.Page
  isExternal: false
  name: RegisterViewStateHandler
  nameWithType: Page.RegisterViewStateHandler
- uid: System.Web.UI.Page.Render*
  parent: System.Web.UI.Page
  isExternal: false
  name: Render
  nameWithType: Page.Render
- uid: System.Web.UI.Page.Request*
  parent: System.Web.UI.Page
  isExternal: false
  name: Request
  nameWithType: Page.Request
- uid: System.Web.UI.Page.RequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: RequiresControlState
  nameWithType: Page.RequiresControlState
- uid: System.Web.UI.Page.Response*
  parent: System.Web.UI.Page
  isExternal: false
  name: Response
  nameWithType: Page.Response
- uid: System.Web.UI.Page.ResponseEncoding*
  parent: System.Web.UI.Page
  isExternal: false
  name: ResponseEncoding
  nameWithType: Page.ResponseEncoding
- uid: System.Web.UI.Page.RouteData*
  parent: System.Web.UI.Page
  isExternal: false
  name: RouteData
  nameWithType: Page.RouteData
- uid: System.Web.UI.Page.SavePageStateToPersistenceMedium*
  parent: System.Web.UI.Page
  isExternal: false
  name: SavePageStateToPersistenceMedium
  nameWithType: Page.SavePageStateToPersistenceMedium
- uid: System.Web.UI.Page.Server*
  parent: System.Web.UI.Page
  isExternal: false
  name: Server
  nameWithType: Page.Server
- uid: System.Web.UI.Page.Session*
  parent: System.Web.UI.Page
  isExternal: false
  name: Session
  nameWithType: Page.Session
- uid: System.Web.UI.Page.SetFocus*
  parent: System.Web.UI.Page
  isExternal: false
  name: SetFocus
  nameWithType: Page.SetFocus
- uid: System.Web.UI.Page.SkipFormActionValidation*
  parent: System.Web.UI.Page
  isExternal: false
  name: SkipFormActionValidation
  nameWithType: Page.SkipFormActionValidation
- uid: System.Web.UI.Page.SmartNavigation*
  parent: System.Web.UI.Page
  isExternal: false
  name: SmartNavigation
  nameWithType: Page.SmartNavigation
- uid: System.Web.UI.Page.StyleSheetTheme*
  parent: System.Web.UI.Page
  isExternal: false
  name: StyleSheetTheme
  nameWithType: Page.StyleSheetTheme
- uid: System.Web.UI.Page.Theme*
  parent: System.Web.UI.Page
  isExternal: false
  name: Theme
  nameWithType: Page.Theme
- uid: System.Web.UI.Page.Title*
  parent: System.Web.UI.Page
  isExternal: false
  name: Title
  nameWithType: Page.Title
- uid: System.Web.UI.Page.Trace*
  parent: System.Web.UI.Page
  isExternal: false
  name: Trace
  nameWithType: Page.Trace
- uid: System.Web.UI.Page.TraceEnabled*
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceEnabled
  nameWithType: Page.TraceEnabled
- uid: System.Web.UI.Page.TraceModeValue*
  parent: System.Web.UI.Page
  isExternal: false
  name: TraceModeValue
  nameWithType: Page.TraceModeValue
- uid: System.Web.UI.Page.TransactionMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: TransactionMode
  nameWithType: Page.TransactionMode
- uid: System.Web.UI.Page.TryUpdateModel<TModel>*
  parent: System.Web.UI.Page
  isExternal: false
  name: TryUpdateModel<TModel>
  nameWithType: Page.TryUpdateModel<TModel>
- uid: System.Web.UI.Page.UICulture*
  parent: System.Web.UI.Page
  isExternal: false
  name: UICulture
  nameWithType: Page.UICulture
- uid: System.Web.UI.Page.UniqueFilePathSuffix*
  parent: System.Web.UI.Page
  isExternal: false
  name: UniqueFilePathSuffix
  nameWithType: Page.UniqueFilePathSuffix
- uid: System.Web.UI.Page.UnobtrusiveValidationMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: UnobtrusiveValidationMode
  nameWithType: Page.UnobtrusiveValidationMode
- uid: System.Web.UI.Page.UnregisterRequiresControlState*
  parent: System.Web.UI.Page
  isExternal: false
  name: UnregisterRequiresControlState
  nameWithType: Page.UnregisterRequiresControlState
- uid: System.Web.UI.Page.UpdateModel<TModel>*
  parent: System.Web.UI.Page
  isExternal: false
  name: UpdateModel<TModel>
  nameWithType: Page.UpdateModel<TModel>
- uid: System.Web.UI.Page.User*
  parent: System.Web.UI.Page
  isExternal: false
  name: User
  nameWithType: Page.User
- uid: System.Web.UI.Page.Validate*
  parent: System.Web.UI.Page
  isExternal: false
  name: Validate
  nameWithType: Page.Validate
- uid: System.Web.UI.Page.ValidateRequestMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: ValidateRequestMode
  nameWithType: Page.ValidateRequestMode
- uid: System.Web.UI.Page.Validators*
  parent: System.Web.UI.Page
  isExternal: false
  name: Validators
  nameWithType: Page.Validators
- uid: System.Web.UI.Page.VerifyRenderingInServerForm*
  parent: System.Web.UI.Page
  isExternal: false
  name: VerifyRenderingInServerForm
  nameWithType: Page.VerifyRenderingInServerForm
- uid: System.Web.UI.Page.ViewStateEncryptionMode*
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateEncryptionMode
  nameWithType: Page.ViewStateEncryptionMode
- uid: System.Web.UI.Page.ViewStateUserKey*
  parent: System.Web.UI.Page
  isExternal: false
  name: ViewStateUserKey
  nameWithType: Page.ViewStateUserKey
- uid: System.Web.UI.Page.Visible*
  parent: System.Web.UI.Page
  isExternal: false
  name: Visible
  nameWithType: Page.Visible
