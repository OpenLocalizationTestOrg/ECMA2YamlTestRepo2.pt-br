### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.PerformanceData.CounterSet
  id: CounterSet
  children:
  - System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  - System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  - System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  - System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  - System.Diagnostics.PerformanceData.CounterSet.Dispose
  - System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  - System.Diagnostics.PerformanceData.CounterSet.Finalize
  langs:
  - csharp
  name: CounterSet
  nameWithType: CounterSet
  fullName: System.Diagnostics.PerformanceData.CounterSet
  type: Class
  summary: "Define um conjunto de contadores lógicos."
  remarks: "Chamar o <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>método quando tiver terminado a remoção de registro do provedor e para liberar todos os recursos gerenciados e.</xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: 'public class CounterSet : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  id: '#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)'
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: CounterSet(Guid,Guid,CounterSetInstanceType)
  nameWithType: CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.PerformanceData.CounterSet&quot;> </xref> classe."
  remarks: "Registra o provedor. Chamar o <xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>método Remove o registro.</xref:System.Diagnostics.PerformanceData.CounterSet.Dispose%2A>"
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public CounterSet (Guid providerGuid, Guid counterSetGuid, System.Diagnostics.PerformanceData.CounterSetInstanceType instanceType);
    parameters:
    - id: providerGuid
      type: System.Guid
      description: "GUID que identifica exclusivamente o provedor de dados do contador. Use o Guid especificado no manifesto."
    - id: counterSetGuid
      type: System.Guid
      description: "GUID que identifica exclusivamente o contador definido para um provedor. Use o Guid especificado no manifesto."
    - id: instanceType
      type: System.Diagnostics.PerformanceData.CounterSetInstanceType
      description: "Identifica o tipo de conjunto de contadores, por exemplo, se o conjunto de contadores é um conjunto de contadores de instância único ou vários."
  overload: System.Diagnostics.PerformanceData.CounterSet.#ctor*
  exceptions:
  - type: System.InsufficientMemoryException
    commentId: T:System.InsufficientMemoryException
    description: "Não há memória suficiente está disponível para concluir a operação."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "Não tem suporte anterior ao Windows Vista."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Um dos parâmetros é nulo ou não é válido."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Falha em uma chamada de função do Win32 subjacente."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  id: AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: AddCounter(Int32,CounterType)
  nameWithType: CounterSet.AddCounter(Int32,CounterType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Adiciona um contador para o contador definido usando o identificador do contador especificado e o tipo."
  remarks: "Você deve adicionar contadores para o contador definido antes de criar uma instância do conjunto de contadores."
  syntax:
    content: public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType);
    parameters:
    - id: counterId
      type: System.Int32
      description: "Identifica o contador. Use o mesmo valor usado no manifesto para definir o contador."
    - id: counterType
      type: System.Diagnostics.PerformanceData.CounterType
      description: "Identifica o tipo de contador. O tipo de contador determina como os dados do contador são calculados, calculados e exibidos."
  overload: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O identificador do contador já existe no conjunto ou for negativo, ou o tipo de contador é nulo ou não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Você não pode adicionar contadores para o contador definido após a criação de uma instância do contador definido."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  id: AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: AddCounter(Int32,CounterType,String)
  nameWithType: CounterSet.AddCounter(Int32,CounterType,String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Adiciona um contador para o contador definido usando o identificador do contador especificado e o tipo e um nome para exibição para o contador."
  remarks: "Você deve adicionar contadores para o contador definido antes de criar uma instância do conjunto de contadores."
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public void AddCounter (int counterId, System.Diagnostics.PerformanceData.CounterType counterType, string counterName);
    parameters:
    - id: counterId
      type: System.Int32
      description: "Identifica o contador. Use o mesmo valor usado no manifesto para definir o contador."
    - id: counterType
      type: System.Diagnostics.PerformanceData.CounterType
      description: "Identifica o tipo de contador. O tipo de contador determina como os dados do contador são calculados, calculados e exibidos."
    - id: counterName
      type: System.String
      description: "Nome do contador. Você pode usar esse nome para o contador na instância de conjunto de contadores de índice. (Consulte &lt;xref:System.Diagnostics.PerformanceData.CounterSetInstanceCounterDataSet.Item%2A?displayProperty=fullName&gt;.)"
  overload: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O identificador do contador já existe no conjunto ou for negativo, ou o tipo de contador é nulo ou não é válido."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Você não pode adicionar contadores para o contador definido após a criação de uma instância do contador definido."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  id: CreateCounterSetInstance(System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: CreateCounterSetInstance(String)
  nameWithType: CounterSet.CreateCounterSetInstance(String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Cria uma instância do conjunto de contador."
  remarks: "Chame este método uma vez para conjuntos de contadores de instância única e uma ou mais vezes para conjuntos de contadores de várias instâncias.       O provedor determina quando ele cria uma instância. Se os dados do contador serão mais estáticos, o provedor pode criar uma instância no momento da inicialização. Por exemplo, o número de processadores em um computador seria considerado estático, portanto, um provedor que fornece dados do contador para processadores pode criar uma instância para cada processador no computador no momento da inicialização. Para os contadores que são mais dinâmicos, como disco ou contadores de processo, os provedores deve criar novas instâncias em resposta a um novo dispositivo USB que está sendo adicionado ou um novo processo que está sendo criado.       O provedor deve manter o contador de dados atualizados em todos os momentos."
  example:
  - For an example, see <xref:System.Diagnostics.PerformanceData>.
  syntax:
    content: public System.Diagnostics.PerformanceData.CounterSetInstance CreateCounterSetInstance (string instanceName);
    parameters:
    - id: instanceName
      type: System.String
      description: "Nome da instância. O nome deve ser exclusivo."
    return:
      type: System.Diagnostics.PerformanceData.CounterSetInstance
      description: "Uma instância do conjunto de contadores que conterá os dados do contador."
  overload: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O nome da instância é NULL."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Você deve adicionar contadores para o contador definido antes de criar uma instância do conjunto de contadores."
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose
  id: Dispose
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Dispose()
  nameWithType: CounterSet.Dispose()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Libera todos os recursos não gerenciados usados por este objeto."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: CounterSet.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Versões de todos os recursos não gerenciados usados por este objeto e, opcionalmente, liberar os recursos gerenciados."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_True&quot; name=&quot;True&quot; href=&quot;&quot;></xref>Se isso foi chamado o método Dispose, <xref uid=&quot;langword_csharp_False&quot; name=&quot;False&quot; href=&quot;&quot;> </xref> se chamado do finalizador."
  overload: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize
  id: Finalize
  parent: System.Diagnostics.PerformanceData.CounterSet
  langs:
  - csharp
  name: Finalize()
  nameWithType: CounterSet.Finalize()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.PerformanceData
  summary: "Libera os recursos antes do objeto é recuperado pela coleta de lixo."
  remarks: "Esse método é chamado automaticamente pelo tempo de execução."
  syntax:
    content: ~CounterSet ();
    parameters: []
  overload: System.Diagnostics.PerformanceData.CounterSet.Finalize*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InsufficientMemoryException
  parent: System
  isExternal: false
  name: InsufficientMemoryException
  nameWithType: InsufficientMemoryException
  fullName: System.InsufficientMemoryException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor(System.Guid,System.Guid,System.Diagnostics.PerformanceData.CounterSetInstanceType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CounterSet(Guid,Guid,CounterSetInstanceType)
  nameWithType: CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CounterSet(Guid,Guid,CounterSetInstanceType)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.PerformanceData.CounterSetInstanceType
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterSetInstanceType
  nameWithType: CounterSetInstanceType
  fullName: System.Diagnostics.PerformanceData.CounterSetInstanceType
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter(Int32,CounterType)
  nameWithType: CounterSet.AddCounter(Int32,CounterType)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Diagnostics.PerformanceData.CounterType
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterType
  nameWithType: CounterType
  fullName: System.Diagnostics.PerformanceData.CounterType
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter(System.Int32,System.Diagnostics.PerformanceData.CounterType,System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter(Int32,CounterType,String)
  nameWithType: CounterSet.AddCounter(Int32,CounterType,String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.AddCounter(Int32,CounterType,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(System.String)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CreateCounterSetInstance(String)
  nameWithType: CounterSet.CreateCounterSetInstance(String)
  fullName: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance(String)
- uid: System.Diagnostics.PerformanceData.CounterSetInstance
  parent: System.Diagnostics.PerformanceData
  isExternal: false
  name: CounterSetInstance
  nameWithType: CounterSetInstance
  fullName: System.Diagnostics.PerformanceData.CounterSetInstance
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose()
  nameWithType: CounterSet.Dispose()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose()
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose(System.Boolean)
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: CounterSet.Dispose(Boolean)
  fullName: System.Diagnostics.PerformanceData.CounterSet.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Finalize()
  nameWithType: CounterSet.Finalize()
  fullName: System.Diagnostics.PerformanceData.CounterSet.Finalize()
- uid: System.Diagnostics.PerformanceData.CounterSet.#ctor*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CounterSet
  nameWithType: CounterSet.CounterSet
- uid: System.Diagnostics.PerformanceData.CounterSet.AddCounter*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: AddCounter
  nameWithType: CounterSet.AddCounter
- uid: System.Diagnostics.PerformanceData.CounterSet.CreateCounterSetInstance*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: CreateCounterSetInstance
  nameWithType: CounterSet.CreateCounterSetInstance
- uid: System.Diagnostics.PerformanceData.CounterSet.Dispose*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Dispose
  nameWithType: CounterSet.Dispose
- uid: System.Diagnostics.PerformanceData.CounterSet.Finalize*
  parent: System.Diagnostics.PerformanceData.CounterSet
  isExternal: false
  name: Finalize
  nameWithType: CounterSet.Finalize
