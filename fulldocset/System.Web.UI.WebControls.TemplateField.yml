### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TemplateField
  id: TemplateField
  children:
  - System.Web.UI.WebControls.TemplateField.#ctor
  - System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  - System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.TemplateField.CreateField
  - System.Web.UI.WebControls.TemplateField.EditItemTemplate
  - System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.TemplateField.FooterTemplate
  - System.Web.UI.WebControls.TemplateField.HeaderTemplate
  - System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  - System.Web.UI.WebControls.TemplateField.ItemTemplate
  - System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  - System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  langs:
  - csharp
  name: TemplateField
  nameWithType: TemplateField
  fullName: System.Web.UI.WebControls.TemplateField
  type: Class
  summary: "Representa um campo que exibe conteúdo personalizado em um controle associado a dados."
  remarks: "A classe TemplateField é usada pelos controles de associação de dados (como <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>) para exibir o conteúdo personalizado para cada registro exibido.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> Quando você precisa exibir o conteúdo de um controle associado a dados que não é fornecido por um dos dados predefinidos campos de controle (como <xref:System.Web.UI.WebControls.BoundField>), use a classe TemplateField para criar sua interface de usuário personalizada (IU).</xref:System.Web.UI.WebControls.BoundField> O objeto TemplateField é exibido diferente dependendo do controle associado a dados no qual ele é usado. Por exemplo, o <xref:System.Web.UI.WebControls.GridView>controle exibe um objeto TemplateField como uma coluna e o <xref:System.Web.UI.WebControls.DetailsView>controle exibe como uma linha.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Você pode definir um modelo personalizado para as diferentes partes do objeto TemplateField usando os modelos listados na tabela a seguir.      | Modelo | Descrição |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>| Especifica o conteúdo a ser exibida para os itens alternados em um objeto TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A>| Especifica o conteúdo a ser exibida para um item no modo de edição em um objeto TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>| Especifica o conteúdo a ser exibido na seção de rodapé de um objeto TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>| Especifica o conteúdo a ser exibido na seção de cabeçalho de um objeto TemplateField. |   | <xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A>| Especifica o conteúdo a ser exibida para um item no modo de inserção em um objeto TemplateField.</xref:System.Web.UI.WebControls.TemplateField.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A> Este modelo é suportado somente pelo controle <xref:System.Web.UI.WebControls.DetailsView>. |   | <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>| Especifica o conteúdo para exibir os itens em um objeto TemplateField. |       Você pode ocultar um objeto TemplateField em um controle associado a dados, definindo o <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>propriedade `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> </xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> </xref:System.Web.UI.WebControls.DetailsView>       Como uma alternativa para definir um personalizado <xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A>ou <xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A>modelo, você pode personalizar as seções de cabeçalho e rodapé de um objeto TemplateField definindo outras propriedades do objeto TemplateField.</xref:System.Web.UI.WebControls.TemplateField.FooterTemplate%2A> </xref:System.Web.UI.WebControls.TemplateField.HeaderTemplate%2A> Para exibir uma legenda nas seções de cabeçalho ou rodapé de página, defina o <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>ou o <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>propriedade, respectivamente.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> Em vez de exibir o texto na seção de cabeçalho, você pode exibir uma imagem, definindo o <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>propriedade.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> A seção de cabeçalho pode ser ocultada no objeto TemplateField definindo o <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>propriedade `false`.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      > [!NOTE] > Alguns controles associados a dados (como o <xref:System.Web.UI.WebControls.GridView>controle) pode mostrar ou ocultar apenas a seção de cabeçalho inteiro do controle.</xref:System.Web.UI.WebControls.GridView> Esses controles associados a dados não oferecem suporte a <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>propriedade para um campo associado individual.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> Para mostrar ou ocultar a seção de cabeçalho inteiro de um controle associado a dados, use o controle `ShowHeader` propriedade (se disponível).       Você também pode personalizar a aparência do objeto TemplateField (cor da fonte, cor do plano de fundo e assim por diante), definindo as propriedades de estilo para as diferentes partes do campo. A tabela a seguir lista as propriedades de estilo diferente.      | Propriedade de estilo | Descrição |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| As configurações de estilo para controles de servidor Web filho do objeto TemplateField. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| As configurações de estilo para a seção de rodapé do objeto TemplateField. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| As configurações de estilo para a seção de cabeçalho do objeto TemplateField. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| As configurações de estilo para os itens de dados no objeto TemplateField. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to create a custom TemplateField object that displays two fields in the same cell. The first name and last name fields are combined into the same TemplateField object.  \n  \n [!code-cs[TemplateField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_104_1.aspx)]\n [!code-vb[TemplateField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_104_1.aspx)]"
  syntax:
    content: 'public class TemplateField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.HeaderText
  - System.Web.UI.WebControls.DataControlField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: TemplateField()
  nameWithType: TemplateField.TemplateField()
  fullName: System.Web.UI.WebControls.TemplateField.TemplateField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> classe."
  remarks: "Use este construtor para inicializar uma nova instância de <xref:System.Web.UI.WebControls.TemplateField>classe.</xref:System.Web.UI.WebControls.TemplateField> Este construtor é comumente usado ao adicionar campos a um controle de associação de dados criado dinamicamente.       Adicionar dinamicamente um <xref:System.Web.UI.WebControls.TemplateField>de objeto para um controle associado a dados, crie um novo <xref:System.Web.UI.WebControls.TemplateField>do objeto, defina os modelos apropriados e, em seguida, adicioná-lo à coleção de campos do controle associado a dados.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.TemplateField> Por exemplo, se você estiver usando o <xref:System.Web.UI.WebControls.GridView>de controle, adicione o <xref:System.Web.UI.WebControls.TemplateField>do objeto para o <xref:System.Web.UI.WebControls.GridView.Columns%2A>coleção.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > Embora dinamicamente, você pode adicionar campos a um controle associado a dados, é altamente recomendável que campos ser estaticamente declarados e, em seguida, mostrado ou oculto, conforme apropriado. Declarar estaticamente todos os seus campos reduz o tamanho do estado de exibição para o controle de associação de dados pai."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.TemplateField> field column to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[TemplateFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_118_1.aspx)]\n [!code-vb[TemplateFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_118_1.aspx)]"
  syntax:
    content: public TemplateField ();
    parameters: []
  overload: System.Web.UI.WebControls.TemplateField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  id: AlternatingItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o modelo para exibir a alternância de itens em uma <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> objeto."
  remarks: "Use a propriedade AlternatingItemTemplate para especificar o conteúdo personalizado exibido para os itens alternados em uma <xref:System.Web.UI.WebControls.TemplateField>objeto.</xref:System.Web.UI.WebControls.TemplateField> Defina o conteúdo ao criar um modelo que especifica como os itens alternados são renderizados.      > [!NOTE] > AlternatingItemTemplate a propriedade normalmente é usada em combinação com o <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>propriedade para criar uma aparência diferente para todos os outros itens no controle associado a dados.</xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A>       Para especificar um modelo, primeiro coloque abrindo e fechando `<AlternatingItemTemplate>` marcas entre as marcas de abertura e fechamento do `<TemplateField>` elemento. Em seguida, adicione o conteúdo personalizado entre a abertura e fechamento `<AlternatingItemTemplate>` marcas. O conteúdo pode ser simples como texto sem formatação ou mais complexa (inserir outros controles no modelo, por exemplo).       Para acessar programaticamente um controle definido em um modelo, primeiro determine qual <xref:System.Web.UI.WebControls.TableCell>objeto no controle associado a dados contém o controle.</xref:System.Web.UI.WebControls.TableCell> Em seguida, use o <xref:System.Web.UI.Control.Controls%2A>coleção do <xref:System.Web.UI.WebControls.TableCell>objeto para o controle de acesso.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Você também pode usar o <xref:System.Web.UI.Control.FindControl%2A>método o <xref:System.Web.UI.WebControls.TableCell>objeto para localizar o controle, se o controle tiver um <xref:System.Web.UI.Control.ID%2A>propriedade especificada.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the AlternatingItemTemplate property to create a custom template for the alternating items in a <xref:System.Web.UI.WebControls.TemplateField> field column of a <xref:System.Web.UI.WebControls.GridView> control. The template is a variation of the template specified by the <xref:System.Web.UI.WebControls.TemplateField.ItemTemplate%2A> property, where an image is displayed on the opposite side of the cell.  \n  \n [!code-vb[TemplateFieldAlternatingItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1029_1.aspx)]\n [!code-cs[TemplateFieldAlternatingItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1029_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate AlternatingItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-objeto implementado que contém o modelo para exibir a alternância de itens em uma <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o valor que o <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> objeto está associado ao devem ser convertidas em <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se for <xref:System.String.Empty>.</xref:System.String.Empty>"
  remarks: "Essa propriedade se aplica a instruções de associação de dados bidirecionais feitas no modelo. A conversão é feita depois de extrair os valores do modelo associado bidirecional e antes de passar os valores para a fonte de dados para uma operação de atualização ou inserção.       Por exemplo, um usuário pode inserir uma cadeia de caracteres vazia (&quot;&quot;) para um valor de campo ao atualizar ou inserir registros. Use a propriedade ConvertEmptyStringToNull para especificar se um valor de cadeia de caracteres vazia é automaticamente convertido em `null` quando o campo de dados é atualizado na fonte de dados."
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o valor que o <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> é associado ao deve ser convertido em <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> quando ele for <xref:System.String.Empty>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.String.Empty> O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: TemplateField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.TemplateField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia as propriedades do atual <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>-objeto derivado especificado <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> objeto."
  remarks: "O método CopyProperties é um método auxiliar usado para copiar as propriedades do atual <xref:System.Web.UI.WebControls.TemplateField>-derivados do objeto para o <xref:System.Web.UI.WebControls.DataControlField>objeto criado pelo método.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.TemplateField>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "O <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> para copiar as propriedades do atual <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> para."
  overload: System.Web.UI.WebControls.TemplateField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: CreateField()
  nameWithType: TemplateField.CreateField()
  fullName: System.Web.UI.WebControls.TemplateField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria um novo <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> objeto."
  remarks: "O método CreateField substitui o método base para retornar um <xref:System.Web.UI.WebControls.TemplateField>objeto.</xref:System.Web.UI.WebControls.TemplateField>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "Sempre retorna um novo <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o modelo para exibir um item no modo de edição em um <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> objeto."
  remarks: "Use a propriedade EditItemTemplate para especificar o conteúdo personalizado exibido para um item que está no modo de edição em um <xref:System.Web.UI.WebControls.TemplateField>objeto.</xref:System.Web.UI.WebControls.TemplateField> Defina o conteúdo ao criar um modelo que especifica como um item no modo de edição é renderizado. A propriedade EditItemTemplate normalmente contém controles de entrada do usuário modificar um valor em uma fonte de dados.       Para especificar um modelo, primeiro coloque abrindo e fechando `<EditItemTemplate>` marcas entre as marcas de abertura e fechamento do `<TemplateField>` elemento. Em seguida, adicione o conteúdo personalizado entre a abertura e fechamento `<EditItemTemplate>` marcas. O conteúdo pode ser simples como texto sem formatação ou mais complexa (inserir outros controles no modelo, por exemplo).       Para acessar programaticamente um controle definido em um modelo, primeiro determine qual <xref:System.Web.UI.WebControls.TableCell>objeto no controle associado a dados contém o controle.</xref:System.Web.UI.WebControls.TableCell> Em seguida, use o <xref:System.Web.UI.Control.Controls%2A>coleção do <xref:System.Web.UI.WebControls.TableCell>objeto para o controle de acesso.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Você também pode usar o <xref:System.Web.UI.Control.FindControl%2A>método o <xref:System.Web.UI.WebControls.TableCell>objeto para localizar o controle, se o controle tiver um <xref:System.Web.UI.Control.ID%2A>propriedade especificada.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the EditItemTemplate property to create a custom template for an item in edit mode in a <xref:System.Web.UI.WebControls.TemplateField> field column of a <xref:System.Web.UI.WebControls.GridView> control. The template contains validation server controls to prevent a user from leaving a value field empty.  \n  \n [!code-cs[TemplateFieldEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_821_1.aspx)]\n [!code-vb[TemplateFieldEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_821_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-implementado o objeto que contém o modelo para exibir um item no modo de edição em um <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.TemplateField.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Extrai o valor do controle de dados de campos conforme especificado por uma ou mais instruções de associação bidirecional (<xref uid=&quot;langword_csharp_DataBind&quot; name=&quot;DataBind&quot; href=&quot;&quot;></xref>) da célula da tabela atual e adiciona os valores para especificado <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> coleção."
  remarks: "O método ExtractValuesFromCell é implementado por tipos derivados de <xref:System.Web.UI.WebControls.DataControlField>, como <xref:System.Web.UI.WebControls.TemplateField>.</xref:System.Web.UI.WebControls.TemplateField> </xref:System.Web.UI.WebControls.DataControlField> Esse método é chamado para extrair os valores dos campos de associação de dados bidirecionais no modelo para preencher os dicionários para ser passado para a fonte de dados para uma atualização, inserção ou operação de exclusão. O par de valor do campo é armazenado na coleção de dicionário que é passada para o método. O método ExtractValuesFromCell é chamado pelo `ExtractRowValues` método dos controles de dados <xref:System.Web.UI.WebControls.DetailsView>e <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "An <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;></xref>."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Um <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> que contém o texto ou controles o <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> valores."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar que os valores dos campos somente leitura são incluídos na `dictionary` coleção; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
  fullName: System.Web.UI.WebControls.TemplateField.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o modelo para exibir a seção de rodapé de um <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> objeto."
  remarks: "Use a propriedade FooterTemplate para especificar o conteúdo personalizado exibido na seção de rodapé de um <xref:System.Web.UI.WebControls.TemplateField>objeto.</xref:System.Web.UI.WebControls.TemplateField> Defina o conteúdo ao criar um modelo que especifica como a seção de rodapé é renderizada.       Para especificar um modelo, primeiro coloque abrindo e fechando `<FooterTemplate>` marcas entre as marcas de abertura e fechamento do `<TemplateField>` elemento. Em seguida, adicione o conteúdo personalizado entre a abertura e fechamento `<FooterTemplate>` marcas. O conteúdo pode ser simples como texto sem formatação ou mais complexa (inserir outros controles no modelo, por exemplo).       Para acessar programaticamente um controle definido em um modelo, primeiro determine qual <xref:System.Web.UI.WebControls.TableCell>objeto no controle associado a dados contém o controle.</xref:System.Web.UI.WebControls.TableCell> Em seguida, use o <xref:System.Web.UI.Control.Controls%2A>coleção do <xref:System.Web.UI.WebControls.TableCell>objeto para o controle de acesso.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Você também pode usar o <xref:System.Web.UI.Control.FindControl%2A>método o <xref:System.Web.UI.WebControls.TableCell>objeto para localizar o controle, se o controle tiver um <xref:System.Web.UI.Control.ID%2A>propriedade especificada.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the FooterTemplate property to create a custom template for the footer section of a <xref:System.Web.UI.WebControls.TemplateField> field column in a <xref:System.Web.UI.WebControls.GridView> control. The template displays the sum of the values in the <xref:System.Web.UI.WebControls.TemplateField> field column.  \n  \n [!code-cs[TemplateFieldFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1286_1.aspx)]\n [!code-vb[TemplateFieldFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1286_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-implementado o objeto que contém o modelo para exibir a seção de rodapé de um <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.TemplateField.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
  fullName: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o modelo para exibir a seção de cabeçalho de um <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> objeto."
  remarks: "Use a propriedade HeaderTemplate para especificar o conteúdo personalizado exibido na seção de cabeçalho de um <xref:System.Web.UI.WebControls.TemplateField>objeto.</xref:System.Web.UI.WebControls.TemplateField> Defina o conteúdo ao criar um modelo que especifica como a seção de cabeçalho é renderizada.       Para especificar um modelo, primeiro coloque abrindo e fechando `<HeaderTemplate>` marcas entre as marcas de abertura e fechamento do `<TemplateField>` elemento. Em seguida, adicione o conteúdo personalizado entre a abertura e fechamento `<HeaderTemplate>` marcas. O conteúdo pode ser simples como texto sem formatação ou mais complexa (inserir outros controles no modelo, por exemplo).       Para acessar programaticamente um controle definido em um modelo, primeiro determine qual <xref:System.Web.UI.WebControls.TableCell>objeto no controle associado a dados contém o controle.</xref:System.Web.UI.WebControls.TableCell> Em seguida, use o <xref:System.Web.UI.Control.Controls%2A>coleção do <xref:System.Web.UI.WebControls.TableCell>objeto para o controle de acesso.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Você também pode usar o <xref:System.Web.UI.Control.FindControl%2A>método o <xref:System.Web.UI.WebControls.TableCell>objeto para localizar o controle, se o controle tiver um <xref:System.Web.UI.Control.ID%2A>propriedade especificada.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the HeaderTemplate property to create a custom template for the header section of a <xref:System.Web.UI.WebControls.TemplateField> field column in a <xref:System.Web.UI.WebControls.GridView> control. The template displays a check box that allows the user to show or hide the rows of the <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[TemplateFieldHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1149_1.aspx)]\n [!code-vb[TemplateFieldHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1149_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-implementado o objeto que contém o modelo para exibir a seção de cabeçalho de um <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> em um controle associado a dados. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.TemplateField.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adiciona texto ou controles à coleção controls da célula."
  remarks: "Chame este método quando você estiver criando um controle associado a dados personalizado que usa <xref:System.Web.UI.WebControls.DataControlFieldCell>objetos para inicializar as células da estrutura de tabela com dados ou controles.</xref:System.Web.UI.WebControls.DataControlFieldCell>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "Um <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> que contém o texto ou controles o <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref>."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> valores."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> valores, especificando o estado da linha que contém o <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref>."
    - id: rowIndex
      type: System.Int32
      description: "O índice da linha que o <xref href=&quot;System.Web.UI.WebControls.DataControlFieldCell&quot;> </xref> está contida no."
  overload: System.Web.UI.WebControls.TemplateField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  id: InsertItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o modelo para exibir um item no modo de inserção em uma <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> objeto."
  remarks: "Use a propriedade InsertItemTemplate para especificar o conteúdo personalizado exibido para um item no modo de inserção em uma <xref:System.Web.UI.WebControls.TemplateField>objeto.</xref:System.Web.UI.WebControls.TemplateField> Defina o conteúdo ao criar um modelo que especifica como o item no modo de inserção é renderizado.       Para especificar um modelo, primeiro coloque abrindo e fechando `<InsertItemTemplate>` marcas entre as marcas de abertura e fechamento do `<TemplateField>` elemento. Em seguida, adicione o conteúdo personalizado entre a abertura e fechamento `<InsertItemTemplate>` marcas. O conteúdo pode ser simples como texto sem formatação ou mais complexa (inserir outros controles no modelo, por exemplo).       Para acessar programaticamente um controle definido em um modelo, primeiro determine qual <xref:System.Web.UI.WebControls.TableCell>objeto no controle associado a dados contém o controle.</xref:System.Web.UI.WebControls.TableCell> Em seguida, use o <xref:System.Web.UI.Control.Controls%2A>coleção do <xref:System.Web.UI.WebControls.TableCell>objeto para o controle de acesso.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Você também pode usar o <xref:System.Web.UI.Control.FindControl%2A>método o <xref:System.Web.UI.WebControls.TableCell>objeto para localizar o controle, se o controle tiver um <xref:System.Web.UI.Control.ID%2A>propriedade especificada.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>      > [!NOTE] > Nem todos os controles de associação de dados oferecem suporte a esse modelo, esse modelo é suportado somente pelos controles associados a dados que permitem que você inserir um registro, como o <xref:System.Web.UI.WebControls.DetailsView>controle.</xref:System.Web.UI.WebControls.DetailsView>"
  example:
  - "The following code example demonstrates how to use the InsertItemTemplate property to create a custom template for an item in insert mode in a <xref:System.Web.UI.WebControls.TemplateField> field row in a <xref:System.Web.UI.WebControls.DetailsView> control. The template displays a <xref:System.Web.UI.WebControls.DropDownList> control that allows the user to select a value from a predefined list.  \n  \n [!code-vb[TemplateFieldInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_855_1.aspx)]\n [!code-cs[TemplateFieldInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_855_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-implementado o objeto que contém o modelo para exibir um item no modo de inserção em uma <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.TemplateField.InsertItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o modelo para exibir um item em um controle associado a dados."
  remarks: "Use a propriedade ItemTemplate para especificar o conteúdo personalizado exibido para os itens em uma <xref:System.Web.UI.WebControls.TemplateField>objeto.</xref:System.Web.UI.WebControls.TemplateField> Defina o conteúdo ao criar um modelo que especifica como os itens são processados.      > [!NOTE] > Opcionalmente, você pode definir o <xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>propriedade em combinação com a propriedade ItemTemplate para criar uma aparência diferente para todos os outros itens no controle associado a dados.</xref:System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate%2A>       Para especificar um modelo, primeiro coloque abrindo e fechando `<ItemTemplate>` marcas entre as marcas de abertura e fechamento do `<TemplateField>` elemento. Em seguida, adicione o conteúdo personalizado entre a abertura e fechamento `<ItemTemplate>` marcas. O conteúdo pode ser simples como texto sem formatação ou mais complexa (inserir outros controles no modelo, por exemplo).       Para acessar programaticamente um controle definido em um modelo, primeiro determine qual <xref:System.Web.UI.WebControls.TableCell>objeto no controle associado a dados contém o controle.</xref:System.Web.UI.WebControls.TableCell> Em seguida, use o <xref:System.Web.UI.Control.Controls%2A>coleção do <xref:System.Web.UI.WebControls.TableCell>objeto para o controle de acesso.</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.Controls%2A> Você também pode usar o <xref:System.Web.UI.Control.FindControl%2A>método o <xref:System.Web.UI.WebControls.TableCell>objeto para localizar o controle, se o controle tiver um <xref:System.Web.UI.Control.ID%2A>propriedade especificada.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.Control.FindControl%2A>"
  example:
  - "The following code example demonstrates how to use the ItemTemplate property to create a custom template for the items of a <xref:System.Web.UI.WebControls.TemplateField> field in a <xref:System.Web.UI.WebControls.GridView> control. The template displays the field's value in a <xref:System.Web.UI.WebControls.RadioButtonList> control.  \n  \n [!code-cs[TemplateFieldItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_239_1.aspx)]\n [!code-vb[TemplateFieldItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_239_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref>-implementado o objeto que contém o modelo para exibir um item em uma <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.TemplateField.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que especifica se o controle valida a entrada do cliente."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle valida a entrada do cliente; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TemplateField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.TemplateField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: TemplateField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se os controles contidos em um <xref href=&quot;System.Web.UI.WebControls.TemplateField&quot;> </xref> retornos de chamada de página de suporte do objeto."
  remarks: "Não há suporte para o método ValidateSupportsCallback para essa classe e sempre gera um <xref:System.NotSupportedException>exceção.</xref:System.NotSupportedException>"
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A implementação padrão desse método é chamada."
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.UI.WebControls.TemplateField.#ctor
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: TemplateField()
  nameWithType: TemplateField.TemplateField()
  fullName: System.Web.UI.WebControls.TemplateField.TemplateField()
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: TemplateField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.TemplateField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.TemplateField.CreateField
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CreateField()
  nameWithType: TemplateField.CreateField()
  fullName: System.Web.UI.WebControls.TemplateField.CreateField()
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.EditItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
  fullName: System.Web.UI.WebControls.TemplateField.FooterTemplate
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
  fullName: System.Web.UI.WebControls.TemplateField.HeaderTemplate
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.TemplateField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.InsertItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
  fullName: System.Web.UI.WebControls.TemplateField.ItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.TemplateField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: TemplateField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.TemplateField.#ctor*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: TemplateField
  nameWithType: TemplateField.TemplateField
- uid: System.Web.UI.WebControls.TemplateField.AlternatingItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: AlternatingItemTemplate
  nameWithType: TemplateField.AlternatingItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: TemplateField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.TemplateField.CopyProperties*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CopyProperties
  nameWithType: TemplateField.CopyProperties
- uid: System.Web.UI.WebControls.TemplateField.CreateField*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: CreateField
  nameWithType: TemplateField.CreateField
- uid: System.Web.UI.WebControls.TemplateField.EditItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: EditItemTemplate
  nameWithType: TemplateField.EditItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: TemplateField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.TemplateField.FooterTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: FooterTemplate
  nameWithType: TemplateField.FooterTemplate
- uid: System.Web.UI.WebControls.TemplateField.HeaderTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: HeaderTemplate
  nameWithType: TemplateField.HeaderTemplate
- uid: System.Web.UI.WebControls.TemplateField.InitializeCell*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InitializeCell
  nameWithType: TemplateField.InitializeCell
- uid: System.Web.UI.WebControls.TemplateField.InsertItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: InsertItemTemplate
  nameWithType: TemplateField.InsertItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ItemTemplate*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ItemTemplate
  nameWithType: TemplateField.ItemTemplate
- uid: System.Web.UI.WebControls.TemplateField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: TemplateField.ValidateRequestMode
- uid: System.Web.UI.WebControls.TemplateField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.TemplateField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: TemplateField.ValidateSupportsCallback
