### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.TypeLibConverter
  id: TypeLibConverter
  children:
  - System.Runtime.InteropServices.TypeLibConverter.#ctor
  - System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  - System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  - System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  - System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  langs:
  - csharp
  name: TypeLibConverter
  nameWithType: TypeLibConverter
  fullName: System.Runtime.InteropServices.TypeLibConverter
  type: Class
  summary: "Fornece um conjunto de serviços que convertem um assembly gerenciado em uma biblioteca de tipos COM e vice-versa."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("F1C3BF79-C3E4-11d3-88E7-00902754C43A")]

      public sealed class TypeLibConverter : System.Runtime.InteropServices.ITypeLibConverter
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices.ITypeLibConverter
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.TypeLibConverter.#ctor
  id: '#ctor'
  parent: System.Runtime.InteropServices.TypeLibConverter
  langs:
  - csharp
  name: TypeLibConverter()
  nameWithType: TypeLibConverter.TypeLibConverter()
  fullName: System.Runtime.InteropServices.TypeLibConverter.TypeLibConverter()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.InteropServices.TypeLibConverter&quot;> </xref> classe."
  syntax:
    content: public TypeLibConverter ();
    parameters: []
  overload: System.Runtime.InteropServices.TypeLibConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  id: ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  parent: System.Runtime.InteropServices.TypeLibConverter
  langs:
  - csharp
  name: ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)
  nameWithType: TypeLibConverter.ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)
  fullName: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Converte um assembly em uma biblioteca de tipos COM."
  remarks: "Para obter mais informações sobre `ITypeLib`, consulte sua documentação existente na biblioteca MSDN."
  example:
  - >-
    [!code-cpp[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/add/codesnippet/cpp/00d885a3-4d86-4f95-bcb7-_1.cpp)]
     [!code-vb[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/add/codesnippet/visualbasic/00d885a3-4d86-4f95-bcb7-_1.vb)]
     [!code-cs[System.Runtime.InteropServices.TypelibConverter.ConvertAssemblyToTypelib1#1](~/add/codesnippet/csharp/00d885a3-4d86-4f95-bcb7-_1.cs)]
  syntax:
    content: public object ConvertAssemblyToTypeLib (System.Reflection.Assembly assembly, string strTypeLibName, System.Runtime.InteropServices.TypeLibExporterFlags flags, System.Runtime.InteropServices.ITypeLibExporterNotifySink notifySink);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "O assembly para converter."
    - id: strTypeLibName
      type: System.String
      description: "O nome do arquivo da biblioteca de tipo resultante."
    - id: flags
      type: System.Runtime.InteropServices.TypeLibExporterFlags
      description: "Um <xref href=&quot;System.Runtime.InteropServices.TypeLibExporterFlags&quot;> </xref> valor que indica alguma configuração especial."
    - id: notifySink
      type: System.Runtime.InteropServices.ITypeLibExporterNotifySink
      description: "O <xref href=&quot;System.Runtime.InteropServices.ITypeLibExporterNotifySink&quot;> </xref> interface implementada pelo chamador."
    return:
      type: System.Object
      description: "Um objeto que implementa o <xref uid=&quot;langword_csharp_ITypeLib&quot; name=&quot;ITypeLib&quot; href=&quot;&quot;> </xref> interface."
  overload: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  id: ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  parent: System.Runtime.InteropServices.TypeLibConverter
  langs:
  - csharp
  name: ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)
  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)
  fullName: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Converte uma biblioteca de tipo em um assembly."
  remarks: "Se você não quiser gerar um nome forte para o assembly, é válido para `publicKey` e `keyPair` ser `null`, contanto que `flags` não é igual a <xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName>.</xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName> Caso contrário, pelo menos um desses parâmetros deve ser especificado. Se `publicKey` é `null`, a chave pública no `keyPair` será definido em metadados do manifesto do assembly de destino e uma assinatura será gerada com base no conteúdo do assembly. Se `keyPair` é `null`, `publicKey` será definido em metadados do manifesto do assembly de destino e nenhuma assinatura será gerada. Especificar os dois parâmetros não é geralmente útil e pode resultar em uma assinatura inválida.       Para obter mais informações sobre `ITypeLib`, consulte sua documentação existente na biblioteca MSDN."
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, int flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, bool unsafeInterfaces);
    parameters:
    - id: typeLib
      type: System.Object
      description: "O objeto que implementa o <xref uid=&quot;langword_csharp_ITypeLib&quot; name=&quot;ITypeLib&quot; href=&quot;&quot;> </xref> interface."
    - id: asmFileName
      type: System.String
      description: "O nome do arquivo do assembly resultante."
    - id: flags
      type: System.Int32
      description: "Um <xref href=&quot;System.Runtime.InteropServices.TypeLibImporterFlags&quot;> </xref> valor que indica alguma configuração especial."
    - id: notifySink
      type: System.Runtime.InteropServices.ITypeLibImporterNotifySink
      description: "<xref href=&quot;System.Runtime.InteropServices.ITypeLibImporterNotifySink&quot;></xref>interface implementada pelo chamador."
    - id: publicKey
      type: System.Byte[]
      description: "Um <xref uid=&quot;langword_csharp_byte&quot; name=&quot;byte&quot; href=&quot;&quot;> </xref> matriz que contém a chave pública."
    - id: keyPair
      type: System.Reflection.StrongNameKeyPair
      description: "Um <xref href=&quot;System.Reflection.StrongNameKeyPair&quot;> </xref> objeto que contém o par de chaves criptográficas público e privado."
    - id: unsafeInterfaces
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, as interfaces exigem verificações de tempo de link para <xref href=&quot;System.Security.Permissions.SecurityPermissionFlag&quot;> </xref> permissão. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, as interfaces exigem verificações de tempo de execução que exigem uma pilha percorrer e são mais caras, mas ajudam a fornecer maior proteção."
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "Um <xref:System.Reflection.Emit.AssemblyBuilder>objeto que contém a biblioteca de tipo convertido.</xref:System.Reflection.Emit.AssemblyBuilder>"
  overload: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeLib</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>asmFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>notifySink</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asmFileName</code>é uma cadeia de caracteres vazia.       - ou - <code>asmFileName</code> é maior que MAX_PATH."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>flags</code>is not <xref href=&quot;System.Runtime.InteropServices.TypeLibImporterFlags&quot;></xref>.       -or-       <code>publicKey</code> and <code>keyPair</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Reflection.ReflectionTypeLoadException
    commentId: T:System.Reflection.ReflectionTypeLoadException
    description: "Os metadados produzido tem erros impedindo todos os tipos de carregamento."
  platform:
  - net462
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  id: ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  parent: System.Runtime.InteropServices.TypeLibConverter
  langs:
  - csharp
  name: ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)
  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)
  fullName: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Converte uma biblioteca de tipo em um assembly."
  remarks: "Se você não quiser gerar um nome forte para o assembly, é válido para `publicKey` e `keyPair` ser `null`, contanto que `flags` não é igual a <xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName>.</xref:System.Runtime.InteropServices.TypeLibImporterFlags?displayProperty=fullName> Caso contrário, pelo menos um desses parâmetros deve ser especificado. Se `publicKey` é `null`, a chave pública no `keyPair` será definido em metadados do manifesto do assembly de destino e uma assinatura será gerada com base no conteúdo do assembly. Se `keyPair` é `null`, `publicKey` será definido em metadados do manifesto do assembly de destino e nenhuma assinatura será gerada. Especificar os dois parâmetros não é geralmente útil e pode resultar em uma assinatura inválida.       Para obter mais informações sobre `ITypeLib`, consulte sua documentação existente na biblioteca MSDN."
  example:
  - >-
    [!code-cpp[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/add/codesnippet/cpp/6fb3bd23-0a7d-4ad3-847a-_1.cpp)]
     [!code-cs[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/add/codesnippet/csharp/6fb3bd23-0a7d-4ad3-847a-_1.cs)]
     [!code-vb[System.Runtime.InteropServices.ConvertTypelibToASSembly#1](~/add/codesnippet/visualbasic/6fb3bd23-0a7d-4ad3-847a-_1.vb)]
  syntax:
    content: public System.Reflection.Emit.AssemblyBuilder ConvertTypeLibToAssembly (object typeLib, string asmFileName, System.Runtime.InteropServices.TypeLibImporterFlags flags, System.Runtime.InteropServices.ITypeLibImporterNotifySink notifySink, byte[] publicKey, System.Reflection.StrongNameKeyPair keyPair, string asmNamespace, Version asmVersion);
    parameters:
    - id: typeLib
      type: System.Object
      description: "O objeto que implementa o <xref uid=&quot;langword_csharp_ITypeLib&quot; name=&quot;ITypeLib&quot; href=&quot;&quot;> </xref> interface."
    - id: asmFileName
      type: System.String
      description: "O nome do arquivo do assembly resultante."
    - id: flags
      type: System.Runtime.InteropServices.TypeLibImporterFlags
      description: "Um <xref href=&quot;System.Runtime.InteropServices.TypeLibImporterFlags&quot;> </xref> valor que indica alguma configuração especial."
    - id: notifySink
      type: System.Runtime.InteropServices.ITypeLibImporterNotifySink
      description: "<xref href=&quot;System.Runtime.InteropServices.ITypeLibImporterNotifySink&quot;></xref>interface implementada pelo chamador."
    - id: publicKey
      type: System.Byte[]
      description: "Um <xref uid=&quot;langword_csharp_byte&quot; name=&quot;byte&quot; href=&quot;&quot;> </xref> matriz que contém a chave pública."
    - id: keyPair
      type: System.Reflection.StrongNameKeyPair
      description: "Um <xref href=&quot;System.Reflection.StrongNameKeyPair&quot;> </xref> objeto que contém o par de chaves criptográficas público e privado."
    - id: asmNamespace
      type: System.String
      description: "O namespace para o assembly resultante."
    - id: asmVersion
      type: System.Version
      description: "A versão do assembly resultante. Se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a versão da biblioteca de tipos é usada."
    return:
      type: System.Reflection.Emit.AssemblyBuilder
      description: "Um <xref:System.Reflection.Emit.AssemblyBuilder>objeto que contém a biblioteca de tipo convertido.</xref:System.Reflection.Emit.AssemblyBuilder>"
  overload: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>typeLib</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>asmFileName</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>notifySink</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asmFileName</code>é uma cadeia de caracteres vazia.       - ou - <code>asmFileName</code> é maior que MAX_PATH."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>flags</code>is not <xref href=&quot;System.Runtime.InteropServices.TypeLibImporterFlags&quot;></xref>.       -or-       <code>publicKey</code> and <code>keyPair</code> are <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Reflection.ReflectionTypeLoadException
    commentId: T:System.Reflection.ReflectionTypeLoadException
    description: "Os metadados produzido tem erros impedindo todos os tipos de carregamento."
  platform:
  - net462
- uid: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  id: GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  parent: System.Runtime.InteropServices.TypeLibConverter
  langs:
  - csharp
  name: GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)
  nameWithType: TypeLibConverter.GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)
  fullName: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Obtém o nome e o código de base de um assembly de interoperabilidade primária para uma biblioteca de tipo especificado."
  syntax:
    content: public bool GetPrimaryInteropAssembly (Guid g, int major, int minor, int lcid, out string asmName, out string asmCodeBase);
    parameters:
    - id: g
      type: System.Guid
      description: "O GUID da biblioteca de tipos."
    - id: major
      type: System.Int32
      description: "O número de versão principal da biblioteca de tipos."
    - id: minor
      type: System.Int32
      description: "O número de versão secundária da biblioteca de tipos."
    - id: lcid
      type: System.Int32
      description: "O LCID da biblioteca de tipos."
    - id: asmName
      type: System.String
      description: "No retorno bem-sucedido, o nome do assembly de interoperabilidade primário associada `g`."
    - id: asmCodeBase
      type: System.String
      description: "No retorno bem-sucedido, a base de código do assembly de interoperabilidade primária associada `g`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o assembly de interoperabilidade primária foi encontrado no registro. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Reflection.ReflectionTypeLoadException
  isExternal: true
  name: System.Reflection.ReflectionTypeLoadException
- uid: System.Runtime.InteropServices.TypeLibConverter.#ctor
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: TypeLibConverter()
  nameWithType: TypeLibConverter.TypeLibConverter()
  fullName: System.Runtime.InteropServices.TypeLibConverter.TypeLibConverter()
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(System.Reflection.Assembly,System.String,System.Runtime.InteropServices.TypeLibExporterFlags,System.Runtime.InteropServices.ITypeLibExporterNotifySink)
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)
  nameWithType: TypeLibConverter.ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)
  fullName: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib(Assembly,String,TypeLibExporterFlags,ITypeLibExporterNotifySink)
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices.TypeLibExporterFlags
  parent: System.Runtime.InteropServices
  isExternal: false
  name: TypeLibExporterFlags
  nameWithType: TypeLibExporterFlags
  fullName: System.Runtime.InteropServices.TypeLibExporterFlags
- uid: System.Runtime.InteropServices.ITypeLibExporterNotifySink
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ITypeLibExporterNotifySink
  nameWithType: ITypeLibExporterNotifySink
  fullName: System.Runtime.InteropServices.ITypeLibExporterNotifySink
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Int32,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.Boolean)
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)
  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)
  fullName: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(Object,String,Int32,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,Boolean)
- uid: System.Reflection.Emit.AssemblyBuilder
  parent: System.Reflection.Emit
  isExternal: true
  name: AssemblyBuilder
  nameWithType: AssemblyBuilder
  fullName: System.Reflection.Emit.AssemblyBuilder
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.ITypeLibImporterNotifySink
  parent: System.Runtime.InteropServices
  isExternal: false
  name: ITypeLibImporterNotifySink
  nameWithType: ITypeLibImporterNotifySink
  fullName: System.Runtime.InteropServices.ITypeLibImporterNotifySink
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.StrongNameKeyPair
  parent: System.Reflection
  isExternal: false
  name: StrongNameKeyPair
  nameWithType: StrongNameKeyPair
  fullName: System.Reflection.StrongNameKeyPair
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(System.Object,System.String,System.Runtime.InteropServices.TypeLibImporterFlags,System.Runtime.InteropServices.ITypeLibImporterNotifySink,System.Byte[],System.Reflection.StrongNameKeyPair,System.String,System.Version)
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)
  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)
  fullName: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly(Object,String,TypeLibImporterFlags,ITypeLibImporterNotifySink,Byte[],StrongNameKeyPair,String,Version)
- uid: System.Runtime.InteropServices.TypeLibImporterFlags
  parent: System.Runtime.InteropServices
  isExternal: false
  name: TypeLibImporterFlags
  nameWithType: TypeLibImporterFlags
  fullName: System.Runtime.InteropServices.TypeLibImporterFlags
- uid: System.Version
  parent: System
  isExternal: true
  name: Version
  nameWithType: Version
  fullName: System.Version
- uid: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(System.Guid,System.Int32,System.Int32,System.Int32,System.String@,System.String@)
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)
  nameWithType: TypeLibConverter.GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)
  fullName: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly(Guid,Int32,Int32,Int32,String,String)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.InteropServices.TypeLibConverter.#ctor*
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: TypeLibConverter
  nameWithType: TypeLibConverter.TypeLibConverter
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertAssemblyToTypeLib*
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: ConvertAssemblyToTypeLib
  nameWithType: TypeLibConverter.ConvertAssemblyToTypeLib
- uid: System.Runtime.InteropServices.TypeLibConverter.ConvertTypeLibToAssembly*
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: ConvertTypeLibToAssembly
  nameWithType: TypeLibConverter.ConvertTypeLibToAssembly
- uid: System.Runtime.InteropServices.TypeLibConverter.GetPrimaryInteropAssembly*
  parent: System.Runtime.InteropServices.TypeLibConverter
  isExternal: false
  name: GetPrimaryInteropAssembly
  nameWithType: TypeLibConverter.GetPrimaryInteropAssembly
