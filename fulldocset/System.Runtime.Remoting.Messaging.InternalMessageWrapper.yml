### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  id: InternalMessageWrapper
  children:
  - System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMessage)
  - System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage
  langs:
  - csharp
  name: InternalMessageWrapper
  nameWithType: InternalMessageWrapper
  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  type: Class
  summary: "Encapsula os dados de comunicação remota para passagem entre Coletores de mensagem, para solicitações do cliente para o servidor ou para as respostas subsequentes."
  remarks: "A classe InternalMessageWrapper é a classe base para o <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper>e <xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper>classes, que quebrar mensagens para chamadas de método em objetos remotos.</xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper> </xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper>       InternalMessageWrapper é usado pela infraestrutura do .NET Framework. Você não precisa criar instâncias de InternalMessageWrapper, <xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper>, e <xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper>classes diretamente.</xref:System.Runtime.Remoting.Messaging.MethodReturnMessageWrapper> </xref:System.Runtime.Remoting.Messaging.MethodCallMessageWrapper>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Security.SecurityCritical]

      public class InternalMessageWrapper
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMessage)
  id: '#ctor(System.Runtime.Remoting.Messaging.IMessage)'
  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  langs:
  - csharp
  name: InternalMessageWrapper(IMessage)
  nameWithType: InternalMessageWrapper.InternalMessageWrapper(IMessage)
  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper.InternalMessageWrapper(IMessage)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.Remoting.Messaging.InternalMessageWrapper&quot;> </xref> classe."
  remarks: "O <xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper>classe é usada pela infraestrutura de comunicação remota do .NET Framework.</xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper> Você não precisa criar um <xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper>diretamente.</xref:System.Runtime.Remoting.Messaging.InternalMessageWrapper>       O <xref:System.Runtime.Remoting.Messaging.IMessage>parâmetro também implementa a interface derivada, <xref:System.Runtime.Remoting.Messaging.IMethodMessage>, que indica que a mensagem atua como uma solicitação ou como uma resposta em uma chamada de método remoto.</xref:System.Runtime.Remoting.Messaging.IMethodMessage> </xref:System.Runtime.Remoting.Messaging.IMessage> O <xref:System.Runtime.Remoting.Messaging.IMethodCallMessage>e <xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage>interfaces, por sua vez, herdam o <xref:System.Runtime.Remoting.Messaging.IMethodMessage>interface.</xref:System.Runtime.Remoting.Messaging.IMethodMessage> </xref:System.Runtime.Remoting.Messaging.IMethodReturnMessage> </xref:System.Runtime.Remoting.Messaging.IMethodCallMessage>"
  syntax:
    content: public InternalMessageWrapper (System.Runtime.Remoting.Messaging.IMessage msg);
    parameters:
    - id: msg
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "Uma mensagem que atua como uma chamada de método de saída em um objeto remoto ou como a resposta subsequente."
  overload: System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage
  id: WrappedMessage
  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  langs:
  - csharp
  name: WrappedMessage
  nameWithType: InternalMessageWrapper.WrappedMessage
  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Messaging
  summary: "Representa a solicitação ou resposta <xref href=&quot;System.Runtime.Remoting.Messaging.IMethodMessage&quot;> </xref> interface que é encapsulado pelo wrapper de mensagem."
  syntax:
    content: protected System.Runtime.Remoting.Messaging.IMessage WrappedMessage;
    return:
      type: System.Runtime.Remoting.Messaging.IMessage
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor(System.Runtime.Remoting.Messaging.IMessage)
  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  isExternal: false
  name: InternalMessageWrapper(IMessage)
  nameWithType: InternalMessageWrapper.InternalMessageWrapper(IMessage)
  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper.InternalMessageWrapper(IMessage)
- uid: System.Runtime.Remoting.Messaging.IMessage
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessage
  nameWithType: IMessage
  fullName: System.Runtime.Remoting.Messaging.IMessage
- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage
  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  isExternal: false
  name: WrappedMessage
  nameWithType: InternalMessageWrapper.WrappedMessage
  fullName: System.Runtime.Remoting.Messaging.InternalMessageWrapper.WrappedMessage
- uid: System.Runtime.Remoting.Messaging.InternalMessageWrapper.#ctor*
  parent: System.Runtime.Remoting.Messaging.InternalMessageWrapper
  isExternal: false
  name: InternalMessageWrapper
  nameWithType: InternalMessageWrapper.InternalMessageWrapper
