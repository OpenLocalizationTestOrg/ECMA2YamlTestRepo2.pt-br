### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  id: JsonQueryStringConverter
  children:
  - System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor
  - System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)
  - System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)
  - System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)
  langs:
  - csharp
  name: JsonQueryStringConverter
  nameWithType: JsonQueryStringConverter
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  type: Class
  summary: "Essa classe converte um valor de parâmetro para e de um objeto notação JSON (JavaScript)."
  remarks: "Parâmetros podem ser especificados em uma cadeia de caracteres de consulta JSON em uma URL. Esta classe controla como parâmetros de cadeia de caracteres de consulta JSON são mapeados para e de parâmetros de uma operação serviço quando o <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>é usado para processar solicitações HTTP de clientes baseados em navegador de ASP.NET AJAX.</xref:System.ServiceModel.Description.WebScriptEnablingBehavior>       Essa classe é usada internamente pelo [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)] <xref:System.ServiceModel.Description.WebScriptEnablingBehavior>classe para pontos de extremidade configurado para aceitar solicitações de HTTP GET/POST com parâmetros codificados na cadeia de caracteres de consulta URI.</xref:System.ServiceModel.Description.WebScriptEnablingBehavior> Essa classe é usada para converter entre objetos CLR e os valores de parâmetro de solicitação de operação individual na cadeia de caracteres de consulta URI. Ao contrário de seu tipo base, esta classe dá suporte a valores de tipos primitivos e complexos.       JsonQueryStringConverter deriva <xref:System.ServiceModel.Dispatcher.QueryStringConverter>e suporta os seguintes tipos:- <xref:System.Byte>- <xref:System.SByte>- <xref:System.Int16>- <xref:System.Int32>- <xref:System.Int64>- <xref:System.UInt16>- <xref:System.UInt32>- <xref:System.UInt64>- <xref:System.Single>- <xref:System.Double>- <xref:System.Char>- <xref:System.Decimal>- <xref:System.Boolean>- <xref:System.String>- <xref:System.DateTime>- <xref:System.TimeSpan>- <xref:System.Guid>- um <xref:System.Array>do tipo <xref:System.Byte>- <xref:System.Uri>- <xref:System.Object>Diferentemente de seu tipo base, esse conversor pode lidar com qualquer tipo segui-las para o modelo de contrato de dados.</xref:System.Object> </xref:System.Uri> </xref:System.Byte> </xref:System.Array> </xref:System.Guid> </xref:System.TimeSpan> </xref:System.DateTime> </xref:System.String> </xref:System.Boolean> </xref:System.Decimal> </xref:System.Char> </xref:System.Double> </xref:System.Single> </xref:System.UInt64> </xref:System.UInt32> </xref:System.UInt16> </xref:System.Int64> </xref:System.Int32> </xref:System.Int16> </xref:System.SByte> </xref:System.Byte> </xref:System.ServiceModel.Dispatcher.QueryStringConverter> Substitui o conversor <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29>para que cada parâmetro é serializado para JSON usando o padrão <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer>e um gravador de XML JSON configurado para usar a codificação UTF-8.</xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> </xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> `null`parâmetros são retornados como `null`."
  syntax:
    content: 'public class JsonQueryStringConverter : System.ServiceModel.Dispatcher.QueryStringConverter'
  inheritance:
  - System.Object
  - System.ServiceModel.Dispatcher.QueryStringConverter
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  langs:
  - csharp
  name: JsonQueryStringConverter()
  nameWithType: JsonQueryStringConverter.JsonQueryStringConverter()
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.JsonQueryStringConverter()
  type: Constructor
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Dispatcher
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Dispatcher.JsonQueryStringConverter&quot;> </xref> classe."
  syntax:
    content: public JsonQueryStringConverter ();
    parameters: []
  overload: System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)
  id: CanConvert(System.Type)
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  langs:
  - csharp
  name: CanConvert(Type)
  nameWithType: JsonQueryStringConverter.CanConvert(Type)
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(Type)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Dispatcher
  summary: "Obtém um valor que indica se um tipo de tempo de execução de linguagem comum (CLR) especificado é um tipo conhecido que pode ser serializado e desserializado."
  remarks: "Isso verifica se um tipo CLR pode ser usado em uma cadeia de caracteres de consulta JSON. Os tipos CLR que podem ser usados em uma cadeia de caracteres são apenas aqueles que são suportados pelo <xref:System.Runtime.Serialization.DataContractSerializer>.</xref:System.Runtime.Serialization.DataContractSerializer>"
  syntax:
    content: public override bool CanConvert (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O <xref:System.Type>para verificar.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o tipo pode ser serializado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>type</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)
  id: ConvertStringToValue(System.String,System.Type)
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  langs:
  - csharp
  name: ConvertStringToValue(String,Type)
  nameWithType: JsonQueryStringConverter.ConvertStringToValue(String,Type)
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(String,Type)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Dispatcher
  summary: "Desserializa um parâmetro de cadeia de caracteres de consulta de notação JSON (JavaScript Object) para um tipo de tempo de execução de linguagem comum (CLR) especificado."
  syntax:
    content: public override object ConvertStringToValue (string parameter, Type parameterType);
    parameters:
    - id: parameter
      type: System.String
      description: "O formato JSON do valor do parâmetro."
    - id: parameterType
      type: System.Type
      description: "O <xref:System.Type>para desserializar o parâmetro para.</xref:System.Type>"
    return:
      type: System.Object
      description: "Uma instância do tipo CLR para a qual o valor do parâmetro foi convertido."
  overload: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)
  id: ConvertValueToString(System.Object,System.Type)
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  langs:
  - csharp
  name: ConvertValueToString(Object,Type)
  nameWithType: JsonQueryStringConverter.ConvertValueToString(Object,Type)
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(Object,Type)
  type: Method
  assemblies:
  - System.ServiceModel.Web
  namespace: System.ServiceModel.Dispatcher
  summary: "Serializa um tipo de parâmetro de tempo de execução de linguagem comum (CLR) em uma representação de notação JSON (JavaScript Object)."
  remarks: "Substitui o conversor <xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29>para que cada parâmetro é serializado para JSON usando o padrão <xref:System.Runtime.Serialization.Json.DataContractJsonSerializer>e um gravador de XML JSON configurado para usar a codificação UTF-8.</xref:System.Runtime.Serialization.Json.DataContractJsonSerializer> </xref:System.ServiceModel.Dispatcher.QueryStringConverter.ConvertValueToString%28System.Object%2CSystem.Type%29> Ao contrário de seu tipo base, esse conversor pode lidar com qualquer tipo segui-las para o modelo de contrato de dados."
  example:
  - "Consider the following operation.  \n  \n```  \n[WebGet]  \n[OperationContract] public int GetOptionQuote(string ticker, DateTime dte, Option opt);  \n```  \n  \n This operation produces a URL that is a URL-encoded version of the following.  \n  \n```  \nhttp://localhost/quote.svc/GetOptionQuote?ticker=”MSFT”&dte=”\\/Date(50067823)\\/”&opt={“type”:”call”,”strikePrice”:”35”}  \n```"
  syntax:
    content: public override string ConvertValueToString (object parameter, Type parameterType);
    parameters:
    - id: parameter
      type: System.Object
      description: "O valor do parâmetro para converter."
    - id: parameterType
      type: System.Type
      description: "O <xref:System.Type>do parâmetro para serializar.</xref:System.Type>"
    return:
      type: System.String
      description: "Serialização JSON consulta cadeia parâmetro do tipo CLR. <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>será retornado se o parâmetro for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Dispatcher.QueryStringConverter
  isExternal: false
  name: System.ServiceModel.Dispatcher.QueryStringConverter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: JsonQueryStringConverter()
  nameWithType: JsonQueryStringConverter.JsonQueryStringConverter()
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.JsonQueryStringConverter()
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(System.Type)
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: CanConvert(Type)
  nameWithType: JsonQueryStringConverter.CanConvert(Type)
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert(Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(System.String,System.Type)
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: ConvertStringToValue(String,Type)
  nameWithType: JsonQueryStringConverter.ConvertStringToValue(String,Type)
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue(String,Type)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(System.Object,System.Type)
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: ConvertValueToString(Object,Type)
  nameWithType: JsonQueryStringConverter.ConvertValueToString(Object,Type)
  fullName: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString(Object,Type)
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.#ctor*
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: JsonQueryStringConverter
  nameWithType: JsonQueryStringConverter.JsonQueryStringConverter
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.CanConvert*
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: CanConvert
  nameWithType: JsonQueryStringConverter.CanConvert
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertStringToValue*
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: ConvertStringToValue
  nameWithType: JsonQueryStringConverter.ConvertStringToValue
- uid: System.ServiceModel.Dispatcher.JsonQueryStringConverter.ConvertValueToString*
  parent: System.ServiceModel.Dispatcher.JsonQueryStringConverter
  isExternal: false
  name: ConvertValueToString
  nameWithType: JsonQueryStringConverter.ConvertValueToString
