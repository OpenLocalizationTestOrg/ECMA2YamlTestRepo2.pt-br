### YamlMime:ManagedReference
items:
- uid: System.Globalization.KoreanLunisolarCalendar
  id: KoreanLunisolarCalendar
  children:
  - System.Globalization.KoreanLunisolarCalendar.#ctor
  - System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  - System.Globalization.KoreanLunisolarCalendar.Eras
  - System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)
  - System.Globalization.KoreanLunisolarCalendar.GregorianEra
  - System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
  - System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
  langs:
  - csharp
  name: KoreanLunisolarCalendar
  nameWithType: KoreanLunisolarCalendar
  fullName: System.Globalization.KoreanLunisolarCalendar
  type: Class
  summary: "Representa a hora em divisões, como dias, meses e anos. Anos são calculados usando o calendário gregoriano, enquanto os dias e meses são calculados usando o calendário Lunissolar."
  remarks: "A classe KoreanLunisolarCalendar é derivada de <xref:System.Globalization.EastAsianLunisolarCalendar>classe que representa o calendário Lunissolar.</xref:System.Globalization.EastAsianLunisolarCalendar> O <xref:System.Globalization.EastAsianLunisolarCalendar>classe dá suporte para o ciclo de ano sexagenary (que se repete a cada 60 anos) além de solar anos e meses lunar.</xref:System.Globalization.EastAsianLunisolarCalendar> Cada ano solar no calendário está associado um Sexagenary ano, um Stem celestiais e uma ramificação terrestre, e esses calendários podem ter bissexto meses após qualquer mês do ano.      > [!NOTE] > Para obter informações sobre como usar a classe KoreanLunisolarCalendar e as outras classes de calendário no .NET Framework, consulte [trabalhando com calendários](~/add/includes/ajax-current-ext-md.md).       A classe KoreanLunisolarCalendar calcula anos usando o calendário gregoriano e dias e meses usando a <xref:System.Globalization.EastAsianLunisolarCalendar>classe.</xref:System.Globalization.EastAsianLunisolarCalendar>       Um mês de salto pode ocorrer depois de qualquer mês em um ano. Por exemplo, o <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName>método retorna um número entre 1 e 13 que indica o mês associado a uma data especificada.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%28System.DateTime%29?displayProperty=fullName> Se houver um mês bissexto entre os oitavo e o nono meses do ano, o <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>método retorna 8 oitavo mês, 9 para o passo oitavo mês e 10 para o nono mês.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>       Atualmente, o KoreanLunisolarCalendar não é usada por qualquer uma das culturas com suporte a <xref:System.Globalization.CultureInfo>classe.</xref:System.Globalization.CultureInfo> Portanto, essa classe pode ser usada somente para calcular datas do calendário Lunissolar coreano.       Cada <xref:System.Globalization.CultureInfo>suporta um conjunto de calendários.</xref:System.Globalization.CultureInfo> O <xref:System.Globalization.CultureInfo.Calendar%2A>propriedade retorna o calendário padrão para a cultura e o <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>propriedade retorna uma matriz que contém todos os calendários suportados pela cultura.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Para alterar o calendário usado por um <xref:System.Globalization.CultureInfo>o aplicativo deve definir a <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>para um novo <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  syntax:
    content: 'public class KoreanLunisolarCalendar : System.Globalization.EastAsianLunisolarCalendar'
  inheritance:
  - System.Globalization.Calendar
  - System.Globalization.EastAsianLunisolarCalendar
  implements: []
  inheritedMembers:
  - System.Globalization.EastAsianLunisolarCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.AlgorithmType
  - System.Globalization.EastAsianLunisolarCalendar.GetCelestialStem(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonth(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetSexagenaryYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.GetTerrestrialBranch(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.GetYear(System.DateTime)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.EastAsianLunisolarCalendar.TwoDigitYearMax
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: KoreanLunisolarCalendar()
  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar()
  fullName: System.Globalization.KoreanLunisolarCalendar.KoreanLunisolarCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;> </xref> classe."
  syntax:
    content: public KoreanLunisolarCalendar ();
    parameters: []
  overload: System.Globalization.KoreanLunisolarCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  id: DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém o número de dias do ano que precede o ano especificado pelo <xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*>propriedade.</xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*>"
  remarks: "Essa propriedade retorna um valor constante de 384."
  syntax:
    content: protected override int DaysInYearBeforeMinSupportedYear { get; }
    return:
      type: System.Int32
      description: "O número de dias do ano que precede o ano especificado pelo <xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*>.</xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*>"
  overload: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.Eras
  id: Eras
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: KoreanLunisolarCalendar.Eras
  fullName: System.Globalization.KoreanLunisolarCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém os eras que correspondem ao intervalo de datas e horas de suporte atual <xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;> </xref> objeto."
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Uma matriz de inteiros com sinal de 32 bits que especificam os eras relevantes. O valor de retorno para um <xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;> </xref> objeto sempre é uma matriz que contém um elemento igual a <xref href=&quot;System.Globalization.KoreanLunisolarCalendar.GregorianEra&quot;> </xref> valor."
  overload: System.Globalization.KoreanLunisolarCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: KoreanLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.KoreanLunisolarCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Recupera a era que corresponde à especificada <xref:System.DateTime>.</xref:System.DateTime>"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro que representa a era especificada pelo <code> time </code> parâmetro. O valor de retorno para um <xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;> </xref> objeto é sempre o <xref href=&quot;System.Globalization.KoreanLunisolarCalendar.GregorianEra&quot;> </xref> valor."
  overload: System.Globalization.KoreanLunisolarCalendar.GetEra*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>representa uma data e hora inferior a <xref:System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*> ou maior que <xref:System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.GregorianEra
  id: GregorianEra
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: GregorianEra
  nameWithType: KoreanLunisolarCalendar.GregorianEra
  fullName: System.Globalization.KoreanLunisolarCalendar.GregorianEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Especifica que corresponde à atual era gregoriano <xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;> </xref> objeto."
  remarks: "O valor desse campo é 1.       O <xref:System.Globalization.KoreanLunisolarCalendar>classe reconhece somente o era atual.</xref:System.Globalization.KoreanLunisolarCalendar>"
  syntax:
    content: public const int GregorianEra = 1;
    return:
      type: System.Int32
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a data máxima e o tempo com suporte a <xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;> </xref> classe."
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Na última data e hora com suporte a <xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;> </xref> de classe, que é equivalente ao último momento de 10 de fevereiro de 2051 C.E. no calendário gregoriano."
  overload: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.KoreanLunisolarCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a data mínima e a hora com suporte a <xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;> </xref> classe."
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Data e hora com suporte mais recente do <xref href=&quot;System.Globalization.KoreanLunisolarCalendar&quot;> </xref> classe, que é equivalente ao primeiro momento em 14 de fevereiro de 918 C.E. no calendário gregoriano."
  overload: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Globalization.EastAsianLunisolarCalendar
  isExternal: false
  name: System.Globalization.EastAsianLunisolarCalendar
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Globalization.KoreanLunisolarCalendar.#ctor
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: KoreanLunisolarCalendar()
  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar()
  fullName: System.Globalization.KoreanLunisolarCalendar.KoreanLunisolarCalendar()
- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
  fullName: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.KoreanLunisolarCalendar.Eras
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: KoreanLunisolarCalendar.Eras
  fullName: System.Globalization.KoreanLunisolarCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.KoreanLunisolarCalendar.GetEra(System.DateTime)
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: KoreanLunisolarCalendar.GetEra(DateTime)
  fullName: System.Globalization.KoreanLunisolarCalendar.GetEra(DateTime)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Globalization.KoreanLunisolarCalendar.GregorianEra
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: GregorianEra
  nameWithType: KoreanLunisolarCalendar.GregorianEra
  fullName: System.Globalization.KoreanLunisolarCalendar.GregorianEra
- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime
  fullName: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime
- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime
  fullName: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime
- uid: System.Globalization.KoreanLunisolarCalendar.#ctor*
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: KoreanLunisolarCalendar
  nameWithType: KoreanLunisolarCalendar.KoreanLunisolarCalendar
- uid: System.Globalization.KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear*
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: DaysInYearBeforeMinSupportedYear
  nameWithType: KoreanLunisolarCalendar.DaysInYearBeforeMinSupportedYear
- uid: System.Globalization.KoreanLunisolarCalendar.Eras*
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: Eras
  nameWithType: KoreanLunisolarCalendar.Eras
- uid: System.Globalization.KoreanLunisolarCalendar.GetEra*
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: GetEra
  nameWithType: KoreanLunisolarCalendar.GetEra
- uid: System.Globalization.KoreanLunisolarCalendar.MaxSupportedDateTime*
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MaxSupportedDateTime
- uid: System.Globalization.KoreanLunisolarCalendar.MinSupportedDateTime*
  parent: System.Globalization.KoreanLunisolarCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: KoreanLunisolarCalendar.MinSupportedDateTime
