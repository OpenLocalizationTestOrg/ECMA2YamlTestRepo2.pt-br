### YamlMime:ManagedReference
items:
- uid: System.StackOverflowException
  id: StackOverflowException
  children:
  - System.StackOverflowException.#ctor
  - System.StackOverflowException.#ctor(System.String)
  - System.StackOverflowException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: StackOverflowException
  nameWithType: StackOverflowException
  fullName: System.StackOverflowException
  type: Class
  summary: "A exceção que é lançada quando a pilha de execução excede porque ele contém um número excessivo de chamadas de método aninhadas. Essa classe não pode ser herdada."
  remarks: "StackOverflowException é lançada para erros de estouro de pilha de execução, normalmente em caso de recursão muito profunda ou não vinculada.       StackOverflowException usa o HRESULT COR_E_STACKOVERFLOW, que tem o valor 0x800703E9. O <xref:System.Reflection.Emit.OpCodes.Localloc>instrução de linguagem intermediária (IL) gera StackOverflowException.</xref:System.Reflection.Emit.OpCodes.Localloc> Para obter uma lista de valores de propriedade inicial de um objeto StackOverflowException, consulte o <xref:System.StackOverflowException.%23ctor%2A>construtores.</xref:System.StackOverflowException.%23ctor%2A>      ## Considerações sobre a versão do .NET Framework 1.0 e 1.1, você pode capturar um objeto StackOverflowException (por exemplo, para se recuperar de recursão ilimitada). Começando com o .NET Framework 2.0, você não pode pegar um objeto StackOverflowException com um `try` / `catch` bloco e o processo correspondente será finalizado por padrão. Consequentemente, você deve escrever seu código para detectar e prevenir um estouro de pilha. Por exemplo, se seu aplicativo depende de recursão, use uma condição de estado ou de um contador para encerrar o loop recursivo. O exemplo a seguir usa um contador para garantir que o número de recursiva chamadas para o `Execute` método não exceder o máximo definido pela constante MAX_RECURSIVE_CALLS.       [!code-vb[System.StackOverflowException.Class#1](~/add/codesnippet/visualbasic/t-system.stackoverflowex_1.vb)][!code-cs[System.StackOverflowException.Class#1](~/add/codesnippet/csharp/t-system.stackoverflowex_1.cs) ]       >  [!NOTE] > aplicando o <xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>atributo para um método que gera uma StackOverflowException não tem nenhum efeito.</xref:System.Runtime.ExceptionServices.HandleProcessCorruptedStateExceptionsAttribute>   Você não pode manipular a exceção do código do usuário.       Se seu aplicativo hospeda o common language runtime (CLR), pode especificar que o CLR deve descarregar o domínio de aplicativo onde a exceção de estouro de pilha ocorre e permitir que o processo correspondente continue. Para obter mais informações, consulte [ICLRPolicyManager Interface](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class StackOverflowException : SystemException
  inheritance:
  - System.Exception
  - System.SystemException
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor
  id: '#ctor'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException()
  nameWithType: StackOverflowException.StackOverflowException()
  fullName: System.StackOverflowException.StackOverflowException()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.StackOverflowException&quot;> </xref> classe, definindo a <xref:System.Exception.Message*>propriedade da nova instância para uma mensagem fornecida pelo sistema que descreve o erro, como &quot;a operação solicitada causou um estouro de pilha.&quot;</xref:System.Exception.Message*> Esta mensagem leva em conta a cultura atual do sistema."
  remarks: "A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.StackOverflowException>.</xref:System.StackOverflowException>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| `null`.|   | <xref:System.Exception.Message%2A>| A cadeia de caracteres de mensagem de erro localizada. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public StackOverflowException ();
    parameters: []
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException(String)
  nameWithType: StackOverflowException.StackOverflowException(String)
  fullName: System.StackOverflowException.StackOverflowException(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.StackOverflowException&quot;> </xref> classe com uma mensagem de erro especificada."
  remarks: "A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.StackOverflowException>.</xref:System.StackOverflowException>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| Uma referência nula (`Nothing` no Visual Basic). |   | <xref:System.Exception.Message%2A>| A cadeia de caracteres de mensagem de erro. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public StackOverflowException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Um <xref:System.String>que descreve o erro.</xref:System.String> O conteúdo da mensagem deve ser compreendido por humanos. O chamador desse construtor é necessário para garantir que essa cadeia de caracteres foi localizada para a cultura atual do sistema."
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.StackOverflowException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.StackOverflowException
  langs:
  - csharp
  name: StackOverflowException(String,Exception)
  nameWithType: StackOverflowException.StackOverflowException(String,Exception)
  fullName: System.StackOverflowException.StackOverflowException(String,Exception)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System
  summary: "Inicializa uma nova instância do <xref href=&quot;System.StackOverflowException&quot;> </xref> classe com uma mensagem de erro especificada e uma referência à exceção interna que é a causa dessa exceção."
  remarks: "Uma exceção que é lançada como um resultado direto de uma exceção anterior pode incluir uma referência à exceção anterior no <xref:System.Exception.InnerException%2A>propriedade.</xref:System.Exception.InnerException%2A> O <xref:System.Exception.InnerException%2A>propriedade retorna o mesmo valor que é passado para o construtor, ou uma referência nula (`Nothing` no Visual Basic) se o <xref:System.Exception.InnerException%2A>propriedade não fornecer o valor da exceção interna para o construtor.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>       A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.StackOverflowException>.</xref:System.StackOverflowException>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Exception.InnerException%2A>| A referência à exceção interna. |   | <xref:System.Exception.Message%2A>| A cadeia de caracteres de mensagem de erro. |</xref:System.Exception.Message%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public StackOverflowException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "A mensagem de erro que explica o motivo da exceção."
    - id: innerException
      type: System.Exception
      description: "A exceção que é a causa da exceção atual. Se o `innerException` parâmetro não é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic), a exceção atual é gerada em um <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> bloco que manipula a exceção interna."
  overload: System.StackOverflowException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.SystemException
  isExternal: false
  name: System.SystemException
- uid: System.StackOverflowException.#ctor
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException()
  nameWithType: StackOverflowException.StackOverflowException()
  fullName: System.StackOverflowException.StackOverflowException()
- uid: System.StackOverflowException.#ctor(System.String)
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException(String)
  nameWithType: StackOverflowException.StackOverflowException(String)
  fullName: System.StackOverflowException.StackOverflowException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.StackOverflowException.#ctor(System.String,System.Exception)
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException(String,Exception)
  nameWithType: StackOverflowException.StackOverflowException(String,Exception)
  fullName: System.StackOverflowException.StackOverflowException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.StackOverflowException.#ctor*
  parent: System.StackOverflowException
  isExternal: false
  name: StackOverflowException
  nameWithType: StackOverflowException.StackOverflowException
