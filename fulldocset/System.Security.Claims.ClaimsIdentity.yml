### YamlMime:ManagedReference
items:
- uid: System.Security.Claims.ClaimsIdentity
  id: ClaimsIdentity
  children:
  - System.Security.Claims.ClaimsIdentity.#ctor
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.Actor
  - System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.AuthenticationType
  - System.Security.Claims.ClaimsIdentity.BootstrapContext
  - System.Security.Claims.ClaimsIdentity.Claims
  - System.Security.Claims.ClaimsIdentity.Clone
  - System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  - System.Security.Claims.ClaimsIdentity.CustomSerializationData
  - System.Security.Claims.ClaimsIdentity.DefaultIssuer
  - System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  - System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  - System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  - System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  - System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  - System.Security.Claims.ClaimsIdentity.IsAuthenticated
  - System.Security.Claims.ClaimsIdentity.Label
  - System.Security.Claims.ClaimsIdentity.Name
  - System.Security.Claims.ClaimsIdentity.NameClaimType
  - System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.RoleClaimType
  - System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  - System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  langs:
  - csharp
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
  type: Class
  summary: "Representa uma identidade baseada em declarações."
  remarks: "A classe ClaimsIdentity é uma implementação concreta de uma identidade baseada em declarações; ou seja, uma identidade descrita por um conjunto de declarações. Uma declaração é uma instrução de uma entidade feita por um emissor que descreve uma propriedade, à direita, ou alguma outra qualidade da entidade. Essa entidade deve ser o assunto da declaração. Uma declaração é representada pela <xref:System.Security.Claims.Claim>classe.</xref:System.Security.Claims.Claim> As declarações contidas em uma ClaimsIdentity descrevem a entidade que representa a identidade correspondente, e pode ser usado para tomar decisões de autorização e autenticação. Um modelo de acesso baseado em declarações tem muitas vantagens em relação a modelos de acesso mais tradicionais que dependem exclusivamente em funções. Por exemplo, declarações podem fornecer muito mais ricas informações sobre a identidade que eles representam e podem ser avaliados para a autorização ou autenticação de forma muito mais específica.       A partir do .NET Framework 4.5, Windows Identity Foundation (WIF) e identidade baseada em declarações foram totalmente integrados ao .NET Framework. Isso significa que muitas classes que representam uma identidade no .NET Framework agora derivam ClaimsIdentity e descrevem suas propriedades por meio de um conjunto de declarações. Isso é diferente de versões anteriores do .NET Framework, no qual, essas classes implementados o <xref:System.Security.Principal.IIdentity>interface diretamente.</xref:System.Security.Principal.IIdentity> A coleção de declarações que descrevem a identidade pode ser acessada por meio de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>propriedade.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> A classe ClaimsIdentity fornece vários métodos para localizar e modificar declarações e totalmente dá suporte a consultas de integrada à linguagem (LINQ). No código do aplicativo, os objetos ClaimsIdentity normalmente são acessados por meio de <xref:System.Security.Claims.ClaimsPrincipal>objetos, por exemplo, o objeto retornado por <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsPrincipal>      > [!NOTE] > O <xref:System.Security.Claims.ClaimsPrincipal>classe tiver um <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>propriedade bem.</xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> </xref:System.Security.Claims.ClaimsPrincipal> Na maioria dos casos, você deve acessar declarações do usuário por meio de <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName>coleção em vez de por meio de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>coleção.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName> Você precisará acessar as declarações de um ClaimsIdentity individual somente nos casos em que a entidade de segurança contém mais de um ClaimsIdentity e você precisa avaliar ou modificar uma identidade específica.      > [!IMPORTANT] > Para adicionar ou remover declarações de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>coleção, um chamador deve ter a confiança total.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>       No modelo baseado em declarações, o <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>propriedade e o <xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=fullName>método são implementados pela avaliação de declarações contidas por uma identidade.</xref:System.Security.Principal.IPrincipal.IsInRole%28System.String%29?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> Implementações de base no modelo baseado em declarações são fornecidas pelo <xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=fullName>propriedade e o <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=fullName>método.</xref:System.Security.Claims.ClaimsPrincipal.IsInRole%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity.Name%2A?displayProperty=fullName> O <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>propriedades permitem que você especifique um tipo de declaração que deve ser usado para avaliar as declarações contidas pela identidade ao executar essas operações.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>       Cenários de delegação têm suporte por meio de <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>e <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>Propriedades.</xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class ClaimsIdentity : System.Security.Principal.IIdentity
  inheritance:
  - System.Object
  implements:
  - System.Security.Principal.IIdentity
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor
  id: '#ctor'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity()
  nameWithType: ClaimsIdentity.ClaimsIdentity()
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> conjunto de declarações de classe com vazio."
  remarks: "A tabela a seguir mostra os valores de propriedade inicial de uma instância de <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Uma coleção vazia. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>é retornado com base no valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.Name%2A>é retornado com base no <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e a coleção de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.Actor%2A>"
  syntax:
    content: public ClaimsIdentity ();
    parameters: []
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe usando uma coleção enumerada de <xref href=&quot;System.Security.Claims.Claim&quot;> </xref> objetos."
  remarks: "A tabela a seguir mostra os valores de propriedade inicial de uma instância de <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Inicializado a partir de `claims` parâmetro. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>é retornado com base no valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.Name%2A>é retornado com base no <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e a coleção de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.Actor%2A>"
  syntax:
    content: public ClaimsIdentity (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "As declarações com o qual preencher a identidade baseada em declarações."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  id: '#ctor(System.IO.BinaryReader)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(BinaryReader)
  nameWithType: ClaimsIdentity.ClaimsIdentity(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(BinaryReader)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public ClaimsIdentity (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "A ser adicionado."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(SerializationInfo)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe a partir de um fluxo serializado criado usando <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref>."
  syntax:
    content: protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Os dados serializados."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  id: '#ctor(System.Security.Claims.ClaimsIdentity)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(ClaimsIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected ClaimsIdentity (System.Security.Claims.ClaimsIdentity other);
    parameters:
    - id: other
      type: System.Security.Claims.ClaimsIdentity
      description: "A ser adicionado."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  id: '#ctor(System.Security.Principal.IIdentity)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe usando o tipo de autenticação de <xref:System.Security.Principal.IIdentity>.</xref:System.Security.Principal.IIdentity> especificado"
  remarks: "A tabela a seguir mostra os valores de propriedade inicial de uma instância de <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.Actor` propriedade; caso contrário, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| O valor de `identity.AuthenticationType` propriedade (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>) é usada. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.BootStrapContext` propriedade; caso contrário, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, as declarações de `identity` são adicionados para a nova instância; caso contrário, uma coleção vazia. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>é retornado com base no valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.Label` propriedade; caso contrário, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| Se `identity` não é atribuível da <xref:System.Security.Claims.ClaimsIdentity>, não é `null`e tem um <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>propriedade que não é `null`; uma declaração de nome é adicionada para a nova instância usando o valor da <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>propriedade.</xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.Name%2A>é retornado com base no <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e a coleção de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.NameClaimType` propriedade é usada; caso contrário, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>será usado. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.RoleClaimType` propriedade for usada; caso contrário, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>é usado. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A>"
  syntax:
    content: public ClaimsIdentity (System.Security.Principal.IIdentity identity);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "A identidade na qual basear a nova identidade baseada em declarações."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> coleta e o tipo de autenticação de declarações de classe com vazio."
  remarks: "A tabela a seguir mostra os valores de propriedade inicial de uma instância de <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| O valor de `authenticationType` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Se o `authenticationType` parâmetro é `null` ou uma cadeia de caracteres vazia, a propriedade é definida como `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Uma coleção vazia. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>é retornado com base no valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.Name%2A>é retornado com base no <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e a coleção de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>"
  syntax:
    content: public ClaimsIdentity (string authenticationType);
    parameters:
    - id: authenticationType
      type: System.String
      description: "O tipo de autenticação usado."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IEnumerable<Claim>,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe com as declarações especificadas e o tipo de autenticação."
  remarks: "A tabela a seguir mostra os valores de propriedade inicial de uma instância de <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| O valor de `authenticationType` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Se o `authenticationType` parâmetro é `null` ou uma cadeia de caracteres vazia, a propriedade é definida como `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Inicializado a partir de `claims` parâmetro. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>é retornado com base no valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.Name%2A>é retornado com base no <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e a coleção de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>.|   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>.|</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType></xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Name%2A></xref:System.Security.Claims.ClaimsIdentity.Label%2A></xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A></xref:System.Security.Claims.ClaimsIdentity.Claims%2A></xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>"
  syntax:
    content: public ClaimsIdentity (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims, string authenticationType);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "As declarações com o qual preencher a identidade baseada em declarações."
    - id: authenticationType
      type: System.String
      description: "O tipo de autenticação usado."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: '#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe a partir de um fluxo serializado criado usando <xref href=&quot;System.Runtime.Serialization.ISerializable&quot;> </xref>."
  syntax:
    content: protected ClaimsIdentity (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "Os dados serializados."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O contexto de serialização."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: '#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe usando as declarações especificadas e <xref:System.Security.Principal.IIdentity>.</xref:System.Security.Principal.IIdentity> especificado"
  remarks: "A tabela a seguir mostra os valores de propriedade inicial de uma instância de <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.Actor` propriedade; caso contrário, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| O `authenticationType` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Se o `authenticationType` parâmetro é `null` ou uma cadeia de caracteres vazia, o valor da `identity.AuthenticationType` propriedade (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>) é usada. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.BootStrapContext` propriedade; caso contrário, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Inicializado a partir de `claims` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, as declarações de `identity` são adicionados para a nova instância antes de os especificados pelo `claims` parâmetro. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>é retornado com base no valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.Label` propriedade; caso contrário, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| Se `identity` não é atribuível da <xref:System.Security.Claims.ClaimsIdentity>, não é `null`e tem um <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>propriedade que não é `null`; uma declaração de nome é adicionada para a nova instância usando o valor da <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>propriedade.</xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity> **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.Name%2A>é retornado com base no <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e a coleção de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.NameClaimType` propriedade é usada; caso contrário, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>será usado. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.RoleClaimType` propriedade for usada; caso contrário, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>é usado. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A>"
  syntax:
    content: public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "A identidade na qual basear a nova identidade baseada em declarações."
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "As declarações com o qual preencher a identidade baseada em declarações."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> tipo de declaração de classe com o tipo de autenticação especificado, o tipo de declaração de nome e a função."
  remarks: "A tabela a seguir mostra os valores de propriedade inicial de uma instância de <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| O valor de `authenticationType` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Se o `authenticationType` parâmetro é `null` ou uma cadeia de caracteres vazia, a propriedade é definida como `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Uma coleção vazia. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>é retornado com base no valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.Name%2A>é retornado com base no <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e a coleção de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| O valor de `nameType` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> Se o `nameType` parâmetro é nulo ou uma cadeia de caracteres vazia, a propriedade é definida como <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| O valor de `roleType` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> Se o `roleType` parâmetro é nulo ou uma cadeia de caracteres vazia, a propriedade é definida como <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>"
  syntax:
    content: public ClaimsIdentity (string authenticationType, string nameType, string roleType);
    parameters:
    - id: authenticationType
      type: System.String
      description: "O tipo de autenticação usado."
    - id: nameType
      type: System.String
      description: "O tipo de declaração a ser usado para as declarações de nome."
    - id: roleType
      type: System.String
      description: "O tipo de declaração a ser usado para declarações de função."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> tipo de declaração de classe com as declarações especificadas, tipo de autenticação, o tipo de declaração de nome e função."
  remarks: "A tabela a seguir mostra os valores de propriedade inicial de uma instância de <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| O valor de `authenticationType` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Se o `authenticationType` parâmetro é `null` ou uma cadeia de caracteres vazia, a propriedade é definida como `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Inicializado a partir de `claims` parâmetro. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>é retornado com base no valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| `null`.|   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.Name%2A>é retornado com base no <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e a coleção de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| O valor de `nameType` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> No entanto, se o `nameType` parâmetro é `null` ou uma cadeia de caracteres vazia, a propriedade é definida como <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| O valor de `roleClaimType` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> No entanto, se o `roleClaimType` parâmetro é `null` ou uma cadeia de caracteres vazia, a propriedade é definida como <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>"
  syntax:
    content: public ClaimsIdentity (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims, string authenticationType, string nameType, string roleType);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "As declarações com o qual preencher a identidade baseada em declarações."
    - id: authenticationType
      type: System.String
      description: "O tipo de autenticação usado."
    - id: nameType
      type: System.String
      description: "O tipo de declaração a ser usado para as declarações de nome."
    - id: roleType
      type: System.String
      description: "O tipo de declaração a ser usado para declarações de função."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  id: '#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)'
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> classe especificado <xref:System.Security.Principal.IIdentity>usando as declarações especificadas, tipo de autenticação, o tipo de declaração de nome e função de tipo de declaração.</xref:System.Security.Principal.IIdentity>"
  remarks: "A tabela a seguir mostra os valores de propriedade inicial de uma instância de <xref:System.Security.Claims.ClaimsIdentity>classe.</xref:System.Security.Claims.ClaimsIdentity>      | Propriedade | Valor |   |--------------|-----------|   | <xref:System.Security.Claims.ClaimsIdentity.Actor%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.Actor` propriedade; caso contrário, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>| O `authenticationType` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Actor%2A> Se o `authenticationType` parâmetro é `null` ou uma cadeia de caracteres vazia, o valor da `identity.AuthenticationType` propriedade (<xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>) é usada. |   | <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.BootStrapContext` propriedade; caso contrário, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>| Inicializado a partir de `claims` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A> </xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, as declarações de `identity` são adicionados para a nova instância antes de os especificados pelo `claims` parâmetro. |   | <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>| **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A>é retornado com base no valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.Label%2A>| Se `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor de `identity.Label` propriedade; caso contrário, `null`. |   | <xref:System.Security.Claims.ClaimsIdentity.Name%2A>| Se `identity` não é atribuível da <xref:System.Security.Claims.ClaimsIdentity>, não é `null`e tem um <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>propriedade que não é `null`; uma declaração de nome é adicionada para a nova instância usando o valor da <xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName>propriedade.</xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Principal.IIdentity.Name%2A?displayProperty=fullName> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity.Label%2A> </xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity.IsAuthenticated%2A> </xref:System.Security.Claims.ClaimsIdentity> **Observação:** quando acessado, o valor da propriedade <xref:System.Security.Claims.ClaimsIdentity.Name%2A>é retornado com base no <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>e a coleção de <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>. |   | <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>| O valor de `nameType` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Claims%2A> </xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.Name%2A> No entanto, se o valor da `nameType` parâmetro é `null` ou uma cadeia de caracteres vazia e `identity` pode ser atribuído de <xref:System.Security.Claims.ClaimsIdentity>, o valor da `identity.NameClaimType` propriedade é usada; caso contrário, <xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType>será usado. |   | <xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A>| O valor de `roleClaimType` parâmetro.</xref:System.Security.Claims.ClaimsIdentity.RoleClaimType%2A> </xref:System.Security.Claims.ClaimsIdentity.DefaultNameClaimType> </xref:System.Security.Claims.ClaimsIdentity> No entanto, se o valor da `roleClaimType` parâmetro é `null` ou uma cadeia de caracteres vazia e identidade é atribuível da <xref:System.Security.Claims.ClaimsIdentity>, o valor da `identity.RoleClaimType` propriedade for usada; caso contrário, <xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType>é usado. |</xref:System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType> </xref:System.Security.Claims.ClaimsIdentity>"
  syntax:
    content: public ClaimsIdentity (System.Security.Principal.IIdentity identity, System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims, string authenticationType, string nameType, string roleType);
    parameters:
    - id: identity
      type: System.Security.Principal.IIdentity
      description: "A identidade na qual basear a nova identidade baseada em declarações."
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "As declarações com o qual preencher a nova identidade baseada em declarações."
    - id: authenticationType
      type: System.String
      description: "O tipo de autenticação usado."
    - id: nameType
      type: System.String
      description: "O tipo de declaração a ser usado para as declarações de nome."
    - id: roleType
      type: System.String
      description: "O tipo de declaração a ser usado para declarações de função."
  overload: System.Security.Claims.ClaimsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Actor
  id: Actor
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Actor
  nameWithType: ClaimsIdentity.Actor
  fullName: System.Security.Claims.ClaimsIdentity.Actor
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém ou define a identidade da parte chamada que recebeu direitos de delegação."
  remarks: "Um aplicativo pode acessar a cadeia de delegação que levou para a chamada atual, por recursivamente examinando a propriedade de ator. O token em nome do qual a chamada está sendo delegada pode ser acessado por meio de <xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>propriedade.</xref:System.Security.Claims.ClaimsIdentity.BootstrapContext%2A>"
  syntax:
    content: public System.Security.Claims.ClaimsIdentity Actor { get; set; }
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "A parte chamada que recebeu direitos de delegação."
  overload: System.Security.Claims.ClaimsIdentity.Actor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Ocorre uma tentativa de definir a propriedade para a instância atual."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  id: AddClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: AddClaim(Claim)
  nameWithType: ClaimsIdentity.AddClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaim(Claim)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Adiciona que uma única declaração identidade baseada em declarações."
  remarks: "A declaração é examinada e se a entidade for diferente de essa identidade baseada em declarações, o <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>método é invocado com esta identidade baseada em declarações como o parâmetro para criar uma nova declaração com o assunto correto.</xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>       Esse método tem a `SecurityCritical` atributo aplicado ao controle quais entidades podem adicionar declarações para a identidade. Ainda mais para baixo o pipe, decisões de autorização são feitas com base em declarações que estão presentes no <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>coleção.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual void AddClaim (System.Security.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "A declaração a ser adicionada."
  overload: System.Security.Claims.ClaimsIdentity.AddClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claim</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  id: AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: AddClaims(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.AddClaims(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaims(IEnumerable<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Adiciona que uma lista de declarações a essa identidade baseada em declarações."
  remarks: "Cada declaração é examinada e se a entidade for diferente de essa identidade baseada em declarações, o <xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>método é invocado com esta identidade baseada em declarações como o parâmetro para criar uma nova declaração com o assunto correto.</xref:System.Security.Claims.Claim.Clone%28System.Security.Claims.ClaimsIdentity%29?displayProperty=fullName>       Esse método tem a `SecurityCritical` atributo aplicado ao controle quais entidades podem adicionar declarações para a identidade. Ainda mais para baixo o pipe, decisões de autorização são feitas com base em declarações que estão presentes no <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>coleção.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual void AddClaims (System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> claims);
    parameters:
    - id: claims
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "As declarações para adicionar."
  overload: System.Security.Claims.ClaimsIdentity.AddClaims*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>claims</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ClaimsIdentity.AuthenticationType
  fullName: System.Security.Claims.ClaimsIdentity.AuthenticationType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém o tipo de autenticação."
  remarks: "Normalmente, um dos valores definidos pela <xref:System.Security.Claims.AuthenticationTypes>classe.</xref:System.Security.Claims.AuthenticationTypes>"
  syntax:
    content: public virtual string AuthenticationType { get; }
    return:
      type: System.String
      description: "O tipo de autenticação."
  overload: System.Security.Claims.ClaimsIdentity.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext
  id: BootstrapContext
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: BootstrapContext
  nameWithType: ClaimsIdentity.BootstrapContext
  fullName: System.Security.Claims.ClaimsIdentity.BootstrapContext
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém ou define o token que foi usado para criar essa identidade baseada em declarações."
  remarks: "The underlying object is an instance of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=fullName> class.  \n  \n Set the `saveBootstrapContext` attribute on either the [\\&lt;identityConfiguration\\&gt;](../Topic/%3CidentityConfiguration%3E.md) or the [\\&lt;securityTokenHandlerConfiguration\\&gt;](../Topic/%3CsecurityTokenHandlerConfiguration%3E.md) element in a configuration file to specify whether the token used to generate the <xref:System.Security.Claims.ClaimsIdentity> should be preserved in the BootstrapContext property.  \n  \n If the BootstrapContext property is not `null`, applications can access the original token and the claims it produced through the properties and methods of the <xref:System.IdentityModel.Tokens.BootstrapContext?displayProperty=fullName> class."
  syntax:
    content: public object BootstrapContext { get; set; }
    return:
      type: System.Object
      description: "O contexto de inicialização."
  overload: System.Security.Claims.ClaimsIdentity.BootstrapContext*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Claims
  id: Claims
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Claims
  nameWithType: ClaimsIdentity.Claims
  fullName: System.Security.Claims.ClaimsIdentity.Claims
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém as declarações associadas com esta identidade baseada em declarações."
  remarks: "A coleção pode conter entradas que são `null`.       As declarações contidas no conjunto de declarações essencialmente descrevem a entidade que é representada por <xref:System.Security.Claims.ClaimsIdentity>.</xref:System.Security.Claims.ClaimsIdentity> As declarações de descrevem as propriedades e os direitos de entidade e podem ser examinadas por aplicativos para tomar decisões sobre a autenticação e autorização.      > [!NOTE] > O <xref:System.Security.Claims.ClaimsPrincipal>classe tiver um <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A>propriedade bem.</xref:System.Security.Claims.ClaimsPrincipal.Claims%2A> </xref:System.Security.Claims.ClaimsPrincipal> Na maioria dos casos, você deve acessar declarações do usuário por meio de <xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName>coleção em vez de por meio da coleção de declarações.</xref:System.Security.Claims.ClaimsPrincipal.Claims%2A?displayProperty=fullName> Você precisará acessar as declarações de um indivíduo <xref:System.Security.Claims.ClaimsIdentity>somente nos casos em que a entidade de segurança contém mais de um <xref:System.Security.Claims.ClaimsIdentity>e você precisa avaliar ou modificar uma identidade específica.</xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsIdentity>"
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> Claims { get; }
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "A coleção de declarações associadas com esta identidade baseada em declarações."
  overload: System.Security.Claims.ClaimsIdentity.Claims*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Clone
  id: Clone
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Clone()
  nameWithType: ClaimsIdentity.Clone()
  fullName: System.Security.Claims.ClaimsIdentity.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Retorna um novo <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> copiados dessa identidade baseada em declarações."
  syntax:
    content: public virtual System.Security.Claims.ClaimsIdentity Clone ();
    parameters: []
    return:
      type: System.Security.Claims.ClaimsIdentity
      description: "Uma cópia da instância atual."
  overload: System.Security.Claims.ClaimsIdentity.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  id: CreateClaim(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: CreateClaim(BinaryReader)
  nameWithType: ClaimsIdentity.CreateClaim(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.CreateClaim(BinaryReader)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual System.Security.Claims.Claim CreateClaim (System.IO.BinaryReader reader);
    parameters:
    - id: reader
      type: System.IO.BinaryReader
      description: "A ser adicionado."
    return:
      type: System.Security.Claims.Claim
      description: "A ser adicionado."
  overload: System.Security.Claims.ClaimsIdentity.CreateClaim*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  id: CustomSerializationData
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: CustomSerializationData
  nameWithType: ClaimsIdentity.CustomSerializationData
  fullName: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual byte[] CustomSerializationData { get; }
    return:
      type: System.Byte[]
      description: "A ser adicionado."
  overload: System.Security.Claims.ClaimsIdentity.CustomSerializationData*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  id: DefaultIssuer
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: DefaultIssuer
  nameWithType: ClaimsIdentity.DefaultIssuer
  fullName: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "O emissor padrão; &quot;LOCAL AUTHORITY&quot;."
  syntax:
    content: public const string DefaultIssuer;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  id: DefaultNameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: DefaultNameClaimType
  nameWithType: ClaimsIdentity.DefaultNameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "O nome padrão de declaração de tipo. <xref href=&quot;System.Security.Claims.ClaimTypes.Name&quot;></xref>."
  syntax:
    content: public const string DefaultNameClaimType;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  id: DefaultRoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: DefaultRoleClaimType
  nameWithType: ClaimsIdentity.DefaultRoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "A função padrão de declaração de tipo; <xref href=&quot;System.Security.Claims.ClaimTypes.Role&quot;></xref>."
  syntax:
    content: public const string DefaultRoleClaimType;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  id: FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindAll(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindAll(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Recupera todas as declarações que correspondem ao predicado especificado."
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> FindAll (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: "A função que executa a lógica de correspondência."
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Declarações correspondentes. A lista é somente leitura."
  overload: System.Security.Claims.ClaimsIdentity.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  id: FindAll(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindAll(String)
  nameWithType: ClaimsIdentity.FindAll(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Recupera todas as declarações que têm o tipo de declaração especificado."
  remarks: "A comparação é feita usando Ordinal maiusculas em minúsculas em `type`."
  syntax:
    content: public virtual System.Collections.Generic.IEnumerable<System.Security.Claims.Claim> FindAll (string type);
    parameters:
    - id: type
      type: System.String
      description: "O tipo de declaração com o qual corresponder declarações."
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
      description: "Declarações correspondentes. A lista é somente leitura."
  overload: System.Security.Claims.ClaimsIdentity.FindAll*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  id: FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindFirst(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindFirst(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Recupera a primeira declaração correspondente pelo predicado especificado."
  syntax:
    content: public virtual System.Security.Claims.Claim FindFirst (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: "A função que executa a lógica de correspondência."
    return:
      type: System.Security.Claims.Claim
      description: "A primeira correspondência de declaração ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhuma correspondência for encontrada."
  overload: System.Security.Claims.ClaimsIdentity.FindFirst*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  id: FindFirst(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: FindFirst(String)
  nameWithType: ClaimsIdentity.FindFirst(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Recupera a primeira declaração com o tipo de declaração especificado."
  syntax:
    content: public virtual System.Security.Claims.Claim FindFirst (string type);
    parameters:
    - id: type
      type: System.String
      description: "O tipo de declaração para corresponder."
    return:
      type: System.Security.Claims.Claim
      description: "A primeira correspondência de declaração ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhuma correspondência for encontrada."
  overload: System.Security.Claims.ClaimsIdentity.FindFirst*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  id: GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Preenche o <xref href=&quot;System.Runtime.Serialization.SerializationInfo&quot;> </xref> com os dados necessários para serializar atual <xref href=&quot;System.Security.Claims.ClaimsIdentity&quot;> </xref> objeto."
  syntax:
    content: protected virtual void GetObjectData (System.Runtime.Serialization.SerializationInfo info, System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: info
      type: System.Runtime.Serialization.SerializationInfo
      description: "O objeto a ser populado com dados."
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O destino desta serialização. Can be <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Security.Claims.ClaimsIdentity.GetObjectData*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>info</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  id: HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: HasClaim(Predicate<Claim>)
  nameWithType: ClaimsIdentity.HasClaim(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(Predicate<Claim>)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Determina se essa declarações de identidade tem uma declaração correspondente pelo predicado especificado."
  syntax:
    content: public virtual bool HasClaim (Predicate<System.Security.Claims.Claim> match);
    parameters:
    - id: match
      type: System.Predicate{System.Security.Claims.Claim}
      description: "A função que executa a lógica de correspondência."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se existir uma declaração correspondente. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.HasClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>match</code>is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  id: HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: HasClaim(String,String)
  nameWithType: ClaimsIdentity.HasClaim(String,String)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Determina se essa declarações de identidade tem uma declaração com o tipo e o valor de declaração."
  remarks: "Não verifica a <xref:System.Security.Claims.Claim.Issuer%2A>ou <xref:System.Security.Claims.Claim.OriginalIssuer%2A>Propriedades.</xref:System.Security.Claims.Claim.OriginalIssuer%2A> </xref:System.Security.Claims.Claim.Issuer%2A> A comparação é feita usando o Ordinal de maiusculas e minúsculas no valor; maiusculas em minúsculas no tipo."
  syntax:
    content: public virtual bool HasClaim (string type, string value);
    parameters:
    - id: type
      type: System.String
      description: "O tipo de declaração para corresponder."
    - id: value
      type: System.String
      description: "O valor da declaração para corresponder."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se uma correspondência for encontrada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.HasClaim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>type</code>is **null**.       -or-       <code>value</code> is **null**."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: ClaimsIdentity.IsAuthenticated
  fullName: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém um valor que indica se a identidade foi autenticada."
  remarks: '`true`Se o <xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>propriedade não é `null` ou uma cadeia de caracteres vazia.</xref:System.Security.Claims.ClaimsIdentity.AuthenticationType%2A>'
  syntax:
    content: public virtual bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a identidade foi autenticada; Caso contrário, **false**."
  overload: System.Security.Claims.ClaimsIdentity.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Label
  id: Label
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Label
  nameWithType: ClaimsIdentity.Label
  fullName: System.Security.Claims.ClaimsIdentity.Label
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém ou define o rótulo para essa identidade de declarações."
  syntax:
    content: public string Label { get; set; }
    return:
      type: System.String
      description: "O rótulo."
  overload: System.Security.Claims.ClaimsIdentity.Label*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.Name
  id: Name
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: Name
  nameWithType: ClaimsIdentity.Name
  fullName: System.Security.Claims.ClaimsIdentity.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém o nome deste identidade baseada em declarações."
  remarks: "Retorna o valor da primeira declaração com um tipo que corresponde ao nome de declaração de tipo definido no <xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A>propriedade.</xref:System.Security.Claims.ClaimsIdentity.NameClaimType%2A> Se nenhuma declaração for encontrada que corresponde ao tipo de declaração de nome, retorna `null`."
  syntax:
    content: public virtual string Name { get; }
    return:
      type: System.String
      description: "O nome ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType
  id: NameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: NameClaimType
  nameWithType: ClaimsIdentity.NameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.NameClaimType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém o tipo de declaração que é usado para determinar quais declarações fornecem o valor para o <xref:System.Security.Claims.ClaimsIdentity.Name*>propriedade deste identidade baseada em declarações.</xref:System.Security.Claims.ClaimsIdentity.Name*>"
  remarks: "A propriedade NameClaimType Especifica o tipo de declaração (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName>) que é usado para fornecer o nome para essa identidade.</xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName> O nome é acessado por meio de <xref:System.Security.Claims.ClaimsIdentity.Name%2A>propriedade.</xref:System.Security.Claims.ClaimsIdentity.Name%2A>       Essa propriedade é definida pelo construtor."
  syntax:
    content: public string NameClaimType { get; }
    return:
      type: System.String
      description: "O nome do tipo de declaração."
  overload: System.Security.Claims.ClaimsIdentity.NameClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  id: RemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: RemoveClaim(Claim)
  nameWithType: ClaimsIdentity.RemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim(Claim)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Tenta remover uma declaração da identidade de declarações."
  remarks: "É possível que a declaração não pode ser removida porque ele não pertence a identidade. Por exemplo, isso seria o caso para declarações de função que pertencem a entidade de segurança. Diferentemente de <xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A>método, que retorna um valor booliano que indica se a declaração foi removida, RemoveClaim lança uma exceção se a declaração não foi possível remover a declaração especificada corresponde à referência de objeto (<xref:System.Object.ReferenceEquals%2A>).</xref:System.Object.ReferenceEquals%2A> </xref:System.Security.Claims.ClaimsIdentity.TryRemoveClaim%2A>       Esse método tem a `SecurityCritical` atributo aplicado ao controle quais entidades podem remover declarações de identidade. Ainda mais para baixo o pipe, decisões de autorização são feitas com base em declarações que estão presentes no <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>coleção.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual void RemoveClaim (System.Security.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "A declaração a ser removida."
  overload: System.Security.Claims.ClaimsIdentity.RemoveClaim*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A declaração não pode ser removida."
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType
  id: RoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: RoleClaimType
  nameWithType: ClaimsIdentity.RoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.RoleClaimType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Obtém o tipo de declaração será interpretado como uma função do .NET Framework entre as declarações neste identidade baseada em declarações."
  remarks: "O tipo de declaração de função é o tipo de declaração (<xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName>) que é usado ao avaliar essa identidade para o <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName>método.</xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName> </xref:System.Security.Claims.Claim.Type%2A?displayProperty=fullName> O <xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName>método é chamado para determinar se o servidor principal atual está em uma função especificada.</xref:System.Security.Claims.ClaimsPrincipal.IsInRole%28System.String%29?displayProperty=fullName> O modelo baseado em declarações estende essa seleção para usar declarações apresentadas pela entidade de segurança. Um <xref:System.Security.Claims.ClaimsPrincipal>objeto pode conter um ou mais <xref:System.Security.Claims.ClaimsIdentity>objetos e cada objeto de identidade podem conter vários <xref:System.Security.Claims.Claim>objetos.</xref:System.Security.Claims.Claim> </xref:System.Security.Claims.ClaimsIdentity> </xref:System.Security.Claims.ClaimsPrincipal> A propriedade RoleClaimType Especifica o tipo de declaração da declaração que deve ser usado para fornecer o valor para a função ao avaliar isso <xref:System.Security.Claims.ClaimsIdentity>objeto.</xref:System.Security.Claims.ClaimsIdentity> A propriedade é definida pelo construtor. Um valor comum é <xref:System.Security.Claims.ClaimTypes.Role?displayProperty=fullName>.</xref:System.Security.Claims.ClaimTypes.Role?displayProperty=fullName>"
  syntax:
    content: public string RoleClaimType { get; }
    return:
      type: System.String
      description: "Tipo de declaração de função."
  overload: System.Security.Claims.ClaimsIdentity.RoleClaimType*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  id: TryRemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: TryRemoveClaim(Claim)
  nameWithType: ClaimsIdentity.TryRemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(Claim)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  summary: "Tenta remover uma declaração da identidade de declarações."
  remarks: "É possível que a declaração não pode ser removida porque ele não pertence a identidade. Por exemplo, isso seria o caso para declarações de função que pertencem a entidade de segurança.       A declaração especificada corresponde à referência de objeto (<xref:System.Object.ReferenceEquals%2A>).</xref:System.Object.ReferenceEquals%2A>       Esse método tem a `SecurityCritical` atributo aplicado ao controle quais entidades podem remover declarações de identidade. Ainda mais para baixo o pipe, decisões de autorização são feitas com base em declarações que estão presentes no <xref:System.Security.Claims.ClaimsIdentity.Claims%2A>coleção.</xref:System.Security.Claims.ClaimsIdentity.Claims%2A>"
  syntax:
    content: public virtual bool TryRemoveClaim (System.Security.Claims.Claim claim);
    parameters:
    - id: claim
      type: System.Security.Claims.Claim
      description: "A declaração a ser removida."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a declaração foi removida com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Claims.ClaimsIdentity.TryRemoveClaim*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  id: WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: WriteTo(BinaryWriter)
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: public virtual void WriteTo (System.IO.BinaryWriter writer);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "A ser adicionado."
  overload: System.Security.Claims.ClaimsIdentity.WriteTo*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  id: WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsIdentity
  langs:
  - csharp
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Claims
  syntax:
    content: protected virtual void WriteTo (System.IO.BinaryWriter writer, byte[] userData);
    parameters:
    - id: writer
      type: System.IO.BinaryWriter
      description: "A ser adicionado."
    - id: userData
      type: System.Byte[]
      description: "A ser adicionado."
  overload: System.Security.Claims.ClaimsIdentity.WriteTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Security.Claims.ClaimsIdentity.#ctor
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity()
  nameWithType: ClaimsIdentity.ClaimsIdentity()
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity()
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>)
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.Claim}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<Claim>
  nameWithType: IEnumerable<Claim>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.Claim>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Security.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(BinaryReader)
  nameWithType: ClaimsIdentity.ClaimsIdentity(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(BinaryReader)
- uid: System.IO.BinaryReader
  parent: System.IO
  isExternal: true
  name: BinaryReader
  nameWithType: BinaryReader
  fullName: System.IO.BinaryReader
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(SerializationInfo)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo)
- uid: System.Runtime.Serialization.SerializationInfo
  parent: System.Runtime.Serialization
  isExternal: false
  name: SerializationInfo
  nameWithType: SerializationInfo
  fullName: System.Runtime.Serialization.SerializationInfo
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Claims.ClaimsIdentity)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(ClaimsIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(ClaimsIdentity)
- uid: System.Security.Claims.ClaimsIdentity
  parent: System.Security.Claims
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity
  fullName: System.Security.Claims.ClaimsIdentity
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IIdentity)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity)
- uid: System.Security.Principal.IIdentity
  parent: System.Security.Principal
  isExternal: true
  name: IIdentity
  nameWithType: IIdentity
  fullName: System.Security.Principal.IIdentity
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IEnumerable<Claim>,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(SerializationInfo,StreamingContext)
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.String,System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(String,String,String)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IEnumerable<Claim>,String,String,String)
- uid: System.Security.Claims.ClaimsIdentity.#ctor(System.Security.Principal.IIdentity,System.Collections.Generic.IEnumerable{System.Security.Claims.Claim},System.String,System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  nameWithType: ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
  fullName: System.Security.Claims.ClaimsIdentity.ClaimsIdentity(IIdentity,IEnumerable<Claim>,String,String,String)
- uid: System.Security.Claims.ClaimsIdentity.Actor
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Actor
  nameWithType: ClaimsIdentity.Actor
  fullName: System.Security.Claims.ClaimsIdentity.Actor
- uid: System.Security.Claims.ClaimsIdentity.AddClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaim(Claim)
  nameWithType: ClaimsIdentity.AddClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaim(Claim)
- uid: System.Security.Claims.Claim
  parent: System.Security.Claims
  isExternal: false
  name: Claim
  nameWithType: Claim
  fullName: System.Security.Claims.Claim
- uid: System.Security.Claims.ClaimsIdentity.AddClaims(System.Collections.Generic.IEnumerable{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaims(IEnumerable<Claim>)
  nameWithType: ClaimsIdentity.AddClaims(IEnumerable<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.AddClaims(IEnumerable<Claim>)
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClaimsIdentity.AuthenticationType
  fullName: System.Security.Claims.ClaimsIdentity.AuthenticationType
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: BootstrapContext
  nameWithType: ClaimsIdentity.BootstrapContext
  fullName: System.Security.Claims.ClaimsIdentity.BootstrapContext
- uid: System.Security.Claims.ClaimsIdentity.Claims
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Claims
  nameWithType: ClaimsIdentity.Claims
  fullName: System.Security.Claims.ClaimsIdentity.Claims
- uid: System.Security.Claims.ClaimsIdentity.Clone
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Clone()
  nameWithType: ClaimsIdentity.Clone()
  fullName: System.Security.Claims.ClaimsIdentity.Clone()
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim(System.IO.BinaryReader)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CreateClaim(BinaryReader)
  nameWithType: ClaimsIdentity.CreateClaim(BinaryReader)
  fullName: System.Security.Claims.ClaimsIdentity.CreateClaim(BinaryReader)
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CustomSerializationData
  nameWithType: ClaimsIdentity.CustomSerializationData
  fullName: System.Security.Claims.ClaimsIdentity.CustomSerializationData
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Security.Claims.ClaimsIdentity.DefaultIssuer
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultIssuer
  nameWithType: ClaimsIdentity.DefaultIssuer
  fullName: System.Security.Claims.ClaimsIdentity.DefaultIssuer
- uid: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultNameClaimType
  nameWithType: ClaimsIdentity.DefaultNameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultNameClaimType
- uid: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: DefaultRoleClaimType
  nameWithType: ClaimsIdentity.DefaultRoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.DefaultRoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindAll(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindAll(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(Predicate<Claim>)
- uid: System.Predicate{System.Security.Claims.Claim}
  parent: System
  isExternal: true
  name: Predicate<Claim>
  nameWithType: Predicate<Claim>
  fullName: System.Predicate<System.Security.Claims.Claim>
  spec.csharp:
  - uid: System.Predicate`1
    name: Predicate
    nameWithType: Predicate
    fullName: Predicate<System.Security.Claims.Claim>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Security.Claims.Claim
    name: Claim
    nameWithType: Claim
    fullName: Claim
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Security.Claims.ClaimsIdentity.FindAll(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindAll(String)
  nameWithType: ClaimsIdentity.FindAll(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindAll(String)
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindFirst(Predicate<Claim>)
  nameWithType: ClaimsIdentity.FindFirst(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(Predicate<Claim>)
- uid: System.Security.Claims.ClaimsIdentity.FindFirst(System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindFirst(String)
  nameWithType: ClaimsIdentity.FindFirst(String)
  fullName: System.Security.Claims.ClaimsIdentity.FindFirst(String)
- uid: System.Security.Claims.ClaimsIdentity.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: GetObjectData(SerializationInfo,StreamingContext)
  nameWithType: ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
  fullName: System.Security.Claims.ClaimsIdentity.GetObjectData(SerializationInfo,StreamingContext)
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.Predicate{System.Security.Claims.Claim})
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: HasClaim(Predicate<Claim>)
  nameWithType: ClaimsIdentity.HasClaim(Predicate<Claim>)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(Predicate<Claim>)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Claims.ClaimsIdentity.HasClaim(System.String,System.String)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: HasClaim(String,String)
  nameWithType: ClaimsIdentity.HasClaim(String,String)
  fullName: System.Security.Claims.ClaimsIdentity.HasClaim(String,String)
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClaimsIdentity.IsAuthenticated
  fullName: System.Security.Claims.ClaimsIdentity.IsAuthenticated
- uid: System.Security.Claims.ClaimsIdentity.Label
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Label
  nameWithType: ClaimsIdentity.Label
  fullName: System.Security.Claims.ClaimsIdentity.Label
- uid: System.Security.Claims.ClaimsIdentity.Name
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Name
  nameWithType: ClaimsIdentity.Name
  fullName: System.Security.Claims.ClaimsIdentity.Name
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: NameClaimType
  nameWithType: ClaimsIdentity.NameClaimType
  fullName: System.Security.Claims.ClaimsIdentity.NameClaimType
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RemoveClaim(Claim)
  nameWithType: ClaimsIdentity.RemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.RemoveClaim(Claim)
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RoleClaimType
  nameWithType: ClaimsIdentity.RoleClaimType
  fullName: System.Security.Claims.ClaimsIdentity.RoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(System.Security.Claims.Claim)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: TryRemoveClaim(Claim)
  nameWithType: ClaimsIdentity.TryRemoveClaim(Claim)
  fullName: System.Security.Claims.ClaimsIdentity.TryRemoveClaim(Claim)
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter)
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: WriteTo(BinaryWriter)
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter)
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter)
- uid: System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.Security.Claims.ClaimsIdentity.WriteTo(System.IO.BinaryWriter,System.Byte[])
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: WriteTo(BinaryWriter,Byte[])
  nameWithType: ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
  fullName: System.Security.Claims.ClaimsIdentity.WriteTo(BinaryWriter,Byte[])
- uid: System.Security.Claims.ClaimsIdentity.#ctor*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: ClaimsIdentity
  nameWithType: ClaimsIdentity.ClaimsIdentity
- uid: System.Security.Claims.ClaimsIdentity.Actor*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Actor
  nameWithType: ClaimsIdentity.Actor
- uid: System.Security.Claims.ClaimsIdentity.AddClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaim
  nameWithType: ClaimsIdentity.AddClaim
- uid: System.Security.Claims.ClaimsIdentity.AddClaims*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AddClaims
  nameWithType: ClaimsIdentity.AddClaims
- uid: System.Security.Claims.ClaimsIdentity.AuthenticationType*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClaimsIdentity.AuthenticationType
- uid: System.Security.Claims.ClaimsIdentity.BootstrapContext*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: BootstrapContext
  nameWithType: ClaimsIdentity.BootstrapContext
- uid: System.Security.Claims.ClaimsIdentity.Claims*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Claims
  nameWithType: ClaimsIdentity.Claims
- uid: System.Security.Claims.ClaimsIdentity.Clone*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Clone
  nameWithType: ClaimsIdentity.Clone
- uid: System.Security.Claims.ClaimsIdentity.CreateClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CreateClaim
  nameWithType: ClaimsIdentity.CreateClaim
- uid: System.Security.Claims.ClaimsIdentity.CustomSerializationData*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: CustomSerializationData
  nameWithType: ClaimsIdentity.CustomSerializationData
- uid: System.Security.Claims.ClaimsIdentity.FindAll*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindAll
  nameWithType: ClaimsIdentity.FindAll
- uid: System.Security.Claims.ClaimsIdentity.FindFirst*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: FindFirst
  nameWithType: ClaimsIdentity.FindFirst
- uid: System.Security.Claims.ClaimsIdentity.GetObjectData*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: GetObjectData
  nameWithType: ClaimsIdentity.GetObjectData
- uid: System.Security.Claims.ClaimsIdentity.HasClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: HasClaim
  nameWithType: ClaimsIdentity.HasClaim
- uid: System.Security.Claims.ClaimsIdentity.IsAuthenticated*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClaimsIdentity.IsAuthenticated
- uid: System.Security.Claims.ClaimsIdentity.Label*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Label
  nameWithType: ClaimsIdentity.Label
- uid: System.Security.Claims.ClaimsIdentity.Name*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: Name
  nameWithType: ClaimsIdentity.Name
- uid: System.Security.Claims.ClaimsIdentity.NameClaimType*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: NameClaimType
  nameWithType: ClaimsIdentity.NameClaimType
- uid: System.Security.Claims.ClaimsIdentity.RemoveClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RemoveClaim
  nameWithType: ClaimsIdentity.RemoveClaim
- uid: System.Security.Claims.ClaimsIdentity.RoleClaimType*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: RoleClaimType
  nameWithType: ClaimsIdentity.RoleClaimType
- uid: System.Security.Claims.ClaimsIdentity.TryRemoveClaim*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: TryRemoveClaim
  nameWithType: ClaimsIdentity.TryRemoveClaim
- uid: System.Security.Claims.ClaimsIdentity.WriteTo*
  parent: System.Security.Claims.ClaimsIdentity
  isExternal: false
  name: WriteTo
  nameWithType: ClaimsIdentity.WriteTo
