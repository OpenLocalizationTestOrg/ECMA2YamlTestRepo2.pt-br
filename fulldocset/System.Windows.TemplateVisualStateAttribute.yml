### YamlMime:ManagedReference
items:
- uid: System.Windows.TemplateVisualStateAttribute
  id: TemplateVisualStateAttribute
  children:
  - System.Windows.TemplateVisualStateAttribute.#ctor
  - System.Windows.TemplateVisualStateAttribute.GroupName
  - System.Windows.TemplateVisualStateAttribute.Name
  langs:
  - csharp
  name: TemplateVisualStateAttribute
  nameWithType: TemplateVisualStateAttribute
  fullName: System.Windows.TemplateVisualStateAttribute
  type: Class
  summary: "Especifica que um controle pode estar em um determinado estado e que um <xref href=&quot;System.Windows.VisualState&quot;> </xref> é esperado no controle do <xref href=&quot;System.Windows.Controls.ControlTemplate&quot;> </xref>."
  remarks: "Os autores de controle usar esse atributo para especificar os <xref:System.Windows.VisualState> <xref:System.Windows.VisualStateGroup>objetos que pertencem a seu controle <xref:System.Windows.Controls.ControlTemplate>.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.VisualStateGroup> e</xref:System.Windows.VisualState>  Por exemplo, suponha que você crie um novo controle que tem dois estados visuais denominados `Focused` e `Unfocused`, de que estão em um <xref:System.Windows.VisualStateGroup>denominado `FocusStates`.</xref:System.Windows.VisualStateGroup>  Para especificar a <xref:System.Windows.Controls.ControlTemplate>autores que eles podem usar esses estados visuais, adicione dois atributos TemplateVisualStateAttribute para a assinatura de classe do controle.</xref:System.Windows.Controls.ControlTemplate>  Especifique que o <xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A>é de propriedade `FocusStates` e que o <xref:System.Windows.TemplateVisualStateAttribute.Name%2A>é de propriedade `Focused` para um e `Unfocused` para os outros.</xref:System.Windows.TemplateVisualStateAttribute.Name%2A> </xref:System.Windows.TemplateVisualStateAttribute.GroupName%2A>"
  example:
  - "The following example shows the class signature for the `NumericUpDown` control.  This example specifies that the `NumericUpDown` control uses four visual states.  Two states, named `Positive` and `Negative`, are in the <xref:System.Windows.VisualStateGroup> named `ValueStates`.  The other two states, name `Focused` and `Unfocused`, are in the <xref:System.Windows.VisualStateGroup> named `FocusedStates`.  For the entire example, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[VSMCustomControl#ClassAttributes](~/add/codesnippet/csharp/vsmcustomcontrol/numericupdown.cs#classattributes)]\n [!code-vb[VSMCustomControl#ClassAttributes](~/add/codesnippet/visualbasic/vsmcustomcontrolvb2/numericupdown.vb#classattributes)]"
  syntax:
    content: >-
      [System.AttributeUsage(System.AttributeTargets.Class, AllowMultiple=true)]

      public sealed class TemplateVisualStateAttribute : Attribute
  inheritance:
  - System.Attribute
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.TemplateVisualStateAttribute.#ctor
  id: '#ctor'
  parent: System.Windows.TemplateVisualStateAttribute
  langs:
  - csharp
  name: TemplateVisualStateAttribute()
  nameWithType: TemplateVisualStateAttribute.TemplateVisualStateAttribute()
  fullName: System.Windows.TemplateVisualStateAttribute.TemplateVisualStateAttribute()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.TemplateVisualStateAttribute&quot;> </xref> classe."
  syntax:
    content: public TemplateVisualStateAttribute ();
    parameters: []
  overload: System.Windows.TemplateVisualStateAttribute.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.TemplateVisualStateAttribute.GroupName
  id: GroupName
  parent: System.Windows.TemplateVisualStateAttribute
  langs:
  - csharp
  name: GroupName
  nameWithType: TemplateVisualStateAttribute.GroupName
  fullName: System.Windows.TemplateVisualStateAttribute.GroupName
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o nome do grupo ao qual pertence o estado."
  remarks: "A propriedade GroupName corresponde do <xref:System.Windows.VisualStateGroup.Name%2A?displayProperty=fullName>propriedade de um <xref:System.Windows.VisualStateGroup>objeto.</xref:System.Windows.VisualStateGroup> </xref:System.Windows.VisualStateGroup.Name%2A?displayProperty=fullName> Especifique o que <xref:System.Windows.VisualStateGroup>um <xref:System.Windows.VisualState>pertence, defina a propriedade GroupName.</xref:System.Windows.VisualState> </xref:System.Windows.VisualStateGroup>"
  example:
  - "The following example shows the class signature for the `NumericUpDown` control.  This example specifies that the `NumericUpDown` control uses four visual states.  Two states, named `Positive` and `Negative`, are in the <xref:System.Windows.VisualStateGroup> named `ValueStates`.  The other two states, name `Focused` and `Unfocused`, are in the <xref:System.Windows.VisualStateGroup> named `FocusedStates`.  For the entire example, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[VSMCustomControl#ClassAttributes](~/add/codesnippet/csharp/vsmcustomcontrol/numericupdown.cs#classattributes)]\n [!code-vb[VSMCustomControl#ClassAttributes](~/add/codesnippet/visualbasic/vsmcustomcontrolvb2/numericupdown.vb#classattributes)]"
  syntax:
    content: public string GroupName { get; set; }
    return:
      type: System.String
      description: "O nome do <xref href=&quot;System.Windows.VisualStateGroup&quot;> </xref> que o estado pertence."
  overload: System.Windows.TemplateVisualStateAttribute.GroupName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.TemplateVisualStateAttribute.Name
  id: Name
  parent: System.Windows.TemplateVisualStateAttribute
  langs:
  - csharp
  name: Name
  nameWithType: TemplateVisualStateAttribute.Name
  fullName: System.Windows.TemplateVisualStateAttribute.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o nome do estado que o controle pode ser incluído."
  remarks: "A propriedade de nome corresponde à <xref:System.Windows.VisualState.Name%2A?displayProperty=fullName>propriedade de <xref:System.Windows.VisualState>.</xref:System.Windows.VisualState> </xref:System.Windows.VisualState.Name%2A?displayProperty=fullName> Para especificar quais <xref:System.Windows.VisualState>pertence a um controle <xref:System.Windows.Controls.ControlTemplate>, defina a propriedade Name.</xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.VisualState>"
  example:
  - "The following example shows the class signature for the `NumericUpDown` control.  This example specifies that the `NumericUpDown` control uses four visual states.  Two states, named `Positive` and `Negative`, are in the <xref:System.Windows.VisualStateGroup> named `ValueStates`.  The other two states, name `Focused` and `Unfocused`, are in the <xref:System.Windows.VisualStateGroup> named `FocusedStates`.  For the entire example, see [Creating a Control That Has a Customizable Appearance](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[VSMCustomControl#ClassAttributes](~/add/codesnippet/csharp/vsmcustomcontrol/numericupdown.cs#classattributes)]\n [!code-vb[VSMCustomControl#ClassAttributes](~/add/codesnippet/visualbasic/vsmcustomcontrolvb2/numericupdown.vb#classattributes)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome do estado que o controle pode ser incluído."
  overload: System.Windows.TemplateVisualStateAttribute.Name*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Attribute
  isExternal: false
  name: System.Attribute
- uid: System.Windows.TemplateVisualStateAttribute.#ctor
  parent: System.Windows.TemplateVisualStateAttribute
  isExternal: false
  name: TemplateVisualStateAttribute()
  nameWithType: TemplateVisualStateAttribute.TemplateVisualStateAttribute()
  fullName: System.Windows.TemplateVisualStateAttribute.TemplateVisualStateAttribute()
- uid: System.Windows.TemplateVisualStateAttribute.GroupName
  parent: System.Windows.TemplateVisualStateAttribute
  isExternal: false
  name: GroupName
  nameWithType: TemplateVisualStateAttribute.GroupName
  fullName: System.Windows.TemplateVisualStateAttribute.GroupName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.TemplateVisualStateAttribute.Name
  parent: System.Windows.TemplateVisualStateAttribute
  isExternal: false
  name: Name
  nameWithType: TemplateVisualStateAttribute.Name
  fullName: System.Windows.TemplateVisualStateAttribute.Name
- uid: System.Windows.TemplateVisualStateAttribute.#ctor*
  parent: System.Windows.TemplateVisualStateAttribute
  isExternal: false
  name: TemplateVisualStateAttribute
  nameWithType: TemplateVisualStateAttribute.TemplateVisualStateAttribute
- uid: System.Windows.TemplateVisualStateAttribute.GroupName*
  parent: System.Windows.TemplateVisualStateAttribute
  isExternal: false
  name: GroupName
  nameWithType: TemplateVisualStateAttribute.GroupName
- uid: System.Windows.TemplateVisualStateAttribute.Name*
  parent: System.Windows.TemplateVisualStateAttribute
  isExternal: false
  name: Name
  nameWithType: TemplateVisualStateAttribute.Name
