### YamlMime:ManagedReference
items:
- uid: System.Speech.Recognition.RecognizedPhrase
  id: RecognizedPhrase
  children:
  - System.Speech.Recognition.RecognizedPhrase.Confidence
  - System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  - System.Speech.Recognition.RecognizedPhrase.Grammar
  - System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  - System.Speech.Recognition.RecognizedPhrase.Homophones
  - System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  - System.Speech.Recognition.RecognizedPhrase.Semantics
  - System.Speech.Recognition.RecognizedPhrase.Text
  - System.Speech.Recognition.RecognizedPhrase.Words
  langs:
  - csharp
  name: RecognizedPhrase
  nameWithType: RecognizedPhrase
  fullName: System.Speech.Recognition.RecognizedPhrase
  type: Class
  summary: "Contém informações detalhadas, geradas pelo reconhecedor de fala sobre a entrada reconhecido."
  remarks: "Essa classe contém informações detalhadas sobre palavras e frases processadas durante operações de reconhecimento de fala, incluindo o seguinte: - o <xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>referências de propriedade de <xref:System.Speech.Recognition.Grammar>que o identificador usado para identificar a entrada.</xref:System.Speech.Recognition.Grammar> </xref:System.Speech.Recognition.RecognizedPhrase.Grammar%2A>      -A <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>propriedade contém o texto normalizado da frase.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>      -A <xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A>propriedade faz referência as informações semânticas contidas no resultado.</xref:System.Speech.Recognition.RecognizedPhrase.Semantics%2A> As informações de semânticas serão um dicionário de nomes de chave de dados semânticos associado.      -A <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>propriedade contém uma coleção ordenada de <xref:System.Speech.Recognition.RecognizedWordUnit>reconhecido de objetos que representam cada palavra na entrada.</xref:System.Speech.Recognition.RecognizedWordUnit> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Cada unidade de palavra contém o formato de exibição, formato lexical e informações de pronúncia para a palavra correspondente.      -A <xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>propriedade contém informações sobre substituição de palavras especializada.</xref:System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits%2A>      -A <xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>e <xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A>propriedades contêm informações sobre alternativas de reconhecimento que têm a pronúncia iguais ou semelhante.</xref:System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Homophones%2A>      -O valor de <xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>propriedade indica o grau de certeza, atribuída pelo reconhecedor de fala, uma frase reconhecida corresponde à entrada.</xref:System.Speech.Recognition.RecognizedPhrase.Confidence%2A>       O reconhecedor de fala retorna resultados de reconhecimento em um <xref:System.Speech.Recognition.RecognitionResult>objeto, que herda de RecognizedPhrase.</xref:System.Speech.Recognition.RecognitionResult> O resultado de reconhecimento <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>propriedade contém uma coleção ordenada de objetos RecognizedPhrase, cada um deles é uma correspondência possível para a entrada para o reconhecedor.</xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>"
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event and some of the information associated with the <xref:System.Speech.Recognition.RecognitionResult> object. The <xref:System.Speech.Recognition.RecognitionResult> class derives from the RecognizedPhrase class.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n```"
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{Text}")]

      public class RecognizedPhrase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  id: Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém um valor atribuído pelo identificador, que representa a probabilidade de que uma <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> corresponde a uma determinada entrada."
  remarks: "Pontuações de confiança indica a probabilidade absoluta de uma frase foi reconhecida corretamente. Em vez disso, as pontuações de confiança fornecem um mecanismo para comparar a precisão relativa de várias alternativas de reconhecimento para uma determinada entrada. Isso facilita a retornar o resultado mais preciso de reconhecimento. Por exemplo, se uma frase reconhecida tiver uma pontuação de confiança 0,8, isso não significa que a expressão tem uma 80% de chance de ser a correspondência correta para a entrada.  Isso significa que a frase é mais provável de ser a correspondência correta para a entrada de outros resultados que têm confiança pontuações inferior 0,8.       Uma pontuação de confiança por conta própria não é significativa, a menos que você tenha resultados alternativos para comparação, a partir da mesma operação de reconhecimento ou anteriores reconhecimentos da mesma entrada. Os valores são usados para classificar candidato alternativo frases retornados pelo <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>propriedade <xref:System.Speech.Recognition.RecognitionResult>objetos.</xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>       Valores de confiança são relativas e exclusivo para cada mecanismo de reconhecimento. Valores de confiança retornados por dois mecanismos de reconhecimento de diferentes não podem ser comparados significativamente.       Um mecanismo de reconhecimento de fala pode atribuir uma baixa pontuação de confiança de entrada de fala por várias razões, incluindo interferência de plano de fundo, inarticulate fala, ou palavras inesperadas ou sequências de palavra. Se seu aplicativo estiver usando um <xref:System.Speech.Recognition.SpeechRecognitionEngine>instância, você pode modificar o nível de confiança no qual fala entrada é aceita ou rejeitada com um do <xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A>métodos.</xref:System.Speech.Recognition.SpeechRecognitionEngine.UpdateRecognizerSetting%2A> </xref:System.Speech.Recognition.SpeechRecognitionEngine> Os limites de confiança do reconhecedor compartilhado, gerenciado pelo <xref:System.Speech.Recognition.SpeechRecognizer>, são associados a um perfil de usuário e armazenadas no registro do Windows.</xref:System.Speech.Recognition.SpeechRecognizer> Aplicativos não devem gravar as alterações no registro para as propriedades do reconhecedor compartilhado.       O <xref:System.Speech.Recognition.RecognitionResult.Alternates%2A>propriedade o <xref:System.Speech.Recognition.RecognitionResult>objeto contém uma coleção ordenada de <xref:System.Speech.Recognition.RecognizedPhrase>objetos, cada um deles é uma correspondência possível para a entrada para o reconhecedor.</xref:System.Speech.Recognition.RecognizedPhrase> </xref:System.Speech.Recognition.RecognitionResult> </xref:System.Speech.Recognition.RecognitionResult.Alternates%2A> As alternativas são ordenadas do mais alto de confiança mais baixa."
  example:
  - "The following example shows a handler for a <xref:System.Speech.Recognition.SpeechRecognitionEngine.SpeechRecognized?displayProperty=fullName>, <xref:System.Speech.Recognition.SpeechRecognizer.SpeechRecognized?displayProperty=fullName>, or <xref:System.Speech.Recognition.Grammar.SpeechRecognized?displayProperty=fullName> event. The example shows information associated with the <xref:System.Speech.Recognition.RecognitionResult> object, some of which is derived from <xref:System.Speech.Recognition.RecognizedPhrase>. The handler displays confidence scores for a recognized phrase as well as for recognition alternates.  \n  \n```c#  \nvoid SpeechRecognizedHandler(object sender, SpeechRecognizedEventArgs e)  \n{  \n  if (e.Result == null) return;  \n  \n  // Add event handler code here.  \n  \n  // The following code illustrates some of the information available  \n  // in the recognition result.  \n  Console.WriteLine(\"Recognition result summary:\");  \n  Console.WriteLine(  \n    \"  Recognized phrase: {0}\\n\" +   \n    \"  Confidence score {1}\\n\" +   \n    \"  Grammar used: {2}\\n\",   \n    e.Result.Text, e.Result.Confidence, e.Result.Grammar.Name);  \n  \n  // Display the semantic values in the recognition result.  \n  Console.WriteLine(\"  Semantic results:\");  \n  foreach (KeyValuePair<String, SemanticValue> child in e.Result.Semantics)  \n  {  \n    Console.WriteLine(\"    The {0} city is {1}\",  \n      child.Key, child.Value.Value ?? \"null\");  \n  }  \n  Console.WriteLine();  \n  \n  // Display information about the words in the recognition result.  \n  Console.WriteLine(\"  Word summary: \");  \n  foreach (RecognizedWordUnit word in e.Result.Words)  \n  {  \n    Console.WriteLine(  \n      \"    Lexical form ({1})\" +  \n      \" Pronunciation ({0})\" +  \n      \" Display form ({2})\",  \n      word.Pronunciation, word.LexicalForm, word.DisplayAttributes);  \n  }  \n  \n  // Display information about the audio in the recognition result.  \n  Console.WriteLine(\"  Input audio summary:\\n\" +  \n    \"    Candidate Phrase at:       {0} mSec\\n\" +  \n    \"    Phrase Length:             {1} mSec\\n\" +  \n    \"    Input State Time:          {2}\\n\" +  \n    \"    Input Format:              {3}\\n\",  \n    e.Result.Audio.AudioPosition,  \n    e.Result.Audio.Duration,  \n    e.Result.Audio.StartTime,  \n    e.Result.Audio.Format.EncodingFormat);  \n  \n  // Display information about the alternate recognitions in the recognition result.  \n  Console.WriteLine(\"  Alternate phrase collection:\");  \n  foreach (RecognizedPhrase phrase in e.Result.Alternates)  \n  {  \n    Console.WriteLine(\"    Phrase: \" + phrase.Text);  \n    Console.WriteLine(\"    Confidence score: \" + phrase.Confidence);  \n  }  \n}  \n  \n```"
  syntax:
    content: public float Confidence { get; }
    return:
      type: System.Single
      description: "Uma medida relativa de certeza do reconhecimento correto de uma frase. O valor é de 0.0 a 1.0, de baixa para alta confiança, respectivamente."
  overload: System.Speech.Recognition.RecognizedPhrase.Confidence*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  id: ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
  type: Method
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Retorna um documento de linguagem (SML) de marcação semântica para as informações semânticas de <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> objeto."
  remarks: "Para obter informações sobre a linguagem de marcação semântica (SML), consulte o [referência de linguagem de marcação semântica](http://msdn.microsoft.com/en-us/f9d83443-2cac-49bc-a447-210feda62f5d)."
  example:
  - "In the following example, a method returns a string that contains the SML for the semantics of a recognized phrase.  \n  \n```  \nprivate string GetSemanticsSML(RecognizedPhrase result)  \n{  \n  if (result.Semantics.Count > 0)  \n  {  \n    return result.ConstructSmlFromSemantics().CreateNavigator().OuterXml;  \n  }  \n  else  \n  {  \n    return null;  \n  }  \n}  \n```"
  syntax:
    content: public System.Xml.XPath.IXPathNavigable ConstructSmlFromSemantics ();
    parameters: []
    return:
      type: System.Xml.XPath.IXPathNavigable
      description: "Retorna uma descrição de SML da semântica do <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref> como um [XPath](http://msdn.microsoft.com/library/ms256115.aspx) objeto navegável."
  overload: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  id: Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém o <xref href=&quot;System.Speech.Recognition.Grammar&quot;> </xref> que o reconhecedor de fala usado para retornar o <xref href=&quot;System.Speech.Recognition.RecognizedPhrase&quot;> </xref>."
  syntax:
    content: public System.Speech.Recognition.Grammar Grammar { get; }
    return:
      type: System.Speech.Recognition.Grammar
      description: "O objeto de gramática que o reconhecedor de fala usado para identificar a entrada."
  overload: System.Speech.Recognition.RecognizedPhrase.Grammar*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  id: HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém o identificador para o grupo de homophone da frase."
  remarks: "O reconhecedor de fala atribui um identificador de grupo para todas as alternativas de reconhecimento que possui a mesma pronúncia. Para cada alternativo que tenha uma pronúncia exclusiva, o reconhecedor cria um grupo de homophone. O reconhecedor de fala gera o novo grupo de identificadores para cada operação de reconhecimento e os identificadores não podem ser usados para comparar alternativas de gerados a partir de operações de reconhecimento separado.       Por exemplo, para um resultado de reconhecimento que continha as alternativas &quot;a história&quot;, &quot;o final&quot; e &quot;a ale&quot;, as primeiras duas alternativas deve pertencer a um grupo de homophone e a última alternativa seria o único membro de um segundo grupo homophone."
  syntax:
    content: public int HomophoneGroupId { get; }
    return:
      type: System.Int32
      description: "O identificador para o grupo de homophone da frase."
  overload: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  id: Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém uma coleção de alternativas de reconhecimento que possui a mesma pronúncia como essa frase reconhecida."
  remarks: "Essa propriedade retorna todas as outras alternativas de reconhecimento que possui a mesma pronúncia como essa frase reconhecida.       Por exemplo, para um resultado de reconhecimento que continha as alternativas, &quot;a história&quot; e &quot;o final&quot;, a coleção de homófonos para a primeira alternativa, &quot;a história&quot; conteria a segunda frase, &quot;o final&quot;. A coleção de homófonos para a segunda alternativa, &quot;final&quot; conteria a primeira frase, &quot;a história&quot;."
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase> Homophones { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
      description: "Uma coleção somente leitura de alternativas de reconhecimento que possui a mesma pronúncia como essa frase reconhecida."
  overload: System.Speech.Recognition.RecognizedPhrase.Homophones*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  id: ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém informações sobre o texto que o reconhecedor de fala foram alterado como parte da fala em texto normalização."
  remarks: "Como parte do processo de reconhecimento de fala, o reconhecedor de fala normaliza a entrada reconhecida em um formato de exibição.       Por exemplo, a entrada de fala, &quot;vinte e cinco dólares&quot;, gera um resultado de reconhecimento onde o <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>propriedade contém as palavras &quot;vinte&quot;, &quot;cinco&quot; e &quot;dólares&quot; e o <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>propriedade contém a frase &quot;$25,00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> </xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Para obter mais informações sobre a normalização do texto, consulte a <xref:System.Speech.Recognition.ReplacementText>classe.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText> ReplacementWordUnits { get; }
    return:
      type: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
      description: "Uma coleção de <xref href=&quot;System.Speech.Recognition.ReplacementText&quot;> </xref> objetos que descrevem as seções de texto que o reconhecedor de fala substituído quando ele normalizado entrada reconhecida."
  overload: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  id: Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém as informações semânticas que está associadas com a frase reconhecida."
  remarks: "Uma gramática de reconhecimento de fala pode incluir informações semânticas. Quando o reconhecedor de fala gera um resultado de reconhecimento para tal uma gramática, as informações de semânticas podem ser incluídas no resultado reconhecimento, acordo com as regras da gramática e a entrada para o reconhecedor. Para obter mais informações sobre semântica, consulte [Noções básicas sobre resultados de semântica](http://msdn.microsoft.com/en-us/2a9dbd8b-cf6d-42cd-bbb9-ca0b3e534005) e <xref:System.Speech.Recognition.SemanticResultKey>e <xref:System.Speech.Recognition.SemanticResultValue>classes.</xref:System.Speech.Recognition.SemanticResultValue> </xref:System.Speech.Recognition.SemanticResultKey>"
  example:
  - "The following example defines a method that gets specific semantic information from a recognized phrase. When this method returns, it contains the value for the semantic key, or null if the value was not retrieved. This method checks only for top-level keys. Since the semantic information is contained in a tree of values, lower-level keys must be accessed through the returned semantic value.  \n  \n```  \nstatic bool TryGetSemanticValue(  \n      RecognizedPhrase phrase, string key, out SemanticValue value)  \n{  \n  value = null;  \n  bool found = phrase.Semantics.ContainsKey(key);  \n  if (found)  \n  {  \n    value = phrase.Semantics[key];  \n  }  \n  \n  return found;  \n}  \n```"
  syntax:
    content: public System.Speech.Recognition.SemanticValue Semantics { get; }
    return:
      type: System.Speech.Recognition.SemanticValue
      description: "As informações semânticas associadas com a frase reconhecida."
  overload: System.Speech.Recognition.RecognizedPhrase.Semantics*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  id: Text
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém o texto normalizado gerado por um reconhecedor de fala de entrada reconhecido."
  remarks: "Como parte do processo de reconhecimento de fala, o reconhecedor de fala executa a normalização de fala em texto de entrada em um formato de exibição reconhecida.       Por exemplo, a entrada de fala, &quot;vinte e cinco dólares&quot;, gera um resultado de reconhecimento onde o <xref:System.Speech.Recognition.RecognizedPhrase.Words%2A>propriedade contém as palavras &quot;vinte&quot;, &quot;cinco&quot; e &quot;reais&quot;, e a propriedade de texto contém a frase &quot;$25,00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Words%2A> Para obter mais informações sobre a normalização do texto, consulte <xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public string Text { get; }
    return:
      type: System.String
      description: "O texto normalizado gerado por um reconhecedor de fala de entrada reconhecido."
  overload: System.Speech.Recognition.RecognizedPhrase.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  id: Words
  parent: System.Speech.Recognition.RecognizedPhrase
  langs:
  - csharp
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
  type: Property
  assemblies:
  - System.Speech
  namespace: System.Speech.Recognition
  summary: "Obtém as palavras geradas por um reconhecedor de fala de entrada reconhecido."
  remarks: "Esta propriedade contém as palavras produzidas da entrada, o reconhecedor de fala antes da normalização de fala em texto do reconhecedor do resultado.       Por exemplo, a entrada de fala, &quot;vinte e cinco dólares&quot;, gera um resultado de reconhecimento em que a propriedade palavras contém as palavras &quot;vinte&quot;, &quot;cinco&quot; e &quot;dólares&quot;, e o <xref:System.Speech.Recognition.RecognizedPhrase.Text%2A>propriedade contém a frase &quot;$25,00&quot;.</xref:System.Speech.Recognition.RecognizedPhrase.Text%2A> Para obter mais informações sobre a normalização do texto, consulte <xref:System.Speech.Recognition.ReplacementText>.</xref:System.Speech.Recognition.ReplacementText>"
  syntax:
    content: public System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit> Words { get; }
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
      description: "A coleção de <xref href=&quot;System.Speech.Recognition.RecognizedWordUnit&quot;> </xref> objetos gerados por um reconhecedor de fala para entrada reconhecida."
  overload: System.Speech.Recognition.RecognizedPhrase.Words*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
  fullName: System.Speech.Recognition.RecognizedPhrase.Confidence
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics()
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics()
  fullName: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics()
- uid: System.Xml.XPath.IXPathNavigable
  parent: System.Xml.XPath
  isExternal: false
  name: IXPathNavigable
  nameWithType: IXPathNavigable
  fullName: System.Xml.XPath.IXPathNavigable
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
  fullName: System.Speech.Recognition.RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.Grammar
  parent: System.Speech.Recognition
  isExternal: false
  name: Grammar
  nameWithType: Grammar
  fullName: System.Speech.Recognition.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
  fullName: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
  fullName: System.Speech.Recognition.RecognizedPhrase.Homophones
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedPhrase}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedPhrase>
  nameWithType: ReadOnlyCollection<RecognizedPhrase>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedPhrase>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedPhrase
    name: RecognizedPhrase
    nameWithType: RecognizedPhrase
    fullName: RecognizedPhrase
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
  fullName: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits
- uid: System.Collections.ObjectModel.Collection{System.Speech.Recognition.ReplacementText}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: Collection<ReplacementText>
  nameWithType: Collection<ReplacementText>
  fullName: System.Collections.ObjectModel.Collection<System.Speech.Recognition.ReplacementText>
  spec.csharp:
  - uid: System.Collections.ObjectModel.Collection`1
    name: Collection
    nameWithType: Collection
    fullName: Collection<System.Speech.Recognition.ReplacementText>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.ReplacementText
    name: ReplacementText
    nameWithType: ReplacementText
    fullName: ReplacementText
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
  fullName: System.Speech.Recognition.RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.SemanticValue
  parent: System.Speech.Recognition
  isExternal: false
  name: SemanticValue
  nameWithType: SemanticValue
  fullName: System.Speech.Recognition.SemanticValue
- uid: System.Speech.Recognition.RecognizedPhrase.Text
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
  fullName: System.Speech.Recognition.RecognizedPhrase.Text
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Speech.Recognition.RecognizedPhrase.Words
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
  fullName: System.Speech.Recognition.RecognizedPhrase.Words
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.Speech.Recognition.RecognizedWordUnit}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<RecognizedWordUnit>
  nameWithType: ReadOnlyCollection<RecognizedWordUnit>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.Speech.Recognition.RecognizedWordUnit>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Speech.Recognition.RecognizedWordUnit
    name: RecognizedWordUnit
    nameWithType: RecognizedWordUnit
    fullName: RecognizedWordUnit
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Speech.Recognition.RecognizedPhrase.Confidence*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Confidence
  nameWithType: RecognizedPhrase.Confidence
- uid: System.Speech.Recognition.RecognizedPhrase.ConstructSmlFromSemantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ConstructSmlFromSemantics
  nameWithType: RecognizedPhrase.ConstructSmlFromSemantics
- uid: System.Speech.Recognition.RecognizedPhrase.Grammar*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Grammar
  nameWithType: RecognizedPhrase.Grammar
- uid: System.Speech.Recognition.RecognizedPhrase.HomophoneGroupId*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: HomophoneGroupId
  nameWithType: RecognizedPhrase.HomophoneGroupId
- uid: System.Speech.Recognition.RecognizedPhrase.Homophones*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Homophones
  nameWithType: RecognizedPhrase.Homophones
- uid: System.Speech.Recognition.RecognizedPhrase.ReplacementWordUnits*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: ReplacementWordUnits
  nameWithType: RecognizedPhrase.ReplacementWordUnits
- uid: System.Speech.Recognition.RecognizedPhrase.Semantics*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Semantics
  nameWithType: RecognizedPhrase.Semantics
- uid: System.Speech.Recognition.RecognizedPhrase.Text*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Text
  nameWithType: RecognizedPhrase.Text
- uid: System.Speech.Recognition.RecognizedPhrase.Words*
  parent: System.Speech.Recognition.RecognizedPhrase
  isExternal: false
  name: Words
  nameWithType: RecognizedPhrase.Words
