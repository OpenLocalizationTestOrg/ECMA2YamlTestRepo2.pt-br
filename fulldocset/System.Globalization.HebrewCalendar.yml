### YamlMime:ManagedReference
items:
- uid: System.Globalization.HebrewCalendar
  id: HebrewCalendar
  children:
  - System.Globalization.HebrewCalendar.#ctor
  - System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)
  - System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)
  - System.Globalization.HebrewCalendar.AlgorithmType
  - System.Globalization.HebrewCalendar.Eras
  - System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)
  - System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)
  - System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)
  - System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.GetEra(System.DateTime)
  - System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.GetMonth(System.DateTime)
  - System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.GetYear(System.DateTime)
  - System.Globalization.HebrewCalendar.HebrewEra
  - System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.MaxSupportedDateTime
  - System.Globalization.HebrewCalendar.MinSupportedDateTime
  - System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)
  - System.Globalization.HebrewCalendar.TwoDigitYearMax
  langs:
  - csharp
  name: HebrewCalendar
  nameWithType: HebrewCalendar
  fullName: System.Globalization.HebrewCalendar
  type: Class
  summary: "Representa o calendário hebraico."
  remarks: "O calendário hebraico reconhece dois eras: A.C. (antes era comum) e. (Latino &quot;Anno Mundi&quot;, que significa que &quot;o ano do mundo&quot;). Essa implementação da classe HebrewCalendar reconhece somente o era atual (A.M.) e os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).      > [!NOTE] > Para obter informações sobre como usar a classe HebrewCalendar e as outras classes de calendário no .NET Framework, consulte [trabalhando com calendários](~/add/includes/ajax-current-ext-md.md).       Em cada ciclo de 19 anos que termina com um ano divisível pelo 19, 3ª, 6º, 8, 11, 14, 17 e 19 anos são bissextos. Um ano comum pode ter de 353 355 dias, dependendo do posicionamento do Judeu feriados. Um ano bissexto pode ter de 383 385 dias.       O calendário hebraico tem 12 meses durante anos comuns e 13 meses durante os anos bissextos: | O valor de GetMonth (ano comum) | O valor de GetMonth (ano bissexto) | Mês | Dias em anos comuns | Dias em anos bissextos |   |------------------------------------|----------------------------------|-----------|--------------------------|------------------------|   | 1 | 1 | תשרי (Tishrei) | 30 | 30 |   | 2 | 2 | חשון (Cheshvan) | 29/30 | 29/30 |   | 3 | 3 | כסלו (Kislev) | 29/30 | 29/30 |   | 4 | 4 | טבת (Tevet) | 29 | 29 |   | 5 | 5 | שבט (Shevat) | 30 | 30 |   | 6 |-| אדר (Adar) | 29 |-|   |-| 6 | אדר א (Adar Alef) |-| 30 |   |-| 7 | אדר ב (Adar Beit) |-| 29 |   | 7 | 8 | ניסן (Nissan) | 30 | 30 |   | 8 | 9 | אייר (Iyar) | 29 | 29 |   | 9 | 10 | סיון (Sivan) | 30 | 30 |   | 10 | 11 | תמוז (Tamuz) | 29 | 29 |   | 11 | 12 | אב (Av) | 30 | 30 |   | 12 | 13 | אלול (Elul) | 29 | 29 |       Os dias em Cheshvan e Kislev variam, dependendo o posicionamento de Judeu feriados. Durante os anos bissextos, Adar é substituído por Adar Alef com 30 dias e Adar Beit com 29 dias. Adar Alef é considerado o mês de salto. O último dia do Adar Alef e todos os dias em Adar Beit são considerados leap dias; ou seja, o <xref:System.Globalization.HebrewCalendar.IsLeapDay%2A>método retorna `true` para estes dias.</xref:System.Globalization.HebrewCalendar.IsLeapDay%2A>       A data de 1º de janeiro de 2001. no calendário gregoriano é equivalente ao sexto dia do Tevet no ano 5761 A.M. o calendário hebraico.       Cada <xref:System.Globalization.CultureInfo>suporta um conjunto de calendários.</xref:System.Globalization.CultureInfo> O <xref:System.Globalization.CultureInfo.Calendar%2A>propriedade retorna o calendário padrão para a cultura e o <xref:System.Globalization.CultureInfo.OptionalCalendars%2A>propriedade retorna uma matriz que contém todos os calendários suportados pela cultura.</xref:System.Globalization.CultureInfo.OptionalCalendars%2A> </xref:System.Globalization.CultureInfo.Calendar%2A> Para alterar o calendário usado por um <xref:System.Globalization.CultureInfo>o aplicativo deve definir a <xref:System.Globalization.DateTimeFormatInfo.Calendar%2A>propriedade <xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName>para um novo <xref:System.Globalization.Calendar>.</xref:System.Globalization.Calendar> </xref:System.Globalization.CultureInfo.DateTimeFormat%2A?displayProperty=fullName> </xref:System.Globalization.DateTimeFormatInfo.Calendar%2A> </xref:System.Globalization.CultureInfo>"
  example:
  - "The following example creates a file that contains the date ranges supported by the HebrewCalendar class, and displays the number of days in each month of the year 5772.  \n  \n [!code-cs[System.Globalization.HebrewCalendar.Class#1](~/add/codesnippet/csharp/t-system.globalization.h_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar.Class#1](~/add/codesnippet/visualbasic/t-system.globalization.h_1.vb)]  \n  \n The example instantiates a HebrewCalendar object and makes it the current calendar of a Hebrew (Israel) <xref:System.Globalization.CultureInfo> object. It then makes Hebrew (Israel) the current thread culture. This causes the common language runtime to interpret all dates and times in relation to the Hebrew calendar."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public class HebrewCalendar : System.Globalization.Calendar
  inheritance:
  - System.Globalization.Calendar
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.#ctor
  id: '#ctor'
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: HebrewCalendar()
  nameWithType: HebrewCalendar.HebrewCalendar()
  fullName: System.Globalization.HebrewCalendar.HebrewCalendar()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> classe."
  syntax:
    content: public HebrewCalendar ();
    parameters: []
  overload: System.Globalization.HebrewCalendar.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)
  id: AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: AddMonths(DateTime,Int32)
  nameWithType: HebrewCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.HebrewCalendar.AddMonths(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna um <xref:System.DateTime>que é o número especificado de meses longe especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).</xref:System.Globalization.HebrewCalendar>       A parte do dia de resultante <xref:System.DateTime>é afetado se o dia resultante não é um dia válido no mês do ano resultante resultante.</xref:System.DateTime> Ele é alterado para o último dia válido no mês do ano resultante resultante. A parte do ano de resultante <xref:System.DateTime>é afetado se o mês resultante está fora do ano de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime> Essa implementação oferece suporte somente a era atual. Portanto, <xref:System.ArgumentException>é gerada se o ano resultante é fora era de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.ArgumentException> A parte de hora do dia de resultante <xref:System.DateTime>permanece o mesmo que o especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Por exemplo, se o mês especificado for Av, que tem 30 dias, o dia especificado é 30 o dia do mês e o valor da `months` parâmetro for 5, o ano resultante é um mais do que o ano especificado, o mês resultante é Tevet e o dia resultante é o dia 29, que é o último dia do Tevet.       Se o valor da `months` parâmetro for negativo, o resultante <xref:System.DateTime>é anterior à <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       A<xref:System.DateTime.Kind%2A> propriedade de retornado <xref:System.DateTime>valor sempre é igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Você pode preservar o <xref:System.DateTime.Kind%2A>propriedade do `time` parâmetro ao chamar o <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>método, como mostra o exemplo a seguir.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#5](~/add/codesnippet/visualbasic/m-system.globalization.h_20_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#5  ](~/add/codesnippet/csharp/m-system.globalization.h_20_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_20_2.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_20_2.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_20_2.cpp)]"
  syntax:
    content: public override DateTime AddMonths (DateTime time, int months);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ao qual adicionar `months`.</xref:System.DateTime>"
    - id: months
      type: System.Int32
      description: "O número de meses a adicionar."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que resulta da adição do número especificado de meses especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.AddMonths*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultante <xref:System.DateTime>está fora do intervalo com suporte.</xref:System.DateTime>"
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>months</code>é menor que-120,000 ou maior que 120.000."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)
  id: AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: AddYears(DateTime,Int32)
  nameWithType: HebrewCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.HebrewCalendar.AddYears(DateTime,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna um <xref:System.DateTime>que é o número especificado de anos longe especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  remarks: "Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).</xref:System.Globalization.HebrewCalendar>       A parte do dia de resultante <xref:System.DateTime>é afetado se o dia resultante não é um dia válido no mês do ano resultante resultante.</xref:System.DateTime> Ele é alterado para o último dia válido no mês do ano resultante resultante. Por exemplo, Cheshvan pode ter 29 ou 30 dias, dependendo do posicionamento do Judeu feriados. Suponha que Cheshvan tem 30 dias do ano atual e 29 no ano seguinte. Se a data especificada é o dia 30 de Cheshvan no ano atual e o valor de `years` é 1, a data resultante será o dia 29 de Cheshvan no ano seguinte.       A parte do mês de resultante <xref:System.DateTime>é afetado se o mês resultante não é um mês válido no ano resultante.</xref:System.DateTime> Ele é alterado para o último mês válido no ano resultante. Por exemplo, se o mês no `time` parâmetro é de 13 mês de um ano bissexto e o valor de `years` é 1, o mês resultante <xref:System.DateTime>é o 12º mês do ano seguinte, que é um ano não bissexto.</xref:System.DateTime> Observe que mesmo quando não altera a parte do mês, ela talvez ainda se referir a um mês diferente. Por exemplo, Adar Beit é o mês 7 anos bissextos, mas Nissan é o mês 7 em comum anos.       Essa implementação oferece suporte somente a era atual. Portanto, <xref:System.ArgumentException>é gerada se o ano resultante é fora era de <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.ArgumentException>       A parte de hora do dia de resultante <xref:System.DateTime>permanece o mesmo que o especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>       Se `years` for negativo, o resultante <xref:System.DateTime>é anterior à <xref:System.DateTime>.</xref:System.DateTime> especificado</xref:System.DateTime>       A<xref:System.DateTime.Kind%2A> propriedade de retornado <xref:System.DateTime>valor sempre é igual a <xref:System.DateTimeKind?displayProperty=fullName>.</xref:System.DateTimeKind?displayProperty=fullName> </xref:System.DateTime> </xref:System.DateTime.Kind%2A> Você pode preservar o <xref:System.DateTime.Kind%2A>propriedade do `time` parâmetro ao chamar o <xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName>método, como mostra o exemplo a seguir.</xref:System.DateTime.SpecifyKind%2A?displayProperty=fullName> </xref:System.DateTime.Kind%2A>       [!code-vb[System.Globalization.Calendar.AddMethods#8](~/add/codesnippet/visualbasic/m-system.globalization.h_6_1.vb)][!code-cs[System.Globalization.Calendar.AddMethods#8  ](~/add/codesnippet/csharp/m-system.globalization.h_6_1.cs)]"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_6_2.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_6_2.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_6_2.cpp)]"
  syntax:
    content: public override DateTime AddYears (DateTime time, int years);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ao qual adicionar `years`.</xref:System.DateTime>"
    - id: years
      type: System.Int32
      description: "O número de anos a adicionar."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que resulta da adição do número especificado de anos especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.AddYears*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Resultante <xref:System.DateTime>está fora do intervalo com suporte.</xref:System.DateTime>"
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.AlgorithmType
  id: AlgorithmType
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: AlgorithmType
  nameWithType: HebrewCalendar.AlgorithmType
  fullName: System.Globalization.HebrewCalendar.AlgorithmType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém um valor que indica se o calendário atual é solar baseado, lunar ou uma combinação de ambos."
  remarks: ''
  example:
  - "The following example uses reflection to instantiate each <xref:System.Globalization.Calendar> type found in the .NET Framework and displays the value of its <xref:System.Globalization.Calendar.AlgorithmType%2A> property.  \n  \n [!code-cs[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/csharp/p-system.globalization.h_6_1.cs)]\n [!code-vb[System.Globalization.Calendar.AlgorithmType#1](~/add/codesnippet/visualbasic/p-system.globalization.h_6_1.vb)]"
  syntax:
    content: public override System.Globalization.CalendarAlgorithmType AlgorithmType { get; }
    return:
      type: System.Globalization.CalendarAlgorithmType
      description: "Sempre retorna <xref href=&quot;System.Globalization.CalendarAlgorithmType&quot;> </xref>."
  overload: System.Globalization.HebrewCalendar.AlgorithmType*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.Eras
  id: Eras
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: Eras
  nameWithType: HebrewCalendar.Eras
  fullName: System.Globalization.HebrewCalendar.Eras
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a lista de eras no <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref>."
  remarks: 'O calendário hebraico reconhece dois eras: A.C. (antes era comum) e. (Latino &quot;Anno Mundi&quot;, que significa que &quot;o ano do mundo&quot;). Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente o era atual (A.M.).</xref:System.Globalization.HebrewCalendar> Essa propriedade sempre retorna uma matriz com apenas um elemento.'
  syntax:
    content: public override int[] Eras { get; }
    return:
      type: System.Int32[]
      description: "Uma matriz de inteiros que representa os eras no <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> tipo. O valor de retorno é sempre uma matriz que contém um elemento igual a <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;> </xref>."
  overload: System.Globalization.HebrewCalendar.Eras*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)
  id: GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDayOfMonth(DateTime)
  nameWithType: HebrewCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o dia do mês em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_8_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_8_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_8_1.cpp)]"
  syntax:
    content: public override int GetDayOfMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro de 1 a 30 que representa o dia do mês em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.HebrewCalendar.GetDayOfMonth*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)
  id: GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDayOfWeek(DateTime)
  nameWithType: HebrewCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfWeek(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o dia da semana especificado <xref:System.DateTime>.</xref:System.DateTime>"
  remarks: "Os valores de <xref:System.DayOfWeek>são da seguinte maneira: | Valor de DayOfWeek | Dia da semana |   |---------------------|-----------------|   | Domingo | יום ראשון (Yom Rishon) |   | Segunda-feira | יום שני (Yom Sheni) |   | Terça-feira | יום שלישי (Yom Shlishi) |   | Quarta-feira | יום רביעי (Yom Reviee) |   | Quinta-feira | יום חמישי (Yom Chamishi) |   | Sexta-feira | יום שישי (Yom Shishi) |   | Sábado | שבת (Shabat) |</xref:System.DayOfWeek>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_7_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_7_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_7_1.cpp)]"
  syntax:
    content: public override DayOfWeek GetDayOfWeek (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.DayOfWeek
      description: "Um <xref:System.DayOfWeek>valor que representa o dia da semana especificado <xref:System.DateTime>.</xref:System.DateTime> </xref:System.DayOfWeek>"
  overload: System.Globalization.HebrewCalendar.GetDayOfWeek*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)
  id: GetDayOfYear(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDayOfYear(DateTime)
  nameWithType: HebrewCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o dia do ano em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: "O dia do ano é definido como o número de dias desde o primeiro dia do ano. Por exemplo, GetDayOfYear para o primeiro dia do primeiro mês retorna 1 e GetDayOfYear para o último dia do último mês retorna o número total de dias em que ano, o que é o mesmo valor retornado pelo <xref:System.Globalization.HebrewCalendar.GetDaysInYear%2A>.</xref:System.Globalization.HebrewCalendar.GetDaysInYear%2A>       Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).</xref:System.Globalization.HebrewCalendar>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_18_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_18_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_18_1.cpp)]"
  syntax:
    content: public override int GetDayOfYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro de 1 a 385 que representa o dia do ano no <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.HebrewCalendar.GetDayOfYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>17 de setembro de 1583 no calendário gregoriano anterior ou maior que <xref:System.Globalization.HebrewCalendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  id: GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: HebrewCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetDaysInMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o número de dias no mês do ano especificado na especificado era especificado."
  remarks: "Por exemplo, este método retorna 29 ou 30 para Cheshvan, dependendo do posicionamento de Judeu feriados.       Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).</xref:System.Globalization.HebrewCalendar>"
  example:
  - "The following code example calls `GetDaysInMonth` for the second month in each of five years in each era.  \n  \n [!code-cs[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/add/codesnippet/csharp/5dbfbdd4-f075-4989-90c3-_1.cs)]\n [!code-cpp[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/add/codesnippet/cpp/5dbfbdd4-f075-4989-90c3-_1.cpp)]\n [!code-vb[System.Globalization.HebrewCalendar.GetDaysInMonth#1](~/add/codesnippet/visualbasic/5dbfbdd4-f075-4989-90c3-_1.vb)]"
  syntax:
    content: public override int GetDaysInMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um inteiro de 1 a 13 que representa o mês."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_Calendar.Eras[Calendar.CurrentEra]&quot; name=&quot;Calendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "O número de dias do mês especificado no ano especificado na era especificado."
  overload: System.Globalization.HebrewCalendar.GetDaysInMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, ou <code>era</code> está fora do intervalo aceito por atual <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> objeto."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)
  id: GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetDaysInYear(Int32,Int32)
  nameWithType: HebrewCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetDaysInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o número de dias do ano especificado na era especificado."
  remarks: "Por exemplo, este método retorna um inteiro de 353 para 355 ou de 383 a 385, dependendo do posicionamento de feriados Judeu e dependendo se `year` é um ano bissexto.       Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).</xref:System.Globalization.HebrewCalendar>"
  example:
  - "The following code example calls `GetDaysInYear` for five years in each era.  \n  \n [!code-cpp[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/add/codesnippet/cpp/m-system.globalization.h_15_1.cpp)]\n [!code-cs[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/add/codesnippet/csharp/m-system.globalization.h_15_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_GetDaysInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_15_1.vb)]"
  syntax:
    content: public override int GetDaysInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "O número de dias do ano especificado na era especificado."
  overload: System.Globalization.HebrewCalendar.GetDaysInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ou <code>era</code> está fora do intervalo aceito por atual <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> objeto."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetEra(System.DateTime)
  id: GetEra(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetEra(DateTime)
  nameWithType: HebrewCalendar.GetEra(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetEra(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna a era em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: 'O calendário hebraico reconhece dois eras: A.C. (antes era comum) e. (Latino &quot;Anno Mundi&quot;, que significa que &quot;o ano do mundo&quot;). Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente o era atual (A.M.) e somente os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).</xref:System.Globalization.HebrewCalendar>'
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_2_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_2_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_2_1.cpp)]"
  syntax:
    content: public override int GetEra (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro que representa a era em <xref:System.DateTime>.</xref:System.DateTime> especificado O valor de retorno é sempre <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;> </xref>."
  overload: System.Globalization.HebrewCalendar.GetEra*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)
  id: GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetLeapMonth(Int32,Int32)
  nameWithType: HebrewCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetLeapMonth(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Calcula o mês de salto para um ano especificado e era."
  remarks: "Em um calendário que oferece suporte a noção de um mês de salto, o mês de salto pode ocorrer depois de um determinado mês ou depois de qualquer mês em um ano. Por exemplo, o <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>método retorna um número entre 1 e 13 que indica o mês associado a uma data especificada.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A> Se houver um mês bissexto entre os oitavo e o nono meses do ano, o <xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>método retorna 8 oitavo mês, 9 para o passo oitavo mês e 10 para o nono mês.</xref:System.Globalization.EastAsianLunisolarCalendar.GetMonth%2A>"
  syntax:
    content: public override int GetLeapMonth (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um ano."
    - id: era
      type: System.Int32
      description: "Uma época. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "Um inteiro positivo que indica o mês no ano especificado e era bissexto. O valor de retorno é 7, se o <code> year </code> e <code> era </code> parâmetros especificam um ano bissexto ou 0 se o ano não é um ano bissexto."
  overload: System.Globalization.HebrewCalendar.GetLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>era</code>is not <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>.       - ou - <code>year</code> é menor do que o ano calendário hebraico 5343 ou maior que o ano calendário hebraico 5999."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetMonth(System.DateTime)
  id: GetMonth(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetMonth(DateTime)
  nameWithType: HebrewCalendar.GetMonth(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetMonth(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o mês em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  remarks: ''
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_5_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_5_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_5_1.cpp)]"
  syntax:
    content: public override int GetMonth (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro de 1 a 13 que representa o mês em <xref:System.DateTime>.</xref:System.DateTime> especificado"
  overload: System.Globalization.HebrewCalendar.GetMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>é menor que <xref:System.Globalization.HebrewCalendar.MinSupportedDateTime*> ou maior que <xref:System.Globalization.HebrewCalendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)
  id: GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: HebrewCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetMonthsInYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o número de meses do ano especificado na era especificado."
  remarks: "Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).</xref:System.Globalization.HebrewCalendar>"
  example:
  - "The following code example calls `GetMonthsInYear` for five years in each era.  \n  \n [!code-vb[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_11_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/add/codesnippet/cpp/m-system.globalization.h_11_1.cpp)]\n [!code-cs[System.Globalization.HebrewCalendar.GetMonthsInYear#1](~/add/codesnippet/csharp/m-system.globalization.h_11_1.cs)]"
  syntax:
    content: public override int GetMonthsInYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Int32
      description: "O número de meses do ano especificado na era especificado. O valor de retorno é qualquer um dos 12 em um ano comuns ou 13 em um ano bissexto."
  overload: System.Globalization.HebrewCalendar.GetMonthsInYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ou <code>era</code> está fora do intervalo aceito por atual <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> objeto."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.GetYear(System.DateTime)
  id: GetYear(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: GetYear(DateTime)
  nameWithType: HebrewCalendar.GetYear(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetYear(DateTime)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna o ano especificado na <xref:System.DateTime>valor.</xref:System.DateTime>"
  remarks: "Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).</xref:System.Globalization.HebrewCalendar>"
  example:
  - "The following code example displays the values of several components of a <xref:System.DateTime> in terms of the Hebrew calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/csharp/m-system.globalization.h_10_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/visualbasic/m-system.globalization.h_10_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_AddGet#1](~/add/codesnippet/cpp/m-system.globalization.h_10_1.cpp)]"
  syntax:
    content: public override int GetYear (DateTime time);
    parameters:
    - id: time
      type: System.DateTime
      description: "O <xref:System.DateTime>ler.</xref:System.DateTime>"
    return:
      type: System.Int32
      description: "Um inteiro que representa o ano especificado na <xref:System.DateTime>valor.</xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.GetYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>time</code>está fora do intervalo aceito por atual <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> objeto."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.HebrewEra
  id: HebrewEra
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: HebrewEra
  nameWithType: HebrewCalendar.HebrewEra
  fullName: System.Globalization.HebrewCalendar.HebrewEra
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Representa a era atual. Esse campo é constante."
  remarks: "O valor desse campo é 1.       O calendário hebraico reconhece dois eras: A.C. (antes era comum) e. (Latino &quot;Anno Mundi&quot;, que significa que &quot;o ano do mundo&quot;). Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente o era atual (A.M.).</xref:System.Globalization.HebrewCalendar>"
  syntax:
    content: public static readonly int HebrewEra;
    return:
      type: System.Int32
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  id: IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se a data especificada na era especificado é um dia bissexto."
  remarks: "Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).</xref:System.Globalization.HebrewCalendar>       Em cada ciclo de 19 anos que termina com um ano divisível pelo 19, 3ª, 6º, 8, 11, 14, 17 e 19 anos são bissextos. Um ano comum pode ter de 353 355 dias, dependendo do posicionamento do Judeu feriados. Um ano bissexto pode ter de 383 385 dias.       Um dia de salto é um dia em que ocorre apenas em um ano bissexto. O calendário hebraico, o último dia do Adar Alef e todos os dias em Adar Beit são considerados leap dias."
  example:
  - "The following code example calls `IsLeapDay` for the last day of the second month (February) for five years in each of the eras.  \n  \n [!code-vb[System.Globalization.HebrewCalendar.IsLeapDay#1](~/add/codesnippet/visualbasic/38cad6f1-3b2e-4eba-a2c2-_1.vb)]\n [!code-cs[System.Globalization.HebrewCalendar.IsLeapDay#1](~/add/codesnippet/csharp/38cad6f1-3b2e-4eba-a2c2-_1.cs)]\n [!code-cpp[System.Globalization.HebrewCalendar.IsLeapDay#1](~/add/codesnippet/cpp/38cad6f1-3b2e-4eba-a2c2-_1.cpp)]"
  syntax:
    content: public override bool IsLeapDay (int year, int month, int day, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um inteiro de 1 a 13 que representa o mês."
    - id: day
      type: System.Int32
      description: "Um inteiro de 1 a 30 que representa o dia."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>.."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o dia especificado é um dia bissexto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.HebrewCalendar.IsLeapDay*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code>, ou <code>era</code> está fora do intervalo aceito por este calendário."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  id: IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapMonth(Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se o mês do ano especificado na especificado era especificado é um mês de salto."
  remarks: "Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).</xref:System.Globalization.HebrewCalendar>       Em cada ciclo de 19 anos que termina com um ano divisível pelo 19, 3ª, 6º, 8, 11, 14, 17 e 19 anos são bissextos. Um ano comum pode ter de 353 355 dias, dependendo do posicionamento do Judeu feriados. Um ano bissexto pode ter de 383 385 dias.       Um mês de salto é um mês inteiro ocorre apenas em um ano bissexto. O calendário hebraico, Adar Beit é o mês de salto somente."
  example:
  - "The following code example calls `IsLeapMonth` for all the months in five years in the current era.  \n  \n [!code-cpp[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/add/codesnippet/cpp/d066565d-c7e6-4287-a20b-_1.cpp)]\n [!code-cs[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/add/codesnippet/csharp/d066565d-c7e6-4287-a20b-_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar.IsLeapMonth#1](~/add/codesnippet/visualbasic/d066565d-c7e6-4287-a20b-_1.vb)]"
  syntax:
    content: public override bool IsLeapMonth (int year, int month, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um inteiro de 1 a 13 que representa o mês."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o mês especificado é um mês de salto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.HebrewCalendar.IsLeapMonth*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, ou <code>era</code> está fora do intervalo aceito por este calendário."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)
  id: IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: IsLeapYear(Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapYear(Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Determina se o ano especificado na era especificado é um ano bissexto."
  remarks: "Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).</xref:System.Globalization.HebrewCalendar>       Em cada ciclo de 19 anos que termina com um ano divisível pelo 19, 3ª, 6º, 8, 11, 14, 17 e 19 anos são bissextos. Um ano comum pode ter de 353 355 dias, dependendo do posicionamento do Judeu feriados. Um ano bissexto pode ter de 383 385 dias."
  example:
  - "The following code example calls `IsLeapYear` for five years in each of the eras.  \n  \n [!code-cs[System.Globalization.HebrewCalendar.IsLeapYear#1](~/add/codesnippet/csharp/m-system.globalization.h_1_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar.IsLeapYear#1](~/add/codesnippet/visualbasic/m-system.globalization.h_1_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar.IsLeapYear#1](~/add/codesnippet/cpp/m-system.globalization.h_1_1.cpp)]"
  syntax:
    content: public override bool IsLeapYear (int year, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o ano especificado é um ano bissexto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Globalization.HebrewCalendar.IsLeapYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>ou <code>era</code> está fora do intervalo aceito por este calendário."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.MaxSupportedDateTime
  id: MaxSupportedDateTime
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: MaxSupportedDateTime
  nameWithType: HebrewCalendar.MaxSupportedDateTime
  fullName: System.Globalization.HebrewCalendar.MaxSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a data e hora com suporte a mais recente do <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> tipo."
  remarks: ''
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.h_5_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.h_5_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.h_5_1.cpp)]"
  syntax:
    content: public override DateTime MaxSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Na última data e hora com suporte a <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> de tipo, que é equivalente ao último momento 29 de setembro, de 2239 C.E. no calendário gregoriano."
  overload: System.Globalization.HebrewCalendar.MaxSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.MinSupportedDateTime
  id: MinSupportedDateTime
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: MinSupportedDateTime
  nameWithType: HebrewCalendar.MinSupportedDateTime
  fullName: System.Globalization.HebrewCalendar.MinSupportedDateTime
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém a data e hora com suporte a mais antiga do <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> tipo."
  remarks: "Microsoft Visual Basic representa a hora do dia, como a hora especificada na data mínima suportada pelo <xref:System.DateTime>tipo, que é de 1 de janeiro de 0001 C.E.</xref:System.DateTime> No entanto, o <xref:System.Globalization.HebrewCalendar>tipo não oferece suporte a data mínima.</xref:System.Globalization.HebrewCalendar> Consequentemente, se você chamar um método para formatar a hora do dia usando o calendário atual, mas você não especificar um especificador de formato, formatação usa o ISO 8601 classificável (&quot;s&quot;) data/hora especificador de formato padrão em vez do padrão geral (&quot;G&quot;) de data/hora padrão especificador de formato. Para obter mais informações, consulte [padrão de data e cadeias de caracteres de formato de hora](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example gets the minimum value and the maximum value of the calendar.  \n  \n [!code-cs[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/csharp/p-system.globalization.h_4_1.cs)]\n [!code-vb[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/visualbasic/p-system.globalization.h_4_1.vb)]\n [!code-cpp[System.Globalization.HebrewCalendar_MinMax#1](~/add/codesnippet/cpp/p-system.globalization.h_4_1.cpp)]"
  syntax:
    content: public override DateTime MinSupportedDateTime { get; }
    return:
      type: System.DateTime
      description: "Data e hora com suporte mais recente do <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> tipo, que é equivalente ao primeiro momento 1 de janeiro, de 1583 C.E. no calendário gregoriano."
  overload: System.Globalization.HebrewCalendar.MinSupportedDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: HebrewCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Retorna um <xref:System.DateTime>que é definido como a data e hora especificadas na era especificado.</xref:System.DateTime>"
  remarks: "O método ToDateTime é útil porque ele pode converter qualquer data no calendário atual em uma data do calendário gregoriano. A data no calendário gregoriano depois pode ser usada, por exemplo, para comparar as datas em calendários diferentes ou criar uma data equivalente em um calendário específico.       Essa implementação do <xref:System.Globalization.HebrewCalendar>classe reconhece somente os anos hebraicos 5343 para 5999 (1583 para 2239 no calendário gregoriano).</xref:System.Globalization.HebrewCalendar>"
  syntax:
    content: public override DateTime ToDateTime (int year, int month, int day, int hour, int minute, int second, int millisecond, int era);
    parameters:
    - id: year
      type: System.Int32
      description: "Um inteiro que representa o ano."
    - id: month
      type: System.Int32
      description: "Um inteiro de 1 a 13 que representa o mês."
    - id: day
      type: System.Int32
      description: "Um inteiro de 1 a 30 que representa o dia."
    - id: hour
      type: System.Int32
      description: "Um inteiro de 0 a 23 que representa a hora."
    - id: minute
      type: System.Int32
      description: "Um inteiro de 0 a 59 que representa o minuto."
    - id: second
      type: System.Int32
      description: "Um inteiro de 0 a 59 que representa o segundo."
    - id: millisecond
      type: System.Int32
      description: "Um inteiro de 0 a 999 que representa o milissegundo."
    - id: era
      type: System.Int32
      description: "Um inteiro que representa a era. Specify either <xref href=&quot;System.Globalization.HebrewCalendar.HebrewEra&quot;></xref> or <xref uid=&quot;langword_csharp_HebrewCalendar.Eras[Calendar.CurrentEra]&quot; name=&quot;HebrewCalendar.Eras[Calendar.CurrentEra]&quot; href=&quot;&quot;></xref>."
    return:
      type: System.DateTime
      description: "O <xref:System.DateTime>que é definido como a data e hora especificadas na era atual.</xref:System.DateTime>"
  overload: System.Globalization.HebrewCalendar.ToDateTime*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>, <code>month</code>, <code>day</code> ou <code>era</code> está fora do intervalo aceito por atual <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> objeto.       - ou - <code>hour</code> é menor que 0 ou maior que 23.       - ou - <code>minute</code> é menor que 0 ou maior que 59.       - ou - <code>second</code> é menor que 0 ou maior que 59.       - ou - <code>millisecond</code> é menor que 0 ou maior do que 999."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)
  id: ToFourDigitYear(System.Int32)
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: ToFourDigitYear(Int32)
  nameWithType: HebrewCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.HebrewCalendar.ToFourDigitYear(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Converte o ano especificado em um ano de 4 dígitos usando o <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax*>propriedade para determinar o século apropriado.</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax*>"
  remarks: "O método ToFourDigitYear usa o `year` parâmetro, o <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>propriedade e um ano para calcular o ano de 4 dígitos.</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> O século é determinado pelo localizar a ocorrência única do `year` parâmetro dentro desse intervalo de 100 anos. Por exemplo, se <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>está definido para 5729, é o intervalo de 100 anos de 5630 a 5729.</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> Portanto, um valor de 30 anos é interpretado como 5630, enquanto um valor de 29 é interpretado como 5729.       Se o <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>propriedade possui o valor especial 99, o método ToFourDigitYear ignora as configurações regionais e idiomas opções no painel de controle e retorna o valor da `year` parâmetro inalterado.</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>       ToFourDigitYear oferece suporte a um ano de dois dígitos ou um ano de quatro dígitos. Passando um valor de ano de dois dígitos (menos de 100) faz com que o método converter o valor para um valor de quatro dígitos de acordo com o <xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A>valor que representa o século apropriado.</xref:System.Globalization.HebrewCalendar.TwoDigitYearMax%2A> Se o aplicativo fornece um valor de ano de quatro dígitos que está dentro do intervalo de calendário com suporte para ToFourDigitYear, o método retornará o valor de entrada real. Se o aplicativo fornece um valor de quatro dígitos que está fora do intervalo de calendário com suporte, ou se ele fornece um valor negativo, o método gera uma exceção."
  syntax:
    content: public override int ToFourDigitYear (int year);
    parameters:
    - id: year
      type: System.Int32
      description: "Um ano de 2 dígitos de 99 por meio de 0 ou um ano de calendário hebraico de 4 dígitos do 5343 por meio de 5999."
    return:
      type: System.Int32
      description: "Se o <code> year </code> parâmetro é um ano de 2 dígitos, o valor de retorno é o ano de 4 dígitos correspondente. Se o <code> year </code> parâmetro é um ano de 4 dígitos, o valor de retorno é o inalterado <code> year </code> parâmetro."
  overload: System.Globalization.HebrewCalendar.ToFourDigitYear*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>year</code>é menor que 0.       - ou - <code>year</code> é menor que <xref:System.Globalization.HebrewCalendar.MinSupportedDateTime*> ou maior que <xref:System.Globalization.HebrewCalendar.MaxSupportedDateTime*>."
  platform:
  - net462
- uid: System.Globalization.HebrewCalendar.TwoDigitYearMax
  id: TwoDigitYearMax
  parent: System.Globalization.HebrewCalendar
  langs:
  - csharp
  name: TwoDigitYearMax
  nameWithType: HebrewCalendar.TwoDigitYearMax
  fullName: System.Globalization.HebrewCalendar.TwoDigitYearMax
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Globalization
  summary: "Obtém ou define o último ano de um intervalo de 100 anos que pode ser representado por um ano de 2 dígitos."
  remarks: "A propriedade TwoDigitYearMax permite que um ano de 2 dígitos ser convertido corretamente em um ano de 4 dígitos. Por exemplo, se essa propriedade é definida como 5729, o intervalo de 100 anos é de 5630 5729. Portanto, um valor de 2 dígitos de 30 anos é interpretado como 5630, enquanto um valor de 2 dígitos de 29 é interpretado como 5729.       O valor inicial dessa propriedade é derivado das configurações na parte de opções regionais e de idioma do painel de controle. Se a configuração inicial do sistema é alterado durante a vida do seu aplicativo de <xref:System.Globalization.HebrewCalendar>classe não detecta automaticamente a alteração.</xref:System.Globalization.HebrewCalendar>       Especiais valor 99 faz com que o <xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A>método para ignorar as configurações do sistema e retornar o ano especificado inalterado.</xref:System.Globalization.HebrewCalendar.ToFourDigitYear%2A>"
  syntax:
    content: public override int TwoDigitYearMax { get; set; }
    return:
      type: System.Int32
      description: "O último ano de um intervalo de 100 anos que pode ser representado por um ano de 2 dígitos."
  overload: System.Globalization.HebrewCalendar.TwoDigitYearMax*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Atual <xref href=&quot;System.Globalization.HebrewCalendar&quot;> </xref> objeto é somente leitura."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Em uma operação definida, o valor de ano de calendário hebraico é menor que 5343, mas não é 99, ou o valor de ano é maior do que 5999."
  platform:
  - net462
references:
- uid: System.Globalization.Calendar
  isExternal: false
  name: System.Globalization.Calendar
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Globalization.HebrewCalendar.#ctor
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: HebrewCalendar()
  nameWithType: HebrewCalendar.HebrewCalendar()
  fullName: System.Globalization.HebrewCalendar.HebrewCalendar()
- uid: System.Globalization.HebrewCalendar.AddMonths(System.DateTime,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AddMonths(DateTime,Int32)
  nameWithType: HebrewCalendar.AddMonths(DateTime,Int32)
  fullName: System.Globalization.HebrewCalendar.AddMonths(DateTime,Int32)
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Globalization.HebrewCalendar.AddYears(System.DateTime,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AddYears(DateTime,Int32)
  nameWithType: HebrewCalendar.AddYears(DateTime,Int32)
  fullName: System.Globalization.HebrewCalendar.AddYears(DateTime,Int32)
- uid: System.Globalization.HebrewCalendar.AlgorithmType
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: HebrewCalendar.AlgorithmType
  fullName: System.Globalization.HebrewCalendar.AlgorithmType
- uid: System.Globalization.CalendarAlgorithmType
  parent: System.Globalization
  isExternal: false
  name: CalendarAlgorithmType
  nameWithType: CalendarAlgorithmType
  fullName: System.Globalization.CalendarAlgorithmType
- uid: System.Globalization.HebrewCalendar.Eras
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: Eras
  nameWithType: HebrewCalendar.Eras
  fullName: System.Globalization.HebrewCalendar.Eras
- uid: System.Int32[]
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32[]
  spec.csharp:
  - uid: System.Int32
    name: Int32
    nameWithType: Int32
    fullName: Int32[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Globalization.HebrewCalendar.GetDayOfMonth(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfMonth(DateTime)
  nameWithType: HebrewCalendar.GetDayOfMonth(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfMonth(DateTime)
- uid: System.Globalization.HebrewCalendar.GetDayOfWeek(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfWeek(DateTime)
  nameWithType: HebrewCalendar.GetDayOfWeek(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfWeek(DateTime)
- uid: System.DayOfWeek
  parent: System
  isExternal: true
  name: DayOfWeek
  nameWithType: DayOfWeek
  fullName: System.DayOfWeek
- uid: System.Globalization.HebrewCalendar.GetDayOfYear(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfYear(DateTime)
  nameWithType: HebrewCalendar.GetDayOfYear(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetDayOfYear(DateTime)
- uid: System.Globalization.HebrewCalendar.GetDaysInMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDaysInMonth(Int32,Int32,Int32)
  nameWithType: HebrewCalendar.GetDaysInMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetDaysInMonth(Int32,Int32,Int32)
- uid: System.Globalization.HebrewCalendar.GetDaysInYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDaysInYear(Int32,Int32)
  nameWithType: HebrewCalendar.GetDaysInYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetDaysInYear(Int32,Int32)
- uid: System.Globalization.HebrewCalendar.GetEra(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetEra(DateTime)
  nameWithType: HebrewCalendar.GetEra(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetEra(DateTime)
- uid: System.Globalization.HebrewCalendar.GetLeapMonth(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetLeapMonth(Int32,Int32)
  nameWithType: HebrewCalendar.GetLeapMonth(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetLeapMonth(Int32,Int32)
- uid: System.Globalization.HebrewCalendar.GetMonth(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetMonth(DateTime)
  nameWithType: HebrewCalendar.GetMonth(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetMonth(DateTime)
- uid: System.Globalization.HebrewCalendar.GetMonthsInYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetMonthsInYear(Int32,Int32)
  nameWithType: HebrewCalendar.GetMonthsInYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.GetMonthsInYear(Int32,Int32)
- uid: System.Globalization.HebrewCalendar.GetYear(System.DateTime)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetYear(DateTime)
  nameWithType: HebrewCalendar.GetYear(DateTime)
  fullName: System.Globalization.HebrewCalendar.GetYear(DateTime)
- uid: System.Globalization.HebrewCalendar.HebrewEra
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: HebrewEra
  nameWithType: HebrewCalendar.HebrewEra
  fullName: System.Globalization.HebrewCalendar.HebrewEra
- uid: System.Globalization.HebrewCalendar.IsLeapDay(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapDay(Int32,Int32,Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapDay(Int32,Int32,Int32,Int32)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Globalization.HebrewCalendar.IsLeapMonth(System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapMonth(Int32,Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapMonth(Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapMonth(Int32,Int32,Int32)
- uid: System.Globalization.HebrewCalendar.IsLeapYear(System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapYear(Int32,Int32)
  nameWithType: HebrewCalendar.IsLeapYear(Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.IsLeapYear(Int32,Int32)
- uid: System.Globalization.HebrewCalendar.MaxSupportedDateTime
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: HebrewCalendar.MaxSupportedDateTime
  fullName: System.Globalization.HebrewCalendar.MaxSupportedDateTime
- uid: System.Globalization.HebrewCalendar.MinSupportedDateTime
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: HebrewCalendar.MinSupportedDateTime
  fullName: System.Globalization.HebrewCalendar.MinSupportedDateTime
- uid: System.Globalization.HebrewCalendar.ToDateTime(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: HebrewCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Globalization.HebrewCalendar.ToDateTime(Int32,Int32,Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Globalization.HebrewCalendar.ToFourDigitYear(System.Int32)
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: ToFourDigitYear(Int32)
  nameWithType: HebrewCalendar.ToFourDigitYear(Int32)
  fullName: System.Globalization.HebrewCalendar.ToFourDigitYear(Int32)
- uid: System.Globalization.HebrewCalendar.TwoDigitYearMax
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: HebrewCalendar.TwoDigitYearMax
  fullName: System.Globalization.HebrewCalendar.TwoDigitYearMax
- uid: System.Globalization.HebrewCalendar.#ctor*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: HebrewCalendar
  nameWithType: HebrewCalendar.HebrewCalendar
- uid: System.Globalization.HebrewCalendar.AddMonths*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AddMonths
  nameWithType: HebrewCalendar.AddMonths
- uid: System.Globalization.HebrewCalendar.AddYears*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AddYears
  nameWithType: HebrewCalendar.AddYears
- uid: System.Globalization.HebrewCalendar.AlgorithmType*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: AlgorithmType
  nameWithType: HebrewCalendar.AlgorithmType
- uid: System.Globalization.HebrewCalendar.Eras*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: Eras
  nameWithType: HebrewCalendar.Eras
- uid: System.Globalization.HebrewCalendar.GetDayOfMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfMonth
  nameWithType: HebrewCalendar.GetDayOfMonth
- uid: System.Globalization.HebrewCalendar.GetDayOfWeek*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfWeek
  nameWithType: HebrewCalendar.GetDayOfWeek
- uid: System.Globalization.HebrewCalendar.GetDayOfYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDayOfYear
  nameWithType: HebrewCalendar.GetDayOfYear
- uid: System.Globalization.HebrewCalendar.GetDaysInMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDaysInMonth
  nameWithType: HebrewCalendar.GetDaysInMonth
- uid: System.Globalization.HebrewCalendar.GetDaysInYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetDaysInYear
  nameWithType: HebrewCalendar.GetDaysInYear
- uid: System.Globalization.HebrewCalendar.GetEra*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetEra
  nameWithType: HebrewCalendar.GetEra
- uid: System.Globalization.HebrewCalendar.GetLeapMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetLeapMonth
  nameWithType: HebrewCalendar.GetLeapMonth
- uid: System.Globalization.HebrewCalendar.GetMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetMonth
  nameWithType: HebrewCalendar.GetMonth
- uid: System.Globalization.HebrewCalendar.GetMonthsInYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetMonthsInYear
  nameWithType: HebrewCalendar.GetMonthsInYear
- uid: System.Globalization.HebrewCalendar.GetYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: GetYear
  nameWithType: HebrewCalendar.GetYear
- uid: System.Globalization.HebrewCalendar.IsLeapDay*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapDay
  nameWithType: HebrewCalendar.IsLeapDay
- uid: System.Globalization.HebrewCalendar.IsLeapMonth*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapMonth
  nameWithType: HebrewCalendar.IsLeapMonth
- uid: System.Globalization.HebrewCalendar.IsLeapYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: IsLeapYear
  nameWithType: HebrewCalendar.IsLeapYear
- uid: System.Globalization.HebrewCalendar.MaxSupportedDateTime*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: MaxSupportedDateTime
  nameWithType: HebrewCalendar.MaxSupportedDateTime
- uid: System.Globalization.HebrewCalendar.MinSupportedDateTime*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: MinSupportedDateTime
  nameWithType: HebrewCalendar.MinSupportedDateTime
- uid: System.Globalization.HebrewCalendar.ToDateTime*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: ToDateTime
  nameWithType: HebrewCalendar.ToDateTime
- uid: System.Globalization.HebrewCalendar.ToFourDigitYear*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: ToFourDigitYear
  nameWithType: HebrewCalendar.ToFourDigitYear
- uid: System.Globalization.HebrewCalendar.TwoDigitYearMax*
  parent: System.Globalization.HebrewCalendar
  isExternal: false
  name: TwoDigitYearMax
  nameWithType: HebrewCalendar.TwoDigitYearMax
