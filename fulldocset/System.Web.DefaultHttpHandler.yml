### YamlMime:ManagedReference
items:
- uid: System.Web.DefaultHttpHandler
  id: DefaultHttpHandler
  children:
  - System.Web.DefaultHttpHandler.#ctor
  - System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.DefaultHttpHandler.Context
  - System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  - System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  - System.Web.DefaultHttpHandler.IsReusable
  - System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  - System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  - System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  langs:
  - csharp
  name: DefaultHttpHandler
  nameWithType: DefaultHttpHandler
  fullName: System.Web.DefaultHttpHandler
  type: Class
  summary: "Representa as propriedades e métodos do manipulador HTTP padrão."
  remarks: "Um objeto DefaultHttpHandler intercepta solicitações de entrada no pipeline HTTP quando interceptação de solicitação tiver sido configurada por meio de serviços de informações da Internet (IIS) 6.0 e nenhuma associação explícita se aplicam para a extensão solicitada.       Interceptação de solicitação pode ser configurada por meio do recurso de mapeamento de aplicativos de caractere curinga, introduzido no IIS 6.0. Para obter mais informações, pesquise o [MSDN Library](http://go.microsoft.com/fwlink/?linkid=37118) para obter informações sobre como usar mapas de aplicativos de curinga para remapear um URL.       A classe implementa DefaultHttpHandler o <xref:System.Web.IHttpAsyncHandler>interface para fornecer processamento assíncrono da solicitação.</xref:System.Web.IHttpAsyncHandler> Para obter informações gerais sobre os manipuladores HTTP, consulte [manipuladores HTTP e visão geral de módulos HTTP](~/add/includes/ajax-current-ext-md.md). Além disso, para obter mais informações, consulte o seguinte: - a sobre a criação de manipuladores HTTP assíncronos, consulte [passo a passo: Criando um manipulador HTTP assíncrono](~/add/includes/ajax-current-ext-md.md).      -Sobre o registro de manipuladores HTTP, consulte [como: registrar manipuladores de HTTP](~/add/includes/ajax-current-ext-md.md).       Classes podem derivar da classe DefaultHttpHandler para fornecer tratamento personalizado de solicitações. Um manipulador HTTP assíncrono que deriva de DefaultHttpHandler pode substituir o <xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>método para alterar como as solicitações são processadas.</xref:System.Web.DefaultHttpHandler.BeginProcessRequest%2A>       Um DefaultHttpHandler não usa os erros ASP.NET. Existente conteúdo que usa os erros do IIS ou um mecanismo de erro personalizada de ISAPI de propriedade deve funcionar inalterada."
  example:
  - "The following code example demonstrates how to implement a customized HTTP handler by deriving from the DefaultHttpHandler class.  \n  \n [!code-vb[System.Web.DefaultHttpHandler#1](~/add/codesnippet/visualbasic/t-system.web.defaulthttp_1.vb)]\n [!code-cs[System.Web.DefaultHttpHandler#1](~/add/codesnippet/csharp/t-system.web.defaulthttp_1.cs)]"
  syntax:
    content: 'public class DefaultHttpHandler : System.Web.IHttpAsyncHandler'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpAsyncHandler
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.#ctor
  id: '#ctor'
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: DefaultHttpHandler()
  nameWithType: DefaultHttpHandler.DefaultHttpHandler()
  fullName: System.Web.DefaultHttpHandler.DefaultHttpHandler()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> classe."
  syntax:
    content: public DefaultHttpHandler ();
    parameters: []
  overload: System.Web.DefaultHttpHandler.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicia uma chamada assíncrona para o manipulador HTTP."
  remarks: "Ao criar um manipulador HTTP para uso assíncrono, o manipulador deve implementar o BeginProcessRequest assíncrona e <xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>métodos que são chamados de forma assíncrona pelo ASP.NET.</xref:System.Web.DefaultHttpHandler.EndProcessRequest%2A>"
  syntax:
    content: public virtual IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback callback, object state);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Um objeto que fornece referências ao servidor intrínseco os objetos que são usados para atender a solicitações HTTP."
    - id: callback
      type: System.AsyncCallback
      description: "O método para chamar quando a chamada de método assíncrono é concluída. Se `callback` é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o delegado não é chamado."
    - id: state
      type: System.Object
      description: "Quaisquer dados de estado que é necessário para processar a solicitação."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que contém informações sobre o status do processo.</xref:System.IAsyncResult>"
  overload: System.Web.DefaultHttpHandler.BeginProcessRequest*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "As pré-condições para o processamento de uma falha de solicitação e o arquivo solicitado tem o. asp sufixo ou a solicitação foi enviada por meio de POSTAGEM."
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.Context
  id: Context
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: Context
  nameWithType: DefaultHttpHandler.Context
  fullName: System.Web.DefaultHttpHandler.Context
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o contexto associado atual <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> objeto."
  remarks: "A propriedade de contexto fornece acesso ao atual <xref:System.Web.HttpContext>objeto para classes derivadas.</xref:System.Web.HttpContext> Um <xref:System.Web.HttpContext>objeto fornece acesso a intrínseca <xref:System.Web.HttpApplication.Request%2A>, <xref:System.Web.HttpApplication.Response%2A>, e <xref:System.Web.HttpApplication.Server%2A>Propriedades para a solicitação.</xref:System.Web.HttpApplication.Server%2A> </xref:System.Web.HttpApplication.Response%2A> </xref:System.Web.HttpApplication.Request%2A> </xref:System.Web.HttpContext> Para obter mais informações sobre como acessar as informações contextuais, consulte <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext>"
  syntax:
    content: protected System.Web.HttpContext Context { get; }
    return:
      type: System.Web.HttpContext
      description: "Um <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto que contém o contexto atual."
  overload: System.Web.DefaultHttpHandler.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  id: EndProcessRequest(System.IAsyncResult)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: EndProcessRequest(IAsyncResult)
  nameWithType: DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Fornece um método final para um processo assíncrono."
  remarks: "Você pode usar o método EndProcessRequest gerar todas as exceções que são detectadas durante o processo assíncrono."
  syntax:
    content: public virtual void EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Um objeto que contém informações sobre o status do processo."
  overload: System.Web.DefaultHttpHandler.EndProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  id: ExecuteUrlHeaders
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
  fullName: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma coleção de cabeçalhos de solicitação e valores de solicitação para transferir junto com a solicitação."
  remarks: "A propriedade ExecuteUrlHeaders retorna uma coleção vazia, a menos que ele é preenchido em uma classe derivada da <xref:System.Web.DefaultHttpHandler>classe</xref:System.Web.DefaultHttpHandler> de Os cabeçalhos que são adicionados são adicionados à coleção de cabeçalhos de solicitação antes de passar a solicitação de volta para Internet Information Services (IIS)."
  syntax:
    content: protected System.Collections.Specialized.NameValueCollection ExecuteUrlHeaders { get; }
    return:
      type: System.Collections.Specialized.NameValueCollection
      description: "Um <xref href=&quot;System.Collections.Specialized.NameValueCollection&quot;> </xref> que contém cabeçalhos de solicitação e valores."
  overload: System.Web.DefaultHttpHandler.ExecuteUrlHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.IsReusable
  id: IsReusable
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
  fullName: System.Web.DefaultHttpHandler.IsReusable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor booliano que indica se outra solicitação pode usar a instância atual do <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> classe."
  remarks: "Para definir explicitamente a propriedade IsReusable `true` ou `false`, substitua a propriedade IsReusable."
  syntax:
    content: public virtual bool IsReusable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> for reutilizável; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DefaultHttpHandler.IsReusable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  id: OnExecuteUrlPreconditionFailure
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: OnExecuteUrlPreconditionFailure()
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  fullName: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Chamado quando as pré-condições impedem que o <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> objeto a partir de uma solicitação de processamento."
  remarks: "Pré-condições são especificadas pelo cliente nos campos de cabeçalho de solicitação e são avaliadas no servidor Web. Por exemplo, usando pré-condições, os clientes podem impedir um método solicitado (por exemplo, GET) que está sendo aplicada a um recurso diferente da pretendida. Para obter mais informações, consulte a seção 14, &quot;Definições de campo de cabeçalho&quot;, no [Hypertext Transfer Protocol--HTTP/1.1](http://go.microsoft.com/fwlink/?LinkID=73147) especificação no site da World Wide Web Consortium (W3C).       O método OnExecuteUrlPreconditionFailure é chamado quando as pré-condições impedem que o <xref:System.Web.DefaultHttpHandler>objeto do processamento de uma solicitação.</xref:System.Web.DefaultHttpHandler> Uma classe derivada pode substituir o método OnExecuteUrlPreconditionFailure para gerar uma exceção quando as pré-condições falharem. O <xref:System.Web.DefaultHttpHandler>não gerará uma exceção no método OnExecuteUrlPreconditionFailure.</xref:System.Web.DefaultHttpHandler>       Qualquer um dos seguintes fará com que as pré-condições falha:-chamando <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>      -Chamando <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>      -Chamando <xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>      -Alterar a política de cache para a resposta.      -Adicionar uma <xref:System.IO.Stream>objeto como um filtro para o <xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName>propriedade.</xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName> </xref:System.IO.Stream>"
  syntax:
    content: public virtual void OnExecuteUrlPreconditionFailure ();
    parameters: []
  overload: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  id: OverrideExecuteUrlPath
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: OverrideExecuteUrlPath()
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath()
  fullName: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Substitui a URL de destino para a solicitação atual."
  remarks: "O método OverrideExecuteUrlPath retorna `null` , a menos que ele seja substituído em uma classe derivada da <xref:System.Web.DefaultHttpHandler>classe</xref:System.Web.DefaultHttpHandler> de       O método OverrideExecuteUrlPath é chamado somente se estiver em execução no modo de isolamento do processo de trabalho ASP.NET no IIS 6.0, e se a resposta não foi modificado antes do <xref:System.Web.DefaultHttpHandler>objeto foi chamado.</xref:System.Web.DefaultHttpHandler> A resposta é modificada por qualquer um dos seguintes:-chamando <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName>      -Chamando <xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.AddHeader%2A?displayProperty=fullName>      -Chamando <xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>.</xref:System.Web.HttpResponse.Flush%2A?displayProperty=fullName>      -Alterar a política de cache para a resposta.      -Adicionar uma <xref:System.IO.Stream>objeto como um filtro para o <xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName>propriedade.</xref:System.Web.HttpResponse.Filter%2A?displayProperty=fullName> </xref:System.IO.Stream>"
  syntax:
    content: public virtual string OverrideExecuteUrlPath ();
    parameters: []
    return:
      type: System.String
      description: "A URL substituída para uso na solicitação; ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não for fornecido um URL substituído."
  overload: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  id: ProcessRequest(System.Web.HttpContext)
  parent: System.Web.DefaultHttpHandler
  langs:
  - csharp
  name: ProcessRequest(HttpContext)
  nameWithType: DefaultHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.DefaultHttpHandler.ProcessRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Permite que um <xref href=&quot;System.Web.DefaultHttpHandler&quot;> </xref> o objeto para o processo de solicitações de HTTP da Web."
  remarks: "O método ProcessRequest não deve ser chamado de forma síncrona. Classes que derivam de <xref:System.Web.DefaultHttpHandler>classe pode substituir o ProcessRequest para fornecer processamento de solicitação personalizado.</xref:System.Web.DefaultHttpHandler>"
  syntax:
    content: public virtual void ProcessRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Um objeto que fornece referências a objetos do servidor intrínsecos usados para atender solicitações HTTP."
  overload: System.Web.DefaultHttpHandler.ProcessRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O ProcessRequest é chamada de forma síncrona."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.DefaultHttpHandler.#ctor
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: DefaultHttpHandler()
  nameWithType: DefaultHttpHandler.DefaultHttpHandler()
  fullName: System.Web.DefaultHttpHandler.DefaultHttpHandler()
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.DefaultHttpHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Web.DefaultHttpHandler.Context
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: Context
  nameWithType: DefaultHttpHandler.Context
  fullName: System.Web.DefaultHttpHandler.Context
- uid: System.Web.DefaultHttpHandler.EndProcessRequest(System.IAsyncResult)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: EndProcessRequest(IAsyncResult)
  nameWithType: DefaultHttpHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.DefaultHttpHandler.EndProcessRequest(IAsyncResult)
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
  fullName: System.Web.DefaultHttpHandler.ExecuteUrlHeaders
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.DefaultHttpHandler.IsReusable
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
  fullName: System.Web.DefaultHttpHandler.IsReusable
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OnExecuteUrlPreconditionFailure()
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
  fullName: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure()
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OverrideExecuteUrlPath()
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath()
  fullName: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DefaultHttpHandler.ProcessRequest(System.Web.HttpContext)
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ProcessRequest(HttpContext)
  nameWithType: DefaultHttpHandler.ProcessRequest(HttpContext)
  fullName: System.Web.DefaultHttpHandler.ProcessRequest(HttpContext)
- uid: System.Web.DefaultHttpHandler.#ctor*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: DefaultHttpHandler
  nameWithType: DefaultHttpHandler.DefaultHttpHandler
- uid: System.Web.DefaultHttpHandler.BeginProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: BeginProcessRequest
  nameWithType: DefaultHttpHandler.BeginProcessRequest
- uid: System.Web.DefaultHttpHandler.Context*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: Context
  nameWithType: DefaultHttpHandler.Context
- uid: System.Web.DefaultHttpHandler.EndProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: EndProcessRequest
  nameWithType: DefaultHttpHandler.EndProcessRequest
- uid: System.Web.DefaultHttpHandler.ExecuteUrlHeaders*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ExecuteUrlHeaders
  nameWithType: DefaultHttpHandler.ExecuteUrlHeaders
- uid: System.Web.DefaultHttpHandler.IsReusable*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: IsReusable
  nameWithType: DefaultHttpHandler.IsReusable
- uid: System.Web.DefaultHttpHandler.OnExecuteUrlPreconditionFailure*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OnExecuteUrlPreconditionFailure
  nameWithType: DefaultHttpHandler.OnExecuteUrlPreconditionFailure
- uid: System.Web.DefaultHttpHandler.OverrideExecuteUrlPath*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: OverrideExecuteUrlPath
  nameWithType: DefaultHttpHandler.OverrideExecuteUrlPath
- uid: System.Web.DefaultHttpHandler.ProcessRequest*
  parent: System.Web.DefaultHttpHandler
  isExternal: false
  name: ProcessRequest
  nameWithType: DefaultHttpHandler.ProcessRequest
