### YamlMime:ManagedReference
items:
- uid: System.Activities.Handle
  id: Handle
  children:
  - System.Activities.Handle.#ctor
  - System.Activities.Handle.ExecutionPropertyName
  - System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  - System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  - System.Activities.Handle.Owner
  - System.Activities.Handle.ThrowIfUninitialized
  langs:
  - csharp
  name: Handle
  nameWithType: Handle
  fullName: System.Activities.Handle
  type: Class
  summary: "Representa um tipo que tem o seu tempo de vida controlado pelo tempo de execução de fluxo de trabalho."
  remarks: "Tipos derivados de identificador tem suas vidas úteis controladas pelo tempo de execução de fluxo de trabalho. Para variáveis de fluxo de trabalho dos tipos de identificador, o tempo de execução usa o construtor padrão necessários para criar uma instância do tipo e o atribui para a <xref:System.Activities.Variable>e chama <xref:System.Activities.Handle.OnInitialize%2A>ao inicializar o ambiente.</xref:System.Activities.Handle.OnInitialize%2A> </xref:System.Activities.Variable> Quando a variável sai do escopo, <xref:System.Activities.Handle.OnUninitialize%2A>é chamado.</xref:System.Activities.Handle.OnUninitialize%2A>"
  syntax:
    content: >-
      [System.Runtime.Serialization.DataContract]

      public abstract class Handle
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Handle.#ctor
  id: '#ctor'
  parent: System.Activities.Handle
  langs:
  - csharp
  name: Handle()
  nameWithType: Handle.Handle()
  fullName: System.Activities.Handle.Handle()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Activities.Handle&quot;> </xref> classe."
  remarks: "Classes que derivam de <xref:System.Activities.Handle>deve fornecer um construtor padrão.</xref:System.Activities.Handle>"
  syntax:
    content: protected Handle ();
    parameters: []
  overload: System.Activities.Handle.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.ExecutionPropertyName
  id: ExecutionPropertyName
  parent: System.Activities.Handle
  langs:
  - csharp
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
  fullName: System.Activities.Handle.ExecutionPropertyName
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Obtém o nome a ser usado por este <xref href=&quot;System.Activities.Handle&quot;> </xref> quando adicionada às propriedades de execução de uma atividade."
  syntax:
    content: public string ExecutionPropertyName { get; }
    return:
      type: System.String
      description: "O nome do tipo derivado como fornecida pelo <xref:System.Type.FullName*>.</xref:System.Type.FullName*>"
  overload: System.Activities.Handle.ExecutionPropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  id: OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  langs:
  - csharp
  name: OnInitialize(HandleInitializationContext)
  nameWithType: Handle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnInitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Chamado pelo tempo de execução do fluxo de trabalho quando o ambiente que contém o <xref href=&quot;System.Activities.Handle&quot;> </xref> é inicializado."
  syntax:
    content: protected virtual void OnInitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "O ambiente no qual o identificador é criado."
  overload: System.Activities.Handle.OnInitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  id: OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  langs:
  - csharp
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: Handle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnUninitialize(HandleInitializationContext)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Chamado pelo tempo de execução do fluxo de trabalho quando o <xref href=&quot;System.Activities.Variable&quot;> </xref> para o <xref href=&quot;System.Activities.Handle&quot;> </xref> sai do escopo."
  syntax:
    content: protected virtual void OnUninitialize (System.Activities.HandleInitializationContext context);
    parameters:
    - id: context
      type: System.Activities.HandleInitializationContext
      description: "O ambiente no qual o identificador foi criado."
  overload: System.Activities.Handle.OnUninitialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.Owner
  id: Owner
  parent: System.Activities.Handle
  langs:
  - csharp
  name: Owner
  nameWithType: Handle.Owner
  fullName: System.Activities.Handle.Owner
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Obtém o <xref href=&quot;System.Activities.ActivityInstance&quot;> </xref> que contém o <xref href=&quot;System.Activities.Variable&quot;> </xref> que contém o <xref href=&quot;System.Activities.Handle&quot;> </xref>."
  syntax:
    content: public System.Activities.ActivityInstance Owner { get; }
    return:
      type: System.Activities.ActivityInstance
      description: "A instância de atividade que contém o <xref href=&quot;System.Activities.Variable&quot;> </xref> que contém o <xref href=&quot;System.Activities.Handle&quot;> </xref>."
  overload: System.Activities.Handle.Owner*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Handle.ThrowIfUninitialized
  id: ThrowIfUninitialized
  parent: System.Activities.Handle
  langs:
  - csharp
  name: ThrowIfUninitialized()
  nameWithType: Handle.ThrowIfUninitialized()
  fullName: System.Activities.Handle.ThrowIfUninitialized()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities
  summary: "Gera um <xref:System.InvalidOperationException>se o <xref href=&quot;System.Activities.Handle&quot;> </xref> não foi inicializado.</xref:System.InvalidOperationException>"
  remarks: "ThrowIfUninitialized fornece a autores de classe derivado de identificador personalizado um método conveniente para chamar a partir de qualquer métodos ou propriedades da classe derivada que não são válidas se o <xref:System.Activities.Handle>não foi inicializado.</xref:System.Activities.Handle>"
  syntax:
    content: protected void ThrowIfUninitialized ();
    parameters: []
  overload: System.Activities.Handle.ThrowIfUninitialized*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Handle.#ctor
  parent: System.Activities.Handle
  isExternal: false
  name: Handle()
  nameWithType: Handle.Handle()
  fullName: System.Activities.Handle.Handle()
- uid: System.Activities.Handle.ExecutionPropertyName
  parent: System.Activities.Handle
  isExternal: false
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
  fullName: System.Activities.Handle.ExecutionPropertyName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Handle.OnInitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  isExternal: false
  name: OnInitialize(HandleInitializationContext)
  nameWithType: Handle.OnInitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnInitialize(HandleInitializationContext)
- uid: System.Activities.HandleInitializationContext
  parent: System.Activities
  isExternal: false
  name: HandleInitializationContext
  nameWithType: HandleInitializationContext
  fullName: System.Activities.HandleInitializationContext
- uid: System.Activities.Handle.OnUninitialize(System.Activities.HandleInitializationContext)
  parent: System.Activities.Handle
  isExternal: false
  name: OnUninitialize(HandleInitializationContext)
  nameWithType: Handle.OnUninitialize(HandleInitializationContext)
  fullName: System.Activities.Handle.OnUninitialize(HandleInitializationContext)
- uid: System.Activities.Handle.Owner
  parent: System.Activities.Handle
  isExternal: false
  name: Owner
  nameWithType: Handle.Owner
  fullName: System.Activities.Handle.Owner
- uid: System.Activities.ActivityInstance
  parent: System.Activities
  isExternal: false
  name: ActivityInstance
  nameWithType: ActivityInstance
  fullName: System.Activities.ActivityInstance
- uid: System.Activities.Handle.ThrowIfUninitialized
  parent: System.Activities.Handle
  isExternal: false
  name: ThrowIfUninitialized()
  nameWithType: Handle.ThrowIfUninitialized()
  fullName: System.Activities.Handle.ThrowIfUninitialized()
- uid: System.Activities.Handle.#ctor*
  parent: System.Activities.Handle
  isExternal: false
  name: Handle
  nameWithType: Handle.Handle
- uid: System.Activities.Handle.ExecutionPropertyName*
  parent: System.Activities.Handle
  isExternal: false
  name: ExecutionPropertyName
  nameWithType: Handle.ExecutionPropertyName
- uid: System.Activities.Handle.OnInitialize*
  parent: System.Activities.Handle
  isExternal: false
  name: OnInitialize
  nameWithType: Handle.OnInitialize
- uid: System.Activities.Handle.OnUninitialize*
  parent: System.Activities.Handle
  isExternal: false
  name: OnUninitialize
  nameWithType: Handle.OnUninitialize
- uid: System.Activities.Handle.Owner*
  parent: System.Activities.Handle
  isExternal: false
  name: Owner
  nameWithType: Handle.Owner
- uid: System.Activities.Handle.ThrowIfUninitialized*
  parent: System.Activities.Handle
  isExternal: false
  name: ThrowIfUninitialized
  nameWithType: Handle.ThrowIfUninitialized
