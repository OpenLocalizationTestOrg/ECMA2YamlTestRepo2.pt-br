### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormParameter
  id: FormParameter
  children:
  - System.Web.UI.WebControls.FormParameter.#ctor
  - System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)
  - System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)
  - System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)
  - System.Web.UI.WebControls.FormParameter.Clone
  - System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  - System.Web.UI.WebControls.FormParameter.FormField
  - System.Web.UI.WebControls.FormParameter.ValidateInput
  langs:
  - csharp
  name: FormParameter
  nameWithType: FormParameter
  fullName: System.Web.UI.WebControls.FormParameter
  type: Class
  summary: "Associa o valor de uma solicitação HTTP <xref:System.Web.HttpRequest.Form*>campo a um objeto de parâmetro.</xref:System.Web.HttpRequest.Form*>"
  remarks: "Você pode usar a classe FormParameter para associar o valor de uma variável de formulário no <xref:System.Web.HttpRequest.Form%2A>coleção para um parâmetro usado em um comando ou consulta parametrizada.</xref:System.Web.HttpRequest.Form%2A> Controles que associam os dados para o parâmetro podem lançar uma exceção se um FormParameter for especificado, mas nenhuma variável de forma correspondente é passado. Eles também não podem exibir nenhum dado se a variável de formulário é passada sem valor correspondente. Definir o <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>para evitar essas situações onde apropriado.</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>       A classe FormParameter fornece a <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>propriedade, que identifica o nome da variável para associar, além daqueles herdada da <xref:System.Web.UI.WebControls.Parameter>classe</xref:System.Web.UI.WebControls.Parameter> de formulário</xref:System.Web.UI.WebControls.FormParameter.FormField%2A>      > [!IMPORTANT] > FormParameter o não valida o valor passado para o elemento de formulário de qualquer maneira; ele usa o valor bruto. Na maioria dos casos você pode validar o valor da FormParameter antes de ser usada por um controle de fonte de dados ao manipular um evento, como o `Selecting`, `Updating`, `Inserting`, ou `Deleting` eventos expostos pelo controle de fonte de dados você está usando. Se o valor do parâmetro não passar os testes de validação, você pode cancelar a operação de dados definindo o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade associado <xref:System.ComponentModel.CancelEventArgs>classe para `true`.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>"
  example:
  - "The following code example demonstrates how to insert data into a database using the <xref:System.Web.UI.WebControls.SqlDataSource> control and a simple ASP.NET Web page. The current data in the data table is displayed in the <xref:System.Web.UI.WebControls.DropDownList> control. You can add new records by entering values in the <xref:System.Web.UI.WebControls.TextBox> controls and clicking the button. When the button is clicked, the specified values are inserted into the database, and the <xref:System.Web.UI.WebControls.DropDownList> is refreshed.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_143_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.SqlDataSource_24sql#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_143_1.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("FormField")]

      public class FormParameter : System.Web.UI.WebControls.Parameter
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.Parameter
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.Parameter.ConvertDbTypeToTypeCode(System.Data.DbType)
  - System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.Parameter.ConvertTypeCodeToDbType(System.TypeCode)
  - System.Web.UI.WebControls.Parameter.DbType
  - System.Web.UI.WebControls.Parameter.DefaultValue
  - System.Web.UI.WebControls.Parameter.Direction
  - System.Web.UI.WebControls.Parameter.GetDatabaseType
  - System.Web.UI.WebControls.Parameter.IsTrackingViewState
  - System.Web.UI.WebControls.Parameter.LoadViewState(System.Object)
  - System.Web.UI.WebControls.Parameter.Name
  - System.Web.UI.WebControls.Parameter.OnParameterChanged
  - System.Web.UI.WebControls.Parameter.SaveViewState
  - System.Web.UI.WebControls.Parameter.SetDirty
  - System.Web.UI.WebControls.Parameter.Size
  - System.Web.UI.WebControls.Parameter.System#ICloneable#Clone
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.Parameter.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.Parameter.ToString
  - System.Web.UI.WebControls.Parameter.TrackViewState
  - System.Web.UI.WebControls.Parameter.Type
  - System.Web.UI.WebControls.Parameter.ViewState
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter()
  nameWithType: FormParameter.FormParameter()
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância sem nome do <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> classe."
  remarks: "Um <xref:System.Web.UI.WebControls.FormParameter>objeto criado com o construtor FormParameter é inicializado com valores padrão para todas as suas propriedades.</xref:System.Web.UI.WebControls.FormParameter> O que <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>é inicializado como <xref:System.String.Empty?displayProperty=fullName>.</xref:System.String.Empty?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormParameter.FormField%2A> Além disso, o <xref:System.Web.UI.WebControls.Parameter.Name%2A>propriedade é inicializada para <xref:System.String.Empty?displayProperty=fullName>, o <xref:System.Web.UI.WebControls.Parameter.Type%2A>propriedade é inicializada para <xref:System.TypeCode?displayProperty=fullName>, o <xref:System.Web.UI.WebControls.Parameter.Direction%2A>propriedade é inicializada para <xref:System.Data.ParameterDirection>e o <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>propriedade é inicializada como null (`Nothing` no Visual Basic).</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> </xref:System.Data.ParameterDirection> </xref:System.Web.UI.WebControls.Parameter.Direction%2A> </xref:System.TypeCode?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter.Type%2A> </xref:System.String.Empty?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter.Name%2A>"
  example:
  - "> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.FormParameter_1#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_75_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.FormParameter_1#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_75_1.aspx)]"
  syntax:
    content: public FormParameter ();
    parameters: []
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)
  id: '#ctor(System.Web.UI.WebControls.FormParameter)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(FormParameter)
  nameWithType: FormParameter.FormParameter(FormParameter)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(FormParameter)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> classe com os valores da instância especificada pelo <code> original </code> parâmetro."
  remarks: "O construtor FormParameter é um `protected` construtor usado para clonar um <xref:System.Web.UI.WebControls.FormParameter>instância.</xref:System.Web.UI.WebControls.FormParameter> Os valores de <xref:System.Web.UI.WebControls.FormParameter>, incluindo <xref:System.Web.UI.WebControls.FormParameter.FormField%2A>, <xref:System.Web.UI.WebControls.Parameter.Name%2A>, e <xref:System.Web.UI.WebControls.Parameter.Type%2A>são transferidos para a nova instância.</xref:System.Web.UI.WebControls.Parameter.Type%2A> </xref:System.Web.UI.WebControls.Parameter.Name%2A> </xref:System.Web.UI.WebControls.FormParameter.FormField%2A> </xref:System.Web.UI.WebControls.FormParameter>"
  syntax:
    content: protected FormParameter (System.Web.UI.WebControls.FormParameter original);
    parameters:
    - id: original
      type: System.Web.UI.WebControls.FormParameter
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> que a instância atual é inicializada de instância."
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(String,String)
  nameWithType: FormParameter.FormParameter(String,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância nomeada do <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> de classe, usando a cadeia de caracteres especificada para identificar qual campo de variável de formulário para associar a."
  remarks: "Um <xref:System.Web.UI.WebControls.FormParameter>objeto criado com o construtor FormParameter é inicializado com o nome do parâmetro especificado e a cadeia de caracteres que identifica a variável de forma que o parâmetro associa a.</xref:System.Web.UI.WebControls.FormParameter> O <xref:System.Web.UI.WebControls.Parameter.Type%2A>e <xref:System.Web.UI.WebControls.Parameter.Direction%2A>propriedades são inicializadas com os valores padrão.</xref:System.Web.UI.WebControls.Parameter.Direction%2A> </xref:System.Web.UI.WebControls.Parameter.Type%2A>"
  example:
  - "> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.FormParameter_2#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_211_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.FormParameter_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_211_1.aspx)]"
  syntax:
    content: public FormParameter (string name, string formField);
    parameters:
    - id: name
      type: System.String
      description: "O nome do parâmetro."
    - id: formField
      type: System.String
      description: "O nome da variável de forma que o objeto de parâmetro está associado ao. O padrão é <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)
  id: '#ctor(System.String,System.Data.DbType,System.String)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(String,DbType,String)
  nameWithType: FormParameter.FormParameter(String,DbType,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,DbType,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> de classe, usando a cadeia de caracteres especificada para identificar qual campo de variável de formulário para associar a."
  syntax:
    content: public FormParameter (string name, System.Data.DbType dbType, string formField);
    parameters:
    - id: name
      type: System.String
      description: "O nome do parâmetro."
    - id: dbType
      type: System.Data.DbType
      description: "O tipo de banco de dados do parâmetro."
    - id: formField
      type: System.String
      description: "O nome da variável de forma que o objeto de parâmetro está associado ao."
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)
  id: '#ctor(System.String,System.TypeCode,System.String)'
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormParameter(String,TypeCode,String)
  nameWithType: FormParameter.FormParameter(String,TypeCode,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,TypeCode,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância nomeada e fortemente tipada do <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> de classe, usando a cadeia de caracteres especificada para identificar qual variável de formulário para associar a."
  remarks: "Um <xref:System.Web.UI.WebControls.FormParameter>objeto criado com o construtor FormParameter é inicializado com o nome do parâmetro especificado, <xref:System.Web.UI.WebControls.Parameter.Type%2A>e a cadeia de caracteres que identifica a variável de forma que o parâmetro associa a.</xref:System.Web.UI.WebControls.Parameter.Type%2A> </xref:System.Web.UI.WebControls.FormParameter> Somente o <xref:System.Web.UI.WebControls.Parameter.Direction%2A>e <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A>propriedades são inicializadas com os valores padrão.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A> </xref:System.Web.UI.WebControls.Parameter.Direction%2A>"
  example:
  - "> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.FormParameter_3#1](~/add/codesnippet/csharp/8907b4db-f03b-4c6d-87a9-_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.FormParameter_3#1](~/add/codesnippet/visualbasic/8907b4db-f03b-4c6d-87a9-_1.aspx)]"
  syntax:
    content: public FormParameter (string name, TypeCode type, string formField);
    parameters:
    - id: name
      type: System.String
      description: "O nome do parâmetro."
    - id: type
      type: System.TypeCode
      description: "O tipo que representa o parâmetro. O padrão é <xref:System.TypeCode>.</xref:System.TypeCode>"
    - id: formField
      type: System.String
      description: "O nome da variável de forma que o objeto de parâmetro está associado ao. O padrão é <xref:System.String>.</xref:System.String>"
  overload: System.Web.UI.WebControls.FormParameter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.Clone
  id: Clone
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: Clone()
  nameWithType: FormParameter.Clone()
  fullName: System.Web.UI.WebControls.FormParameter.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Retorna uma duplicata do atual <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> instância."
  remarks: "As chamadas de método Clone o <xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>construtor cópia para inicializar uma nova instância do <xref:System.Web.UI.WebControls.FormParameter>classe com os valores da instância atual.</xref:System.Web.UI.WebControls.FormParameter> </xref:System.Web.UI.WebControls.FormParameter.%23ctor%2A>"
  syntax:
    content: protected override System.Web.UI.WebControls.Parameter Clone ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Parameter
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> que é uma cópia exata do atual."
  overload: System.Web.UI.WebControls.FormParameter.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  id: Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: Evaluate(HttpContext,Control)
  nameWithType: FormParameter.Evaluate(HttpContext,Control)
  fullName: System.Web.UI.WebControls.FormParameter.Evaluate(HttpContext,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Atualiza e retorna o valor da <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> objeto."
  remarks: "O <xref:System.Web.UI.WebControls.FormParameter>tenta associar à variável de formulário sempre é chamado o método Evaluate.</xref:System.Web.UI.WebControls.FormParameter>       O `context` parâmetro é usado pelo método avaliar para recuperar o valor do campo de formulário especificado na solicitação. O `control` parâmetro é ignorado."
  syntax:
    content: protected override object Evaluate (System.Web.HttpContext context, System.Web.UI.Control control);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Atual <xref href=&quot;System.Web.HttpContext&quot;> </xref> da solicitação."
    - id: control
      type: System.Web.UI.Control
      description: "Um <xref href=&quot;System.Web.UI.Control&quot;> </xref> que é associado à página em que o <xref href=&quot;System.Web.UI.WebControls.FormParameter&quot;> </xref> é usado."
    return:
      type: System.Object
      description: "Um objeto que representa o valor atualizado do parâmetro. Se a solicitação ou o contexto é nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic), o método Evaluate retorna nulo."
  overload: System.Web.UI.WebControls.FormParameter.Evaluate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.FormField
  id: FormField
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: FormField
  nameWithType: FormParameter.FormField
  fullName: System.Web.UI.WebControls.FormParameter.FormField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome da variável de forma que o parâmetro associa a."
  remarks: "O FormField identifica um par de nome/valor que é passado a <xref:System.Web.HttpRequest.Form%2A>coleção.</xref:System.Web.HttpRequest.Form%2A> Enquanto a propriedade FormField identifica o nome do par, o <xref:System.Web.UI.WebControls.FormParameter>associa a seu valor correspondente em tempo de execução.</xref:System.Web.UI.WebControls.FormParameter> Se o par de nome/valor de variável de cadeia de caracteres de formato esperado não for passado para a página da Web do ASP.NET na coleção, o <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>método associa o parâmetro para o valor da <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>propriedade, se ela está definida.</xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A> </xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> Se o <xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>não for definido, o <xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A>método falhar associar o parâmetro para um valor.</xref:System.Web.UI.WebControls.FormParameter.Evaluate%2A> </xref:System.Web.UI.WebControls.Parameter.DefaultValue%2A>"
  example:
  - "The following code example demonstrates how to display filtered data using an <xref:System.Web.UI.WebControls.ObjectDataSource> control and a <xref:System.Web.UI.WebControls.FormParameter> to retrieve data from a middle-tier business object and a <xref:System.Web.UI.WebControls.GridView> control to display the results.  \n  \n The code example consists of a <xref:System.Web.UI.WebControls.TextBox>, a <xref:System.Web.UI.WebControls.GridView> control, the <xref:System.Web.UI.WebControls.ObjectDataSource> control, and a submit button. By default, the <xref:System.Web.UI.WebControls.TextBox> is populated with the name of one of the Northwind Traders employees. The <xref:System.Web.UI.WebControls.GridView> displays information about the employee identified by the name in the <xref:System.Web.UI.WebControls.TextBox>. To retrieve data on another employee, enter the full name of the employee in the <xref:System.Web.UI.WebControls.TextBox> and click the button.  \n  \n The <xref:System.Web.UI.WebControls.ObjectDataSource.FilterExpression%2A> property specifies an expression used to filter the data retrieved by the <xref:System.Web.UI.WebControls.ObjectDataSource.SelectMethod%2A>. This property uses parameter placeholders that are evaluated to the parameters contained in the <xref:System.Web.UI.WebControls.ObjectDataSource.FilterParameters%2A> collection. In this example, the parameter placeholder is a <xref:System.Web.UI.WebControls.FormParameter> bound to the value of the <xref:System.Web.UI.WebControls.TextBox> control.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_952_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_952_1.aspx)]  \n  \n The following code example shows the middle-tier business object that the previous code example uses. This example consists of two basic classes: The `EmployeeLogic` class encapsulates business logic, and the `NorthwindEmployee` class is a model class that contains only the basic functionality required to load and persist data from the data tier. For simplicity, the `EmployeeLogic` class creates a static set of data, rather than retrieving the data from a data tier. It is also helpful for this example, because the sample relies on the user to provide the full name of a Northwind Traders employee to demonstrate filtering. For a complete working example, you must compile and use these classes with the ASP.NET code examples provided.  \n  \n> [!IMPORTANT]\n>  The <xref:System.Web.UI.WebControls.FormParameter> does not validate the value passed by the form element in any way; it uses the raw value. In most cases, you can validate the value of the <xref:System.Web.UI.WebControls.FormParameter> before it is used by a data source control by handling an event, such as the `Selecting`, `Updating`, `Inserting`, or `Deleting` event exposed by the data source control you are using. If the value of the parameter does not pass your validation tests, you can cancel the data operation by setting the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the associated <xref:System.ComponentModel.CancelEventArgs> class to `true`.  \n  \n [!code-cs[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_952_2.cs)]\n [!code-vb[System.Web.UI.WebControls.ObjectDataSource_9#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_952_2.vb)]"
  syntax:
    content: public string FormField { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que identifica a variável de formulário para o qual associa o parâmetro."
  overload: System.Web.UI.WebControls.FormParameter.FormField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormParameter.ValidateInput
  id: ValidateInput
  parent: System.Web.UI.WebControls.FormParameter
  langs:
  - csharp
  name: ValidateInput
  nameWithType: FormParameter.ValidateInput
  fullName: System.Web.UI.WebControls.FormParameter.ValidateInput
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o cliente no parâmetro de entrada é validado."
  syntax:
    content: public bool ValidateInput { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a entrada do cliente é validada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormParameter.ValidateInput*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.Parameter
  isExternal: false
  name: System.Web.UI.WebControls.Parameter
- uid: System.Web.UI.WebControls.FormParameter.#ctor
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter()
  nameWithType: FormParameter.FormParameter()
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter()
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.Web.UI.WebControls.FormParameter)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(FormParameter)
  nameWithType: FormParameter.FormParameter(FormParameter)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(FormParameter)
- uid: System.Web.UI.WebControls.FormParameter
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormParameter
  nameWithType: FormParameter
  fullName: System.Web.UI.WebControls.FormParameter
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(String,String)
  nameWithType: FormParameter.FormParameter(String,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.Data.DbType,System.String)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(String,DbType,String)
  nameWithType: FormParameter.FormParameter(String,DbType,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,DbType,String)
- uid: System.Data.DbType
  parent: System.Data
  isExternal: false
  name: DbType
  nameWithType: DbType
  fullName: System.Data.DbType
- uid: System.Web.UI.WebControls.FormParameter.#ctor(System.String,System.TypeCode,System.String)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter(String,TypeCode,String)
  nameWithType: FormParameter.FormParameter(String,TypeCode,String)
  fullName: System.Web.UI.WebControls.FormParameter.FormParameter(String,TypeCode,String)
- uid: System.TypeCode
  parent: System
  isExternal: true
  name: TypeCode
  nameWithType: TypeCode
  fullName: System.TypeCode
- uid: System.Web.UI.WebControls.FormParameter.Clone
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Clone()
  nameWithType: FormParameter.Clone()
  fullName: System.Web.UI.WebControls.FormParameter.Clone()
- uid: System.Web.UI.WebControls.FormParameter.Evaluate(System.Web.HttpContext,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Evaluate(HttpContext,Control)
  nameWithType: FormParameter.Evaluate(HttpContext,Control)
  fullName: System.Web.UI.WebControls.FormParameter.Evaluate(HttpContext,Control)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.FormParameter.FormField
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormField
  nameWithType: FormParameter.FormField
  fullName: System.Web.UI.WebControls.FormParameter.FormField
- uid: System.Web.UI.WebControls.FormParameter.ValidateInput
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: ValidateInput
  nameWithType: FormParameter.ValidateInput
  fullName: System.Web.UI.WebControls.FormParameter.ValidateInput
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormParameter.#ctor*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormParameter
  nameWithType: FormParameter.FormParameter
- uid: System.Web.UI.WebControls.FormParameter.Clone*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Clone
  nameWithType: FormParameter.Clone
- uid: System.Web.UI.WebControls.FormParameter.Evaluate*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: Evaluate
  nameWithType: FormParameter.Evaluate
- uid: System.Web.UI.WebControls.FormParameter.FormField*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: FormField
  nameWithType: FormParameter.FormField
- uid: System.Web.UI.WebControls.FormParameter.ValidateInput*
  parent: System.Web.UI.WebControls.FormParameter
  isExternal: false
  name: ValidateInput
  nameWithType: FormParameter.ValidateInput
