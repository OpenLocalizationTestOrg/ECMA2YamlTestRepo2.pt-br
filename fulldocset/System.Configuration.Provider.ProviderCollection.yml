### YamlMime:ManagedReference
items:
- uid: System.Configuration.Provider.ProviderCollection
  id: ProviderCollection
  children:
  - System.Configuration.Provider.ProviderCollection.#ctor
  - System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)
  - System.Configuration.Provider.ProviderCollection.Clear
  - System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  - System.Configuration.Provider.ProviderCollection.Count
  - System.Configuration.Provider.ProviderCollection.GetEnumerator
  - System.Configuration.Provider.ProviderCollection.IsSynchronized
  - System.Configuration.Provider.ProviderCollection.Item(System.String)
  - System.Configuration.Provider.ProviderCollection.Remove(System.String)
  - System.Configuration.Provider.ProviderCollection.SetReadOnly
  - System.Configuration.Provider.ProviderCollection.SyncRoot
  - System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  langs:
  - csharp
  name: ProviderCollection
  nameWithType: ProviderCollection
  fullName: System.Configuration.Provider.ProviderCollection
  type: Class
  summary: "Representa uma coleção de objetos de provedor que herdam de <xref href=&quot;System.Configuration.Provider.ProviderBase&quot;> </xref>."
  remarks: "A classe ProviderCollection utiliza uma subjacente <xref:System.Collections.Hashtable>objeto para armazenar os pares de nome/valor do provedor.</xref:System.Collections.Hashtable>"
  syntax:
    content: 'public class ProviderCollection : System.Collections.ICollection'
  inheritance:
  - System.Object
  implements:
  - System.Collections.ICollection
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.#ctor
  id: '#ctor'
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: ProviderCollection()
  nameWithType: ProviderCollection.ProviderCollection()
  fullName: System.Configuration.Provider.ProviderCollection.ProviderCollection()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.Provider.ProviderCollection&quot;> </xref> classe."
  remarks: "O construtor de ProviderCollection inicializa subjacente <xref:System.Collections.Hashtable>objeto usado para armazenar os itens da coleção.</xref:System.Collections.Hashtable>"
  syntax:
    content: public ProviderCollection ();
    parameters: []
  overload: System.Configuration.Provider.ProviderCollection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)
  id: Add(System.Configuration.Provider.ProviderBase)
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Add(ProviderBase)
  nameWithType: ProviderCollection.Add(ProviderBase)
  fullName: System.Configuration.Provider.ProviderCollection.Add(ProviderBase)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Adiciona um provedor à coleção."
  remarks: "O método Add verifica primeiro quaisquer exceções (conforme listado na seção de exceções) e, em seguida, chama o <xref:System.Collections.Hashtable.Add%2A?displayProperty=fullName>método.</xref:System.Collections.Hashtable.Add%2A?displayProperty=fullName> Ele passa o objeto referenciado pelo `provider` parâmetro, bem como a <xref:System.Configuration.Provider.ProviderBase.Name%2A>propriedade do provedor a ser usado como a chave no <xref:System.Collections.Hashtable>objeto.</xref:System.Collections.Hashtable> </xref:System.Configuration.Provider.ProviderBase.Name%2A>"
  syntax:
    content: public virtual void Add (System.Configuration.Provider.ProviderBase provider);
    parameters:
    - id: provider
      type: System.Configuration.Provider.ProviderBase
      description: "O provedor a ser adicionado."
  overload: System.Configuration.Provider.ProviderCollection.Add*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é somente leitura."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <xref:System.Configuration.Provider.ProviderBase.Name*> of <code>provider</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The length of the <xref:System.Configuration.Provider.ProviderBase.Name*> of <code>provider</code> is less than 1."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Clear
  id: Clear
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Clear()
  nameWithType: ProviderCollection.Clear()
  fullName: System.Configuration.Provider.ProviderCollection.Clear()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Remove todos os itens da coleção."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Configuration.Provider.ProviderCollection.Clear*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção é definida como somente leitura."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  id: CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: CopyTo(ProviderBase[],Int32)
  nameWithType: ProviderCollection.CopyTo(ProviderBase[],Int32)
  fullName: System.Configuration.Provider.ProviderCollection.CopyTo(ProviderBase[],Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Copia o conteúdo da coleção para a matriz fornecida, iniciando no índice especificado."
  remarks: "A matriz na qual os itens são copiados deve ter a indexação com base em zero."
  syntax:
    content: public void CopyTo (System.Configuration.Provider.ProviderBase[] array, int index);
    parameters:
    - id: array
      type: System.Configuration.Provider.ProviderBase[]
      description: "Copiar os elementos da coleção para a matriz."
    - id: index
      type: System.Int32
      description: "O índice do item de coleta no qual iniciar o processo de cópia."
  overload: System.Configuration.Provider.ProviderCollection.CopyTo*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Count
  id: Count
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Count
  nameWithType: ProviderCollection.Count
  fullName: System.Configuration.Provider.ProviderCollection.Count
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Obtém o número de provedores na coleção."
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de provedores na coleção."
  overload: System.Configuration.Provider.ProviderCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ProviderCollection.GetEnumerator()
  fullName: System.Configuration.Provider.ProviderCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Retorna um objeto que implementa o <xref:System.Collections.IEnumerator>interface para iterar pela coleção.</xref:System.Collections.IEnumerator>"
  remarks: "O <xref:System.Configuration.Provider.ProviderCollection>classe armazena sua coleção em uma <xref:System.Collections.Hashtable>objeto.</xref:System.Collections.Hashtable> </xref:System.Configuration.Provider.ProviderCollection> As chamadas do método GetEnumerator o <xref:System.Collections.Hashtable.GetEnumerator%2A?displayProperty=fullName>método.</xref:System.Collections.Hashtable.GetEnumerator%2A?displayProperty=fullName>"
  syntax:
    content: public System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um objeto que implementa <xref:System.Collections.IEnumerator>para iterar pela coleção.</xref:System.Collections.IEnumerator>"
  overload: System.Configuration.Provider.ProviderCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: ProviderCollection.IsSynchronized
  fullName: System.Configuration.Provider.ProviderCollection.IsSynchronized
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Obtém um valor que indica se o acesso à coleção é sincronizado (thread-safe)."
  remarks: "Esta propriedade está incluída para atender a <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection>"
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Configuration.Provider.ProviderCollection.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Item(String)
  nameWithType: ProviderCollection.Item(String)
  fullName: System.Configuration.Provider.ProviderCollection.Item(String)
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Obtém o provedor com o nome especificado."
  syntax:
    content: public System.Configuration.Provider.ProviderBase this[string name] { get; }
    parameters:
    - id: name
      type: System.String
      description: "A chave pelo qual o provedor é identificado."
    return:
      type: System.Configuration.Provider.ProviderBase
      description: "O provedor com o nome especificado."
  overload: System.Configuration.Provider.ProviderCollection.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.Remove(System.String)
  id: Remove(System.String)
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: Remove(String)
  nameWithType: ProviderCollection.Remove(String)
  fullName: System.Configuration.Provider.ProviderCollection.Remove(String)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Remove um provedor da coleção."
  syntax:
    content: public void Remove (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do provedor a ser removido."
  overload: System.Configuration.Provider.ProviderCollection.Remove*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A coleção já foi definida como somente leitura."
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly
  id: SetReadOnly
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: ProviderCollection.SetReadOnly()
  fullName: System.Configuration.Provider.ProviderCollection.SetReadOnly()
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Define uma coleção somente leitura."
  remarks: "O <xref:System.Configuration.Provider.ProviderCollection>classe é leitura/gravação por padrão.</xref:System.Configuration.Provider.ProviderCollection> O método SetReadOnly torna a coleção somente leitura. Depois que uma coleção é definida como somente leitura, chama um método (como <xref:System.Configuration.Provider.ProviderCollection.Remove%2A>e <xref:System.Configuration.Provider.ProviderCollection.Add%2A>resultará em uma exceção.</xref:System.Configuration.Provider.ProviderCollection.Add%2A> </xref:System.Configuration.Provider.ProviderCollection.Remove%2A>       Observe que a maioria dos recursos baseados em provedor definirá seus <xref:System.Configuration.Provider.ProviderCollection>objeto como somente leitura depois de criar instâncias de todos os provedores configurados.</xref:System.Configuration.Provider.ProviderCollection>"
  syntax:
    content: public void SetReadOnly ();
    parameters: []
  overload: System.Configuration.Provider.ProviderCollection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.SyncRoot
  id: SyncRoot
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: SyncRoot
  nameWithType: ProviderCollection.SyncRoot
  fullName: System.Configuration.Provider.ProviderCollection.SyncRoot
  type: Property
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Obtém o objeto atual."
  remarks: "Esta propriedade está incluída para atender a <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection>"
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "O objeto atual."
  overload: System.Configuration.Provider.ProviderCollection.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  id: System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  isEii: true
  parent: System.Configuration.Provider.ProviderCollection
  langs:
  - csharp
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.Provider.ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration.Provider
  summary: "Copia os elementos de <xref href=&quot;System.Configuration.Provider.ProviderCollection&quot;> </xref> em uma matriz, começando em um índice de matriz específico."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando a instância de CopyTo é convertida em um <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection>"
  syntax:
    content: void ICollection.CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "Copiar os elementos da coleção para a matriz."
    - id: index
      type: System.Int32
      description: "O índice da matriz na qual iniciar a cópia de instâncias do provedor da coleção."
  overload: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Configuration.Provider.ProviderCollection.#ctor
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: ProviderCollection()
  nameWithType: ProviderCollection.ProviderCollection()
  fullName: System.Configuration.Provider.ProviderCollection.ProviderCollection()
- uid: System.Configuration.Provider.ProviderCollection.Add(System.Configuration.Provider.ProviderBase)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Add(ProviderBase)
  nameWithType: ProviderCollection.Add(ProviderBase)
  fullName: System.Configuration.Provider.ProviderCollection.Add(ProviderBase)
- uid: System.Configuration.Provider.ProviderBase
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.Provider.ProviderCollection.Clear
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Clear()
  nameWithType: ProviderCollection.Clear()
  fullName: System.Configuration.Provider.ProviderCollection.Clear()
- uid: System.Configuration.Provider.ProviderCollection.CopyTo(System.Configuration.Provider.ProviderBase[],System.Int32)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: CopyTo(ProviderBase[],Int32)
  nameWithType: ProviderCollection.CopyTo(ProviderBase[],Int32)
  fullName: System.Configuration.Provider.ProviderCollection.CopyTo(ProviderBase[],Int32)
- uid: System.Configuration.Provider.ProviderBase[]
  parent: System.Configuration.Provider
  isExternal: false
  name: ProviderBase
  nameWithType: ProviderBase
  fullName: System.Configuration.Provider.ProviderBase[]
  spec.csharp:
  - uid: System.Configuration.Provider.ProviderBase
    name: ProviderBase
    nameWithType: ProviderBase
    fullName: ProviderBase[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Configuration.Provider.ProviderCollection.Count
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Count
  nameWithType: ProviderCollection.Count
  fullName: System.Configuration.Provider.ProviderCollection.Count
- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ProviderCollection.GetEnumerator()
  fullName: System.Configuration.Provider.ProviderCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ProviderCollection.IsSynchronized
  fullName: System.Configuration.Provider.ProviderCollection.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.Provider.ProviderCollection.Item(System.String)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Item(String)
  nameWithType: ProviderCollection.Item(String)
  fullName: System.Configuration.Provider.ProviderCollection.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.Provider.ProviderCollection.Remove(System.String)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Remove(String)
  nameWithType: ProviderCollection.Remove(String)
  fullName: System.Configuration.Provider.ProviderCollection.Remove(String)
- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: SetReadOnly()
  nameWithType: ProviderCollection.SetReadOnly()
  fullName: System.Configuration.Provider.ProviderCollection.SetReadOnly()
- uid: System.Configuration.Provider.ProviderCollection.SyncRoot
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ProviderCollection.SyncRoot
  fullName: System.Configuration.Provider.ProviderCollection.SyncRoot
- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo(System.Array,System.Int32)
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo(Array,Int32)
  nameWithType: ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)
  fullName: System.Configuration.Provider.ProviderCollection.System.Collections.ICollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Configuration.Provider.ProviderCollection.#ctor*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: ProviderCollection
  nameWithType: ProviderCollection.ProviderCollection
- uid: System.Configuration.Provider.ProviderCollection.Add*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Add
  nameWithType: ProviderCollection.Add
- uid: System.Configuration.Provider.ProviderCollection.Clear*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Clear
  nameWithType: ProviderCollection.Clear
- uid: System.Configuration.Provider.ProviderCollection.CopyTo*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: CopyTo
  nameWithType: ProviderCollection.CopyTo
- uid: System.Configuration.Provider.ProviderCollection.Count*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Count
  nameWithType: ProviderCollection.Count
- uid: System.Configuration.Provider.ProviderCollection.GetEnumerator*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ProviderCollection.GetEnumerator
- uid: System.Configuration.Provider.ProviderCollection.IsSynchronized*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: IsSynchronized
  nameWithType: ProviderCollection.IsSynchronized
- uid: System.Configuration.Provider.ProviderCollection.Item*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Item
  nameWithType: ProviderCollection.Item
- uid: System.Configuration.Provider.ProviderCollection.Remove*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: Remove
  nameWithType: ProviderCollection.Remove
- uid: System.Configuration.Provider.ProviderCollection.SetReadOnly*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: SetReadOnly
  nameWithType: ProviderCollection.SetReadOnly
- uid: System.Configuration.Provider.ProviderCollection.SyncRoot*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: SyncRoot
  nameWithType: ProviderCollection.SyncRoot
- uid: System.Configuration.Provider.ProviderCollection.System#Collections#ICollection#CopyTo*
  parent: System.Configuration.Provider.ProviderCollection
  isExternal: false
  name: System.Collections.ICollection.CopyTo
  nameWithType: ProviderCollection.System.Collections.ICollection.CopyTo
