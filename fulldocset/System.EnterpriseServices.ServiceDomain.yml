### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.ServiceDomain
  id: ServiceDomain
  children:
  - System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  - System.EnterpriseServices.ServiceDomain.Leave
  langs:
  - csharp
  name: ServiceDomain
  nameWithType: ServiceDomain
  fullName: System.EnterpriseServices.ServiceDomain
  type: Class
  summary: "Permite que um segmento de código identificado por <> </> *> e <> </> *> para executar em seu próprio contexto e se comportam como se fosse um método que é chamado em um objeto criado dentro do contexto. Essa classe não pode ser herdada."
  remarks: "O <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>métodos são usados em pares, coloque o código que pode usar serviços COM+.</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> Código que é colocado entre as chamadas para <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>é executado em seu próprio contexto e se comporta como se fosse um método que é chamado em um objeto criado dentro do contexto.</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> O <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>pares podem ser aninhados.</xref:System.EnterpriseServices.ServiceDomain.Leave%2A> </xref:System.EnterpriseServices.ServiceDomain.Enter%2A> Depende do usuário para certificar-se de que os pares de chamadas são balanceados para que todas as chamadas para <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>corresponder a uma chamada anterior para <xref:System.EnterpriseServices.ServiceDomain.Enter%2A>.</xref:System.EnterpriseServices.ServiceDomain.Enter%2A> </xref:System.EnterpriseServices.ServiceDomain.Leave%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public sealed class ServiceDomain
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  id: Enter(System.EnterpriseServices.ServiceConfig)
  parent: System.EnterpriseServices.ServiceDomain
  langs:
  - csharp
  name: Enter(ServiceConfig)
  nameWithType: ServiceDomain.Enter(ServiceConfig)
  fullName: System.EnterpriseServices.ServiceDomain.Enter(ServiceConfig)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Cria o contexto especificado pelo <xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;> </xref> de objeto e envia-lo para a pilha de contexto para se tornar o contexto atual."
  remarks: "Insira primeiro cria um contexto configurado conforme especificado pelo <xref:System.EnterpriseServices.ServiceConfig>objeto que é passado como o `cfg` parâmetro.</xref:System.EnterpriseServices.ServiceConfig> Políticas nos lados do cliente e servidor, em seguida, são acionadas como se tivesse ocorrido uma chamada de método. O novo contexto enviada por push para uma pilha de contexto e se torna o contexto atual. Devido ao seu design eficiente e porque nenhum thread marshaling estiver envolvido, usando Enter e <xref:System.EnterpriseServices.ServiceDomain.Leave%2A>envolve reduzido significativamente a sobrecarga em comparação com uma chamada de método equivalente.</xref:System.EnterpriseServices.ServiceDomain.Leave%2A>"
  syntax:
    content: public static void Enter (System.EnterpriseServices.ServiceConfig cfg);
    parameters:
    - id: cfg
      type: System.EnterpriseServices.ServiceConfig
      description: "Um <xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;> </xref> que contém as informações de configuração para os serviços a serem usados no código incluído."
  overload: System.EnterpriseServices.ServiceDomain.Enter*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;></xref>Não há suporte na plataforma atual."
  platform:
  - net462
- uid: System.EnterpriseServices.ServiceDomain.Leave
  id: Leave
  parent: System.EnterpriseServices.ServiceDomain
  langs:
  - csharp
  name: Leave()
  nameWithType: ServiceDomain.Leave()
  fullName: System.EnterpriseServices.ServiceDomain.Leave()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Aciona o servidor e, em seguida, as políticas do lado do cliente, como se foram retornando uma chamada de método. O contexto atual é exibido, em seguida, a pilha de contexto e o contexto que estava executando quando <xref:System.EnterpriseServices.ServiceDomain.Enter*>foi chamado torna-se o contexto atual.</xref:System.EnterpriseServices.ServiceDomain.Enter*>"
  syntax:
    content: public static System.EnterpriseServices.TransactionStatus Leave ();
    parameters: []
    return:
      type: System.EnterpriseServices.TransactionStatus
      description: "Uma da <xref href=&quot;System.EnterpriseServices.TransactionStatus&quot;> </xref> valores."
  overload: System.EnterpriseServices.ServiceDomain.Leave*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "<xref href=&quot;System.EnterpriseServices.ServiceConfig&quot;></xref>Não há suporte na plataforma atual."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.EnterpriseServices.ServiceDomain.Enter(System.EnterpriseServices.ServiceConfig)
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Enter(ServiceConfig)
  nameWithType: ServiceDomain.Enter(ServiceConfig)
  fullName: System.EnterpriseServices.ServiceDomain.Enter(ServiceConfig)
- uid: System.EnterpriseServices.ServiceConfig
  parent: System.EnterpriseServices
  isExternal: false
  name: ServiceConfig
  nameWithType: ServiceConfig
  fullName: System.EnterpriseServices.ServiceConfig
- uid: System.EnterpriseServices.ServiceDomain.Leave
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Leave()
  nameWithType: ServiceDomain.Leave()
  fullName: System.EnterpriseServices.ServiceDomain.Leave()
- uid: System.EnterpriseServices.TransactionStatus
  parent: System.EnterpriseServices
  isExternal: false
  name: TransactionStatus
  nameWithType: TransactionStatus
  fullName: System.EnterpriseServices.TransactionStatus
- uid: System.EnterpriseServices.ServiceDomain.Enter*
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Enter
  nameWithType: ServiceDomain.Enter
- uid: System.EnterpriseServices.ServiceDomain.Leave*
  parent: System.EnterpriseServices.ServiceDomain
  isExternal: false
  name: Leave
  nameWithType: ServiceDomain.Leave
