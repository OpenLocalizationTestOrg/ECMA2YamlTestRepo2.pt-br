### YamlMime:ManagedReference
items:
- uid: System.Web.HttpContext
  id: HttpContext
  children:
  - System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  - System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  - System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  - System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  - System.Web.HttpContext.AddError(System.Exception)
  - System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  - System.Web.HttpContext.AllErrors
  - System.Web.HttpContext.AllowAsyncDuringSyncStages
  - System.Web.HttpContext.Application
  - System.Web.HttpContext.ApplicationInstance
  - System.Web.HttpContext.AsyncPreloadMode
  - System.Web.HttpContext.Cache
  - System.Web.HttpContext.ClearError
  - System.Web.HttpContext.Current
  - System.Web.HttpContext.CurrentHandler
  - System.Web.HttpContext.CurrentNotification
  - System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  - System.Web.HttpContext.Error
  - System.Web.HttpContext.GetAppConfig(System.String)
  - System.Web.HttpContext.GetConfig(System.String)
  - System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  - System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  - System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  - System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  - System.Web.HttpContext.GetSection(System.String)
  - System.Web.HttpContext.Handler
  - System.Web.HttpContext.IsCustomErrorEnabled
  - System.Web.HttpContext.IsDebuggingEnabled
  - System.Web.HttpContext.IsPostNotification
  - System.Web.HttpContext.IsWebSocketRequest
  - System.Web.HttpContext.IsWebSocketRequestUpgrading
  - System.Web.HttpContext.Items
  - System.Web.HttpContext.PageInstrumentation
  - System.Web.HttpContext.PreviousHandler
  - System.Web.HttpContext.Profile
  - System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  - System.Web.HttpContext.Request
  - System.Web.HttpContext.Response
  - System.Web.HttpContext.RewritePath(System.String)
  - System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  - System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  - System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  - System.Web.HttpContext.Server
  - System.Web.HttpContext.Session
  - System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  - System.Web.HttpContext.SkipAuthorization
  - System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  - System.Web.HttpContext.ThreadAbortOnTimeout
  - System.Web.HttpContext.Timestamp
  - System.Web.HttpContext.Trace
  - System.Web.HttpContext.User
  - System.Web.HttpContext.WebSocketNegotiatedProtocol
  - System.Web.HttpContext.WebSocketRequestedProtocols
  langs:
  - csharp
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
  type: Class
  summary: "Encapsula todas as informações específicas a HTTP sobre uma solicitação HTTP individual."
  remarks: "As classes que herdam o <xref:System.Web.IHttpModule>e <xref:System.Web.IHttpHandler>interfaces são fornecidas uma referência a um objeto HttpContext para a solicitação HTTP atual.</xref:System.Web.IHttpHandler> </xref:System.Web.IHttpModule> O objeto fornece acesso aos intrínseca <xref:System.Web.HttpContext.Request%2A>, <xref:System.Web.HttpContext.Response%2A>, e <xref:System.Web.HttpContext.Server%2A>Propriedades para a solicitação.</xref:System.Web.HttpContext.Server%2A> </xref:System.Web.HttpContext.Response%2A> </xref:System.Web.HttpContext.Request%2A>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192422).  \n  \n The following example demonstrates how to access and display properties of the HttpContext object. The context of the current HTTP request is accessed by using the <xref:System.Web.UI.Page.Context%2A> property of the <xref:System.Web.UI.Page> object.  \n  \n [!code-vb[System.Web.HttpContext#1](~/add/codesnippet/visualbasic/t-system.web.httpcontext_1.aspx)]\n [!code-cs[System.Web.HttpContext#1](~/add/codesnippet/csharp/t-system.web.httpcontext_1.aspx)]"
  syntax:
    content: 'public sealed class HttpContext : IServiceProvider'
  inheritance:
  - System.Object
  implements:
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  id: '#ctor(System.Web.HttpWorkerRequest)'
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: HttpContext(HttpWorkerRequest)
  nameWithType: HttpContext.HttpContext(HttpWorkerRequest)
  fullName: System.Web.HttpContext.HttpContext(HttpWorkerRequest)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpContext&quot;> </xref> classe que usa o objeto de solicitação de trabalho especificado."
  syntax:
    content: public HttpContext (System.Web.HttpWorkerRequest wr);
    parameters:
    - id: wr
      type: System.Web.HttpWorkerRequest
      description: "O <xref href=&quot;System.Web.HttpWorkerRequest&quot;> </xref> objeto para a solicitação HTTP atual."
  overload: System.Web.HttpContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  id: '#ctor(System.Web.HttpRequest,System.Web.HttpResponse)'
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: HttpContext(HttpRequest,HttpResponse)
  nameWithType: HttpContext.HttpContext(HttpRequest,HttpResponse)
  fullName: System.Web.HttpContext.HttpContext(HttpRequest,HttpResponse)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpContext&quot;> </xref> classe usando os objetos de solicitação e resposta especificados."
  syntax:
    content: public HttpContext (System.Web.HttpRequest request, System.Web.HttpResponse response);
    parameters:
    - id: request
      type: System.Web.HttpRequest
      description: "O <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objeto para a solicitação HTTP atual."
    - id: response
      type: System.Web.HttpResponse
      description: "O <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objeto para a solicitação HTTP atual."
  overload: System.Web.HttpContext.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  id: AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aceita um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> solicitação usando a função de usuário especificado."
  remarks: "Chamar esse método é equivalente a chamar o <xref:System.Web.HttpContext.AcceptWebSocketRequest%2A>sobrecarga de método e passando `null` para o `options` parâmetro.</xref:System.Web.HttpContext.AcceptWebSocketRequest%2A>"
  syntax:
    content: public void AcceptWebSocketRequest (Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task> userFunc);
    parameters:
    - id: userFunc
      type: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
      description: "A função de usuário."
  overload: System.Web.HttpContext.AcceptWebSocketRequest*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>userFunc</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A solicitação não é um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> solicitação."
  platform:
  - net462
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  id: AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Aceita um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> solicitação usando o objeto de função e as opções de usuário especificado."
  syntax:
    content: public void AcceptWebSocketRequest (Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task> userFunc, System.Web.WebSockets.AspNetWebSocketOptions options);
    parameters:
    - id: userFunc
      type: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
      description: "A função de usuário."
    - id: options
      type: System.Web.WebSockets.AspNetWebSocketOptions
      description: "O objeto de opções."
  overload: System.Web.HttpContext.AcceptWebSocketRequest*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>userFunc</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A solicitação não é um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> solicitação."
  platform:
  - net462
- uid: System.Web.HttpContext.AddError(System.Exception)
  id: AddError(System.Exception)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AddError(Exception)
  nameWithType: HttpContext.AddError(Exception)
  fullName: System.Web.HttpContext.AddError(Exception)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Adiciona uma exceção à coleção de exceção para a solicitação HTTP atual."
  syntax:
    content: public void AddError (Exception errorInfo);
    parameters:
    - id: errorInfo
      type: System.Exception
      description: "O <xref:System.Exception>para adicionar à coleção de exceção.</xref:System.Exception>"
  overload: System.Web.HttpContext.AddError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  id: AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AddOnRequestCompleted(Action<HttpContext>)
  nameWithType: HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  fullName: System.Web.HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Gera um evento virtual que ocorre quando a parte HTTP da solicitação está terminando."
  remarks: "Esse evento ocorre antes do <xref:System.Web.WebSockets.AspNetWebSocket>conexão começa.</xref:System.Web.WebSockets.AspNetWebSocket>"
  syntax:
    content: public System.Web.ISubscriptionToken AddOnRequestCompleted (Action<System.Web.HttpContext> callback);
    parameters:
    - id: callback
      type: System.Action{System.Web.HttpContext}
      description: "O objeto de contexto HTTP."
    return:
      type: System.Web.ISubscriptionToken
      description: "O token de assinatura."
  overload: System.Web.HttpContext.AddOnRequestCompleted*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>callback</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.HttpContext.AllErrors
  id: AllErrors
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AllErrors
  nameWithType: HttpContext.AllErrors
  fullName: System.Web.HttpContext.AllErrors
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma matriz de erros acumulados durante o processamento de uma solicitação HTTP."
  syntax:
    content: public Exception[] AllErrors { get; }
    return:
      type: System.Exception[]
      description: "Uma matriz de <xref:System.Exception>objetos para a solicitação HTTP atual.</xref:System.Exception>"
  overload: System.Web.HttpContext.AllErrors*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages
  id: AllowAsyncDuringSyncStages
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
  fullName: System.Web.HttpContext.AllowAsyncDuringSyncStages
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define um valor que indica se as operações assíncronas é permitida durante partes do processamento da solicitação ASP.NET quando eles não são esperados."
  remarks: "Se este sinalizador não está definido como `true`, ASP.NET lançará uma exceção quando ele detecta os aplicativos usem a API assíncrona. Isso pode ocorrer se você tentar chamar um método assíncrono durante uma parte da solicitação de pipeline de processamento em que as operações assíncronas não é esperada, ou se há trabalho assíncrono ainda pendente quando um módulo ou manipulador assíncrono sinaliza a conclusão. Esse comportamento destina-se como uma rede de segurança para informá-lo desde o início se você está escrevendo código assíncrono que não se encaixa esperado padrões e pode ter efeitos colaterais negativos."
  syntax:
    content: public bool AllowAsyncDuringSyncStages { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se o ASP.NET gera uma exceção quando a API assíncrona é usada em um tempo quando não é esperado; Caso contrário, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.AllowAsyncDuringSyncStages*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Application
  id: Application
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Application
  nameWithType: HttpContext.Application
  fullName: System.Web.HttpContext.Application
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> objeto para a solicitação HTTP atual."
  syntax:
    content: public System.Web.HttpApplicationState Application { get; }
    return:
      type: System.Web.HttpApplicationState
      description: "O <xref href=&quot;System.Web.HttpApplicationState&quot;> </xref> para a solicitação HTTP atual.       Para obter o <xref href=&quot;System.Web.HttpApplication&quot;> </xref> de objeto para a solicitação HTTP atual, use <xref:System.Web.HttpContext.ApplicationInstance*>.</xref:System.Web.HttpContext.ApplicationInstance*> (O ASP.NET usa <xref uid=&quot;langword_csharp_ApplicationInstance&quot; name=&quot;ApplicationInstance&quot; href=&quot;&quot;> </xref> em vez de <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> como um nome de propriedade para se referir a atual <xref href=&quot;System.Web.HttpApplication&quot;> </xref> instância para evitar confusão entre ASP.NET e ASP clássico. No ASP clássico, <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> refere-se ao dicionário de estado de aplicativo global.)"
  overload: System.Web.HttpContext.Application*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ApplicationInstance
  id: ApplicationInstance
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
  fullName: System.Web.HttpContext.ApplicationInstance
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o <xref href=&quot;System.Web.HttpApplication&quot;> </xref> objeto para a solicitação HTTP atual."
  syntax:
    content: public System.Web.HttpApplication ApplicationInstance { get; set; }
    return:
      type: System.Web.HttpApplication
      description: "O <xref href=&quot;System.Web.HttpApplication&quot;> </xref> para a solicitação HTTP atual.       O ASP.NET usa <xref uid=&quot;langword_csharp_ApplicationInstance&quot; name=&quot;ApplicationInstance&quot; href=&quot;&quot;> </xref> em vez de <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> como um nome de propriedade para se referir a atual <xref href=&quot;System.Web.HttpApplication&quot;> </xref> instância para evitar confusão entre ASP.NET e ASP clássico. No ASP clássico, <xref uid=&quot;langword_csharp_Application&quot; name=&quot;Application&quot; href=&quot;&quot;> </xref> refere-se ao dicionário de estado de aplicativo global."
  overload: System.Web.HttpContext.ApplicationInstance*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O aplicativo Web está em execução no IIS 7.0 no modo integrado e foi feita uma tentativa para alterar o valor da propriedade de um valor não nulo para <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.HttpContext.AsyncPreloadMode
  id: AsyncPreloadMode
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
  fullName: System.Web.HttpContext.AsyncPreloadMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define um objeto que contém os sinalizadores que pertencem ao modo de pré-carregamento assíncrono."
  remarks: "Na primeira vez em que esta propriedade é acessada, o objeto que contém sinalizadores de modo assíncrono de pré-carregamento será carregado a partir de <xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A>configuração no arquivo de configuração.</xref:System.Web.Configuration.HttpRuntimeSection.AsyncPreloadMode%2A>       Embora essa propriedade pode ser definida por meio de programação, alterar o valor da propriedade só tem efeito se a propriedade é definida antes do `ExecuteRequestHandler` etapa no pipeline de solicitação do ASP.NET."
  syntax:
    content: public System.Web.Configuration.AsyncPreloadModeFlags AsyncPreloadMode { get; set; }
    return:
      type: System.Web.Configuration.AsyncPreloadModeFlags
      description: "Um objeto que contém os sinalizadores que pertencem ao modo de pré-carregamento assíncrono."
  overload: System.Web.HttpContext.AsyncPreloadMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Cache
  id: Cache
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Cache
  nameWithType: HttpContext.Cache
  fullName: System.Web.HttpContext.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> objeto para o domínio de aplicativo atual."
  remarks: "Há uma instância de <xref:System.Web.Caching.Cache>classe por domínio de aplicativo.</xref:System.Web.Caching.Cache> Como resultado, o <xref:System.Web.Caching.Cache>objeto que é retornado pela propriedade de Cache é a <xref:System.Web.Caching.Cache>objeto para todas as solicitações no domínio do aplicativo.</xref:System.Web.Caching.Cache> </xref:System.Web.Caching.Cache>"
  syntax:
    content: public System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "O <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> para o domínio de aplicativo atual."
  overload: System.Web.HttpContext.Cache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ClearError
  id: ClearError
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ClearError()
  nameWithType: HttpContext.ClearError()
  fullName: System.Web.HttpContext.ClearError()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Limpa todos os erros para a solicitação HTTP atual."
  syntax:
    content: public void ClearError ();
    parameters: []
  overload: System.Web.HttpContext.ClearError*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Current
  id: Current
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Current
  nameWithType: HttpContext.Current
  fullName: System.Web.HttpContext.Current
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto para a solicitação HTTP atual."
  remarks: "Esta propriedade é uma propriedade estática da <xref:System.Web.HttpContext>classe.</xref:System.Web.HttpContext> Os repositórios de propriedades de <xref:System.Web.HttpContext>instância aplica-se a solicitação atual.</xref:System.Web.HttpContext> As propriedades desta instância são as propriedades não-estático de <xref:System.Web.HttpContext>classe.</xref:System.Web.HttpContext>       Você também pode usar o <xref:System.Web.UI.Page.Context%2A?displayProperty=fullName>propriedade para acessar o <xref:System.Web.HttpContext>objeto para a solicitação HTTP atual.</xref:System.Web.HttpContext> </xref:System.Web.UI.Page.Context%2A?displayProperty=fullName>"
  example:
  - "The following code example uses the Current property to access the <xref:System.Web.HttpContext.AddError%2A?displayProperty=fullName> and <xref:System.Web.HttpContext.ClearError%2A?displayProperty=fullName> methods and the <xref:System.Web.HttpContext.AllErrors%2A?displayProperty=fullName> property. The example creates three custom exceptions using the <xref:System.Web.HttpContext.AddError%2A> method and uses the <xref:System.Web.HttpContext.AllErrors%2A> property to load these exceptions to an array. It then writes the array to the containing page and uses the <xref:System.Web.HttpContext.ClearError%2A> method to clear all the errors from the <xref:System.Web.UI.Page.Context%2A> property.  \n  \n```c#  \nprotected void Page_Load(object sender, EventArgs e)  \n{  \n    HttpContext context = HttpContext.Current;  \n    Response.Write(\"<p>HttpContext.Current Example:</p>\");  \n  \n    // Add three custom exceptions.  \n    context.AddError(new Exception(\"New Exception #1\"));  \n    context.AddError(new Exception(\"New Exception #2\"));  \n    context.AddError(new Exception(\"New Exception #3\"));  \n  \n    // Capture all the new Exceptions in an array.  \n    Exception[] errs = context.AllErrors;  \n  \n    foreach (Exception ex in errs)  \n    {  \n        Response.Write(\"<p>\" + Server.HtmlEncode(ex.ToString()) + \"</p>\");  \n    }  \n  \n    // Clear the exceptions so ASP.NET won't handle them.  \n    context.ClearError();  \n}  \n```  \n  \n```vb  \nProtected Sub Page_Load(sender As Object, e As EventArgs)  \nDim context As HttpContext = HttpContext.Current  \nResponse.Write(\"<p>HttpContext.Current Example:</p>\")  \n  \n' Add three custom exceptions.  \ncontext.AddError(New Exception(\"New Exception #1\"))  \ncontext.AddError(New Exception(\"New Exception #2\"))  \ncontext.AddError(New Exception(\"New Exception #3\"))  \n  \n' Capture all the new Exceptions in an array.  \nDim errs As Exception() = context.AllErrors  \n  \nFor Each ex As Exception In errs  \nResponse.Write(\"<p>\" & Server.HtmlEncode(ex.ToString()) & \"</p>\")  \nNext  \n  \n' Clear the exceptions so ASP.NET won't handle them.  \ncontext.ClearError()  \nEnd Sub  \n  \n```"
  syntax:
    content: public static System.Web.HttpContext Current { get; set; }
    return:
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> instância para a solicitação HTTP atual."
  overload: System.Web.HttpContext.Current*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.CurrentHandler
  id: CurrentHandler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
  fullName: System.Web.HttpContext.CurrentHandler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> objeto que representa o manipulador atualmente em execução."
  remarks: "O manipulador atualmente em execução que é referenciado pela propriedade CurrentHandler pode ser diferente do manipulador que é referenciado pelo <xref:System.Web.HttpContext.Handler%2A>propriedade.</xref:System.Web.HttpContext.Handler%2A> Isso pode ocorrer quando outro manipulador foi solicitado por meio de <xref:System.Web.HttpServerUtility.Execute%2A>método ou o <xref:System.Web.HttpServerUtility.Transfer%2A>método.</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A> Quando o manipulador atualmente em execução termina o processamento, o manipulador de determinados anteriormente será restaurado."
  syntax:
    content: public System.Web.IHttpHandler CurrentHandler { get; }
    return:
      type: System.Web.IHttpHandler
      description: "Um <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> que representa o manipulador atualmente em execução."
  overload: System.Web.HttpContext.CurrentHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.CurrentNotification
  id: CurrentNotification
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
  fullName: System.Web.HttpContext.CurrentNotification
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um <xref href=&quot;System.Web.RequestNotification&quot;> </xref> valor que indica o atual <xref href=&quot;System.Web.HttpApplication&quot;> </xref> evento que está sendo processada."
  remarks: "A propriedade CurrentNotification requer o modo de pipeline integrado no [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e pelo menos o .NET Framework versão 3.0. Quando disponível, a propriedade retorna um <xref:System.Web.RequestNotification>valor.</xref:System.Web.RequestNotification> O valor da propriedade CurrentNotification indica qual evento no <xref:System.Web.HttpApplication>instância está atualmente processando a solicitação.</xref:System.Web.HttpApplication>       A propriedade CurrentNotification não se destina a ser definido. Em vez disso, ele é definido pela [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] durante o processamento da solicitação no pipeline do ASP.NET. Definindo a propriedade CurrentNotification resultará em um erro de compilação.       CurrentNotification é introduzido no .NET Framework versão 3.5.  Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the CurrentNotification property to determine what event of the <xref:System.Web.HttpApplication> object that is handling the current request is being processed. In the example, the event handler handles several events of the <xref:System.Web.HttpApplication> object, and the CurrentNotification property determines what code is invoked for each event being handled.  \n  \n [!code-cs[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/csharp/p-system.web.httpcontext_0_1.cs)]\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_0_1.vb)]"
  syntax:
    content: public System.Web.RequestNotification CurrentNotification { get; }
    return:
      type: System.Web.RequestNotification
      description: "Uma da <xref href=&quot;System.Web.RequestNotification&quot;> </xref> valores."
  overload: System.Web.HttpContext.CurrentNotification*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A operação requer o modo de pipeline integrado no [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e pelo menos o .NET Framework versão 3.0."
  platform:
  - net462
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  id: DisposeOnPipelineCompleted(System.IDisposable)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: DisposeOnPipelineCompleted(IDisposable)
  nameWithType: HttpContext.DisposeOnPipelineCompleted(IDisposable)
  fullName: System.Web.HttpContext.DisposeOnPipelineCompleted(IDisposable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Permite que um objeto <xref:System.IDisposable.Dispose*>método a ser chamado quando o <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> parte de conexão dessa solicitação é concluída.</xref:System.IDisposable.Dispose*>"
  remarks: "O <xref:System.IDisposable.Dispose%2A>método do objeto de destino é chamado após a parte HTTP da solicitação e o <xref:System.Web.WebSockets.AspNetWebSocket>conexão foram encerrados.</xref:System.Web.WebSockets.AspNetWebSocket> </xref:System.IDisposable.Dispose%2A> O <xref:System.Web.HttpContext>objeto não está disponível para inspeção.</xref:System.Web.HttpContext>"
  syntax:
    content: public System.Web.ISubscriptionToken DisposeOnPipelineCompleted (IDisposable target);
    parameters:
    - id: target
      type: System.IDisposable
      description: "O objeto cujo <xref:System.IDisposable.Dispose*>método deve ser chamado quando o <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> uma parte da solicitação de conexão é concluída.</xref:System.IDisposable.Dispose*>"
    return:
      type: System.Web.ISubscriptionToken
      description: "O token de assinatura."
  overload: System.Web.HttpContext.DisposeOnPipelineCompleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Error
  id: Error
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Error
  nameWithType: HttpContext.Error
  fullName: System.Web.HttpContext.Error
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o primeiro erro (se houver) acumulado por HTTP de processamento de solicitação."
  syntax:
    content: public Exception Error { get; }
    return:
      type: System.Exception
      description: "A primeira <xref:System.Exception>para a atual solicitação/resposta HTTP processados; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum erro foram acumulado durante o processamento de solicitação HTTP.</xref:System.Exception> O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.Error*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetAppConfig(System.String)
  id: GetAppConfig(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetAppConfig(String)
  nameWithType: HttpContext.GetAppConfig(String)
  fullName: System.Web.HttpContext.GetAppConfig(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Retorna solicitou informações de configuração para o aplicativo atual."
  remarks: "O método GetAppConfig foi preterido. Use o <xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>método o <xref:System.Web.Configuration.WebConfigurationManager>classe para obter informações de configuração para o aplicativo atual.</xref:System.Web.Configuration.WebConfigurationManager> </xref:System.Web.Configuration.WebConfigurationManager.GetWebApplicationSection%2A>"
  syntax:
    content: public static object GetAppConfig (string name);
    parameters:
    - id: name
      type: System.String
      description: "A marca de configuração de aplicativo para o qual as informações são solicitadas."
    return:
      type: System.Object
      description: "Um objeto que contém informações de configuração. (Converter a seção de configuração retornado para o tipo de configuração apropriado antes do uso.)"
  overload: System.Web.HttpContext.GetAppConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetConfig(System.String)
  id: GetConfig(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetConfig(String)
  nameWithType: HttpContext.GetConfig(String)
  fullName: System.Web.HttpContext.GetConfig(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Retorna solicitadas informações de configuração para a solicitação HTTP atual."
  remarks: "O método GetConfig foi preterido. Use o <xref:System.Web.HttpContext.GetSection%2A>método para obter informações de configuração para a solicitação HTTP atual.</xref:System.Web.HttpContext.GetSection%2A>"
  syntax:
    content: public object GetConfig (string name);
    parameters:
    - id: name
      type: System.String
      description: "A marca de configuração para o qual as informações são solicitadas."
    return:
      type: System.Object
      description: "Especificado <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref>, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a seção não existir, ou um objeto interno se a seção não é acessível em tempo de execução. (Converter o objeto retornado para o tipo de configuração apropriado antes do uso.)"
  overload: System.Web.HttpContext.GetConfig*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  id: GetGlobalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetGlobalResourceObject(String,String)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um objeto de recurso de nível de aplicativo com base em especificado <> </> *> e <> </> *> propriedades."
  remarks: "O método GetGlobalResourceObject retorna um recurso global usando a cultura especificada no <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>propriedade.</xref:System.Globalization.CultureInfo.CurrentUICulture%2A>      > [!NOTE] > Em alguns ambientes de edição, como [!INCLUDE[vwprvw](~/add/includes/vwprvw-md.md)], o editor pode acionar um tempo de design <xref:System.Resources.MissingManifestResourceException>exceção se você usar um ponto (.) no nome da chave de recurso global.</xref:System.Resources.MissingManifestResourceException> No entanto, isso não afeta sua capacidade de editar ou salvar o arquivo, e você pode ignorar o erro."
  syntax:
    content: public static object GetGlobalResourceObject (string classKey, string resourceKey);
    parameters:
    - id: classKey
      type: System.String
      description: "Uma cadeia de caracteres que representa o <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>propriedade do objeto de recurso solicitado.</xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>"
    - id: resourceKey
      type: System.String
      description: "Uma cadeia de caracteres que representa o <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>propriedade do objeto de recurso solicitado.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o objeto de recurso de nível do aplicativo solicitado; caso contrário, nulo se um objeto de recurso não foi encontrado ou se um objeto de recurso for encontrado, mas ele não tem a propriedade solicitada.</xref:System.Object>"
  overload: System.Web.HttpContext.GetGlobalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "A resource object with the specified <code>classKey</code> parameter was not found.  \n  \n \\- or -  \n  \n The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing."
  platform:
  - net462
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  id: GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetGlobalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um objeto de recurso de nível de aplicativo com base em especificado <> </> *> e <> </> *> propriedades e na <xref:System.Globalization.CultureInfo>objeto.</xref:System.Globalization.CultureInfo>"
  remarks: "O <xref:System.Globalization.CultureInfo>objeto representa a cultura para a qual o recurso foi localizado.</xref:System.Globalization.CultureInfo> Se o recurso não está localizado para esta cultura, a pesquisa será feita após um processo de fallback para localizar um recurso apropriado. Para obter mais informações, consulte [Empacotando e implantando recursos](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Em alguns ambientes de edição, como Visual Web Developer, o editor pode acionar um tempo de design <xref:System.Resources.MissingManifestResourceException>exceção se você usar um ponto (.) no nome da chave de recurso global.</xref:System.Resources.MissingManifestResourceException> No entanto, isso não afeta sua capacidade de editar ou salvar o arquivo, e você pode ignorar o erro."
  syntax:
    content: public static object GetGlobalResourceObject (string classKey, string resourceKey, System.Globalization.CultureInfo culture);
    parameters:
    - id: classKey
      type: System.String
      description: "Uma cadeia de caracteres que representa o <xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>propriedade do objeto de recurso solicitado.</xref:System.Web.Compilation.ResourceExpressionFields.ClassKey*>"
    - id: resourceKey
      type: System.String
      description: "Uma cadeia de caracteres que representa um <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>propriedade do objeto de recurso solicitado.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Uma cadeia de caracteres que representa o <xref:System.Globalization.CultureInfo>objeto do recurso solicitado.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o objeto de recurso solicitado do nível do aplicativo, que é localizado para a cultura especificada; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se um objeto de recurso não foi encontrado ou se um objeto de recurso for encontrado, mas não tem a propriedade solicitada.</xref:System.Object>"
  overload: System.Web.HttpContext.GetGlobalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "A resource object for which the specified <code>classKey</code> parameter was not found.  \n  \n \\- or -  \n  \n The main assembly does not contain the resources for the neutral culture, and these resources are required because the appropriate satellite assembly is missing."
  platform:
  - net462
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  id: GetLocalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetLocalResourceObject(String,String)
  nameWithType: HttpContext.GetLocalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um objeto de recurso de nível de página com base em especificado <> </> *> e <> </> *> propriedades."
  remarks: "O método GetLocalResourceObject retorna um recurso local usando a cultura especificada no <xref:System.Globalization.CultureInfo.CurrentUICulture%2A>propriedade.</xref:System.Globalization.CultureInfo.CurrentUICulture%2A>"
  syntax:
    content: public static object GetLocalResourceObject (string virtualPath, string resourceKey);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O <xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>propriedade para o objeto de recurso local.</xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>"
    - id: resourceKey
      type: System.String
      description: "Uma cadeia de caracteres que representa uma <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>propriedade do objeto de recurso solicitado</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o objeto de recurso de nível de página solicitado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se um objeto de recurso correspondente for encontrado, mas não um <code> resourceKey </code> parâmetro.</xref:System.Object>"
  overload: System.Web.HttpContext.GetLocalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "Não foi encontrado um objeto de recurso especificado <code> virtualPath </code> parâmetro."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Especificado <code> virtualPath </code> parâmetro não está no diretório raiz do aplicativo atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Classe de recurso para a página não foi encontrado."
  platform:
  - net462
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  id: GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetLocalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um objeto de recurso de nível de página com base em especificado <> </> *> e <> </> *> propriedades e na <xref:System.Globalization.CultureInfo>objeto.</xref:System.Globalization.CultureInfo>"
  remarks: "Se o recurso não está localizado para esta cultura, a pesquisa será feita após um processo de fallback para localizar um recurso apropriado. Para obter mais informações, consulte [Empacotando e implantando recursos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public static object GetLocalResourceObject (string virtualPath, string resourceKey, System.Globalization.CultureInfo culture);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O <xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>propriedade para o objeto de recurso local.</xref:System.Web.Compilation.ExpressionBuilderContext.VirtualPath*>"
    - id: resourceKey
      type: System.String
      description: "Uma cadeia de caracteres que representa um <xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>propriedade do objeto de recurso solicitado.</xref:System.Web.Compilation.ResourceExpressionFields.ResourceKey*>"
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Uma cadeia de caracteres que representa o <xref:System.Globalization.CultureInfo>objeto do objeto de recurso solicitado.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o objeto de recurso local solicitado, que é localizado para a cultura especificada; caso contrário <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se um objeto de recurso correspondente for encontrado, mas não um <code> resourceKey </code> parâmetro.</xref:System.Object>"
  overload: System.Web.HttpContext.GetLocalResourceObject*
  exceptions:
  - type: System.Resources.MissingManifestResourceException
    commentId: T:System.Resources.MissingManifestResourceException
    description: "Não foi encontrado um objeto de recurso especificado <code> virtualPath </code> parâmetro."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Especificado <code> virtualPath </code> parâmetro não está no diretório raiz do aplicativo atual."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Classe de recurso para a página não foi encontrado."
  platform:
  - net462
- uid: System.Web.HttpContext.GetSection(System.String)
  id: GetSection(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: GetSection(String)
  nameWithType: HttpContext.GetSection(String)
  fullName: System.Web.HttpContext.GetSection(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma seção de configuração especificado para a configuração do padrão do aplicativo atual."
  syntax:
    content: public object GetSection (string sectionName);
    parameters:
    - id: sectionName
      type: System.String
      description: "O caminho da seção de configuração (no formato XPath) e o nome do elemento de configuração."
    return:
      type: System.Object
      description: "Especificado <xref href=&quot;System.Configuration.ConfigurationSection&quot;> </xref>, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a seção não existir, ou um objeto interno se a seção não é acessível em tempo de execução."
  overload: System.Web.HttpContext.GetSection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Handler
  id: Handler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Handler
  nameWithType: HttpContext.Handler
  fullName: System.Web.HttpContext.Handler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define o <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> objeto responsável por processar a solicitação HTTP."
  remarks: "A propriedade de manipulador contém uma referência para o manipulador que processa a solicitação HTTP. O manipulador pode ser especificado usando o elemento ou usando um manipulador personalizado definido no código do usuário. Para obter mais informações sobre manipuladores, consulte [manipuladores HTTP e visão geral de módulos HTTP](~/add/includes/ajax-current-ext-md.md).       A referência à propriedade manipulador permanecem mesmo depois que a página atual foi alterada por um método do lado do servidor, como o <xref:System.Web.HttpServerUtility.Execute%2A>método ou o <xref:System.Web.HttpServerUtility.Transfer%2A>método.</xref:System.Web.HttpServerUtility.Transfer%2A> </xref:System.Web.HttpServerUtility.Execute%2A>"
  syntax:
    content: public System.Web.IHttpHandler Handler { get; set; }
    return:
      type: System.Web.IHttpHandler
      description: "Um <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> responsável por processar a solicitação HTTP."
  overload: System.Web.HttpContext.Handler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsCustomErrorEnabled
  id: IsCustomErrorEnabled
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
  fullName: System.Web.HttpContext.IsCustomErrorEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se os erros personalizados estão habilitados para a solicitação HTTP atual."
  syntax:
    content: public bool IsCustomErrorEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os erros personalizados estão habilitados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsCustomErrorEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsDebuggingEnabled
  id: IsDebuggingEnabled
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
  fullName: System.Web.HttpContext.IsDebuggingEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se a solicitação HTTP atual está no modo de depuração."
  syntax:
    content: public bool IsDebuggingEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a solicitação está no modo de depuração; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsDebuggingEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsPostNotification
  id: IsPostNotification
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
  fullName: System.Web.HttpContext.IsPostNotification
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que é atual processamento ponto em que o ASP.NET pipeline logo após um <xref href=&quot;System.Web.HttpApplication&quot;> </xref> evento concluiu o processamento."
  remarks: "A propriedade IsPostNotification só tem suporte com o modo integrado do [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e pelo menos o .NET Framework 3.0. Quando disponível, a propriedade retorna um valor booliano que indica se um evento de <xref:System.Web.HttpApplication>objeto concluiu o processamento.</xref:System.Web.HttpApplication>       A propriedade IsPostNotification não se destina a ser definido. Em vez disso, ele é fornecido por [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] no tempo de execução do ASP.NET para cada notificação. Definindo a propriedade IsPostNotification resultará em um erro de compilação.       Em cenários onde vários eventos do <xref:System.Web.HttpApplication>objeto são manipuladas por um manipulador de eventos, você pode usar a propriedade IsPostNotification em combinação com a <xref:System.Web.RequestNotification>enumeração para determinar exatamente onde o ciclo de vida do aplicativo atual de solicitação está.</xref:System.Web.RequestNotification> </xref:System.Web.HttpApplication>       IsPostNotification é introduzido no .NET Framework versão 3.5.  Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the IsPostNotification property to determine when an event of the <xref:System.Web.HttpApplication> object has finished processing all the associated event handlers. The custom event handler in this example handles several events of the <xref:System.Web.HttpApplication> object, and the IsPostNotification property is used to determine what code is invoked after a specific event is handled.  \n  \n [!code-cs[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/csharp/p-system.web.httpcontext_2_1.cs)]\n [!code-vb[System.Web.HttpResponse.IsPostNotification#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_2_1.vb)]"
  syntax:
    content: public bool IsPostNotification { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os erros personalizados estão habilitados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsPostNotification*
  exceptions:
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "A operação requer o modo de pipeline integrado no [!INCLUDE[iisver](~/add/includes/ajax-current-ext-md.md)] e pelo menos o .NET Framework 3.0."
  platform:
  - net462
- uid: System.Web.HttpContext.IsWebSocketRequest
  id: IsWebSocketRequest
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
  fullName: System.Web.HttpContext.IsWebSocketRequest
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se a solicitação é um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> solicitação."
  remarks: "Este método retorna `true` se a solicitação contém inicial <xref:System.Web.WebSockets.AspNetWebSocket>handshake e `WebSocket` módulo do IIS está ativo.</xref:System.Web.WebSockets.AspNetWebSocket>"
  syntax:
    content: public bool IsWebSocketRequest { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a solicitação for uma <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> solicitação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsWebSocketRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading
  id: IsWebSocketRequestUpgrading
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
  fullName: System.Web.HttpContext.IsWebSocketRequestUpgrading
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém um valor que indica se a conexão está atualizando de uma conexão HTTP para um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> conexão."
  syntax:
    content: public bool IsWebSocketRequestUpgrading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a conexão está sendo atualizado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.IsWebSocketRequestUpgrading*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Items
  id: Items
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Items
  nameWithType: HttpContext.Items
  fullName: System.Web.HttpContext.Items
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma coleção de chave/valor que pode ser usada para organizar e compartilhar dados entre uma <xref href=&quot;System.Web.IHttpModule&quot;> </xref> interface e um <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interface durante uma solicitação HTTP."
  syntax:
    content: public System.Collections.IDictionary Items { get; }
    return:
      type: System.Collections.IDictionary
      description: "Um <xref:System.Collections.IDictionary>chave/valor de coleção que fornece acesso a um valor individual na coleção por uma chave especificada.</xref:System.Collections.IDictionary>"
  overload: System.Web.HttpContext.Items*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.PageInstrumentation
  id: PageInstrumentation
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
  fullName: System.Web.HttpContext.PageInstrumentation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém uma referência à instância do serviço de instrumentação de página para esta solicitação."
  syntax:
    content: public System.Web.Instrumentation.PageInstrumentationService PageInstrumentation { get; }
    return:
      type: System.Web.Instrumentation.PageInstrumentationService
      description: "A instância do serviço de instrumentação de página para esta solicitação."
  overload: System.Web.HttpContext.PageInstrumentation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.PreviousHandler
  id: PreviousHandler
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
  fullName: System.Web.HttpContext.PreviousHandler
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> objeto para o manipulador de pai."
  remarks: "A propriedade PreviousHandler corresponde ao último manipulador antes da solicitação atual foi executada."
  syntax:
    content: public System.Web.IHttpHandler PreviousHandler { get; }
    return:
      type: System.Web.IHttpHandler
      description: "Um <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> instância, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum manipulador anterior foi encontrado."
  overload: System.Web.HttpContext.PreviousHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Profile
  id: Profile
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Profile
  nameWithType: HttpContext.Profile
  fullName: System.Web.HttpContext.Profile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> objeto para o perfil de usuário atual."
  remarks: "Uma propriedade de perfil é usada para armazenamento persistente de dados estruturados usando uma API fortemente tipado. Quando uma propriedade de perfil é acessada, mas nenhum valor for encontrado, uma instância vazia será retornada; `null` não é retornado."
  syntax:
    content: public System.Web.Profile.ProfileBase Profile { get; }
    return:
      type: System.Web.Profile.ProfileBase
      description: "Um <xref href=&quot;System.Web.Profile.ProfileBase&quot;> </xref> se o arquivo de configuração de aplicativo contém uma definição para as propriedades do perfil; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.Profile*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  id: RemapHandler(System.Web.IHttpHandler)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RemapHandler(IHttpHandler)
  nameWithType: HttpContext.RemapHandler(IHttpHandler)
  fullName: System.Web.HttpContext.RemapHandler(IHttpHandler)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Permite que você especifique um manipulador para a solicitação."
  remarks: "Se você definir `handler` para `null`, o manipulador padrão é usado para processar a solicitação. Você pode definir `handler` para um manipulador de assíncrono ou para um manipulador síncrono. O manipulador deve implementar o <xref:System.Web.IHttpHandler>interface.</xref:System.Web.IHttpHandler>"
  syntax:
    content: public void RemapHandler (System.Web.IHttpHandler handler);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "O objeto que deve processar a solicitação."
  overload: System.Web.HttpContext.RemapHandler*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método RemapHandler foi chamado após o <xref href=&quot;System.Web.HttpApplication.MapRequestHandler&quot;> </xref> evento ocorreu."
  platform:
  - net462
- uid: System.Web.HttpContext.Request
  id: Request
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Request
  nameWithType: HttpContext.Request
  fullName: System.Web.HttpContext.Request
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.HttpRequest&quot;> </xref> objeto para a solicitação HTTP atual."
  remarks: "A propriedade Request fornece acesso programático para as propriedades e métodos para a <xref:System.Web.HttpRequest>classe.</xref:System.Web.HttpRequest> Como páginas ASP.NET contêm uma referência padrão para o <xref:System.Web>namespace (que contém o <xref:System.Web.HttpContext>classe), você pode fazer referência os membros de <xref:System.Web.HttpRequest>uma página. aspx sem usar a referência de classe totalmente qualificado para o <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpRequest> </xref:System.Web.HttpContext> </xref:System.Web> Por exemplo, você pode usar `Request.Browser` para obter os recursos do navegador do cliente. No entanto, se você quiser usar os membros de <xref:System.Web.HttpRequest>de um módulo de lógica ASP.NET, você deve incluir uma referência para o <xref:System.Web>namespace no módulo e uma referência totalmente qualificada para o contexto de solicitação/resposta ativa no momento e a classe de <xref:System.Web>que você deseja usar.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpRequest> Por exemplo, em uma página code-behind você deve especificar o nome totalmente qualificado `HttpContext.Current.Request.Browser`.      > [!NOTE] > ASP.NET lançará uma exceção se você tentar usar esta propriedade quando o <xref:System.Web.HttpRequest>objeto não está disponível.</xref:System.Web.HttpRequest> Por exemplo, isso seria verdadeiro no método Application_Start do arquivo global. asax ou em um método que é chamado do método Application_Start. No momento nenhuma solicitação HTTP foi criada ainda."
  syntax:
    content: public System.Web.HttpRequest Request { get; }
    return:
      type: System.Web.HttpRequest
      description: "O <xref href=&quot;System.Web.HttpRequest&quot;> </xref> para a solicitação HTTP atual."
  overload: System.Web.HttpContext.Request*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O aplicativo Web está em execução no IIS 7 no modo integrado."
  platform:
  - net462
- uid: System.Web.HttpContext.Response
  id: Response
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Response
  nameWithType: HttpContext.Response
  fullName: System.Web.HttpContext.Response
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.HttpResponse&quot;> </xref> objeto para a resposta HTTP atual."
  remarks: "A propriedade de resposta fornece acesso programático para as propriedades e métodos para a <xref:System.Web.HttpResponse>classe.</xref:System.Web.HttpResponse> Como páginas ASP.NET contêm uma referência padrão para o <xref:System.Web>namespace (que contém o <xref:System.Web.HttpContext>classe), você pode fazer referência os membros de <xref:System.Web.HttpContext>uma página. aspx sem usar a referência de classe totalmente qualificado para o <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web> Por exemplo, você pode usar `Response.Write(&quot;some output&quot;)` para gravar a saída em um fluxo de saída HTTP. No entanto, se você quiser usar os membros de <xref:System.Web.HttpResponse>de um módulo de lógica ASP.NET, você deve incluir uma referência para o <xref:System.Web>namespace no módulo e uma referência totalmente qualificada para o contexto de solicitação/resposta ativa no momento e a classe de <xref:System.Web>que você deseja usar.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpResponse> Por exemplo, em uma página code-behind você deve especificar o nome totalmente qualificado `HttpContext.Current.Response.Write(&quot;some output&quot;)`."
  syntax:
    content: public System.Web.HttpResponse Response { get; }
    return:
      type: System.Web.HttpResponse
      description: "O <xref href=&quot;System.Web.HttpResponse&quot;> </xref> para a resposta HTTP atual."
  overload: System.Web.HttpContext.Response*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O aplicativo Web está em execução no IIS 7 no modo integrado."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String)
  id: RewritePath(System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String)
  nameWithType: HttpContext.RewritePath(String)
  fullName: System.Web.HttpContext.RewritePath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reconfigure a URL usando o caminho fornecido."
  remarks: "O método RewritePath redireciona uma solicitação para um recurso para um caminho diferente daquela que é indicado pelo URL solicitada. Se você precisar redefinir o caminho virtual para que as solicitações do cliente para recursos de servidor resolver corretamente, use a sobrecarga desse método que usa o `rebaseClientPath` parâmetro e defina o parâmetro como `false`.       Regravação de URL é útil quando você deseja reestruturar as páginas em seu aplicativo Web, e você deseja certificar-se de que as pessoas que têm um indicador URLs antigas ainda podem usá-los depois que você mover páginas. Regravação de URL permite que você transparentemente encaminhar solicitações para o novo local da página.       Se você deseja habilitar um site para usar as URLs sejam mais amigáveis e são otimizadas para mecanismos de pesquisa, uma alternativa mais robusta é usar o roteamento ASP.NET. Para obter mais informações, consulte [roteamento ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example shows how to use the RewritePath method to enable a Web site to respond to URLs that do not reflect the file structure in the Web site. The first block of code is an ASP.NET Web page that is named RewritePath.aspx. It requires a query string. If the name of your site is WebSite1, the URL `http://localhost/WebSite1/RewritePath.aspx?page=1` displays \"Page 1\" in the browser. The block of code that follows the Web page is the `Application_BeginRequest` event handler in the Global.asax file. This code intercepts requests for URLs such as `http://localhost/WebSite1/page1` and converts them to the form that is required for RewritePath.aspx before they are processed. Therefore, the URL `http://localhost/WebSite1/page1` invokes RewritePath.aspx with the query-string parameter that displays \"Page 1\" in the browser. If a URL such as `http://localhost/WebSite1/page1` is received, an overload of RewritePath is invoked that enables you to provide a value for the <xref:System.Web.HttpRequest.PathInfo%2A> property as well as a query string parameter.  \n  \n [!code-cs[HttpContext_RewritePath#2](~/add/codesnippet/csharp/m-system.web.httpcontext_1.aspx)]\n [!code-vb[HttpContext_RewritePath#2](~/add/codesnippet/visualbasic/m-system.web.httpcontext_1.aspx)]  \n  \n [!code-vb[HttpContext_RewritePath#1](~/add/codesnippet/visualbasic/m-system.web.httpcontext_2.asax)]\n [!code-cs[HttpContext_RewritePath#1](~/add/codesnippet/csharp/m-system.web.httpcontext_2.asax)]"
  syntax:
    content: public void RewritePath (string path);
    parameters:
    - id: path
      type: System.String
      description: "O caminho de regravação interno."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <code> path </code> parâmetro não está no diretório raiz do aplicativo atual."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  id: RewritePath(System.String,System.Boolean)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,Boolean)
  nameWithType: HttpContext.RewritePath(String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reconfigure a URL usando o caminho especificado e um valor booleano que especifica se o caminho virtual para recursos do servidor é modificado."
  remarks: "O método RewritePath é chamado pelo <xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=fullName>método com o `rebaseClientPath` parâmetro definido como `true`.</xref:System.Web.HttpContext.RewritePath%28System.String%29?displayProperty=fullName> Para garantir que o caminho virtual que é usado para construir caminhos para recursos não é modificado, defina o `rebaseClientPath` parâmetro `false`. Um cenário comum em que você talvez queira definir `rebaseClientPath` para `false` é quando você precisa reconfigurar a URL e estiver usando temas e redirecionar a URL para um recurso localizado em uma pasta diferente que o recurso solicitado.       Regravação de URL é útil quando você deseja reestruturar as páginas em seu aplicativo Web, e você deseja certificar-se de que as pessoas que têm um indicador URLs antigas ainda podem usá-los depois que você mover páginas. Regravação de URL permite que você transparentemente encaminhar solicitações para o novo local da página.       Se você deseja habilitar um site para usar as URLs sejam mais amigáveis e são otimizadas para mecanismos de pesquisa, uma alternativa mais robusta é usar o roteamento ASP.NET. Para obter mais informações, consulte [roteamento ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string path, bool rebaseClientPath);
    parameters:
    - id: path
      type: System.String
      description: "O caminho de regravação interno."
    - id: rebaseClientPath
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para redefinir o caminho virtual; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para manter o caminho virtual inalterado."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>path</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <code> path </code> parâmetro não está no diretório raiz do aplicativo atual."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  id: RewritePath(System.String,System.String,System.String)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,String,String)
  nameWithType: HttpContext.RewritePath(String,String,String)
  fullName: System.Web.HttpContext.RewritePath(String,String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reconfigure a URL usando o caminho especificado, as informações de caminho e informações de cadeia de caracteres de consulta."
  remarks: "O método RewritePath redireciona uma solicitação para um recurso para outro recurso sem alterar a URL.       O `filePath` não inclui o parâmetro de `pathInfo` conteúdo do parâmetro. Para http://www.microsoft.com/virdir/page.html/tail URL, o `filePath` parâmetro é http://www.microsoft.com/virdir/page.html e o `pathInfo` parâmetro é final.       Regravação de URL é útil quando você deseja reestruturar as páginas em seu aplicativo Web, e você deseja certificar-se de que as pessoas que têm um indicador URLs antigas ainda podem usá-los depois que você mover páginas. Regravação de URL permite que você transparentemente encaminhar solicitações para o novo local da página.       Se você deseja habilitar um site para usar as URLs sejam mais amigáveis e são otimizadas para mecanismos de pesquisa, uma alternativa mais robusta é usar o roteamento ASP.NET. Para obter mais informações, consulte [roteamento ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - For a code example, including an example of this method overload, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string filePath, string pathInfo, string queryString);
    parameters:
    - id: filePath
      type: System.String
      description: "O caminho de regravação interno."
    - id: pathInfo
      type: System.String
      description: "Informações de caminho adicionais para um recurso. Para obter mais informações, consulte <xref:System.Web.HttpRequest.PathInfo*>.</xref:System.Web.HttpRequest.PathInfo*>"
    - id: queryString
      type: System.String
      description: "A cadeia de caracteres de consulta de solicitação."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> path </code> parâmetro não está no diretório raiz do aplicativo atual."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <code> filePath </code> parâmetro não está no diretório raiz do aplicativo atual."
  platform:
  - net462
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  id: RewritePath(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: RewritePath(String,String,String,Boolean)
  nameWithType: HttpContext.RewritePath(String,String,String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,String,String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Reconfigure a URL usando o caminho virtual especificado, as informações de caminho, informações de cadeia de caracteres de consulta e um valor booleano que especifica se o caminho do arquivo de cliente é definido como o caminho de regravação."
  remarks: "O `filePath` parâmetro não inclui o conteúdo a `pathInfo` parâmetro. Para http://www.microsoft.com/virdir/page.html/tail URL, o `filePath` parâmetro é http://www.microsoft.com/virdir/page.html e o `pathInfo` parâmetro é final.       Para garantir que o caminho virtual que é usado para construir caminhos para recursos não é modificado, defina o `setClientFilePath` parâmetro `false`. Um cenário comum em que você talvez queira definir `setClientFilePath` para `false` é quando você precisa reconfigurar a URL e estiver usando temas e redirecionar a URL para um recurso localizado em uma pasta diferente que o recurso solicitado.       Regravação de URL é útil quando você deseja reestruturar as páginas em seu aplicativo Web, e você deseja certificar-se de que as pessoas que têm um indicador URLs antigas ainda podem usá-los depois que você mover páginas. Regravação de URL permite que você transparentemente encaminhar solicitações para o novo local da página.       Se você deseja habilitar um site para usar as URLs sejam mais amigáveis e são otimizadas para mecanismos de pesquisa, uma alternativa mais robusta é usar o roteamento ASP.NET. Para obter mais informações, consulte [roteamento ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - For a code example, see the <xref:System.Web.HttpContext.RewritePath%28System.String%29> method overload.
  syntax:
    content: public void RewritePath (string filePath, string pathInfo, string queryString, bool setClientFilePath);
    parameters:
    - id: filePath
      type: System.String
      description: "O caminho virtual para o recurso que a solicitação de serviços."
    - id: pathInfo
      type: System.String
      description: "Informações de caminho adicionais para usar para o redirecionamento de URL. Para obter mais informações, consulte <xref:System.Web.HttpRequest.PathInfo*>.</xref:System.Web.HttpRequest.PathInfo*>"
    - id: queryString
      type: System.String
      description: "A cadeia de consulta de solicitação a ser usado para o redirecionamento de URL."
    - id: setClientFilePath
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para definir o caminho do arquivo usado para recursos de cliente para o valor da `filePath` parâmetro; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.RewritePath*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> path </code> parâmetro não está no diretório raiz do aplicativo atual."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <code> filePath </code> parâmetro não está no diretório raiz do aplicativo atual."
  platform:
  - net462
- uid: System.Web.HttpContext.Server
  id: Server
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Server
  nameWithType: HttpContext.Server
  fullName: System.Web.HttpContext.Server
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> objeto que fornece métodos usados no processamento de solicitações da Web."
  remarks: "A propriedade do servidor fornece acesso programático para as propriedades e métodos para a <xref:System.Web.HttpServerUtility>classe.</xref:System.Web.HttpServerUtility> Como páginas ASP.NET contêm uma referência padrão para o <xref:System.Web>namespace (que contém o <xref:System.Web.HttpContext>classe), você pode fazer referência os membros de <xref:System.Web.HttpContext>uma página. aspx sem usar a referência de classe totalmente qualificado para o <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web> Por exemplo, você pode usar `Server.CreateObject(&quot;MyCOMComponent&quot;)` para criar uma instância de um objeto COM no servidor. No entanto, se você quiser usar os membros de <xref:System.Web.HttpServerUtility>de um módulo de lógica ASP.NET, você deve incluir uma referência para o <xref:System.Web>namespace no módulo e uma referência totalmente qualificada para o contexto de solicitação/resposta ativa no momento e a classe de <xref:System.Web>que você deseja usar.</xref:System.Web> </xref:System.Web> </xref:System.Web.HttpServerUtility> Por exemplo, em uma página code-behind você deve especificar o nome totalmente qualificado `HttpContext.Current.Server.CreateObject(&quot;MyCOMComponent&quot;)`."
  syntax:
    content: public System.Web.HttpServerUtility Server { get; }
    return:
      type: System.Web.HttpServerUtility
      description: "O <xref href=&quot;System.Web.HttpServerUtility&quot;> </xref> para a solicitação HTTP atual."
  overload: System.Web.HttpContext.Server*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Session
  id: Session
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Session
  nameWithType: HttpContext.Session
  fullName: System.Web.HttpContext.Session
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> objeto para a solicitação HTTP atual."
  remarks: "A propriedade de sessão fornece acesso programático para as propriedades e métodos para a <xref:System.Web.SessionState.HttpSessionState>classe.</xref:System.Web.SessionState.HttpSessionState>       Para usar o estado da sessão, você precisa habilitá-lo. Para obter informações sobre como habilitar o estado de sessão, consulte **estado da sessão Configurando** na [visão geral sobre o estado de sessão ASP.NET](~/add/includes/ajax-current-ext-md.md).       Para obter informações sobre como salvar valores no estado de sessão, consulte [como: salvar valores no estado de sessão](~/add/includes/ajax-current-ext-md.md). Para obter informações sobre como ler valores do estado de sessão, consulte [como: valores de leitura do estado de sessão](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following examples show how to save values in session state and how to read values from session state.  \n  \n These examples require:  \n  \n-   An ASP.NET application that has session state enabled.  \n  \n-   A Web Forms page class that has access to the <xref:System.Web.UI.Page.Session%2A?displayProperty=fullName> property, or any class that has access to the <xref:System.Web.HttpContext.Current%2A?displayProperty=fullName> property.  \n  \n```c#  \nstring firstName = \"Jeff\";  \nstring lastName = \"Smith\";  \nstring city = \"Seattle\";  \n  \n// Save to session state in a Web Forms page class.  \nSession[\"FirstName\"] = firstName;  \nSession[\"LastName\"] = lastName;  \nSession[\"City\"] = city;  \n  \n// Read from session state in a Web Forms page class.  \nfirstName = (string)(Session[\"FirstName\"]);  \nlastName = (string)(Session[\"LastName\"]);  \ncity = (string)(Session[\"City\"]);  \n  \n// Outside of Web Forms page class, use HttpContext.Current.  \nHttpContext context = HttpContext.Current;  \ncontext.Session[\"FirstName\"] = firstName;  \nfirstName = (string)(context.Session[\"FirstName\"]);  \n  \n```  \n  \n```vb#  \nDim firstName As String = \"Jeff\"  \nDim lastName As String = \"Smith\"  \nDim city As String = \"Seattle\"  \n  \n' Save to session state in a Web Forms page class.  \nSession(\"FirstName\") = firstName  \nSession(\"LastName\") = lastName  \nSession(\"City\") = city  \n  \n' Read from session state in a Web Forms page class.  \nfirstName = DirectCast(Session(\"FirstName\"), String)  \nlastName = DirectCast(Session(\"LastName\"), String)  \ncity = DirectCast(Session(\"City\"), String)  \n  \n' Outside of Web Forms page class, use HttpContext.Current.  \nDim context As HttpContext = HttpContext.Current  \ncontext.Session(\"FirstName\") = firstName  \nfirstName = DirectCast(context.Session(\"FirstName\"), String)  \n  \n```"
  syntax:
    content: public System.Web.SessionState.HttpSessionState Session { get; }
    return:
      type: System.Web.SessionState.HttpSessionState
      description: "O <xref href=&quot;System.Web.SessionState.HttpSessionState&quot;> </xref> objeto para a solicitação HTTP atual."
  overload: System.Web.HttpContext.Session*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  id: SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: SetSessionStateBehavior(SessionStateBehavior)
  nameWithType: HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  fullName: System.Web.HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Define o tipo de comportamento de estado de sessão que é necessário para dar suporte a uma solicitação HTTP."
  remarks: "Na implementação do padrão do ASP.NET, um manipulador de solicitação HTTP indica se ela requer o estado de sessão ao implementar o <xref:System.Web.SessionState.IRequiresSessionState>interface ou <xref:System.Web.SessionState.IReadOnlySessionState>interface.</xref:System.Web.SessionState.IReadOnlySessionState> </xref:System.Web.SessionState.IRequiresSessionState> O método SetSessionStateBehavior e o <xref:System.Web.SessionState.SessionStateBehavior>enumeração permitem fornecer mais detalhes sobre o tipo de suporte do estado de sessão é necessário para lidar com uma solicitação.</xref:System.Web.SessionState.SessionStateBehavior> Para obter mais informações, consulte o <xref:System.Web.SessionState.SessionStateBehavior>enumeração.</xref:System.Web.SessionState.SessionStateBehavior>       O método SetSessionStateBehavior deve ser chamado antes do <xref:System.Web.HttpApplication.AcquireRequestState>eventos de pipeline.</xref:System.Web.HttpApplication.AcquireRequestState> Chamadas que ocorrem durante ou depois deste evento fará com que um <xref:System.InvalidOperationException>exceção.</xref:System.InvalidOperationException>"
  syntax:
    content: public void SetSessionStateBehavior (System.Web.SessionState.SessionStateBehavior sessionStateBehavior);
    parameters:
    - id: sessionStateBehavior
      type: System.Web.SessionState.SessionStateBehavior
      description: "Um dos valores de enumeração que especifica o tipo de comportamento do estado da sessão é necessário."
  overload: System.Web.HttpContext.SetSessionStateBehavior*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O método foi chamado após o <xref href=&quot;System.Web.HttpApplication.AcquireRequestState&quot;> </xref> evento foi gerado."
  platform:
  - net462
- uid: System.Web.HttpContext.SkipAuthorization
  id: SkipAuthorization
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
  fullName: System.Web.HttpContext.SkipAuthorization
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define um valor que especifica se o <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> objeto deve ignorar a verificação de autorização para a solicitação atual."
  remarks: "A propriedade SkipAuthorization destina-se ao uso avançado por módulos de autenticação que precisam para redirecionar para uma página que permite conexões anônimas. O módulo de autenticação de formulários e o módulo de autenticação de Passport definidos SkipAuthorization ao redirecionar para uma página de logon configurado. Configuração SkipAuthorization requer o `ControlPrincipal` sinalizador a ser definido. Para obter informações sobre o `ControlPrincipal` sinalizador, consulte <xref:System.Security.Permissions.SecurityPermissionFlag>.</xref:System.Security.Permissions.SecurityPermissionFlag>"
  syntax:
    content: public bool SkipAuthorization { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref href=&quot;System.Web.Security.UrlAuthorizationModule&quot;> </xref> deve ignorar a verificação de autorização; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.SkipAuthorization*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: System.IServiceProvider.GetService(Type)
  nameWithType: HttpContext.System.IServiceProvider.GetService(Type)
  fullName: System.Web.HttpContext.System.IServiceProvider.GetService(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Retorna um objeto para o tipo de serviço atual."
  remarks: "Esse método é útil para obter acesso a subjacente <xref:System.Web.HttpWorkerRequest>objeto.</xref:System.Web.HttpWorkerRequest>"
  syntax:
    content: object IServiceProvider.GetService (Type service);
    parameters:
    - id: service
      type: System.Type
      description: "Um tipo de <xref href=&quot;System.Web.HttpContext&quot;> </xref> serviço para definir o provedor de serviço."
    return:
      type: System.Object
      description: "Um <xref href=&quot;System.Web.HttpContext&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum serviço foi encontrado."
  overload: System.Web.HttpContext.System#IServiceProvider#GetService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.ThreadAbortOnTimeout
  id: ThreadAbortOnTimeout
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
  fullName: System.Web.HttpContext.ThreadAbortOnTimeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define um valor que especifica se o tempo de execução do ASP.NET deve chamar &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; no thread que está servindo esta solicitação quando a solicitação expire."
  remarks: "Manipuladores e módulos que estão usando o <xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=fullName>propriedade para implementar o cancelamento cooperativo, talvez você queira desabilitar o <xref:System.Threading.Thread.Abort%2A?displayProperty=fullName>comportamento ASP.NET executa por padrão, quando uma solicitação expira.</xref:System.Threading.Thread.Abort%2A?displayProperty=fullName> </xref:System.Web.HttpRequest.TimedOutToken%2A?displayProperty=fullName> Definir essa propriedade como `false` pode ajudá-lo a garantir que as rotinas de cancelamento e a limpeza serão executado sem ser interrompido pelo ASP.NET.       Se você definir essa propriedade como `false`, ASP.NET não automaticamente exibirá uma página de erro de &quot;Solicitação atingiu o tempo limite&quot; quando ocorre um tempo limite. O aplicativo é responsável por definir o conteúdo de resposta adequadamente."
  syntax:
    content: public bool ThreadAbortOnTimeout { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; será chamado quando o thread de tempo limite; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.HttpContext.ThreadAbortOnTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Timestamp
  id: Timestamp
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Timestamp
  nameWithType: HttpContext.Timestamp
  fullName: System.Web.HttpContext.Timestamp
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o carimbo de hora inicial da solicitação HTTP atual."
  remarks: "O carimbo de hora retornado da propriedade de carimbo de hora é a hora local do servidor e é definido durante a instanciação do <xref:System.Web.HttpContext>objeto.</xref:System.Web.HttpContext> A hora local é igual à hora UTC mais o deslocamento UTC."
  syntax:
    content: public DateTime Timestamp { get; }
    return:
      type: System.DateTime
      description: "O carimbo de hora da solicitação HTTP atual."
  overload: System.Web.HttpContext.Timestamp*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.Trace
  id: Trace
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: Trace
  nameWithType: HttpContext.Trace
  fullName: System.Web.HttpContext.Trace
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o <xref href=&quot;System.Web.TraceContext&quot;> </xref> objeto para a resposta HTTP atual."
  syntax:
    content: public System.Web.TraceContext Trace { get; }
    return:
      type: System.Web.TraceContext
      description: "O <xref href=&quot;System.Web.TraceContext&quot;> </xref> para a resposta HTTP atual."
  overload: System.Web.HttpContext.Trace*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.User
  id: User
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: User
  nameWithType: HttpContext.User
  fullName: System.Web.HttpContext.User
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém ou define informações de segurança para a solicitação HTTP atual."
  remarks: "A propriedade de usuário fornece acesso programático para as propriedades e métodos do <xref:System.Security.Principal.IPrincipal>interface.</xref:System.Security.Principal.IPrincipal>       Como páginas ASP.NET contêm uma referência padrão para o <xref:System.Web>namespace (que contém o <xref:System.Web.HttpContext>classe), você pode fazer referência os membros de <xref:System.Web.HttpContext>uma página. aspx sem usar a referência de classe totalmente qualificado para o <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web.HttpContext> </xref:System.Web> Por exemplo, você pode usar `User.Identity.Name` obter o nome do usuário em cujo nome o processo atual está em execução. No entanto, se você quiser usar os membros de <xref:System.Security.Principal.IPrincipal>de um módulo de lógica ASP.NET, você deve incluir uma referência para o <xref:System.Web>namespace no módulo e uma referência totalmente qualificada para o contexto de solicitação/resposta ativa no momento e a classe de <xref:System.Web>que você deseja usar.</xref:System.Web> </xref:System.Web> </xref:System.Security.Principal.IPrincipal> Por exemplo, em uma página code-behind você deve especificar o nome totalmente qualificado `HttpContext.Current.User.Identity.Name`."
  example:
  - "The following example shows how to access properties of the current user through the User property. Those properties are used to set the title of the Web page.  \n  \n If the application uses Windows authentication, the user name includes the domain. For example, the page title would be “Home page for DOMAIN\\username”.  \n  \n [!code-cs[System.Web.HttpContext.User#1](~/add/codesnippet/csharp/p-system.web.httpcontext_1_1.cs)]\n [!code-vb[System.Web.HttpContext.User#1](~/add/codesnippet/visualbasic/p-system.web.httpcontext_1_1.vb)]"
  syntax:
    content: public System.Security.Principal.IPrincipal User { get; set; }
    return:
      type: System.Security.Principal.IPrincipal
      description: "Informações de segurança para a solicitação HTTP atual."
  overload: System.Web.HttpContext.User*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol
  id: WebSocketNegotiatedProtocol
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
  fullName: System.Web.HttpContext.WebSocketNegotiatedProtocol
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém o protocolo negociado que foi enviado do servidor para o cliente para um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> conexão."
  syntax:
    content: public string WebSocketNegotiatedProtocol { get; }
    return:
      type: System.String
      description: "O protocolo negociado."
  overload: System.Web.HttpContext.WebSocketNegotiatedProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpContext.WebSocketRequestedProtocols
  id: WebSocketRequestedProtocols
  parent: System.Web.HttpContext
  langs:
  - csharp
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
  fullName: System.Web.HttpContext.WebSocketRequestedProtocols
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Obtém a lista ordenada de protocolos solicitados pelo cliente."
  syntax:
    content: public System.Collections.Generic.IList<string> WebSocketRequestedProtocols { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Os protocolos solicitados, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não for um <xref href=&quot;System.Web.WebSockets.AspNetWebSocket&quot;> </xref> solicitação ou se nenhuma lista está presente."
  overload: System.Web.HttpContext.WebSocketRequestedProtocols*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.Resources.MissingManifestResourceException
  isExternal: true
  name: System.Resources.MissingManifestResourceException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.HttpContext.#ctor(System.Web.HttpWorkerRequest)
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext(HttpWorkerRequest)
  nameWithType: HttpContext.HttpContext(HttpWorkerRequest)
  fullName: System.Web.HttpContext.HttpContext(HttpWorkerRequest)
- uid: System.Web.HttpWorkerRequest
  parent: System.Web
  isExternal: false
  name: HttpWorkerRequest
  nameWithType: HttpWorkerRequest
  fullName: System.Web.HttpWorkerRequest
- uid: System.Web.HttpContext.#ctor(System.Web.HttpRequest,System.Web.HttpResponse)
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext(HttpRequest,HttpResponse)
  nameWithType: HttpContext.HttpContext(HttpRequest,HttpResponse)
  fullName: System.Web.HttpContext.HttpContext(HttpRequest,HttpResponse)
- uid: System.Web.HttpRequest
  parent: System.Web
  isExternal: false
  name: HttpRequest
  nameWithType: HttpRequest
  fullName: System.Web.HttpRequest
- uid: System.Web.HttpResponse
  parent: System.Web
  isExternal: false
  name: HttpResponse
  nameWithType: HttpResponse
  fullName: System.Web.HttpResponse
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task})
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>)
- uid: System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task}
  parent: System
  isExternal: true
  name: Func<AspNetWebSocketContext,Task>
  nameWithType: Func<AspNetWebSocketContext,Task>
  fullName: System.Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.WebSockets.AspNetWebSocketContext
    name: AspNetWebSocketContext
    nameWithType: AspNetWebSocketContext
    fullName: AspNetWebSocketContext
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: Task
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.AcceptWebSocketRequest(System.Func{System.Web.WebSockets.AspNetWebSocketContext,System.Threading.Tasks.Task},System.Web.WebSockets.AspNetWebSocketOptions)
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  nameWithType: HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
  fullName: System.Web.HttpContext.AcceptWebSocketRequest(Func<AspNetWebSocketContext,Task>,AspNetWebSocketOptions)
- uid: System.Web.WebSockets.AspNetWebSocketOptions
  parent: System.Web.WebSockets
  isExternal: false
  name: AspNetWebSocketOptions
  nameWithType: AspNetWebSocketOptions
  fullName: System.Web.WebSockets.AspNetWebSocketOptions
- uid: System.Web.HttpContext.AddError(System.Exception)
  parent: System.Web.HttpContext
  isExternal: false
  name: AddError(Exception)
  nameWithType: HttpContext.AddError(Exception)
  fullName: System.Web.HttpContext.AddError(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpContext.AddOnRequestCompleted(System.Action{System.Web.HttpContext})
  parent: System.Web.HttpContext
  isExternal: false
  name: AddOnRequestCompleted(Action<HttpContext>)
  nameWithType: HttpContext.AddOnRequestCompleted(Action<HttpContext>)
  fullName: System.Web.HttpContext.AddOnRequestCompleted(Action<HttpContext>)
- uid: System.Web.ISubscriptionToken
  parent: System.Web
  isExternal: false
  name: ISubscriptionToken
  nameWithType: ISubscriptionToken
  fullName: System.Web.ISubscriptionToken
- uid: System.Action{System.Web.HttpContext}
  parent: System
  isExternal: true
  name: Action<HttpContext>
  nameWithType: Action<HttpContext>
  fullName: System.Action<System.Web.HttpContext>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Web.HttpContext>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Web.HttpContext
    name: HttpContext
    nameWithType: HttpContext
    fullName: HttpContext
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.AllErrors
  parent: System.Web.HttpContext
  isExternal: false
  name: AllErrors
  nameWithType: HttpContext.AllErrors
  fullName: System.Web.HttpContext.AllErrors
- uid: System.Exception[]
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception[]
  spec.csharp:
  - uid: System.Exception
    name: Exception
    nameWithType: Exception
    fullName: Exception[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages
  parent: System.Web.HttpContext
  isExternal: false
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
  fullName: System.Web.HttpContext.AllowAsyncDuringSyncStages
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.HttpContext.Application
  parent: System.Web.HttpContext
  isExternal: false
  name: Application
  nameWithType: HttpContext.Application
  fullName: System.Web.HttpContext.Application
- uid: System.Web.HttpApplicationState
  parent: System.Web
  isExternal: false
  name: HttpApplicationState
  nameWithType: HttpApplicationState
  fullName: System.Web.HttpApplicationState
- uid: System.Web.HttpContext.ApplicationInstance
  parent: System.Web.HttpContext
  isExternal: false
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
  fullName: System.Web.HttpContext.ApplicationInstance
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.HttpContext.AsyncPreloadMode
  parent: System.Web.HttpContext
  isExternal: false
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
  fullName: System.Web.HttpContext.AsyncPreloadMode
- uid: System.Web.Configuration.AsyncPreloadModeFlags
  parent: System.Web.Configuration
  isExternal: false
  name: AsyncPreloadModeFlags
  nameWithType: AsyncPreloadModeFlags
  fullName: System.Web.Configuration.AsyncPreloadModeFlags
- uid: System.Web.HttpContext.Cache
  parent: System.Web.HttpContext
  isExternal: false
  name: Cache
  nameWithType: HttpContext.Cache
  fullName: System.Web.HttpContext.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.HttpContext.ClearError
  parent: System.Web.HttpContext
  isExternal: false
  name: ClearError()
  nameWithType: HttpContext.ClearError()
  fullName: System.Web.HttpContext.ClearError()
- uid: System.Web.HttpContext.Current
  parent: System.Web.HttpContext
  isExternal: false
  name: Current
  nameWithType: HttpContext.Current
  fullName: System.Web.HttpContext.Current
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.HttpContext.CurrentHandler
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
  fullName: System.Web.HttpContext.CurrentHandler
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpContext.CurrentNotification
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
  fullName: System.Web.HttpContext.CurrentNotification
- uid: System.Web.RequestNotification
  parent: System.Web
  isExternal: false
  name: RequestNotification
  nameWithType: RequestNotification
  fullName: System.Web.RequestNotification
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted(System.IDisposable)
  parent: System.Web.HttpContext
  isExternal: false
  name: DisposeOnPipelineCompleted(IDisposable)
  nameWithType: HttpContext.DisposeOnPipelineCompleted(IDisposable)
  fullName: System.Web.HttpContext.DisposeOnPipelineCompleted(IDisposable)
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Web.HttpContext.Error
  parent: System.Web.HttpContext
  isExternal: false
  name: Error
  nameWithType: HttpContext.Error
  fullName: System.Web.HttpContext.Error
- uid: System.Web.HttpContext.GetAppConfig(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetAppConfig(String)
  nameWithType: HttpContext.GetAppConfig(String)
  fullName: System.Web.HttpContext.GetAppConfig(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext.GetConfig(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetConfig(String)
  nameWithType: HttpContext.GetConfig(String)
  fullName: System.Web.HttpContext.GetConfig(String)
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject(String,String)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String)
- uid: System.Web.HttpContext.GetGlobalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetGlobalResourceObject(String,String,CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject(String,String)
  nameWithType: HttpContext.GetLocalResourceObject(String,String)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String)
- uid: System.Web.HttpContext.GetLocalResourceObject(System.String,System.String,System.Globalization.CultureInfo)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject(String,String,CultureInfo)
  nameWithType: HttpContext.GetLocalResourceObject(String,String,CultureInfo)
  fullName: System.Web.HttpContext.GetLocalResourceObject(String,String,CultureInfo)
- uid: System.Web.HttpContext.GetSection(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: GetSection(String)
  nameWithType: HttpContext.GetSection(String)
  fullName: System.Web.HttpContext.GetSection(String)
- uid: System.Web.HttpContext.Handler
  parent: System.Web.HttpContext
  isExternal: false
  name: Handler
  nameWithType: HttpContext.Handler
  fullName: System.Web.HttpContext.Handler
- uid: System.Web.HttpContext.IsCustomErrorEnabled
  parent: System.Web.HttpContext
  isExternal: false
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
  fullName: System.Web.HttpContext.IsCustomErrorEnabled
- uid: System.Web.HttpContext.IsDebuggingEnabled
  parent: System.Web.HttpContext
  isExternal: false
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
  fullName: System.Web.HttpContext.IsDebuggingEnabled
- uid: System.Web.HttpContext.IsPostNotification
  parent: System.Web.HttpContext
  isExternal: false
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
  fullName: System.Web.HttpContext.IsPostNotification
- uid: System.Web.HttpContext.IsWebSocketRequest
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
  fullName: System.Web.HttpContext.IsWebSocketRequest
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
  fullName: System.Web.HttpContext.IsWebSocketRequestUpgrading
- uid: System.Web.HttpContext.Items
  parent: System.Web.HttpContext
  isExternal: false
  name: Items
  nameWithType: HttpContext.Items
  fullName: System.Web.HttpContext.Items
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Web.HttpContext.PageInstrumentation
  parent: System.Web.HttpContext
  isExternal: false
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
  fullName: System.Web.HttpContext.PageInstrumentation
- uid: System.Web.Instrumentation.PageInstrumentationService
  parent: System.Web.Instrumentation
  isExternal: false
  name: PageInstrumentationService
  nameWithType: PageInstrumentationService
  fullName: System.Web.Instrumentation.PageInstrumentationService
- uid: System.Web.HttpContext.PreviousHandler
  parent: System.Web.HttpContext
  isExternal: false
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
  fullName: System.Web.HttpContext.PreviousHandler
- uid: System.Web.HttpContext.Profile
  parent: System.Web.HttpContext
  isExternal: false
  name: Profile
  nameWithType: HttpContext.Profile
  fullName: System.Web.HttpContext.Profile
- uid: System.Web.Profile.ProfileBase
  parent: System.Web.Profile
  isExternal: false
  name: ProfileBase
  nameWithType: ProfileBase
  fullName: System.Web.Profile.ProfileBase
- uid: System.Web.HttpContext.RemapHandler(System.Web.IHttpHandler)
  parent: System.Web.HttpContext
  isExternal: false
  name: RemapHandler(IHttpHandler)
  nameWithType: HttpContext.RemapHandler(IHttpHandler)
  fullName: System.Web.HttpContext.RemapHandler(IHttpHandler)
- uid: System.Web.HttpContext.Request
  parent: System.Web.HttpContext
  isExternal: false
  name: Request
  nameWithType: HttpContext.Request
  fullName: System.Web.HttpContext.Request
- uid: System.Web.HttpContext.Response
  parent: System.Web.HttpContext
  isExternal: false
  name: Response
  nameWithType: HttpContext.Response
  fullName: System.Web.HttpContext.Response
- uid: System.Web.HttpContext.RewritePath(System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String)
  nameWithType: HttpContext.RewritePath(String)
  fullName: System.Web.HttpContext.RewritePath(String)
- uid: System.Web.HttpContext.RewritePath(System.String,System.Boolean)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,Boolean)
  nameWithType: HttpContext.RewritePath(String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,Boolean)
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,String,String)
  nameWithType: HttpContext.RewritePath(String,String,String)
  fullName: System.Web.HttpContext.RewritePath(String,String,String)
- uid: System.Web.HttpContext.RewritePath(System.String,System.String,System.String,System.Boolean)
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath(String,String,String,Boolean)
  nameWithType: HttpContext.RewritePath(String,String,String,Boolean)
  fullName: System.Web.HttpContext.RewritePath(String,String,String,Boolean)
- uid: System.Web.HttpContext.Server
  parent: System.Web.HttpContext
  isExternal: false
  name: Server
  nameWithType: HttpContext.Server
  fullName: System.Web.HttpContext.Server
- uid: System.Web.HttpServerUtility
  parent: System.Web
  isExternal: false
  name: HttpServerUtility
  nameWithType: HttpServerUtility
  fullName: System.Web.HttpServerUtility
- uid: System.Web.HttpContext.Session
  parent: System.Web.HttpContext
  isExternal: false
  name: Session
  nameWithType: HttpContext.Session
  fullName: System.Web.HttpContext.Session
- uid: System.Web.SessionState.HttpSessionState
  parent: System.Web.SessionState
  isExternal: false
  name: HttpSessionState
  nameWithType: HttpSessionState
  fullName: System.Web.SessionState.HttpSessionState
- uid: System.Web.HttpContext.SetSessionStateBehavior(System.Web.SessionState.SessionStateBehavior)
  parent: System.Web.HttpContext
  isExternal: false
  name: SetSessionStateBehavior(SessionStateBehavior)
  nameWithType: HttpContext.SetSessionStateBehavior(SessionStateBehavior)
  fullName: System.Web.HttpContext.SetSessionStateBehavior(SessionStateBehavior)
- uid: System.Web.SessionState.SessionStateBehavior
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateBehavior
  nameWithType: SessionStateBehavior
  fullName: System.Web.SessionState.SessionStateBehavior
- uid: System.Web.HttpContext.SkipAuthorization
  parent: System.Web.HttpContext
  isExternal: false
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
  fullName: System.Web.HttpContext.SkipAuthorization
- uid: System.Web.HttpContext.System#IServiceProvider#GetService(System.Type)
  parent: System.Web.HttpContext
  isExternal: false
  name: System.IServiceProvider.GetService(Type)
  nameWithType: HttpContext.System.IServiceProvider.GetService(Type)
  fullName: System.Web.HttpContext.System.IServiceProvider.GetService(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.HttpContext.ThreadAbortOnTimeout
  parent: System.Web.HttpContext
  isExternal: false
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
  fullName: System.Web.HttpContext.ThreadAbortOnTimeout
- uid: System.Web.HttpContext.Timestamp
  parent: System.Web.HttpContext
  isExternal: false
  name: Timestamp
  nameWithType: HttpContext.Timestamp
  fullName: System.Web.HttpContext.Timestamp
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.Web.HttpContext.Trace
  parent: System.Web.HttpContext
  isExternal: false
  name: Trace
  nameWithType: HttpContext.Trace
  fullName: System.Web.HttpContext.Trace
- uid: System.Web.TraceContext
  parent: System.Web
  isExternal: false
  name: TraceContext
  nameWithType: TraceContext
  fullName: System.Web.TraceContext
- uid: System.Web.HttpContext.User
  parent: System.Web.HttpContext
  isExternal: false
  name: User
  nameWithType: HttpContext.User
  fullName: System.Web.HttpContext.User
- uid: System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
  fullName: System.Web.HttpContext.WebSocketNegotiatedProtocol
- uid: System.Web.HttpContext.WebSocketRequestedProtocols
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
  fullName: System.Web.HttpContext.WebSocketRequestedProtocols
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.HttpContext.#ctor*
  parent: System.Web.HttpContext
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext.HttpContext
- uid: System.Web.HttpContext.AcceptWebSocketRequest*
  parent: System.Web.HttpContext
  isExternal: false
  name: AcceptWebSocketRequest
  nameWithType: HttpContext.AcceptWebSocketRequest
- uid: System.Web.HttpContext.AddError*
  parent: System.Web.HttpContext
  isExternal: false
  name: AddError
  nameWithType: HttpContext.AddError
- uid: System.Web.HttpContext.AddOnRequestCompleted*
  parent: System.Web.HttpContext
  isExternal: false
  name: AddOnRequestCompleted
  nameWithType: HttpContext.AddOnRequestCompleted
- uid: System.Web.HttpContext.AllErrors*
  parent: System.Web.HttpContext
  isExternal: false
  name: AllErrors
  nameWithType: HttpContext.AllErrors
- uid: System.Web.HttpContext.AllowAsyncDuringSyncStages*
  parent: System.Web.HttpContext
  isExternal: false
  name: AllowAsyncDuringSyncStages
  nameWithType: HttpContext.AllowAsyncDuringSyncStages
- uid: System.Web.HttpContext.Application*
  parent: System.Web.HttpContext
  isExternal: false
  name: Application
  nameWithType: HttpContext.Application
- uid: System.Web.HttpContext.ApplicationInstance*
  parent: System.Web.HttpContext
  isExternal: false
  name: ApplicationInstance
  nameWithType: HttpContext.ApplicationInstance
- uid: System.Web.HttpContext.AsyncPreloadMode*
  parent: System.Web.HttpContext
  isExternal: false
  name: AsyncPreloadMode
  nameWithType: HttpContext.AsyncPreloadMode
- uid: System.Web.HttpContext.Cache*
  parent: System.Web.HttpContext
  isExternal: false
  name: Cache
  nameWithType: HttpContext.Cache
- uid: System.Web.HttpContext.ClearError*
  parent: System.Web.HttpContext
  isExternal: false
  name: ClearError
  nameWithType: HttpContext.ClearError
- uid: System.Web.HttpContext.Current*
  parent: System.Web.HttpContext
  isExternal: false
  name: Current
  nameWithType: HttpContext.Current
- uid: System.Web.HttpContext.CurrentHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentHandler
  nameWithType: HttpContext.CurrentHandler
- uid: System.Web.HttpContext.CurrentNotification*
  parent: System.Web.HttpContext
  isExternal: false
  name: CurrentNotification
  nameWithType: HttpContext.CurrentNotification
- uid: System.Web.HttpContext.DisposeOnPipelineCompleted*
  parent: System.Web.HttpContext
  isExternal: false
  name: DisposeOnPipelineCompleted
  nameWithType: HttpContext.DisposeOnPipelineCompleted
- uid: System.Web.HttpContext.Error*
  parent: System.Web.HttpContext
  isExternal: false
  name: Error
  nameWithType: HttpContext.Error
- uid: System.Web.HttpContext.GetAppConfig*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetAppConfig
  nameWithType: HttpContext.GetAppConfig
- uid: System.Web.HttpContext.GetConfig*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetConfig
  nameWithType: HttpContext.GetConfig
- uid: System.Web.HttpContext.GetGlobalResourceObject*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetGlobalResourceObject
  nameWithType: HttpContext.GetGlobalResourceObject
- uid: System.Web.HttpContext.GetLocalResourceObject*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetLocalResourceObject
  nameWithType: HttpContext.GetLocalResourceObject
- uid: System.Web.HttpContext.GetSection*
  parent: System.Web.HttpContext
  isExternal: false
  name: GetSection
  nameWithType: HttpContext.GetSection
- uid: System.Web.HttpContext.Handler*
  parent: System.Web.HttpContext
  isExternal: false
  name: Handler
  nameWithType: HttpContext.Handler
- uid: System.Web.HttpContext.IsCustomErrorEnabled*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsCustomErrorEnabled
  nameWithType: HttpContext.IsCustomErrorEnabled
- uid: System.Web.HttpContext.IsDebuggingEnabled*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsDebuggingEnabled
  nameWithType: HttpContext.IsDebuggingEnabled
- uid: System.Web.HttpContext.IsPostNotification*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsPostNotification
  nameWithType: HttpContext.IsPostNotification
- uid: System.Web.HttpContext.IsWebSocketRequest*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequest
  nameWithType: HttpContext.IsWebSocketRequest
- uid: System.Web.HttpContext.IsWebSocketRequestUpgrading*
  parent: System.Web.HttpContext
  isExternal: false
  name: IsWebSocketRequestUpgrading
  nameWithType: HttpContext.IsWebSocketRequestUpgrading
- uid: System.Web.HttpContext.Items*
  parent: System.Web.HttpContext
  isExternal: false
  name: Items
  nameWithType: HttpContext.Items
- uid: System.Web.HttpContext.PageInstrumentation*
  parent: System.Web.HttpContext
  isExternal: false
  name: PageInstrumentation
  nameWithType: HttpContext.PageInstrumentation
- uid: System.Web.HttpContext.PreviousHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: PreviousHandler
  nameWithType: HttpContext.PreviousHandler
- uid: System.Web.HttpContext.Profile*
  parent: System.Web.HttpContext
  isExternal: false
  name: Profile
  nameWithType: HttpContext.Profile
- uid: System.Web.HttpContext.RemapHandler*
  parent: System.Web.HttpContext
  isExternal: false
  name: RemapHandler
  nameWithType: HttpContext.RemapHandler
- uid: System.Web.HttpContext.Request*
  parent: System.Web.HttpContext
  isExternal: false
  name: Request
  nameWithType: HttpContext.Request
- uid: System.Web.HttpContext.Response*
  parent: System.Web.HttpContext
  isExternal: false
  name: Response
  nameWithType: HttpContext.Response
- uid: System.Web.HttpContext.RewritePath*
  parent: System.Web.HttpContext
  isExternal: false
  name: RewritePath
  nameWithType: HttpContext.RewritePath
- uid: System.Web.HttpContext.Server*
  parent: System.Web.HttpContext
  isExternal: false
  name: Server
  nameWithType: HttpContext.Server
- uid: System.Web.HttpContext.Session*
  parent: System.Web.HttpContext
  isExternal: false
  name: Session
  nameWithType: HttpContext.Session
- uid: System.Web.HttpContext.SetSessionStateBehavior*
  parent: System.Web.HttpContext
  isExternal: false
  name: SetSessionStateBehavior
  nameWithType: HttpContext.SetSessionStateBehavior
- uid: System.Web.HttpContext.SkipAuthorization*
  parent: System.Web.HttpContext
  isExternal: false
  name: SkipAuthorization
  nameWithType: HttpContext.SkipAuthorization
- uid: System.Web.HttpContext.System#IServiceProvider#GetService*
  parent: System.Web.HttpContext
  isExternal: false
  name: System.IServiceProvider.GetService
  nameWithType: HttpContext.System.IServiceProvider.GetService
- uid: System.Web.HttpContext.ThreadAbortOnTimeout*
  parent: System.Web.HttpContext
  isExternal: false
  name: ThreadAbortOnTimeout
  nameWithType: HttpContext.ThreadAbortOnTimeout
- uid: System.Web.HttpContext.Timestamp*
  parent: System.Web.HttpContext
  isExternal: false
  name: Timestamp
  nameWithType: HttpContext.Timestamp
- uid: System.Web.HttpContext.Trace*
  parent: System.Web.HttpContext
  isExternal: false
  name: Trace
  nameWithType: HttpContext.Trace
- uid: System.Web.HttpContext.User*
  parent: System.Web.HttpContext
  isExternal: false
  name: User
  nameWithType: HttpContext.User
- uid: System.Web.HttpContext.WebSocketNegotiatedProtocol*
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketNegotiatedProtocol
  nameWithType: HttpContext.WebSocketNegotiatedProtocol
- uid: System.Web.HttpContext.WebSocketRequestedProtocols*
  parent: System.Web.HttpContext
  isExternal: false
  name: WebSocketRequestedProtocols
  nameWithType: HttpContext.WebSocketRequestedProtocols
