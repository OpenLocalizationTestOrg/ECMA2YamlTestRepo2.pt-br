### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement
  id: WSDualHttpBindingElement
  children:
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor(System.String)
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.Security
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow
  - System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy
  langs:
  - csharp
  name: WSDualHttpBindingElement
  nameWithType: WSDualHttpBindingElement
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement
  type: Class
  summary: "Representa o elemento de configuração para uma associação segura e interoperável que é adequada para contratos de serviço duplex ou comunicação através de intermediários SOAP."
  remarks: "O wsDualHttpBinding é uma associação segura, confiável e interoperável adequada para contratos de serviço duplex. Por padrão, ele gera uma pilha de tempo de execução com o WS-ReliableMessaging de confiabilidade, WS-Security para segurança de mensagem e autenticação de HTTP para entrega de mensagens e uma codificação de mensagem de texto/XML.       Essa associação requer que o cliente tem um URI público. Ele pode ser usado para se comunicar com segurança por meio de um ou mais intermediários SOAP."
  syntax:
    content: 'public class WSDualHttpBindingElement : System.ServiceModel.Configuration.StandardBindingElement'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement
  - System.ServiceModel.Configuration.StandardBindingElement
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsModified
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.ResetModified
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.SetReadOnly
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.ServiceModel.Configuration.ServiceModelConfigurationElement.SetPropertyValueIfNotDefaultValue``1(System.String,``0)
  - System.ServiceModel.Configuration.StandardBindingElement.ApplyConfiguration(System.ServiceModel.Channels.Binding)
  - System.ServiceModel.Configuration.StandardBindingElement.CloseTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.Name
  - System.ServiceModel.Configuration.StandardBindingElement.OpenTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.ReceiveTimeout
  - System.ServiceModel.Configuration.StandardBindingElement.Reset(System.Configuration.ConfigurationElement)
  - System.ServiceModel.Configuration.StandardBindingElement.SendTimeout
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor
  id: '#ctor'
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: WSDualHttpBindingElement()
  nameWithType: WSDualHttpBindingElement.WSDualHttpBindingElement()
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.WSDualHttpBindingElement()
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Configuration.WSDualHttpBindingElement&quot;> </xref> classe."
  syntax:
    content: public WSDualHttpBindingElement ();
    parameters: []
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: WSDualHttpBindingElement(String)
  nameWithType: WSDualHttpBindingElement.WSDualHttpBindingElement(String)
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.WSDualHttpBindingElement(String)
  type: Constructor
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ServiceModel.Configuration.WSDualHttpBindingElement&quot;> </xref> classe com o nome especificado."
  syntax:
    content: public WSDualHttpBindingElement (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da configuração da associação. Esse valor deve ser exclusivo, porque ele é usado como identificação para a associação."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType
  id: BindingElementType
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: BindingElementType
  nameWithType: WSDualHttpBindingElement.BindingElementType
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém o tipo deste elemento de associação."
  syntax:
    content: protected override Type BindingElementType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>desse elemento de associação.</xref:System.Type>"
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal
  id: BypassProxyOnLocal
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: BypassProxyOnLocal
  nameWithType: WSDualHttpBindingElement.BypassProxyOnLocal
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define um valor booleano que especifica se deve ignorar o servidor proxy para endereços locais."
  syntax:
    content: public bool BypassProxyOnLocal { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o servidor proxy é ignorado para endereços locais; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress
  id: ClientBaseAddress
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: ClientBaseAddress
  nameWithType: WSDualHttpBindingElement.ClientBaseAddress
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define um URI que especifica que o endereço base do cliente escuta para mensagens de resposta do serviço."
  remarks: "Se essa propriedade tem um valor, esse endereço (mais de um GUID para cada canal) é usado para escuta. Caso contrário, o endereço base do cliente é gerado de forma específica de transporte."
  syntax:
    content: public Uri ClientBaseAddress { get; set; }
    return:
      type: System.Uri
      description: "Um URI que especifica o endereço base que o cliente aguarda para mensagens de resposta do serviço."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode
  id: HostNameComparisonMode
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: HostNameComparisonMode
  nameWithType: WSDualHttpBindingElement.HostNameComparisonMode
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define o modo de comparação de nome de host HTTP usado para analisar URIs."
  syntax:
    content: public System.ServiceModel.HostNameComparisonMode HostNameComparisonMode { get; set; }
    return:
      type: System.ServiceModel.HostNameComparisonMode
      description: "Um valor HostNameComparisonMode válido que especifica se o nome do host é usado para acessar o serviço ao fazer correspondência no URI. O valor padrão é <xref href=&quot;System.ServiceModel.HostNameComparisonMode&quot;> </xref>, que ignora o nome do host na correspondência."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  id: InitializeFrom(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: InitializeFrom(Binding)
  nameWithType: WSDualHttpBindingElement.InitializeFrom(Binding)
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(Binding)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Inicializa essa seção de configuração de associação com o conteúdo da coleção de associação especificada."
  syntax:
    content: protected override void InitializeFrom (System.ServiceModel.Channels.Binding binding);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "Uma coleção de elementos de associação."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize
  id: MaxBufferPoolSize
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: MaxBufferPoolSize
  nameWithType: WSDualHttpBindingElement.MaxBufferPoolSize
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define a quantidade máxima de memória, em bytes, que podem ser alocados para o Gerenciador de buffer de mensagem, que recebe mensagens a pontos de extremidade configurados com essa associação."
  syntax:
    content: public long MaxBufferPoolSize { get; set; }
    return:
      type: System.Int64
      description: "O tamanho máximo, em bytes, para o pool de buffers usados por um ponto de extremidade configurado com essa associação. O valor padrão é 524288 bytes."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize
  id: MaxReceivedMessageSize
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: MaxReceivedMessageSize
  nameWithType: WSDualHttpBindingElement.MaxReceivedMessageSize
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define o tamanho máximo, em bytes, para uma mensagem que pode ser recebido em um canal configurado com essa associação."
  remarks: "O tamanho das mensagens que podem ser recebidas durante a transmissão por serviços usando o <xref:System.ServiceModel.WSDualHttpBinding>classe é limitada pela quantidade de memória alocada para cada mensagem.</xref:System.ServiceModel.WSDualHttpBinding> Isso associado ao tamanho da mensagem serve para limitar a exposição a ataques de estilo DoS.       Observe que as configurações para <xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize%2A>e MaxReceivedMessageSize, são as configurações de comportamento locais.</xref:System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize%2A> Isso significa que eles não são transmitidos para outros pontos de extremidade de metadados. Se você gerar um proxy para um serviço com um tamanho máximo de 2GB de metadados, o proxy ainda tem um valor padrão de 64K. Isso mantém o controle dos limites apropriados para a mensagem e tamanho do buffer de mensagem no escopo do grupo local Administradores."
  syntax:
    content: public long MaxReceivedMessageSize { get; set; }
    return:
      type: System.Int64
      description: "O tamanho máximo, em bytes, para uma mensagem que é processada por meio da associação. O valor padrão é 65.536 bytes."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding
  id: MessageEncoding
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: MessageEncoding
  nameWithType: WSDualHttpBindingElement.MessageEncoding
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define o codificador usado para codificar a mensagem."
  syntax:
    content: public System.ServiceModel.WSMessageEncoding MessageEncoding { get; set; }
    return:
      type: System.ServiceModel.WSMessageEncoding
      description: "Um <xref href=&quot;System.ServiceModel.WSMessageEncoding&quot;> </xref> valor que especifica o codificador usado para codificar a mensagem. O valor padrão é <xref href=&quot;System.ServiceModel.WSMessageEncoding&quot;> </xref>."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  id: OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: OnApplyConfiguration(Binding)
  nameWithType: WSDualHttpBindingElement.OnApplyConfiguration(Binding)
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(Binding)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Chamado quando o conteúdo de uma coleção de associação especificada é aplicado a este elemento de configuração de associação."
  syntax:
    content: protected override void OnApplyConfiguration (System.ServiceModel.Channels.Binding binding);
    parameters:
    - id: binding
      type: System.ServiceModel.Channels.Binding
      description: "A associação a ser aplicado."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties
  id: Properties
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: Properties
  nameWithType: WSDualHttpBindingElement.Properties
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém um <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref> instância que contém uma coleção de <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> objetos que podem ser atributos ou <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objetos deste elemento de configuração."
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "Um <xref href=&quot;System.Configuration.ConfigurationPropertyCollection&quot;> </xref> instância que contém uma coleção de <xref href=&quot;System.Configuration.ConfigurationProperty&quot;> </xref> objetos que podem ser atributos ou <xref href=&quot;System.Configuration.ConfigurationElement&quot;> </xref> objetos deste elemento de configuração."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress
  id: ProxyAddress
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: ProxyAddress
  nameWithType: WSDualHttpBindingElement.ProxyAddress
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define um URI que especifica o endereço do proxy HTTP."
  remarks: "Se o <xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A>está definida como `true`, o valor dessa propriedade é ignorado.</xref:System.ServiceModel.WSDualHttpBinding.UseDefaultWebProxy%2A>"
  syntax:
    content: public Uri ProxyAddress { get; set; }
    return:
      type: System.Uri
      description: "Um URI que especifica o endereço do proxy HTTP."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas
  id: ReaderQuotas
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: ReaderQuotas
  nameWithType: WSDualHttpBindingElement.ReaderQuotas
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define as restrições na complexidade de mensagens SOAP que podem ser processadas por pontos de extremidade configurados com essa associação."
  remarks: "As restrições de complexidade incluem itens como uma profundidade máxima do elemento ou um comprimento máximo de conteúdo de cadeia de caracteres dentro da mensagem. As restrições de protegem contra um tipo de ataques negação de serviço (DOS) que tentam usar complexidade mensagem unir os recursos de processamento de ponto de extremidade."
  syntax:
    content: public System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement ReaderQuotas { get; }
    return:
      type: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement
      description: "O <xref:System.Xml.XmlDictionaryReaderQuotas>que especifica as restrições de complexidade.</xref:System.Xml.XmlDictionaryReaderQuotas>"
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession
  id: ReliableSession
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: ReliableSession
  nameWithType: WSDualHttpBindingElement.ReliableSession
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém um elemento de configuração que especifica se as sessões confiáveis estão habilitadas para o ponto de extremidade configurado com essa associação."
  remarks: "Uma sessão confiável é necessária para serviços configurados com associação wsDualHttpBinding."
  syntax:
    content: public System.ServiceModel.Configuration.StandardBindingReliableSessionElement ReliableSession { get; }
    return:
      type: System.ServiceModel.Configuration.StandardBindingReliableSessionElement
      description: "Um <xref href=&quot;System.ServiceModel.Configuration.ReliableSessionElement&quot;> </xref> que especifica se as sessões confiáveis são habilitadas para o ponto de extremidade configurado com essa associação."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.Security
  id: Security
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: Security
  nameWithType: WSDualHttpBindingElement.Security
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.Security
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém o tipo de segurança a ser usado com essa associação."
  syntax:
    content: public System.ServiceModel.Configuration.WSDualHttpSecurityElement Security { get; }
    return:
      type: System.ServiceModel.Configuration.WSDualHttpSecurityElement
      description: "O <xref href=&quot;System.ServiceModel.Configuration.WSDualHttpSecurityElement&quot;> </xref> que especifica as configurações de segurança usadas com essa associação."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.Security*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding
  id: TextEncoding
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: TextEncoding
  nameWithType: WSDualHttpBindingElement.TextEncoding
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define a codificação a ser usada para emitir mensagens na associação de conjunto de caracteres."
  syntax:
    content: public System.Text.Encoding TextEncoding { get; set; }
    return:
      type: System.Text.Encoding
      description: "Uma opção válida <xref:System.Text.Encoding>valor que especifica o caractere definido a codificação a ser usada para emitir mensagens na associação.</xref:System.Text.Encoding> O padrão é <xref:System.Text.UTF8Encoding>.</xref:System.Text.UTF8Encoding>"
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow
  id: TransactionFlow
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: TransactionFlow
  nameWithType: WSDualHttpBindingElement.TransactionFlow
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define um valor booleano que especifica se a associação oferece suporte a fluxo de transações de WS."
  remarks: "O valor padrão especifica que os clientes não fluxo de transações e serviços rejeitar mensagens com um cabeçalho de mensagem de transação que fluiu."
  syntax:
    content: public bool TransactionFlow { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a associação oferece suporte a transações de WS fluxo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow*
  exceptions: []
  platform:
  - net462
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy
  id: UseDefaultWebProxy
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  langs:
  - csharp
  name: UseDefaultWebProxy
  nameWithType: WSDualHttpBindingElement.UseDefaultWebProxy
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy
  type: Property
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Configuration
  summary: "Obtém ou define um valor booleano que especifica se o proxy HTTP configurado automaticamente do sistema é usado."
  syntax:
    content: public bool UseDefaultWebProxy { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o proxy HTTP configurado automaticamente do sistema é usado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Configuration.StandardBindingElement
  isExternal: false
  name: System.ServiceModel.Configuration.StandardBindingElement
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: WSDualHttpBindingElement()
  nameWithType: WSDualHttpBindingElement.WSDualHttpBindingElement()
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.WSDualHttpBindingElement()
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor(System.String)
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: WSDualHttpBindingElement(String)
  nameWithType: WSDualHttpBindingElement.WSDualHttpBindingElement(String)
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.WSDualHttpBindingElement(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: BindingElementType
  nameWithType: WSDualHttpBindingElement.BindingElementType
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WSDualHttpBindingElement.BypassProxyOnLocal
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ClientBaseAddress
  nameWithType: WSDualHttpBindingElement.ClientBaseAddress
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WSDualHttpBindingElement.HostNameComparisonMode
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode
- uid: System.ServiceModel.HostNameComparisonMode
  parent: System.ServiceModel
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: HostNameComparisonMode
  fullName: System.ServiceModel.HostNameComparisonMode
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: InitializeFrom(Binding)
  nameWithType: WSDualHttpBindingElement.InitializeFrom(Binding)
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom(Binding)
- uid: System.ServiceModel.Channels.Binding
  parent: System.ServiceModel.Channels
  isExternal: true
  name: Binding
  nameWithType: Binding
  fullName: System.ServiceModel.Channels.Binding
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WSDualHttpBindingElement.MaxBufferPoolSize
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WSDualHttpBindingElement.MaxReceivedMessageSize
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: MessageEncoding
  nameWithType: WSDualHttpBindingElement.MessageEncoding
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding
- uid: System.ServiceModel.WSMessageEncoding
  parent: System.ServiceModel
  isExternal: false
  name: WSMessageEncoding
  nameWithType: WSMessageEncoding
  fullName: System.ServiceModel.WSMessageEncoding
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(System.ServiceModel.Channels.Binding)
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: OnApplyConfiguration(Binding)
  nameWithType: WSDualHttpBindingElement.OnApplyConfiguration(Binding)
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration(Binding)
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: Properties
  nameWithType: WSDualHttpBindingElement.Properties
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ProxyAddress
  nameWithType: WSDualHttpBindingElement.ProxyAddress
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ReaderQuotas
  nameWithType: WSDualHttpBindingElement.ReaderQuotas
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas
- uid: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: XmlDictionaryReaderQuotasElement
  nameWithType: XmlDictionaryReaderQuotasElement
  fullName: System.ServiceModel.Configuration.XmlDictionaryReaderQuotasElement
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ReliableSession
  nameWithType: WSDualHttpBindingElement.ReliableSession
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession
- uid: System.ServiceModel.Configuration.StandardBindingReliableSessionElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: StandardBindingReliableSessionElement
  nameWithType: StandardBindingReliableSessionElement
  fullName: System.ServiceModel.Configuration.StandardBindingReliableSessionElement
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.Security
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: Security
  nameWithType: WSDualHttpBindingElement.Security
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.Security
- uid: System.ServiceModel.Configuration.WSDualHttpSecurityElement
  parent: System.ServiceModel.Configuration
  isExternal: false
  name: WSDualHttpSecurityElement
  nameWithType: WSDualHttpSecurityElement
  fullName: System.ServiceModel.Configuration.WSDualHttpSecurityElement
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: TextEncoding
  nameWithType: WSDualHttpBindingElement.TextEncoding
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding
- uid: System.Text.Encoding
  parent: System.Text
  isExternal: true
  name: Encoding
  nameWithType: Encoding
  fullName: System.Text.Encoding
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: TransactionFlow
  nameWithType: WSDualHttpBindingElement.TransactionFlow
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WSDualHttpBindingElement.UseDefaultWebProxy
  fullName: System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.#ctor*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: WSDualHttpBindingElement
  nameWithType: WSDualHttpBindingElement.WSDualHttpBindingElement
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.BindingElementType*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: BindingElementType
  nameWithType: WSDualHttpBindingElement.BindingElementType
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.BypassProxyOnLocal*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: BypassProxyOnLocal
  nameWithType: WSDualHttpBindingElement.BypassProxyOnLocal
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ClientBaseAddress*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ClientBaseAddress
  nameWithType: WSDualHttpBindingElement.ClientBaseAddress
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.HostNameComparisonMode*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: HostNameComparisonMode
  nameWithType: WSDualHttpBindingElement.HostNameComparisonMode
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.InitializeFrom*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: InitializeFrom
  nameWithType: WSDualHttpBindingElement.InitializeFrom
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxBufferPoolSize*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: MaxBufferPoolSize
  nameWithType: WSDualHttpBindingElement.MaxBufferPoolSize
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MaxReceivedMessageSize*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: MaxReceivedMessageSize
  nameWithType: WSDualHttpBindingElement.MaxReceivedMessageSize
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.MessageEncoding*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: MessageEncoding
  nameWithType: WSDualHttpBindingElement.MessageEncoding
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.OnApplyConfiguration*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: OnApplyConfiguration
  nameWithType: WSDualHttpBindingElement.OnApplyConfiguration
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.Properties*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: Properties
  nameWithType: WSDualHttpBindingElement.Properties
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ProxyAddress*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ProxyAddress
  nameWithType: WSDualHttpBindingElement.ProxyAddress
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReaderQuotas*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ReaderQuotas
  nameWithType: WSDualHttpBindingElement.ReaderQuotas
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.ReliableSession*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: ReliableSession
  nameWithType: WSDualHttpBindingElement.ReliableSession
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.Security*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: Security
  nameWithType: WSDualHttpBindingElement.Security
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.TextEncoding*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: TextEncoding
  nameWithType: WSDualHttpBindingElement.TextEncoding
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.TransactionFlow*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: TransactionFlow
  nameWithType: WSDualHttpBindingElement.TransactionFlow
- uid: System.ServiceModel.Configuration.WSDualHttpBindingElement.UseDefaultWebProxy*
  parent: System.ServiceModel.Configuration.WSDualHttpBindingElement
  isExternal: false
  name: UseDefaultWebProxy
  nameWithType: WSDualHttpBindingElement.UseDefaultWebProxy
