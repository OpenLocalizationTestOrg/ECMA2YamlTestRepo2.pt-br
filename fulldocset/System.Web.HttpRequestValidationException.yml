### YamlMime:ManagedReference
items:
- uid: System.Web.HttpRequestValidationException
  id: HttpRequestValidationException
  children:
  - System.Web.HttpRequestValidationException.#ctor
  - System.Web.HttpRequestValidationException.#ctor(System.String)
  - System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  langs:
  - csharp
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException
  fullName: System.Web.HttpRequestValidationException
  type: Class
  summary: "A exceção que é lançada quando uma cadeia de caracteres de entrada potencialmente mal-intencionada é recebida do cliente como parte dos dados solicitados. Essa classe não pode ser herdada."
  remarks: "Restringir e validando a entrada do usuário são essencial em um aplicativo Web para evitar ataques de hacker que se baseiam em cadeias de caracteres de entrada mal-intencionado. Ataques de scripts entre sites são um exemplo de tal hackers. Outros tipos de dados maliciosos ou indesejados podem ser passados em uma solicitação por meio de várias formas de entrada. Limitar os tipos de dados que são passados em um nível baixo em um aplicativo, você pode evitar eventos indesejáveis, mesmo quando os programadores que usam seu código não coloque as técnicas de validação correta em vigor.       Validação de solicitação detecta a entrada de cliente possivelmente mal-intencionados e gera essa exceção para interromper o processamento da solicitação. Anular uma solicitação pode indicar uma tentativa de comprometer a segurança de seu aplicativo, como um ataque de script entre sites. É altamente recomendável que o aplicativo verifique explicitamente todas as entradas sobre cancelamentos de solicitação. No entanto, você pode desabilitar a validação de solicitação definindo o `validateRequest` atributo na diretiva para `false`, conforme mostrado no exemplo a seguir: `<%@ Page validateRequest=&quot;false&quot; %>` para desativar a validação de solicitação para o seu aplicativo, você deve modificar ou criar um arquivo Web. config para seu aplicativo e defina o `validateRequest` atributo do `pages` seção `false`, conforme mostrado no exemplo a seguir: ```   <configuration>      <system.web>        <pages validateRequest=&quot;false&quot; />      </system.web>    </configuration>    ``` para desabilitar a validação de solicitação para todos os aplicativos no servidor , você pode fazer essa modificação para o arquivo Machine. config.      > [!NOTE] > É altamente recomendável que o aplicativo verifique explicitamente todas as entradas que ele usa além da validação de solicitação executada pelo ASP.NET. O recurso de validação de solicitação não pode capturar todos os ataques, especialmente aqueles criados especificamente em relação a lógica do aplicativo."
  example:
  - "The following code example demonstrates how to check for malicious user input by using an HttpRequestValidationException.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[HttpRequestValidationException#1](~/add/codesnippet/visualbasic/t-system.web.httprequest_1.aspx)]\n [!code-cs[HttpRequestValidationException#1](~/add/codesnippet/csharp/t-system.web.httprequest_1.aspx)]"
  syntax:
    content: 'public sealed class HttpRequestValidationException : System.Web.HttpException'
  inheritance:
  - System.Exception
  - System.SystemException
  - System.Runtime.InteropServices.ExternalException
  - System.Web.HttpException
  implements: []
  inheritedMembers:
  - System.Runtime.InteropServices.ExternalException.ErrorCode
  - System.Runtime.InteropServices.ExternalException.ToString
  - System.Web.HttpException.CreateFromLastError(System.String)
  - System.Web.HttpException.GetHtmlErrorMessage
  - System.Web.HttpException.GetHttpCode
  - System.Web.HttpException.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)
  - System.Web.HttpException.WebEventCode
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor
  id: '#ctor'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException()
  nameWithType: HttpRequestValidationException.HttpRequestValidationException()
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Cria uma nova instância do <xref href=&quot;System.Web.HttpRequestValidationException&quot;> </xref> classe."
  syntax:
    content: public HttpRequestValidationException ();
    parameters: []
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException(String)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Cria um novo <xref href=&quot;System.Web.HttpRequestValidationException&quot;> </xref> exceção com a mensagem de erro especificada."
  remarks: "O conteúdo a `message` parâmetro deve ser humano legível. O chamador do construtor HttpRequestValidationException é necessário para garantir que o `message` cadeia de caracteres foi localizada."
  syntax:
    content: public HttpRequestValidationException (string message);
    parameters:
    - id: message
      type: System.String
      description: "Uma cadeia de caracteres que descreve o erro."
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  id: '#ctor(System.String,System.Exception)'
  parent: System.Web.HttpRequestValidationException
  langs:
  - csharp
  name: HttpRequestValidationException(String,Exception)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.HttpRequestValidationException&quot;> </xref> classe com uma mensagem de erro especificada e uma referência à exceção interna que é a causa da exceção."
  remarks: "Uma exceção que é lançada como um resultado direto de uma exceção anterior deve incluir uma referência à exceção anterior no <xref:System.Exception.InnerException%2A>propriedade.</xref:System.Exception.InnerException%2A> O <xref:System.Exception.InnerException%2A>propriedade retorna o mesmo valor que é passado para o construtor HttpRequestValidationException, ou `null` se o <xref:System.Exception.InnerException%2A>propriedade não fornecer o valor da exceção interna para o construtor HttpRequestValidationException.</xref:System.Exception.InnerException%2A> </xref:System.Exception.InnerException%2A>"
  syntax:
    content: public HttpRequestValidationException (string message, Exception innerException);
    parameters:
    - id: message
      type: System.String
      description: "Uma mensagem de erro que explica o motivo da exceção."
    - id: innerException
      type: System.Exception
      description: "A exceção que é a causa da exceção atual. Se esse parâmetro não for <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, a exceção atual é gerada em um <xref uid=&quot;langword_csharp_catch&quot; name=&quot;catch&quot; href=&quot;&quot;> </xref> bloco que manipula a exceção interna."
  overload: System.Web.HttpRequestValidationException.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.HttpException
  isExternal: false
  name: System.Web.HttpException
- uid: System.Web.HttpRequestValidationException.#ctor
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException()
  nameWithType: HttpRequestValidationException.HttpRequestValidationException()
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException()
- uid: System.Web.HttpRequestValidationException.#ctor(System.String)
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException(String)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpRequestValidationException.#ctor(System.String,System.Exception)
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException(String,Exception)
  nameWithType: HttpRequestValidationException.HttpRequestValidationException(String,Exception)
  fullName: System.Web.HttpRequestValidationException.HttpRequestValidationException(String,Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.HttpRequestValidationException.#ctor*
  parent: System.Web.HttpRequestValidationException
  isExternal: false
  name: HttpRequestValidationException
  nameWithType: HttpRequestValidationException.HttpRequestValidationException
