### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink
  id: IContributeServerContextSink
  children:
  - System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  langs:
  - csharp
  name: IContributeServerContextSink
  nameWithType: IContributeServerContextSink
  fullName: System.Runtime.Remoting.Contexts.IContributeServerContextSink
  type: Interface
  summary: "Contribui com um coletor de interceptação no limite de contexto na extremidade do servidor de uma chamada de comunicação remota."
  remarks: "A interface IContributeServerContextSink é implementada por propriedades de contexto em um <xref:System.Runtime.Remoting.Contexts.Context>classe que deseja contribuir um coletor de interceptação no limite de contexto na extremidade do servidor de uma chamada de comunicação remota.</xref:System.Runtime.Remoting.Contexts.Context>       A cadeia de contexto do servidor é composta dessas propriedades no contexto do servidor que implementam IContributeServerContextSink e que contribuem um coletor usando o <xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A>chamada de método.</xref:System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink%2A>       A serialização é um exemplo de uma propriedade de contexto. Nesse caso, o coletor de mensagem envolve colocar um bloqueio de primitivos de sincronização antes de processar uma chamada de qualquer adicional."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IContributeServerContextSink
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  id: GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.IContributeServerContextSink
  langs:
  - csharp
  name: GetServerContextSink(IMessageSink)
  nameWithType: IContributeServerContextSink.GetServerContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(IMessageSink)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Contexts
  summary: "Usa o primeiro coletor da cadeia de Coletores composto até o momento e, em seguida, o coletor de mensagem na frente da cadeia já formada se encadeia."
  syntax:
    content: public System.Runtime.Remoting.Messaging.IMessageSink GetServerContextSink (System.Runtime.Remoting.Messaging.IMessageSink nextSink);
    parameters:
    - id: nextSink
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "A cadeia de Coletores composto até o momento."
    return:
      type: System.Runtime.Remoting.Messaging.IMessageSink
      description: "A cadeia de composição de coletor."
  overload: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(System.Runtime.Remoting.Messaging.IMessageSink)
  parent: System.Runtime.Remoting.Contexts.IContributeServerContextSink
  isExternal: false
  name: GetServerContextSink(IMessageSink)
  nameWithType: IContributeServerContextSink.GetServerContextSink(IMessageSink)
  fullName: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink(IMessageSink)
- uid: System.Runtime.Remoting.Messaging.IMessageSink
  parent: System.Runtime.Remoting.Messaging
  isExternal: false
  name: IMessageSink
  nameWithType: IMessageSink
  fullName: System.Runtime.Remoting.Messaging.IMessageSink
- uid: System.Runtime.Remoting.Contexts.IContributeServerContextSink.GetServerContextSink*
  parent: System.Runtime.Remoting.Contexts.IContributeServerContextSink
  isExternal: false
  name: GetServerContextSink
  nameWithType: IContributeServerContextSink.GetServerContextSink
