### YamlMime:ManagedReference
items:
- uid: System.Web.UI.Design.ExpressionEditorSheet
  id: ExpressionEditorSheet
  children:
  - System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)
  - System.Web.UI.Design.ExpressionEditorSheet.GetExpression
  - System.Web.UI.Design.ExpressionEditorSheet.IsValid
  - System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
  langs:
  - csharp
  name: ExpressionEditorSheet
  nameWithType: ExpressionEditorSheet
  fullName: System.Web.UI.Design.ExpressionEditorSheet
  type: Class
  summary: "Representa uma folha de editor de tempo de design para uma expressão personalizada. Essa classe deve ser herdada."
  remarks: "Uma folha de editor de expressão personalizada permite que um desenvolvedor definir propriedades em uma expressão personalizada em tempo de design. Valores de propriedade de controle podem ser definidos usando cadeias de caracteres de expressão; as cadeias de caracteres de expressão são avaliadas em tempo de execução por um construtor de expressões e em tempo de design, um editor de expressão.       Quando você procura a <xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A>propriedade para um controle na grade de propriedades de tempo de design, o designer visual exibe uma caixa de diálogo para definir as expressões que fornecem o valor para uma propriedade de controle.</xref:System.Web.UI.Design.HtmlControlDesigner.Expressions%2A> Você pode selecionar o tipo de expressão com base em uma lista de prefixos de expressão. Quando você seleciona um prefixo de expressão da lista, o designer visual usa associado <xref:System.Web.UI.Design.ExpressionEditor>e objetos ExpressionEditorSheet para avaliar e converter a cadeia de caracteres de expressão com base na sintaxe para esse tipo de expressão.</xref:System.Web.UI.Design.ExpressionEditor> O designer visual usa propriedades de folha do editor de expressão para solicitar um ou mais cadeias de caracteres que combinam na cadeia de caracteres de expressão personalizada.       Normalmente, para fornecer um novo tipo de expressão em tempo de design, você definir um prefixo de expressão exclusivo e fornecer personalizado <xref:System.Web.Compilation.ExpressionBuilder>e <xref:System.Web.UI.Design.ExpressionEditor>implementações.</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.Compilation.ExpressionBuilder> Opcionalmente, você pode fornecer uma implementação personalizada de ExpressionEditorSheet que define as propriedades que são usadas para formar a expressão. Para associar um prefixo de expressão com um construtor de expressão e um editor de expressão, aplicar o <xref:System.Web.Compilation.ExpressionEditorAttribute>atributo e um <xref:System.Web.Compilation.ExpressionPrefixAttribute>atributo personalizado <xref:System.Web.Configuration.ExpressionBuilder>classe e, em seguida, configurar o prefixo de expressão para um construtor de expressões a `expressionBuilders` elemento no arquivo de configuração Web.</xref:System.Web.Configuration.ExpressionBuilder> </xref:System.Web.Compilation.ExpressionPrefixAttribute> </xref:System.Web.Compilation.ExpressionEditorAttribute>       A implementação padrão da <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>método retorna uma folha de editor básico, que usa uma única cadeia de caracteres de entrada para formar a expressão.</xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> Editores de expressão personalizada que derivam o <xref:System.Web.UI.Design.ExpressionEditor>pode substituir o <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>método para retornar um editor personalizado de implementação de folha.</xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A> </xref:System.Web.UI.Design.ExpressionEditor> Normalmente, uma folha de um editor personalizado contiver várias propriedades que são usadas para construir a cadeia de caracteres de expressão. O <xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A>método retorna a cadeia de caracteres de expressão resultante com base nas propriedades de expressão atual.</xref:System.Web.UI.Design.ExpressionEditorSheet.GetExpression%2A>       Por exemplo, a <xref:System.Web.UI.Design.ResourceExpressionEditor>classe deriva de <xref:System.Web.UI.Design.ExpressionEditor>classe e fornece uma implementação para avaliar e associar uma referência de cadeia de caracteres de recurso uma propriedade de controle em tempo de design.</xref:System.Web.UI.Design.ExpressionEditor> </xref:System.Web.UI.Design.ResourceExpressionEditor> O <xref:System.Web.Compilation.ResourceExpressionBuilder>classe está associada com o prefixo de expressão `Resources` e <xref:System.Web.UI.Design.ResourceExpressionEditor>implementação.</xref:System.Web.UI.Design.ResourceExpressionEditor> </xref:System.Web.Compilation.ResourceExpressionBuilder> O <xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A>método retorna um <xref:System.Web.UI.Design.ResourceExpressionEditorSheet>, que define as propriedades individuais que formam uma expressão de referência de recurso.</xref:System.Web.UI.Design.ResourceExpressionEditorSheet> </xref:System.Web.UI.Design.ResourceExpressionEditor.GetExpressionEditorSheet%2A>       Quando você herda da classe ExpressionEditorSheet, você deve substituir os seguintes membros: - o <xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>método para retornar um editor personalizado de implementação de folha.</xref:System.Web.UI.Design.ExpressionEditor.GetExpressionEditorSheet%2A>      -A <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>construtor para implementar as ações de inicialização personalizada para sua implementação de folha do editor de expressão.</xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>"
  syntax:
    content: public abstract class ExpressionEditorSheet
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.Web.UI.Design.ExpressionEditorSheet
  langs:
  - csharp
  name: ExpressionEditorSheet(IServiceProvider)
  nameWithType: ExpressionEditorSheet.ExpressionEditorSheet(IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditorSheet.ExpressionEditorSheet(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.Design.ExpressionEditorSheet&quot;> </xref> classe."
  remarks: "Porque o <xref:System.Web.UI.Design.ExpressionEditorSheet>classe é abstrata, não é possível criar uma instância de um <xref:System.Web.UI.Design.ExpressionEditorSheet>diretamente usando o construtor ExpressionEditorSheet.</xref:System.Web.UI.Design.ExpressionEditorSheet> </xref:System.Web.UI.Design.ExpressionEditorSheet>"
  syntax:
    content: protected ExpressionEditorSheet (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Uma implementação de provedor de serviço fornecida pelo host do designer, usado para obter os serviços de tempo de design adicionais."
  overload: System.Web.UI.Design.ExpressionEditorSheet.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditorSheet.GetExpression
  id: GetExpression
  parent: System.Web.UI.Design.ExpressionEditorSheet
  langs:
  - csharp
  name: GetExpression()
  nameWithType: ExpressionEditorSheet.GetExpression()
  fullName: System.Web.UI.Design.ExpressionEditorSheet.GetExpression()
  type: Method
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Quando substituído em uma classe derivada, retorna a cadeia de caracteres de expressão que é formada pelos valores de propriedade de folha de editor de expressão."
  remarks: "Uma folha de editor de expressão personalizada contém configurações de tempo de design para várias propriedades de expressão, que são combinadas para formar uma cadeia de caracteres de expressão. Valores de propriedade de controle podem ser definidos usando cadeias de caracteres de expressão; as cadeias de caracteres de expressão são avaliadas em tempo de execução por um construtor de expressões.       O método GetExpression retorna uma cadeia de caracteres de expressão que é criada das propriedades de expressão atual. O designer visual permite que você defina a expressão de propriedades de folha e, em seguida, chama o método GetExpression para obter a cadeia de caracteres de expressão e definir o valor da propriedade de controle."
  syntax:
    content: public abstract string GetExpression ();
    parameters: []
    return:
      type: System.String
      description: "A cadeia de caracteres de expressão personalizado para os valores de propriedade atuais."
  overload: System.Web.UI.Design.ExpressionEditorSheet.GetExpression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditorSheet.IsValid
  id: IsValid
  parent: System.Web.UI.Design.ExpressionEditorSheet
  langs:
  - csharp
  name: IsValid
  nameWithType: ExpressionEditorSheet.IsValid
  fullName: System.Web.UI.Design.ExpressionEditorSheet.IsValid
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Obtém um valor que indica se a cadeia de caracteres de expressão é válida."
  remarks: "Essa implementação base sempre retorna `true`."
  syntax:
    content: public virtual bool IsValid { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>, se a cadeia de caracteres de expressão é válida. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.Design.ExpressionEditorSheet.IsValid*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
  id: ServiceProvider
  parent: System.Web.UI.Design.ExpressionEditorSheet
  langs:
  - csharp
  name: ServiceProvider
  nameWithType: ExpressionEditorSheet.ServiceProvider
  fullName: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
  type: Property
  assemblies:
  - System.Design
  namespace: System.Web.UI.Design
  summary: "Obtém a implementação de provedor de serviço que é usada pela folha do editor de expressão."
  remarks: "Use o <xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>construtor para definir a implementação de provedor de serviços para obter uma planilha do editor de expressão personalizada.</xref:System.Web.UI.Design.ExpressionEditorSheet.%23ctor%2A>       A propriedade de provedor de serviços pode ser usada para acessar os serviços que são fornecidos pelo host do designer. Por exemplo, chamar o <xref:System.IServiceProvider.GetService%2A>método com o <xref:System.Web.UI.Design.IWebApplication>interface para acessar itens do projeto, documentos ou detalhes de arquivo de configuração que são fornecidos por meio do designer visual.</xref:System.Web.UI.Design.IWebApplication> </xref:System.IServiceProvider.GetService%2A>"
  syntax:
    content: public IServiceProvider ServiceProvider { get; }
    return:
      type: System.IServiceProvider
      description: "Um <xref:System.IServiceProvider>, normalmente é fornecido pelo host de design, que pode ser usado para obter os serviços de tempo de design adicionais.</xref:System.IServiceProvider>"
  overload: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.Design.ExpressionEditorSheet.#ctor(System.IServiceProvider)
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: ExpressionEditorSheet(IServiceProvider)
  nameWithType: ExpressionEditorSheet.ExpressionEditorSheet(IServiceProvider)
  fullName: System.Web.UI.Design.ExpressionEditorSheet.ExpressionEditorSheet(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Web.UI.Design.ExpressionEditorSheet.GetExpression
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: GetExpression()
  nameWithType: ExpressionEditorSheet.GetExpression()
  fullName: System.Web.UI.Design.ExpressionEditorSheet.GetExpression()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.Design.ExpressionEditorSheet.IsValid
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: IsValid
  nameWithType: ExpressionEditorSheet.IsValid
  fullName: System.Web.UI.Design.ExpressionEditorSheet.IsValid
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: ServiceProvider
  nameWithType: ExpressionEditorSheet.ServiceProvider
  fullName: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider
- uid: System.Web.UI.Design.ExpressionEditorSheet.#ctor*
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: ExpressionEditorSheet
  nameWithType: ExpressionEditorSheet.ExpressionEditorSheet
- uid: System.Web.UI.Design.ExpressionEditorSheet.GetExpression*
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: GetExpression
  nameWithType: ExpressionEditorSheet.GetExpression
- uid: System.Web.UI.Design.ExpressionEditorSheet.IsValid*
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: IsValid
  nameWithType: ExpressionEditorSheet.IsValid
- uid: System.Web.UI.Design.ExpressionEditorSheet.ServiceProvider*
  parent: System.Web.UI.Design.ExpressionEditorSheet
  isExternal: false
  name: ServiceProvider
  nameWithType: ExpressionEditorSheet.ServiceProvider
