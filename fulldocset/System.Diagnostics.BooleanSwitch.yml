### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.BooleanSwitch
  id: BooleanSwitch
  children:
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  - System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.BooleanSwitch.Enabled
  - System.Diagnostics.BooleanSwitch.OnValueChanged
  langs:
  - csharp
  name: BooleanSwitch
  nameWithType: BooleanSwitch
  fullName: System.Diagnostics.BooleanSwitch
  type: Class
  summary: "Fornece um simples interruptor que controla a depuração e rastreamento de saída."
  remarks: "Você pode usar uma opção de rastreamento booleano para habilitar ou desabilitar as mensagens com base em sua importância. Use o <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>propriedade para obter o valor atual do comutador.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       Você pode habilitar ou desabilitar um BooleanSwitch por meio do arquivo de configuração do aplicativo e, em seguida, use o valor de BooleanSwitch configurado em seu aplicativo. Como alternativa, você pode criar um BooleanSwitch em seu código e definir o <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>propriedade diretamente para instrumentar uma seção de código.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       Para configurar um BooleanSwitch, edite o arquivo de configuração que corresponde ao nome do seu aplicativo. Nesse arquivo, você pode adicionar ou remover um comutador, defina o valor de um switch ou desmarque todas as opções definidas anteriormente pelo aplicativo. O arquivo de configuração deve ser formatado como o exemplo a seguir.      ```   <configuration>     <system.diagnostics>       <switches>         <add name=&quot;mySwitch&quot; value=&quot;1&quot;/>       </switches>     </system.diagnostics>   </configuration>   ```Esta seção de configuração de exemplo define um BooleanSwitch com o <xref:System.Diagnostics.Switch.DisplayName%2A>propriedade definida como `mySwitch` e <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>valor definido `true`.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> Dentro de seu aplicativo, você pode usar o valor da opção configurado ao criar um BooleanSwitch com o mesmo nome, conforme mostrado no exemplo de código a seguir.       [!code-cpp[Clássico BooleanSwitch.BooleanSwitch exemplo n º&2;](~/add/codesnippet/cpp/t-system.diagnostics.boo_1.cpp)][!code-vb[clássico BooleanSwitch.BooleanSwitch exemplo n º&2;](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_1.vb)][!code-cs[clássico BooleanSwitch.BooleanSwitch exemplo n º&2;](~/add/codesnippet/csharp/t-system.diagnostics.boo_1.cs) ] por padrão, o <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>propriedade é definida usando o valor especificado no arquivo de configuração.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>     Configurar a opção com um valor de 0 para definir o <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>propriedade `false`; configurar a opção com um valor diferente de zero para definir o <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>propriedade `true`.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A> </xref:System.Diagnostics.BooleanSwitch.Enabled%2A> Se o construtor BooleanSwitch não é possível localizar as configurações de comutador inicial no arquivo de configuração, o <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>propriedade da nova opção está definida como `false` por padrão.</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       Você deve habilitar o rastreamento ou a depuração para usar uma opção. A sintaxe a seguir é específico do compilador. Se você usar compiladores que não seja o c# ou Visual Basic, consulte a documentação para o compilador.      -Para habilitar a depuração em c#, adicione o `/d:DEBUG` sinalizador para a linha de comando do compilador quando você compila o código, ou você pode adicionar `#define DEBUG` à parte superior do seu arquivo. No Visual Basic, adicione o `/d:DEBUG=True` sinalizador para a linha de comando do compilador.      -Para habilitar o rastreamento em c#, adicione o `/d:TRACE` sinalizador para a linha de comando do compilador quando você compila o código ou adiciona `#define TRACE` à parte superior do seu arquivo. No Visual Basic, adicione o `/d:TRACE=True` sinalizador para a linha de comando do compilador.      > [!NOTE] > Esses depurar e opções de compilador de rastreamento não são necessárias ao usar a classe BooleanSwitch isoladamente. São necessárias apenas em conjunto com <xref:System.Diagnostics.Trace>ou <xref:System.Diagnostics.Debug>métodos que são compilados condicionalmente.</xref:System.Diagnostics.Debug> </xref:System.Diagnostics.Trace>       Para obter mais informações sobre como instrumentar seu aplicativo, consulte <xref:System.Diagnostics.Debug>e <xref:System.Diagnostics.Trace>.</xref:System.Diagnostics.Trace> </xref:System.Diagnostics.Debug> Para obter mais informações sobre como configurar e usar as opções de rastreamento, consulte [opções de rastreamento](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Para melhorar o desempenho, você pode fazer membros BooleanSwitch `static` em sua classe."
  example:
  - "The following example creates a BooleanSwitch and uses the switch to determine whether to print an error message. You create the switch at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \n  \n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/t-system.diagnostics.boo_2.vb)]\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/t-system.diagnostics.boo_2.cpp)]\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/t-system.diagnostics.boo_2.cs)]"
  syntax:
    content: >-
      [System.Diagnostics.SwitchLevel(typeof(System.Boolean))]

      public class BooleanSwitch : System.Diagnostics.Switch
  inheritance:
  - System.Object
  - System.Diagnostics.Switch
  implements: []
  inheritedMembers:
  - System.Diagnostics.Switch.Attributes
  - System.Diagnostics.Switch.Description
  - System.Diagnostics.Switch.DisplayName
  - System.Diagnostics.Switch.GetSupportedAttributes
  - System.Diagnostics.Switch.OnSwitchSettingChanged
  - System.Diagnostics.Switch.SwitchSetting
  - System.Diagnostics.Switch.Value
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: BooleanSwitch(String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.BooleanSwitch&quot;> </xref> classe com o nome de exibição especificado e a descrição."
  remarks: "Quando você cria um <xref:System.Diagnostics.BooleanSwitch>, o `displayName` parâmetro é usado para localizar as configurações de comutador inicial.</xref:System.Diagnostics.BooleanSwitch> Se o construtor não é possível localizar configurações iniciais, o <xref:System.Diagnostics.BooleanSwitch.Enabled%2A>está definida como `false` (desabilitado).</xref:System.Diagnostics.BooleanSwitch.Enabled%2A>       Para definir o nível de seu <xref:System.Diagnostics.BooleanSwitch>, edite o arquivo de configuração correspondente ao nome do seu aplicativo.</xref:System.Diagnostics.BooleanSwitch> Nesse arquivo, você pode adicionar um comutador e defina seu valor, remova um comutador ou limpar todos os comutadores anteriormente definidos pelo aplicativo. O arquivo de configuração deve ser formatado com o seguinte exemplo: ```   <configuration>       <system.diagnostics>          <switches>             <add name=&quot;mySwitch&quot; value=&quot;10&quot; />             <add name=&quot;myNewSwitch&quot; value=&quot;20&quot; />             <remove name=&quot;mySwitch&quot; />             <clear/>          </switches>       </system.diagnostics>    </configuration>   ```       >  [!NOTE] > as opções que você criou devem ser `static`."
  example:
  - "The following example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and where the error occurred.  \n  \n [!code-vb[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/visualbasic/m-system.diagnostics.boo_1.vb)]\n [!code-cpp[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/cpp/m-system.diagnostics.boo_1.cpp)]\n [!code-cs[Classic BooleanSwitch.BooleanSwitch Example#1](~/add/codesnippet/csharp/m-system.diagnostics.boo_1.cs)]"
  syntax:
    content: public BooleanSwitch (string displayName, string description);
    parameters:
    - id: displayName
      type: System.String
      description: "O nome a ser exibido em uma interface de usuário."
    - id: description
      type: System.String
      description: "A descrição do comutador."
  overload: System.Diagnostics.BooleanSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: BooleanSwitch(String,String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)
  type: Constructor
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.BooleanSwitch&quot;> </xref> classe com o nome de exibição especificado, a descrição e o valor da opção padrão."
  remarks: "O `displayName` parâmetro é usado para definir o valor da <xref:System.Diagnostics.Switch.DisplayName%2A>propriedade e o `description` parâmetro é usado para definir o valor da <xref:System.Diagnostics.Switch.Description%2A>propriedade.</xref:System.Diagnostics.Switch.Description%2A> </xref:System.Diagnostics.Switch.DisplayName%2A> O `defaultSwitchValue` parâmetro é salvo como um campo e usado para inicializar o <xref:System.Diagnostics.Switch.Value%2A>propriedade na primeira referência.</xref:System.Diagnostics.Switch.Value%2A> Para obter mais informações sobre o uso do construtor, consulte o <xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29>construtor.</xref:System.Diagnostics.BooleanSwitch.%23ctor%28System.String%2CSystem.String%29>"
  syntax:
    content: public BooleanSwitch (string displayName, string description, string defaultSwitchValue);
    parameters:
    - id: displayName
      type: System.String
      description: "O nome a ser exibido na interface do usuário."
    - id: description
      type: System.String
      description: "A descrição do comutador."
    - id: defaultSwitchValue
      type: System.String
      description: "O valor padrão do comutador."
  overload: System.Diagnostics.BooleanSwitch.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.Enabled
  id: Enabled
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
  type: Property
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Obtém ou define um valor que indica se a opção está habilitada ou desabilitada."
  remarks: "Por padrão, esse campo é definido como `false` (desabilitado). Para ativar a opção, atribua esse campo o valor de `true`. Para desabilitar a opção, atribua o valor para `false`.  O valor dessa propriedade é determinado pelo valor da propriedade de classe base <xref:System.Diagnostics.Switch.SwitchSetting%2A>.</xref:System.Diagnostics.Switch.SwitchSetting%2A>      > [!NOTE] > Esse método usa o <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName>Sinalizador para impedir que está sendo chamado a partir do código não confiável; apenas o chamador imediato é necessário ter <xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName>permissão.</xref:System.Security.Permissions.SecurityPermissionAttribute.UnmanagedCode%2A?displayProperty=fullName> </xref:System.Security.Permissions.SecurityAction?displayProperty=fullName> Se seu código pode ser chamado de código parcialmente confiável, não passe a entrada do usuário para <xref:System.Runtime.InteropServices.Marshal>classe métodos sem validação.</xref:System.Runtime.InteropServices.Marshal>"
  example:
  - "The following code example creates a <xref:System.Diagnostics.BooleanSwitch> and uses the switch to determine whether to print an error message. The switch is created at the class level. The `Main` method passes its location to `MyMethod`, which prints an error message and the location where the error occurred.  \n  \n [!code-cpp[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/cpp/p-system.diagnostics.boo_1.cpp)]\n [!code-cs[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/csharp/p-system.diagnostics.boo_1.cs)]\n [!code-vb[Classic BooleanSwitch.Enabled Example#1](~/add/codesnippet/visualbasic/p-system.diagnostics.boo_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a opção estiver habilitada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.BooleanSwitch.Enabled*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão correta."
  platform:
  - net462
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  id: OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  langs:
  - csharp
  name: OnValueChanged()
  nameWithType: BooleanSwitch.OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
  type: Method
  assemblies:
  - System
  namespace: System.Diagnostics
  summary: "Determina se o novo valor de <xref:System.Diagnostics.Switch.Value*>propriedade puder ser analisada como um valor booliano.</xref:System.Diagnostics.Switch.Value*>"
  remarks: "O método OnValueChanged determina se o novo valor é uma representação de cadeia de caracteres válida de um valor booliano (&quot;verdadeiro&quot; ou &quot;false&quot;). Se assim, o método define o <xref:System.Diagnostics.Switch.SwitchSetting%2A>propriedade como 0 ou 1.</xref:System.Diagnostics.Switch.SwitchSetting%2A>  Caso contrário, o método base é chamado, que converte o valor de cadeia de caracteres para um valor inteiro, que é usado para definir o <xref:System.Diagnostics.Switch.SwitchSetting%2A>propriedade.</xref:System.Diagnostics.Switch.SwitchSetting%2A>"
  syntax:
    content: protected override void OnValueChanged ();
    parameters: []
  overload: System.Diagnostics.BooleanSwitch.OnValueChanged*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.Switch
  isExternal: false
  name: System.Diagnostics.Switch
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String)
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch(String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.BooleanSwitch.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch(String,String,String)
  nameWithType: BooleanSwitch.BooleanSwitch(String,String,String)
  fullName: System.Diagnostics.BooleanSwitch.BooleanSwitch(String,String,String)
- uid: System.Diagnostics.BooleanSwitch.Enabled
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
  fullName: System.Diagnostics.BooleanSwitch.Enabled
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: OnValueChanged()
  nameWithType: BooleanSwitch.OnValueChanged()
  fullName: System.Diagnostics.BooleanSwitch.OnValueChanged()
- uid: System.Diagnostics.BooleanSwitch.#ctor*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: BooleanSwitch
  nameWithType: BooleanSwitch.BooleanSwitch
- uid: System.Diagnostics.BooleanSwitch.Enabled*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: Enabled
  nameWithType: BooleanSwitch.Enabled
- uid: System.Diagnostics.BooleanSwitch.OnValueChanged*
  parent: System.Diagnostics.BooleanSwitch
  isExternal: false
  name: OnValueChanged
  nameWithType: BooleanSwitch.OnValueChanged
