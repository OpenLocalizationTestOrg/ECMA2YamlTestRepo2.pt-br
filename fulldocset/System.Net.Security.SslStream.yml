### YamlMime:ManagedReference
items:
- uid: System.Net.Security.SslStream
  id: SslStream
  children:
  - System.Net.Security.SslStream.#ctor(System.IO.Stream)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  - System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  - System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  - System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Net.Security.SslStream.CanRead
  - System.Net.Security.SslStream.CanSeek
  - System.Net.Security.SslStream.CanTimeout
  - System.Net.Security.SslStream.CanWrite
  - System.Net.Security.SslStream.CheckCertRevocationStatus
  - System.Net.Security.SslStream.CipherAlgorithm
  - System.Net.Security.SslStream.CipherStrength
  - System.Net.Security.SslStream.Dispose(System.Boolean)
  - System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  - System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  - System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  - System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  - System.Net.Security.SslStream.Flush
  - System.Net.Security.SslStream.HashAlgorithm
  - System.Net.Security.SslStream.HashStrength
  - System.Net.Security.SslStream.IsAuthenticated
  - System.Net.Security.SslStream.IsEncrypted
  - System.Net.Security.SslStream.IsMutuallyAuthenticated
  - System.Net.Security.SslStream.IsServer
  - System.Net.Security.SslStream.IsSigned
  - System.Net.Security.SslStream.KeyExchangeAlgorithm
  - System.Net.Security.SslStream.KeyExchangeStrength
  - System.Net.Security.SslStream.Length
  - System.Net.Security.SslStream.LocalCertificate
  - System.Net.Security.SslStream.Position
  - System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.ReadTimeout
  - System.Net.Security.SslStream.RemoteCertificate
  - System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Net.Security.SslStream.SetLength(System.Int64)
  - System.Net.Security.SslStream.SslProtocol
  - System.Net.Security.SslStream.TransportContext
  - System.Net.Security.SslStream.Write(System.Byte[])
  - System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Net.Security.SslStream.WriteTimeout
  langs:
  - csharp
  name: SslStream
  nameWithType: SslStream
  fullName: System.Net.Security.SslStream
  type: Class
  summary: "Fornece um fluxo usado para comunicação de cliente-servidor que usa o protocolo de segurança Secure Socket Layer (SSL) para autenticar o servidor e, opcionalmente, o cliente."
  remarks: "Os protocolos SSL ajudam a fornecer confidencialidade e integridade Verificando mensagens transmitidas usando um SslStream. Uma conexão SSL, como a fornecida por SslStream, deve ser usado ao se comunicar informações confidenciais entre um cliente e um servidor. Usar um SslStream ajuda a impedir que qualquer pessoa ler e violação com informações enquanto ele está em trânsito na rede.       Uma instância de SslStream transmite dados usando um fluxo que você fornecer ao criar o SslStream. Ao fornecer esse fluxo subjacente, você tem a opção para especificar se fechar o SslStream também fecha o fluxo subjacente. Normalmente, a classe SslStream é usada com o <xref:System.Net.Sockets.TcpClient>e <xref:System.Net.Sockets.TcpListener>classes.</xref:System.Net.Sockets.TcpListener> </xref:System.Net.Sockets.TcpClient> O <xref:System.Net.Sockets.TcpClient.GetStream%2A>método fornece uma <xref:System.Net.Sockets.NetworkStream>adequado para uso com a classe SslStream.</xref:System.Net.Sockets.NetworkStream> </xref:System.Net.Sockets.TcpClient.GetStream%2A>       Depois de criar um SslStream, o servidor e, opcionalmente, o cliente devem ser autenticadas. O servidor deve fornecer um X509 certificado que estabelece uma prova de sua identidade e pode solicitar que o cliente também fazer isso. Autenticação deve ser executada antes de transmitir informações usando um SslStream. Os clientes iniciam a autenticação usando o síncrona <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>métodos, que bloqueiam até que a autenticação é concluída, ou assíncronos <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>métodos, que não bloqueiam aguardando a autenticação seja concluída.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Servidores de iniciam a autenticação usando o síncrona <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>ou assíncronas <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> Cliente e o servidor devem iniciar a autenticação.       A autenticação é manipulada pelo provedor de canal do provedor de suporte de segurança (SSPI). O cliente recebe uma oportunidade para controlar a validação do certificado do servidor, especificando um <xref:System.Net.Security.RemoteCertificateValidationCallback>delegar ao criar um SslStream.</xref:System.Net.Security.RemoteCertificateValidationCallback> O servidor também pode controlar a validação, fornecendo um <xref:System.Net.Security.RemoteCertificateValidationCallback>delegar.</xref:System.Net.Security.RemoteCertificateValidationCallback> O método referenciado pelo delegado inclui o certificado a parte remota e os erros encontrado ao validar o certificado SSPI. Observe que, se o servidor especifica um delegado, método do representante é invocado, independentemente se o servidor solicitou autenticação de cliente. Se o servidor não solicitou autenticação de cliente, o método de delegado do servidor recebe um certificado nulo e uma matriz vazia de erros de certificado.       Se o servidor exigir autenticação de cliente, o cliente deve especificar um ou mais certificados para autenticação. Se o cliente tiver mais de um certificado, o cliente pode fornecer um <xref:System.Net.Security.LocalCertificateSelectionCallback>delegado para selecionar o certificado correto para o servidor.</xref:System.Net.Security.LocalCertificateSelectionCallback> Certificados do cliente devem estar localizados no &quot;Meu&quot; repositório de certificados do usuário atual. Não há suporte para autenticação de cliente por meio de certificados para o <xref:System.Security.Authentication.SslProtocols>protocolo (SSL versão 2).</xref:System.Security.Authentication.SslProtocols>       Se a autenticação falhar, você receberá um <xref:System.Security.Authentication.AuthenticationException>, e o SslStream não é mais utilizável.</xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo.       Quando o processo de autenticação, também conhecido como o handshake SSL, tiver êxito, a identidade do servidor (e, opcionalmente, o cliente) é estabelecida e o SslStream pode ser usado pelo cliente e servidor para troca de mensagens. Antes de enviar ou receber informações, o cliente e o servidor devem verificar os serviços de segurança e níveis fornecidos pelo SslStream para determinar se o protocolo, algoritmos e pontos fortes selecionados atendem aos seus requisitos de integridade e confidencialidade. Se as configurações atuais não forem suficientes, o fluxo deve ser fechado. Você pode verificar os serviços de segurança fornecidos pelo SslStream usando o <xref:System.Net.Security.SslStream.IsEncrypted%2A>e <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades.</xref:System.Net.Security.SslStream.IsSigned%2A> </xref:System.Net.Security.SslStream.IsEncrypted%2A> A tabela a seguir mostra os elementos que reportam as configurações de criptografia usadas para autenticação, criptografia e assinatura de dados.      | Elemento | Membros |   |-------------|-------------|   | O protocolo de segurança usado para autenticar o servidor e, opcionalmente, o cliente. | A propriedade <xref:System.Net.Security.SslStream.SslProtocol%2A>e a enumeração associada <xref:System.Security.Authentication.SslProtocols>. |   | O algoritmo de troca de chaves. | A propriedade <xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A>e a enumeração associada <xref:System.Security.Authentication.ExchangeAlgorithmType>. |   | O algoritmo de integridade de mensagem. | A propriedade <xref:System.Net.Security.SslStream.HashAlgorithm%2A>e a enumeração associada <xref:System.Security.Authentication.HashAlgorithmType>. |   | O algoritmo de confidencialidade da mensagem. | A propriedade <xref:System.Net.Security.SslStream.CipherAlgorithm%2A>e a enumeração associada <xref:System.Security.Authentication.CipherAlgorithmType>. |   | Os pontos fortes dos algoritmos selecionados. | <xref:System.Net.Security.SslStream.KeyExchangeStrength%2A>, <xref:System.Net.Security.SslStream.HashStrength%2A>e as propriedades de <xref:System.Net.Security.SslStream.CipherStrength%2A>. |       Após uma autenticação bem-sucedida, você pode enviar dados usando o síncrona <xref:System.Net.Security.SslStream.Write%2A>ou assíncronas <xref:System.Net.Security.SslStream.BeginWrite%2A>métodos.</xref:System.Net.Security.SslStream.BeginWrite%2A> </xref:System.Net.Security.SslStream.Write%2A> </xref:System.Net.Security.SslStream.CipherStrength%2A> </xref:System.Net.Security.SslStream.HashStrength%2A> </xref:System.Net.Security.SslStream.KeyExchangeStrength%2A> </xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.SslStream.CipherAlgorithm%2A> </xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Net.Security.SslStream.HashAlgorithm%2A> </xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Net.Security.SslStream.KeyExchangeAlgorithm%2A> </xref:System.Security.Authentication.SslProtocols> </xref:System.Net.Security.SslStream.SslProtocol%2A> Você pode receber dados usando o síncrona <xref:System.Net.Security.SslStream.Read%2A>ou assíncronas <xref:System.Net.Security.SslStream.BeginRead%2A>métodos.</xref:System.Net.Security.SslStream.BeginRead%2A> </xref:System.Net.Security.SslStream.Read%2A>       Se você tiver especificado para o <xref:System.Net.Security.SslStream.%23ctor%2A>que o fluxo subjacente deve ser deixado aberto, você é responsável para fechar o fluxo quando são feitas usando-.</xref:System.Net.Security.SslStream.%23ctor%2A>      > [!NOTE] > Se o aplicativo que cria o objeto SslStream é executado com as credenciais de um usuário Normal, o aplicativo não será capaz de acessar certificados instalados no repositório de computador local, a menos que a permissão tiver sido fornecida explicitamente ao usuário para fazer isso.       SslStream supõe que um tempo limite juntamente com qualquer outro <xref:System.IO.IOException>quando um é gerado do fluxo interno será tratado como fatal pelo chamador.</xref:System.IO.IOException> Reutilizando uma instância de SslStream após um tempo limite retornará lixo. Um aplicativo deve <xref:System.IO.Stream.Close%2A>o SslStream e gere uma exceção nesses casos.</xref:System.IO.Stream.Close%2A>       O .NET Framework 4.6 inclui um novo recurso de segurança que bloqueia insegura criptografia e algoritmos para conexões de hash. Aplicativos de uso do TLS/SSL por meio de APIs como HttpClient HttpWebRequest, FTPClient, SmtpClient, SslStream, etc. e o direcionamento do .NET Framework 4.6 obtém o comportamento mais seguros por padrão.       Os desenvolvedores talvez queira desativar esse comportamento para manter a interoperabilidade com seus serviços SSL3 existentes ou TLS com serviços de RC4. [Este artigo](https://support.microsoft.com/kb/3069494) explica como modificar seu código para que o novo comportamento está desabilitado.       O .NET Framework 4.6.3 adiciona novas sobrecargas para os métodos de autenticação SslStreams que não especificam uma versão do TLS, mas em vez disso, use a versão TLS definida como o padrão do sistema em [SCHANNEL](https://msdn.microsoft.com/library/windows/desktop/aa380123.aspx). Use esses métodos em seu aplicativo como uma maneira de conseguir modificar posteriormente os padrões como TLS versão melhor prática alterações ao longo do tempo, sem a necessidade de recompilar e reimplantar o aplicativo."
  example:
  - "The following code example demonstrates creating an <xref:System.Net.Sockets.TcpListener> that uses the SslStream class to communicate with clients.  \n  \n [!code-cpp[NclSslServerSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_1.cpp)]\n [!code-cs[NclSslServerSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_1.cs)]  \n  \n The following code example demonstrates creating a <xref:System.Net.Sockets.TcpClient> that uses the SslStream class to communicate with a server.  \n  \n [!code-cpp[NclSslClientSync#0](~/add/codesnippet/cpp/t-system.net.security.ss_2.cpp)]\n [!code-cs[NclSslClientSync#0](~/add/codesnippet/csharp/t-system.net.security.ss_2.cs)]"
  syntax:
    content: 'public class SslStream : System.Net.Security.AuthenticatedStream'
  inheritance:
  - System.IO.Stream
  - System.Net.Security.AuthenticatedStream
  implements: []
  inheritedMembers:
  - System.Net.Security.AuthenticatedStream.InnerStream
  - System.Net.Security.AuthenticatedStream.LeaveInnerStreamOpen
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  id: '#ctor(System.IO.Stream)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe usando o <xref:System.IO.Stream>.</xref:System.IO.Stream> especificado"
  remarks: "Se um valor não for especificado no arquivo de configuração para encryptionpolicy, o <xref:System.Net.Security.EncryptionPolicy>padrão é <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>para a <xref:System.Net.Security.SslStream>instância que é construída.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       O uso da criptografia Null é necessário quando a política de criptografia é definida como <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Um <xref:System.IO.Stream>objeto usado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream>"
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>não é legível.       - ou - <code>innerStream</code> não é gravável."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>innerStream</code> é igual a <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  id: '#ctor(System.IO.Stream,System.Boolean)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe usando especificado <xref:System.IO.Stream>e transmitir o comportamento de fechamento.</xref:System.IO.Stream>"
  remarks: "Quando você especifica `true` para o `leaveStreamOpen` parâmetro, fechando o <xref:System.Net.Security.SslStream>não tem efeito sobre o `innerStream` fluxo; você deve fechar explicitamente `innerStream` quando você não precisa dela.</xref:System.Net.Security.SslStream>       Se um valor não for especificado no arquivo de configuração para encryptionpolicy, o <xref:System.Net.Security.EncryptionPolicy>padrão é <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>para a <xref:System.Net.Security.SslStream>instância que é construída.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       O uso da criptografia Null é necessário quando a política de criptografia é definida como <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  example:
  - "The following code example demonstrates calling this constructor.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Um <xref:System.IO.Stream>objeto usado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Um valor booliano que indica o comportamento de fechamento do <xref:System.IO.Stream>objeto usado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream> Esse parâmetro indica se o fluxo interno é deixado aberto."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>não é legível.       - ou - <code>innerStream</code> não é gravável."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>innerStream</code> é igual a <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe usando especificado <xref:System.IO.Stream>, comportamento de fechamento de fluxo e o delegado de validação de certificado.</xref:System.IO.Stream>"
  remarks: "Quando você especifica `true` para o `leaveStreamOpen` parâmetro, fechando o <xref:System.Net.Security.SslStream>não tem efeito sobre o `innerStream` fluxo; você deve fechar explicitamente `innerStream` quando você não precisa dela.</xref:System.Net.Security.SslStream>       O `userCertificateValidationCallback` do delegado `certificateErrors` argumento contém quaisquer códigos de erro do Windows retornados pelo canal de Interface de provedor de suporte de segurança (SSPI). O valor de retorno do método invocado pelo `userCertificateValidationCallback` delegado determina se a autenticação for bem-sucedida.       O protocolo de segurança e algoritmos de criptografia já estão selecionados quando o `userCertificateValidationCallback` método do representante é invocado. Você pode usar o método para determinar se os algoritmos de criptografia selecionados e pontos fortes são suficientes para o seu aplicativo. Se não, o método deve retornar `false` para impedir que o <xref:System.Net.Security.SslStream>seja criado.</xref:System.Net.Security.SslStream>       Se um valor não for especificado no arquivo de configuração para encryptionpolicy, o <xref:System.Net.Security.EncryptionPolicy>padrão é <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>para a <xref:System.Net.Security.SslStream>instância que é construída.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       O uso da criptografia Null é necessário quando a política de criptografia é definida como <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > O Framework armazena em cache as sessões SSL conforme eles são criados e tenta reutilizar uma sessão em cache para uma nova solicitação, se possível. Ao tentar reutilizar uma sessão SSL, a estrutura usa o primeiro elemento da <xref:System.Net.HttpWebRequest.ClientCertificates%2A>(se houver), ou tentar reutilizar um sessões anônimas se <xref:System.Net.HttpWebRequest.ClientCertificates%2A>está vazio.</xref:System.Net.HttpWebRequest.ClientCertificates%2A> </xref:System.Net.HttpWebRequest.ClientCertificates%2A>      > [!NOTE] > Não há suporte para certificados de cliente no protocolo SSL versão 2."
  example:
  - "The following code example creates an <xref:System.Net.Security.SslStream> and initiates the client portion of the authentication.  \n  \n [!code-cpp[NclSslClientSync#4](~/add/codesnippet/cpp/9eaa69b2-6619-41cf-8f97-_1.cpp)]\n [!code-cs[NclSslClientSync#4](~/add/codesnippet/csharp/9eaa69b2-6619-41cf-8f97-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Um <xref:System.IO.Stream>objeto usado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Um valor booliano que indica o comportamento de fechamento do <xref:System.IO.Stream>objeto usado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream> Esse parâmetro indica se o fluxo interno é deixado aberto."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Um <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegado responsável por validar o certificado fornecido pela parte remota."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>não é legível.       - ou - <code>innerStream</code> não é gravável."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>innerStream</code> é igual a <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe usando especificado <xref:System.IO.Stream>, fluxo de comportamento de fechamento, representante de validação de certificado e representante de seleção de certificado.</xref:System.IO.Stream>"
  remarks: "Quando você especifica `true` para o `leaveStreamOpen` parâmetro, fechando o <xref:System.Net.Security.SslStream>não tem efeito sobre o `innerStream` fluxo; você deve fechar explicitamente `innerStream` quando você não precisa dela.</xref:System.Net.Security.SslStream>       O `userCertificateValidationCallback` do delegado `certificateErrors` argumento contém quaisquer códigos de erro do Windows retornados pelo canal de Interface de provedor de suporte de segurança (SSPI). O valor de retorno do método invocado pelo `userCertificateValidationCallback` delegado determina se a autenticação for bem-sucedida.       O protocolo de segurança e algoritmos de criptografia já estão selecionados quando o `userCertificateValidationCallback` método do representante é invocado. Você pode usar o método para determinar se os algoritmos de criptografia selecionados e pontos fortes são suficientes para o seu aplicativo. Se não, o método deve retornar `false` para impedir que o <xref:System.Net.Security.SslStream>seja criado.</xref:System.Net.Security.SslStream>       O `userCertificateSelectionCallback` delegado é útil quando seu aplicativo tiver vários certificados e dinamicamente deve escolher um certificado. Os certificados no repositório de &quot;MY&quot; são passados para o método invocado pelo delegado.       Se um valor não for especificado no arquivo de configuração para encryptionpolicy, o <xref:System.Net.Security.EncryptionPolicy>padrão é <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>para a <xref:System.Net.Security.SslStream>instância que é construída.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName> </xref:System.Net.Security.EncryptionPolicy>       O uso da criptografia Null é necessário quando a política de criptografia é definida como <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>      > [!NOTE] > O Framework armazena em cache as sessões SSL conforme eles são criados e tenta reutilizar uma sessão em cache para uma nova solicitação, se possível. Ao tentar reutilizar uma sessão SSL, a estrutura usa o primeiro elemento da P:System.Net.HttpWebRequest.ClientCertificates (se houver) ou tenta reutilizar um sessões anônimas se P:System.Net.HttpWebRequest.ClientCertificates está vazia."
  example:
  - "The following code example demonstrates calling this constructor. This example is part of a larger example provided for the <xref:System.Net.Security.SslStream> class.  \n  \n [!code-cpp[NclSslClientAsync#6](~/add/codesnippet/cpp/dc8fc9af-8c2a-4c30-be77-_1.cpp)]\n [!code-cs[NclSslClientAsync#6](~/add/codesnippet/csharp/dc8fc9af-8c2a-4c30-be77-_1.cs)]"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Um <xref:System.IO.Stream>objeto usado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Um valor booliano que indica o comportamento de fechamento do <xref:System.IO.Stream>objeto usado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream> Esse parâmetro indica se o fluxo interno é deixado aberto."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Um <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegado responsável por validar o certificado fornecido pela parte remota."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "Um <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> delegado responsável para selecionar o certificado usado para autenticação."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>não é legível.       - ou - <code>innerStream</code> não é gravável."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>innerStream</code> é igual a <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  id: '#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)'
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  type: Constructor
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> classe usando especificado<xref:System.IO.Stream></xref:System.IO.Stream>"
  remarks: "O uso da criptografia Null é necessária quando o `encryptionPolicy` parâmetro está definido como <xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>.</xref:System.Net.Security.EncryptionPolicy?displayProperty=fullName>"
  syntax:
    content: public SslStream (System.IO.Stream innerStream, bool leaveInnerStreamOpen, System.Net.Security.RemoteCertificateValidationCallback userCertificateValidationCallback, System.Net.Security.LocalCertificateSelectionCallback userCertificateSelectionCallback, System.Net.Security.EncryptionPolicy encryptionPolicy);
    parameters:
    - id: innerStream
      type: System.IO.Stream
      description: "Um <xref:System.IO.Stream>objeto usado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream>"
    - id: leaveInnerStreamOpen
      type: System.Boolean
      description: "Um valor booliano que indica o comportamento de fechamento do <xref:System.IO.Stream>objeto usado pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> para enviar e receber dados.</xref:System.IO.Stream> Esse parâmetro indica se o fluxo interno é deixado aberto."
    - id: userCertificateValidationCallback
      type: System.Net.Security.RemoteCertificateValidationCallback
      description: "Um <xref href=&quot;System.Net.Security.RemoteCertificateValidationCallback&quot;> </xref> delegado responsável por validar o certificado fornecido pela parte remota."
    - id: userCertificateSelectionCallback
      type: System.Net.Security.LocalCertificateSelectionCallback
      description: "Um <xref href=&quot;System.Net.Security.LocalCertificateSelectionCallback&quot;> </xref> delegado responsável para selecionar o certificado usado para autenticação."
    - id: encryptionPolicy
      type: System.Net.Security.EncryptionPolicy
      description: "The <xref href=&quot;System.Net.Security.EncryptionPolicy&quot;></xref> to use."
  overload: System.Net.Security.SslStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>innerStream</code>não é legível.       - ou - <code>innerStream</code> não é gravável.       - ou - <code>encryptionPolicy</code> não é válido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>innerStream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - <code>innerStream</code> é igual a <xref:System.IO.Stream.Null>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  id: AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por clientes para autenticar o servidor e, opcionalmente, o cliente em uma conexão de cliente-servidor."
  remarks: "Esse método é autenticada usando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Nenhum certificado do cliente é usado na autenticação. A lista de revogação de certificado não é verificada durante a autenticação. O valor especificado para `targetHost` deve corresponder ao nome no certificado do servidor.       Quando a autenticação tiver êxito, você deve verificar as <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades para determinar quais serviços de segurança são usados pelo <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> e</xref:System.Net.Security.SslStream.IsEncrypted%2A> Verifique o <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>propriedade para determinar se ocorreu a autenticação mútua.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se a autenticação falhar, você receberá um <xref:System.Security.Authentication.AuthenticationException>e isso <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "O nome do servidor que compartilha esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falha e à esquerda deste objeto em um estado inutilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já ocorreu.       - ou - autenticação de servidor usando esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentado anteriormente.       - ou - autenticação já está em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por clientes para autenticar o servidor e, opcionalmente, o cliente em uma conexão de cliente-servidor. O processo de autenticação usa o protocolo SSL e coleção de certificado especificado."
  remarks: "Quando a autenticação tiver êxito, você deve verificar as <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades para determinar quais serviços de segurança são usados pelo <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> e</xref:System.Net.Security.SslStream.IsEncrypted%2A> Verifique o <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>propriedade para determinar se ocorreu a autenticação mútua.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se a autenticação falhar, você receberá um <xref:System.Security.Authentication.AuthenticationException>e isso <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo.      > [!NOTE] > Não há suporte para certificados de cliente no protocolo SSL versão 2."
  syntax:
    content: public virtual void AuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "O nome do servidor que irá compartilhar isso <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "O <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> que contém os certificados de cliente."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo usado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Um <xref:System.Boolean>valor que especifica se a lista de revogação de certificado é verificada durante a autenticação.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsClient*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  id: AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por clientes para autenticar o servidor e, opcionalmente, o cliente em uma conexão de cliente-servidor como uma operação assíncrona."
  remarks: "Esse método é autenticada usando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Nenhum certificado do cliente é usado na autenticação. A lista de revogação de certificado não é verificada durante a autenticação. O valor especificado para `targetHost` deve corresponder ao nome no certificado do servidor.       Quando a autenticação tiver êxito, você deve verificar as <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades para determinar quais serviços de segurança são usados pelo <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> e</xref:System.Net.Security.SslStream.IsEncrypted%2A> Verifique o <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>propriedade para determinar se ocorreu a autenticação mútua.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se a autenticação falhar, você receberá um <xref:System.Security.Authentication.AuthenticationException>e isso <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost);
    parameters:
    - id: targetHost
      type: System.String
      description: "O nome do servidor que compartilha esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    return:
      type: System.Threading.Tasks.Task
      description: "Retorna <xref:System.Threading.Tasks.Task>o objeto de tarefa que representa a operação assíncrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falha e à esquerda deste objeto em um estado inutilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já ocorreu.       - ou - autenticação de servidor usando esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentado anteriormente.       - ou - autenticação já está em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por clientes para autenticar o servidor e, opcionalmente, o cliente em uma conexão de cliente-servidor como uma operação assíncrona. O processo de autenticação usa o protocolo SSL e coleção de certificado especificado."
  remarks: "Quando a autenticação tiver êxito, você deve verificar as <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades para determinar quais serviços de segurança são usados pelo <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> e</xref:System.Net.Security.SslStream.IsEncrypted%2A> Verifique o <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>propriedade para determinar se ocorreu a autenticação mútua.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se a autenticação falhar, você receberá um <xref:System.Security.Authentication.AuthenticationException>e isso <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo.      > [!NOTE] > Não há suporte para certificados de cliente no protocolo SSL versão 2."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsClientAsync (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: targetHost
      type: System.String
      description: "O nome do servidor que irá compartilhar isso <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "O <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> que contém os certificados de cliente."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo usado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Um <xref:System.Boolean>valor que especifica se a lista de revogação de certificado é verificada durante a autenticação.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Retorna <xref:System.Threading.Tasks.Task>o objeto de tarefa que representa a operação assíncrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por servidores para autenticar o servidor e, opcionalmente, o cliente em uma conexão de cliente-servidor usando o certificado especificado."
  remarks: "Esse método é autenticada usando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> A lista de revogação de certificado não é verificada durante a autenticação. O cliente não é necessário fornecer um certificado para autenticação.       Esse método bloqueia até que a operação seja concluída. Para evitar o bloqueio até que a operação for concluída, use um do <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>sobrecargas de método.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Se a autenticação falhar, você receberá um <xref:System.Security.Authentication.AuthenticationException>e isso <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O certificado usado para autenticar o servidor."
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falha e à esquerda deste objeto em um estado inutilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já ocorreu.       - ou - autenticação de cliente usando esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentado anteriormente.       - ou - autenticação já está em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O <xref:System.Net.Security.SslStream.AuthenticateAsServer*>método não é suportado no Windows 95, Windows 98 ou Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por servidores para autenticar o servidor e, opcionalmente, o cliente em uma conexão de cliente-servidor usando os certificados especificados, requisitos e protocolo de segurança."
  remarks: "Esse método bloqueia até que a operação seja concluída. Para evitar o bloqueio até que a operação for concluída, use um do <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>sobrecargas de método.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>       Se a autenticação falhar, você receberá um <xref:System.Security.Authentication.AuthenticationException>e isso <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo."
  syntax:
    content: public virtual void AuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O X509Certificate usado para autenticar o servidor."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "Um <xref:System.Boolean>valor que especifica se o cliente é solicitado um certificado para autenticação.</xref:System.Boolean> Observe que isso é apenas uma solicitação-- se nenhum certificado for fornecido, o servidor ainda aceita a solicitação de conexão."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo usado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Um <xref:System.Boolean>valor que especifica se a lista de revogação de certificado é verificada durante a autenticação.</xref:System.Boolean>"
  overload: System.Net.Security.SslStream.AuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>não é válido <xref:System.Security.Authentication.SslProtocols> valor."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falha e à esquerda deste objeto em um estado inutilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já ocorreu.       - ou - autenticação de cliente usando esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentado anteriormente.       - ou - autenticação já está em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O <xref:System.Net.Security.SslStream.AuthenticateAsServer*>método não é suportado no Windows 95, Windows 98 ou Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por servidores para autenticar o servidor e, opcionalmente, o cliente em uma conexão de cliente-servidor usando o certificado especificado como uma operação assíncrona."
  remarks: "Esse método é autenticada usando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> A lista de revogação de certificado não é verificada durante a autenticação. O cliente não é necessário fornecer um certificado para autenticação.       Se a autenticação falhar, você receberá um <xref:System.Security.Authentication.AuthenticationException>e isso <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O certificado usado para autenticar o servidor."
    return:
      type: System.Threading.Tasks.Task
      description: "Retorna <xref:System.Threading.Tasks.Task>o objeto de tarefa que representa a operação assíncrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falha e à esquerda deste objeto em um estado inutilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já ocorreu.       - ou - autenticação de cliente usando esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentado anteriormente.       - ou - autenticação já está em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O <xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>método não é suportado no Windows 95, Windows 98 ou Windows Millennium.</xref:System.Net.Security.SslStream.AuthenticateAsServerAsync*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  id: AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por servidores para autenticar o servidor e, opcionalmente, o cliente em uma conexão de cliente-servidor usando os certificados especificados, requisitos e protocolo de segurança como uma operação assíncrona."
  remarks: "Se a autenticação falhar, você receberá um <xref:System.Security.Authentication.AuthenticationException>e isso <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo."
  syntax:
    content: public virtual System.Threading.Tasks.Task AuthenticateAsServerAsync (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O X509Certificate usado para autenticar o servidor."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "Um <xref:System.Boolean>valor que especifica se o cliente é solicitado um certificado para autenticação.</xref:System.Boolean> Observe que isso é apenas uma solicitação-- se nenhum certificado for fornecido, o servidor ainda aceita a solicitação de conexão."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo usado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Um <xref:System.Boolean>valor que especifica se a lista de revogação de certificado é verificada durante a autenticação.</xref:System.Boolean>"
    return:
      type: System.Threading.Tasks.Task
      description: "Retorna <xref:System.Threading.Tasks.Task>o objeto de tarefa que representa a operação assíncrona.</xref:System.Threading.Tasks.Task>"
  overload: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por clientes para iniciar uma operação assíncrona para autenticar o servidor e, opcionalmente, o cliente."
  remarks: "Esse método é autenticada usando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> Nenhum certificado do cliente é usado na autenticação. A lista de revogação de certificado não é verificada durante a autenticação.       O valor especificado para `targetHost` deve corresponder ao nome no certificado do servidor.       A operação assíncrona de autenticação deve ser concluída por chamar o <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>método.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Normalmente, o método é invocado pelo `asyncCallback` delegate.       Esse método não bloqueia enquanto a operação é concluída. Para bloquear até que a operação for concluída, use um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>sobrecargas de método.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/add/includes/ajax-current-ext-md.md) se você receber um <xref:System.Security.Authentication.AuthenticationException>, esse <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "O nome do servidor que compartilha esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>representante que referencia o método a ser invocado quando a autenticação é concluída.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Um objeto definido pelo usuário que contém informações sobre a operação. Este objeto é passado para o `asyncCallback` delegar quando a operação for concluída."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que indica o status da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falha e à esquerda deste objeto em um estado inutilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já ocorreu.       - ou - autenticação de servidor usando esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentado anteriormente.       - ou - autenticação já está em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por clientes para iniciar uma operação assíncrona para autenticar o servidor e, opcionalmente, o cliente usando o protocolo de segurança e certificados especificados."
  remarks: "O valor especificado para `targetHost` deve corresponder ao nome no certificado do servidor.       A operação assíncrona de autenticação deve ser concluída por chamar o <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>método.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Normalmente, o método é invocado pelo `asyncCallback` delegate.       Esse método não bloqueia enquanto a operação é concluída. Para bloquear até que a operação for concluída, use um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>sobrecargas de método.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/add/includes/ajax-current-ext-md.md) se você receber um <xref:System.Security.Authentication.AuthenticationException>, esse <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo.      > [!NOTE] > Não há suporte para certificados de cliente no protocolo SSL versão 2."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsClient (string targetHost, System.Security.Cryptography.X509Certificates.X509CertificateCollection clientCertificates, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: targetHost
      type: System.String
      description: "O nome do servidor que compartilha esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
    - id: clientCertificates
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "O <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> que contém os certificados de cliente."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo usado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Um <xref:System.Boolean>valor que especifica se a lista de revogação de certificado é verificada durante a autenticação.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>representante que referencia o método a ser invocado quando a autenticação é concluída.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Um objeto definido pelo usuário que contém informações sobre a operação. Este objeto é passado para o `asyncCallback` delegar quando a operação for concluída."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que indica o status da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetHost</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>não é válido <xref:System.Security.Authentication.SslProtocols> valor."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falha e à esquerda deste objeto em um estado inutilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já ocorreu.       - ou - autenticação de servidor usando esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentado anteriormente.       - ou - autenticação já está em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por servidores para iniciar uma operação assíncrona para autenticar o cliente e, opcionalmente, o servidor em uma conexão de cliente-servidor."
  remarks: "Esse método é autenticada usando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> A lista de revogação de certificado não é verificada durante a autenticação. O cliente não é necessário fornecer um certificado para autenticação.       A operação assíncrona de autenticação deve ser concluída por chamar o <xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A>método.</xref:System.Net.Security.SslStream.EndAuthenticateAsClient%2A> Normalmente, o método é invocado pelo `asyncCallback` delegate.       Esse método não bloqueia enquanto a operação é concluída. Para bloquear até que a operação for concluída, use um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>sobrecargas de método.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/add/includes/ajax-current-ext-md.md) se você receber um <xref:System.Security.Authentication.AuthenticationException>, esse <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O X509Certificate usado para autenticar o servidor."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>representante que referencia o método a ser invocado quando a autenticação é concluída.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Um objeto definido pelo usuário que contém informações sobre a operação. Este objeto é passado para o `asyncCallback` delegar quando a operação for concluída."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que indica o status da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falha e à esquerda deste objeto em um estado inutilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já ocorreu.       - ou - autenticação de cliente usando esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentado anteriormente.       - ou - autenticação já está em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>método não é suportado no Windows 95, Windows 98 ou Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  id: BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Chamado por servidores para iniciar uma operação assíncrona para autenticar o servidor e, opcionalmente, o cliente usando os certificados especificados, requisitos e protocolo de segurança."
  remarks: "A operação assíncrona de autenticação deve ser concluída por chamar o <xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A>método.</xref:System.Net.Security.SslStream.EndAuthenticateAsServer%2A> Normalmente, o método é invocado pelo `asyncCallback` delegate.       Esse método não bloqueia enquanto a operação é concluída. Para bloquear até que a operação for concluída, use um do <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>sobrecargas de método.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>       Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/add/includes/ajax-current-ext-md.md) se você receber um <xref:System.Security.Authentication.AuthenticationException>, esse <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo."
  syntax:
    content: public virtual IAsyncResult BeginAuthenticateAsServer (System.Security.Cryptography.X509Certificates.X509Certificate serverCertificate, bool clientCertificateRequired, System.Security.Authentication.SslProtocols enabledSslProtocols, bool checkCertificateRevocation, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: serverCertificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "O X509Certificate usado para autenticar o servidor."
    - id: clientCertificateRequired
      type: System.Boolean
      description: "Um <xref:System.Boolean>valor que especifica se o cliente é solicitado um certificado para autenticação.</xref:System.Boolean> Observe que isso é apenas uma solicitação-- se nenhum certificado for fornecido, o servidor ainda aceita a solicitação de conexão."
    - id: enabledSslProtocols
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo usado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
    - id: checkCertificateRevocation
      type: System.Boolean
      description: "Um <xref:System.Boolean>valor que especifica se a lista de revogação de certificado é verificada durante a autenticação.</xref:System.Boolean>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>representante que referencia o método a ser invocado quando a autenticação é concluída.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Um objeto definido pelo usuário que contém informações sobre a operação. Este objeto é passado para o `asyncCallback` delegar quando a operação for concluída."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que indica o status da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverCertificate</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>enabledSslProtocols</code>não é válido <xref:System.Security.Authentication.SslProtocols> valor."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falha e à esquerda deste objeto em um estado inutilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Autenticação já ocorreu.       - ou - autenticação de servidor usando esse <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi tentado anteriormente.       - ou - autenticação já está em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "O <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>método não é suportado no Windows 95, Windows 98 ou Windows Millennium.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicia uma operação de leitura assíncrona que lê dados do fluxo e o armazena na matriz especificada."
  remarks: "Se a criptografia e assinatura ou estiverem habilitada, a operação de leitura lê os dados do fluxo subjacente, verifica a integridade dos dados e descriptografa-a. A operação de leitura assíncrona deve ser concluída por chamar o <xref:System.Net.Security.SslStream.EndRead%2A>método.</xref:System.Net.Security.SslStream.EndRead%2A> Normalmente, o método é invocado pelo `asyncCallback` delegate.       Esse método não bloqueia enquanto a operação é concluída. Para bloquear até a conclusão da operação, use o <xref:System.Net.Security.SslStream.Read%2A>método.</xref:System.Net.Security.SslStream.Read%2A>       Para obter informações detalhadas sobre como usar o modelo de programação assíncrono, consulte [chamando métodos síncronos assincronamente](~/add/includes/ajax-current-ext-md.md) o <xref:System.Net.Security.SslStream>classe não oferece suporte simultâneo de várias operações de leitura.</xref:System.Net.Security.SslStream>       Não é possível chamar esse método, até que você foi autenticado com êxito. Para autenticar chamadas do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates starting an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#8](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_1.cpp)]\n [!code-cs[NclSslClientAsync#8](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_1.cs)]  \n  \n [!code-cpp[NclSslClientAsync#4](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_2.cpp)]\n [!code-cs[NclSslClientAsync#4](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_2.cs)]  \n  \n The following method is called when the read completes.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/97989688-3a5b-49ee-9639-_3.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/97989688-3a5b-49ee-9639-_3.cs)]"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que recebe os bytes lidos do fluxo.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "O local com base em zero na `buffer` no qual começar a armazenar os dados de leitura desse fluxo."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes a serem lidos do fluxo."
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>representante que referencia o método a ser invocado quando a operação de leitura é concluída.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Um objeto definido pelo usuário que contém informações sobre a operação de leitura. Este objeto é passado para o `asyncCallback` delegar quando a operação for concluída."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que indica o status da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; o comprimento de <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Falha na operação de leitura.       - ou - criptografia está em uso, mas não foi possível descriptografar os dados."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Já existe uma operação de leitura em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A autenticação não ocorreu."
  platform:
  - net462
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Inicia uma operação de gravação assíncrona que grava <xref:System.Byte>s do buffer especificado para o fluxo.</xref:System.Byte>"
  remarks: ''
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cs[NclSslServerAsync#5](~/add/codesnippet/csharp/7192cc61-a256-4249-aafa-_1.cs)]\n [!code-cpp[NclSslServerAsync#5](~/add/codesnippet/cpp/7192cc61-a256-4249-aafa-_1.cpp)]"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback asyncCallback, object asyncState);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que fornece os bytes a serem gravados no fluxo.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "O local com base em zero na `buffer` no qual começar a ler bytes a serem gravados no fluxo."
    - id: count
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número de bytes a serem lidos do `buffer`.</xref:System.Int32>"
    - id: asyncCallback
      type: System.AsyncCallback
      description: "Um <xref:System.AsyncCallback>representante que referencia o método a ser invocado quando a operação de gravação é concluída.</xref:System.AsyncCallback>"
    - id: asyncState
      type: System.Object
      description: "Um objeto definido pelo usuário que contém informações sobre a operação de gravação. Este objeto é passado para o `asyncCallback` delegar quando a operação for concluída."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>objeto que indica o status da operação assíncrona.</xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.BeginWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; o comprimento de <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A operação de gravação falhou."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Já existe uma operação de gravação em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A autenticação não ocorreu."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanRead
  id: CanRead
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se o fluxo subjacente é legível.</xref:System.Boolean>"
  remarks: "Se tiver ocorrido uma autenticação bem-sucedida, essa propriedade retorna o valor retornado ao chamar <xref:System.IO.Stream.CanRead%2A>no fluxo subjacente.</xref:System.IO.Stream.CanRead%2A>       O fluxo subjacente é especificado quando você cria uma instância da <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_14_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_14_1.cs)]"
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a autenticação ocorreu e o fluxo subjacente é legível; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanSeek
  id: CanSeek
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se o fluxo subjacente é pesquisável.</xref:System.Boolean>"
  remarks: "Não tente definir a posição do <xref:System.Net.Security.SslStream>objeto ou o fluxo subjacente.</xref:System.Net.Security.SslStream>       O fluxo subjacente é especificado quando você cria uma instância da <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "Essa propriedade sempre retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanTimeout
  id: CanTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se o fluxo subjacente oferece suporte a tempos limite.</xref:System.Boolean>"
  remarks: "Essa propriedade retorna o valor retornado ao chamar <xref:System.IO.Stream.CanTimeout%2A>no fluxo subjacente.</xref:System.IO.Stream.CanTimeout%2A>       O fluxo subjacente é especificado quando você cria uma instância da <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_8_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_8_1.cs)]"
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o fluxo subjacente oferece suporte a tempos limite; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CanWrite
  id: CanWrite
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se o fluxo subjacente é gravável.</xref:System.Boolean>"
  remarks: "Se tiver ocorrido uma autenticação bem-sucedida, essa propriedade retorna o valor retornado ao chamar <xref:System.IO.Stream.CanWrite%2A>no fluxo subjacente.</xref:System.IO.Stream.CanWrite%2A>       O fluxo subjacente é especificado quando você cria uma instância da <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_17_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_17_1.cs)]"
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a autenticação ocorreu e o fluxo subjacente é gravável; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  id: CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se a lista de revogação de certificado é verificada durante o processo de validação de certificado.</xref:System.Boolean>"
  remarks: "A lista de revogação de certificado contém certificados foi revogados pelo emissor. Verificando a lista negativamente afeta o desempenho, mas melhora a segurança do aplicativo."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#5](~/add/codesnippet/cpp/p-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslServerSync#5](~/add/codesnippet/csharp/p-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public virtual bool CheckCertRevocationStatus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a lista de revogação de certificado é verificada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.CheckCertRevocationStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherAlgorithm
  id: CipherAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um valor que identifica o algoritmo de criptografia em massa usado por este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "Um valor de <xref:System.Security.Authentication.CipherAlgorithmType>é necessária para a propriedade CipherAlgorithm quando o <xref:System.Net.Security.EncryptionPolicy>valor de enumeração é usado para construir um <xref:System.Net.Security.SslStream>instância.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Security.Authentication.CipherAlgorithmType>       [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)]e [!INCLUDE[winxp](~/add/includes/winxp-md.md)] não dão suporte a <xref:System.Security.Authentication.CipherAlgorithmType>valor.</xref:System.Security.Authentication.CipherAlgorithmType> Assim, mesmo se o <xref:System.Security.Authentication.CipherAlgorithmType>valor é usado para construir a <xref:System.Net.Security.SslStream>instância, a <xref:System.Net.Security.EncryptionPolicy>propriedade será <xref:System.Security.Authentication.CipherAlgorithmType>.</xref:System.Security.Authentication.CipherAlgorithmType> </xref:System.Net.Security.EncryptionPolicy> </xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.CipherAlgorithmType> O <xref:System.Security.Authentication.CipherAlgorithmType>valor é retornado no Windows Vista e versões posteriores.</xref:System.Security.Authentication.CipherAlgorithmType>"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_10_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_10_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.CipherAlgorithmType CipherAlgorithm { get; }
    return:
      type: System.Security.Authentication.CipherAlgorithmType
      description: "Um <xref:System.Security.Authentication.CipherAlgorithmType>valor.</xref:System.Security.Authentication.CipherAlgorithmType>"
  overload: System.Net.Security.SslStream.CipherAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade CipherAlgorithm foi acessada antes de concluir o processo de autenticação ou o processo de autenticação falha."
  platform:
  - net462
- uid: System.Net.Security.SslStream.CipherStrength
  id: CipherStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um valor que identifica a força do algoritmo de criptografia usado por este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "O valor dessa propriedade é zero até que a autenticação ocorra.       Essa propriedade retorna um dos seguintes valores: - 0 - 40-56-128 80-168-192 - 256"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_6_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_6_1.cs)]"
  syntax:
    content: public virtual int CipherStrength { get; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica a força do algoritmo, em bits.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.CipherStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Libera os recursos não gerenciados usados pelo <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> e, opcionalmente, libera os recursos gerenciados."
  remarks: "Este método é chamado pelo público `Dispose()`método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose()`invoca o protegido `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Net.Security.SslStream>referências.</xref:System.Net.Security.SslStream> Este método chama o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para liberar apenas recursos não gerenciados."
  overload: System.Net.Security.SslStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  id: EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Termina uma operação de autenticação de servidor assíncrona pendente iniciada com uma chamada anterior para <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>"
  remarks: "Se a operação não foi concluída, esse método bloqueia até que ele faz. Quando a autenticação tiver êxito, você deve verificar as <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades para determinar quais serviços de segurança são usados pelo <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> e</xref:System.Net.Security.SslStream.IsEncrypted%2A> Verifique o <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>propriedade para determinar se ocorreu a autenticação mútua.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se a autenticação falhar, você receberá um <xref:System.Security.Authentication.AuthenticationException>e isso <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo.       Para executar essa operação de forma síncrona, use um do <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsClient (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Uma <xref:System.IAsyncResult>instância retornado por uma chamada para <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsClient*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>não foi criado por uma chamada para <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falha e à esquerda deste objeto em um estado inutilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não há nenhuma autenticação pendentes do servidor para concluir."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  id: EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Termina uma operação de autenticação de cliente assíncrono pendente iniciada com uma chamada anterior para <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>"
  remarks: "Se a operação não foi concluída, esse método bloqueia até que ele faz. Quando a autenticação tiver êxito, você deve verificar as <xref:System.Net.Security.SslStream.IsEncrypted%2A> <xref:System.Net.Security.SslStream.IsSigned%2A>Propriedades para determinar quais serviços de segurança são usados pelo <xref:System.Net.Security.SslStream>.</xref:System.Net.Security.SslStream> </xref:System.Net.Security.SslStream.IsSigned%2A> e</xref:System.Net.Security.SslStream.IsEncrypted%2A> Verifique o <xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>propriedade para determinar se ocorreu a autenticação mútua.</xref:System.Net.Security.SslStream.IsMutuallyAuthenticated%2A>       Se a autenticação falhar, você receberá um <xref:System.Security.Authentication.AuthenticationException>e isso <xref:System.Net.Security.SslStream>não é mais utilizável.</xref:System.Net.Security.SslStream> </xref:System.Security.Authentication.AuthenticationException> Você deve fechar este objeto e remover todas as referências a ele para que ele pode ser coletado pelo coletor de lixo.       Para executar essa operação de forma síncrona, use um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>método.</xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  syntax:
    content: public virtual void EndAuthenticateAsServer (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Uma <xref:System.IAsyncResult>instância retornado por uma chamada para <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndAuthenticateAsServer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>não foi criado por uma chamada para <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient*>."
  - type: System.Security.Authentication.AuthenticationException
    commentId: T:System.Security.Authentication.AuthenticationException
    description: "A autenticação falha e à esquerda deste objeto em um estado inutilizável."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Não há nenhuma autenticação de cliente pendente para concluir."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Termina uma operação de leitura assíncrona iniciada com uma chamada anterior para <xref:System.Net.Security.SslStream.BeginRead*>.</xref:System.Net.Security.SslStream.BeginRead*>"
  remarks: "Se a operação não foi concluída, esse método bloqueia até que ele faz.       Para executar esta operação síncrona, use o <xref:System.Net.Security.SslStream.Read%2A>método.</xref:System.Net.Security.SslStream.Read%2A>       Não é possível chamar esse método, até que você foi autenticado com êxito. Para autenticar chamadas do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous read operation.  \n  \n [!code-cpp[NclSslClientAsync#5](~/add/codesnippet/cpp/m-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslClientAsync#5](~/add/codesnippet/csharp/m-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>instância retornada por uma chamada para <xref:System.Net.Security.SslStream.BeginRead*></xref:System.Net.Security.SslStream.BeginRead*> </xref:System.IAsyncResult>"
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número de bytes lidos do fluxo subjacente.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.EndRead*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>não foi criado por uma chamada para <xref:System.Net.Security.SslStream.BeginRead*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A autenticação não ocorreu."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Falha na operação de leitura."
  platform:
  - net462
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Termina uma operação de gravação assíncrona iniciada com uma chamada anterior para <xref:System.Net.Security.SslStream.BeginWrite*>.</xref:System.Net.Security.SslStream.BeginWrite*>"
  remarks: "Se a operação não foi concluída, esse método bloqueia até que ele faz.       Um aplicativo não é possível chamar este método até que você foi autenticado com êxito. Para autenticar, chame um do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Para executar esta operação síncrona, use o <xref:System.Net.Security.SslStream.Write%2A>método.</xref:System.Net.Security.SslStream.Write%2A>"
  example:
  - "The following code example demonstrates ending an asynchronous write operation.  \n  \n [!code-cs[NclSslServerAsync#4](~/add/codesnippet/csharp/m-system.net.security.ss_1_1.cs)]\n [!code-cpp[NclSslServerAsync#4](~/add/codesnippet/cpp/m-system.net.security.ss_1_1.cpp)]"
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>instância retornada por uma chamada para <xref:System.Net.Security.SslStream.BeginWrite*></xref:System.Net.Security.SslStream.BeginWrite*> </xref:System.IAsyncResult>"
  overload: System.Net.Security.SslStream.EndWrite*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>asyncResult</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>asyncResult</code>não foi criado por uma chamada para <xref:System.Net.Security.SslStream.BeginWrite*>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A autenticação não ocorreu."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A operação de gravação falhou."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Flush
  id: Flush
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Faz com que todos os dados armazenados em buffer a ser gravado no dispositivo subjacente."
  remarks: "Este método chama <xref:System.IO.Stream.Flush%2A>no fluxo subjacente.</xref:System.IO.Stream.Flush%2A>"
  example:
  - "The following code example demonstrates calling this method.  \n  \n [!code-cpp[NclSslClientSync#5](~/add/codesnippet/cpp/m-system.net.security.ss_4_1.cpp)]\n [!code-cs[NclSslClientSync#5](~/add/codesnippet/csharp/m-system.net.security.ss_4_1.cs)]"
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Net.Security.SslStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashAlgorithm
  id: HashAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém o algoritmo usado para gerar códigos de autenticação de mensagem (MACs)."
  remarks: "Algoritmos de autenticação de mensagem geram mensagens de hash e assinaturas usadas para detectar violação e falsificação."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_9_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_9_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.HashAlgorithmType HashAlgorithm { get; }
    return:
      type: System.Security.Authentication.HashAlgorithmType
      description: "Um <xref:System.Security.Authentication.HashAlgorithmType>valor.</xref:System.Security.Authentication.HashAlgorithmType>"
  overload: System.Net.Security.SslStream.HashAlgorithm*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade HashAlgorithm foi acessada antes de concluir o processo de autenticação ou o processo de autenticação falha."
  platform:
  - net462
- uid: System.Net.Security.SslStream.HashStrength
  id: HashStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um valor que identifica a força do algoritmo de hash usado por esta instância."
  remarks: "O valor dessa propriedade é zero até que a autenticação ocorra."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public virtual int HashStrength { get; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica a força do <xref:System.Security.Authentication.HashAlgorithmType>algoritmo, em bits.</xref:System.Security.Authentication.HashAlgorithmType> </xref:System.Int32> Os valores válidos são de 128 ou 160."
  overload: System.Net.Security.SslStream.HashStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsAuthenticated
  id: IsAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se a autenticação foi bem-sucedida.</xref:System.Boolean>"
  remarks: "Autenticam clientes chamando o <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A> Autenticam servidores chamando o <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public override bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a autenticação bem-sucedida ocorreu; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsEncrypted
  id: IsEncrypted
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> usa criptografia de dados.</xref:System.Boolean>"
  remarks: "Criptografia ajuda a proteger a privacidade dos dados, ou seja, ele ajuda a garantir que, enquanto os dados estão em trânsito, ele não pode ser decifrado por terceiros."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_0_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_0_1.cs)]"
  syntax:
    content: public override bool IsEncrypted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dados são criptografados antes de serem transmitidas pela rede e descriptografados quando atingir o ponto de extremidade remoto; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsEncrypted*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  id: IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se o servidor e o cliente foi autenticados.</xref:System.Boolean>"
  remarks: "A autenticação mútua é especificada pelo servidor quando quiser que o cliente para fornecer um certificado de autenticação de servidor."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_11_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_11_1.cs)]"
  syntax:
    content: public override bool IsMutuallyAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o servidor tiver sido autenticado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsServer
  id: IsServer
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se o lado local da conexão usada por este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> foi autenticado como o servidor.</xref:System.Boolean>"
  remarks: "Se a autenticação falha ou não ocorreu, essa propriedade retornará `false`.       Para autenticar o servidor, chame o <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>"
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_13_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_13_1.cs)]"
  syntax:
    content: public override bool IsServer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o ponto de extremidade local foi autenticado com êxito como o lado do servidor da conexão autenticada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsServer*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.IsSigned
  id: IsSigned
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um <xref:System.Boolean>valor que indica se os dados enviados usando esse fluxo são assinados.</xref:System.Boolean>"
  remarks: "Ajuda a proteger a integridade dos dados de assinatura de dados, ou seja, ele ajuda o destinatário determinar se os dados foram violados em trânsito."
  example:
  - "The following code example demonstrates displaying the value of this property.  \n  \n [!code-cpp[NclSslServerSync#4](~/add/codesnippet/cpp/p-system.net.security.ss_19_1.cpp)]\n [!code-cs[NclSslServerSync#4](~/add/codesnippet/csharp/p-system.net.security.ss_19_1.cs)]"
  syntax:
    content: public override bool IsSigned { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dados esteja assinados antes da transmissão; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Security.SslStream.IsSigned*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  id: KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém o algoritmo de troca de chaves usado por este <xref href=&quot;System.Net.Security.SslStream&quot;> </xref>."
  remarks: "O valor dessa propriedade é <xref:System.Security.Authentication.ExchangeAlgorithmType>até que a autenticação ocorra.</xref:System.Security.Authentication.ExchangeAlgorithmType>       O algoritmo de troca de chave protege informações usadas para gerar chaves compartilhadas."
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_16_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_16_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.ExchangeAlgorithmType KeyExchangeAlgorithm { get; }
    return:
      type: System.Security.Authentication.ExchangeAlgorithmType
      description: "Um <xref:System.Security.Authentication.ExchangeAlgorithmType>valor.</xref:System.Security.Authentication.ExchangeAlgorithmType>"
  overload: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  id: KeyExchangeStrength
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um valor que identifica a força do algoritmo de troca de chaves usado por esta instância."
  remarks: "O valor dessa propriedade é zero até que a autenticação ocorra.       Em cenários comuns, o valor dessa propriedade é um dos seguintes: - 512 768-1024 2048"
  example:
  - "The following code example displays the cryptography settings for the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_5_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_5_1.cs)]"
  syntax:
    content: public virtual int KeyExchangeStrength { get; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica a força do <xref:System.Security.Authentication.ExchangeAlgorithmType>algoritmo, em bits.</xref:System.Security.Authentication.ExchangeAlgorithmType> </xref:System.Int32>"
  overload: System.Net.Security.SslStream.KeyExchangeStrength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Length
  id: Length
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém o comprimento do fluxo subjacente."
  remarks: "Essa propriedade retorna o valor retornado ao chamar <xref:System.IO.Stream.Length%2A>no fluxo subjacente.</xref:System.IO.Stream.Length%2A> Se o fluxo subjacente não é pesquisável, esse método normalmente gera uma exceção. O tipo de tempo de execução do fluxo subjacente determina o tipo de tempo de execução da exceção que é lançada."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       O comprimento do fluxo subjacente."
  overload: System.Net.Security.SslStream.Length*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Obtendo o valor dessa propriedade não é suportado quando o fluxo subjacente é um <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.LocalCertificate
  id: LocalCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém o certificado usado para autenticar o ponto de extremidade local."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_1_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_1_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate LocalCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Um objeto X509Certificate que representa o certificado fornecido para autenticação ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum certificado foi fornecido."
  overload: System.Net.Security.SslStream.LocalCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A autenticação falha ou não ocorreu."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Position
  id: Position
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém ou define a posição atual no fluxo subjacente."
  remarks: "Essa propriedade retorna o valor retornado ao chamar <xref:System.IO.Stream.Position%2A>no fluxo subjacente.</xref:System.IO.Stream.Position%2A> Se o fluxo subjacente não é pesquisável, esse método normalmente gera uma exceção. O tipo de tempo de execução do fluxo subjacente determina o tipo de tempo de execução da exceção que é lançada."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A <xref:System.Int64>.</xref:System.Int64>       A posição atual no fluxo subjacente."
  overload: System.Net.Security.SslStream.Position*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não há suporte para a definição dessa propriedade.       - ou - obtendo o valor dessa propriedade não é suportado quando o fluxo subjacente é um <xref href=&quot;System.Net.Sockets.NetworkStream&quot;> </xref>."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Lê dados de fluxo e o armazena na matriz especificada."
  remarks: "O método lê um máximo de `count` bytes do fluxo e os armazena no `buffer` começando no `offset`. Você não pode executar várias operações simultâneas de leitura.       Não é possível chamar esse método, até que você foi autenticado com êxito. Para autenticar chamadas do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       Para executar essa operação assíncrona, use o <xref:System.Net.Security.SslStream.BeginRead%2A>método.</xref:System.Net.Security.SslStream.BeginRead%2A>"
  example:
  - "The following code example demonstrates reading from an <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslClientSync#6](~/add/codesnippet/cpp/m-system.net.security.ss_2_1.cpp)]\n [!code-cs[NclSslClientSync#6](~/add/codesnippet/csharp/m-system.net.security.ss_2_1.cs)]"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que recebe os bytes de leitura do fluxo.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Um <xref:System.Int32>que contém o local de base zero no `buffer` no qual começar a armazenar os dados de leitura desse fluxo.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "Um <xref:System.Int32>que contém o número máximo de bytes a serem lidos do fluxo.</xref:System.Int32>"
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>valor que especifica o número de bytes lidos.</xref:System.Int32> Quando não houver nenhuma mais dados a serem lidos, retornará 0."
  overload: System.Net.Security.SslStream.Read*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; o comprimento de <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Falha na operação de leitura. Consulte a exceção interna, se estiver presente para determinar a causa da falha."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Já existe uma operação de leitura em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A autenticação não ocorreu."
  platform:
  - net462
- uid: System.Net.Security.SslStream.ReadTimeout
  id: ReadTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém ou define a quantidade de tempo que uma operação de leitura bloqueia aguardando dados."
  remarks: "Essa propriedade retorna o valor retornado ao chamar <xref:System.IO.Stream.ReadTimeout%2A>no fluxo subjacente.</xref:System.IO.Stream.ReadTimeout%2A> Quando você definir essa propriedade, o <xref:System.IO.Stream.ReadTimeout%2A>valor no fluxo subjacente é definido como o valor especificado.</xref:System.IO.Stream.ReadTimeout%2A>       Se o fluxo subjacente é um <xref:System.Net.Sockets.NetworkStream>, ReadTimeout é em milissegundos e é definido como <xref:System.Threading.Timeout.Infinite>por padrão, portanto, o que ler operações fazer excede o tempo limite.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_18_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_18_1.cs)]"
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>que especifica a quantidade de tempo decorrido antes que um síncrono haverá falha na operação de leitura.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.RemoteCertificate
  id: RemoteCertificate
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém o certificado usado para autenticar o ponto de extremidade remoto."
  remarks: ''
  example:
  - "The following code example demonstrates displaying the certificate returned by this property.  \n  \n [!code-cpp[NclSslServerSync#6](~/add/codesnippet/cpp/p-system.net.security.ss_15_1.cpp)]\n [!code-cs[NclSslServerSync#6](~/add/codesnippet/csharp/p-system.net.security.ss_15_1.cs)]"
  syntax:
    content: public virtual System.Security.Cryptography.X509Certificates.X509Certificate RemoteCertificate { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509Certificate
      description: "Um objeto X509Certificate que representa o certificado fornecido para autenticação ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum certificado foi fornecido."
  overload: System.Net.Security.SslStream.RemoteCertificate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A autenticação falha ou não ocorreu."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Gera um <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  remarks: "Não chame este método. Ele é herdado, mas não há suporte para a <xref:System.Net.Security.SslStream>classe.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Esse valor é ignorado."
    - id: origin
      type: System.IO.SeekOrigin
      description: "Esse valor é ignorado."
    return:
      type: System.Int64
      description: "Sempre gera um <xref:System.NotSupportedException>.</xref:System.NotSupportedException>"
  overload: System.Net.Security.SslStream.Seek*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não há suporte para busca por <xref href=&quot;System.Net.Security.SslStream&quot;> </xref> objetos."
  platform:
  - net462
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Define o comprimento do fluxo subjacente."
  remarks: "Este método chama <xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>no fluxo subjacente especificado quando isso <xref:System.Net.Security.SslStream>foi criado.</xref:System.Net.Security.SslStream> </xref:System.IO.Stream.SetLength%2A?displayProperty=fullName>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "Um <xref:System.Int64>valor que especifica o comprimento do fluxo.</xref:System.Int64>"
  overload: System.Net.Security.SslStream.SetLength*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.SslProtocol
  id: SslProtocol
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém um valor que indica o protocolo de segurança usado para autenticar esta conexão."
  remarks: "Os protocolos de segurança com suporte são especificados quando o <xref:System.Net.Security.SslStream>é criado.</xref:System.Net.Security.SslStream> Se nenhum protocolo de segurança foi transmitido ao construtor, a instância é criada usando <xref:System.Security.Authentication.SslProtocols>.</xref:System.Security.Authentication.SslProtocols> O protocolo real usado para autenticação é selecionado de acordo com os protocolos suportados pelo cliente e servidor."
  example:
  - "The following example displays the security properties of the specified stream.  \n  \n [!code-cpp[NclSslServerSync#3](~/add/codesnippet/cpp/p-system.net.security.ss_7_1.cpp)]\n [!code-cs[NclSslServerSync#3](~/add/codesnippet/csharp/p-system.net.security.ss_7_1.cs)]"
  syntax:
    content: public virtual System.Security.Authentication.SslProtocols SslProtocol { get; }
    return:
      type: System.Security.Authentication.SslProtocols
      description: "O <xref:System.Security.Authentication.SslProtocols>valor que representa o protocolo usado para autenticação.</xref:System.Security.Authentication.SslProtocols>"
  overload: System.Net.Security.SslStream.SslProtocol*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.TransportContext
  id: TransportContext
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém o <xref:System.Net.TransportContext>usado para autenticação usando proteção estendida.</xref:System.Net.TransportContext>"
  syntax:
    content: public System.Net.TransportContext TransportContext { get; }
    return:
      type: System.Net.TransportContext
      description: "O <xref:System.Net.TransportContext>objeto que contém o token de associação de canal (CBT) usado para proteção estendida.</xref:System.Net.TransportContext>"
  overload: System.Net.Security.SslStream.TransportContext*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Grava os dados especificados para esse fluxo."
  remarks: "Esse método bloqueia enquanto a operação for concluída. Para evitar o bloqueio enquanto a operação for concluída, use o <xref:System.Net.Security.SslStream.BeginWrite%2A>método.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Não é possível chamar esse método, até que você foi autenticado com êxito. Para autenticar chamadas do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       O <xref:System.Net.Security.SslStream>classe não oferece suporte a várias operações simultâneas de gravação.</xref:System.Net.Security.SslStream>"
  example:
  - "The following code example demonstrates writing to an authenticated <xref:System.Net.Security.SslStream>.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/m-system.net.security.ss_3_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/m-system.net.security.ss_3_1.cs)]"
  syntax:
    content: public void Write (byte[] buffer);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que fornece os bytes gravados no fluxo.</xref:System.Byte>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A operação de gravação falhou."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Já existe uma operação de gravação em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A autenticação não ocorreu."
  platform:
  - net462
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Escreva o número especificado de <xref:System.Byte>s para o fluxo subjacente usando o buffer especificado e o deslocamento.</xref:System.Byte>"
  remarks: "Esse método bloqueia enquanto a operação for concluída. Para evitar o bloqueio enquanto a operação conclui a operação for concluída, use o <xref:System.Net.Security.SslStream.BeginWrite%2A>método.</xref:System.Net.Security.SslStream.BeginWrite%2A>       Não é possível chamar esse método, até que você foi autenticado com êxito. Para autenticar chamadas do <xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>, ou <xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A>, <xref:System.Net.Security.SslStream.AuthenticateAsServer%2A>, <xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A>métodos.</xref:System.Net.Security.SslStream.BeginAuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.AuthenticateAsServer%2A> </xref:System.Net.Security.SslStream.BeginAuthenticateAsClient%2A> </xref:System.Net.Security.SslStream.AuthenticateAsClient%2A>       O <xref:System.Net.Security.SslStream>classe não oferece suporte a várias operações simultâneas de gravação.</xref:System.Net.Security.SslStream>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "A <xref:System.Byte>matriz que fornece os bytes gravados no fluxo.</xref:System.Byte>"
    - id: offset
      type: System.Int32
      description: "Um <xref:System.Int32>que contém o local de base zero no `buffer` no qual começar a ler bytes a serem gravados no fluxo.</xref:System.Int32>"
    - id: count
      type: System.Int32
      description: "Um <xref:System.Int32>que contém o número de bytes a serem lidos do `buffer`.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.Write*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>buffer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>offset</code>     <code>&lt;</code>     <code>0</code>.       <code>-or-</code><code>offset</code>&gt; o comprimento de <code>buffer</code>.       -or-       <code>offset</code> + count &gt; the length of <code>buffer</code>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A operação de gravação falhou."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Já existe uma operação de gravação em andamento."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "Este objeto foi fechado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A autenticação não ocorreu."
  platform:
  - net462
- uid: System.Net.Security.SslStream.WriteTimeout
  id: WriteTimeout
  parent: System.Net.Security.SslStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
  type: Property
  assemblies:
  - System
  namespace: System.Net.Security
  summary: "Obtém ou define a quantidade de tempo de que espera para dados de blocos de uma operação de gravação."
  remarks: "Essa propriedade retorna o valor retornado ao chamar <xref:System.IO.Stream.WriteTimeout%2A>no fluxo subjacente.</xref:System.IO.Stream.WriteTimeout%2A> Para operações de conjunto, define o valor especificado de <xref:System.IO.Stream.WriteTimeout%2A>valor no fluxo subjacente.</xref:System.IO.Stream.WriteTimeout%2A>       Se o fluxo subjacente é um <xref:System.Net.Sockets.NetworkStream>, WriteTimeout é em milissegundos e é definido como <xref:System.Threading.Timeout.Infinite>por padrão de forma que gravar operações fazer excede o tempo limite.</xref:System.Threading.Timeout.Infinite> </xref:System.Net.Sockets.NetworkStream>"
  example:
  - "The following code example demonstrates setting the value of this property.  \n  \n [!code-cpp[NclSslServerSync#1](~/add/codesnippet/cpp/p-system.net.security.ss_12_1.cpp)]\n [!code-cs[NclSslServerSync#1](~/add/codesnippet/csharp/p-system.net.security.ss_12_1.cs)]"
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>que especifica a quantidade de tempo decorrido antes que uma operação de gravação síncrona falhar.</xref:System.Int32>"
  overload: System.Net.Security.SslStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Net.Security.AuthenticatedStream
  isExternal: false
  name: System.Net.Security.AuthenticatedStream
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Authentication.AuthenticationException
  parent: System.Security.Authentication
  isExternal: false
  name: AuthenticationException
  nameWithType: AuthenticationException
  fullName: System.Security.Authentication.AuthenticationException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream)
  nameWithType: SslStream.SslStream(Stream)
  fullName: System.Net.Security.SslStream.SslStream(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean)
  nameWithType: SslStream.SslStream(Stream,Boolean)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback)
- uid: System.Net.Security.RemoteCertificateValidationCallback
  parent: System.Net.Security
  isExternal: false
  name: RemoteCertificateValidationCallback
  nameWithType: RemoteCertificateValidationCallback
  fullName: System.Net.Security.RemoteCertificateValidationCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback)
- uid: System.Net.Security.LocalCertificateSelectionCallback
  parent: System.Net.Security
  isExternal: false
  name: LocalCertificateSelectionCallback
  nameWithType: LocalCertificateSelectionCallback
  fullName: System.Net.Security.LocalCertificateSelectionCallback
- uid: System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback,System.Net.Security.LocalCertificateSelectionCallback,System.Net.Security.EncryptionPolicy)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  nameWithType: SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
  fullName: System.Net.Security.SslStream.SslStream(Stream,Boolean,RemoteCertificateValidationCallback,LocalCertificateSelectionCallback,EncryptionPolicy)
- uid: System.Net.Security.EncryptionPolicy
  parent: System.Net.Security
  isExternal: false
  name: EncryptionPolicy
  nameWithType: EncryptionPolicy
  fullName: System.Net.Security.EncryptionPolicy
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String)
  nameWithType: SslStream.AuthenticateAsClient(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Security.SslStream.AuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Security.Authentication.SslProtocols
  parent: System.Security.Authentication
  isExternal: true
  name: SslProtocols
  nameWithType: SslProtocols
  fullName: System.Security.Authentication.SslProtocols
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String)
  nameWithType: SslStream.AuthenticateAsClientAsync(String)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String)
- uid: System.Threading.Tasks.Task
  parent: System.Threading.Tasks
  isExternal: true
  name: Task
  nameWithType: Task
  fullName: System.Threading.Tasks.Task
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsClientAsync(String,X509CertificateCollection,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate
  nameWithType: X509Certificate
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate
- uid: System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate)
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  nameWithType: SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
  fullName: System.Net.Security.SslStream.AuthenticateAsServerAsync(X509Certificate,Boolean,SslProtocols,Boolean)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient(System.String,System.Security.Cryptography.X509Certificates.X509CertificateCollection,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsClient(String,X509CertificateCollection,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  nameWithType: SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginAuthenticateAsServer(X509Certificate,Boolean,SslProtocols,Boolean,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Security.SslStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Net.Security.SslStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Net.Security.SslStream.CanRead
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
  fullName: System.Net.Security.SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
  fullName: System.Net.Security.SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
  fullName: System.Net.Security.SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
  fullName: System.Net.Security.SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
  fullName: System.Net.Security.SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
  fullName: System.Net.Security.SslStream.CipherAlgorithm
- uid: System.Security.Authentication.CipherAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: CipherAlgorithmType
  nameWithType: CipherAlgorithmType
  fullName: System.Security.Authentication.CipherAlgorithmType
- uid: System.Net.Security.SslStream.CipherStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
  fullName: System.Net.Security.SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose(System.Boolean)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SslStream.Dispose(Boolean)
  fullName: System.Net.Security.SslStream.Dispose(Boolean)
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsClient(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsClient(IAsyncResult)
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer(IAsyncResult)
  nameWithType: SslStream.EndAuthenticateAsServer(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndAuthenticateAsServer(IAsyncResult)
- uid: System.Net.Security.SslStream.EndRead(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SslStream.EndRead(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndRead(IAsyncResult)
- uid: System.Net.Security.SslStream.EndWrite(System.IAsyncResult)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SslStream.EndWrite(IAsyncResult)
  fullName: System.Net.Security.SslStream.EndWrite(IAsyncResult)
- uid: System.Net.Security.SslStream.Flush
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush()
  nameWithType: SslStream.Flush()
  fullName: System.Net.Security.SslStream.Flush()
- uid: System.Net.Security.SslStream.HashAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
  fullName: System.Net.Security.SslStream.HashAlgorithm
- uid: System.Security.Authentication.HashAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: HashAlgorithmType
  nameWithType: HashAlgorithmType
  fullName: System.Security.Authentication.HashAlgorithmType
- uid: System.Net.Security.SslStream.HashStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
  fullName: System.Net.Security.SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
  fullName: System.Net.Security.SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
  fullName: System.Net.Security.SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
  fullName: System.Net.Security.SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
  fullName: System.Net.Security.SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
  fullName: System.Net.Security.SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
  fullName: System.Net.Security.SslStream.KeyExchangeAlgorithm
- uid: System.Security.Authentication.ExchangeAlgorithmType
  parent: System.Security.Authentication
  isExternal: true
  name: ExchangeAlgorithmType
  nameWithType: ExchangeAlgorithmType
  fullName: System.Security.Authentication.ExchangeAlgorithmType
- uid: System.Net.Security.SslStream.KeyExchangeStrength
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
  fullName: System.Net.Security.SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
  fullName: System.Net.Security.SslStream.Length
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Net.Security.SslStream.LocalCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
  fullName: System.Net.Security.SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
  fullName: System.Net.Security.SslStream.Position
- uid: System.Net.Security.SslStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SslStream.Read(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Read(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.ReadTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
  fullName: System.Net.Security.SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
  fullName: System.Net.Security.SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SslStream.Seek(Int64,SeekOrigin)
  fullName: System.Net.Security.SslStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Net.Security.SslStream.SetLength(System.Int64)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SslStream.SetLength(Int64)
  fullName: System.Net.Security.SslStream.SetLength(Int64)
- uid: System.Net.Security.SslStream.SslProtocol
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
  fullName: System.Net.Security.SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
  fullName: System.Net.Security.SslStream.TransportContext
- uid: System.Net.TransportContext
  parent: System.Net
  isExternal: true
  name: TransportContext
  nameWithType: TransportContext
  fullName: System.Net.TransportContext
- uid: System.Net.Security.SslStream.Write(System.Byte[])
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[])
  nameWithType: SslStream.Write(Byte[])
  fullName: System.Net.Security.SslStream.Write(Byte[])
- uid: System.Net.Security.SslStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SslStream.Write(Byte[],Int32,Int32)
  fullName: System.Net.Security.SslStream.Write(Byte[],Int32,Int32)
- uid: System.Net.Security.SslStream.WriteTimeout
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
  fullName: System.Net.Security.SslStream.WriteTimeout
- uid: System.Net.Security.SslStream.#ctor*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslStream
  nameWithType: SslStream.SslStream
- uid: System.Net.Security.SslStream.AuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClient
  nameWithType: SslStream.AuthenticateAsClient
- uid: System.Net.Security.SslStream.AuthenticateAsClientAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsClientAsync
  nameWithType: SslStream.AuthenticateAsClientAsync
- uid: System.Net.Security.SslStream.AuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServer
  nameWithType: SslStream.AuthenticateAsServer
- uid: System.Net.Security.SslStream.AuthenticateAsServerAsync*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: AuthenticateAsServerAsync
  nameWithType: SslStream.AuthenticateAsServerAsync
- uid: System.Net.Security.SslStream.BeginAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsClient
  nameWithType: SslStream.BeginAuthenticateAsClient
- uid: System.Net.Security.SslStream.BeginAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginAuthenticateAsServer
  nameWithType: SslStream.BeginAuthenticateAsServer
- uid: System.Net.Security.SslStream.BeginRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginRead
  nameWithType: SslStream.BeginRead
- uid: System.Net.Security.SslStream.BeginWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: BeginWrite
  nameWithType: SslStream.BeginWrite
- uid: System.Net.Security.SslStream.CanRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanRead
  nameWithType: SslStream.CanRead
- uid: System.Net.Security.SslStream.CanSeek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanSeek
  nameWithType: SslStream.CanSeek
- uid: System.Net.Security.SslStream.CanTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanTimeout
  nameWithType: SslStream.CanTimeout
- uid: System.Net.Security.SslStream.CanWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CanWrite
  nameWithType: SslStream.CanWrite
- uid: System.Net.Security.SslStream.CheckCertRevocationStatus*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CheckCertRevocationStatus
  nameWithType: SslStream.CheckCertRevocationStatus
- uid: System.Net.Security.SslStream.CipherAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherAlgorithm
  nameWithType: SslStream.CipherAlgorithm
- uid: System.Net.Security.SslStream.CipherStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: CipherStrength
  nameWithType: SslStream.CipherStrength
- uid: System.Net.Security.SslStream.Dispose*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Dispose
  nameWithType: SslStream.Dispose
- uid: System.Net.Security.SslStream.EndAuthenticateAsClient*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsClient
  nameWithType: SslStream.EndAuthenticateAsClient
- uid: System.Net.Security.SslStream.EndAuthenticateAsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndAuthenticateAsServer
  nameWithType: SslStream.EndAuthenticateAsServer
- uid: System.Net.Security.SslStream.EndRead*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndRead
  nameWithType: SslStream.EndRead
- uid: System.Net.Security.SslStream.EndWrite*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: EndWrite
  nameWithType: SslStream.EndWrite
- uid: System.Net.Security.SslStream.Flush*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Flush
  nameWithType: SslStream.Flush
- uid: System.Net.Security.SslStream.HashAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashAlgorithm
  nameWithType: SslStream.HashAlgorithm
- uid: System.Net.Security.SslStream.HashStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: HashStrength
  nameWithType: SslStream.HashStrength
- uid: System.Net.Security.SslStream.IsAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsAuthenticated
  nameWithType: SslStream.IsAuthenticated
- uid: System.Net.Security.SslStream.IsEncrypted*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsEncrypted
  nameWithType: SslStream.IsEncrypted
- uid: System.Net.Security.SslStream.IsMutuallyAuthenticated*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsMutuallyAuthenticated
  nameWithType: SslStream.IsMutuallyAuthenticated
- uid: System.Net.Security.SslStream.IsServer*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsServer
  nameWithType: SslStream.IsServer
- uid: System.Net.Security.SslStream.IsSigned*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: IsSigned
  nameWithType: SslStream.IsSigned
- uid: System.Net.Security.SslStream.KeyExchangeAlgorithm*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeAlgorithm
  nameWithType: SslStream.KeyExchangeAlgorithm
- uid: System.Net.Security.SslStream.KeyExchangeStrength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: KeyExchangeStrength
  nameWithType: SslStream.KeyExchangeStrength
- uid: System.Net.Security.SslStream.Length*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Length
  nameWithType: SslStream.Length
- uid: System.Net.Security.SslStream.LocalCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: LocalCertificate
  nameWithType: SslStream.LocalCertificate
- uid: System.Net.Security.SslStream.Position*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Position
  nameWithType: SslStream.Position
- uid: System.Net.Security.SslStream.Read*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Read
  nameWithType: SslStream.Read
- uid: System.Net.Security.SslStream.ReadTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SslStream.ReadTimeout
- uid: System.Net.Security.SslStream.RemoteCertificate*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: RemoteCertificate
  nameWithType: SslStream.RemoteCertificate
- uid: System.Net.Security.SslStream.Seek*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Seek
  nameWithType: SslStream.Seek
- uid: System.Net.Security.SslStream.SetLength*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SetLength
  nameWithType: SslStream.SetLength
- uid: System.Net.Security.SslStream.SslProtocol*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: SslProtocol
  nameWithType: SslStream.SslProtocol
- uid: System.Net.Security.SslStream.TransportContext*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: TransportContext
  nameWithType: SslStream.TransportContext
- uid: System.Net.Security.SslStream.Write*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: Write
  nameWithType: SslStream.Write
- uid: System.Net.Security.SslStream.WriteTimeout*
  parent: System.Net.Security.SslStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SslStream.WriteTimeout
