### YamlMime:ManagedReference
items:
- uid: System.Workflow.Activities.Rules.RuleHaltAction
  id: RuleHaltAction
  children:
  - System.Workflow.Activities.Rules.RuleHaltAction.#ctor
  - System.Workflow.Activities.Rules.RuleHaltAction.Clone
  - System.Workflow.Activities.Rules.RuleHaltAction.Equals(System.Object)
  - System.Workflow.Activities.Rules.RuleHaltAction.Execute(System.Workflow.Activities.Rules.RuleExecution)
  - System.Workflow.Activities.Rules.RuleHaltAction.GetHashCode
  - System.Workflow.Activities.Rules.RuleHaltAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)
  - System.Workflow.Activities.Rules.RuleHaltAction.ToString
  - System.Workflow.Activities.Rules.RuleHaltAction.Validate(System.Workflow.Activities.Rules.RuleValidation)
  langs:
  - csharp
  name: RuleHaltAction
  nameWithType: RuleHaltAction
  fullName: System.Workflow.Activities.Rules.RuleHaltAction
  type: Class
  summary: "Faz com que o <xref href=&quot;System.Workflow.Activities.Rules.RuleSet&quot;> </xref> para interromper a execução e retorna o controle volta para o método de chamada."
  remarks: "A ação Halt é semelhante a um comando de interrupção, embora ele termina a execução de <xref:System.Workflow.Activities.Rules.RuleSet>.</xref:System.Workflow.Activities.Rules.RuleSet> A ação Halt parará a execução do <xref:System.Workflow.Activities.Rules.RuleSet>quando todas as ações no mesmo bloco de ação concluiu a execução.</xref:System.Workflow.Activities.Rules.RuleSet>"
  syntax:
    content: 'public class RuleHaltAction : System.Workflow.Activities.Rules.RuleAction'
  inheritance:
  - System.Object
  - System.Workflow.Activities.Rules.RuleAction
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleHaltAction.#ctor
  id: '#ctor'
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  langs:
  - csharp
  name: RuleHaltAction()
  nameWithType: RuleHaltAction.RuleHaltAction()
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.RuleHaltAction()
  type: Constructor
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Workflow.Activities.Rules.RuleHaltAction&quot;> </xref> classe."
  syntax:
    content: public RuleHaltAction ();
    parameters: []
  overload: System.Workflow.Activities.Rules.RuleHaltAction.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleHaltAction.Clone
  id: Clone
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  langs:
  - csharp
  name: Clone()
  nameWithType: RuleHaltAction.Clone()
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.Clone()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Cria uma cópia profunda da atual <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref>."
  syntax:
    content: public override System.Workflow.Activities.Rules.RuleAction Clone ();
    parameters: []
    return:
      type: System.Workflow.Activities.Rules.RuleAction
      description: "Um <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> que é idêntica a esta instância."
  overload: System.Workflow.Activities.Rules.RuleHaltAction.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleHaltAction.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: RuleHaltAction.Equals(Object)
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.Equals(Object)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Determina se duas instâncias de objeto são iguais."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "A <xref:System.Object>ser comparado com o atual <xref:System.Object>.</xref:System.Object> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os objetos forem iguais; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.RuleHaltAction.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleHaltAction.Execute(System.Workflow.Activities.Rules.RuleExecution)
  id: Execute(System.Workflow.Activities.Rules.RuleExecution)
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  langs:
  - csharp
  name: Execute(RuleExecution)
  nameWithType: RuleHaltAction.Execute(RuleExecution)
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.Execute(RuleExecution)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Executa o <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref> usando especificado <xref href=&quot;System.Workflow.Activities.Rules.RuleExecution&quot;> </xref>."
  syntax:
    content: public override void Execute (System.Workflow.Activities.Rules.RuleExecution context);
    parameters:
    - id: context
      type: System.Workflow.Activities.Rules.RuleExecution
      description: "O <xref href=&quot;System.Workflow.Activities.Rules.RuleExecution&quot;> </xref> contexto usado para executar o <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.RuleHaltAction.Execute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>é uma referência nula (<xref uid=&quot;langword_csharp_Nothing&quot; name=&quot;Nothing&quot; href=&quot;&quot;> </xref> no Visual Basic)."
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleHaltAction.GetHashCode
  id: GetHashCode
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: RuleHaltAction.GetHashCode()
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.GetHashCode()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Retorna o código hash para essa instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash para essa instância."
  overload: System.Workflow.Activities.Rules.RuleHaltAction.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleHaltAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)
  id: GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  langs:
  - csharp
  name: GetSideEffects(RuleValidation)
  nameWithType: RuleHaltAction.GetSideEffects(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.GetSideEffects(RuleValidation)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Retorna os campos e propriedades atualizadas pelo <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref>."
  syntax:
    content: public override System.Collections.Generic.ICollection<string> GetSideEffects (System.Workflow.Activities.Rules.RuleValidation validation);
    parameters:
    - id: validation
      type: System.Workflow.Activities.Rules.RuleValidation
      description: "O <xref href=&quot;System.Workflow.Activities.Rules.RuleValidation&quot;> </xref> para gerenciar o processo de validação."
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Uma lista de campos e propriedades alteradas pelo <xref href=&quot;System.Workflow.Activities.Rules.RuleAction&quot;> </xref>.       <div class=&quot;alert NOTE&quot;>    Como <xref href=&quot;System.Workflow.Activities.Rules.RuleHaltAction&quot;> </xref> não tiver parâmetros, o valor de retorno serão sempre ser uma lista vazia.      </div>"
  overload: System.Workflow.Activities.Rules.RuleHaltAction.GetSideEffects*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleHaltAction.ToString
  id: ToString
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  langs:
  - csharp
  name: ToString()
  nameWithType: RuleHaltAction.ToString()
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.ToString()
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Retorna a cadeia de caracteres &quot;Parar&quot;."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A cadeia de caracteres &quot;Parar&quot;."
  overload: System.Workflow.Activities.Rules.RuleHaltAction.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Workflow.Activities.Rules.RuleHaltAction.Validate(System.Workflow.Activities.Rules.RuleValidation)
  id: Validate(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  langs:
  - csharp
  name: Validate(RuleValidation)
  nameWithType: RuleHaltAction.Validate(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.Validate(RuleValidation)
  type: Method
  assemblies:
  - System.Workflow.Activities
  namespace: System.Workflow.Activities.Rules
  summary: "Retorna true, nenhuma validação será executada."
  syntax:
    content: public override bool Validate (System.Workflow.Activities.Rules.RuleValidation validator);
    parameters:
    - id: validator
      type: System.Workflow.Activities.Rules.RuleValidation
      description: "O <xref href=&quot;System.Workflow.Activities.Rules.RuleValidation&quot;> </xref> para gerenciar o processo de validação."
    return:
      type: System.Boolean
      description: "Sempre retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Workflow.Activities.Rules.RuleHaltAction.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Workflow.Activities.Rules.RuleAction
  isExternal: false
  name: System.Workflow.Activities.Rules.RuleAction
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Workflow.Activities.Rules.RuleHaltAction.#ctor
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: RuleHaltAction()
  nameWithType: RuleHaltAction.RuleHaltAction()
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.RuleHaltAction()
- uid: System.Workflow.Activities.Rules.RuleHaltAction.Clone
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: Clone()
  nameWithType: RuleHaltAction.Clone()
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.Clone()
- uid: System.Workflow.Activities.Rules.RuleHaltAction.Equals(System.Object)
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: Equals(Object)
  nameWithType: RuleHaltAction.Equals(Object)
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Workflow.Activities.Rules.RuleHaltAction.Execute(System.Workflow.Activities.Rules.RuleExecution)
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: Execute(RuleExecution)
  nameWithType: RuleHaltAction.Execute(RuleExecution)
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.Execute(RuleExecution)
- uid: System.Workflow.Activities.Rules.RuleExecution
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleExecution
  nameWithType: RuleExecution
  fullName: System.Workflow.Activities.Rules.RuleExecution
- uid: System.Workflow.Activities.Rules.RuleHaltAction.GetHashCode
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: GetHashCode()
  nameWithType: RuleHaltAction.GetHashCode()
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Workflow.Activities.Rules.RuleHaltAction.GetSideEffects(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: GetSideEffects(RuleValidation)
  nameWithType: RuleHaltAction.GetSideEffects(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.GetSideEffects(RuleValidation)
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Workflow.Activities.Rules.RuleValidation
  parent: System.Workflow.Activities.Rules
  isExternal: false
  name: RuleValidation
  nameWithType: RuleValidation
  fullName: System.Workflow.Activities.Rules.RuleValidation
- uid: System.Workflow.Activities.Rules.RuleHaltAction.ToString
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: ToString()
  nameWithType: RuleHaltAction.ToString()
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Workflow.Activities.Rules.RuleHaltAction.Validate(System.Workflow.Activities.Rules.RuleValidation)
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: Validate(RuleValidation)
  nameWithType: RuleHaltAction.Validate(RuleValidation)
  fullName: System.Workflow.Activities.Rules.RuleHaltAction.Validate(RuleValidation)
- uid: System.Workflow.Activities.Rules.RuleHaltAction.#ctor*
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: RuleHaltAction
  nameWithType: RuleHaltAction.RuleHaltAction
- uid: System.Workflow.Activities.Rules.RuleHaltAction.Clone*
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: Clone
  nameWithType: RuleHaltAction.Clone
- uid: System.Workflow.Activities.Rules.RuleHaltAction.Equals*
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: Equals
  nameWithType: RuleHaltAction.Equals
- uid: System.Workflow.Activities.Rules.RuleHaltAction.Execute*
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: Execute
  nameWithType: RuleHaltAction.Execute
- uid: System.Workflow.Activities.Rules.RuleHaltAction.GetHashCode*
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: GetHashCode
  nameWithType: RuleHaltAction.GetHashCode
- uid: System.Workflow.Activities.Rules.RuleHaltAction.GetSideEffects*
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: GetSideEffects
  nameWithType: RuleHaltAction.GetSideEffects
- uid: System.Workflow.Activities.Rules.RuleHaltAction.ToString*
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: ToString
  nameWithType: RuleHaltAction.ToString
- uid: System.Workflow.Activities.Rules.RuleHaltAction.Validate*
  parent: System.Workflow.Activities.Rules.RuleHaltAction
  isExternal: false
  name: Validate
  nameWithType: RuleHaltAction.Validate
