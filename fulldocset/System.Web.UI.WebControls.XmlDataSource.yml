### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.XmlDataSource
  id: XmlDataSource
  children:
  - System.Web.UI.WebControls.XmlDataSource.#ctor
  - System.Web.UI.WebControls.XmlDataSource.CacheDuration
  - System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  - System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  - System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  - System.Web.UI.WebControls.XmlDataSource.Data
  - System.Web.UI.WebControls.XmlDataSource.DataFile
  - System.Web.UI.WebControls.XmlDataSource.EnableCaching
  - System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)
  - System.Web.UI.WebControls.XmlDataSource.GetXmlDocument
  - System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)
  - System.Web.UI.WebControls.XmlDataSource.Save
  - System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection
  - System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList
  - System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)
  - System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames
  - System.Web.UI.WebControls.XmlDataSource.Transform
  - System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  - System.Web.UI.WebControls.XmlDataSource.TransformFile
  - System.Web.UI.WebControls.XmlDataSource.Transforming
  - System.Web.UI.WebControls.XmlDataSource.XPath
  langs:
  - csharp
  name: XmlDataSource
  nameWithType: XmlDataSource
  fullName: System.Web.UI.WebControls.XmlDataSource
  type: Class
  summary: "Representa uma fonte de dados XML para controles associados a dados."
  remarks: "Neste tópico:- [Introdução](#introduction)      -   [fontes de dados XML](#source_of_xml_data)      -   [atualização de dados de XML](#updating_xml_data)      -   [especificando uma transformação XSL](#specifying_an_xsl_transformation)      -   [filtragem usando uma expressão XPath](#filtering_using_an_xpath_expression)      -   [cache](#caching)      -   [recursos adicionais](#additional_features)      -   [o objeto de exibição de dados](#data_view_object)      -   [sintaxe declarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # controle XmlDataSource a introdução é um controle de fonte de dados que apresenta dados XML em controles associados a dados.       O controle de XmlDataSource pode ser usado por controles de associação de dados para exibir dados hierárquicos e tabulares. O controle XmlDataSource normalmente é usado para exibir dados hierárquicos XML em cenários de somente leitura. Porque o controle XmlDataSource estende o <xref:System.Web.UI.HierarchicalDataSourceControl>classe, ele funciona com dados hierárquicos.</xref:System.Web.UI.HierarchicalDataSourceControl> O controle XmlDataSource também implementa o <xref:System.Web.UI.IDataSource>interface e funciona com a tabela, ou estilo de lista, os dados.</xref:System.Web.UI.IDataSource>      > [!NOTE] > Para fins de segurança, nenhum XmlDataSource propriedades de controle são armazenados na exibição de estado. Desde que seja tecnicamente possível decodificar o conteúdo do estado de exibição no cliente, armazenar informações importantes sobre a estrutura de dados ou seu conteúdo pode expor você a uma ameaça de divulgação de informações. Observe que, se você precisa armazenar informações como <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>propriedade em estado de exibição, você pode habilitar a criptografia proteger o conteúdo, definindo <xref:System.Web.UI.Page.ViewStateEncryptionMode%2A>no `@ Page` diretiva.</xref:System.Web.UI.Page.ViewStateEncryptionMode%2A> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>       Os desenvolvedores de página usar o controle XmlDataSource para exibir os dados XML usando controles associados a dados.      <a name=&quot;source_of_xml_data&quot;></a># # Fontes de XML dados o XmlDataSource normalmente carrega dados XML de um arquivo XML, que é especificado pelo <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>propriedade.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> Dados XML também podem ser armazenados diretamente pelo controle de fonte de dados no formulário de cadeia de caracteres usando o <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>propriedade.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> Se você deseja transformar os dados XML antes de ser exibido por um controle associado a dados, você pode fornecer uma folha de estilo Extensible Stylesheet Language (XSL) para a transformação. Como com os dados XML, você normalmente carrega a folha de estilo de um arquivo, indicado pelo <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>propriedade, mas você pode também armazená-lo no formulário de cadeia de caracteres diretamente usando o <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>propriedade.</xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> </xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>      <a name=&quot;updating_xml_data&quot;></a># # Atualização controle XmlDataSource o de dados XML é normalmente usada em cenários de dados somente leitura em que um controle associado a dados exibe dados XML. No entanto, você também pode usar o controle XmlDataSource para editar dados XML. Para editar os dados XML, chame o <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A>método para recuperar um <xref:System.Xml.XmlDataDocument>objeto que é uma representação na memória dos dados XML.</xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> Você pode usar o modelo de objeto exposto pelo <xref:System.Xml.XmlDataDocument>e <xref:System.Xml.XmlNode>objetos contém ou usar uma expressão de filtragem XPath para manipular dados no documento.</xref:System.Xml.XmlNode> </xref:System.Xml.XmlDataDocument> Quando você tiver feito alterações à representação em memória dos dados XML, você pode salvá-lo no disco chamando o <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>método.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>       Há algumas restrições para os recursos de edição do controle XmlDataSource:-os dados XML devem ser carregados de um arquivo XML que é indicado pelo <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>propriedade, não da embutido XML especificado no <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>propriedade.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>      -Nenhuma transformação XSLT pode ser especificada na <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>ou <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>Propriedades.</xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>      -O <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>método não manipula operações simultâneas de salvar por diferentes solicitações.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> Se mais de um usuário estiver editando um arquivo XML por meio de XmlDataSource, não há nenhuma garantia de que todos os usuários estão trabalhando com os mesmos dados. Também é possível para um <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>operação falhar devido a estes mesmos problemas de simultaneidade.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>      <a name=&quot;specifying_an_xsl_transformation&quot;></a># # Especificar uma operação de transformação XSL A comuns executada com dados XML é transformá-los de um conjunto de dados XML em outro. O controle XmlDataSource dá suporte a transformações de XML com o <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>e <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>Propriedades, que especifica uma folha de estilos XSL para aplicar aos dados XML antes de ser passado para um controle associado a dados, e o <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>propriedade, que permite que você forneça argumentos dinâmicos de folha de estilos XSLT a ser usado por uma folha de estilos XSL durante a transformação.</xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> </xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> Se você especificar uma expressão usando a filtragem de XPath do <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>propriedade, ela é aplicada após a transformação ocorrer.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>      > [!NOTE] > XmlDataSource a classe usa preterido <xref:System.Xml.Xsl.XslTransform>classe para executar transformações XSL.</xref:System.Xml.Xsl.XslTransform> Se você quiser usar os recursos de folha de estilo que foram introduzidos após a <xref:System.Xml.Xsl.XslTransform>classe foi substituída, aplicar as transformações manualmente usando a <xref:System.Xml.Xsl.XslCompiledTransform>classe.</xref:System.Xml.Xsl.XslCompiledTransform> </xref:System.Xml.Xsl.XslTransform>      <a name=&quot;filtering_using_an_xpath_expression&quot;></a># # Usando um XPath expressão por padrão, o XmlDataSource controle carrega todos os dados XML no arquivo XML identificada por filtragem de <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>propriedade ou embutido encontrado no <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>propriedade, mas você pode filtrar os dados usando uma expressão XPath.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> O <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>propriedade oferece suporte a um filtro de sintaxe XPath que é aplicado depois que os dados XML são carregados e transformados.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>      <a name=&quot;caching&quot;></a># # Cache para fins de desempenho, o cache está habilitado para o controle XmlDataSource por padrão. Abrir e ler um arquivo XML no servidor sempre que uma página solicitada podem reduzir o desempenho do seu aplicativo. O cache permite que você reduzir a carga de processamento em seu servidor às custas de memória no servidor Web. Na maioria dos casos, isso é uma boa troca. XmlDataSource automaticamente os dados em cache quando o <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A>estiver definida como `true`e o <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>propriedade é definida como o número de segundos que o cache armazena os dados antes do cache é invalidado.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> Você pode usar o <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>para ajustar mais o comportamento de cache do controle de fonte de dados.</xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>      <a name=&quot;additional_features&quot;></a># # Recursos adicionais a tabela a seguir lista recursos adicionais que são suportados pelo controle XmlDataSource.      | Recurso | Descrição |   |----------------|-----------------|   | Classificando | Não há suportada pelo controle XmlDataSource. |   | Filtragem | A propriedade <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>pode ser usada para filtrar os dados XML usando uma expressão XPath apropriada. |   | Paginação | Não há suportada pelo controle XmlDataSource. |   | Atualizando | Manipulando o <xref:System.Xml.XmlDataDocument>diretamente e, em seguida, chamar o método <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>suporte. |   | Excluindo | Manipulando o <xref:System.Xml.XmlDataDocument>diretamente e, em seguida, chamar o método <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>suporte. |   | Inserindo | Manipulando o <xref:System.Xml.XmlDataDocument>diretamente e, em seguida, chamar o método <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>suporte. |   | Cache | Habilitado por padrão, com a propriedade de <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>definida como 0 (infinito) e a propriedade de <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>definida como <xref:System.Web.UI.DataSourceCacheExpiry>. |      <a name=&quot;data_view_object&quot;> </a> # # Dados de objeto de exibição porque o controle XmlDataSource dá suporte a controles associados a dados que exibem dados hierárquicos, como também os controles que exibem dados de tabela, o controle de fonte de dados oferece suporte a vários tipos de objetos de exibição de fonte de dados em seus dados XML subjacentes.</xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> O controle XmlDataSource recupera uma única chamada <xref:System.Web.UI.WebControls.XmlDataSourceView>objeto quando usado com um controle associado a dados que exibe dados de tabela.</xref:System.Web.UI.WebControls.XmlDataSourceView> O <xref:System.Web.UI.IDataSource.GetViewNames%2A>método identifica essa única chamada de modo de exibição.</xref:System.Web.UI.IDataSource.GetViewNames%2A> Quando usado com um controle associado a dados que exibe dados hierárquicos, o controle XmlDataSource recupera um <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>para qualquer caminho hierárquico exclusivo passado para o <xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A>método.</xref:System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView%2A> </xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>      <a name=&quot;declarative_syntax&quot;></a># # Sintaxe de declarativa```   <asp:XmlDataSource       CacheDuration=&quot;string|Infinite&quot;       CacheExpirationPolicy=&quot;Absolute|Sliding&quot;       CacheKeyDependency=&quot;string&quot;       DataFile=&quot;string&quot;       EnableCaching=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnTransforming=&quot;Transforming event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       TransformArgumentList=&quot;string&quot;       TransformFile=&quot;string&quot;       Visible=&quot;True|False&quot;       XPath=&quot;string&quot;   >       <Data>string</Data>       <Transform>string</Transform>   </asp:XmlDataSource>   ```"
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an XmlDataSource control with a <xref:System.Web.UI.WebControls.TreeView> control to display XML data from the sample XML file. The second example demonstrates how to use an XmlDataSource control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data.  \n  \n The following code example demonstrates how to use an XmlDataSource control with a <xref:System.Web.UI.WebControls.TreeView> control to display XML data. The XmlDataSource loads XML data from the XML file identified by the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> property.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_22_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_22_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```  \n  \n The following code example demonstrates how to use an XmlDataSource control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data. The <xref:System.Web.UI.WebControls.Repeater> control uses an XPath data-binding expression to bind to data items within the XML document that the XmlDataSource represents. For more information about `XPath` and `XPathSelect` data-binding syntax, see the <xref:System.Web.UI.XPathBinder> class.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_14#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_22_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_14#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_22_2.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>  \n <orders>  \n   <order>  \n     <customer id=\"12345\" />  \n     <customername>  \n         <firstn>John</firstn>  \n         <lastn>Smith</lastn>  \n     </customername>  \n     <transaction id=\"12345\" />  \n     <shipaddress>  \n         <address1>1234 Tenth Avenue</address1>  \n         <city>Bellevue</city>  \n         <state>Washington</state>  \n         <zip>98001</zip>  \n     </shipaddress>  \n     <summary>  \n         <item dept=\"tools\">screwdriver</item>  \n         <item dept=\"tools\">hammer</item>  \n         <item dept=\"plumbing\">fixture</item>  \n     </summary>  \n   </order>  \n</orders>  \n```"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Transforming")]

      [System.ComponentModel.DefaultProperty("DataFile")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.XmlDataSourceDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Drawing.ToolboxBitmap(typeof(System.Web.UI.WebControls.XmlDataSource))]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class XmlDataSource : System.Web.UI.HierarchicalDataSourceControl, System.ComponentModel.IListSource, System.Web.UI.IDataSource
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.HierarchicalDataSourceControl
  implements:
  - System.ComponentModel.IListSource
  - System.Web.UI.IDataSource
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.HierarchicalDataSourceControl.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.HierarchicalDataSourceControl.ClientID
  - System.Web.UI.HierarchicalDataSourceControl.ClientIDMode
  - System.Web.UI.HierarchicalDataSourceControl.Controls
  - System.Web.UI.HierarchicalDataSourceControl.CreateControlCollection
  - System.Web.UI.HierarchicalDataSourceControl.EnableTheming
  - System.Web.UI.HierarchicalDataSourceControl.FindControl(System.String)
  - System.Web.UI.HierarchicalDataSourceControl.Focus
  - System.Web.UI.HierarchicalDataSourceControl.HasControls
  - System.Web.UI.HierarchicalDataSourceControl.OnDataSourceChanged(System.EventArgs)
  - System.Web.UI.HierarchicalDataSourceControl.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.HierarchicalDataSourceControl.SkinID
  - System.Web.UI.HierarchicalDataSourceControl.System#Web#UI#IHierarchicalDataSource#GetHierarchicalView(System.String)
  - System.Web.UI.HierarchicalDataSourceControl.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: XmlDataSource()
  nameWithType: XmlDataSource.XmlDataSource()
  fullName: System.Web.UI.WebControls.XmlDataSource.XmlDataSource()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria uma nova instância do <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> classe."
  syntax:
    content: public XmlDataSource ();
    parameters: []
  overload: System.Web.UI.WebControls.XmlDataSource.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheDuration
  id: CacheDuration
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheDuration
  nameWithType: XmlDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheDuration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o período de tempo, em segundos, que o controle de fonte de dados armazena dados em cache que foi recuperado."
  remarks: "O <xref:System.Web.UI.WebControls.XmlDataSource>controle automaticamente os dados em cache quando o seguinte se aplica: - o <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A>está definida como `true`.</xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> </xref:System.Web.UI.WebControls.XmlDataSource>      -A propriedade CacheDuration é definida como um valor maior que 0, que indica o número de segundos que o cache armazena os dados antes do cache é invalidado.       Qualquer alteração de <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>propriedade ou o conteúdo do arquivo que contém os dados XML faz com que o cache seja invalidado.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>       Por padrão, a propriedade CacheDuration é definida como 0, o que indica que um cache indefinido, e a fonte de dados armazenará em cache dados até que o arquivo XML que depende é alterado.       O comportamento do cache é controlado por uma combinação da duração e o <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>configuração.</xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> Se <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>for definido como <xref:System.Web.UI.DataSourceCacheExpiry>, o <xref:System.Web.UI.WebControls.XmlDataSource>controle armazena em cache dados a primeira operação de recuperação de dados, mantém na memória pelo período de tempo especificado pelo CacheDuration e invalida depois que o tempo expirou.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> O cache é atualizado, em seguida, após a próxima operação. Se <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>for definido como <xref:System.Web.UI.DataSourceCacheExpiry>, o controle de fonte de dados armazena em cache dados a primeira operação de recuperação de dados, mas redefine a janela de tempo que mantém o cache após cada operação subsequente.</xref:System.Web.UI.DataSourceCacheExpiry> </xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> O cache só expirará se não houver nenhuma atividade por um período igual a CacheDuration desde a última recuperação de dados."
  example:
  - "The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file. Caching is enabled when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the CacheDuration is set to the number of seconds that the data is cached by the data source control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_928_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_928_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual int CacheDuration { get; set; }
    return:
      type: System.Int32
      description: "O número de segundos que o <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle armazena em cache os resultados de uma operação de recuperação de dados. O valor padrão é 0."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheDuration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  id: CacheExpirationPolicy
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheExpirationPolicy
  nameWithType: XmlDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a política de expiração de cache que é combinada com a duração do cache para descrever o comportamento de cache do cache que usa o controle de fonte de dados."
  remarks: "O comportamento do cache é controlado por uma combinação da <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>e configurações CacheExpirationPolicy.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> Se o CacheExpirationPolicy for definido como <xref:System.Web.UI.DataSourceCacheExpiry>, o <xref:System.Web.UI.WebControls.XmlDataSource>armazena em cache dados a primeira operação de recuperação de dados, mantém na memória pelo período de tempo especificado por <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>e invalida depois que o tempo expirou.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.DataSourceCacheExpiry> O cache é atualizado, em seguida, após a próxima operação. Se o CacheExpirationPolicy for definido como <xref:System.Web.UI.DataSourceCacheExpiry>, o controle de fonte de dados armazena em cache dados a primeira operação de recuperação de dados, mas redefine a janela de tempo que mantém o cache após cada operação subsequente.</xref:System.Web.UI.DataSourceCacheExpiry> O cache expirará somente se não houver nenhuma atividade por um período igual de <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>desde a última recuperação de dados.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>"
  example:
  - "The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file. Caching is enabled when the <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> is set to the number of seconds that the data is cached by the data source control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_427_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_427_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual System.Web.UI.DataSourceCacheExpiry CacheExpirationPolicy { get; set; }
    return:
      type: System.Web.UI.DataSourceCacheExpiry
      description: "Uma da <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref> valores. A configuração de política de expiração de cache padrão é <xref href=&quot;System.Web.UI.DataSourceCacheExpiry&quot;> </xref>."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  id: CacheKeyContext
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheKeyContext
  nameWithType: XmlDataSource.CacheKeyContext
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o valor da chave de cache para o controle de fonte de dados do estado de exibição ou adiciona a chave de cache para estado de exibição."
  remarks: "A propriedade CacheKeyContext permite que você crie manualmente uma chave de cache para o <xref:System.Web.UI.WebControls.XmlDataSource>controle.</xref:System.Web.UI.WebControls.XmlDataSource> Isso é necessário apenas se você estiver atribuindo um objeto que contém os dados XML ou XSLT para o controle em vez de especificar um arquivo que contém os dados. Quando você atribui dados para o controle, os dados não são usados para gerar a chave de cache. Em vez disso, você deve gerar uma chave exclusiva do cache manualmente se você pretende atualizar o objeto de dados."
  syntax:
    content: public virtual string CacheKeyContext { get; set; }
    return:
      type: System.String
      description: "O valor da chave de cache ou uma cadeia de caracteres vazia se a chave de cache não está em estado de exibição."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  id: CacheKeyDependency
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: CacheKeyDependency
  nameWithType: XmlDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma dependência de chave definidas pelo usuário que está vinculada a todos os objetos de cache de dados criados pelo controle da fonte de dados. Todos os objetos de cache expirarem explicitamente quando a chave expira."
  remarks: "O <xref:System.Web.UI.WebControls.XmlDataSource>controle oferece suporte ao cache de dados.</xref:System.Web.UI.WebControls.XmlDataSource> Enquanto os dados em cache, o <xref:System.Web.UI.WebControls.XmlDataSource>recupera dados do cache em vez do arquivo de dados subjacente.</xref:System.Web.UI.WebControls.XmlDataSource> Quando o cache expira, ele recupera dados do arquivo subjacente e novamente armazena em cache os dados.       Você pode definir a propriedade CacheKeyDependency para criar uma dependência entre todas as entradas de cache criado pelo <xref:System.Web.UI.WebControls.XmlDataSource>controle e a chave.</xref:System.Web.UI.WebControls.XmlDataSource> Programaticamente, você pode invalidar todas as entradas de cache a qualquer momento por meio da expiração da chave.       Devido as propriedades usadas para criar o CacheKeyDependency, é possível que várias <xref:System.Web.UI.WebControls.XmlDataSource>controles podem usar o mesmo cache em cenários onde eles carregar os mesmos dados do mesmo arquivo XML e o arquivo de transformação e têm o mesmo <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>e <xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A>definida.</xref:System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy%2A> </xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: public virtual string CacheKeyDependency { get; set; }
    return:
      type: System.String
      description: "Uma chave que identifica todos os objetos de cache criado pelo <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Data
  id: Data
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Data
  nameWithType: XmlDataSource.Data
  fullName: System.Web.UI.WebControls.XmlDataSource.Data
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um bloco de dados XML que associa o controle de fonte de dados a."
  remarks: "Em cenários declarativos, a propriedade de dados é especificada como uma propriedade interna combinada do <xref:System.Web.UI.WebControls.XmlDataSource>objeto.</xref:System.Web.UI.WebControls.XmlDataSource> Uma propriedade interna é compatível com dados XML, porque ela permite que você formate os dados XML de qualquer forma e ignorar problemas de preenchimento de caractere, como preenchimento de caracteres de aspas.       Se o <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>e propriedades de dados são definidas, o <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>propriedade terá precedência e os dados no arquivo XML são usados em vez dos dados XML especificados na propriedade de dados.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>       Se você alterar o valor da propriedade de dados, o <xref:System.Web.UI.IDataSource.DataSourceChanged>é gerado.</xref:System.Web.UI.IDataSource.DataSourceChanged> Se o cache está habilitado e você alterar o valor de dados, o cache é invalidado."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control to display inline XML data contained by the Data property with a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_10#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_378_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_10#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_378_1.aspx)]"
  syntax:
    content: public virtual string Data { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres de dados XML embutido que o <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle associa a. O valor padrão é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.Data*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O documento está sendo carregado."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.DataFile
  id: DataFile
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: DataFile
  nameWithType: XmlDataSource.DataFile
  fullName: System.Web.UI.WebControls.XmlDataSource.DataFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Especifica o nome do arquivo de um arquivo XML que a fonte de dados se associará."
  remarks: "Se o arquivo de dados e <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>propriedades forem definidas, a propriedade DataFile terá precedência e os dados no arquivo XML são usados em vez dos dados XML especificados no <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>propriedade.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>       Se você alterar o valor da propriedade DataFile, o <xref:System.Web.UI.IDataSource.DataSourceChanged>é gerado.</xref:System.Web.UI.IDataSource.DataSourceChanged> Se o cache está habilitado e você alterar o valor do arquivo de dados, o cache é invalidado."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control to display XML data contained in a file with a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_472_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_1#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_472_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual string DataFile { get; set; }
    return:
      type: System.String
      description: "O caminho físico absoluto ou um caminho relativo do arquivo XML que contém dados que o <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controlar representa. O valor padrão é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.DataFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O documento está sendo carregado."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.EnableCaching
  id: EnableCaching
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: EnableCaching
  nameWithType: XmlDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.XmlDataSource.EnableCaching
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle tem o cache de dados habilitada."
  remarks: "O <xref:System.Web.UI.WebControls.XmlDataSource>controle automaticamente os dados em cache quando a propriedade EnableCaching é definida como `true`.</xref:System.Web.UI.WebControls.XmlDataSource> Por padrão, o <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>propriedade é definida como 0, que indica que um cache indefinido, e a fonte de dados armazenará em cache dados até que o arquivo XML que depende é alterado.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> Se você definir o <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>propriedade para um valor maior que 0, o cache armazena dados para ou número de segundos antes de recuperar um conjunto novo.</xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A>       Se a propriedade EnableCaching for definida como `true` e o <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>estiver definida, as entradas de cache não são invalidadas automaticamente quando alterar os parâmetros na lista de argumentos de transformações.</xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> Nesse caso, você deve escrever código para invalidar o cache, definindo o <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>propriedade.</xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>"
  example:
  - "The following code example demonstrates how to enable caching when using the <xref:System.Web.UI.WebControls.XmlDataSource> control to display data contained in an XML file. Caching is enabled when the EnableCaching property is set to `true` and the <xref:System.Web.UI.WebControls.XmlDataSource.CacheDuration%2A> is set to the number of seconds that the data is cached by the data source control.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_365_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_16#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_365_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<books>  \n   <computerbooks>  \n     <book title=\"Secrets of Silicon Valley\" author=\"Sheryl Hunter\"/>  \n     <book title=\"Straight Talk About Computers\" author=\"Dean Straight\"/>  \n     <book title=\"You Can Combat Computer Stress!\" author=\"Marjorie Green\"/>                  \n   </computerbooks>  \n   <cookbooks>  \n     <book title=\"Silicon Valley Gastronomic Treats\" author=\"Innes del Castill\"/>  \n   </cookbooks>  \n</books>  \n```"
  syntax:
    content: public virtual bool EnableCaching { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cache de dados está habilitado para o controle de fonte de dados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.XmlDataSource.EnableCaching*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)
  id: GetHierarchicalView(System.String)
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: GetHierarchicalView(String)
  nameWithType: XmlDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o objeto de exibição de fonte de dados para o <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle. O <code> viewPath </code> parâmetro pode ser uma expressão XPath."
  remarks: "Você pode chamar o método GetHierarchicalView para recuperar um <xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView>objeto associado a <xref:System.Web.UI.WebControls.XmlDataSource>controle.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlHierarchicalDataSourceView> Se você especificar `viewPath` valor, o <xref:System.Web.UI.WebControls.XmlDataSource>controle retorna um objeto de exibição de fonte de dados que representa o modo de exibição do nó identificado por `viewPath`, juntamente com todos os seus nós filho.</xref:System.Web.UI.WebControls.XmlDataSource> Se você definir `viewPath` para <xref:System.String.Empty?displayProperty=fullName>, o <xref:System.Web.UI.WebControls.XmlDataSource>verificações de controle de <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>propriedade para determinar o nó raiz para criar a exibição de fonte de dados.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> </xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.String.Empty?displayProperty=fullName> Se o <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>propriedade for definida, o <xref:System.Web.UI.WebControls.XmlDataSource>controle utiliza para retornar uma exibição da fonte de dados da mesma forma, o `viewPath` expressão é usada.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A> Se o <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>propriedade não for definida, o <xref:System.Web.UI.WebControls.XmlDataSource>controle retorna uma exibição de todos os nós de dados nos dados XML.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>"
  syntax:
    content: protected override System.Web.UI.HierarchicalDataSourceView GetHierarchicalView (string viewPath);
    parameters:
    - id: viewPath
      type: System.String
      description: "Uma expressão XPath que identifica um nó do qual a exibição hierárquica atual é criada."
    return:
      type: System.Web.UI.HierarchicalDataSourceView
      description: "Retorna um <xref href=&quot;System.Web.UI.WebControls.XmlHierarchicalDataSourceView&quot;> </xref> objeto que representa uma única exibição dos dados a partir do nó de dados identificado por <code> viewPath </code>."
  overload: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument
  id: GetXmlDocument
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: GetXmlDocument()
  nameWithType: XmlDataSource.GetXmlDocument()
  fullName: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carrega os dados XML na memória, diretamente do armazenamento de dados subjacente ou do cache e o retorna no formato de um <xref href=&quot;System.Xml.XmlDataDocument&quot;> </xref> objeto."
  remarks: "Use o método GetXmlDocument de acesso direto a uma representação na memória dos dados XML subjacentes.       Você pode manipular retornado <xref:System.Xml.XmlDataDocument>do objeto e, em seguida, chame <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>para manter suas alterações para o arquivo XML especificado pelo <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>propriedade.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Save%2A> </xref:System.Xml.XmlDataDocument> Vários requisitos devem ser atendidos antes do <xref:System.Xml.XmlDataDocument>objeto pode ser salvo com êxito.</xref:System.Xml.XmlDataDocument> Para obter mais informações, consulte o <xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>método.</xref:System.Web.UI.WebControls.XmlDataSource.Save%2A>"
  example:
  - "This section contains two code examples. The first example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The second example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The data is manipulated in memory using the GetXmlDocument method every time you select a <xref:System.Web.UI.WebControls.TreeView> node, and is then saved to the XML file. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_196_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_196_1.aspx)]  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file. As with the previous example, the data is manipulated in memory using the <xref:System.Xml.XmlDataDocument> retrieved by the GetXmlDocument method. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_196_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_196_2.aspx)]  \n  \n The XML file in the code examples has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n <bookstore xmlns:bk=\"urn:samples\">  \n   <book genre=\"novel\" publicationdate=\"1999\" bk:ISBN=\"0000000000\">  \n     <title>Secrets of Silicon Valley</title>  \n     <author>  \n       <first-name>Sheryl</first-name>  \n       <last-name>Hunter</last-name>  \n     </author>  \n     <price>24.95</price>\"   \n     </book>  \n   <book genre=\"novel\" publicationdate=\"1985\" bk:ISBN=\"1111111111\">  \n     <title>Straight Talk About Computers</title>  \n     <author>  \n       <first-name>Dean</first-name>  \n       <last-name>Straight</last-name>  \n     </author>  \n     <price>29.95</price>  \n   </book>  \n</bookstore>  \n```"
  syntax:
    content: public System.Xml.XmlDocument GetXmlDocument ();
    parameters: []
    return:
      type: System.Xml.XmlDocument
      description: "Um <xref href=&quot;System.Xml.XmlDataDocument&quot;> </xref> objeto que representa o XML especificado no <> </> *> propriedade ou o arquivo identificado pelo <> </> *> propriedade, com todas as transformações e <xref:System.Web.UI.WebControls.XmlDataSource.XPath*>consultas aplicadas.</xref:System.Web.UI.WebControls.XmlDataSource.XPath*>"
  overload: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Uma URL é especificada para o <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>propriedade; no entanto, o <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle não tem as permissões corretas para o recurso da Web.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A URL is specified for the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property; however, it is not an HTTP-based URL.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using the <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control.  \n  \n \\- or -  \n  \n Both caching and client impersonation are enabled. The <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control does not support caching when client impersonation is enabled."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Acesso negado para o caminho especificado para o <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>propriedade.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)
  id: OnTransforming(System.EventArgs)
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: OnTransforming(EventArgs)
  nameWithType: XmlDataSource.OnTransforming(EventArgs)
  fullName: System.Web.UI.WebControls.XmlDataSource.OnTransforming(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.XmlDataSource.Transforming&quot;> </xref> evento antes do <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle executa uma transformação XSLT em seus dados XML."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).       O método OnTransforming também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data. The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property. Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> object at runtime. The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> object to the data source control by handling the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event with a custom event handler, which is identified by name of the method set for the OnTransforming method.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_60_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_60_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The XML transformation is performed using the following style sheet.  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:param name=\"purchdate\"/>  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n       Price: <xsl:value-of select=\"price\"/>  \n           15% discount if purchased by: <xsl:value-of select=\"$purchdate\"/>        \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: protected virtual void OnTransforming (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.XmlDataSource.OnTransforming*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Save
  id: Save
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Save()
  nameWithType: XmlDataSource.Save()
  fullName: System.Web.UI.WebControls.XmlDataSource.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva os dados XML atualmente mantidos na memória, o <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle no disco se o <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>está definida.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  remarks: "Enquanto o <xref:System.Web.UI.WebControls.XmlDataSource>controle normalmente é usado em cenários de associação de dados somente leitura, você pode usar o <xref:System.Web.UI.WebControls.XmlDataSource>controle para editar dados XML no arquivo de dados XML subjacente.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.XmlDataSource> Nesses cenários, os dados XML são carregados de um arquivo XML de <xref:System.Web.UI.WebControls.XmlDataSource>controle.</xref:System.Web.UI.WebControls.XmlDataSource> Modificar o <xref:System.Xml.XmlDataDocument>na memória usando o <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A>método e, em seguida, salvar em arquivo de dados XML, chamando o método Save.</xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> </xref:System.Xml.XmlDataDocument> Este cenário XML editável é possível quando as seguintes condições forem atendidas:-os dados XML são carregados de um arquivo XML indicado pelo <xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>não de dados XML embutido especificados na propriedade de <xref:System.Web.UI.WebControls.XmlDataSource.Data%2A>propriedade.</xref:System.Web.UI.WebControls.XmlDataSource.Data%2A> </xref:System.Web.UI.WebControls.XmlDataSource.DataFile%2A>      -Nenhuma transformação XSLT é especificada no <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>ou <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>Propriedades.</xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>       O método Save não manipula operações simultâneas de salvar por solicitações diferentes. Se mais de um usuário estiver editando um arquivo XML por meio de <xref:System.Web.UI.WebControls.XmlDataSource>controlar, não há nenhuma garantia de que todos os usuários estão trabalhando com os mesmos dados.</xref:System.Web.UI.WebControls.XmlDataSource> Também é possível que uma operação de salvamento falhar devido a estes mesmos problemas de simultaneidade."
  example:
  - "This section contains two code examples. The first code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The second code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file.  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display and edit XML data contained in an XML file. The data is manipulated in memory using the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method every time you select a <xref:System.Web.UI.WebControls.TreeView> node, and is then saved to the XML file. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-cs[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_117_1.aspx)]\n [!code-vb[System.Web.UI.WebControls.XmlDataSource_17#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_117_1.aspx)]  \n  \n The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display and edit XML data contained in an XML file. As with the previous example, the data is manipulated in memory using the <xref:System.Xml.XmlDataDocument> object retrieved by the <xref:System.Web.UI.WebControls.XmlDataSource.GetXmlDocument%2A> method. Finally, <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> is called on the <xref:System.Web.UI.WebControls.TreeView> control to refresh the data that it displays.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_117_2.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_18#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_117_2.aspx)]  \n  \n The XML file in the code examples has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\"?>  \n <bookstore xmlns:bk=\"urn:samples\">  \n   <book genre=\"novel\" publicationdate=\"1999\" bk:ISBN=\"0000000000\">  \n     <title>Secrets of Silicon Valley</title>  \n     <author>  \n       <first-name>Sheryl</first-name>  \n       <last-name>Hunter</last-name>  \n     </author>  \n     <price>24.95</price>\"   \n     </book>  \n   <book genre=\"novel\" publicationdate=\"1985\" bk:ISBN=\"1111111111\">  \n     <title>Straight Talk About Computers</title>  \n     <author>  \n       <first-name>Dean</first-name>  \n       <last-name>Straight</last-name>  \n     </author>  \n     <price>29.95</price>  \n   </book>  \n</bookstore>  \n  \n```"
  syntax:
    content: public void Save ();
    parameters: []
  overload: System.Web.UI.WebControls.XmlDataSource.Save*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "XML data was loaded using the <xref:System.Web.UI.WebControls.XmlDataSource.Data*> property instead of the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property.  \n  \n \\- or -  \n  \n A URL is specified for the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property; however, the <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control does not have the correct permissions for the Web resource."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A URL is specified for the <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*> property; however, it is not an HTTP-based URL.  \n  \n \\- or -  \n  \n A design-time relative path was not mapped correctly by the designer before using the <xref href=\"System.Web.UI.WebControls.XmlDataSource\"></xref> control."
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Acesso negado para o caminho especificado para o <xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>propriedade.</xref:System.Web.UI.WebControls.XmlDataSource.DataFile*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection
  id: System#ComponentModel#IListSource#ContainsListCollection
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte <xref:System.ComponentModel.IListSource.ContainsListCollection*>.</xref:System.ComponentModel.IListSource.ContainsListCollection*>"
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.XmlDataSource>instância é convertida para o <xref:System.ComponentModel.IListSource>interface.</xref:System.ComponentModel.IListSource> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: bool System.ComponentModel.IListSource.ContainsListCollection { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a coleção é uma coleção de <xref:System.Collections.IList>objetos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList
  id: System#ComponentModel#IListSource#GetList
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.GetList()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.GetList()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte <xref:System.ComponentModel.IListSource.GetList*>.</xref:System.ComponentModel.IListSource.GetList*>"
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.XmlDataSource>instância é convertida para o <xref:System.ComponentModel.IListSource>interface.</xref:System.ComponentModel.IListSource> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: System.Collections.IList IListSource.GetList ();
    parameters: []
    return:
      type: System.Collections.IList
      description: "Um objeto que implementa <xref:System.Collections.IList>que pode ser associado a uma fonte de dados.</xref:System.Collections.IList>"
  overload: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)
  id: System#Web#UI#IDataSource#GetView(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.Web.UI.IDataSource.GetView(String)
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetView(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a exibição de fonte de dados nomeada associada com o controle de fonte de dados."
  syntax:
    content: System.Web.UI.DataSourceView IDataSource.GetView (string viewName);
    parameters:
    - id: viewName
      type: System.String
      description: "O nome do modo de exibição para recuperar. Se &lt;xref:System.String?displayProperty=fullName&gt; for especificado, a exibição padrão para o <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle é recuperado."
    return:
      type: System.Web.UI.DataSourceView
      description: "Retorna o nome <xref href=&quot;System.Web.UI.WebControls.XmlDataSourceView&quot;> </xref> objeto associado a <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames
  id: System#Web#UI#IDataSource#GetViewNames
  isEii: true
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: System.Web.UI.IDataSource.GetViewNames()
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte <xref:System.Web.UI.IDataSource.GetViewNames*>.</xref:System.Web.UI.IDataSource.GetViewNames*>"
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.XmlDataSource>instância é convertida para o <xref:System.Web.UI.IDataSource>interface.</xref:System.Web.UI.IDataSource> </xref:System.Web.UI.WebControls.XmlDataSource>"
  syntax:
    content: System.Collections.ICollection IDataSource.GetViewNames ();
    parameters: []
    return:
      type: System.Collections.ICollection
      description: "Um objeto que implementa <xref:System.Collections.ICollection>contendo nomes que representa a lista de objetos de exibição associada a <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> objeto.</xref:System.Collections.ICollection>"
  overload: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Transform
  id: Transform
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Transform
  nameWithType: XmlDataSource.Transform
  fullName: System.Web.UI.WebControls.XmlDataSource.Transform
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um bloco de dados de folha de estilos XSL linguagem extensível () que define uma transformação XSLT a ser executada nos dados XML gerenciados pelo <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle."
  remarks: "Em cenários declarativos, a propriedade Transform é especificada como uma propriedade interna combinada do <xref:System.Web.UI.WebControls.XmlDataSource>objeto.</xref:System.Web.UI.WebControls.XmlDataSource> Uma propriedade interna é compatível com dados de folha de estilo XSL, porque ela permite que você formate a folha de estilos de qualquer forma e ignorar problemas de preenchimento de caractere, como preenchimento de caracteres de aspas.       Se o <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>e propriedades de transformação são definidas, o <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A>propriedade terá precedência e os dados no arquivo de folha de estilos XSL (. xsl) são usados em vez dos elementos de folha de estilo especificados na propriedade Transform.</xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> </xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> Se uma expressão XPath é definida usando o <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>propriedade, ela é aplicada depois que os dados XML são transformados.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>       Se você alterar o valor da propriedade de transformação, o <xref:System.Web.UI.IDataSource.DataSourceChanged>é gerado.</xref:System.Web.UI.IDataSource.DataSourceChanged> Se o cache está habilitado e você alterar o valor de transformação, o cache é invalidado.      > [!NOTE] > O <xref:System.Web.UI.WebControls.XmlDataSource>classe usa preterido <xref:System.Xml.Xsl.XslTransform>classe para executar transformações XSL.</xref:System.Xml.Xsl.XslTransform> </xref:System.Web.UI.WebControls.XmlDataSource> Se você quiser usar os recursos de folha de estilo que foram introduzidos após a <xref:System.Xml.Xsl.XslTransform>classe foi substituída, aplicar as transformações manualmente usando a <xref:System.Xml.Xsl.XslCompiledTransform>classe.</xref:System.Xml.Xsl.XslCompiledTransform> </xref:System.Xml.Xsl.XslTransform>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display transformed XML data. The style sheet that performs the transformation is defined inline by the Transform property of the data source control.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<?xml version=\"1.0\" encoding=\"iso-8859-1\"?>  \n <orders>  \n   <order>  \n     <customer id=\"12345\" />  \n     <customername>  \n         <firstn>Todd</firstn>  \n         <lastn>Rowe</lastn>  \n     </customername>  \n     <transaction id=\"12345\" />  \n     <shipaddress>  \n         <address1>1234 Tenth Avenue</address1>  \n         <city>Bellevue</city>  \n         <state>Washington</state>  \n         <zip>98001</zip>  \n     </shipaddress>  \n     <summary>  \n         <item dept=\"tools\">screwdriver</item>  \n         <item dept=\"tools\">hammer</item>  \n         <item dept=\"plumbing\">fixture</item>  \n     </summary>  \n   </order>  \n</orders>  \n```"
  syntax:
    content: public virtual string Transform { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres de inline XSL que define uma transformação XML a ser executada nos dados contidos no <> </> *> ou <> </> *> propriedades. O valor padrão é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.Transform*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O documento está sendo carregado."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  id: TransformArgumentList
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: TransformArgumentList
  nameWithType: XmlDataSource.TransformArgumentList
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Fornece uma lista de argumentos XSLT que são usadas com a folha de estilo definida pelo <> </> *> ou <> </> *> propriedades para executar uma transformação nos dados XML."
  remarks: "Defina a propriedade TransformArgumentList quando o <xref:System.Web.UI.WebControls.XmlDataSource.Transforming>é gerado para garantir que os parâmetros XSLT estão disponíveis no momento em que a transformação XSLT é aplicada aos dados XML.</xref:System.Web.UI.WebControls.XmlDataSource.Transforming>       Se o <xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A>está definida como `true` e a propriedade TransformArgumentList está definida, as entradas de cache não são invalidadas automaticamente quando alterar os parâmetros na lista de argumentos de transformações.</xref:System.Web.UI.WebControls.XmlDataSource.EnableCaching%2A> Nesse caso, você deve escrever código para invalidar o cache, definindo o <xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>propriedade.</xref:System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency%2A>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data. The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property. Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> object at run time. The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> to the data source control by handling the <xref:System.Web.UI.WebControls.XmlDataSource.Transforming> event with a custom event handler.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_437_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_437_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The transformation of the XML data is performed with the following style sheet.  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:param name=\"purchdate\"/>  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n       Price: <xsl:value-of select=\"price\"/>  \n           15% discount if purchased by: <xsl:value-of select=\"$purchdate\"/>        \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public virtual System.Xml.Xsl.XsltArgumentList TransformArgumentList { get; set; }
    return:
      type: System.Xml.Xsl.XsltArgumentList
      description: "Um <xref href=&quot;System.Xml.Xsl.XsltArgumentList&quot;> </xref> objeto que contém parâmetros XSLT e objetos a ser aplicado aos dados XML quando ele é carregado pelo <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle. O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.TransformFile
  id: TransformFile
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: TransformFile
  nameWithType: XmlDataSource.TransformFile
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformFile
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Especifica o nome do arquivo de um arquivo de folha de estilos XSL linguagem extensível () (. xsl) que define uma transformação XSLT a ser executada nos dados XML gerenciados pelo <xref href=&quot;System.Web.UI.WebControls.XmlDataSource&quot;> </xref> controle."
  remarks: "Se ambos o TransformFile e <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>propriedades são definidas, a propriedade TransformFile terá precedência e os dados no arquivo de folha de estilos XSL (. xsl) são usados em vez dos elementos de folha de estilo especificados no <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>propriedade.</xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> Se uma expressão XPath é definida usando o <xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>propriedade, ela é aplicada depois que os dados XML são transformados.</xref:System.Web.UI.WebControls.XmlDataSource.XPath%2A>       Se você alterar o valor da <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>propriedade, o <xref:System.Web.UI.IDataSource.DataSourceChanged>é gerado.</xref:System.Web.UI.IDataSource.DataSourceChanged> </xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A> Se o cache está habilitado e você alterar o valor de <xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>, o cache é invalidado.</xref:System.Web.UI.WebControls.XmlDataSource.Transform%2A>      > [!NOTE] > O <xref:System.Web.UI.WebControls.XmlDataSource>classe usa preterido <xref:System.Xml.Xsl.XslTransform>classe para executar transformações XSL.</xref:System.Xml.Xsl.XslTransform> </xref:System.Web.UI.WebControls.XmlDataSource> Se você quiser usar os recursos de folha de estilo que foram introduzidos após a <xref:System.Xml.Xsl.XslTransform>classe foi substituída, aplicar as transformações manualmente usando a <xref:System.Xml.Xsl.XslCompiledTransform>classe.</xref:System.Xml.Xsl.XslCompiledTransform> </xref:System.Xml.Xsl.XslTransform>"
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control and a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data on a Web form. The transformation is performed using the style sheet indicated by the TransformFile property. You can optionally supply transformation arguments for the style sheet using an <xref:System.Xml.Xsl.XsltArgumentList>. For more information, see the <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A> property.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_5#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_625_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_5#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_625_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The XSL style sheet that performs the XML transformation has the following structure:  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"price\">  \n       <xsl:value-of select=\"price\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public virtual string TransformFile { get; set; }
    return:
      type: System.String
      description: "O caminho físico absoluto ou um caminho relativo do arquivo de folha de estilo XSL que define uma transformação XML a ser executada nos dados contidos no <> </> *> ou <> </> *> propriedades. O valor padrão é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.TransformFile*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O documento está sendo carregado."
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.Transforming
  id: Transforming
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: Transforming
  nameWithType: XmlDataSource.Transforming
  fullName: System.Web.UI.WebControls.XmlDataSource.Transforming
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre antes da folha de estilo é definida pelo <> </> *> propriedade ou identificados pelo <> </> *> propriedade é aplicada aos dados XML."
  remarks: "Manipular o evento Transforming para definir o <xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>propriedade com um <xref:System.Xml.Xsl.XsltArgumentList>objeto antes do <xref:System.Web.UI.WebControls.XmlDataSource>controle executa uma transformação XML.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Xml.Xsl.XsltArgumentList> </xref:System.Web.UI.WebControls.XmlDataSource.TransformArgumentList%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a <xref:System.Web.UI.WebControls.TreeView> control to display transformed XML data. The XML transformation is performed using the style sheet indicated by the <xref:System.Web.UI.WebControls.XmlDataSource.TransformFile%2A> property. Additionally, the style sheet uses transform arguments that are passed to the data source control in an <xref:System.Xml.Xsl.XsltArgumentList> at run time. The code example demonstrates how to pass the <xref:System.Xml.Xsl.XsltArgumentList> object to the data source control by handling the Transforming event with a custom event handler.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_49_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_9#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_49_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```  \n  \n The transformation of the XML data is performed with the following style sheet:  \n  \n```  \n<xsl:stylesheet version=\"1.0\" xmlns:xsl=\"http://www.w3.org/1999/XSL/Transform\">  \n <xsl:param name=\"purchdate\"/>  \n <xsl:template match=\"bookstore\">  \n   <bookstore>  \n     <xsl:apply-templates select=\"genre\"/>  \n   </bookstore>  \n </xsl:template>  \n <xsl:template match=\"genre\">  \n   <genre>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"book\"/>  \n   </genre>  \n </xsl:template>  \n <xsl:template match=\"book\">  \n   <book>  \n     <xsl:attribute name=\"ISBN\">  \n       <xsl:value-of select=\"@ISBN\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"title\">  \n       <xsl:value-of select=\"title\"/>  \n       Price: <xsl:value-of select=\"price\"/>  \n           15% discount if purchased by: <xsl:value-of select=\"$purchdate\"/>        \n     </xsl:attribute>  \n     <xsl:apply-templates select=\"chapters/chapter\" />  \n   </book>  \n </xsl:template>  \n <xsl:template match=\"chapter\">  \n   <chapter>  \n     <xsl:attribute name=\"num\">  \n       <xsl:value-of select=\"@num\"/>  \n     </xsl:attribute>  \n     <xsl:attribute name=\"name\">  \n       <xsl:value-of select=\"@name\"/>  \n     </xsl:attribute>  \n     <xsl:apply-templates/>  \n   </chapter>  \n </xsl:template>  \n</xsl:stylesheet>  \n```"
  syntax:
    content: public event EventHandler Transforming;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.XmlDataSource.XPath
  id: XPath
  parent: System.Web.UI.WebControls.XmlDataSource
  langs:
  - csharp
  name: XPath
  nameWithType: XmlDataSource.XPath
  fullName: System.Web.UI.WebControls.XmlDataSource.XPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Especifica uma expressão XPath a ser aplicado aos dados XML contidos pelo <> </> *> propriedade ou o arquivo XML indicado pelo <> </> *> propriedade."
  remarks: "Para obter mais informações sobre expressões de associação de dados XPath, consulte [associando um controle Tabular ao controle XmlDataSource](http://msdn.microsoft.com/en-us/d6bf202f-6454-45fd-9424-e17f6c7eafe8)."
  example:
  - "The following code example demonstrates how to use an <xref:System.Web.UI.WebControls.XmlDataSource> control with a templated <xref:System.Web.UI.WebControls.Repeater> control to display XML data that has been filtered using an XPath expression. In this example, XPath syntax is used to filter the XML data when the XPath property of the data source control is set, and also binds elements of the <xref:System.Web.UI.WebControls.Repeater> control template to the XML data.  \n  \n [!code-vb[System.Web.UI.WebControls.XmlDataSource_8#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_422_1.aspx)]\n [!code-cs[System.Web.UI.WebControls.XmlDataSource_8#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_422_1.aspx)]  \n  \n The XML file in the code example has the following data:  \n  \n```  \n<bookstore>  \n   <genre name=\"fiction\">  \n     <book ISBN=\"0000000000\">  \n       <title>Secrets of Silicon Valley</title>  \n       <price>12.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />             \n         <chapter num=\"2\" name=\"Body\" />            \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n   <genre name=\"novel\">  \n     <book genre=\"novel\" ISBN=\"1111111111\">  \n       <title>Straight Talk About Computers</title>  \n       <price>24.95</price>  \n       <chapters>  \n         <chapter num=\"1\" name=\"Introduction\" />   \n         <chapter num=\"2\" name=\"Body\" />  \n         <chapter num=\"3\" name=\"Conclusion\" />  \n       </chapters>  \n     </book>  \n   </genre>  \n</bookstore>  \n```"
  syntax:
    content: public virtual string XPath { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa uma expressão XPath que pode ser usada para filtrar os dados contidos pelo <> </> *> propriedade ou o arquivo XML indicado pelo <> </> *> propriedade. O valor padrão é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.XmlDataSource.XPath*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O documento está sendo carregado."
  platform:
  - net462
references:
- uid: System.Web.UI.HierarchicalDataSourceControl
  isExternal: false
  name: System.Web.UI.HierarchicalDataSourceControl
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.XmlDataSource.#ctor
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XmlDataSource()
  nameWithType: XmlDataSource.XmlDataSource()
  fullName: System.Web.UI.WebControls.XmlDataSource.XmlDataSource()
- uid: System.Web.UI.WebControls.XmlDataSource.CacheDuration
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: XmlDataSource.CacheDuration
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheDuration
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: XmlDataSource.CacheExpirationPolicy
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy
- uid: System.Web.UI.DataSourceCacheExpiry
  parent: System.Web.UI
  isExternal: false
  name: DataSourceCacheExpiry
  nameWithType: DataSourceCacheExpiry
  fullName: System.Web.UI.DataSourceCacheExpiry
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyContext
  nameWithType: XmlDataSource.CacheKeyContext
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: XmlDataSource.CacheKeyDependency
  fullName: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.XmlDataSource.Data
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Data
  nameWithType: XmlDataSource.Data
  fullName: System.Web.UI.WebControls.XmlDataSource.Data
- uid: System.Web.UI.WebControls.XmlDataSource.DataFile
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: DataFile
  nameWithType: XmlDataSource.DataFile
  fullName: System.Web.UI.WebControls.XmlDataSource.DataFile
- uid: System.Web.UI.WebControls.XmlDataSource.EnableCaching
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: XmlDataSource.EnableCaching
  fullName: System.Web.UI.WebControls.XmlDataSource.EnableCaching
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(System.String)
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetHierarchicalView(String)
  nameWithType: XmlDataSource.GetHierarchicalView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView(String)
- uid: System.Web.UI.HierarchicalDataSourceView
  parent: System.Web.UI
  isExternal: false
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView
  fullName: System.Web.UI.HierarchicalDataSourceView
- uid: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetXmlDocument()
  nameWithType: XmlDataSource.GetXmlDocument()
  fullName: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument()
- uid: System.Xml.XmlDocument
  parent: System.Xml
  isExternal: false
  name: XmlDocument
  nameWithType: XmlDocument
  fullName: System.Xml.XmlDocument
- uid: System.Web.UI.WebControls.XmlDataSource.OnTransforming(System.EventArgs)
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: OnTransforming(EventArgs)
  nameWithType: XmlDataSource.OnTransforming(EventArgs)
  fullName: System.Web.UI.WebControls.XmlDataSource.OnTransforming(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.XmlDataSource.Save
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Save()
  nameWithType: XmlDataSource.Save()
  fullName: System.Web.UI.WebControls.XmlDataSource.Save()
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.GetList()
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.GetList()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.ComponentModel.IListSource.GetList()
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView(System.String)
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetView(String)
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetView(String)
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetView(String)
- uid: System.Web.UI.DataSourceView
  parent: System.Web.UI
  isExternal: false
  name: DataSourceView
  nameWithType: DataSourceView
  fullName: System.Web.UI.DataSourceView
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetViewNames()
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
  fullName: System.Web.UI.WebControls.XmlDataSource.System.Web.UI.IDataSource.GetViewNames()
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.WebControls.XmlDataSource.Transform
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Transform
  nameWithType: XmlDataSource.Transform
  fullName: System.Web.UI.WebControls.XmlDataSource.Transform
- uid: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformArgumentList
  nameWithType: XmlDataSource.TransformArgumentList
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList
- uid: System.Xml.Xsl.XsltArgumentList
  parent: System.Xml.Xsl
  isExternal: false
  name: XsltArgumentList
  nameWithType: XsltArgumentList
  fullName: System.Xml.Xsl.XsltArgumentList
- uid: System.Web.UI.WebControls.XmlDataSource.TransformFile
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformFile
  nameWithType: XmlDataSource.TransformFile
  fullName: System.Web.UI.WebControls.XmlDataSource.TransformFile
- uid: System.Web.UI.WebControls.XmlDataSource.Transforming
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Transforming
  nameWithType: XmlDataSource.Transforming
  fullName: System.Web.UI.WebControls.XmlDataSource.Transforming
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.XmlDataSource.XPath
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XPath
  nameWithType: XmlDataSource.XPath
  fullName: System.Web.UI.WebControls.XmlDataSource.XPath
- uid: System.Web.UI.WebControls.XmlDataSource.#ctor*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XmlDataSource
  nameWithType: XmlDataSource.XmlDataSource
- uid: System.Web.UI.WebControls.XmlDataSource.CacheDuration*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheDuration
  nameWithType: XmlDataSource.CacheDuration
- uid: System.Web.UI.WebControls.XmlDataSource.CacheExpirationPolicy*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheExpirationPolicy
  nameWithType: XmlDataSource.CacheExpirationPolicy
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyContext*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyContext
  nameWithType: XmlDataSource.CacheKeyContext
- uid: System.Web.UI.WebControls.XmlDataSource.CacheKeyDependency*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: CacheKeyDependency
  nameWithType: XmlDataSource.CacheKeyDependency
- uid: System.Web.UI.WebControls.XmlDataSource.Data*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Data
  nameWithType: XmlDataSource.Data
- uid: System.Web.UI.WebControls.XmlDataSource.DataFile*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: DataFile
  nameWithType: XmlDataSource.DataFile
- uid: System.Web.UI.WebControls.XmlDataSource.EnableCaching*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: EnableCaching
  nameWithType: XmlDataSource.EnableCaching
- uid: System.Web.UI.WebControls.XmlDataSource.GetHierarchicalView*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetHierarchicalView
  nameWithType: XmlDataSource.GetHierarchicalView
- uid: System.Web.UI.WebControls.XmlDataSource.GetXmlDocument*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: GetXmlDocument
  nameWithType: XmlDataSource.GetXmlDocument
- uid: System.Web.UI.WebControls.XmlDataSource.OnTransforming*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: OnTransforming
  nameWithType: XmlDataSource.OnTransforming
- uid: System.Web.UI.WebControls.XmlDataSource.Save*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Save
  nameWithType: XmlDataSource.Save
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#ContainsListCollection*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.ContainsListCollection
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.ContainsListCollection
- uid: System.Web.UI.WebControls.XmlDataSource.System#ComponentModel#IListSource#GetList*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.ComponentModel.IListSource.GetList
  nameWithType: XmlDataSource.System.ComponentModel.IListSource.GetList
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetView*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetView
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetView
- uid: System.Web.UI.WebControls.XmlDataSource.System#Web#UI#IDataSource#GetViewNames*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: System.Web.UI.IDataSource.GetViewNames
  nameWithType: XmlDataSource.System.Web.UI.IDataSource.GetViewNames
- uid: System.Web.UI.WebControls.XmlDataSource.Transform*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: Transform
  nameWithType: XmlDataSource.Transform
- uid: System.Web.UI.WebControls.XmlDataSource.TransformArgumentList*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformArgumentList
  nameWithType: XmlDataSource.TransformArgumentList
- uid: System.Web.UI.WebControls.XmlDataSource.TransformFile*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: TransformFile
  nameWithType: XmlDataSource.TransformFile
- uid: System.Web.UI.WebControls.XmlDataSource.XPath*
  parent: System.Web.UI.WebControls.XmlDataSource
  isExternal: false
  name: XPath
  nameWithType: XmlDataSource.XPath
