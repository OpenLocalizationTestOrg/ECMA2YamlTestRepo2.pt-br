### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.WebServiceHandlerFactory
  id: WebServiceHandlerFactory
  children:
  - System.Web.Services.Protocols.WebServiceHandlerFactory.#ctor
  - System.Web.Services.Protocols.WebServiceHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  - System.Web.Services.Protocols.WebServiceHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  langs:
  - csharp
  name: WebServiceHandlerFactory
  nameWithType: WebServiceHandlerFactory
  fullName: System.Web.Services.Protocols.WebServiceHandlerFactory
  type: Class
  summary: "Dinamicamente fabrica instâncias do manipulador de serviço da Web, cujo tipo ou tipos de implementam o <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> interface."
  remarks: "O <xref:System.Web.IHttpHandler>interface estabelece o contrato que o ASP.NET usa para processar solicitações HTTP da Web com manipuladores HTTP personalizados de entrada.</xref:System.Web.IHttpHandler> A classe WebServiceHandlerFactory produz uma instância de um <xref:System.Web.IHttpHandler>implementação para lidar com solicitações de serviço Web.</xref:System.Web.IHttpHandler>"
  syntax:
    content: 'public class WebServiceHandlerFactory : System.Web.IHttpHandlerFactory'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpHandlerFactory
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebServiceHandlerFactory.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.WebServiceHandlerFactory
  langs:
  - csharp
  name: WebServiceHandlerFactory()
  nameWithType: WebServiceHandlerFactory.WebServiceHandlerFactory()
  fullName: System.Web.Services.Protocols.WebServiceHandlerFactory.WebServiceHandlerFactory()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Services.Protocols.WebServiceHandlerFactory&quot;> </xref> classe."
  syntax:
    content: public WebServiceHandlerFactory ();
    parameters: []
  overload: System.Web.Services.Protocols.WebServiceHandlerFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebServiceHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  id: GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.Services.Protocols.WebServiceHandlerFactory
  langs:
  - csharp
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: WebServiceHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.Services.Protocols.WebServiceHandlerFactory.GetHandler(HttpContext,String,String,String)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retorna um <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> instância."
  syntax:
    content: public System.Web.IHttpHandler GetHandler (System.Web.HttpContext context, string verb, string url, string filePath);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Um <xref href=&quot;System.Web.HttpContext&quot;> </xref> que fornece referências a objetos do servidor intrínsecos (por exemplo, <> </> *>, <> </> *>, <> </> *>, e <> </> *>) usado para atender solicitações HTTP."
    - id: verb
      type: System.String
      description: "Método (GET ou POST) que usa o cliente de transferência de dados HTTP."
    - id: url
      type: System.String
      description: "A URL bruta do recurso solicitado."
    - id: filePath
      type: System.String
      description: "O caminho do sistema de arquivos do recurso solicitado."
    return:
      type: System.Web.IHttpHandler
      description: "Um <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> instância."
  overload: System.Web.Services.Protocols.WebServiceHandlerFactory.GetHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.WebServiceHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  id: ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.Services.Protocols.WebServiceHandlerFactory
  langs:
  - csharp
  name: ReleaseHandler(IHttpHandler)
  nameWithType: WebServiceHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.Services.Protocols.WebServiceHandlerFactory.ReleaseHandler(IHttpHandler)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Versões de <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> instância."
  remarks: "Não há nenhum recurso associado a um manipulador de instância que o <xref:System.Web.Services.Protocols.WebServiceHandlerFactory>a classe precisa liberar.</xref:System.Web.Services.Protocols.WebServiceHandlerFactory>"
  syntax:
    content: public void ReleaseHandler (System.Web.IHttpHandler handler);
    parameters:
    - id: handler
      type: System.Web.IHttpHandler
      description: "O <xref href=&quot;System.Web.IHttpHandler&quot;> </xref> instância para versão."
  overload: System.Web.Services.Protocols.WebServiceHandlerFactory.ReleaseHandler*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Services.Protocols.WebServiceHandlerFactory.#ctor
  parent: System.Web.Services.Protocols.WebServiceHandlerFactory
  isExternal: false
  name: WebServiceHandlerFactory()
  nameWithType: WebServiceHandlerFactory.WebServiceHandlerFactory()
  fullName: System.Web.Services.Protocols.WebServiceHandlerFactory.WebServiceHandlerFactory()
- uid: System.Web.Services.Protocols.WebServiceHandlerFactory.GetHandler(System.Web.HttpContext,System.String,System.String,System.String)
  parent: System.Web.Services.Protocols.WebServiceHandlerFactory
  isExternal: false
  name: GetHandler(HttpContext,String,String,String)
  nameWithType: WebServiceHandlerFactory.GetHandler(HttpContext,String,String,String)
  fullName: System.Web.Services.Protocols.WebServiceHandlerFactory.GetHandler(HttpContext,String,String,String)
- uid: System.Web.IHttpHandler
  parent: System.Web
  isExternal: false
  name: IHttpHandler
  nameWithType: IHttpHandler
  fullName: System.Web.IHttpHandler
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.WebServiceHandlerFactory.ReleaseHandler(System.Web.IHttpHandler)
  parent: System.Web.Services.Protocols.WebServiceHandlerFactory
  isExternal: false
  name: ReleaseHandler(IHttpHandler)
  nameWithType: WebServiceHandlerFactory.ReleaseHandler(IHttpHandler)
  fullName: System.Web.Services.Protocols.WebServiceHandlerFactory.ReleaseHandler(IHttpHandler)
- uid: System.Web.Services.Protocols.WebServiceHandlerFactory.#ctor*
  parent: System.Web.Services.Protocols.WebServiceHandlerFactory
  isExternal: false
  name: WebServiceHandlerFactory
  nameWithType: WebServiceHandlerFactory.WebServiceHandlerFactory
- uid: System.Web.Services.Protocols.WebServiceHandlerFactory.GetHandler*
  parent: System.Web.Services.Protocols.WebServiceHandlerFactory
  isExternal: false
  name: GetHandler
  nameWithType: WebServiceHandlerFactory.GetHandler
- uid: System.Web.Services.Protocols.WebServiceHandlerFactory.ReleaseHandler*
  parent: System.Web.Services.Protocols.WebServiceHandlerFactory
  isExternal: false
  name: ReleaseHandler
  nameWithType: WebServiceHandlerFactory.ReleaseHandler
