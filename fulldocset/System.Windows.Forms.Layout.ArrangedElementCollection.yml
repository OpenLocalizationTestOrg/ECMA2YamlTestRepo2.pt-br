### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Layout.ArrangedElementCollection
  id: ArrangedElementCollection
  children:
  - System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)
  - System.Windows.Forms.Layout.ArrangedElementCollection.Count
  - System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator
  - System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode
  - System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)
  - System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)
  langs:
  - csharp
  name: ArrangedElementCollection
  nameWithType: ArrangedElementCollection
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection
  type: Class
  summary: "Representa uma coleção de objetos."
  remarks: "A classe ArrangedElementCollection representa uma coleção de objetos organizados em uma superfície de design ou dentro de um pai <xref:System.Windows.Forms.ContainerControl?displayProperty=fullName>.</xref:System.Windows.Forms.ContainerControl?displayProperty=fullName>       Não há nenhum construtor público definido em ArrangedElementCollection porque ele é projetado para ser usado apenas internamente dentro de [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)]. No entanto, as classes derivadas de ArrangedElementCollection, como <xref:System.Windows.Forms.Control.ControlCollection?displayProperty=fullName>, estão disponíveis para o desenvolvedor.</xref:System.Windows.Forms.Control.ControlCollection?displayProperty=fullName>"
  syntax:
    content: 'public class ArrangedElementCollection : System.Collections.IList'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IList
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: ArrangedElementCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Copia todo o conteúdo desta coleção para um unidimensional compatível <xref:System.Array>, começando no índice especificado da matriz de destino.</xref:System.Array>"
  remarks: "O tipo da matriz especificada deve ser compatível com a coleção de origem.       Esse método usa o <xref:System.Array.Copy%2A?displayProperty=fullName>método para copiar os elementos.</xref:System.Array.Copy%2A?displayProperty=fullName>"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "O unidimensional <xref:System.Array>que é o destino dos elementos copiados da coleção atual.</xref:System.Array> A matriz deve ter indexação com base em zero."
    - id: index
      type: System.Int32
      description: "O índice de base zero no `array` no qual a cópia começa."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>é menor que 0."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>é multidimensional.       - ou - o número de elementos na coleção de origem é maior que o espaço disponível do <code>index</code> ao final da <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O tipo de elemento de origem não pode ser convertido automaticamente para o tipo de <code> array </code>."
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.Count
  id: Count
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: Count
  nameWithType: ArrangedElementCollection.Count
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.Count
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Obtém o número de elementos na coleção."
  remarks: "Quando necessário, a capacidade da coleção aumentará dinamicamente para aceitar mais elementos."
  syntax:
    content: public virtual int Count { get; }
    return:
      type: System.Int32
      description: "O número de elementos contidos no momento na coleção."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ArrangedElementCollection.Equals(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.Equals(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Determina se dois <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref> instâncias são iguais."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref> para comparar com a atual <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref> é igual à atual <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator
  id: GetEnumerator
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: ArrangedElementCollection.GetEnumerator()
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Retorna um enumerador para a coleção inteira."
  remarks: "Normalmente o enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de thread-safe. Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção. Para garantir a segurança de thread durante a enumeração, você pode seguir uma das seguintes estratégias:-bloquear a coleção durante toda a enumeração usando <xref:System.Threading.Monitor>.</xref:System.Threading.Monitor>      -Capturar e manipular as exceções que resultam de alterações feitas por outros threads."
  syntax:
    content: public virtual System.Collections.IEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um <xref:System.Collections.IEnumerator>para toda a coleção.</xref:System.Collections.IEnumerator>"
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode
  id: GetHashCode
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ArrangedElementCollection.GetHashCode()
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Retorna o código hash para essa instância."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash para a atual <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref>."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly
  id: IsReadOnly
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: ArrangedElementCollection.IsReadOnly
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Obtém um valor que indica se a coleção é somente leitura."
  remarks: "Uma coleção somente leitura não permite a adição, remoção ou modificação de elementos após a criação da coleção.       Uma coleção somente leitura é simplesmente uma coleção com um wrapper que impede a modificação da coleção. Se forem feitas alterações à coleção subjacente, a coleção somente leitura reflete as alterações."
  syntax:
    content: public virtual bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a coleção é somente leitura; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized
  id: System#Collections#ICollection#IsSynchronized
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ArrangedElementCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.ICollection.IsSynchronized
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Para obter uma descrição desse membro, consulte o &lt;xref:System.Collections.ICollection.IsSynchronized%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Esse método é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Forms.Layout.ArrangedElementCollection>instância é convertida em um <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: bool System.Collections.ICollection.IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se acessar para o <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref> é sincronizado (thread-safe); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot
  id: System#Collections#ICollection#SyncRoot
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ArrangedElementCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.ICollection.SyncRoot
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Para obter uma descrição desse membro, consulte o &lt;xref:System.Collections.ICollection.SyncRoot%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Esse método é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Forms.Layout.ArrangedElementCollection>instância é convertida em um <xref:System.Collections.ICollection>interface.</xref:System.Collections.ICollection> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: object System.Collections.ICollection.SyncRoot { get; }
    return:
      type: System.Object
      description: "Um objeto que pode ser usado para sincronizar o acesso a <xref href=&quot;System.Windows.Forms.Layout.ArrangedElementCollection&quot;> </xref>."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)
  id: System#Collections#IList#Add(System.Object)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Add(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Add(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Para obter uma descrição desse membro, consulte o &lt;xref:System.Collections.IList.Add%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Forms.Layout.ArrangedElementCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: int IList.Add (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Para adicionar a <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
    return:
      type: System.Int32
      description: "A posição na qual o novo elemento foi inserido."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear
  id: System#Collections#IList#Clear
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Clear()
  nameWithType: ArrangedElementCollection.System.Collections.IList.Clear()
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Clear()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Para obter uma descrição desse membro, consulte o &lt;xref:System.Collections.IList.Clear%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Forms.Layout.ArrangedElementCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: void IList.Clear ();
    parameters: []
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)
  id: System#Collections#IList#Contains(System.Object)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Contains(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Contains(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Para obter uma descrição desse membro, consulte o &lt;xref:System.Collections.IList.Contains%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Forms.Layout.ArrangedElementCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: bool IList.Contains (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Para localizar em <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Object>for encontrado no <xref:System.Collections.IList>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)
  id: System#Collections#IList#IndexOf(System.Object)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.IndexOf(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Para obter uma descrição desse membro, consulte o &lt;xref:System.Collections.IList.IndexOf%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Forms.Layout.ArrangedElementCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: int IList.IndexOf (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Para localizar em <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
    return:
      type: System.Int32
      description: "O índice do <code> value </code> encontrado na lista; caso contrário, -1."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  id: System#Collections#IList#Insert(System.Int32,System.Object)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Insert(Int32,Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Para obter uma descrição desse membro, consulte o &lt;xref:System.Collections.IList.Insert%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Forms.Layout.ArrangedElementCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: void IList.Insert (int index, object value);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice de base zero no qual `value` devem ser inseridos."
    - id: value
      type: System.Object
      description: "<xref:System.Object>Para inserir em <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize
  id: System#Collections#IList#IsFixedSize
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.IsFixedSize
  nameWithType: ArrangedElementCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.IsFixedSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Para obter uma descrição desse membro, consulte o &lt;xref:System.Collections.IList.IsFixedSize%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Esse método é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Forms.Layout.ArrangedElementCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: bool System.Collections.IList.IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Collections.IList>tem um fixa tamanho; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Collections.IList>"
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)
  id: System#Collections#IList#Item(System.Int32)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Item(Int32)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Item(Int32)
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Para obter uma descrição desse membro, consulte o &lt;xref:System.Collections.IList.Item%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Esse método é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Forms.Layout.ArrangedElementCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: object System.Collections.IList.Item[int index] { get; set; }
    parameters:
    - id: index
      type: System.Int32
      description: "O índice com base em zero do elemento a ser obtido."
    return:
      type: System.Object
      description: "O elemento no índice especificado."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)
  id: System#Collections#IList#Remove(System.Object)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.Remove(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Remove(Object)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Para obter uma descrição desse membro, consulte o &lt;xref:System.Collections.IList.Remove%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Forms.Layout.ArrangedElementCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: void IList.Remove (object value);
    parameters:
    - id: value
      type: System.Object
      description: "<xref:System.Object>Para remover de <xref:System.Collections.IList>.</xref:System.Collections.IList> </xref:System.Object>"
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)
  id: System#Collections#IList#RemoveAt(System.Int32)
  isEii: true
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  langs:
  - csharp
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: ArrangedElementCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.RemoveAt(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms.Layout
  summary: "Para obter uma descrição desse membro, consulte o &lt;xref:System.Collections.IList.RemoveAt%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Windows.Forms.Layout.ArrangedElementCollection>instância é convertida em um <xref:System.Collections.IList>interface.</xref:System.Collections.IList> </xref:System.Windows.Forms.Layout.ArrangedElementCollection>"
  syntax:
    content: void IList.RemoveAt (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice com base em zero do item a ser removido."
  overload: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(System.Array,System.Int32)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: ArrangedElementCollection.CopyTo(Array,Int32)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.Count
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: Count
  nameWithType: ArrangedElementCollection.Count
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.Count
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.Equals(System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: Equals(Object)
  nameWithType: ArrangedElementCollection.Equals(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: GetEnumerator()
  nameWithType: ArrangedElementCollection.GetEnumerator()
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: GetHashCode()
  nameWithType: ArrangedElementCollection.GetHashCode()
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode()
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ArrangedElementCollection.IsReadOnly
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ArrangedElementCollection.System.Collections.ICollection.IsSynchronized
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ArrangedElementCollection.System.Collections.ICollection.SyncRoot
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add(System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Add(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Add(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Add(Object)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Clear()
  nameWithType: ArrangedElementCollection.System.Collections.IList.Clear()
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Clear()
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains(System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Contains(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Contains(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Contains(Object)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf(System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.IndexOf(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.IndexOf(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.IndexOf(Object)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert(System.Int32,System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Insert(Int32,Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Insert(Int32,Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Insert(Int32,Object)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ArrangedElementCollection.System.Collections.IList.IsFixedSize
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item(System.Int32)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Item(Int32)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Item(Int32)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Item(Int32)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove(System.Object)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Remove(Object)
  nameWithType: ArrangedElementCollection.System.Collections.IList.Remove(Object)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.Remove(Object)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt(System.Int32)
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt(Int32)
  nameWithType: ArrangedElementCollection.System.Collections.IList.RemoveAt(Int32)
  fullName: System.Windows.Forms.Layout.ArrangedElementCollection.System.Collections.IList.RemoveAt(Int32)
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.CopyTo*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: CopyTo
  nameWithType: ArrangedElementCollection.CopyTo
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.Count*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: Count
  nameWithType: ArrangedElementCollection.Count
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.Equals*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: Equals
  nameWithType: ArrangedElementCollection.Equals
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.GetEnumerator*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: GetEnumerator
  nameWithType: ArrangedElementCollection.GetEnumerator
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.GetHashCode*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: GetHashCode
  nameWithType: ArrangedElementCollection.GetHashCode
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.IsReadOnly*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: IsReadOnly
  nameWithType: ArrangedElementCollection.IsReadOnly
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#IsSynchronized*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.ICollection.IsSynchronized
  nameWithType: ArrangedElementCollection.System.Collections.ICollection.IsSynchronized
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#ICollection#SyncRoot*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.ICollection.SyncRoot
  nameWithType: ArrangedElementCollection.System.Collections.ICollection.SyncRoot
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Add*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Add
  nameWithType: ArrangedElementCollection.System.Collections.IList.Add
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Clear*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Clear
  nameWithType: ArrangedElementCollection.System.Collections.IList.Clear
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Contains*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Contains
  nameWithType: ArrangedElementCollection.System.Collections.IList.Contains
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IndexOf*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.IndexOf
  nameWithType: ArrangedElementCollection.System.Collections.IList.IndexOf
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Insert*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Insert
  nameWithType: ArrangedElementCollection.System.Collections.IList.Insert
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#IsFixedSize*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.IsFixedSize
  nameWithType: ArrangedElementCollection.System.Collections.IList.IsFixedSize
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Item*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Item
  nameWithType: ArrangedElementCollection.System.Collections.IList.Item
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#Remove*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.Remove
  nameWithType: ArrangedElementCollection.System.Collections.IList.Remove
- uid: System.Windows.Forms.Layout.ArrangedElementCollection.System#Collections#IList#RemoveAt*
  parent: System.Windows.Forms.Layout.ArrangedElementCollection
  isExternal: false
  name: System.Collections.IList.RemoveAt
  nameWithType: ArrangedElementCollection.System.Collections.IList.RemoveAt
