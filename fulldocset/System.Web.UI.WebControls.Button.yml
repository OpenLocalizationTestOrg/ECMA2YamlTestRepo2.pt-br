### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.Button
  id: Button
  children:
  - System.Web.UI.WebControls.Button.#ctor
  - System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.CausesValidation
  - System.Web.UI.WebControls.Button.Click
  - System.Web.UI.WebControls.Button.Command
  - System.Web.UI.WebControls.Button.CommandArgument
  - System.Web.UI.WebControls.Button.CommandName
  - System.Web.UI.WebControls.Button.GetPostBackOptions
  - System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  - System.Web.UI.WebControls.Button.OnClientClick
  - System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  - System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.Button.PostBackUrl
  - System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.Button.Text
  - System.Web.UI.WebControls.Button.UseSubmitBehavior
  - System.Web.UI.WebControls.Button.ValidationGroup
  langs:
  - csharp
  name: Button
  nameWithType: Button
  fullName: System.Web.UI.WebControls.Button
  type: Class
  summary: "Exibe um controle de botão de ação na página da Web."
  remarks: "Neste tópico:- [Introdução](#Introduction)      -   [eventos de servidor e comportamento de Postback do botão](#ButtonPostbackBehaviorandServerEvents)      -   [tratamento de eventos do botão no Script de cliente](#HandlingButtonEventsinClientScript)      -   [validação e controles de botão](#ButtonControlsAndValidation)      -   [botões em controles de dados](#ButtonsInDataControls)      -   [vinculação de dados para os controles](#BindingDataToTheControls)      -   [usando botões com controles do UpdatePanel](#UsingButtonsWithUpdatePanelControls)      -   [sintaxe declarativa](#DeclarativeSyntax) <a name=&quot;Introduction&quot;> </a> # # Introdução usar o controle de botão para criar um botão de ação na página da Web que permite aos usuários para postar uma página para o servidor.       O controle aciona um evento no código do servidor que você pode manipular para responder à postagem. Ele também pode disparar um evento no script de cliente que você pode manipular antes da página é enviada ou que pode executar e, em seguida, cancelar o envio da página.      > [!NOTE] > ASP.NET inclui vários tipos de controles de botão, cada um deles aparece diferente em páginas da Web. Eles são o controle de botão, que renderiza como um botão de ação; o <xref:System.Web.UI.WebControls.LinkButton>controle, que renderiza como um link; e o <xref:System.Web.UI.WebControls.ImageButton>controle, que é renderizado como uma imagem, e o <xref:System.Web.UI.WebControls.ImageMap>controle, que permite que você crie um gráfico com pontos de acesso que os usuários podem clicar.</xref:System.Web.UI.WebControls.ImageMap> </xref:System.Web.UI.WebControls.ImageButton> </xref:System.Web.UI.WebControls.LinkButton> Por padrão, todos os controles de botão enviarem a página quando clicado. Você também pode usar o <xref:System.Web.UI.HtmlControls.HtmlButton>e <xref:System.Web.UI.HtmlControls.HtmlInputButton>controles para criar botões na página que são programáveis no código do servidor.</xref:System.Web.UI.HtmlControls.HtmlInputButton> </xref:System.Web.UI.HtmlControls.HtmlButton> Para obter detalhes sobre as diferenças entre os controles de servidor Web e HTML, consulte [visão geral dos controles de servidor Web do ASP.NET](~/add/includes/ajax-current-ext-md.md).       Por padrão, um controle de botão é um botão de envio. Um botão de envio não tem um nome de comando (especificado pelo <xref:System.Web.UI.WebControls.Button.CommandName%2A>propriedade) associado com o botão e simplesmente postagens de página da Web de volta para o servidor.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Você pode fornecer um manipulador de eventos para o <xref:System.Web.UI.WebControls.Button.Click>eventos para controlar programaticamente as ações executadas quando clicar no botão Enviar.</xref:System.Web.UI.WebControls.Button.Click>       Um botão de comando tem um nome de comando associado ao botão, como `Sort`, definindo o <xref:System.Web.UI.WebControls.Button.CommandName%2A>propriedade.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Isso permite que você crie várias controles em uma página da Web e determinar programaticamente o controle de botão é clicado. Você também pode usar o <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>propriedade com um botão de comando para fornecer informações adicionais sobre o comando para executar, como `Ascending`.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Você pode fornecer um manipulador de eventos para o <xref:System.Web.UI.WebControls.Button.Command>eventos para controlar programaticamente as ações executadas quando o botão de comando é clicado.</xref:System.Web.UI.WebControls.Button.Command>      <a name=&quot;ButtonPostbackBehaviorandServerEvents&quot;></a># # Comportamento de Postback do botão de e eventos de servidor quando um usuário clica em qualquer botão de controle de servidor Web, a página é enviada ao servidor. Isso faz com que a página da Web a ser processado e todos os eventos pendentes a serem gerados no código de servidor. Quando todos os processamentos de controle e de página for concluída, a página renderiza a próprio para o navegador novamente.       Os botões podem gerar seus próprios <xref:System.Web.UI.WebControls.Button.Click>eventos ou <xref:System.Web.UI.WebControls.Button.Command>evento, que você pode manipular usando o código de servidor.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> Isso é diferente de eventos em páginas HTML tradicionais ou em aplicativos da Web baseado em cliente, onde um botão `onclick` evento é manipulado usando JavaScript que é executado no cliente. Para obter mais informações, consulte [modelo de evento de controle do ASP.NET Web Forms Server](~/add/includes/ajax-current-ext-md.md).       Quando os usuários em um controle de botão, a página é enviada para o servidor. Por padrão, a página é enviada de volta para si mesmo, você pode configurar os botões para postar a página atual para outra página. Isso pode ser útil para a criação de formulários de várias páginas. Para obter detalhes, consulte [entre páginas de lançamento em Web Forms do ASP.NET](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;HandlingButtonEventsinClientScript&quot;></a># # Manipulação de eventos do botão em controles de botão de Script de cliente pode gerar eventos de servidor e eventos do cliente. Eventos de servidor ocorrem depois do postback, e eles são manipulados no código do lado do servidor que você escreve para a página. Eventos do cliente são tratados no script de cliente, normalmente ECMAScript (JavaScript) e são disparados antes que a página é enviada. Adicionando eventos do lado do cliente para controles de botão do ASP.NET, você pode executar tarefas como exibir caixas de diálogo de confirmação antes de enviar a página e possivelmente cancelar o envio. Para obter detalhes, consulte [Script de cliente em páginas da Web do ASP.NET](~/add/includes/ajax-current-ext-md.md) e [como: responder a eventos de controle de servidor de Web de botão no Script de cliente](~/add/includes/ajax-current-ext-md.md).       Você também poderá o controle de botão também use script de cliente para executar o postback (em vez de simplesmente executar uma operação HTTP POST). Isso pode ser útil se você deseja manipular programaticamente o postback, como anexá-lo a outros elementos na página. Você pode definir o controle de botão <xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>propriedade `true` fazer com que o controle de botão usar o script de cliente com base em postback.</xref:System.Web.UI.WebControls.Button.UseSubmitBehavior%2A>      <a name=&quot;ButtonControlsAndValidation&quot;></a># # E controles de botão de validação se uma página contém controles de validação ASP.NET, por padrão, clicar em um controle de botão faz com que o controle de validação executar sua verificação. Se a validação do lado do cliente está habilitada para um controle de validação, a página não é enviada se uma verificação de validação falhou.       A tabela a seguir descreve as propriedades suportadas por controles de botão que permitem controlar o processo de validação com mais precisão.      | Propriedade | Descrição |   |--------------|-----------------|   | <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>| Especifica se o botão também executa uma verificação de validação.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Defina essa propriedade como `false` para impedir que uma verificação de validação. |   | <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>| Permite que você especifique quais validadores na página serão chamados quando o botão é clicado.</xref:System.Web.UI.WebControls.Button.ValidationGroup%2A> Se nenhum grupo de validação é estabelecido, um clique de botão chamará todos os validadores que estão na página. |       Para obter mais informações, consulte [Validando a entrada do usuário em páginas da Web do ASP.NET](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;ButtonsInDataControls&quot;></a># # Botões em controles de servidor Web de botão de controles de dados são geralmente usados em controles de dados, como no <xref:System.Web.UI.WebControls.DataList>, <xref:System.Web.UI.WebControls.GridView>, e <xref:System.Web.UI.WebControls.Repeater>controles de lista.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DataList> Nesses casos, você normalmente não responde diretamente para o botão de evento de clique. Em vez disso, um botão em um controle de dados gera um evento que é específico para o controle de dados. Por exemplo, no <xref:System.Web.UI.WebControls.DataList>controle, um botão pode disparar o <xref:System.Web.UI.WebControls.DataList>do controle <xref:System.Web.UI.WebControls.DataList.ItemCommand>eventos em vez de gerar o controle de botão <xref:System.Web.UI.WebControls.Button.Click>evento.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.DataList.ItemCommand> </xref:System.Web.UI.WebControls.DataList> </xref:System.Web.UI.WebControls.DataList>       Como os controles de lista associado a dados podem conter muitos botões, você pode definir o botão <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>propriedade para especificar um valor para passar como parte do evento.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A> Em seguida, você pode testar este argumento ver qual botão foi clicado.      <a name=&quot;BindingDataToTheControls&quot;></a># # Associação de dados para os controles que você pode vincular os controles de servidor da Web de botão a uma fonte de dados para controlar as configurações de propriedade dinamicamente. Por exemplo, você pode definir um botão <xref:System.Web.UI.WebControls.Button.Text%2A>propriedade usando associação de dados.</xref:System.Web.UI.WebControls.Button.Text%2A>      <a name=&quot;UsingButtonsWithUpdatePanelControls&quot;></a># # Usando os botões com a renderização de página parcial de controles do UpdatePanel torna possível atualizar partes de uma página sem um postback. <xref:System.Web.UI.UpdatePanel>controles permitem que você marque partes da página que participam de renderização parcial da página.</xref:System.Web.UI.UpdatePanel> Por padrão, o comportamento dos controles dentro de um <xref:System.Web.UI.UpdatePanel>controle, incluindo controles de botão, é realizar um postback assíncrono em vez de um postback.</xref:System.Web.UI.UpdatePanel> Isso atualiza somente o conteúdo do <xref:System.Web.UI.UpdatePanel>controlar do qual se origina a postagem.</xref:System.Web.UI.UpdatePanel>       Além de cenário de um controle de botão que está dentro de um <xref:System.Web.UI.UpdatePanel>controle, você pode usar controles de botão com <xref:System.Web.UI.UpdatePanel>controles nos seguintes cenários:-definindo um controle de botão que está fora de um <xref:System.Web.UI.UpdatePanel>controlar como um <xref:System.Web.UI.AsyncPostBackTrigger>controle do painel.</xref:System.Web.UI.AsyncPostBackTrigger> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> Quando o botão é clicado, ele executa um postback assíncrono e atualiza o conteúdo do painel.      -Definir um controle de botão que está dentro de um <xref:System.Web.UI.UpdatePanel>controlar como um <xref:System.Web.UI.PostBackTrigger>para o painel.</xref:System.Web.UI.PostBackTrigger> </xref:System.Web.UI.UpdatePanel> Quando o botão é clicado, ele executa uma postagem mesmo que ele está dentro de um <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel>       Para obter mais informações sobre a página parcial de renderização e usando <xref:System.Web.UI.UpdatePanel>controles, consulte [visão geral do controle UpdatePanel](~/add/includes/ajax-current-ext-md.md) e [visão geral de renderização de página parcial](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.UpdatePanel>      <a name=&quot;DeclarativeSyntax&quot;></a># # Sintaxe de declarativa```   <asp:Button       AccessKey=&quot;string&quot;       BackColor=&quot;color name|#dddddd&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       CausesValidation=&quot;True|False&quot;       CommandArgument=&quot;string&quot;       CommandName=&quot;string&quot;       CssClass=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       ForeColor=&quot;color name|#dddddd&quot;       Height=&quot;size&quot;       ID=&quot;string&quot;       OnClick=&quot;Click event handler&quot;       OnClientClick=&quot;string&quot;       OnCommand=&quot;Command event handler&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PostBackUrl=&quot;uri&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       Text=&quot;string&quot;       ToolTip=&quot;string&quot;       UseSubmitBehavior=&quot;True|False&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   />   ```"
  example:
  - "The following code example demonstrates how to create a Submit Button control that posts the Web page content back to the server.  \n  \n [!code-cs[Classic Button Example#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_1.aspx)]\n [!code-vb[Classic Button Example#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_1.aspx)]  \n  \n The following code example demonstrates how to create a Command Button control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_42_2.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_42_2.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.ButtonDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.DataBindingHandler("System.Web.UI.Design.TextDataBindingHandler, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.SupportsEventValidation]

      [System.Web.UI.ToolboxData("<{0}:Button runat="server" Text="Button"></{0}:Button>")]

      public class Button : System.Web.UI.WebControls.WebControl, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IButtonControl
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  implements:
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IButtonControl
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnInit(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CreateControlStyle
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.LoadViewState(System.Object)
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SaveViewState
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagKey
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.TrackViewState
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> classe."
  remarks: "Use este construtor para criar e inicializar uma nova instância de <xref:System.Web.UI.WebControls.Button>classe.</xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to create and initialize a new instance of the <xref:System.Web.UI.WebControls.Button> class.  \n  \n [!code-cs[ButtonCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_106_1.aspx)]\n [!code-vb[ButtonCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_106_1.aspx)]"
  syntax:
    content: public Button ();
    parameters: []
  overload: System.Web.UI.WebControls.Button.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  id: AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Adiciona os atributos do <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle o fluxo de saída para renderização no cliente."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the AddAttributesToRender method in a custom server control, so that the <xref:System.Web.UI.WebControls.Button> text always displays in red.  \n  \n [!code-cs[CustomButtonAddAttributesToRender#1](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_1.aspx)]\n [!code-vb[CustomButtonAddAttributesToRender#1](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_1.aspx)]  \n[!code-cs[CustomButtonAddAttributesToRender#2](~/add/codesnippet/csharp/e2a4848c-bb88-4816-9064-_2.cs)]\n[!code-vb[CustomButtonAddAttributesToRender#2](~/add/codesnippet/visualbasic/e2a4848c-bb88-4816-9064-_2.vb)]"
  syntax:
    content: protected override void AddAttributesToRender (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que contém o fluxo de saída para renderizar no cliente."
  overload: System.Web.UI.WebControls.Button.AddAttributesToRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CausesValidation
  id: CausesValidation
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se a validação é executada quando o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle é clicado."
  remarks: "Por padrão, a validação de página é executada quando um <xref:System.Web.UI.WebControls.Button>controle é clicado.</xref:System.Web.UI.WebControls.Button> Validação de página determina se os controles de entrada associado com um controle de validação na página de que todos os passam as regras de validação especificadas pelo controle de validação.       Você pode especificar ou determinar se a validação é executada no cliente e o servidor quando um <xref:System.Web.UI.WebControls.Button>controle é clicado, usando a propriedade CausesValidation.</xref:System.Web.UI.WebControls.Button> Para impedir a validação do que está sendo executada, defina a propriedade CausesValidation `false`.      > [!NOTE] > Você deve definir a propriedade CausesValidation `false` quando você estiver usando o <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>propriedade volta para uma página diferente.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A> Verifique a validação explicitamente ao lançar uma página diferente. Para obter um exemplo, consulte a seção comentários a <xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>propriedade.</xref:System.Web.UI.WebControls.Button.PostBackUrl%2A>       Essa propriedade normalmente é definida como `false` para um `reset` ou `clear` botão para impedir que a validação do que está sendo executada quando o botão é clicado.       Quando o valor da propriedade CausesValidation é definido como `true`, você também pode usar o <xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>propriedade para especificar o nome do grupo de validação para o qual o <xref:System.Web.UI.WebControls.Button>controle aciona a validação.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.ValidationGroup%2A>       Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [capas e temas do ASP.NET](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CausesValidation property to prevent page validation from occurring. Note that the <xref:System.Web.UI.WebControls.BaseValidator.Validate%2A> method activates each validation control independently.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ButtonControlCausesValidation#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_269_1.aspx)]\n [!code-cs[ButtonControlCausesValidation#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_269_1.aspx)]"
  syntax:
    content: public virtual bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a validação é executada quando o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle é clicado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O valor padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Button.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Click
  id: Click
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle é clicado."
  remarks: "O evento de clique é gerado quando o <xref:System.Web.UI.WebControls.Button>controle é clicado.</xref:System.Web.UI.WebControls.Button> Esse evento é geralmente usado quando nenhum nome de comando é associado com o <xref:System.Web.UI.WebControls.Button>controle (por exemplo, com um botão de envio).</xref:System.Web.UI.WebControls.Button>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Click event in order to display a message on the Web page when the <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_21_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_21_1.aspx)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Command
  id: Command
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle é clicado."
  remarks: "O comando é gerado quando o <xref:System.Web.UI.WebControls.Button>controle é clicado.</xref:System.Web.UI.WebControls.Button> Esse evento é geralmente usado quando um nome de comando, como `Sort`, está associado a <xref:System.Web.UI.WebControls.Button>controle.</xref:System.Web.UI.WebControls.Button> Isso permite que você crie várias <xref:System.Web.UI.WebControls.Button>controles em uma Web página e determinar quais programaticamente <xref:System.Web.UI.WebControls.Button>controle é clicado.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > O comando é gerado por meio da hierarquia de controle na forma do `BubbleEvent`.       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the Command event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_140_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_140_2.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.CommandEventHandler Command;
    return:
      type: System.Web.UI.WebControls.CommandEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandArgument
  id: CommandArgument
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um parâmetro opcional passado para o <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> evento juntamente com o <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*> associado"
  remarks: "Use a propriedade CommandArgument para especificar um parâmetro que complementa o <xref:System.Web.UI.WebControls.Button.CommandName%2A>propriedade.</xref:System.Web.UI.WebControls.Button.CommandName%2A>      > [!NOTE] > Embora você possa definir a propriedade CommandArgument por si só, ele é normalmente somente usado quando o <xref:System.Web.UI.WebControls.Button.CommandName%2A>propriedade também está definida.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       A complementa a propriedade CommandArgument o <xref:System.Web.UI.WebControls.Button.CommandName%2A>propriedade, permitindo que você forneça informações adicionais sobre o comando para executar.</xref:System.Web.UI.WebControls.Button.CommandName%2A> Por exemplo, se você definir o <xref:System.Web.UI.WebControls.Button.CommandName%2A>propriedade `Sort` e a propriedade CommandArgument para `Ascending`, você especifica um comando para classificar em ordem crescente.</xref:System.Web.UI.WebControls.Button.CommandName%2A>       Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [capas e temas do ASP.NET](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandArgument property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list in ascending order.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_977_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_977_1.aspx)]"
  syntax:
    content: public string CommandArgument { get; set; }
    return:
      type: System.String
      description: "Passado um parâmetro opcional para o <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> evento juntamente com o <xref:System.Web.UI.WebControls.Button.CommandName*>.</xref:System.Web.UI.WebControls.Button.CommandName*> associado O valor padrão é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.CommandArgument*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.CommandName
  id: CommandName
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome de comando associado a <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle é passado para o <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> eventos."
  remarks: "Quando você tiver vários <xref:System.Web.UI.WebControls.Button>controles em uma página da Web, use a propriedade CommandName para especificar ou determinar o nome do comando associado a cada <xref:System.Web.UI.WebControls.Button>controle.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button> Você pode definir a propriedade CommandName com qualquer cadeia de caracteres que identifica o comando para executar. Você pode determinar o nome do comando de programaticamente o <xref:System.Web.UI.WebControls.Button>controlar e executar as ações adequadas.</xref:System.Web.UI.WebControls.Button>       Informações adicionais sobre o comando, como `Ascending`, pode ser especificado usando o <xref:System.Web.UI.WebControls.Button.CommandArgument%2A>propriedade.</xref:System.Web.UI.WebControls.Button.CommandArgument%2A>       Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [capas e temas do ASP.NET](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the CommandName property to create a <xref:System.Web.UI.WebControls.Button> control that sorts a list.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_955_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_955_1.aspx)]"
  syntax:
    content: public string CommandName { get; set; }
    return:
      type: System.String
      description: "O nome do comando do <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle. O valor padrão é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.CommandName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  id: GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria um <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> objeto que representa o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> o comportamento de postback do controle."
  remarks: "O método GetPostBackOptions cria um <xref:System.Web.UI.PostBackOptions>objeto que representa o <xref:System.Web.UI.WebControls.Button>o comportamento de postback do controlam.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.PostBackOptions> O <xref:System.Web.UI.PostBackOptions>objeto, em seguida, é normalmente passado para o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName>método, que é usado para obter uma referência a uma função de script do lado do cliente que, quando chamado, faz com que o servidor de volta para a página.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%28System.Web.UI.PostBackOptions%29?displayProperty=fullName> </xref:System.Web.UI.PostBackOptions>       Esse método é usado principalmente por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.Button>classe.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual System.Web.UI.PostBackOptions GetPostBackOptions ();
    parameters: []
    return:
      type: System.Web.UI.PostBackOptions
      description: "Um <xref href=&quot;System.Web.UI.PostBackOptions&quot;> </xref> que representa o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> o comportamento de postback do controle."
  overload: System.Web.UI.WebControls.Button.GetPostBackOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> evento o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle."
  remarks: "O <xref:System.Web.UI.WebControls.Button.Click>é gerado quando o <xref:System.Web.UI.WebControls.Button>controle é clicado.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Click> Esse evento é geralmente usado quando nenhum nome de comando é associado com o <xref:System.Web.UI.WebControls.Button>controle (por exemplo, com um botão de envio).</xref:System.Web.UI.WebControls.Button>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnClick também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Click> event in order to display a simple message on the Web page.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_232_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_232_1.aspx)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Os dados do evento."
  overload: System.Web.UI.WebControls.Button.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnClientClick
  id: OnClientClick
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o script do lado do cliente que é executado quando um <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> do controle <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> é gerado."
  remarks: "Use a propriedade OnClientClick para especificar o script do lado do cliente adicional que é executado quando um <xref:System.Web.UI.WebControls.Button>do controle <xref:System.Web.UI.WebControls.Button.Click>é gerado.</xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button> O script que você especificar para esta propriedade é renderizada no <xref:System.Web.UI.WebControls.Button>do controle `OnClick` predefinidos de atributo, além do controle de script do lado do cliente.</xref:System.Web.UI.WebControls.Button>       Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [capas e temas do ASP.NET](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=192871).  \n  \n The following code example demonstrates how to use the OnClientClick property to specify additional client-side script that executes when a <xref:System.Web.UI.WebControls.Button> control is clicked.  \n  \n [!code-cs[Button.OnClientClick#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1351_1.aspx)]\n [!code-vb[Button.OnClientClick#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1351_1.aspx)]"
  syntax:
    content: public virtual string OnClientClick { get; set; }
    return:
      type: System.String
      description: "O script do lado do cliente que é executado quando um <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> do controle <xref href=&quot;System.Web.UI.WebControls.Button.Click&quot;> </xref> é gerado."
  overload: System.Web.UI.WebControls.Button.OnClientClick*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  id: OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.Button.Command&quot;> </xref> evento o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle."
  remarks: "O <xref:System.Web.UI.WebControls.Button.Command>é gerado quando o <xref:System.Web.UI.WebControls.Button>controle é clicado.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button.Command> Esse evento é geralmente usado quando um nome de comando, como `Sort`, está associado a <xref:System.Web.UI.WebControls.Button>controle.</xref:System.Web.UI.WebControls.Button> Isso permite que você crie várias <xref:System.Web.UI.WebControls.Button>controles em uma Web página e determinar quais programaticamente <xref:System.Web.UI.WebControls.Button>controle é clicado.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.WebControls.Button>      > [!NOTE] > O <xref:System.Web.UI.WebControls.Button.Command>é gerado por meio da hierarquia de controle na forma do `BubbleEvent`.</xref:System.Web.UI.WebControls.Button.Command>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnCommand também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to specify and code an event handler for the <xref:System.Web.UI.WebControls.Button.Command> event to sort a list when the <xref:System.Web.UI.WebControls.Button> control is clicked. This example specifies the event handler declaratively, using the <xref:System.Web.UI.WebControls.Button.OnClick%2A> property of the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonCommandNameArgument#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_1.aspx)]\n [!code-cs[ButtonCommandNameArgument#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_1.aspx)]  \n  \n The following code example demonstrates how to specify the event handler and programmatically add it to the event in the `Page_Load` method.  \n  \n [!code-cs[ButtonCommand#1](~/add/codesnippet/csharp/0fac6d1f-268b-4550-92d4-_2.aspx)]\n [!code-vb[ButtonCommand#1](~/add/codesnippet/visualbasic/0fac6d1f-268b-4550-92d4-_2.aspx)]"
  syntax:
    content: protected virtual void OnCommand (System.Web.UI.WebControls.CommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.CommandEventArgs
      description: "Os dados do evento."
  overload: System.Web.UI.WebControls.Button.OnCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se o botão foi clicado antes da renderização no cliente."
  remarks: "O método OnPreRender é usado principalmente por desenvolvedores de controle ao derivar uma classe personalizada do <xref:System.Web.UI.WebControls.Button>controle.</xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Os dados do evento."
  overload: System.Web.UI.WebControls.Button.OnPreRender*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  id: PostBackUrl
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a URL da página para enviar do atual página quando o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle é clicado."
  remarks: "The PostBackUrl property allows you to perform a cross-page post using the <xref:System.Web.UI.WebControls.Button> control.  \n  \n> [!NOTE]\n>  Only correctly specified paths work with this property. For example, relative paths (Test/default.aspx), absolute paths (https://localhost/WebApp/default.aspx) and virtual (~\\Test\\default.aspx) work correctly. Incorrectly formed paths such as \"/Test/default.aspx\" or \"\\Test\\default.aspx\" do not work. See [ASP.NET Web Project Paths](~/add/includes/ajax-current-ext-md.md) for a discussion on creating correct paths.  \n  \n Set the PostBackUrl property to the URL of the Web page to post to when the <xref:System.Web.UI.WebControls.Button> control is clicked. For example, specifying `Page2.aspx` causes the page that contains the <xref:System.Web.UI.WebControls.Button> control to post to `Page2.aspx`. If you do not specify a value for the PostBackUrl property, the page posts back to itself.  \n  \n> [!IMPORTANT]\n>  When performing a cross-page postback with controls with server-side validation, you should check that the page's <xref:System.Web.UI.Page.IsValid%2A> property is `true` before processing the postback. In the case of a cross-page postback, the page to check is the <xref:System.Web.UI.Page.PreviousPage%2A>. The following VB code shows how this is done:  \n  \n```  \nSub Page_Load(ByVal sender As Object, ByVal e As System.EventArgs) Handles Me.Load  \n        If Page.PreviousPage.IsValid Then  \n            ' Handle the post back  \n        Else  \n            Response.Write(\"Invalid\")  \n        End If  \nEnd Sub  \n```  \n  \n For more information on cross-page posting techniques, see [Cross-Page Posting in ASP.NET Web Forms](~/add/includes/ajax-current-ext-md.md).  \n  \n This property cannot be set by themes or style sheet themes. For more information, see <xref:System.Web.UI.ThemeableAttribute> and [ASP.NET Themes and Skins](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates how to use the PostBackUrl property to perform a cross-page post. When the user clicks the <xref:System.Web.UI.WebControls.Button> control, the page posts the value entered in the text box to the target page specified by the PostBackUrl property. To run this sample, you must also create a file for the target page in the same directory as this code example. The code for target page is provided in the next example.  \n  \n [!code-vb[Button.PostBackUrlProperty#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_1.aspx)]\n [!code-cs[Button.PostBackUrlProperty#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_1.aspx)]  \n  \n The following code example demonstrates how to use the <xref:System.Web.UI.Page.PreviousPage%2A?displayProperty=fullName> property to access a value that was posted from another page using the PostBackUrl property. This page gets the string that was posted from the previous page and displays it to the user. If you attempt to run this code example directly, you will get an error because the value of the `text` field will be `null`. Instead, use this code to create a target page and place the file in the same directory as the code for the previous example. The name of the file must correspond to the value specified for the PostBackUrl property in the previous example. When you run the code for the previous example, this page will execute automatically when the cross page post occurs.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.PostBackUrlPage2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_834_2.aspx)]\n [!code-vb[Button.PostBackUrlPage2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_834_2.aspx)]"
  syntax:
    content: public virtual string PostBackUrl { get; set; }
    return:
      type: System.String
      description: "A URL da página da Web para enviar do atual página quando o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle é clicado. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;), que faz com que a página de volta para si mesmo."
  overload: System.Web.UI.WebControls.Button.PostBackUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera eventos para o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlar quando ele envia de volta para o servidor."
  remarks: "Esse evento é usado internamente pelo <xref:System.Web.UI.WebControls.Button>controle, quando clicado, para gerar um <xref:System.Web.UI.WebControls.Button.Click>evento e se definida, uma <xref:System.Web.UI.WebControls.Button.Command>evento.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "O argumento para o evento."
  overload: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  id: RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Renderiza o conteúdo do controle para o gravador especificado."
  remarks: ''
  example:
  - "The following code example demonstrates how to override the RenderContents method in a custom server control so that it always displays text following a custom <xref:System.Web.UI.WebControls.Button> server control.  \n  \n [!code-cs[CustomButtonRenderContents#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_1.aspx)]\n [!code-vb[CustomButtonRenderContents#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_1.aspx)]  \n[!code-cs[CustomButtonRenderContents#2](~/add/codesnippet/csharp/m-system.web.ui.webcontr_178_2.cs)]\n[!code-vb[CustomButtonRenderContents#2](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_178_2.vb)]"
  syntax:
    content: protected override void RenderContents (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto que representa o fluxo de saída para renderizar HTML conteúdo no cliente."
  overload: System.Web.UI.WebControls.Button.RenderContents*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera eventos para o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controlar quando ele envia de volta para o servidor."
  remarks: "Esse evento é usado internamente pelo <xref:System.Web.UI.WebControls.Button>controle, quando clicado, para gerar um <xref:System.Web.UI.WebControls.Button.Click>evento e se definida, uma <xref:System.Web.UI.WebControls.Button.Command>evento.</xref:System.Web.UI.WebControls.Button.Command> </xref:System.Web.UI.WebControls.Button.Click> </xref:System.Web.UI.WebControls.Button>"
  example:
  - "The following code example demonstrates how to override the IPostBackEventHandler.RaisePostBackEvent method so that it always raises the <xref:System.Web.UI.WebControls.Button.OnClick%2A> event in a custom <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/visualbasic/78761a3c-3126-47e7-b48e-_1.vb)]\n [!code-cs[CustomButtonRaisePostBackEvent#2](~/add/codesnippet/csharp/78761a3c-3126-47e7-b48e-_1.cs)]"
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "O argumento para o evento."
  overload: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.Text
  id: Text
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto da legenda exibido no <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle."
  remarks: "Use a propriedade de texto para especificar ou determinar a legenda para exibir o <xref:System.Web.UI.WebControls.Button>controle.</xref:System.Web.UI.WebControls.Button>       O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the caption displayed in the <xref:System.Web.UI.WebControls.Button> control.  \n  \n [!code-vb[ButtonClickText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1294_1.aspx)]\n [!code-cs[ButtonClickText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1294_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "O texto da legenda exibido no <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle. O valor padrão é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  overload: System.Web.UI.WebControls.Button.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  id: UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> o cliente do controle usa o mecanismo de postback ASP.NET ou de mecanismo de envio do navegador."
  remarks: "Use a propriedade UseSubmitBehavior para especificar se um <xref:System.Web.UI.WebControls.Button>o cliente usa o controle de envio do navegador mecanismo ou o mecanismo de postback ASP.NET.</xref:System.Web.UI.WebControls.Button> Por padrão o valor dessa propriedade é `true`, causando o <xref:System.Web.UI.WebControls.Button>mecanismo de envio de controle para usar o navegador.</xref:System.Web.UI.WebControls.Button> Se você especificar `false`, a estrutura de página ASP.NET adiciona script do lado do cliente para a página para enviar o formulário para o servidor.       Quando a propriedade UseSubmitBehavior for `false`, os desenvolvedores de controle podem usar o <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método para retornar o cliente executa postback eventos para <xref:System.Web.UI.WebControls.Button>.</xref:System.Web.UI.WebControls.Button> </xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A> A cadeia de caracteres retornada pelo <xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>método contém o texto da chamada de função do lado do cliente e pode ser inserido em um manipulador de eventos do lado do cliente.</xref:System.Web.UI.ClientScriptManager.GetPostBackEventReference%2A>       Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [capas e temas do ASP.NET](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the UseSubmitBehavior property to specify the submit mechanism that a <xref:System.Web.UI.WebControls.Button> control uses when it posts back to the server. The UseSubmitBehavior property is set to `false`, causing the button to use the ASP.NET postback mechanism. If you view the source code for the rendered page using your browser's View Source command, you will see that client-side script has been added by the ASP.NET page framework to post the form to the server.  \n  \n [!code-vb[Button.UseSubmitBehavior#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_854_1.aspx)]\n [!code-cs[Button.UseSubmitBehavior#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_854_1.aspx)]"
  syntax:
    content: public virtual bool UseSubmitBehavior { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle usa o navegador do cliente enviar o mecanismo; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  id: ValidationGroup
  parent: System.Web.UI.WebControls.Button
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o grupo de controles para o qual o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle aciona a validação quando ele envia de volta para o servidor."
  remarks: "Grupos de validação permitem atribuir controles de validação em uma página a uma categoria específica. Cada grupo de validação pode ser validado independentemente de outros grupos de validação na página. Use a propriedade ValidationGroup para especificar o nome do grupo de validação para o qual o <xref:System.Web.UI.WebControls.Button>controle aciona a validação quando ele envia de volta para o servidor.</xref:System.Web.UI.WebControls.Button>       Essa propriedade tem um efeito somente quando o valor da <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>está definida como `true`.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A> Quando você especificar um valor para a propriedade ValidationGroup, somente os controles de validação que fazem parte do grupo especificado são validadas quando o <xref:System.Web.UI.WebControls.Button>controle envia de volta para o servidor.</xref:System.Web.UI.WebControls.Button> Se você não especificar um valor para essa propriedade e o <xref:System.Web.UI.WebControls.Button.CausesValidation%2A>está definida como `true`, todos os controles de validação na página que não estão atribuídos a um grupo de validação são validados quando o controle envia de volta para o servidor.</xref:System.Web.UI.WebControls.Button.CausesValidation%2A>       Essa propriedade não pode ser definida por temas ou temas de folha de estilo. Para obter mais informações, consulte <xref:System.Web.UI.ThemeableAttribute>e [capas e temas do ASP.NET](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.ThemeableAttribute>"
  example:
  - "The following code example demonstrates how to use the ValidationGroup property to specify the controls to validate when a <xref:System.Web.UI.WebControls.Button> control posts back to the server. The page contains three text boxes to capture data from the user and three <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls to ensure that the user does not leave a text box blank. The <xref:System.Web.UI.WebControls.RequiredFieldValidator> controls for the first two text boxes are in the `PersonalInfoGroup` validation group and the <xref:System.Web.UI.WebControls.RequiredFieldValidator> control for the third text box is in the `LocationInfoGroup` validation group. When `Button1` is clicked, only the controls in validation group `PersonalInfoGroup` are validated. When `Button2` is clicked, only the control in validation group `LocationInfoGroup` is validated.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Button.ValidationGroup#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1224_1.aspx)]\n [!code-vb[Button.ValidationGroup#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1224_1.aspx)]"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "O grupo de controles para o qual o <xref href=&quot;System.Web.UI.WebControls.Button&quot;> </xref> controle aciona a validação quando ele envia de volta para o servidor. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.Button.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.WebControl
  isExternal: false
  name: System.Web.UI.WebControls.WebControl
- uid: System.Web.UI.WebControls.Button.#ctor
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button()
  nameWithType: Button.Button()
  fullName: System.Web.UI.WebControls.Button.Button()
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender(HtmlTextWriter)
  nameWithType: Button.AddAttributesToRender(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.AddAttributesToRender(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.Button.CausesValidation
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
  fullName: System.Web.UI.WebControls.Button.CausesValidation
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.Button.Click
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Click
  nameWithType: Button.Click
  fullName: System.Web.UI.WebControls.Button.Click
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.Button.Command
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Command
  nameWithType: Button.Command
  fullName: System.Web.UI.WebControls.Button.Command
- uid: System.Web.UI.WebControls.CommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventHandler
  nameWithType: CommandEventHandler
  fullName: System.Web.UI.WebControls.CommandEventHandler
- uid: System.Web.UI.WebControls.Button.CommandArgument
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
  fullName: System.Web.UI.WebControls.Button.CommandArgument
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.Button.CommandName
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
  fullName: System.Web.UI.WebControls.Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions()
  nameWithType: Button.GetPostBackOptions()
  fullName: System.Web.UI.WebControls.Button.GetPostBackOptions()
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: Button.OnClick(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnClick(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.Button.OnClientClick
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
  fullName: System.Web.UI.WebControls.Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand(System.Web.UI.WebControls.CommandEventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand(CommandEventArgs)
  nameWithType: Button.OnCommand(CommandEventArgs)
  fullName: System.Web.UI.WebControls.Button.OnCommand(CommandEventArgs)
- uid: System.Web.UI.WebControls.CommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: CommandEventArgs
  nameWithType: CommandEventArgs
  fullName: System.Web.UI.WebControls.CommandEventArgs
- uid: System.Web.UI.WebControls.Button.OnPreRender(System.EventArgs)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: Button.OnPreRender(EventArgs)
  fullName: System.Web.UI.WebControls.Button.OnPreRender(EventArgs)
- uid: System.Web.UI.WebControls.Button.PostBackUrl
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
  fullName: System.Web.UI.WebControls.Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: Button.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.RenderContents(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents(HtmlTextWriter)
  nameWithType: Button.RenderContents(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.Button.RenderContents(HtmlTextWriter)
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.Button.Text
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
  fullName: System.Web.UI.WebControls.Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
  fullName: System.Web.UI.WebControls.Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
  fullName: System.Web.UI.WebControls.Button.ValidationGroup
- uid: System.Web.UI.WebControls.Button.#ctor*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Button
  nameWithType: Button.Button
- uid: System.Web.UI.WebControls.Button.AddAttributesToRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: AddAttributesToRender
  nameWithType: Button.AddAttributesToRender
- uid: System.Web.UI.WebControls.Button.CausesValidation*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CausesValidation
  nameWithType: Button.CausesValidation
- uid: System.Web.UI.WebControls.Button.CommandArgument*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandArgument
  nameWithType: Button.CommandArgument
- uid: System.Web.UI.WebControls.Button.CommandName*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: CommandName
  nameWithType: Button.CommandName
- uid: System.Web.UI.WebControls.Button.GetPostBackOptions*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: GetPostBackOptions
  nameWithType: Button.GetPostBackOptions
- uid: System.Web.UI.WebControls.Button.OnClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClick
  nameWithType: Button.OnClick
- uid: System.Web.UI.WebControls.Button.OnClientClick*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnClientClick
  nameWithType: Button.OnClientClick
- uid: System.Web.UI.WebControls.Button.OnCommand*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnCommand
  nameWithType: Button.OnCommand
- uid: System.Web.UI.WebControls.Button.OnPreRender*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: OnPreRender
  nameWithType: Button.OnPreRender
- uid: System.Web.UI.WebControls.Button.PostBackUrl*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: PostBackUrl
  nameWithType: Button.PostBackUrl
- uid: System.Web.UI.WebControls.Button.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: Button.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.RenderContents*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: RenderContents
  nameWithType: Button.RenderContents
- uid: System.Web.UI.WebControls.Button.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: Button.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.Button.Text*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: Text
  nameWithType: Button.Text
- uid: System.Web.UI.WebControls.Button.UseSubmitBehavior*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: UseSubmitBehavior
  nameWithType: Button.UseSubmitBehavior
- uid: System.Web.UI.WebControls.Button.ValidationGroup*
  parent: System.Web.UI.WebControls.Button
  isExternal: false
  name: ValidationGroup
  nameWithType: Button.ValidationGroup
