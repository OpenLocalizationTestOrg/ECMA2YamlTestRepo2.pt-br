### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.TypeListConverter
  id: TypeListConverter
  children:
  - System.ComponentModel.TypeListConverter.#ctor(System.Type[])
  - System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  - System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  - System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  langs:
  - csharp
  name: TypeListConverter
  nameWithType: TypeListConverter
  fullName: System.ComponentModel.TypeListConverter
  type: Class
  summary: "Fornece um conversor de tipo que pode ser usado para preencher uma caixa de listagem com os tipos disponíveis."
  remarks: "Você deve fornecer a lista de tipos para o construtor deste `abstract` classe.       Para obter mais informações sobre conversores de tipo, consulte o <xref:System.ComponentModel.TypeConverter>classe base e [como: implementar um conversor de tipo](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.TypeConverter>      > [!NOTE] > Você nunca deve criar uma instância de um TypeListConverter. Em vez disso, chame o <xref:System.ComponentModel.TypeDescriptor.GetConverter%2A>método de <xref:System.ComponentModel.TypeDescriptor>.</xref:System.ComponentModel.TypeDescriptor> </xref:System.ComponentModel.TypeDescriptor.GetConverter%2A> Para obter mais informações, consulte os exemplos de <xref:System.ComponentModel.TypeConverter>classe base.</xref:System.ComponentModel.TypeConverter>"
  syntax:
    content: 'public abstract class TypeListConverter : System.ComponentModel.TypeConverter'
  inheritance:
  - System.Object
  - System.ComponentModel.TypeConverter
  implements: []
  inheritedMembers:
  - System.ComponentModel.TypeConverter.CanConvertFrom(System.Type)
  - System.ComponentModel.TypeConverter.CanConvertTo(System.Type)
  - System.ComponentModel.TypeConverter.ConvertFrom(System.Object)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromInvariantString(System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.ComponentModel.ITypeDescriptorContext,System.String)
  - System.ComponentModel.TypeConverter.ConvertFromString(System.String)
  - System.ComponentModel.TypeConverter.ConvertTo(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToInvariantString(System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.ConvertToString(System.Object)
  - System.ComponentModel.TypeConverter.CreateInstance(System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.CreateInstance(System.ComponentModel.ITypeDescriptorContext,System.Collections.IDictionary)
  - System.ComponentModel.TypeConverter.GetConvertFromException(System.Object)
  - System.ComponentModel.TypeConverter.GetConvertToException(System.Object,System.Type)
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported
  - System.ComponentModel.TypeConverter.GetCreateInstanceSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.GetProperties(System.ComponentModel.ITypeDescriptorContext,System.Object,System.Attribute[])
  - System.ComponentModel.TypeConverter.GetProperties(System.Object)
  - System.ComponentModel.TypeConverter.GetPropertiesSupported
  - System.ComponentModel.TypeConverter.GetPropertiesSupported(System.ComponentModel.ITypeDescriptorContext)
  - System.ComponentModel.TypeConverter.GetStandardValues
  - System.ComponentModel.TypeConverter.GetStandardValuesExclusive
  - System.ComponentModel.TypeConverter.GetStandardValuesSupported
  - System.ComponentModel.TypeConverter.IsValid(System.ComponentModel.ITypeDescriptorContext,System.Object)
  - System.ComponentModel.TypeConverter.IsValid(System.Object)
  - System.ComponentModel.TypeConverter.SortProperties(System.ComponentModel.PropertyDescriptorCollection,System.String[])
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.#ctor(System.Type[])
  id: '#ctor(System.Type[])'
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: TypeListConverter(Type[])
  nameWithType: TypeListConverter.TypeListConverter(Type[])
  fullName: System.ComponentModel.TypeListConverter.TypeListConverter(Type[])
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.TypeListConverter&quot;> </xref> classe usando a matriz de tipo como os tipos disponíveis."
  remarks: "Tipos fornecidos no `types` parâmetro pode ser usado para preencher uma caixa de listagem com os tipos disponíveis."
  syntax:
    content: protected TypeListConverter (Type[] types);
    parameters:
    - id: types
      type: System.Type[]
      description: "A matriz do tipo <xref:System.Type>para usar como os tipos disponíveis.</xref:System.Type>"
  overload: System.ComponentModel.TypeListConverter.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se esse conversor pode converter especificado <xref:System.Type>do objeto de origem usando o contexto determinado.</xref:System.Type>"
  syntax:
    content: public override bool CanConvertFrom (System.ComponentModel.ITypeDescriptorContext context, Type sourceType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    - id: sourceType
      type: System.Type
      description: "O <xref:System.Type>do objeto de origem.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esse conversor puder realizar a conversão; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeListConverter.CanConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  id: CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se esse conversor pode converter um objeto para o tipo de destino específico usando o contexto."
  remarks: "O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`."
  syntax:
    content: public override bool CanConvertTo (System.ComponentModel.ITypeDescriptorContext context, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    - id: destinationType
      type: System.Type
      description: "Um <xref:System.Type>que representa o tipo que você deseja converter.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esse conversor puder realizar a conversão; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeListConverter.CanConvertTo*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  id: ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o objeto especificado para o tipo nativo do conversor."
  syntax:
    content: public override object ConvertFrom (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Um <xref:System.Globalization.CultureInfo>que especifica a cultura usada para representar a fonte.</xref:System.Globalization.CultureInfo>"
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para converter.</xref:System.Object>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o valor convertido.</xref:System.Object>"
  overload: System.ComponentModel.TypeListConverter.ConvertFrom*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  id: ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Converte o objeto de valor especificado para o tipo de destino especificado."
  remarks: "Este método converte mais tipos para e de objetos de cadeia de caracteres.       O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`."
  syntax:
    content: public override object ConvertTo (System.ComponentModel.ITypeDescriptorContext context, System.Globalization.CultureInfo culture, object value, Type destinationType);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "Um <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo> opcional Se não for fornecido, a cultura atual é assumida."
    - id: value
      type: System.Object
      description: "O <xref:System.Object>para converter.</xref:System.Object>"
    - id: destinationType
      type: System.Type
      description: "O <xref:System.Type>para converter o valor de.</xref:System.Type>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o objeto <code> value </code>.</xref:System.Object>"
  overload: System.ComponentModel.TypeListConverter.ConvertTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>destinationType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A conversão não pode ser executada."
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValues(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém uma coleção de valores padrão para o tipo de dados que se destina a este validador."
  remarks: "O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`."
  syntax:
    content: public override System.ComponentModel.TypeConverter.StandardValuesCollection GetStandardValues (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    return:
      type: System.ComponentModel.TypeConverter.StandardValuesCollection
      description: "Um <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>que contém um conjunto padrão de valores válidos, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o tipo de dados não der suporte a um conjunto de valores padrão.</xref:System.ComponentModel.TypeConverter.StandardValuesCollection>"
  overload: System.ComponentModel.TypeListConverter.GetStandardValues*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se a lista de valores padrão retornado do <xref:System.ComponentModel.TypeListConverter.GetStandardValues*>método é uma lista exclusiva.</xref:System.ComponentModel.TypeListConverter.GetStandardValues*>"
  remarks: "O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`.       Quando a lista for exclusiva, não há outros valores são válidos além da lista de valores padrão de <xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A>método fornece.</xref:System.ComponentModel.TypeListConverter.GetStandardValues%2A>"
  syntax:
    content: public override bool GetStandardValuesExclusive (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>porque o <xref:System.ComponentModel.TypeConverter.StandardValuesCollection>retornado de <xref:System.ComponentModel.TypeListConverter.GetStandardValues*>é uma lista completa de valores possíveis.</xref:System.ComponentModel.TypeListConverter.GetStandardValues*> </xref:System.ComponentModel.TypeConverter.StandardValuesCollection> Este método nunca retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  id: GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  langs:
  - csharp
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel
  summary: "Obtém um valor que indica se esse objeto oferece suporte a um conjunto padrão de valores que podem ser escolhidos em uma lista usando o contexto especificado."
  remarks: "O `context` parâmetro pode ser usado para extrair informações adicionais sobre o ambiente está sendo invocado este conversor de. Isso pode ser `null`, portanto, sempre verifique. Além disso, as propriedades no objeto de contexto podem retornar `null`."
  syntax:
    content: public override bool GetStandardValuesSupported (System.ComponentModel.ITypeDescriptorContext context);
    parameters:
    - id: context
      type: System.ComponentModel.ITypeDescriptorContext
      description: "Um <xref href=&quot;System.ComponentModel.ITypeDescriptorContext&quot;> </xref> que fornece um contexto de formatação."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>porque <xref:System.ComponentModel.TypeListConverter.GetStandardValues*>deve ser chamado para localizar um conjunto comum de valores que o objeto suporta.</xref:System.ComponentModel.TypeListConverter.GetStandardValues*> Este método nunca retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.TypeListConverter.GetStandardValuesSupported*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.TypeConverter
  isExternal: false
  name: System.ComponentModel.TypeConverter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ComponentModel.TypeListConverter.#ctor(System.Type[])
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: TypeListConverter(Type[])
  nameWithType: TypeListConverter.TypeListConverter(Type[])
  fullName: System.ComponentModel.TypeListConverter.TypeListConverter(Type[])
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.ComponentModel.TypeListConverter.CanConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: CanConvertFrom(ITypeDescriptorContext,Type)
  nameWithType: TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeListConverter.CanConvertFrom(ITypeDescriptorContext,Type)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.ITypeDescriptorContext
  parent: System.ComponentModel
  isExternal: false
  name: ITypeDescriptorContext
  nameWithType: ITypeDescriptorContext
  fullName: System.ComponentModel.ITypeDescriptorContext
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.ComponentModel.TypeListConverter.CanConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Type)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: CanConvertTo(ITypeDescriptorContext,Type)
  nameWithType: TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)
  fullName: System.ComponentModel.TypeListConverter.CanConvertTo(ITypeDescriptorContext,Type)
- uid: System.ComponentModel.TypeListConverter.ConvertFrom(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  nameWithType: TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
  fullName: System.ComponentModel.TypeListConverter.ConvertFrom(ITypeDescriptorContext,CultureInfo,Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.ComponentModel.TypeListConverter.ConvertTo(System.ComponentModel.ITypeDescriptorContext,System.Globalization.CultureInfo,System.Object,System.Type)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  nameWithType: TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
  fullName: System.ComponentModel.TypeListConverter.ConvertTo(ITypeDescriptorContext,CultureInfo,Object,Type)
- uid: System.ComponentModel.TypeListConverter.GetStandardValues(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValues(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValues(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValues(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeConverter.StandardValuesCollection
  parent: System.ComponentModel
  isExternal: false
  name: TypeConverter+StandardValuesCollection
  nameWithType: TypeConverter+StandardValuesCollection
  fullName: System.ComponentModel.TypeConverter+StandardValuesCollection
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValuesExclusive(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(System.ComponentModel.ITypeDescriptorContext)
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValuesSupported(ITypeDescriptorContext)
  nameWithType: TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)
  fullName: System.ComponentModel.TypeListConverter.GetStandardValuesSupported(ITypeDescriptorContext)
- uid: System.ComponentModel.TypeListConverter.#ctor*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: TypeListConverter
  nameWithType: TypeListConverter.TypeListConverter
- uid: System.ComponentModel.TypeListConverter.CanConvertFrom*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: CanConvertFrom
  nameWithType: TypeListConverter.CanConvertFrom
- uid: System.ComponentModel.TypeListConverter.CanConvertTo*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: CanConvertTo
  nameWithType: TypeListConverter.CanConvertTo
- uid: System.ComponentModel.TypeListConverter.ConvertFrom*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: ConvertFrom
  nameWithType: TypeListConverter.ConvertFrom
- uid: System.ComponentModel.TypeListConverter.ConvertTo*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: ConvertTo
  nameWithType: TypeListConverter.ConvertTo
- uid: System.ComponentModel.TypeListConverter.GetStandardValues*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValues
  nameWithType: TypeListConverter.GetStandardValues
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesExclusive*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValuesExclusive
  nameWithType: TypeListConverter.GetStandardValuesExclusive
- uid: System.ComponentModel.TypeListConverter.GetStandardValuesSupported*
  parent: System.ComponentModel.TypeListConverter
  isExternal: false
  name: GetStandardValuesSupported
  nameWithType: TypeListConverter.GetStandardValuesSupported
