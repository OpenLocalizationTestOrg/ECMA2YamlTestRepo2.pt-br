### YamlMime:ManagedReference
items:
- uid: System.Web.Profile.ProfileModule
  id: ProfileModule
  children:
  - System.Web.Profile.ProfileModule.#ctor
  - System.Web.Profile.ProfileModule.Dispose
  - System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)
  - System.Web.Profile.ProfileModule.MigrateAnonymous
  - System.Web.Profile.ProfileModule.Personalize
  - System.Web.Profile.ProfileModule.ProfileAutoSaving
  langs:
  - csharp
  name: ProfileModule
  nameWithType: ProfileModule
  fullName: System.Web.Profile.ProfileModule
  type: Class
  summary: "Gerencia a criação do perfil de usuário e dos eventos de perfil. Essa classe não pode ser herdada."
  remarks: "Quando o perfil de usuário estiver habilitado, o ASP.NET usa o ProfileModule para criar o perfil de usuário e armazená-lo na <xref:System.Web.HttpContext.Profile%2A>propriedade <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Profile%2A>       O ProfileModule expõe os seguintes eventos que você pode manipular para configurar a autenticação em seu aplicativo:-o <xref:System.Web.Profile.ProfileModule.MigrateAnonymous>evento para migrar as configurações de perfil de um perfil anônimo para um perfil autenticado quando um logs do usuário anônimo.</xref:System.Web.Profile.ProfileModule.MigrateAnonymous>      -O <xref:System.Web.Profile.ProfileModule.Personalize>evento para personalizar como o perfil de usuário é criado.</xref:System.Web.Profile.ProfileModule.Personalize>      -A <xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>eventos para controlar como o perfil de usuário é salvo quando o <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A>estiver definida como `true`.</xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A> </xref:System.Web.Profile.ProfileModule.ProfileAutoSaving>       Para obter informações sobre como habilitar o perfil de usuário, consulte [perfil Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/ccb9bf3a-a044-464d-b89b-5cb5a3d389dd)."
  example:
  - "The following example shows a Web.config file that enables anonymous identification and profile properties that support anonymous users.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\" name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <anonymousIdentification enabled=\"true\" />  \n  \n    <profile enabled=\"true\" defaultProvider=\"AspNetSqlProvider\">  \n      <properties>  \n        <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n        <add name=\"CityAndState\" allowAnonymous=\"true\" />  \n        <add name=\"StockSymbols\" type=\"System.Collections.ArrayList\" allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event included in the Global.asax file for an ASP.NET application. The <xref:System.Web.Profile.ProfileModule.MigrateAnonymous> event copies profile property values from the anonymous profile to the profile for the current user.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#1](~/add/codesnippet/visualbasic/t-system.web.profile.pro_13_1.asax)]\n [!code-cs[System.Web.Profile.ProfileManager#1](~/add/codesnippet/csharp/t-system.web.profile.pro_13_1.asax)]"
  syntax:
    content: 'public sealed class ProfileModule : System.Web.IHttpModule'
  inheritance:
  - System.Object
  implements:
  - System.Web.IHttpModule
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.#ctor
  id: '#ctor'
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: ProfileModule()
  nameWithType: ProfileModule.ProfileModule()
  fullName: System.Web.Profile.ProfileModule.ProfileModule()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Profile.ProfileModule&quot;> </xref> classe."
  remarks: "Este construtor não se destina a ser chamado no código do aplicativo.       Um <xref:System.Web.HttpApplication>é criado quando um aplicativo ASP.NET é iniciado.</xref:System.Web.HttpApplication> O <xref:System.Web.HttpApplication>chama o <xref:System.Web.Profile.ProfileModule>construtor para criar o <xref:System.Web.Profile.ProfileModule>para o aplicativo.</xref:System.Web.Profile.ProfileModule> </xref:System.Web.Profile.ProfileModule> </xref:System.Web.HttpApplication> O <xref:System.Web.Profile.ProfileModule>é especificado na configuração de um aplicativo.</xref:System.Web.Profile.ProfileModule>"
  syntax:
    content: public ProfileModule ();
    parameters: []
  overload: System.Web.Profile.ProfileModule.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.Dispose
  id: Dispose
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: Dispose()
  nameWithType: ProfileModule.Dispose()
  fullName: System.Web.Profile.ProfileModule.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Libera todos os recursos usados pelo <xref href=&quot;System.Web.Profile.ProfileModule&quot;> </xref>."
  remarks: "Esse método não se destina a ser chamado no código do aplicativo.       Um <xref:System.Web.HttpApplication>é criado quando um aplicativo ASP.NET é iniciado.</xref:System.Web.HttpApplication> O <xref:System.Web.HttpApplication>cria e inicializa o <xref:System.Web.Profile.ProfileModule>para o aplicativo e chama o método Dispose quando o objeto é liberado.</xref:System.Web.Profile.ProfileModule> </xref:System.Web.HttpApplication> O <xref:System.Web.Profile.ProfileModule>é especificado na configuração de um aplicativo.</xref:System.Web.Profile.ProfileModule>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.Profile.ProfileModule.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)
  id: Init(System.Web.HttpApplication)
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: Init(HttpApplication)
  nameWithType: ProfileModule.Init(HttpApplication)
  fullName: System.Web.Profile.ProfileModule.Init(HttpApplication)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Chama a inicialização de código quando um <xref href=&quot;System.Web.Profile.ProfileModule&quot;> </xref> objeto é criado."
  remarks: "Esse método não se destina a ser chamado no código do aplicativo.       Um <xref:System.Web.HttpApplication>é criado quando um aplicativo ASP.NET é iniciado.</xref:System.Web.HttpApplication> O <xref:System.Web.HttpApplication>chama o método Init quando ele cria o <xref:System.Web.Profile.ProfileModule>para o aplicativo.</xref:System.Web.Profile.ProfileModule> </xref:System.Web.HttpApplication> O <xref:System.Web.Profile.ProfileModule>é especificado na configuração de um aplicativo.</xref:System.Web.Profile.ProfileModule>"
  syntax:
    content: public void Init (System.Web.HttpApplication app);
    parameters:
    - id: app
      type: System.Web.HttpApplication
      description: "O aplicativo atual."
  overload: System.Web.Profile.ProfileModule.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.MigrateAnonymous
  id: MigrateAnonymous
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: MigrateAnonymous
  nameWithType: ProfileModule.MigrateAnonymous
  fullName: System.Web.Profile.ProfileModule.MigrateAnonymous
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Ocorre quando o usuário anônimo para um perfil faz logon."
  remarks: "Você pode acessar o evento MigrateAnonymous o <xref:System.Web.Profile.ProfileModule>classe no arquivo global. asax para seu aplicativo ASP.NET usando o `Profile_MigrateAnonymous` evento global, conforme mostrado no exemplo deste tópico.</xref:System.Web.Profile.ProfileModule>       Você pode usar o evento MigrateAnonymous para copiar valores de propriedade do perfil de um perfil de anônimo para um perfil de autenticado quando um usuário que tenha sido anonimamente usando seu aplicativo fizer.       Quando um aplicativo que tenha habilitado o perfil do usuário é iniciado, o ASP.NET cria uma nova classe de tipo `ProfileCommon`, que herda da <xref:System.Web.Profile.ProfileBase>classe</xref:System.Web.Profile.ProfileBase> de Acessadores fortemente tipados são adicionados para o `ProfileCommon` classe para cada propriedade definida na seção de configuração. Um `GetProfile` método permite que você recupere um `ProfileCommon` objeto com base em um nome de usuário. Você pode usar o `GetProfile` método do perfil atual, autenticado para recuperar os valores de propriedade do perfil anônimo. Os valores de propriedade anônimas, em seguida, podem ser copiados para o perfil atual para o usuário autenticado."
  example:
  - "The following example shows a Web.config file that enables anonymous identification and profile properties that support anonymous users.  \n  \n```  \n<configuration>  \n  <system.web>  \n    <authentication mode=\"Forms\" >  \n      <forms loginUrl=\"login.aspx\" name=\".ASPXFORMSAUTH\" />  \n    </authentication>  \n  \n    <anonymousIdentification enabled=\"true\" />  \n  \n    <profile enabled=\"true\" defaultProvider=\"AspNetSqlProvider\">  \n      <properties>  \n        <add name=\"ZipCode\" allowAnonymous=\"true\" />  \n        <add name=\"CityAndState\" allowAnonymous=\"true\" />  \n        <add name=\"StockSymbols\" type=\"System.Collections.ArrayList\" allowAnonymous=\"true\" />  \n      </properties>  \n    </profile>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the MigrateAnonymous event included in the Global.asax file for an ASP.NET application. The MigrateAnonymous event copies profile property values from the anonymous profile to the profile for the current user.  \n  \n [!code-vb[System.Web.Profile.ProfileManager#1](~/add/codesnippet/visualbasic/e-system.web.profile.pro_0_1.asax)]\n [!code-cs[System.Web.Profile.ProfileManager#1](~/add/codesnippet/csharp/e-system.web.profile.pro_0_1.asax)]"
  syntax:
    content: public event System.Web.Profile.ProfileMigrateEventHandler MigrateAnonymous;
    return:
      type: System.Web.Profile.ProfileMigrateEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.Personalize
  id: Personalize
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: Personalize
  nameWithType: ProfileModule.Personalize
  fullName: System.Web.Profile.ProfileModule.Personalize
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Ocorre antes que o perfil de usuário é criado."
  remarks: "O evento personalizar é gerado durante o <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>evento.</xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> Você pode acessar o evento personalizar o <xref:System.Web.Profile.ProfileModule>classe no arquivo global. asax para seu aplicativo ASP.NET usando o `Profile_Personalize` evento global, conforme mostrado no exemplo deste tópico.</xref:System.Web.Profile.ProfileModule>       Você pode usar o evento personalizar para especificar um perfil de usuário personalizada. Se o <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName>valor da propriedade especificada para o <xref:System.Web.Profile.ProfileEventHandler>manipulador de eventos para o evento personalizar é definido como um valor que não seja `null` quando o término do evento de personalizar, em seguida, o <xref:System.Web.Profile.ProfileModule>usará o valor especificado da <xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName>propriedade como o valor da <xref:System.Web.HttpContext.Profile%2A>propriedade <xref:System.Web.HttpContext>.</xref:System.Web.HttpContext> </xref:System.Web.HttpContext.Profile%2A> </xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName> </xref:System.Web.Profile.ProfileModule> </xref:System.Web.Profile.ProfileEventHandler> </xref:System.Web.Profile.ProfileEventArgs.Profile%2A?displayProperty=fullName>"
  example:
  - "The following code example shows the Personalize event declared in the Global.asax file for an application. The event code loads a user profile for a user based on role membership.  \n  \n [!code-vb[System.Web.Profile.ProfileManager.Personalize#12](~/add/codesnippet/visualbasic/e-system.web.profile.pro_1_1.asax)]\n [!code-cs[System.Web.Profile.ProfileManager.Personalize#12](~/add/codesnippet/csharp/e-system.web.profile.pro_1_1.asax)]"
  syntax:
    content: public event System.Web.Profile.ProfileEventHandler Personalize;
    return:
      type: System.Web.Profile.ProfileEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Profile.ProfileModule.ProfileAutoSaving
  id: ProfileAutoSaving
  parent: System.Web.Profile.ProfileModule
  langs:
  - csharp
  name: ProfileAutoSaving
  nameWithType: ProfileModule.ProfileAutoSaving
  fullName: System.Web.Profile.ProfileModule.ProfileAutoSaving
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Profile
  summary: "Ocorre no final da execução da página se salvar perfil automático está habilitado."
  remarks: "O evento ProfileAutoSaving é gerado no final da execução da página, se o <xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=fullName>é de propriedade `true`.</xref:System.Web.Profile.ProfileManager.AutomaticSaveEnabled%2A?displayProperty=fullName> Você pode acessar o evento ProfileAutoSaving do <xref:System.Web.Profile.ProfileModule>classe no arquivo global. asax para seu aplicativo ASP.NET usando o `Profile_ProfileAutoSaving` evento global, conforme mostrado no exemplo deste tópico.</xref:System.Web.Profile.ProfileModule>       O <xref:System.Configuration.SettingsBase.Save%2A?displayProperty=fullName>método verifica o <xref:System.Configuration.SettingsPropertyValue.IsDirty%2A>para cada valor da propriedade <xref:System.Configuration.SettingsPropertyValue>no perfil do usuário para determinar se as propriedades que devem compostos de tipos primitivos, cadeias de caracteres, ou <xref:System.DateTime>objetos foram alterados.</xref:System.DateTime> </xref:System.Configuration.SettingsPropertyValue> </xref:System.Configuration.SettingsPropertyValue.IsDirty%2A> </xref:System.Configuration.SettingsBase.Save%2A?displayProperty=fullName> O <xref:System.Configuration.SettingsBase.Save%2A>método explicitamente não pode determinar se uma classe personalizada foi alterado.</xref:System.Configuration.SettingsBase.Save%2A> Você pode usar o evento ProfileAutoSaving para determinar se um objeto personalizado foi alterado e, em seguida, para continuar com o automático salvar objetos modificados ou para cancelar o salvamento automático, se nenhum objeto foi modificado.       Para cancelar o perfil automático de operação de gravação, defina o <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>propriedade `false` no evento ProfileAutoSaving; caso contrário, defina o <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>propriedade `true`.</xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> </xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>       Pode haver vários assinantes para o evento ProfileAutoSaving. O <xref:System.Web.Profile.ProfileModule>será usado o último valor que o <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>estiver definida como.</xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A> </xref:System.Web.Profile.ProfileModule> Como resultado, é recomendável que você definir explicitamente o <xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>propriedade no evento ProfileAutoSaving cancelar ou continuar com o automático termos de salvar, como talvez seja necessário substituir o valor definido por um assinante anterior.</xref:System.Web.Profile.ProfileAutoSaveEventArgs.ContinueWithProfileAutoSave%2A>"
  example:
  - "The following code example shows the ProfileAutoSaving event included in the Global.asax file for an ASP.NET application.  \n  \n [!code-cs[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/add/codesnippet/csharp/e-system.web.profile.pro_2_1.asax)]\n [!code-vb[System.Web.Profile.ProfileManager.ProfileAutoSaving#11](~/add/codesnippet/visualbasic/e-system.web.profile.pro_2_1.asax)]"
  syntax:
    content: public event System.Web.Profile.ProfileAutoSaveEventHandler ProfileAutoSaving;
    return:
      type: System.Web.Profile.ProfileAutoSaveEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.Profile.ProfileModule.#ctor
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: ProfileModule()
  nameWithType: ProfileModule.ProfileModule()
  fullName: System.Web.Profile.ProfileModule.ProfileModule()
- uid: System.Web.Profile.ProfileModule.Dispose
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Dispose()
  nameWithType: ProfileModule.Dispose()
  fullName: System.Web.Profile.ProfileModule.Dispose()
- uid: System.Web.Profile.ProfileModule.Init(System.Web.HttpApplication)
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Init(HttpApplication)
  nameWithType: ProfileModule.Init(HttpApplication)
  fullName: System.Web.Profile.ProfileModule.Init(HttpApplication)
- uid: System.Web.HttpApplication
  parent: System.Web
  isExternal: false
  name: HttpApplication
  nameWithType: HttpApplication
  fullName: System.Web.HttpApplication
- uid: System.Web.Profile.ProfileModule.MigrateAnonymous
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: MigrateAnonymous
  nameWithType: ProfileModule.MigrateAnonymous
  fullName: System.Web.Profile.ProfileModule.MigrateAnonymous
- uid: System.Web.Profile.ProfileMigrateEventHandler
  parent: System.Web.Profile
  isExternal: false
  name: ProfileMigrateEventHandler
  nameWithType: ProfileMigrateEventHandler
  fullName: System.Web.Profile.ProfileMigrateEventHandler
- uid: System.Web.Profile.ProfileModule.Personalize
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Personalize
  nameWithType: ProfileModule.Personalize
  fullName: System.Web.Profile.ProfileModule.Personalize
- uid: System.Web.Profile.ProfileEventHandler
  parent: System.Web.Profile
  isExternal: false
  name: ProfileEventHandler
  nameWithType: ProfileEventHandler
  fullName: System.Web.Profile.ProfileEventHandler
- uid: System.Web.Profile.ProfileModule.ProfileAutoSaving
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: ProfileAutoSaving
  nameWithType: ProfileModule.ProfileAutoSaving
  fullName: System.Web.Profile.ProfileModule.ProfileAutoSaving
- uid: System.Web.Profile.ProfileAutoSaveEventHandler
  parent: System.Web.Profile
  isExternal: false
  name: ProfileAutoSaveEventHandler
  nameWithType: ProfileAutoSaveEventHandler
  fullName: System.Web.Profile.ProfileAutoSaveEventHandler
- uid: System.Web.Profile.ProfileModule.#ctor*
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: ProfileModule
  nameWithType: ProfileModule.ProfileModule
- uid: System.Web.Profile.ProfileModule.Dispose*
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Dispose
  nameWithType: ProfileModule.Dispose
- uid: System.Web.Profile.ProfileModule.Init*
  parent: System.Web.Profile.ProfileModule
  isExternal: false
  name: Init
  nameWithType: ProfileModule.Init
