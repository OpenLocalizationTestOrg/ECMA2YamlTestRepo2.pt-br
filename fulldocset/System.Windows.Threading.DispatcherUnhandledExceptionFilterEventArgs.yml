### YamlMime:ManagedReference
items:
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  id: DispatcherUnhandledExceptionFilterEventArgs
  children:
  - System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  - System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  langs:
  - csharp
  name: DispatcherUnhandledExceptionFilterEventArgs
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  type: Class
  summary: "Fornece dados para o <xref href=&quot;System.Windows.Threading.Dispatcher&quot;> </xref> <xref href=&quot;System.Windows.Threading.Dispatcher.UnhandledExceptionFilter&quot;> </xref> eventos."
  remarks: "O <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>evento ocorre quando o código em execução por meio do <xref:System.Windows.Threading.Dispatcher>lança uma exceção que não é tratada.</xref:System.Windows.Threading.Dispatcher> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>       O <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>evento fornece um meio para não gerar o <xref:System.Windows.Threading.Dispatcher.UnhandledException>evento.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>  O <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>é gerado pela primeira vez e se <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A>no DispatcherUnhandledExceptionFilterEventArgs é definido como `false`, o <xref:System.Windows.Threading.Dispatcher.UnhandledException>evento não será gerado.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch%2A> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>"
  syntax:
    content: 'public sealed class DispatcherUnhandledExceptionFilterEventArgs : System.Windows.Threading.DispatcherEventArgs'
  inheritance:
  - System.EventArgs
  - System.Windows.Threading.DispatcherEventArgs
  implements: []
  inheritedMembers:
  - System.Windows.Threading.DispatcherEventArgs.Dispatcher
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  id: Exception
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  langs:
  - csharp
  name: Exception
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.Exception
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Obtém a exceção foi gerada ao executar o código por meio de dispatcher."
  syntax:
    content: public Exception Exception { get; }
    return:
      type: System.Exception
      description: "A exceção."
  overload: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  id: RequestCatch
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  langs:
  - csharp
  name: RequestCatch
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows.Threading
  summary: "Obtém ou define se a exceção deve ser capturada e os manipuladores de eventos é chamado."
  remarks: "O <xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>evento fornece um meio para não gerar o <xref:System.Windows.Threading.Dispatcher.UnhandledException>evento.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.Dispatcher.UnhandledExceptionFilter>  O <xref:System.Windows.Threading.Dispatcher.UnhandledException>é gerado primeiro e se RequestCatch no <xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs>é definido como `false`, o <xref:System.Windows.Threading.Dispatcher.UnhandledException>evento não será gerado.</xref:System.Windows.Threading.Dispatcher.UnhandledException> </xref:System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs> </xref:System.Windows.Threading.Dispatcher.UnhandledException>       Um manipulador anterior multicast no evento pode ter já defina essa propriedade como `false`, indicando que a exceção não será capturada.  O comportamento de &quot;não capturar&quot; substituirão todas as outras porque isso provavelmente significa um cenário de depuração."
  syntax:
    content: public bool RequestCatch { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Windows.Threading.Dispatcher.UnhandledException&quot;> </xref> deve ser gerado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.  O valor padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.Threading.DispatcherEventArgs
  isExternal: false
  name: System.Windows.Threading.DispatcherEventArgs
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: Exception
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.Exception
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: RequestCatch
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
  fullName: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.Exception*
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: Exception
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.Exception
- uid: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs.RequestCatch*
  parent: System.Windows.Threading.DispatcherUnhandledExceptionFilterEventArgs
  isExternal: false
  name: RequestCatch
  nameWithType: DispatcherUnhandledExceptionFilterEventArgs.RequestCatch
