### YamlMime:ManagedReference
items:
- uid: System.Windows.ComponentResourceKey
  id: ComponentResourceKey
  children:
  - System.Windows.ComponentResourceKey.#ctor
  - System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)
  - System.Windows.ComponentResourceKey.Assembly
  - System.Windows.ComponentResourceKey.Equals(System.Object)
  - System.Windows.ComponentResourceKey.GetHashCode
  - System.Windows.ComponentResourceKey.ResourceId
  - System.Windows.ComponentResourceKey.ToString
  - System.Windows.ComponentResourceKey.TypeInTargetAssembly
  langs:
  - csharp
  name: ComponentResourceKey
  nameWithType: ComponentResourceKey
  fullName: System.Windows.ComponentResourceKey
  type: Class
  summary: "Define ou referências com base em nomes de classe em assemblies externos, bem como um identificador adicional de chaves de recurso."
  remarks: "Para [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] informações, consulte [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md).       Essa classe implementa um tipo de objeto que é útil para a criação de chaves que são baseadas nos tipos em assemblies mais de um identificador. Como definir ou o tipo de referência, você não é necessário solicitar um determinado <xref:System.Windows.ResourceDictionary>, e mais de um conjunto de recursos pode existir no assembly, cada diferenciado pelo tipo de seu ComponentResourceKey.</xref:System.Windows.ResourceDictionary>       Há duas maneiras de definir ComponentResourceKey.       Se você quiser uma chave facilmente acessível, você pode definir uma propriedade estática em seu código de classe de controle que retorna ComponentResourceKey, construído com uma <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>que existe no assembly de recursos externos e <xref:System.Windows.ComponentResourceKey.ResourceId%2A>.</xref:System.Windows.ComponentResourceKey.ResourceId%2A> </xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> A chave pode ser usada para definir estilos de padrão alternativo para controles em um assembly, alternando o assembly original do recurso externo para um personalizado. Você também pode definir uma parte de recurso nomeado dentro de um estilo de controle maior ou um modelo para expor um ponto de entrada de personalização. Isso é particularmente útil se você estiver definindo um dicionário de recursos de tema para o seu controle.       Você também pode usar o [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] [ComponentResourceKey Markup Extension](../Topic/ComponentResourceKey%20Markup%20Extension.md) na sintaxe detalhada diretamente para criar uma instância flexível da chave. Isso é útil se você quiser declarar recursos particulares de outros assemblies que são menos identificáveis personalizar.      <a name=&quot;xamlTextUsage_ComponentResourceKey&quot;></a># # XAML texto uso consulte comentários"
  syntax:
    content: >-
      [System.ComponentModel.TypeConverter(typeof(System.Windows.Markup.ComponentResourceKeyConverter))]

      public class ComponentResourceKey : System.Windows.ResourceKey
  inheritance:
  - System.Windows.Markup.MarkupExtension
  - System.Windows.ResourceKey
  implements: []
  inheritedMembers:
  - System.Windows.ResourceKey.ProvideValue(System.IServiceProvider)
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.#ctor
  id: '#ctor'
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ComponentResourceKey()
  nameWithType: ComponentResourceKey.ComponentResourceKey()
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref> classe."
  remarks: "O construtor padrão não é geralmente usado, porque um <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>valor e <xref:System.Windows.ComponentResourceKey.ResourceId%2A>valor são necessários para a inicialização adequada.</xref:System.Windows.ComponentResourceKey.ResourceId%2A> </xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> O construtor padrão existe principalmente para oferecer suporte a [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md) uso XAML no formato do parâmetro nomeado."
  syntax:
    content: public ComponentResourceKey ();
    parameters: []
  overload: System.Windows.ComponentResourceKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)
  id: '#ctor(System.Type,System.Object)'
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ComponentResourceKey(Type,Object)
  nameWithType: ComponentResourceKey.ComponentResourceKey(Type,Object)
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey(Type,Object)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância de um <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref> , especificando o <xref:System.Type>que define a chave e um objeto a ser usado como um identificador de recurso adicional.</xref:System.Type>"
  remarks: "Este construtor existe para dois cenários, com o primeiro cenário, sendo o mais importante: - oferece suporte à criação de um <xref:System.Windows.ComponentResourceKey>que, em seguida, é exposto como um campo estático público em uma classe de controle personalizado.</xref:System.Windows.ComponentResourceKey> Isso simplifica o acesso de um controle para seus próprios recursos definidos no modelo por meio de `{x:Static}` usos para valores de propriedade do modelo.      -Oferece suporte a [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md) uso XAML em forma de parâmetro posicional, que é uma técnica disponível para parceiros que fazem referência a um recurso do componente."
  example:
  - "The following example creates a <xref:System.Windows.ComponentResourceKey> that is then exposed as a static key of a control class to provide a style customization entry point.  \n  \n [!code-cs[CorePseudocode#CRKCode](~/add/codesnippet/csharp/CorePseudocode/corepseudocode.cs#crkcode)]\n [!code-vb[CorePseudocode#CRKCode](~/add/codesnippet/visualbasic/corepseudocode/corepseudocode.vb#crkcode)]"
  syntax:
    content: public ComponentResourceKey (Type typeInTargetAssembly, object resourceId);
    parameters:
    - id: typeInTargetAssembly
      type: System.Type
      description: "O tipo que define a chave de recurso."
    - id: resourceId
      type: System.Object
      description: "Um identificador exclusivo para diferenciar este <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref> de outros usuários associados a `typeInTargetAssembly` tipo."
  overload: System.Windows.ComponentResourceKey.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.Assembly
  id: Assembly
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: Assembly
  nameWithType: ComponentResourceKey.Assembly
  fullName: System.Windows.ComponentResourceKey.Assembly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém o objeto assembly que indica o dicionário do qual assembly para procurar o valor associado a essa chave."
  syntax:
    content: public override System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "O assembly recuperado, como uma classe de reflexão."
  overload: System.Windows.ComponentResourceKey.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ComponentResourceKey.Equals(Object)
  fullName: System.Windows.ComponentResourceKey.Equals(Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Determina se o objeto fornecido é igual ao atual <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>."
  remarks: "Duas chaves são iguais se tiverem os mesmos valores para todas as suas propriedades configuráveis imediatas (<xref:System.Windows.ComponentResourceKey.ResourceId%2A>, <xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A>).</xref:System.Windows.ComponentResourceKey.TypeInTargetAssembly%2A> </xref:System.Windows.ComponentResourceKey.ResourceId%2A>"
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Objeto a ser comparado com o atual <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os objetos forem iguais; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.ComponentResourceKey.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.GetHashCode
  id: GetHashCode
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ComponentResourceKey.GetHashCode()
  fullName: System.Windows.ComponentResourceKey.GetHashCode()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Retorna um código hash para este <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um valor inteiro de 32 bits com sinal."
  overload: System.Windows.ComponentResourceKey.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.ResourceId
  id: ResourceId
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ResourceId
  nameWithType: ComponentResourceKey.ResourceId
  fullName: System.Windows.ComponentResourceKey.ResourceId
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define um identificador exclusivo para diferenciar esta chave de outros usuários associados a esse tipo."
  remarks: "Para [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] informações, consulte [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md).       Normalmente, a cadeia de caracteres usada para um valor de identificação de recurso está em conformidade com a [gramática XamlName](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;xamlTextUsage_2&quot;></a># # XAML texto uso consulte comentários"
  example:
  - "The following example shows how to use the ResourceId to differentiate this key from others associated with this type.  \n  \n [!code-xml[ColorPicker_snip#SliderStyle](~/add/codesnippet/xaml/ColorPickerLib/Themes/generic.xaml#sliderstyle)]"
  syntax:
    content: public object ResourceId { get; set; }
    return:
      type: System.Object
      description: "Um identificador exclusivo. Normalmente, isso é uma cadeia de caracteres."
  overload: System.Windows.ComponentResourceKey.ResourceId*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.ToString
  id: ToString
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: ToString()
  nameWithType: ComponentResourceKey.ToString()
  fullName: System.Windows.ComponentResourceKey.ToString()
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém a representação de cadeia de caracteres de um <xref href=&quot;System.Windows.ComponentResourceKey&quot;> </xref>."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "A representação de cadeia de caracteres."
  overload: System.Windows.ComponentResourceKey.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly
  id: TypeInTargetAssembly
  parent: System.Windows.ComponentResourceKey
  langs:
  - csharp
  name: TypeInTargetAssembly
  nameWithType: ComponentResourceKey.TypeInTargetAssembly
  fullName: System.Windows.ComponentResourceKey.TypeInTargetAssembly
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o <xref:System.Type>que define a chave de recurso.</xref:System.Type>"
  remarks: "Para [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] informações, consulte [ComponentResourceKey Markup Extension](~/add/includes/ajax-current-ext-md.md).       O <xref:System.Windows.ComponentResourceKey>elemento é usado por componentes personalizados para definir as chaves para recursos que são acessados de assemblies externos, com base em um assembly que contém o tipo de direcionamento.</xref:System.Windows.ComponentResourceKey> Componentes personalizados geralmente definem novos tipos que devem ser no assembly em que o recurso está localizado. Esses tipos não têm nenhuma outra implementação em geral, os tipos existem somente para satisfazer os requisitos de pesquisa de <xref:System.Windows.ComponentResourceKey>.</xref:System.Windows.ComponentResourceKey>      <a name=&quot;xamlTextUsage_3&quot;></a># # XAML texto uso consulte comentários"
  example:
  - "The following example shows how to define a <xref:System.Windows.ComponentResourceKey> including TypeInTargetAssembly and <xref:System.Windows.ComponentResourceKey.ResourceId%2A> using the [ComponentResourceKey Markup Extension](../Topic/ComponentResourceKey%20Markup%20Extension.md). This resource can then be placed in an external assembly and accessed by a key usage that requests the resource using an analogous <xref:System.Windows.ComponentResourceKey> in the request.  \n  \n [!code-xml[ColorPicker_snip#SliderStyle](~/add/codesnippet/xaml/ColorPickerLib/Themes/generic.xaml#sliderstyle)]"
  syntax:
    content: public Type TypeInTargetAssembly { get; set; }
    return:
      type: System.Type
      description: "O tipo que define a chave de recurso."
  overload: System.Windows.ComponentResourceKey.TypeInTargetAssembly*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Windows.ResourceKey
  isExternal: false
  name: System.Windows.ResourceKey
- uid: System.Windows.ComponentResourceKey.#ctor
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ComponentResourceKey()
  nameWithType: ComponentResourceKey.ComponentResourceKey()
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey()
- uid: System.Windows.ComponentResourceKey.#ctor(System.Type,System.Object)
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ComponentResourceKey(Type,Object)
  nameWithType: ComponentResourceKey.ComponentResourceKey(Type,Object)
  fullName: System.Windows.ComponentResourceKey.ComponentResourceKey(Type,Object)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.ComponentResourceKey.Assembly
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Assembly
  nameWithType: ComponentResourceKey.Assembly
  fullName: System.Windows.ComponentResourceKey.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Windows.ComponentResourceKey.Equals(System.Object)
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Equals(Object)
  nameWithType: ComponentResourceKey.Equals(Object)
  fullName: System.Windows.ComponentResourceKey.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.ComponentResourceKey.GetHashCode
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: GetHashCode()
  nameWithType: ComponentResourceKey.GetHashCode()
  fullName: System.Windows.ComponentResourceKey.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.ComponentResourceKey.ResourceId
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ResourceId
  nameWithType: ComponentResourceKey.ResourceId
  fullName: System.Windows.ComponentResourceKey.ResourceId
- uid: System.Windows.ComponentResourceKey.ToString
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ToString()
  nameWithType: ComponentResourceKey.ToString()
  fullName: System.Windows.ComponentResourceKey.ToString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: TypeInTargetAssembly
  nameWithType: ComponentResourceKey.TypeInTargetAssembly
  fullName: System.Windows.ComponentResourceKey.TypeInTargetAssembly
- uid: System.Windows.ComponentResourceKey.#ctor*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ComponentResourceKey
  nameWithType: ComponentResourceKey.ComponentResourceKey
- uid: System.Windows.ComponentResourceKey.Assembly*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Assembly
  nameWithType: ComponentResourceKey.Assembly
- uid: System.Windows.ComponentResourceKey.Equals*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: Equals
  nameWithType: ComponentResourceKey.Equals
- uid: System.Windows.ComponentResourceKey.GetHashCode*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: GetHashCode
  nameWithType: ComponentResourceKey.GetHashCode
- uid: System.Windows.ComponentResourceKey.ResourceId*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ResourceId
  nameWithType: ComponentResourceKey.ResourceId
- uid: System.Windows.ComponentResourceKey.ToString*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: ToString
  nameWithType: ComponentResourceKey.ToString
- uid: System.Windows.ComponentResourceKey.TypeInTargetAssembly*
  parent: System.Windows.ComponentResourceKey
  isExternal: false
  name: TypeInTargetAssembly
  nameWithType: ComponentResourceKey.TypeInTargetAssembly
