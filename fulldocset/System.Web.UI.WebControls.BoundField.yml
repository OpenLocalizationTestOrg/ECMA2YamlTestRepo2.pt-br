### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.BoundField
  id: BoundField
  children:
  - System.Web.UI.WebControls.BoundField.#ctor
  - System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  - System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  - System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  - System.Web.UI.WebControls.BoundField.CreateField
  - System.Web.UI.WebControls.BoundField.DataField
  - System.Web.UI.WebControls.BoundField.DataFormatString
  - System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  - System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  - System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  - System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.HeaderText
  - System.Web.UI.WebControls.BoundField.HtmlEncode
  - System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  - System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  - System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  - System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  - System.Web.UI.WebControls.BoundField.NullDisplayText
  - System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.BoundField.ReadOnly
  - System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  - System.Web.UI.WebControls.BoundField.ThisExpression
  - System.Web.UI.WebControls.BoundField.ValidateRequestMode
  - System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  langs:
  - csharp
  name: BoundField
  nameWithType: BoundField
  fullName: System.Web.UI.WebControls.BoundField
  type: Class
  summary: "Representa um campo que é exibido como texto em um controle associado a dados."
  remarks: "A classe BoundField é usada por controles de associação de dados (como <xref:System.Web.UI.WebControls.GridView>e <xref:System.Web.UI.WebControls.DetailsView>) para exibir o valor de um campo como texto.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> O objeto de BoundField é exibido diferente dependendo do controle associado a dados no qual ele é usado. Por exemplo, o <xref:System.Web.UI.WebControls.GridView>controle exibe um objeto BoundField como uma coluna, enquanto o <xref:System.Web.UI.WebControls.DetailsView>controle exibe como uma linha.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>       Para especificar o campo a ser exibido em um objeto de BoundField, defina o <xref:System.Web.UI.WebControls.BoundField.DataField%2A>propriedade para o nome do campo.</xref:System.Web.UI.WebControls.BoundField.DataField%2A> O valor do campo pode ser codificada em HTML antes de ser exibido, definindo a <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>propriedade `true`.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Você pode aplicar uma cadeia de caracteres de formatação personalizada para o valor do campo, definindo a <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>propriedade.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Quando o <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>é de propriedade `true`, o valor de cadeia de caracteres codificada do campo será usado na cadeia de caracteres de formato personalizado.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Por padrão, a cadeia de caracteres de formatação é aplicada aos valores do campo somente quando o controle associado a dados está no modo somente leitura. Para aplicar a cadeia de caracteres de formatação para os valores exibidos enquanto o controle associado a dados está no modo de edição, defina a <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>propriedade `true`.</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A> Se o valor do campo é nulo, você pode exibir uma legenda personalizada, definindo o <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>propriedade.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A> O objeto de BoundField automaticamente também pode converter a cadeia de caracteres vazia (&quot;&quot;) campo valores para valores nulos definindo o <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>propriedade `true`.</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>       Você pode ocultar um objeto de BoundField em um controle associado a dados, definindo o <xref:System.Web.UI.WebControls.DataControlField.Visible%2A>propriedade `false`.</xref:System.Web.UI.WebControls.DataControlField.Visible%2A> Para evitar que o valor de um campo que está sendo modificado no modo de edição, defina a <xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A>propriedade `true`.</xref:System.Web.UI.WebControls.BoundField.ReadOnly%2A> Na associação de dados controles que suportam inserindo registros (como o <xref:System.Web.UI.WebControls.DetailsView>controle), você pode ocultar um objeto BoundField definindo o <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>propriedade `false`.</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A> </xref:System.Web.UI.WebControls.DetailsView> Normalmente, isso é feito quando você desejar ocultar um campo de chave gerado automaticamente no modo de inserção.       Você pode personalizar as seções de cabeçalho e rodapé de um objeto de BoundField. Para exibir uma legenda nas seções de cabeçalho ou rodapé de página, defina o <xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A>ou <xref:System.Web.UI.WebControls.DataControlField.FooterText%2A>Propriedades, respectivamente.</xref:System.Web.UI.WebControls.DataControlField.FooterText%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderText%2A> Em vez de exibir o texto na seção de cabeçalho, você pode exibir uma imagem, definindo o <xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A>propriedade.</xref:System.Web.UI.WebControls.DataControlField.HeaderImageUrl%2A> A seção de cabeçalho pode ser ocultada no objeto BoundField definindo o <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>propriedade `false`.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>      > [!NOTE] > Alguns controles associados a dados (como o <xref:System.Web.UI.WebControls.GridView>controle) pode mostrar ou ocultar apenas a seção de cabeçalho inteiro do controle.</xref:System.Web.UI.WebControls.GridView> Esses controles associados a dados não oferecem suporte a <xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A>propriedade para um campo associado individual.</xref:System.Web.UI.WebControls.DataControlField.ShowHeader%2A> Para mostrar ou ocultar a seção de cabeçalho inteiro de um controle associado a dados (se disponível), use o controle `ShowHeader` propriedade.       Você também pode personalizar a aparência do objeto BoundField (cor da fonte, cor do plano de fundo e assim por diante), definindo as propriedades de estilo para as diferentes partes do campo. A tabela a seguir lista as propriedades de estilo diferente.      | Propriedade de estilo | Descrição |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>| As configurações de estilo para controles de servidor Web filho do objeto BoundField. |   | <xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A>| As configurações de estilo para a seção de rodapé do objeto BoundField. |   | <xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A>| As configurações de estilo para a seção de cabeçalho do objeto BoundField. |   | <xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A>| As configurações de estilo para os itens de dados no objeto BoundField. |</xref:System.Web.UI.WebControls.DataControlField.ItemStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.HeaderStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.FooterStyle%2A> </xref:System.Web.UI.WebControls.DataControlField.ControlStyle%2A>"
  example:
  - "The following code example demonstrates how to use a BoundField object to display the values of a field in a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_236_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_236_1.aspx)]"
  syntax:
    content: 'public class BoundField : System.Web.UI.WebControls.DataControlField'
  inheritance:
  - System.Object
  - System.Web.UI.WebControls.DataControlField
  implements: []
  inheritedMembers:
  - System.Web.UI.WebControls.DataControlField.AccessibleHeaderText
  - System.Web.UI.WebControls.DataControlField.CloneField
  - System.Web.UI.WebControls.DataControlField.Control
  - System.Web.UI.WebControls.DataControlField.ControlStyle
  - System.Web.UI.WebControls.DataControlField.DesignMode
  - System.Web.UI.WebControls.DataControlField.FooterStyle
  - System.Web.UI.WebControls.DataControlField.FooterText
  - System.Web.UI.WebControls.DataControlField.HeaderImageUrl
  - System.Web.UI.WebControls.DataControlField.HeaderStyle
  - System.Web.UI.WebControls.DataControlField.InsertVisible
  - System.Web.UI.WebControls.DataControlField.IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.ItemStyle
  - System.Web.UI.WebControls.DataControlField.OnFieldChanged
  - System.Web.UI.WebControls.DataControlField.SaveViewState
  - System.Web.UI.WebControls.DataControlField.ShowHeader
  - System.Web.UI.WebControls.DataControlField.SortExpression
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IDataSourceViewSchemaAccessor#DataSourceViewSchema
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.DataControlField.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.DataControlField.ToString
  - System.Web.UI.WebControls.DataControlField.TrackViewState
  - System.Web.UI.WebControls.DataControlField.ViewState
  - System.Web.UI.WebControls.DataControlField.Visible
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> classe."
  remarks: "Use este construtor para inicializar uma nova instância de <xref:System.Web.UI.WebControls.BoundField>classe.</xref:System.Web.UI.WebControls.BoundField> Este construtor é comumente usado ao adicionar campos a um controle de associação de dados criado dinamicamente.       Adicionar dinamicamente um <xref:System.Web.UI.WebControls.BoundField>de objeto para um controle associado a dados, crie um novo <xref:System.Web.UI.WebControls.BoundField>do objeto, defina suas propriedades e, em seguida, adicioná-lo à coleção de campos do controle associado a dados.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> Por exemplo, se você estiver usando o <xref:System.Web.UI.WebControls.GridView>de controle, adicione o <xref:System.Web.UI.WebControls.BoundField>do objeto para o <xref:System.Web.UI.WebControls.GridView.Columns%2A>coleção.</xref:System.Web.UI.WebControls.GridView.Columns%2A> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.GridView>      > [!NOTE] > Embora dinamicamente, você pode adicionar campos a um controle associado a dados, é altamente recomendável que campos ser estaticamente declarados e, em seguida, mostrado ou oculto, conforme apropriado. Declarar estaticamente todos os campos de reduz o tamanho do estado de exibição para o controle de associação de dados pai."
  example:
  - "The following code example demonstrates how to use the constructor to dynamically add a <xref:System.Web.UI.WebControls.BoundField> object to a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-cs[BoundFieldCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_150_1.aspx)]\n [!code-vb[BoundFieldCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_150_1.aspx)]"
  syntax:
    content: public BoundField ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se a cadeia de caracteres de formatação especificado com o <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>propriedade é aplicada aos valores de campo quando o controle associado a dados que contém o <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objeto está no modo de edição.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "Controles associados a dados (como <xref:System.Web.UI.WebControls.DetailsView>, <xref:System.Web.UI.WebControls.FormView>, e <xref:System.Web.UI.WebControls.GridView>) têm diferentes modos de exibição que permitem ao usuário ler, editar ou inserir registros.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.DetailsView> Por padrão, a cadeia de caracteres de formatação especificados pelo <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>propriedade é aplicada aos valores do campo somente quando o controle associado a dados está no modo somente leitura.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Para aplicar a cadeia de caracteres de formatação para os valores exibidos enquanto o controle associado a dados está no modo de edição, defina a propriedade ApplyFormatInEditMode `true`.      > [!NOTE] > Um <xref:System.Web.UI.WebControls.BoundField>objeto não remove automaticamente quando o campo é atualizado na fonte de dados de formatação.</xref:System.Web.UI.WebControls.BoundField> Se você não quiser que a formatação como parte do valor armazenado, você precisará remover a formatação de forma programática."
  example:
  - "The following code example demonstrates how to use the ApplyFormatInEditMode property to apply the formatting string to field values while a <xref:System.Web.UI.WebControls.GridView> control is in edit mode. The formatting is then programmatically removed before the value is updated in the data source.  \n  \n [!code-vb[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1333_1.aspx)]\n [!code-cs[BoundFieldApplyFormatInEditMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1333_1.aspx)]"
  syntax:
    content: public virtual bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para aplicar a cadeia de caracteres de formatação para valores do campo no modo de edição; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se vazia valores de cadeia de caracteres (&quot;&quot;) são automaticamente convertidos em valores nulos quando o campo de dados é atualizado na fonte de dados."
  remarks: "Às vezes, o usuário pode inserir uma cadeia de caracteres vazia para um valor de campo ao atualizar ou inserir registros. Use a propriedade ConvertEmptyStringToNull para especificar se um valor de cadeia de caracteres vazia é automaticamente convertido em nulo quando o campo de dados é atualizado na fonte de dados.      > [!NOTE] > Por padrão, um <xref:System.Web.UI.WebControls.BoundField>objeto exibe valores nulos como cadeias de caracteres vazias.</xref:System.Web.UI.WebControls.BoundField> Para exibir um valor diferente, defina o <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>propriedade.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the ConvertEmptyStringToNull property to specify that an empty string (\"\") field value should automatically be converted to null.  \n  \n [!code-vb[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1108_1.aspx)]\n [!code-cs[BoundFieldConvertEmptyStringToNull#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1108_1.aspx)]"
  syntax:
    content: public virtual bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para converter automaticamente valores de cadeia de caracteres vazia para valores nulos. Caso contrário, o <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  id: CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Copia as propriedades do atual <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objeto especificado <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> objeto."
  remarks: "O CopyProperties é um método auxiliar usado pelo <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>método para copiar as propriedades do atual <xref:System.Web.UI.WebControls.BoundField>do objeto para o <xref:System.Web.UI.WebControls.DataControlField>objeto criado pelo método.</xref:System.Web.UI.WebControls.DataControlField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override void CopyProperties (System.Web.UI.WebControls.DataControlField newField);
    parameters:
    - id: newField
      type: System.Web.UI.WebControls.DataControlField
      description: "O <xref href=&quot;System.Web.UI.WebControls.DataControlField&quot;> </xref> para copiar as propriedades do atual <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> para."
  overload: System.Web.UI.WebControls.BoundField.CopyProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.CreateField
  id: CreateField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria um vazio <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objeto."
  remarks: "O método CreateField é um método auxiliar usado pelo <xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>método para criar um vazio <xref:System.Web.UI.WebControls.BoundField>objeto para copiar as propriedades do atual <xref:System.Web.UI.WebControls.BoundField>objeto para.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.DataControlField.CloneField%2A?displayProperty=fullName>"
  syntax:
    content: protected override System.Web.UI.WebControls.DataControlField CreateField ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.DataControlField
      description: "An empty <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;></xref>."
  overload: System.Web.UI.WebControls.BoundField.CreateField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataField
  id: DataField
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do campo de dados para associar o <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objeto."
  remarks: "Use a propriedade DataField para especificar o nome do campo de dados para associar ao <xref:System.Web.UI.WebControls.BoundField>objeto.</xref:System.Web.UI.WebControls.BoundField> Os valores do campo especificado são exibidos no <xref:System.Web.UI.WebControls.BoundField>objeto como texto.</xref:System.Web.UI.WebControls.BoundField> Opcionalmente, você pode formatar o texto exibido, definindo a <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>propriedade.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>      > [!NOTE] > Se o valor do campo é nulo, uma cadeia de caracteres vazia (&quot;&quot;) é exibido para o valor por padrão. Para especificar uma legenda alternativa, defina o <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>propriedade.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>"
  example:
  - "The following code example demonstrates how to use the DataField property to specify which field to display in a <xref:System.Web.UI.WebControls.BoundField> field column of a <xref:System.Web.UI.WebControls.GridView> control.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_680_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_680_1.aspx)]"
  syntax:
    content: public virtual string DataField { get; set; }
    return:
      type: System.String
      description: "O nome do campo de dados para associar o <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.BoundField.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  id: DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a cadeia de caracteres que especifica o formato de exibição para o valor do campo."
  remarks: "Use a propriedade DataFormatString para especificar um formato de exibição personalizado para os valores que são exibidos no <xref:System.Web.UI.WebControls.BoundField>objeto.</xref:System.Web.UI.WebControls.BoundField> Se a propriedade DataFormatString não está definida, o valor do campo será exibido sem qualquer formatação especial.      > [!NOTE] > Nas versões anteriores à 3.5 do ASP.NET, você deve definir o <xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A>propriedade `false` para formatar campos não de cadeia de caracteres tipos de dados.</xref:System.Web.UI.WebControls.BoundField.HtmlEncode%2A> Caso contrário, o valor do campo é convertido em uma cadeia de caracteres pelo método de conversão padrão antes que a cadeia de caracteres de formato que é armazenada na propriedade DataFormatString seja aplicada.       Por padrão, a cadeia de caracteres de formatação é aplicada para o valor do campo somente quando o controle associado a dados que contém o <xref:System.Web.UI.WebControls.BoundField>objeto está no modo somente leitura.</xref:System.Web.UI.WebControls.BoundField> Para aplicar a cadeia de caracteres de formatação para valores de campo no modo de edição, defina a <xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>propriedade `true`.</xref:System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode%2A>       A cadeia de caracteres de formatação pode ser qualquer cadeia de caracteres literal e geralmente inclui um espaço reservado para o valor do campo. Por exemplo, na cadeia de formatação `Item Value: {0}`, o valor do campo é substituído para o espaço reservado {0} quando a cadeia de caracteres é exibida no <xref:System.Web.UI.WebControls.BoundField>objeto.</xref:System.Web.UI.WebControls.BoundField> O restante da cadeia de caracteres de formatação é exibido como texto literal.       Se a cadeia de caracteres de formatação não incluir um espaço reservado, somente a cadeia de formatação em si é incluída no texto de exibição final (o valor do campo da fonte de dados não está incluído). Se o espaço reservado é 0 (zero) entre chaves, conforme mostrado no exemplo anterior, o valor do campo é convertido em uma cadeia de caracteres, o método padrão. Você pode acrescentar à zero uma cadeia de caracteres que especifica como o valor do campo deve ser formatado. Por exemplo, o espaço reservado `{0:C}` para um campo numérico que especifica que o valor do campo deve ser convertido para um formato de moeda.       Formatação é aplicada usando o <xref:System.String.Format%2A>método.</xref:System.String.Format%2A> O número que segue a chave de abertura faz parte da sintaxe usada por esse método e indica qual de uma série de valores de usar o espaço reservado. Como há apenas um valor de campo em cada célula, o número que segue a chave de abertura só pode ser definido como 0.       A tabela a seguir lista os caracteres de formato padrão para campos numéricos. Esses caracteres de formato não diferenciam maiusculas de minúsculas, exceto para `X`, que exibe caracteres hexadecimais que é especificado. Você pode acrescentar um número para a maioria dos caracteres de formato para especificar o número de dígitos significativos ou casas decimais deseja exibir.      > [!NOTE] > Na maioria dos casos, formatação depende de configuração de cultura do servidor. Os exemplos são para uma configuração de cultura `en-US`.      | Formato de caractere | Descrição | Exemplo |   |----------------------|-----------------|-------------|   | `C` or `c`| Exibe valores numéricos em formato de moeda. Você pode especificar o número de casas decimais. | Formato:`{0:C}`<br /><br /> 123.456 -> $123.46<br /><br /> Formato:`{0:C3}`<br /><br /> 123.456-> $123.456 |   | `D` or `d`| Exibe valores inteiros em formato decimal. Você pode especificar o número de dígitos. (Embora o tipo é conhecido como &quot;decimal&quot;, os números são formatados como números inteiros). | Formato:`{0:D}`<br /><br /> 1234 -> 1234<br /><br /> Formato:`{0:D6}`<br /><br /> 1234-> 001234 |   | `E` or `e`| Exibe valores numéricos em formato científico de (exponencial). Você pode especificar o número de casas decimais. | Formato:`{0:E}`<br /><br /> 1052.0329112756-> 1.052033E + 003<br /><br /> Formato:`{0:E2}`<br /><br /> -1052.0329112756-> -&1;.05 +&003; |   | `F` or `f`| Exibe valores numéricos em um formato fixo. Você pode especificar o número de casas decimais. | Formato:`{0:F}`<br /><br /> 1234.567 -> 1234.57<br /><br /> Formato:`{0:F3}`<br /><br /> 1234.567-> 1234.567 |   | `G` or `g`| Exibe valores numéricos em formato geral (mais compacta de notação de ponto fixo ou científica). Você pode especificar o número de dígitos significativos. | Formato:`{0:G}`<br /><br /> -123.456 -> -123.456<br /><br /> Formato:`{0:G2}`<br /><br /> -123.456-> -120 |   | `N` or `n`| Exibe valores numéricos em formato de número (incluindo o sinal negativo opcional e separadores de grupo). Você pode especificar o número de casas decimais. | Formato:`{0:N}`<br /><br /> 1234.567 -> 1,234.57<br /><br /> Formato:`{0:N4}`<br /><br /> 1234.567-> 1,234.5670 |   | `P` or `p`| Exibe valores numéricos no formato de porcentagem. Você pode especificar o número de casas decimais. | Formato:`{0:P}`<br /><br /> 1 -> 100.00%<br /><br /> Formato:`{0:P1}`<br /><br /> .5-> 50,0% | | `R` or `r`| Exibe <xref:System.Single>, <xref:System.Double>, ou `BigInteger` valores em formato de ida e volta. | Format: `{0:R}`</xref:System.Double></xref:System.Single><br /><br /> 123456789.12345678-> 123456789.12345678 |   | `X` or `x`| Exibe valores inteiros em formato hexadecimal. Você pode especificar o número de dígitos. | Formato:`{0:X}`<br /><br /> 255-> TT<br /><br /> Formato:`{0:x4}`<br /><br /> 255-> 00ff |       Para obter mais informações e exemplos que mostram a formatação para outros valores de cultura, consulte [cadeias de caracteres de formato numérico padrão](~/add/includes/ajax-current-ext-md.md). Você também pode criar cadeias de caracteres de formato numérico personalizado. Para obter mais informações, consulte [cadeias de caracteres de formato numérico personalizado](~/add/includes/ajax-current-ext-md.md).       A tabela a seguir lista os caracteres de formato para <xref:System.DateTime>campos.</xref:System.DateTime> A maioria deles formatação especificações resulta em uma saída diferente dependendo das configurações de cultura. Os exemplos são para uma <xref:System.DateTime>valor de 15/6/2009 1:45:30 PM com uma configuração de cultura `en-US`.</xref:System.DateTime>      | Formato de caractere | Descrição | Exemplo |   |----------------------|-----------------|-------------|   | `d`| Padrão de data abreviada. | Formato:`{0:d}`<br /><br /> 15/6/2009 1:45:30 PM-> 15/6/2009 |   | `D`| Padrão de data por extenso. | Formato:`{0:D}`<br /><br /> 15/6/2009 1:45:30 PM-> segunda-feira, 15 de junho de 2009 |   | `f`| Padrão de data/hora (hora abreviada). | Formato:`{0:f}`<br /><br /> 15/6/2009 1:45:30 PM-> segunda-feira, 15 de junho de 2009 1:45 PM |   | `F`| Padrão de data/hora (tempo). | Formato:`{0:F}`<br /><br /> 15/6/2009 1:45:30 PM-> segunda-feira, 15 de junho de 2009 1:45:30 PM |   | `g`| Padrão de data/hora geral (hora abreviada). | Formato:`{0:g}`<br /><br /> 15/6/2009 1:45:30 PM-> 15/6/2009 1:45 PM |   | `G`| Padrão geral de data/hora (tempo). | Formato:`{0:G}`<br /><br /> 15/6/2009 1:45:30 PM-> 15/6/2009 1:45:30 PM |   | `M` or `m`| Padrão de mês/dia. | Formato:`{0:M}`<br /><br /> 15/6/2009 1:45:30 PM-> 15 de junho |   | `O` or `o`| Viagem padrão de data/hora. | Formato:`{0:o}`<br /><br /> 15/6/2009 1:45:30 PM-> 2009-06-15T13:45:30.0900000 |   | `R` or `r`| Padrão RFC1123 (para obter informações, consulte <xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName>). | Formato: `{0:R}` </xref:System.Globalization.DateTimeFormatInfo.RFC1123Pattern%2A?displayProperty=fullName><br /><br /> 15/6/2009 1:45:30 PM-> segunda-feira, 15 de junho de 2009 20:45:30 GMT |   | `s`| Data/hora classificável. | Formato:`{0:s}`<br /><br /> 15/6/2009 1:45:30 PM-> 2009-06-15T13:45:30 |   | `t`| Padrão de tempo abreviado. | Formato:`{0:t}`<br /><br /> 15/6/2009 1:45:30 PM-> 1:45 PM |   | `T`| Padrão de hora longa. | Formato:`{0:T}`<br /><br /> 15/6/2009 1:45:30 PM-> 1:45:30 PM |   | `u`| Data/hora universal classificável. | Formato:`{0:u}`<br /><br /> 15/6/2009 1:45:30 PM-> 2009-06-15 20:45:30Z |   | `U`| Padrão de data/hora completo universal. | Formato:`{0:U}`<br /><br /> 15/6/2009 1:45:30 PM-> segunda-feira, 15 de junho de 2009 8:45:30 PM |   | `Y` or `y`| Padrão de mês do ano. | Formato:`{0:Y}`<br /><br /> 15/6/2009 1:45:30 PM-> de junho de 2009 |       Para obter mais informações e exemplos que mostram a formatação para outros valores de cultura, consulte [padrão de data e cadeias de caracteres de formato de hora](~/add/includes/ajax-current-ext-md.md). Você também pode criar cadeias de caracteres de formato de hora e de data personalizada. Para obter mais informações, consulte [Data personalizada e cadeias de caracteres de formato de hora](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "A Visual Studio Web site project with source code is available to accompany this topic: [Download](http://go.microsoft.com/fwlink/?LinkId=191889).  \n  \n The following example shows how to use the DataFormatString property to specify a custom display format for the values of a field.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following example shows one row of the output that is produced by this example.  \n  \n|ProductID|Name|ProductNumber|ListPrice|Weight|ModifiedDate|  \n|---------------|----------|-------------------|---------------|------------|------------------|  \n|`000680`|`HL Road Frame - Black, 58`|`#FR-R92B-58`|`$1,431.50`|`1016.040`|`3/11/2004`|"
  syntax:
    content: public virtual string DataFormatString { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de formatação que especifica o formato de exibição para o valor do campo. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica que nenhuma formatação especial é aplicado para o valor do campo."
  overload: System.Web.UI.WebControls.BoundField.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  id: ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Preenche especificado &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; objeto com os valores da especificado <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> objeto."
  remarks: "O método ExtractValuesFromCell é fornecido como uma maneira conveniente para recuperar os valores dos campos especificado <xref:System.Web.UI.WebControls.TableCell>do objeto em um <xref:System.Web.UI.WebControls.BoundField>objeto.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell>      > [!NOTE] > Esse método é usado principalmente por desenvolvedores de controle.       Este método não tem um valor de retorno. Em vez disso, os valores de campo são retornados por referência por meio de <xref:System.Collections.IDictionary?displayProperty=fullName>objeto passado para o `dictionary` parâmetro.</xref:System.Collections.IDictionary?displayProperty=fullName> Depois que o método é chamado, percorrer o <xref:System.Collections.IDictionary?displayProperty=fullName>objeto para acessar os valores de campo.</xref:System.Collections.IDictionary?displayProperty=fullName>      > [!NOTE] > Se o <xref:System.Web.UI.WebControls.TableCell>objeto contém os valores do campo somente leitura, você deverá passar `true` para o `includeReadOnly` parâmetro para incluir os valores.</xref:System.Web.UI.WebControls.TableCell>"
  syntax:
    content: public override void ExtractValuesFromCell (System.Collections.Specialized.IOrderedDictionary dictionary, System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState, bool includeReadOnly);
    parameters:
    - id: dictionary
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Um &lt;xref:System.Collections.IDictionary?displayProperty=fullName&gt; usado para armazenar os valores da célula especificada."
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "O <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> que contém os valores a serem recuperados."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> valores."
    - id: includeReadOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir os valores dos campos somente leitura; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  id: FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Formata o valor do campo especificado para uma célula de <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objeto."
  remarks: "O método FormatDataValue é um método auxiliar usado para transformar um valor de campo para o formato especificado pelo <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A>propriedade.</xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> Se um valor do campo é null, o valor de <xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>propriedade é retornada.</xref:System.Web.UI.WebControls.BoundField.NullDisplayText%2A>      > [!NOTE] > Esse método é usado principalmente por desenvolvedores de controle."
  syntax:
    content: protected virtual string FormatDataValue (object dataValue, bool encode);
    parameters:
    - id: dataValue
      type: System.Object
      description: "O valor do campo para formatar."
    - id: encode
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para codificar o valor; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.String
      description: "O valor do campo é convertido para o formato especificado pelo <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  overload: System.Web.UI.WebControls.BoundField.FormatDataValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  id: GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera o valor usado para o valor do campo ao renderizar o <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objeto em um designer."
  remarks: "O método GetDesignTimeValue é um método auxiliar usado para determinar o valor a ser exibida para um campo ao renderizar o <xref:System.Web.UI.WebControls.BoundField>objeto em um designer.</xref:System.Web.UI.WebControls.BoundField> Se os dados reais não não possível recuperar a fonte de dados em tempo de design, o valor retornado por esse método é exibido em vez disso.      > [!NOTE] > Esse método é usado principalmente por desenvolvedores de controle."
  syntax:
    content: protected virtual object GetDesignTimeValue ();
    parameters: []
    return:
      type: System.Object
      description: "O valor a ser exibido no designer como o valor do campo."
  overload: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  id: GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera o valor do campo associado para o <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objeto."
  remarks: "O método GetValue é um método auxiliar usado para determinar o valor de um campo. Se o <xref:System.Web.UI.WebControls.BoundField>objeto está sendo exibido em um designer e o valor do campo não pode ser determinado em tempo de design, o valor retornado do <xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A>método é retornado em vez do valor real do campo.</xref:System.Web.UI.WebControls.BoundField.GetDesignTimeValue%2A> </xref:System.Web.UI.WebControls.BoundField>      > [!NOTE] > Esse método é usado principalmente por desenvolvedores de controle."
  syntax:
    content: protected virtual object GetValue (System.Web.UI.Control controlContainer);
    parameters:
    - id: controlContainer
      type: System.Web.UI.Control
      description: "O contêiner para o valor do campo."
    return:
      type: System.Object
      description: "O valor do campo associado para o <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.GetValue*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "The container specified by the <code>controlContainer</code> parameter is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n The container specified by the <code>controlContainer</code> parameter does not have a data item.  \n  \n \\- or -  \n  \n The data field was not found."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto que é exibido no cabeçalho de um controle de dados."
  remarks: "Use a propriedade HeaderText para identificar um campo em um controle de dados com um nome amigável. A aplicação mais comum da propriedade HeaderText é fornecer nomes de coluna significativo para campos de dados associados em um <xref:System.Web.UI.WebControls.GridView>ou <xref:System.Web.UI.WebControls.DetailsView>controle.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView>"
  syntax:
    content: public override string HeaderText { get; set; }
    return:
      type: System.String
      description: "O texto exibido no cabeçalho de um controle de dados. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.BoundField.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  id: HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se os valores de campo são codificada em HTML antes que eles sejam exibidos em uma <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objeto."
  remarks: "Use the HtmlEncode property to specify whether field values are HTML-encoded to their respective string representations before they are displayed in a <xref:System.Web.UI.WebControls.BoundField> object. For example, if this property is `true`, a string value of \"\\<script>\" would be rendered as \"&lt;script&gt;\". If this property is `false`, the string would be rendered unchanged.  \n  \n> [!NOTE]\n>  HTML-encoding field values helps to prevent cross-site scripting attacks and malicious content from being displayed. This property should be enabled whenever possible."
  example:
  - "The following code example demonstrates how to use the HtmlEncode property to prevent field values from being HTML-encoded before being displayed in a <xref:System.Web.UI.WebControls.BoundField> object.  \n  \n [!code-cs[BoundFieldHtmlEncode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_606_1.aspx)]\n [!code-vb[BoundFieldHtmlEncode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_606_1.aspx)]"
  syntax:
    content: public virtual bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os valores de campo são codificada em HTML antes que eles sejam exibidos em uma <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objeto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  id: HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se texto que é criado aplicando o <xref:System.Web.UI.WebControls.BoundField.DataFormatString*>propriedade para o <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> o valor deve ser codificado em HTML quando ele for exibido.</xref:System.Web.UI.WebControls.BoundField.DataFormatString*>"
  remarks: "HTML-encoding values can help prevent cross-site scripting attacks and malicious content from being displayed. HTML encoding is also useful when you want to display HTML code in the browser, such as displaying the string \"\\<br/>\" instead of inserting a line break (`<br/>` element) in the page.  \n  \n> [!NOTE]\n>  This property is new in ASP.NET 3.5. Setting this property to `false` restores the default behavior of the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property in versions of ASP.NET earlier than 3.5. For more information, see the <xref:System.Web.UI.WebControls.BoundField.DataFormatString%2A> property."
  syntax:
    content: public virtual bool HtmlEncodeFormatString { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o texto deve ser codificada em HTML; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  id: Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa o <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objeto."
  remarks: "O método Initialize é chamado pelo controle de dados com o qual o <xref:System.Web.UI.WebControls.BoundField>objeto está associado ao executar a inicialização do objeto básico para instâncias do campo, antes do campo nunca é adicionado a uma coleção de linhas.</xref:System.Web.UI.WebControls.BoundField> Controles de dados como <xref:System.Web.UI.WebControls.DetailsView>e <xref:System.Web.UI.WebControls.GridView>chamar o <xref:System.Web.UI.WebControls.DataControlField.Initialize%2A>método em seus `CreateChildControls` métodos antes de outros métodos, como `CreateRow` são chamados para criar linhas específicas com dados.</xref:System.Web.UI.WebControls.DataControlField.Initialize%2A> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       Chamada para esse método quando você está escrevendo uma associação de dados personalizada de controle que usa <xref:System.Web.UI.WebControls.TableCell>objetos para executar a inicialização básica para um <xref:System.Web.UI.WebControls.BoundField>objeto.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.TableCell> Implementar esse método se sua <xref:System.Web.UI.WebControls.BoundField>-tipo derivado requer qualquer inicialização do objeto antes que ela popula <xref:System.Web.UI.WebControls.TableCell>objetos com dados ou controles no <xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A>método.</xref:System.Web.UI.WebControls.BoundField.InitializeCell%2A> </xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override bool Initialize (bool enableSorting, System.Web.UI.Control control);
    parameters:
    - id: enableSorting
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>se há suporte para classificação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: control
      type: System.Web.UI.Control
      description: "O controle de dados que possui o <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Web.UI.WebControls.BoundField.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  id: InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa especificado <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> objeto para o estado de linha especificado."
  remarks: "O método InitializeCell é implementado por <xref:System.Web.UI.WebControls.BoundField>-derivadas de tipos para adicionar texto e controles para um <xref:System.Web.UI.WebControls.TableCell>objeto de um controle de dados que usa tabelas para exibir uma interface do usuário (IU).</xref:System.Web.UI.WebControls.TableCell> </xref:System.Web.UI.WebControls.BoundField> Esses controles de dados criar a tabela completa estrutura linha por linha quando o controle `CreateChildControls` método é chamado. O método InitializeCell é chamado pelo `InitializeRow` método dos controles de dados <xref:System.Web.UI.WebControls.DetailsView>e <xref:System.Web.UI.WebControls.GridView>.</xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.DetailsView>       Chamada para esse método quando você está escrevendo uma associação de dados personalizada de controle que usa <xref:System.Web.UI.WebControls.TableCell>objetos para inicializar as células da estrutura de tabela com dados ou controles.</xref:System.Web.UI.WebControls.TableCell> Implementar esse método quando você estiver escrevendo um <xref:System.Web.UI.WebControls.BoundField>-derivado da classe</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: public override void InitializeCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlCellType cellType, System.Web.UI.WebControls.DataControlRowState rowState, int rowIndex);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "O <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> ao inicializar."
    - id: cellType
      type: System.Web.UI.WebControls.DataControlCellType
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.DataControlCellType&quot;> </xref> valores."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> valores."
    - id: rowIndex
      type: System.Int32
      description: "Índice da linha de base zero."
  overload: System.Web.UI.WebControls.BoundField.InitializeCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  id: InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa especificado <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> objeto para o estado de linha especificado."
  remarks: "O método InitializeDataCell é um método auxiliar usado para inicializar em uma célula a <xref:System.Web.UI.WebControls.BoundField>objeto.</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: protected virtual void InitializeDataCell (System.Web.UI.WebControls.DataControlFieldCell cell, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: cell
      type: System.Web.UI.WebControls.DataControlFieldCell
      description: "O <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref> ao inicializar."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> valores."
  overload: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Restaura as informações de estado de exibição armazenadas anteriormente para esse campo."
  syntax:
    content: protected override void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Representa o estado de controle a ser restaurado."
  overload: System.Web.UI.WebControls.BoundField.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  id: NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a legenda exibida para um campo quando o valor do campo é nulo."
  remarks: "Às vezes, o valor do campo é armazenado como nulo na fonte de dados. Você pode especificar uma legenda personalizada a ser exibida para os campos que têm um valor nulo, definindo a propriedade NullDisplayText. Se essa propriedade não está definida, os valores de campo nulo são exibidos como cadeias de caracteres vazias (&quot;&quot;). Quando um registro é atualizados ou inseridos em um controle associado a dados, se o usuário insere o valor especificado por essa propriedade (diferente de uma cadeia de caracteres vazia) de um campo em um controle associado a dados, que valor é automaticamente convertido em null na fonte de dados.      > [!NOTE] > Para converter um valor de campo de cadeia de caracteres vazia para um valor nulo, defina o <xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>propriedade `true`.</xref:System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull%2A>"
  example:
  - "The following code example demonstrates how to use the NullDisplayText property to specify a custom caption to display for null field values.  \n  \n [!code-vb[BoundFieldNullDisplayText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1327_1.aspx)]\n [!code-cs[BoundFieldNullDisplayText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1327_1.aspx)]"
  syntax:
    content: public virtual string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "A legenda exibida para um campo quando o valor do campo é nulo. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.BoundField.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  id: OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Associa o valor de um campo para o <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objeto."
  remarks: "O <xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>é um método auxiliar usado para vincular o valor de um campo na fonte de dados em uma célula correspondente a <xref:System.Web.UI.WebControls.BoundField>objeto.</xref:System.Web.UI.WebControls.BoundField> </xref:System.Web.UI.WebControls.CheckBoxField.OnDataBindField%2A>"
  syntax:
    content: protected virtual void OnDataBindField (object sender, EventArgs e);
    parameters:
    - id: sender
      type: System.Object
      description: "A origem do evento."
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.BoundField.OnDataBindField*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O controle ao qual o valor do campo está vinculado não é um <xref href=&quot;System.Web.UI.WebControls.TextBox&quot;> </xref> ou um <xref href=&quot;System.Web.UI.WebControls.TableCell&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  id: ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o valor do campo pode ser modificado no modo de edição."
  remarks: "Use a propriedade somente leitura para impedir que os valores exibidos em uma <xref:System.Web.UI.WebControls.BoundField>objeto sendo modificado.</xref:System.Web.UI.WebControls.BoundField> Quando um controle associado a dados está no modo de edição, os campos são somente leitura são exibidos como texto sem formatação, sem os controles de edição.      > [!NOTE] > ReadOnly a propriedade aplica-se somente para o modo de edição. Para impedir que os campos aparecendo no modo de inserção, use o <xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>propriedade.</xref:System.Web.UI.WebControls.DataControlField.InsertVisible%2A>"
  example:
  - "The following code example demonstrates how to use the ReadOnly property to prevent the values of the key field displayed in a <xref:System.Web.UI.WebControls.BoundField> object from being modified in edit mode.  \n  \n [!code-vb[BoundField#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_208_1.aspx)]\n [!code-cs[BoundField#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_208_1.aspx)]"
  syntax:
    content: public virtual bool ReadOnly { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para impedir que o valor do campo que está sendo modificado no modo de edição; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  id: SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se a codificação HTML é suportada por um <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> objeto."
  remarks: "A propriedade SupportsHtmlEncode é uma propriedade de auxiliar usada pela <xref:System.Web.UI.WebControls.BoundField>classe e classes derivadas para determinar se a codificação HTML é suportada pela classe.</xref:System.Web.UI.WebControls.BoundField>"
  syntax:
    content: protected virtual bool SupportsHtmlEncode { get; }
    return:
      type: System.Boolean
      description: "Sempre retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> para indicar que a codificação HTML é suportada por um <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  id: ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Representa a expressão &quot;this&quot;."
  remarks: "Esse campo é usado para indicar que o <xref:System.Web.UI.WebControls.BoundField>objeto deve ser associados em relação à fonte de dados em si, em vez de um campo da fonte de dados.</xref:System.Web.UI.WebControls.BoundField> Nesse caso, o objeto `ToString` valor será exibido no campo.       Esse campo é usado principalmente por desenvolvedores de controle."
  syntax:
    content: public static readonly string ThisExpression;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  id: ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que determina se o controle valida a entrada do cliente ou não."
  syntax:
    content: public System.Web.UI.ValidateRequestMode ValidateRequestMode { get; set; }
    return:
      type: System.Web.UI.ValidateRequestMode
      description: "Um valor que determina se o controle valida a entrada do cliente ou não. O padrão é <xref href=&quot;System.Web.UI.ValidateRequestMode&quot;> </xref>."
  overload: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  id: ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  langs:
  - csharp
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se os controles contidos em um <xref href=&quot;System.Web.UI.WebControls.BoundField&quot;> </xref> retornos de chamada do suporte do objeto."
  remarks: "O método ValidateSupportsCallback é um método auxiliar usado para determinar se os controles contidos em um <xref:System.Web.UI.WebControls.BoundField>retornos de chamada do suporte do objeto.</xref:System.Web.UI.WebControls.BoundField> Esse método foi implementado como um método vazio (um método que não contém nenhum código) para indicar que os retornos de chamada são suportados.      > [!NOTE] > Esse método é usado principalmente por desenvolvedores de controle."
  syntax:
    content: public override void ValidateSupportsCallback ();
    parameters: []
  overload: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.DataControlField
  isExternal: false
  name: System.Web.UI.WebControls.DataControlField
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.WebControls.BoundField.#ctor
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField()
  nameWithType: BoundField.BoundField()
  fullName: System.Web.UI.WebControls.BoundField.BoundField()
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
  fullName: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
  fullName: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties(System.Web.UI.WebControls.DataControlField)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties(DataControlField)
  nameWithType: BoundField.CopyProperties(DataControlField)
  fullName: System.Web.UI.WebControls.BoundField.CopyProperties(DataControlField)
- uid: System.Web.UI.WebControls.BoundField.CreateField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField()
  nameWithType: BoundField.CreateField()
  fullName: System.Web.UI.WebControls.BoundField.CreateField()
- uid: System.Web.UI.WebControls.BoundField.DataField
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
  fullName: System.Web.UI.WebControls.BoundField.DataField
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.BoundField.DataFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
  fullName: System.Web.UI.WebControls.BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(System.Collections.Specialized.IOrderedDictionary,System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  nameWithType: BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell(IOrderedDictionary,DataControlFieldCell,DataControlRowState,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.DataControlFieldCell
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlFieldCell
  nameWithType: DataControlFieldCell
  fullName: System.Web.UI.WebControls.DataControlFieldCell
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue(System.Object,System.Boolean)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue(Object,Boolean)
  nameWithType: BoundField.FormatDataValue(Object,Boolean)
  fullName: System.Web.UI.WebControls.BoundField.FormatDataValue(Object,Boolean)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue()
  nameWithType: BoundField.GetDesignTimeValue()
  fullName: System.Web.UI.WebControls.BoundField.GetDesignTimeValue()
- uid: System.Web.UI.WebControls.BoundField.GetValue(System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue(Control)
  nameWithType: BoundField.GetValue(Control)
  fullName: System.Web.UI.WebControls.BoundField.GetValue(Control)
- uid: System.Web.UI.Control
  parent: System.Web.UI
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Web.UI.Control
- uid: System.Web.UI.WebControls.BoundField.HeaderText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
  fullName: System.Web.UI.WebControls.BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
  fullName: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize(System.Boolean,System.Web.UI.Control)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize(Boolean,Control)
  nameWithType: BoundField.Initialize(Boolean,Control)
  fullName: System.Web.UI.WebControls.BoundField.Initialize(Boolean,Control)
- uid: System.Web.UI.WebControls.BoundField.InitializeCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlCellType,System.Web.UI.WebControls.DataControlRowState,System.Int32)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  nameWithType: BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
  fullName: System.Web.UI.WebControls.BoundField.InitializeCell(DataControlFieldCell,DataControlCellType,DataControlRowState,Int32)
- uid: System.Web.UI.WebControls.DataControlCellType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlCellType
  nameWithType: DataControlCellType
  fullName: System.Web.UI.WebControls.DataControlCellType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell(System.Web.UI.WebControls.DataControlFieldCell,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell(DataControlFieldCell,DataControlRowState)
  nameWithType: BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
  fullName: System.Web.UI.WebControls.BoundField.InitializeDataCell(DataControlFieldCell,DataControlRowState)
- uid: System.Web.UI.WebControls.BoundField.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: BoundField.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.BoundField.LoadViewState(Object)
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
  fullName: System.Web.UI.WebControls.BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField(Object,EventArgs)
  nameWithType: BoundField.OnDataBindField(Object,EventArgs)
  fullName: System.Web.UI.WebControls.BoundField.OnDataBindField(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.BoundField.ReadOnly
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
  fullName: System.Web.UI.WebControls.BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
  fullName: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ThisExpression
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ThisExpression
  nameWithType: BoundField.ThisExpression
  fullName: System.Web.UI.WebControls.BoundField.ThisExpression
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
  fullName: System.Web.UI.WebControls.BoundField.ValidateRequestMode
- uid: System.Web.UI.ValidateRequestMode
  parent: System.Web.UI
  isExternal: false
  name: ValidateRequestMode
  nameWithType: ValidateRequestMode
  fullName: System.Web.UI.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback()
  nameWithType: BoundField.ValidateSupportsCallback()
  fullName: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback()
- uid: System.Web.UI.WebControls.BoundField.#ctor*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: BoundField
  nameWithType: BoundField.BoundField
- uid: System.Web.UI.WebControls.BoundField.ApplyFormatInEditMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: BoundField.ApplyFormatInEditMode
- uid: System.Web.UI.WebControls.BoundField.ConvertEmptyStringToNull*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: BoundField.ConvertEmptyStringToNull
- uid: System.Web.UI.WebControls.BoundField.CopyProperties*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CopyProperties
  nameWithType: BoundField.CopyProperties
- uid: System.Web.UI.WebControls.BoundField.CreateField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: CreateField
  nameWithType: BoundField.CreateField
- uid: System.Web.UI.WebControls.BoundField.DataField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataField
  nameWithType: BoundField.DataField
- uid: System.Web.UI.WebControls.BoundField.DataFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: DataFormatString
  nameWithType: BoundField.DataFormatString
- uid: System.Web.UI.WebControls.BoundField.ExtractValuesFromCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ExtractValuesFromCell
  nameWithType: BoundField.ExtractValuesFromCell
- uid: System.Web.UI.WebControls.BoundField.FormatDataValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: FormatDataValue
  nameWithType: BoundField.FormatDataValue
- uid: System.Web.UI.WebControls.BoundField.GetDesignTimeValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetDesignTimeValue
  nameWithType: BoundField.GetDesignTimeValue
- uid: System.Web.UI.WebControls.BoundField.GetValue*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: GetValue
  nameWithType: BoundField.GetValue
- uid: System.Web.UI.WebControls.BoundField.HeaderText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HeaderText
  nameWithType: BoundField.HeaderText
- uid: System.Web.UI.WebControls.BoundField.HtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncode
  nameWithType: BoundField.HtmlEncode
- uid: System.Web.UI.WebControls.BoundField.HtmlEncodeFormatString*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: HtmlEncodeFormatString
  nameWithType: BoundField.HtmlEncodeFormatString
- uid: System.Web.UI.WebControls.BoundField.Initialize*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: Initialize
  nameWithType: BoundField.Initialize
- uid: System.Web.UI.WebControls.BoundField.InitializeCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeCell
  nameWithType: BoundField.InitializeCell
- uid: System.Web.UI.WebControls.BoundField.InitializeDataCell*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: InitializeDataCell
  nameWithType: BoundField.InitializeDataCell
- uid: System.Web.UI.WebControls.BoundField.LoadViewState*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: LoadViewState
  nameWithType: BoundField.LoadViewState
- uid: System.Web.UI.WebControls.BoundField.NullDisplayText*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: NullDisplayText
  nameWithType: BoundField.NullDisplayText
- uid: System.Web.UI.WebControls.BoundField.OnDataBindField*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: OnDataBindField
  nameWithType: BoundField.OnDataBindField
- uid: System.Web.UI.WebControls.BoundField.ReadOnly*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ReadOnly
  nameWithType: BoundField.ReadOnly
- uid: System.Web.UI.WebControls.BoundField.SupportsHtmlEncode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: SupportsHtmlEncode
  nameWithType: BoundField.SupportsHtmlEncode
- uid: System.Web.UI.WebControls.BoundField.ValidateRequestMode*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateRequestMode
  nameWithType: BoundField.ValidateRequestMode
- uid: System.Web.UI.WebControls.BoundField.ValidateSupportsCallback*
  parent: System.Web.UI.WebControls.BoundField
  isExternal: false
  name: ValidateSupportsCallback
  nameWithType: BoundField.ValidateSupportsCallback
