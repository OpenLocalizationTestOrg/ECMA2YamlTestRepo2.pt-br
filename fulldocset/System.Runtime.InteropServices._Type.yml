### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices._Type
  id: _Type
  children:
  - System.Runtime.InteropServices._Type.Assembly
  - System.Runtime.InteropServices._Type.AssemblyQualifiedName
  - System.Runtime.InteropServices._Type.Attributes
  - System.Runtime.InteropServices._Type.BaseType
  - System.Runtime.InteropServices._Type.DeclaringType
  - System.Runtime.InteropServices._Type.Equals(System.Object)
  - System.Runtime.InteropServices._Type.Equals(System.Type)
  - System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  - System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  - System.Runtime.InteropServices._Type.FullName
  - System.Runtime.InteropServices._Type.GetArrayRank
  - System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  - System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetConstructors
  - System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  - System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  - System.Runtime.InteropServices._Type.GetDefaultMembers
  - System.Runtime.InteropServices._Type.GetElementType
  - System.Runtime.InteropServices._Type.GetEvent(System.String)
  - System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetEvents
  - System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetField(System.String)
  - System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetFields
  - System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetHashCode
  - System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._Type.GetInterface(System.String)
  - System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  - System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  - System.Runtime.InteropServices._Type.GetInterfaces
  - System.Runtime.InteropServices._Type.GetMember(System.String)
  - System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMembers
  - System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMethod(System.String)
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetMethods
  - System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetNestedType(System.String)
  - System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetNestedTypes
  - System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperties
  - System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperty(System.String)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  - System.Runtime.InteropServices._Type.GetType
  - System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  - System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  - System.Runtime.InteropServices._Type.GUID
  - System.Runtime.InteropServices._Type.HasElementType
  - System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  - System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  - System.Runtime.InteropServices._Type.IsAbstract
  - System.Runtime.InteropServices._Type.IsAnsiClass
  - System.Runtime.InteropServices._Type.IsArray
  - System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  - System.Runtime.InteropServices._Type.IsAutoClass
  - System.Runtime.InteropServices._Type.IsAutoLayout
  - System.Runtime.InteropServices._Type.IsByRef
  - System.Runtime.InteropServices._Type.IsClass
  - System.Runtime.InteropServices._Type.IsCOMObject
  - System.Runtime.InteropServices._Type.IsContextful
  - System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  - System.Runtime.InteropServices._Type.IsEnum
  - System.Runtime.InteropServices._Type.IsExplicitLayout
  - System.Runtime.InteropServices._Type.IsImport
  - System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  - System.Runtime.InteropServices._Type.IsInterface
  - System.Runtime.InteropServices._Type.IsLayoutSequential
  - System.Runtime.InteropServices._Type.IsMarshalByRef
  - System.Runtime.InteropServices._Type.IsNestedAssembly
  - System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  - System.Runtime.InteropServices._Type.IsNestedFamily
  - System.Runtime.InteropServices._Type.IsNestedFamORAssem
  - System.Runtime.InteropServices._Type.IsNestedPrivate
  - System.Runtime.InteropServices._Type.IsNestedPublic
  - System.Runtime.InteropServices._Type.IsNotPublic
  - System.Runtime.InteropServices._Type.IsPointer
  - System.Runtime.InteropServices._Type.IsPrimitive
  - System.Runtime.InteropServices._Type.IsPublic
  - System.Runtime.InteropServices._Type.IsSealed
  - System.Runtime.InteropServices._Type.IsSerializable
  - System.Runtime.InteropServices._Type.IsSpecialName
  - System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  - System.Runtime.InteropServices._Type.IsUnicodeClass
  - System.Runtime.InteropServices._Type.IsValueType
  - System.Runtime.InteropServices._Type.MemberType
  - System.Runtime.InteropServices._Type.Module
  - System.Runtime.InteropServices._Type.Name
  - System.Runtime.InteropServices._Type.Namespace
  - System.Runtime.InteropServices._Type.ReflectedType
  - System.Runtime.InteropServices._Type.ToString
  - System.Runtime.InteropServices._Type.TypeHandle
  - System.Runtime.InteropServices._Type.TypeInitializer
  - System.Runtime.InteropServices._Type.UnderlyingSystemType
  langs:
  - csharp
  name: _Type
  nameWithType: _Type
  fullName: System.Runtime.InteropServices._Type
  type: Interface
  summary: "Expõe os membros públicos do &lt;xref:System.Type?displayProperty=fullName&gt; classe para o código não gerenciado."
  remarks: "Essa interface é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       Essa interface preserva a ordem de vtable do <xref:System.Type?displayProperty=fullName>classe membros que podem ser acessados por objetos COM não gerenciados.</xref:System.Type?displayProperty=fullName>"
  syntax:
    content: >-
      [System.CLSCompliant(false)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("BCA8B44D-AAD6-3A86-8AB7-03349F4F2DA2")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      [System.Runtime.InteropServices.TypeLibImportClass(typeof(System.Type))]

      public interface _Type
  implements: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Assembly
  id: Assembly
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Assembly
  nameWithType: _Type.Assembly
  fullName: System.Runtime.InteropServices._Type.Assembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.Assembly%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.Assembly%2A?displayProperty=fullName>obtém propriedade do <xref:System.Reflection.Assembly>em que o tipo é declarado.</xref:System.Reflection.Assembly> </xref:System.Type.Assembly%2A?displayProperty=fullName> Para tipos genéricos, essa propriedade obtém o <xref:System.Reflection.Assembly>em que o tipo genérico é definido.</xref:System.Reflection.Assembly>"
  syntax:
    content: public System.Reflection.Assembly Assembly { get; }
    return:
      type: System.Reflection.Assembly
      description: "Um <xref:System.Reflection.Assembly>a instância que descreve o assembly que contém o tipo atual.</xref:System.Reflection.Assembly>"
  overload: System.Runtime.InteropServices._Type.Assembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  id: AssemblyQualifiedName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
  fullName: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>propriedade obtém o nome qualificado de assembly do <xref:System.Type>, incluindo o nome do assembly do qual o <xref:System.Type>foi carregado.</xref:System.Type> </xref:System.Type> </xref:System.Type.AssemblyQualifiedName%2A?displayProperty=fullName>"
  syntax:
    content: public string AssemblyQualifiedName { get; }
    return:
      type: System.String
      description: "O nome qualificado de assembly do <xref:System.Type>, incluindo o nome do assembly do qual o <xref:System.Type>foi carregado.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.AssemblyQualifiedName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Attributes
  id: Attributes
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Attributes
  nameWithType: _Type.Attributes
  fullName: System.Runtime.InteropServices._Type.Attributes
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.Attributes%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       A <xref:System.Type.Attributes%2A?displayProperty=fullName>propriedade obtém os atributos associados a <xref:System.Type>.</xref:System.Type> </xref:System.Type.Attributes%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.TypeAttributes Attributes { get; }
    return:
      type: System.Reflection.TypeAttributes
      description: "Um <xref:System.Reflection.TypeAttributes>objeto que representa o conjunto de atributos do <xref:System.Type>, a menos que o <xref:System.Type>representa um parâmetro de tipo genérico, em cujo caso o valor é especificado.</xref:System.Type> </xref:System.Type> </xref:System.Reflection.TypeAttributes>"
  overload: System.Runtime.InteropServices._Type.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.BaseType
  id: BaseType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: BaseType
  nameWithType: _Type.BaseType
  fullName: System.Runtime.InteropServices._Type.BaseType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.BaseType%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.BaseType%2A?displayProperty=fullName>propriedade obtém o tipo do qual atual <xref:System.Type>herda diretamente.</xref:System.Type> </xref:System.Type.BaseType%2A?displayProperty=fullName>"
  syntax:
    content: public Type BaseType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>do qual atual <xref:System.Type>herda diretamente, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se atual <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> representa a <xref:System.Object>classe</xref:System.Object> </xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.BaseType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.DeclaringType
  id: DeclaringType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: DeclaringType
  nameWithType: _Type.DeclaringType
  fullName: System.Runtime.InteropServices._Type.DeclaringType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.DeclaringType%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.DeclaringType%2A?displayProperty=fullName>propriedade obtém a classe que declara a esse membro.</xref:System.Type.DeclaringType%2A?displayProperty=fullName>"
  syntax:
    content: public Type DeclaringType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>objeto para a classe que declara a esse membro.</xref:System.Type> Se o tipo for um tipo aninhado, essa propriedade retorna o tipo de delimitador."
  overload: System.Runtime.InteropServices._Type.DeclaringType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: _Type.Equals(Object)
  fullName: System.Runtime.InteropServices._Type.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.Equals%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.Equals%2A?displayProperty=fullName>método determina se o tipo de sistema subjacente da atual <xref:System.Type>é o mesmo que o tipo subjacente do sistema de <xref:System.Object>.</xref:System.Object> especificado</xref:System.Type> </xref:System.Type.Equals%2A?displayProperty=fullName>"
  syntax:
    content: public bool Equals (object other);
    parameters:
    - id: other
      type: System.Object
      description: "O <xref:System.Object>cujo tipo subjacente do sistema é a ser comparado com o tipo subjacente do sistema de <xref:System.Type>.</xref:System.Type> atual</xref:System.Object>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o tipo de sistema subjacente de <code> o </code> é o mesmo que o tipo de sistema subjacente do atual <xref:System.Type>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Equals(System.Type)
  id: Equals(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Equals(Type)
  nameWithType: _Type.Equals(Type)
  fullName: System.Runtime.InteropServices._Type.Equals(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.Equals%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.Equals%2A?displayProperty=fullName>método determina se o tipo de sistema subjacente da atual <xref:System.Type>é o mesmo que o tipo subjacente do sistema de <xref:System.Type>.</xref:System.Type> especificado</xref:System.Type> </xref:System.Type.Equals%2A?displayProperty=fullName>"
  syntax:
    content: public bool Equals (Type o);
    parameters:
    - id: o
      type: System.Type
      description: "O <xref:System.Type>cujo tipo subjacente do sistema é a ser comparado com o tipo subjacente do sistema de <xref:System.Type>.</xref:System.Type> atual</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o tipo de sistema subjacente de <code> o </code> é o mesmo que o tipo de sistema subjacente do atual <xref:System.Type>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  id: FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FindInterfaces(TypeFilter,Object)
  nameWithType: _Type.FindInterfaces(TypeFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindInterfaces(TypeFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.FindInterfaces%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.FindInterfaces%2A?displayProperty=fullName>método retorna uma matriz de <xref:System.Type>objetos que representa uma lista filtrada de interfaces implementada ou herdada por <xref:System.Type>.</xref:System.Type> atual</xref:System.Type> </xref:System.Type.FindInterfaces%2A?displayProperty=fullName>"
  syntax:
    content: public Type[] FindInterfaces (System.Reflection.TypeFilter filter, object filterCriteria);
    parameters:
    - id: filter
      type: System.Reflection.TypeFilter
      description: "O <xref href=&quot;System.Reflection.TypeFilter&quot;> </xref> representante que compara as interfaces contra `filterCriteria`."
    - id: filterCriteria
      type: System.Object
      description: "Os critérios de pesquisa que determina se uma interface deve ser incluída na matriz retornada."
    return:
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representa uma lista filtrada de interfaces implementada ou herdada por <xref:System.Type>.</xref:System.Type> atual</xref:System.Type>       Uma matriz vazia de tipo <xref:System.Type>se nenhuma interfaces correspondentes ao filtro implementadas ou herdadas por atual <xref:System.Type>.</xref:System.Type> </xref:System.Type> - ou -"
  overload: System.Runtime.InteropServices._Type.FindInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  id: FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  nameWithType: _Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.FindMembers%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.FindMembers%2A?displayProperty=fullName>método retorna um conjunto filtrado de <xref:System.Reflection.MemberInfo>objetos do tipo de membro especificado.</xref:System.Reflection.MemberInfo> </xref:System.Type.FindMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] FindMembers (System.Reflection.MemberTypes memberType, System.Reflection.BindingFlags bindingAttr, System.Reflection.MemberFilter filter, object filterCriteria);
    parameters:
    - id: memberType
      type: System.Reflection.MemberTypes
      description: "Um <xref uid=&quot;langword_csharp_MemberTypes&quot; name=&quot;MemberTypes&quot; href=&quot;&quot;> </xref> indicando o tipo de membro para a pesquisa de objeto."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: filter
      type: System.Reflection.MemberFilter
      description: "O representante que faz as comparações, retornando <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o membro atualmente sendo inspecionados correspondências a `filterCriteria` e <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> caso contrário. Você pode usar o <xref uid=&quot;langword_csharp_FilterAttribute&quot; name=&quot;FilterAttribute&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_FilterName&quot; name=&quot;FilterName&quot; href=&quot;&quot;> </xref>, e <xref uid=&quot;langword_csharp_FilterNameIgnoreCase&quot; name=&quot;FilterNameIgnoreCase&quot; href=&quot;&quot;> </xref> delegados fornecidos por esta classe. O primeiro usa os campos de <xref uid=&quot;langword_csharp_FieldAttributes&quot; name=&quot;FieldAttributes&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_MethodAttributes&quot; name=&quot;MethodAttributes&quot; href=&quot;&quot;> </xref>, e <xref uid=&quot;langword_csharp_MethodImplAttributes&quot; name=&quot;MethodImplAttributes&quot; href=&quot;&quot;> </xref> como critérios de pesquisa e usam os dois delegados <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> objetos como critério de pesquisa."
    - id: filterCriteria
      type: System.Object
      description: "Os critérios de pesquisa que determina se um membro é retornado na matriz de <xref uid=&quot;langword_csharp_MemberInfo&quot; name=&quot;MemberInfo&quot; href=&quot;&quot;> </xref> objetos.       Os campos de <xref uid=&quot;langword_csharp_FieldAttributes&quot; name=&quot;FieldAttributes&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_MethodAttributes&quot; name=&quot;MethodAttributes&quot; href=&quot;&quot;> </xref>, e <xref uid=&quot;langword_csharp_MethodImplAttributes&quot; name=&quot;MethodImplAttributes&quot; href=&quot;&quot;> </xref> pode ser usado em conjunto com o <xref uid=&quot;langword_csharp_FilterAttribute&quot; name=&quot;FilterAttribute&quot; href=&quot;&quot;> </xref> representante fornecido por esta classe."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Um conjunto filtrado de <xref:System.Reflection.MemberInfo>objetos do tipo de membro especificado.</xref:System.Reflection.MemberInfo>       - ou - uma matriz vazia do tipo <xref:System.Reflection.MemberInfo>, se o atual <xref:System.Type>não tem membros de tipo <code> memberType </code> que correspondem aos critérios de filtro.</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.FindMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.FullName
  id: FullName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: FullName
  nameWithType: _Type.FullName
  fullName: System.Runtime.InteropServices._Type.FullName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.FullName%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.FullName%2A?displayProperty=fullName>propriedade obtém o nome totalmente qualificado do <xref:System.Type>, incluindo o namespace do <xref:System.Type>, mas não o assembly.</xref:System.Type> </xref:System.Type> </xref:System.Type.FullName%2A?displayProperty=fullName>"
  syntax:
    content: public string FullName { get; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o nome totalmente qualificado do <xref:System.Type>, incluindo o namespace do <xref:System.Type>, mas não o assembly.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.FullName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetArrayRank
  id: GetArrayRank
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetArrayRank()
  nameWithType: _Type.GetArrayRank()
  fullName: System.Runtime.InteropServices._Type.GetArrayRank()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetArrayRank%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetArrayRank%2A?displayProperty=fullName>método obtém o número de dimensões em <xref:System.Array>.</xref:System.Array> </xref:System.Type.GetArrayRank%2A?displayProperty=fullName>"
  syntax:
    content: public int GetArrayRank ();
    parameters: []
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>que contém o número de dimensões no atual <xref:System.Type>.</xref:System.Type> </xref:System.Int32>"
  overload: System.Runtime.InteropServices._Type.GetArrayRank*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  id: GetConstructor(System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(Type[])
  nameWithType: _Type.GetConstructor(Type[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetConstructor%2A?displayProperty=fullName>método procura um construtor de instância pública cujos parâmetros correspondem aos tipos na matriz especificada.</xref:System.Type.GetConstructor%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (Type[] types);
    parameters:
    - id: types
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam o número, ordem e tipo dos parâmetros para o construtor desejado.</xref:System.Type>       Uma matriz vazia de - ou - <xref:System.Type>objetos, para obter um construtor sem parâmetros.</xref:System.Type> Tal uma matriz vazia é fornecida pelo <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref> campo &lt;xref:System.Type?displayProperty=fullName&gt;."
    return:
      type: System.Reflection.ConstructorInfo
      description: "Um <xref:System.Reflection.ConstructorInfo>objeto que representa o construtor de instância pública cujos parâmetros correspondem aos tipos na matriz de parâmetros de tipo, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetConstructor%2A?displayProperty=fullName>método procura um construtor cujos parâmetros correspondem a tipos de argumento especificados e os modificadores, usando as restrições de associação especificada.</xref:System.Type.GetConstructor%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "Um <xref href=&quot;System.Reflection.Binder&quot;> </xref> objeto que define um conjunto de propriedades e permite que a associação, que pode envolver a seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: types
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam o número, ordem e tipo dos parâmetros para o construtor para obter.</xref:System.Type>       Uma matriz vazia do tipo - ou - <xref:System.Type>(isto é, o tipo [] tipos = novo Type[0]) para obter um construtor sem parâmetros.</xref:System.Type>       -or-       <xref:System.Type>.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Uma matriz de <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> objetos que representam os atributos associados com o elemento correspondente na matriz de tipo de parâmetro. O associador padrão não processar esse parâmetro."
    return:
      type: System.Reflection.ConstructorInfo
      description: "Um <xref:System.Reflection.ConstructorInfo>objeto que representa o construtor que corresponde aos requisitos especificados, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetConstructor%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetConstructor%2A?displayProperty=fullName>método procura um construtor cujos parâmetros correspondem a tipos de argumento especificados e os modificadores, usando as restrições de associação especificada e a convenção de chamada especificada.</xref:System.Type.GetConstructor%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo GetConstructor (System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "Um <xref href=&quot;System.Reflection.Binder&quot;> </xref> objeto que define um conjunto de propriedades e permite que a associação, que pode envolver a seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: "O <xref:System.Reflection.CallingConventions>objeto que especifica o conjunto de regras a serem usadas em relação a ordem e o layout dos argumentos, como o valor de retorno for passado, quais registros são usados para argumentos, e a pilha é limpo.</xref:System.Reflection.CallingConventions>"
    - id: types
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam o número, ordem e tipo dos parâmetros para o construtor para obter.</xref:System.Type>       Uma matriz vazia do tipo - ou - <xref:System.Type>(isto é, o tipo [] tipos = novo Type[0]) para obter um construtor sem parâmetros.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Uma matriz de <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> objetos que representam os atributos associados com o elemento correspondente na `types` matriz. O associador padrão não processar esse parâmetro."
    return:
      type: System.Reflection.ConstructorInfo
      description: "Um <xref:System.Reflection.ConstructorInfo>objeto que representa o construtor que corresponde aos requisitos especificados, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructors
  id: GetConstructors
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructors()
  nameWithType: _Type.GetConstructors()
  fullName: System.Runtime.InteropServices._Type.GetConstructors()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetConstructors%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetConstructors%2A?displayProperty=fullName>método retorna todos os construtores públicos definido para a atual <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetConstructors%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo[] GetConstructors ();
    parameters: []
    return:
      type: System.Reflection.ConstructorInfo[]
      description: "Uma matriz de <xref:System.Reflection.ConstructorInfo>objetos que representam todos os construtores de instância pública definidos para a atual <xref:System.Type>, mas não incluindo o inicializador de tipo (construtor estático).</xref:System.Type> </xref:System.Reflection.ConstructorInfo> Se nenhum construtor de instância pública é definidas para o atual <xref:System.Type>, ou se o atual <xref:System.Type>representa um parâmetro de tipo de um genérico tipo ou método de definição, uma matriz vazia do tipo <xref:System.Reflection.ConstructorInfo>é retornado.</xref:System.Reflection.ConstructorInfo> </xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetConstructors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  id: GetConstructors(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetConstructors(BindingFlags)
  nameWithType: _Type.GetConstructors(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetConstructors(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetConstructors%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetConstructors%2A?displayProperty=fullName>método procura os construtores definidos para o atual <xref:System.Type>usando o operador especificado <xref:System.Reflection.BindingFlags>.</xref:System.Reflection.BindingFlags> </xref:System.Type> </xref:System.Type.GetConstructors%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo[] GetConstructors (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.ConstructorInfo[]
      description: "Uma matriz de <xref:System.Reflection.ConstructorInfo>objetos que representam todos os construtores definidos para o atual <xref:System.Type>que correspondam às restrições de associação especificado, incluindo o inicializador de tipo, se ele está definido.</xref:System.Type> </xref:System.Reflection.ConstructorInfo> Retorna uma matriz vazia do tipo <xref:System.Reflection.ConstructorInfo>se nenhum construtor é definidos para a atual <xref:System.Type>, se nenhum dos construtores definidos corresponde às restrições de associação, ou se o atual <xref:System.Type>representa um parâmetro de tipo de uma definição de tipo ou método genérico.</xref:System.Type> </xref:System.Type> </xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.GetConstructors*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  id: GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetCustomAttributes(Boolean)
  nameWithType: _Type.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName>método retorna todos os atributos aplicados a este membro.</xref:System.Reflection.Assembly.GetCustomAttributes%2A?displayProperty=fullName>"
  syntax:
    content: public object[] GetCustomAttributes (bool inherit);
    parameters:
    - id: inherit
      type: System.Boolean
      description: "Especifica se deve pesquisar a cadeia de herança deste membro para encontrar os atributos."
    return:
      type: System.Object[]
      description: "Uma matriz de atributos personalizados aplicados a este membro, ou uma matriz com zero elementos (0) se nenhum atributo tiverem sido aplicado."
  overload: System.Runtime.InteropServices._Type.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  id: GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _Type.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>método retorna todos os atributos aplicados a este membro.</xref:System.Reflection.MemberInfo.GetCustomAttributes%2A?displayProperty=fullName>"
  syntax:
    content: public object[] GetCustomAttributes (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "O tipo de atributo a ser pesquisado. Somente os atributos pode ser atribuídos a esse tipo são retornados."
    - id: inherit
      type: System.Boolean
      description: "Especifica se deve pesquisar a cadeia de herança deste membro para encontrar os atributos."
    return:
      type: System.Object[]
      description: "Uma matriz de atributos personalizados aplicados a este membro, ou uma matriz com zero elementos (0) se nenhum atributo tiverem sido aplicado."
  overload: System.Runtime.InteropServices._Type.GetCustomAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers
  id: GetDefaultMembers
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetDefaultMembers()
  nameWithType: _Type.GetDefaultMembers()
  fullName: System.Runtime.InteropServices._Type.GetDefaultMembers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName>método procura membros definidos atual <xref:System.Type>cujo <xref:System.Reflection.DefaultMemberAttribute>está definido.</xref:System.Reflection.DefaultMemberAttribute> </xref:System.Type> </xref:System.Type.GetDefaultMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetDefaultMembers ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: "Uma matriz de <xref:System.Reflection.MemberInfo>objetos que representa todos os membros padrão de <xref:System.Type>.</xref:System.Type> atual</xref:System.Reflection.MemberInfo>       Uma matriz vazia do tipo - ou - <xref:System.Reflection.MemberInfo>, se o atual <xref:System.Type>não tem membros padrão.</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetDefaultMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetElementType
  id: GetElementType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetElementType()
  nameWithType: _Type.GetElementType()
  fullName: System.Runtime.InteropServices._Type.GetElementType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetElementType%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetElementType%2A?displayProperty=fullName>método retorna o <xref:System.Type>do objeto englobados ou chamado pelo tipo de referência, ponteiro ou matriz atual.</xref:System.Type> </xref:System.Type.GetElementType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetElementType ();
    parameters: []
    return:
      type: System.Type
      description: "O <xref:System.Type>do objeto englobados ou chamado pelo tipo de referência, ponteiro ou matriz atual.</xref:System.Type>       - ou - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se atual <xref:System.Type>não é uma matriz ou um ponteiro não é passada por referência ou representa um tipo genérico ou um parâmetro de tipo de uma definição de tipo ou método genérico.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String)
  id: GetEvent(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvent(String)
  nameWithType: _Type.GetEvent(String)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetEvent%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetEvent%2A?displayProperty=fullName>método procura eventos que são declarados ou herdadas por atual <xref:System.Type>, usando as restrições de associação especificada.</xref:System.Type> </xref:System.Type.GetEvent%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo GetEvent (string name);
    parameters:
    - id: name
      type: System.String
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.EventInfo
      description: "Uma matriz de <xref:System.Reflection.EventInfo>objetos que representam todos os eventos que são declarados ou herdados por atual <xref:System.Type>que correspondam às restrições de associação especificada.</xref:System.Type> </xref:System.Reflection.EventInfo>       Uma matriz vazia do tipo - ou - <xref:System.Reflection.EventInfo>, se o atual <xref:System.Type>não tem eventos, ou se nenhum dos eventos corresponder às restrições de associação.</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  id: GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvent(String,BindingFlags)
  nameWithType: _Type.GetEvent(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetEvent%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetEvent%2A?displayProperty=fullName>método retorna o <xref:System.Reflection.EventInfo>objeto que representa o evento especificado, usando as restrições de associação especificada.</xref:System.Reflection.EventInfo> </xref:System.Type.GetEvent%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo GetEvent (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome de um evento que é declarado ou herdado por <xref:System.Type>.</xref:System.Type> atual</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.EventInfo
      description: "O <xref:System.Reflection.EventInfo>objeto que representa o evento especificado que é declarado ou herdado por atual <xref:System.Type>, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvents
  id: GetEvents
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvents()
  nameWithType: _Type.GetEvents()
  fullName: System.Runtime.InteropServices._Type.GetEvents()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetEvents%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetEvents%2A?displayProperty=fullName>método retorna todos os eventos públicos que são declarados ou herdados por <xref:System.Type>.</xref:System.Type> atual</xref:System.Type.GetEvents%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo[] GetEvents ();
    parameters: []
    return:
      type: System.Reflection.EventInfo[]
      description: "Uma matriz de <xref:System.Reflection.EventInfo>objetos que representam todos os eventos públicos que são declarados ou herdados por <xref:System.Type>.</xref:System.Type> atual</xref:System.Reflection.EventInfo>       Uma matriz vazia do tipo - ou - <xref:System.Reflection.EventInfo>, se o atual <xref:System.Type>não tem eventos públicos.</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  id: GetEvents(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetEvents(BindingFlags)
  nameWithType: _Type.GetEvents(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvents(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetEvents%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetEvents%2A?displayProperty=fullName>método procura eventos que são declarados ou herdadas por atual <xref:System.Type>, usando as restrições de associação especificada.</xref:System.Type> </xref:System.Type.GetEvents%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.EventInfo[] GetEvents (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.EventInfo[]
      description: "Uma matriz de <xref:System.Reflection.EventInfo>objetos que representam todos os eventos que são declarados ou herdados por atual <xref:System.Type>que correspondam às restrições de associação especificada.</xref:System.Type> </xref:System.Reflection.EventInfo>       Uma matriz vazia do tipo - ou - <xref:System.Reflection.EventInfo>, se o atual <xref:System.Type>não tem eventos, ou se nenhum dos eventos corresponder às restrições de associação.</xref:System.Type> </xref:System.Reflection.EventInfo>"
  overload: System.Runtime.InteropServices._Type.GetEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetField(System.String)
  id: GetField(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetField(String)
  nameWithType: _Type.GetField(String)
  fullName: System.Runtime.InteropServices._Type.GetField(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetField%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetField%2A?displayProperty=fullName>método pesquisa o campo público com o nome especificado.</xref:System.Type.GetField%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome do campo de dados para obter.</xref:System.String>"
    return:
      type: System.Reflection.FieldInfo
      description: "Um <xref:System.Reflection.FieldInfo>objeto que representa o campo público com o nome especificado, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  id: GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetField(String,BindingFlags)
  nameWithType: _Type.GetField(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetField(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetField%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetField%2A?displayProperty=fullName>método pesquisa o campo especificado, usando as restrições de associação especificada.</xref:System.Type.GetField%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo GetField (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome do campo de dados para obter.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.FieldInfo
      description: "Um <xref:System.Reflection.FieldInfo>objeto que representa o campo que corresponde aos requisitos especificados, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetField*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetFields
  id: GetFields
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetFields()
  nameWithType: _Type.GetFields()
  fullName: System.Runtime.InteropServices._Type.GetFields()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetFields%2A?displayProperty=fullName>método retorna todos os campos públicos de <xref:System.Type>.</xref:System.Type> atual</xref:System.Type.GetFields%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields ();
    parameters: []
    return:
      type: System.Reflection.FieldInfo[]
      description: "Uma matriz de <xref:System.Reflection.FieldInfo>objetos que representam todos os campos públicos definidos para <xref:System.Type>.</xref:System.Type> atual</xref:System.Reflection.FieldInfo>       Uma matriz vazia de tipo <xref:System.Reflection.FieldInfo>se os campos não públicos são definidos para atual <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.FieldInfo> - ou -"
  overload: System.Runtime.InteropServices._Type.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  id: GetFields(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetFields(BindingFlags)
  nameWithType: _Type.GetFields(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetFields(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetFields%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetFields%2A?displayProperty=fullName>método de pesquisa para os campos definidos para a atual <xref:System.Type>, usando as restrições de associação especificada.</xref:System.Type> </xref:System.Type.GetFields%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.FieldInfo[] GetFields (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.FieldInfo[]
      description: "Uma matriz de <xref:System.Reflection.FieldInfo>objetos que representam todos os campos definidos para a atual <xref:System.Type>que correspondam às restrições de associação especificada.</xref:System.Type> </xref:System.Reflection.FieldInfo>       Uma matriz vazia do tipo - ou - <xref:System.Reflection.FieldInfo>, se nenhum campo foi definido para a atual <xref:System.Type>, ou se nenhum dos campos definidos corresponder às restrições de associação.</xref:System.Type> </xref:System.Reflection.FieldInfo>"
  overload: System.Runtime.InteropServices._Type.GetFields*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetHashCode
  id: GetHashCode
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: _Type.GetHashCode()
  fullName: System.Runtime.InteropServices._Type.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetHashCode%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetHashCode%2A?displayProperty=fullName>método.</xref:System.Type.GetHashCode%2A?displayProperty=fullName>"
  syntax:
    content: public int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>que contém o código hash para essa instância.</xref:System.Int32>"
  overload: System.Runtime.InteropServices._Type.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  id: GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Um conjunto de nomes é mapeado para um conjunto correspondente de identificadores de expedição."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado. Para obter mais informações sobre `IDispatch::GetIDsOfNames`, consulte a biblioteca MSDN."
  syntax:
    content: public void GetIDsOfNames (ref Guid riid, IntPtr rgszNames, uint cNames, uint lcid, IntPtr rgDispId);
    parameters:
    - id: riid
      type: System.Guid
      description: "Reservado para uso futuro. Deve ser IID_NULL."
    - id: rgszNames
      type: System.IntPtr
      description: "No passado a matriz de nomes a serem mapeados."
    - id: cNames
      type: System.UInt32
      description: "Contagem dos nomes a serem mapeados."
    - id: lcid
      type: System.UInt32
      description: "O contexto de localidade no qual os nomes de interpretar."
    - id: rgDispId
      type: System.IntPtr
      description: "Matriz alocada pelo chamador que recebe as IDs correspondentes aos nomes."
  overload: System.Runtime.InteropServices._Type.GetIDsOfNames*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String)
  id: GetInterface(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterface(String)
  nameWithType: _Type.GetInterface(String)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetInterface%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetInterface%2A?displayProperty=fullName>método de pesquisa para a interface com o nome especificado.</xref:System.Type.GetInterface%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetInterface (string name);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome da interface para obter.</xref:System.String> Para interfaces genéricas, esse é o nome danificado."
    return:
      type: System.Type
      description: "Um <xref:System.Type>de objeto que representa a interface com o nome especificado, implementada ou herdada por atual <xref:System.Type>, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  id: GetInterface(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterface(String,Boolean)
  nameWithType: _Type.GetInterface(String,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetInterface%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetInterface%2A?displayProperty=fullName>método pesquisa para a interface especificada, especificar se deseja fazer uma pesquisa diferencia maiusculas de minúsculas.</xref:System.Type.GetInterface%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetInterface (string name, bool ignoreCase);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome da interface para obter.</xref:System.String> Para interfaces genéricas, esse é o nome danificado."
    - id: ignoreCase
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para realizar uma pesquisa diferencia maiusculas de minúsculas para `name`.       - ou - <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para realizar uma pesquisa diferencia maiusculas de minúsculas para `name`."
    return:
      type: System.Type
      description: "Um <xref:System.Type>de objeto que representa a interface com o nome especificado, implementada ou herdada por atual <xref:System.Type>, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  id: GetInterfaceMap(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterfaceMap(Type)
  nameWithType: _Type.GetInterfaceMap(Type)
  fullName: System.Runtime.InteropServices._Type.GetInterfaceMap(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName>método retorna um mapeamento de interface para o tipo de interface especificado.</xref:System.Type.GetInterfaceMap%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.InterfaceMapping GetInterfaceMap (Type interfaceType);
    parameters:
    - id: interfaceType
      type: System.Type
      description: "O <xref:System.Type>da interface do qual recuperar um mapeamento.</xref:System.Type>"
    return:
      type: System.Reflection.InterfaceMapping
      description: "Um <xref:System.Reflection.InterfaceMapping>objeto que representa o mapeamento de interface para <code> interfaceType </code>.</xref:System.Reflection.InterfaceMapping>"
  overload: System.Runtime.InteropServices._Type.GetInterfaceMap*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetInterfaces
  id: GetInterfaces
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetInterfaces()
  nameWithType: _Type.GetInterfaces()
  fullName: System.Runtime.InteropServices._Type.GetInterfaces()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetInterfaces%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetInterfaces%2A?displayProperty=fullName>método obtém todas as interfaces implementada ou herdada por <xref:System.Type>.</xref:System.Type> atual</xref:System.Type.GetInterfaces%2A?displayProperty=fullName>"
  syntax:
    content: public Type[] GetInterfaces ();
    parameters: []
    return:
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam todas as interfaces implementada ou herdada por <xref:System.Type>.</xref:System.Type> atual</xref:System.Type>       Uma matriz vazia de tipo <xref:System.Type>se nenhuma interface implementada ou herdada por atual <xref:System.Type>.</xref:System.Type> </xref:System.Type> - ou -"
  overload: System.Runtime.InteropServices._Type.GetInterfaces*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String)
  id: GetMember(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String)
  nameWithType: _Type.GetMember(String)
  fullName: System.Runtime.InteropServices._Type.GetMember(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMember%2A?displayProperty=fullName>método procura os membros públicos com o nome especificado.</xref:System.Type.GetMember%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome de membros públicos para obter.</xref:System.String>"
    return:
      type: System.Reflection.MemberInfo[]
      description: "Uma matriz de <xref:System.Reflection.MemberInfo>objetos que representam os membros públicos com o nome especificado, se encontrado; caso contrário, uma matriz vazia.</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String,BindingFlags)
  nameWithType: _Type.GetMember(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMember%2A?displayProperty=fullName>método procura os membros especificados, usando as restrições de associação especificada.</xref:System.Type.GetMember%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome dos membros a serem obtidos.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar uma matriz vazia."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Uma matriz de <xref:System.Reflection.MemberInfo>objetos que representam os membros públicos com o nome especificado, se encontrado; caso contrário, uma matriz vazia.</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  id: GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: _Type.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,MemberTypes,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMember%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMember%2A?displayProperty=fullName>método procura os membros especificados do tipo de membro especificado, usando as restrições de associação especificada.</xref:System.Type.GetMember%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMember (string name, System.Reflection.MemberTypes type, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome dos membros a serem obtidos.</xref:System.String>"
    - id: type
      type: System.Reflection.MemberTypes
      description: "O <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> valor a ser pesquisado."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar uma matriz vazia."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Uma matriz de <xref:System.Reflection.MemberInfo>objetos que representam os membros públicos com o nome especificado, se encontrado; caso contrário, uma matriz vazia.</xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMembers
  id: GetMembers
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMembers()
  nameWithType: _Type.GetMembers()
  fullName: System.Runtime.InteropServices._Type.GetMembers()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMembers%2A?displayProperty=fullName>método retorna todos os membros públicos de <xref:System.Type>.</xref:System.Type> atual</xref:System.Type.GetMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMembers ();
    parameters: []
    return:
      type: System.Reflection.MemberInfo[]
      description: "Uma matriz de <xref:System.Reflection.MemberInfo>objetos que representa todos os membros públicos de <xref:System.Type>.</xref:System.Type> atual</xref:System.Reflection.MemberInfo>       Uma matriz vazia do tipo - ou - <xref:System.Reflection.MemberInfo>, se o atual <xref:System.Type>não tem membros públicos.</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  id: GetMembers(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMembers(BindingFlags)
  nameWithType: _Type.GetMembers(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMembers(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMembers%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMembers%2A?displayProperty=fullName>método procura membros definidos atual <xref:System.Type>, usando as restrições de associação especificada.</xref:System.Type> </xref:System.Type.GetMembers%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberInfo[] GetMembers (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MemberInfo[]
      description: "Uma matriz de <xref:System.Reflection.MemberInfo>objetos que representam todos os membros definidos atual <xref:System.Type>que correspondam às restrições de associação especificada.</xref:System.Type> </xref:System.Reflection.MemberInfo>       Uma matriz vazia do tipo - ou - <xref:System.Reflection.MemberInfo>, se nenhum membro é definido para o atual <xref:System.Type>, ou se nenhum membro definido corresponder às restrições de associação.</xref:System.Type> </xref:System.Reflection.MemberInfo>"
  overload: System.Runtime.InteropServices._Type.GetMembers*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String)
  id: GetMethod(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String)
  nameWithType: _Type.GetMethod(String)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMethod%2A?displayProperty=fullName>método de pesquisa para o método público com o nome especificado.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome do método público a obter.</xref:System.String>"
    return:
      type: System.Reflection.MethodInfo
      description: "Um <xref:System.Reflection.MethodInfo>objeto que representa o método público com o nome especificado, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  id: GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags)
  nameWithType: _Type.GetMethod(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMethod%2A?displayProperty=fullName>método pesquisa o método especificado, usando as restrições de associação especificada.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome do método para obter.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo
      description: "Um <xref:System.Reflection.MethodInfo>objeto que representa o método que corresponde aos requisitos especificados, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  id: GetMethod(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,Type[])
  nameWithType: _Type.GetMethod(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMethod%2A?displayProperty=fullName>método procura o método público especificado cujos parâmetros correspondem aos tipos de argumento especificados.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome do método público a obter.</xref:System.String>"
    - id: types
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam o número, ordem e tipo dos parâmetros para o método para obter.</xref:System.Type>       Uma matriz vazia do tipo - ou - <xref:System.Type>(isto é, o tipo [] tipos = novo Type[0]) para obter um método que não usa nenhum parâmetro.</xref:System.Type>"
    return:
      type: System.Reflection.MethodInfo
      description: "Um <xref:System.Reflection.MethodInfo>objeto que representa o método público cujos parâmetros correspondam aos tipos de argumento especificado, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMethod%2A?displayProperty=fullName>método procura o método público especificado cujos parâmetros correspondem a tipos de argumento especificados e os modificadores.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome do método público a obter.</xref:System.String>"
    - id: types
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam o número, ordem e tipo dos parâmetros para o método para obter.</xref:System.Type>       Uma matriz vazia do tipo - ou - <xref:System.Type>(isto é, o tipo [] tipos = novo Type[0]) para obter um método que não usa nenhum parâmetro.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Uma matriz de <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> objetos que representam os atributos associados com o elemento correspondente na `types` matriz. O associador padrão não processar esse parâmetro."
    return:
      type: System.Reflection.MethodInfo
      description: "Um <xref:System.Reflection.MethodInfo>objeto que representa o método público que corresponde aos requisitos especificados, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMethod%2A?displayProperty=fullName>pesquisas de método para o método especificado cujos parâmetros correspondem a tipos de argumento especificados e os modificadores, usando as restrições de associação especificada.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome do método para obter.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "Um <xref href=&quot;System.Reflection.Binder&quot;> </xref> objeto que define um conjunto de propriedades e permite que a associação, que pode envolver a seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: types
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam o número, ordem e tipo dos parâmetros para o método para obter.</xref:System.Type>       Uma matriz vazia do tipo - ou - <xref:System.Type>(isto é, o tipo [] tipos = novo Type[0]) para obter um método que não usa nenhum parâmetro.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Uma matriz de <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> objetos que representam os atributos associados com o elemento correspondente na `types` matriz. O associador padrão não processar esse parâmetro."
    return:
      type: System.Reflection.MethodInfo
      description: "Um <xref:System.Reflection.MethodInfo>objeto que representa o método que corresponde aos requisitos especificados, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  id: GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMethod%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMethod%2A?displayProperty=fullName>método pesquisa o método especificado cujos parâmetros correspondem a tipos de argumento especificados e os modificadores, usando as restrições de associação especificada e a convenção de chamada especificada.</xref:System.Type.GetMethod%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo GetMethod (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, System.Reflection.CallingConventions callConvention, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome do método para obter.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "Um <xref href=&quot;System.Reflection.Binder&quot;> </xref> objeto que define um conjunto de propriedades e permite que a associação, que pode envolver a seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: callConvention
      type: System.Reflection.CallingConventions
      description: "O <xref:System.Reflection.CallingConventions>objeto que especifica o conjunto de regras a serem usadas em relação a ordem e o layout dos argumentos, como o valor de retorno é passado, quais registros são usados para argumentos, e como a pilha limpos.</xref:System.Reflection.CallingConventions>"
    - id: types
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam o número, ordem e tipo dos parâmetros para o método para obter.</xref:System.Type>       Uma matriz vazia do tipo - ou - <xref:System.Type>(isto é, o tipo [] tipos = novo Type[0]) para obter um método que não usa nenhum parâmetro.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Uma matriz de <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> objetos que representam os atributos associados com o elemento correspondente na `types` matriz. O associador padrão não processar esse parâmetro."
    return:
      type: System.Reflection.MethodInfo
      description: "Um <xref:System.Reflection.MethodInfo>objeto que representa o método que corresponde aos requisitos especificados, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethods
  id: GetMethods
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethods()
  nameWithType: _Type.GetMethods()
  fullName: System.Runtime.InteropServices._Type.GetMethods()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMethods%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMethods%2A?displayProperty=fullName>método retorna todos os métodos públicos do atual <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetMethods%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods ();
    parameters: []
    return:
      type: System.Reflection.MethodInfo[]
      description: "Uma matriz de <xref:System.Reflection.MethodInfo>objetos que representam todos os métodos públicos definidos para <xref:System.Type>.</xref:System.Type> atual</xref:System.Reflection.MethodInfo>       Uma matriz vazia de tipo <xref:System.Reflection.MethodInfo>se não há métodos públicos são definidos para atuais <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MethodInfo> - ou -"
  overload: System.Runtime.InteropServices._Type.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  id: GetMethods(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetMethods(BindingFlags)
  nameWithType: _Type.GetMethods(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethods(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetMethods%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetMethods%2A?displayProperty=fullName>método procura os métodos definidos atual <xref:System.Type>, usando as restrições de associação especificada.</xref:System.Type> </xref:System.Type.GetMethods%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MethodInfo[] GetMethods (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.MethodInfo[]
      description: "Uma matriz de <xref:System.Reflection.MethodInfo>objetos que representam todos os métodos definidos atual <xref:System.Type>que correspondam às restrições de associação especificada.</xref:System.Type> </xref:System.Reflection.MethodInfo>       Uma matriz vazia do tipo - ou - <xref:System.Reflection.MethodInfo>, se nenhum métodos são definidos para a atual <xref:System.Type>, ou se nenhum dos métodos definidos corresponde às restrições de associação.</xref:System.Type> </xref:System.Reflection.MethodInfo>"
  overload: System.Runtime.InteropServices._Type.GetMethods*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String)
  id: GetNestedType(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedType(String)
  nameWithType: _Type.GetNestedType(String)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetNestedType%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetNestedType%2A?displayProperty=fullName>método procura o tipo público aninhado com o nome especificado.</xref:System.Type.GetNestedType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetNestedType (string name);
    parameters:
    - id: name
      type: System.String
      description: "A cadeia de caracteres que contém o nome do tipo aninhado para obter."
    return:
      type: System.Type
      description: "Um <xref:System.Type>objeto que representa o tipo público aninhado com o nome especificado, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  id: GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedType(String,BindingFlags)
  nameWithType: _Type.GetNestedType(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetNestedType%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetNestedType%2A?displayProperty=fullName>método pesquisa o tipo aninhado especificado, usando as restrições de associação especificada.</xref:System.Type.GetNestedType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetNestedType (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "A cadeia de caracteres que contém o nome do tipo aninhado para obter."
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Type
      description: "Um <xref:System.Type>objeto que representa o tipo aninhado que atenda aos requisitos especificados, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedTypes
  id: GetNestedTypes
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedTypes()
  nameWithType: _Type.GetNestedTypes()
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetNestedTypes%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetNestedTypes%2A?displayProperty=fullName>método retorna todos os tipos aninhados atual <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetNestedTypes%2A?displayProperty=fullName>"
  syntax:
    content: public Type[] GetNestedTypes ();
    parameters: []
    return:
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam todos os tipos aninhados atual <xref:System.Type>.</xref:System.Type> </xref:System.Type>       Uma matriz vazia de tipo <xref:System.Type>se nenhum tipo é aninhado na atual <xref:System.Type>.</xref:System.Type> </xref:System.Type> - ou -"
  overload: System.Runtime.InteropServices._Type.GetNestedTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  id: GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetNestedTypes(BindingFlags)
  nameWithType: _Type.GetNestedTypes(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetNestedTypes%2A?displayProperty=fullName&gt; método e pesquisas para os tipos aninhados atual <xref:System.Type>, usando as restrições de associação especificada.</xref:System.Type>"
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado."
  syntax:
    content: public Type[] GetNestedTypes (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam todos os tipos aninhados atual <xref:System.Type>que correspondam às restrições de associação especificada.</xref:System.Type> </xref:System.Type>       Uma matriz vazia do tipo - ou - <xref:System.Type>, se nenhum tipo é aninhado na atual <xref:System.Type>, ou se nenhum dos tipos aninhados corresponder às restrições de associação.</xref:System.Type> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GetNestedTypes*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperties
  id: GetProperties
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperties()
  nameWithType: _Type.GetProperties()
  fullName: System.Runtime.InteropServices._Type.GetProperties()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetProperties%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetProperties%2A?displayProperty=fullName>método retorna todas as propriedades públicas de <xref:System.Type>.</xref:System.Type> atual</xref:System.Type.GetProperties%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo[] GetProperties ();
    parameters: []
    return:
      type: System.Reflection.PropertyInfo[]
      description: "Uma matriz de <xref:System.Reflection.PropertyInfo>objetos que representa todas as propriedades públicas de <xref:System.Type>.</xref:System.Type> atual</xref:System.Reflection.PropertyInfo>       Uma matriz vazia do tipo - ou - <xref:System.Reflection.PropertyInfo>, se o atual <xref:System.Type>não tem propriedades públicas.</xref:System.Type> </xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  id: GetProperties(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperties(BindingFlags)
  nameWithType: _Type.GetProperties(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperties(BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetProperties%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetProperties%2A?displayProperty=fullName>método procura as propriedades do atual <xref:System.Type>, usando as restrições de associação especificada.</xref:System.Type> </xref:System.Type.GetProperties%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo[] GetProperties (System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.PropertyInfo[]
      description: "Uma matriz de <xref:System.Reflection.PropertyInfo>objetos que representam todas as propriedades do atual <xref:System.Type>que correspondam às restrições de associação especificada.</xref:System.Type> </xref:System.Reflection.PropertyInfo>       Uma matriz vazia do tipo - ou - <xref:System.Reflection.PropertyInfo>, se o atual <xref:System.Type>não tem propriedades, ou se nenhuma das propriedades corresponder às restrições de associação.</xref:System.Type> </xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: _Type.GetProperty(String)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetProperty%2A?displayProperty=fullName>método procura a propriedade pública com o nome especificado.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome da propriedade pública a obter.</xref:System.String>"
    return:
      type: System.Reflection.PropertyInfo
      description: "Um <xref:System.Reflection.PropertyInfo>objeto que representa a propriedade pública com o nome especificado, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  id: GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,BindingFlags)
  nameWithType: _Type.GetProperty(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetProperty%2A?displayProperty=fullName>método procura a propriedade especificada, usando as restrições de associação especificada.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>contendo o nome da propriedade a ser obtida.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Reflection.PropertyInfo
      description: "Um <xref:System.Reflection.PropertyInfo>objeto que representa a propriedade que atenda aos requisitos especificados, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  id: GetProperty(System.String,System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type)
  nameWithType: _Type.GetProperty(String,Type)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetProperty%2A?displayProperty=fullName>método procura a propriedade pública com o nome especificado e o tipo de retorno.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome da propriedade pública a obter.</xref:System.String>"
    - id: returnType
      type: System.Type
      description: "O tipo de retorno da propriedade."
    return:
      type: System.Reflection.PropertyInfo
      description: "Um <xref:System.Reflection.PropertyInfo>objeto que representa a propriedade pública com o nome especificado, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  id: GetProperty(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type[])
  nameWithType: _Type.GetProperty(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetProperty%2A?displayProperty=fullName>método de pesquisa para a propriedade pública especificada cujos parâmetros correspondem a tipos de argumento especificado.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome da propriedade pública a obter.</xref:System.String>"
    - id: types
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam o número, ordem e tipo dos parâmetros para a propriedade indexada para obter.</xref:System.Type>       Uma matriz vazia do tipo - ou - <xref:System.Type>(isto é, o tipo [] tipos = novo Type[0]) para obter uma propriedade que não está indexada.</xref:System.Type>"
    return:
      type: System.Reflection.PropertyInfo
      description: "Um <xref:System.Reflection.PropertyInfo>objeto que representa a propriedade pública cujos parâmetros correspondam aos tipos de argumento especificado, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  id: GetProperty(System.String,System.Type,System.Type[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type,Type[])
  nameWithType: _Type.GetProperty(String,Type,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetProperty%2A?displayProperty=fullName>pesquisas de método para a propriedade pública especificada cujos parâmetros correspondem aos tipos de argumento especificados.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome da propriedade pública a obter.</xref:System.String>"
    - id: returnType
      type: System.Type
      description: "O tipo de retorno da propriedade."
    - id: types
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam o número, ordem e tipo dos parâmetros para a propriedade indexada para obter.</xref:System.Type>       Uma matriz vazia do tipo - ou - <xref:System.Type>(isto é, o tipo [] tipos = novo Type[0]) para obter uma propriedade que não está indexada.</xref:System.Type>"
    return:
      type: System.Reflection.PropertyInfo
      description: "Um <xref:System.Reflection.PropertyInfo>objeto que representa a propriedade pública cujos parâmetros correspondam aos tipos de argumento especificado, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetProperty%2A?displayProperty=fullName>pesquisas de método para a propriedade pública especificada cujos parâmetros correspondem a tipos de argumento especificados e os modificadores.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome da propriedade pública a obter.</xref:System.String>"
    - id: returnType
      type: System.Type
      description: "O tipo de retorno da propriedade."
    - id: types
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam o número, ordem e tipo dos parâmetros para a propriedade indexada para obter.</xref:System.Type>       Uma matriz vazia do tipo - ou - <xref:System.Type>(isto é, o tipo [] tipos = novo Type[0]) para obter uma propriedade que não está indexada.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Uma matriz de <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> objetos que representam os atributos associados com o elemento correspondente na `types` matriz. O associador padrão não processar esse parâmetro."
    return:
      type: System.Reflection.PropertyInfo
      description: "Um <xref:System.Reflection.PropertyInfo>objeto que representa a propriedade pública que atenda aos requisitos especificados, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  id: GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetProperty%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetProperty%2A?displayProperty=fullName>pesquisas de método para a propriedade especificada cujos parâmetros correspondem a tipos de argumento especificados e os modificadores, usando as restrições de associação especificada.</xref:System.Type.GetProperty%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.PropertyInfo GetProperty (string name, System.Reflection.BindingFlags bindingAttr, System.Reflection.Binder binder, Type returnType, Type[] types, System.Reflection.ParameterModifier[] modifiers);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>contendo o nome da propriedade a ser obtida.</xref:System.String>"
    - id: bindingAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada.       - ou - Zero, para retornar <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: binder
      type: System.Reflection.Binder
      description: "Um <xref href=&quot;System.Reflection.Binder&quot;> </xref> objeto que define um conjunto de propriedades e permite que a associação, que pode envolver a seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: returnType
      type: System.Type
      description: "O tipo de retorno da propriedade."
    - id: types
      type: System.Type[]
      description: "Uma matriz de <xref:System.Type>objetos que representam o número, ordem e tipo dos parâmetros para a propriedade indexada para obter.</xref:System.Type>       Uma matriz vazia do tipo - ou - <xref:System.Type>(isto é, o tipo [] tipos = novo Type[0]) para obter uma propriedade que não está indexada.</xref:System.Type>"
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Uma matriz de <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> objetos que representam os atributos associados com o elemento correspondente na `types` matriz. O associador padrão não processar esse parâmetro."
    return:
      type: System.Reflection.PropertyInfo
      description: "Um <xref:System.Reflection.PropertyInfo>objeto que representa a propriedade que atenda aos requisitos especificados, se encontrado; caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.</xref:System.Reflection.PropertyInfo>"
  overload: System.Runtime.InteropServices._Type.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetType
  id: GetType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetType()
  nameWithType: _Type.GetType()
  fullName: System.Runtime.InteropServices._Type.GetType()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GetType%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.GetType%2A?displayProperty=fullName>método obtém o atual <xref:System.Type>.</xref:System.Type> </xref:System.Type.GetType%2A?displayProperty=fullName>"
  syntax:
    content: public Type GetType ();
    parameters: []
    return:
      type: System.Type
      description: "<xref:System.Type>.</xref:System.Type> Atual"
  overload: System.Runtime.InteropServices._Type.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  id: GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Recupera as informações de tipo para um objeto, o que pode ser usada para obter as informações de tipo para uma interface."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado. Para obter mais informações sobre `IDispatch::GetTypeInfo`, consulte a biblioteca MSDN."
  syntax:
    content: public void GetTypeInfo (uint iTInfo, uint lcid, IntPtr ppTInfo);
    parameters:
    - id: iTInfo
      type: System.UInt32
      description: "As informações de tipo para retornar."
    - id: lcid
      type: System.UInt32
      description: "O identificador de localidade para o tipo de informação."
    - id: ppTInfo
      type: System.IntPtr
      description: "Recebe um ponteiro para o objeto de informações do tipo solicitado."
  overload: System.Runtime.InteropServices._Type.GetTypeInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  id: GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GetTypeInfoCount(UInt32)
  nameWithType: _Type.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Recupera o número de interfaces de informações de tipo que um objeto fornece (0 ou 1)."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado. Para obter mais informações sobre `IDispatch::GetTypeInfoCount`, consulte a biblioteca MSDN."
  syntax:
    content: public void GetTypeInfoCount (out uint pcTInfo);
    parameters:
    - id: pcTInfo
      type: System.UInt32
      description: "Aponta para um local que recebe o número de interfaces de informações de tipo fornecido pelo objeto."
  overload: System.Runtime.InteropServices._Type.GetTypeInfoCount*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.GUID
  id: GUID
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: GUID
  nameWithType: _Type.GUID
  fullName: System.Runtime.InteropServices._Type.GUID
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.GUID%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       A <xref:System.Type.GUID%2A?displayProperty=fullName>propriedade obtém o GUID associado <xref:System.Type>.</xref:System.Type> </xref:System.Type.GUID%2A?displayProperty=fullName>"
  syntax:
    content: public Guid GUID { get; }
    return:
      type: System.Guid
      description: "O GUID associado <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.GUID*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.HasElementType
  id: HasElementType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: HasElementType
  nameWithType: _Type.HasElementType
  fullName: System.Runtime.InteropServices._Type.HasElementType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.HasElementType%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       A <xref:System.Type.HasElementType%2A?displayProperty=fullName>propriedade</xref:System.Type.HasElementType%2A?displayProperty=fullName>"
  syntax:
    content: public bool HasElementType { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>é uma matriz, um ponteiro, ou é passada por referência; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.HasElementType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  id: Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece acesso às propriedades e métodos expostos por um objeto."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado. Para obter mais informações sobre `IDispatch::Invoke`, consulte a biblioteca MSDN."
  syntax:
    content: public void Invoke (uint dispIdMember, ref Guid riid, uint lcid, short wFlags, IntPtr pDispParams, IntPtr pVarResult, IntPtr pExcepInfo, IntPtr puArgErr);
    parameters:
    - id: dispIdMember
      type: System.UInt32
      description: "Identifica o membro."
    - id: riid
      type: System.Guid
      description: "Reservado para uso futuro. Deve ser IID_NULL."
    - id: lcid
      type: System.UInt32
      description: "O contexto de localidade na qual interpretar argumentos."
    - id: wFlags
      type: System.Int16
      description: "Sinalizadores que descrevem o contexto da chamada."
    - id: pDispParams
      type: System.IntPtr
      description: "Ponteiro para uma estrutura que contém uma matriz de argumentos, uma matriz de argumento DISPIDs para argumentos nomeados e contas para o número de elementos nas matrizes."
    - id: pVarResult
      type: System.IntPtr
      description: "Ponteiro para o local onde o resultado a ser armazenado."
    - id: pExcepInfo
      type: System.IntPtr
      description: "Ponteiro para uma estrutura que contém informações de exceção."
    - id: puArgErr
      type: System.IntPtr
      description: "O índice do primeiro argumento que tem um erro."
  overload: System.Runtime.InteropServices._Type.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.InvokeMember%2A?displayProperty=fullName>método chama o membro especificado, usando as restrições de associação e especificados correspondente a lista de argumentos especificados.</xref:System.Type.InvokeMember%2A?displayProperty=fullName>"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome do construtor, método, propriedade ou membro de campo para invocar.</xref:System.String>       - ou - uma cadeia de caracteres vazia (&quot;&quot;) para chamar o membro padrão.       - ou - IDispatch para membros, uma cadeia de caracteres que representa o DispID, por exemplo &quot;[DispID =&3;]&quot;."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada. The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. O tipo de consulta não precisa ser especificado. Se o tipo de consulta for omitido, <xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;> </xref>  |  <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;> </xref> será aplicada."
    - id: binder
      type: System.Reflection.Binder
      description: "Um <xref href=&quot;System.Reflection.Binder&quot;> </xref> objeto que define um conjunto de propriedades e permite que a associação, que pode envolver a seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: target
      type: System.Object
      description: "O <xref:System.Object>que invocar o membro especificado.</xref:System.Object>"
    - id: args
      type: System.Object[]
      description: "Uma matriz que contém os argumentos para passar para o membro para invocar."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o valor de retorno do membro chamado.</xref:System.Object>"
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.InvokeMember%2A?displayProperty=fullName>método chama o membro especificado, usando o especificado restrições de associação e a lista de argumentos especificada e a cultura de correspondência.</xref:System.Type.InvokeMember%2A?displayProperty=fullName>"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Globalization.CultureInfo culture);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome do construtor, método, propriedade ou membro de campo para invocar.</xref:System.String>       - ou - uma cadeia de caracteres vazia (&quot;&quot;) para chamar o membro padrão.       - ou - IDispatch para membros, uma cadeia de caracteres que representa o DispID, por exemplo &quot;[DispID =&3;]&quot;."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada. The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. O tipo de consulta não precisa ser especificado. Se o tipo de consulta for omitido, <xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;> </xref>  |  <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;> </xref> será aplicada."
    - id: binder
      type: System.Reflection.Binder
      description: "Um <xref href=&quot;System.Reflection.Binder&quot;> </xref> objeto que define um conjunto de propriedades e permite que a associação, que pode envolver a seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: target
      type: System.Object
      description: "O <xref:System.Object>que invocar o membro especificado.</xref:System.Object>"
    - id: args
      type: System.Object[]
      description: "Uma matriz que contém os argumentos para passar para o membro para invocar."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "O <xref:System.Globalization.CultureInfo>objeto que representa a localidade de globalização para usar, que pode ser necessário para conversões específicas de localidade, como ao converter uma cadeia de caracteres numérica para um duplo.</xref:System.Globalization.CultureInfo>       - ou - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> usar atual do thread <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o valor de retorno do membro chamado.</xref:System.Object>"
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  id: InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.InvokeMember%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.InvokeMember%2A?displayProperty=fullName>método chama o membro especificado, usando as restrições de associação e especificados correspondente a lista de argumentos especificada, modificadores e cultura.</xref:System.Type.InvokeMember%2A?displayProperty=fullName>"
  syntax:
    content: public object InvokeMember (string name, System.Reflection.BindingFlags invokeAttr, System.Reflection.Binder binder, object target, object[] args, System.Reflection.ParameterModifier[] modifiers, System.Globalization.CultureInfo culture, string[] namedParameters);
    parameters:
    - id: name
      type: System.String
      description: "O <xref:System.String>que contém o nome do construtor, método, propriedade ou membro de campo para invocar.</xref:System.String>       - ou - uma cadeia de caracteres vazia (&quot;&quot;) para chamar o membro padrão.       - ou - IDispatch para membros, uma cadeia de caracteres que representa o DispID, por exemplo &quot;[DispID =&3;]&quot;."
    - id: invokeAttr
      type: System.Reflection.BindingFlags
      description: "Um bitmask composto de um ou mais <xref href=&quot;System.Reflection.BindingFlags&quot;> </xref> que especificam como a pesquisa é realizada. The access can be one of the <xref uid=&quot;langword_csharp_BindingFlags&quot; name=&quot;BindingFlags&quot; href=&quot;&quot;></xref> such as <xref uid=&quot;langword_csharp_Public&quot; name=&quot;Public&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_NonPublic&quot; name=&quot;NonPublic&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_Private&quot; name=&quot;Private&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_InvokeMethod&quot; name=&quot;InvokeMethod&quot; href=&quot;&quot;></xref>, <xref uid=&quot;langword_csharp_GetField&quot; name=&quot;GetField&quot; href=&quot;&quot;></xref>, and so on. O tipo de consulta não precisa ser especificado. Se o tipo de consulta for omitido, <xref uid=&quot;langword_csharp_BindingFlags.Public&quot; name=&quot;BindingFlags.Public&quot; href=&quot;&quot;> </xref>  |  <xref uid=&quot;langword_csharp_BindingFlags.Instance&quot; name=&quot;BindingFlags.Instance&quot; href=&quot;&quot;> </xref> será aplicada."
    - id: binder
      type: System.Reflection.Binder
      description: "Um <xref href=&quot;System.Reflection.Binder&quot;> </xref> objeto que define um conjunto de propriedades e permite que a associação, que pode envolver a seleção de um método sobrecarregado, coerção de tipos de argumento e invocação de um membro por meio de reflexão.       -or-       <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, to use the <xref:System.Type.DefaultBinder*>.</xref:System.Type.DefaultBinder*>"
    - id: target
      type: System.Object
      description: "O <xref:System.Object>que invocar o membro especificado.</xref:System.Object>"
    - id: args
      type: System.Object[]
      description: "Uma matriz que contém os argumentos para passar para o membro para invocar."
    - id: modifiers
      type: System.Reflection.ParameterModifier[]
      description: "Uma matriz de <xref href=&quot;System.Reflection.ParameterModifier&quot;> </xref> objetos que representam os atributos associados com o elemento correspondente na `args` matriz. Atributos de associados do parâmetro são armazenados na assinatura do membro. O associador padrão não processar esse parâmetro."
    - id: culture
      type: System.Globalization.CultureInfo
      description: "O <xref:System.Globalization.CultureInfo>objeto que representa a localidade de globalização para usar, que pode ser necessário para conversões específicas de localidade, como ao converter uma cadeia de caracteres numérica para um duplo.</xref:System.Globalization.CultureInfo>       - ou - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> usar atual do thread <xref:System.Globalization.CultureInfo>.</xref:System.Globalization.CultureInfo>"
    - id: namedParameters
      type: System.String[]
      description: "Uma matriz que contém os nomes dos parâmetros para o qual os valores de `args` matriz são passados."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o valor de retorno do membro chamado.</xref:System.Object>"
  overload: System.Runtime.InteropServices._Type.InvokeMember*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAbstract
  id: IsAbstract
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAbstract
  nameWithType: _Type.IsAbstract
  fullName: System.Runtime.InteropServices._Type.IsAbstract
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsAbstract%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsAbstract%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é abstrato e deve ser substituído.</xref:System.Type> </xref:System.Type.IsAbstract%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAbstract { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>abstrata; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAbstract*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAnsiClass
  id: IsAnsiClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
  fullName: System.Runtime.InteropServices._Type.IsAnsiClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsAnsiClass%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsAnsiClass%2A?displayProperty=fullName>propriedade obtém um valor que indica se a cadeia de caracteres de formato atributo `AnsiClass` está selecionada para <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsAnsiClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAnsiClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a cadeia de caracteres de formato atributo <xref uid=&quot;langword_csharp_AnsiClass&quot; name=&quot;AnsiClass&quot; href=&quot;&quot;> </xref> é selecionado para o <xref:System.Type>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAnsiClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsArray
  id: IsArray
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsArray
  nameWithType: _Type.IsArray
  fullName: System.Runtime.InteropServices._Type.IsArray
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsArray%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsArray%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é uma matriz.</xref:System.Type> </xref:System.Type.IsArray%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsArray { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>é uma matriz; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsArray*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  id: IsAssignableFrom(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAssignableFrom(Type)
  nameWithType: _Type.IsAssignableFrom(Type)
  fullName: System.Runtime.InteropServices._Type.IsAssignableFrom(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsAssignableFrom%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado."
  syntax:
    content: public bool IsAssignableFrom (Type c);
    parameters:
    - id: c
      type: System.Type
      description: "A <xref:System.Type>ser comparado com o atual <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> c </code> e atual <xref:System.Type>representar o mesmo tipo, ou se atual <xref:System.Type>está na hierarquia de herança de <code> c </code>, ou se atual <xref:System.Type>é uma interface que <code> c </code> implementa, ou se <code> c </code> é um parâmetro de tipo genérico e atual <xref:System.Type>representa uma das restrições do <code> c </code>.</xref:System.Type> </xref:System.Type> </xref:System.Type> </xref:System.Type> <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se nenhuma dessas condições for o caso, ou se <code> c </code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._Type.IsAssignableFrom*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAutoClass
  id: IsAutoClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
  fullName: System.Runtime.InteropServices._Type.IsAutoClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsAutoClass%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsAutoClass%2A?displayProperty=fullName>propriedade obtém um valor que indica se a cadeia de caracteres de formato atributo `AutoClass` está selecionada para <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsAutoClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAutoClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a cadeia de caracteres de formato atributo <xref uid=&quot;langword_csharp_AutoClass&quot; name=&quot;AutoClass&quot; href=&quot;&quot;> </xref> é selecionado para o <xref:System.Type>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAutoClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsAutoLayout
  id: IsAutoLayout
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
  fullName: System.Runtime.InteropServices._Type.IsAutoLayout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsAutoLayout%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsAutoLayout%2A?displayProperty=fullName>propriedade obtém um valor que indica se o atributo de layout de classe `AutoLayout` está selecionada para <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsAutoLayout%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsAutoLayout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o atributo de layout de classe <xref uid=&quot;langword_csharp_AutoLayout&quot; name=&quot;AutoLayout&quot; href=&quot;&quot;> </xref> é selecionado para o <xref:System.Type>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsAutoLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsByRef
  id: IsByRef
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsByRef
  nameWithType: _Type.IsByRef
  fullName: System.Runtime.InteropServices._Type.IsByRef
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsByRef%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsByRef%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é passada por referência.</xref:System.Type> </xref:System.Type.IsByRef%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsByRef { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>é passado por referência; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsByRef*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsClass
  id: IsClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsClass
  nameWithType: _Type.IsClass
  fullName: System.Runtime.InteropServices._Type.IsClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsClass%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsClass%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é uma classe; ou seja, não um tipo de valor ou interface.</xref:System.Type> </xref:System.Type.IsClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>é uma classe; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsCOMObject
  id: IsCOMObject
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
  fullName: System.Runtime.InteropServices._Type.IsCOMObject
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsCOMObject%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsCOMObject%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é um objeto COM.</xref:System.Type> </xref:System.Type.IsCOMObject%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsCOMObject { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>é um objeto COM; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsCOMObject*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsContextful
  id: IsContextful
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsContextful
  nameWithType: _Type.IsContextful
  fullName: System.Runtime.InteropServices._Type.IsContextful
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsContextful%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsContextful%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>pode ser hospedado em um contexto.</xref:System.Type> </xref:System.Type.IsContextful%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsContextful { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>pode ser hospedado em um contexto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsContextful*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  id: IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsDefined(Type,Boolean)
  nameWithType: _Type.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.IsDefined(Type,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName>método indica se uma ou mais instância de `attributeType` é aplicado a esse membro.</xref:System.Reflection.MemberInfo.IsDefined%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsDefined (Type attributeType, bool inherit);
    parameters:
    - id: attributeType
      type: System.Type
      description: "O <xref uid=&quot;langword_csharp_Type&quot; name=&quot;Type&quot; href=&quot;&quot;> </xref> do objeto ao qual os atributos personalizados são aplicados."
    - id: inherit
      type: System.Boolean
      description: "Especifica se deve pesquisar a cadeia de herança deste membro para encontrar os atributos."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um ou mais instância de <code> attributeType </code> é aplicado a este membro; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._Type.IsDefined*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsEnum
  id: IsEnum
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsEnum
  nameWithType: _Type.IsEnum
  fullName: System.Runtime.InteropServices._Type.IsEnum
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsEnum%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsEnum%2A?displayProperty=fullName>propriedade obtém um valor que indica se o atual <xref:System.Type>representa uma enumeração.</xref:System.Type> </xref:System.Type.IsEnum%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsEnum { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o atual <xref:System.Type>representa uma enumeração; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsEnum*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout
  id: IsExplicitLayout
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
  fullName: System.Runtime.InteropServices._Type.IsExplicitLayout
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName>propriedade obtém um valor que indica se o atributo de layout de classe `ExplicitLayout` está selecionada para <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsExplicitLayout%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsExplicitLayout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o atributo de layout de classe <xref uid=&quot;langword_csharp_ExplicitLayout&quot; name=&quot;ExplicitLayout&quot; href=&quot;&quot;> </xref> é selecionado para o <xref:System.Type>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsExplicitLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsImport
  id: IsImport
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsImport
  nameWithType: _Type.IsImport
  fullName: System.Runtime.InteropServices._Type.IsImport
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsImport%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsImport%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>tem <xref:System.Runtime.InteropServices.ComImportAttribute>, indicando que ele foi importado de uma biblioteca de tipos COM.</xref:System.Runtime.InteropServices.ComImportAttribute> </xref:System.Type> </xref:System.Type.IsImport%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsImport { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>tem <xref:System.Runtime.InteropServices.ComImportAttribute>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Runtime.InteropServices.ComImportAttribute> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsImport*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  id: IsInstanceOfType(System.Object)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsInstanceOfType(Object)
  nameWithType: _Type.IsInstanceOfType(Object)
  fullName: System.Runtime.InteropServices._Type.IsInstanceOfType(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName>método determina se o objeto especificado é uma instância de <xref:System.Type>.</xref:System.Type> atual</xref:System.Type.IsInstanceOfType%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsInstanceOfType (object o);
    parameters:
    - id: o
      type: System.Object
      description: "O objeto a ser comparado com o atual <xref:System.Type>.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o atual <xref:System.Type>na hierarquia de herança do objeto representado pelo <code> o </code>, ou se atual <xref:System.Type>é uma interface que <code> o </code> oferece suporte.</xref:System.Type> </xref:System.Type> <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se nenhuma dessas condições for o caso, ou se <code> o </code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, ou se o atual <xref:System.Type>é um tipo genérico aberto (ou seja, <xref:System.Type.ContainsGenericParameters*>retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>).</xref:System.Type.ContainsGenericParameters*> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsInstanceOfType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsInterface
  id: IsInterface
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsInterface
  nameWithType: _Type.IsInterface
  fullName: System.Runtime.InteropServices._Type.IsInterface
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsInterface%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsInterface%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é uma interface; não uma classe ou um tipo de valor.</xref:System.Type> </xref:System.Type.IsInterface%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsInterface { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>é uma interface; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsInterface*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential
  id: IsLayoutSequential
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
  fullName: System.Runtime.InteropServices._Type.IsLayoutSequential
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName>propriedade obtém um valor que indica se o atributo de layout de classe `SequentialLayout` está selecionada para <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsLayoutSequential%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsLayoutSequential { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o atributo de layout de classe <xref uid=&quot;langword_csharp_SequentialLayout&quot; name=&quot;SequentialLayout&quot; href=&quot;&quot;> </xref> é selecionado para o <xref:System.Type>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsLayoutSequential*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef
  id: IsMarshalByRef
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
  fullName: System.Runtime.InteropServices._Type.IsMarshalByRef
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName>propriedade obtém um valor que indica se o tipo é empacotado por referência.</xref:System.Type.IsMarshalByRef%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsMarshalByRef { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>empacotado por referência; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsMarshalByRef*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly
  id: IsNestedAssembly
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
  fullName: System.Runtime.InteropServices._Type.IsNestedAssembly
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>está aninhada e visíveis somente dentro de seu próprio assembly.</xref:System.Type> </xref:System.Type.IsNestedAssembly%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedAssembly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>aninhados e visíveis somente dentro de seu próprio assembly; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedAssembly*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  id: IsNestedFamANDAssem
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é aninhadas e visíveis somente para classes que pertencem ao seu próprio família e seu próprio assembly.</xref:System.Type> </xref:System.Type.IsNestedFamANDAssem%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedFamANDAssem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>aninhados e visível somente para classes que pertencem ao seu próprio família e seu próprio assembly; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedFamANDAssem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamily
  id: IsNestedFamily
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
  fullName: System.Runtime.InteropServices._Type.IsNestedFamily
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsNestedFamily%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsNestedFamily%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é visível somente dentro de seu próprio família e aninhadas.</xref:System.Type> </xref:System.Type.IsNestedFamily%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedFamily { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>aninhados e visíveis somente dentro de seu próprio família; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedFamily*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  id: IsNestedFamORAssem
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>está aninhada e visível somente para classes que pertencem a uma família de seu próprio ou seu próprio assembly.</xref:System.Type> </xref:System.Type.IsNestedFamORAssem%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedFamORAssem { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>aninhados e visível somente para classes que pertencem à família de seu próprio ou seu próprio assembly; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedFamORAssem*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate
  id: IsNestedPrivate
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
  fullName: System.Runtime.InteropServices._Type.IsNestedPrivate
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é aninhados e declarado particular.</xref:System.Type> </xref:System.Type.IsNestedPrivate%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedPrivate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>é aninhados e declarado particular; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNestedPrivate*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNestedPublic
  id: IsNestedPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
  fullName: System.Runtime.InteropServices._Type.IsNestedPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsNestedPublic%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsNestedPublic%2A?displayProperty=fullName>propriedade obtém um valor que indica se uma classe é aninhada e declarado como pública.</xref:System.Type.IsNestedPublic%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNestedPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a classe é declarado e aninhado público; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices._Type.IsNestedPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsNotPublic
  id: IsNotPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
  fullName: System.Runtime.InteropServices._Type.IsNotPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsNotPublic%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsNotPublic%2A?displayProperty=fullName>propriedade obtém um valor que indica se o nível superior <xref:System.Type>não está declarado como público.</xref:System.Type> </xref:System.Type.IsNotPublic%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsNotPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nível superior <xref:System.Type>não está declarado como público; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsNotPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPointer
  id: IsPointer
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPointer
  nameWithType: _Type.IsPointer
  fullName: System.Runtime.InteropServices._Type.IsPointer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsPointer%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsPointer%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é um ponteiro.</xref:System.Type> </xref:System.Type.IsPointer%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPointer { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>é um ponteiro; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsPointer*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPrimitive
  id: IsPrimitive
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
  fullName: System.Runtime.InteropServices._Type.IsPrimitive
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsPrimitive%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsPrimitive%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é um dos tipos primitivos.</xref:System.Type> </xref:System.Type.IsPrimitive%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPrimitive { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>é um dos tipos primitivos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsPrimitive*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsPublic
  id: IsPublic
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsPublic
  nameWithType: _Type.IsPublic
  fullName: System.Runtime.InteropServices._Type.IsPublic
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsPublic%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsPublic%2A?displayProperty=fullName>propriedade obtém um valor que indica se o nível superior <xref:System.Type>está declarado como público.</xref:System.Type> </xref:System.Type.IsPublic%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsPublic { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nível superior <xref:System.Type>está declarado como público; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsPublic*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSealed
  id: IsSealed
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSealed
  nameWithType: _Type.IsSealed
  fullName: System.Runtime.InteropServices._Type.IsSealed
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsSealed%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsSealed%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>está declarado como sealed.</xref:System.Type> </xref:System.Type.IsSealed%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSealed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>é declarado lacrado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSealed*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSerializable
  id: IsSerializable
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSerializable
  nameWithType: _Type.IsSerializable
  fullName: System.Runtime.InteropServices._Type.IsSerializable
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsSerializable%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsSerializable%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é serializável.</xref:System.Type> </xref:System.Type.IsSerializable%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSerializable { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>serializável; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSerializable*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSpecialName
  id: IsSpecialName
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
  fullName: System.Runtime.InteropServices._Type.IsSpecialName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsSpecialName%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsSpecialName%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>tem um nome que requer manipulação especial.</xref:System.Type> </xref:System.Type.IsSpecialName%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSpecialName { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>tem um nome que requer um tratamento especial; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSpecialName*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  id: IsSubclassOf(System.Type)
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsSubclassOf(Type)
  nameWithType: _Type.IsSubclassOf(Type)
  fullName: System.Runtime.InteropServices._Type.IsSubclassOf(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsSubclassOf%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.IsSubclassOf%2A?displayProperty=fullName>método determina se a classe representado pelo atual que <xref:System.Type>deriva da classe representada pelo <xref:System.Type>.</xref:System.Type> especificado</xref:System.Type> </xref:System.Type.IsSubclassOf%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsSubclassOf (Type c);
    parameters:
    - id: c
      type: System.Type
      description: "A <xref:System.Type>ser comparado com o atual <xref:System.Type>.</xref:System.Type> </xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>representado pelo <code> c </code> parâmetro e atual <xref:System.Type>representam classes e a classe representado pelo atual <xref:System.Type>deriva da classe representada por <code> c </code>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type> </xref:System.Type> </xref:System.Type> Esse método também retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se <code> c </code> e atual que <xref:System.Type>representam a mesma classe.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsSubclassOf*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass
  id: IsUnicodeClass
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
  fullName: System.Runtime.InteropServices._Type.IsUnicodeClass
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName>propriedade obtém um valor que indica se a cadeia de caracteres de formato atributo `UnicodeClass` está selecionada para <xref:System.Type>.</xref:System.Type> </xref:System.Type.IsUnicodeClass%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsUnicodeClass { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a cadeia de caracteres de formato atributo <xref uid=&quot;langword_csharp_UnicodeClass&quot; name=&quot;UnicodeClass&quot; href=&quot;&quot;> </xref> é selecionado para o <xref:System.Type>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsUnicodeClass*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.IsValueType
  id: IsValueType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: IsValueType
  nameWithType: _Type.IsValueType
  fullName: System.Runtime.InteropServices._Type.IsValueType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.IsValueType%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.IsValueType%2A?displayProperty=fullName>propriedade obtém um valor que indica se o <xref:System.Type>é um tipo de valor.</xref:System.Type> </xref:System.Type.IsValueType%2A?displayProperty=fullName>"
  syntax:
    content: public bool IsValueType { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref:System.Type>é um tipo de valor; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.IsValueType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.MemberType
  id: MemberType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: MemberType
  nameWithType: _Type.MemberType
  fullName: System.Runtime.InteropServices._Type.MemberType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.MemberType%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.MemberType%2A?displayProperty=fullName>propriedade obtém um <xref:System.Reflection.MemberTypes>valor que indica que esse membro é um tipo ou um tipo aninhado.</xref:System.Reflection.MemberTypes> </xref:System.Type.MemberType%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.MemberTypes MemberType { get; }
    return:
      type: System.Reflection.MemberTypes
      description: "Um <xref href=&quot;System.Reflection.MemberTypes&quot;> </xref> valor que indica que esse membro é um tipo ou um tipo aninhado."
  overload: System.Runtime.InteropServices._Type.MemberType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Module
  id: Module
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Module
  nameWithType: _Type.Module
  fullName: System.Runtime.InteropServices._Type.Module
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.Module%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.Module%2A?displayProperty=fullName>propriedade obtém o módulo (DLL) no qual atual <xref:System.Type>está definido.</xref:System.Type> </xref:System.Type.Module%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.Module Module { get; }
    return:
      type: System.Reflection.Module
      description: "O nome do módulo no qual atual <xref:System.Type>está definido.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Module*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Name
  id: Name
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Name
  nameWithType: _Type.Name
  fullName: System.Runtime.InteropServices._Type.Name
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       A <xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName>propriedade obtém o nome de <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.MemberInfo.Name%2A?displayProperty=fullName>"
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "O nome de <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.Namespace
  id: Namespace
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: Namespace
  nameWithType: _Type.Namespace
  fullName: System.Runtime.InteropServices._Type.Namespace
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.Namespace%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       A <xref:System.Type.Namespace%2A?displayProperty=fullName>propriedade obtém o namespace de <xref:System.Type>.</xref:System.Type> </xref:System.Type.Namespace%2A?displayProperty=fullName>"
  syntax:
    content: public string Namespace { get; }
    return:
      type: System.String
      description: "O namespace de <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.Namespace*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.ReflectedType
  id: ReflectedType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: ReflectedType
  nameWithType: _Type.ReflectedType
  fullName: System.Runtime.InteropServices._Type.ReflectedType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.ReflectedType%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.ReflectedType%2A?displayProperty=fullName>propriedade obtém o objeto da classe que foi usado para obter esse membro.</xref:System.Type.ReflectedType%2A?displayProperty=fullName>"
  syntax:
    content: public Type ReflectedType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>objeto por meio do qual este <xref:System.Reflection.MemberInfo>foi obtido.</xref:System.Reflection.MemberInfo> </xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.ReflectedType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.ToString
  id: ToString
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: ToString()
  nameWithType: _Type.ToString()
  fullName: System.Runtime.InteropServices._Type.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.ToString%2A?displayProperty=fullName&gt; método."
  remarks: "Esse método é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamado de código gerenciado.       O <xref:System.Type.ToString%2A?displayProperty=fullName>método retorna o nome do atual <xref:System.Type>.</xref:System.Type> </xref:System.Type.ToString%2A?displayProperty=fullName>"
  syntax:
    content: public string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Um <xref:System.String>que representa o nome do atual <xref:System.Type>.</xref:System.Type> </xref:System.String>"
  overload: System.Runtime.InteropServices._Type.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.TypeHandle
  id: TypeHandle
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: TypeHandle
  nameWithType: _Type.TypeHandle
  fullName: System.Runtime.InteropServices._Type.TypeHandle
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.TypeHandle%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       A <xref:System.Type.TypeHandle%2A?displayProperty=fullName>propriedade obtém o identificador atual <xref:System.Type>.</xref:System.Type> </xref:System.Type.TypeHandle%2A?displayProperty=fullName>"
  syntax:
    content: public RuntimeTypeHandle TypeHandle { get; }
    return:
      type: System.RuntimeTypeHandle
      description: "O identificador atual <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.TypeHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.TypeInitializer
  id: TypeInitializer
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
  fullName: System.Runtime.InteropServices._Type.TypeInitializer
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.TypeInitializer%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       A <xref:System.Type.TypeInitializer%2A?displayProperty=fullName>propriedade obtém o inicializador para <xref:System.Type>.</xref:System.Type> </xref:System.Type.TypeInitializer%2A?displayProperty=fullName>"
  syntax:
    content: public System.Reflection.ConstructorInfo TypeInitializer { get; }
    return:
      type: System.Reflection.ConstructorInfo
      description: "Um <xref:System.Reflection.ConstructorInfo>que contém o nome do construtor de classe para <xref:System.Type>.</xref:System.Type> </xref:System.Reflection.ConstructorInfo>"
  overload: System.Runtime.InteropServices._Type.TypeInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType
  id: UnderlyingSystemType
  parent: System.Runtime.InteropServices._Type
  langs:
  - csharp
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
  fullName: System.Runtime.InteropServices._Type.UnderlyingSystemType
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Fornece objetos de acesso independentes de versão para o &lt;xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName&gt; propriedade."
  remarks: "Essa propriedade é para acesso para classes gerenciadas do código não gerenciado e não deve ser chamada de código gerenciado.       O <xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName>propriedade indica o tipo fornecido pelo common language runtime que representa esse tipo.</xref:System.Type.UnderlyingSystemType%2A?displayProperty=fullName>"
  syntax:
    content: public Type UnderlyingSystemType { get; }
    return:
      type: System.Type
      description: "O tipo subjacente do sistema para <xref:System.Type>.</xref:System.Type>"
  overload: System.Runtime.InteropServices._Type.UnderlyingSystemType*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.InteropServices._Type.Assembly
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Assembly
  nameWithType: _Type.Assembly
  fullName: System.Runtime.InteropServices._Type.Assembly
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
  fullName: System.Runtime.InteropServices._Type.AssemblyQualifiedName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.InteropServices._Type.Attributes
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Attributes
  nameWithType: _Type.Attributes
  fullName: System.Runtime.InteropServices._Type.Attributes
- uid: System.Reflection.TypeAttributes
  parent: System.Reflection
  isExternal: true
  name: TypeAttributes
  nameWithType: TypeAttributes
  fullName: System.Reflection.TypeAttributes
- uid: System.Runtime.InteropServices._Type.BaseType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: BaseType
  nameWithType: _Type.BaseType
  fullName: System.Runtime.InteropServices._Type.BaseType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices._Type.DeclaringType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: DeclaringType
  nameWithType: _Type.DeclaringType
  fullName: System.Runtime.InteropServices._Type.DeclaringType
- uid: System.Runtime.InteropServices._Type.Equals(System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals(Object)
  nameWithType: _Type.Equals(Object)
  fullName: System.Runtime.InteropServices._Type.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.InteropServices._Type.Equals(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals(Type)
  nameWithType: _Type.Equals(Type)
  fullName: System.Runtime.InteropServices._Type.Equals(Type)
- uid: System.Runtime.InteropServices._Type.FindInterfaces(System.Reflection.TypeFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindInterfaces(TypeFilter,Object)
  nameWithType: _Type.FindInterfaces(TypeFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindInterfaces(TypeFilter,Object)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.TypeFilter
  parent: System.Reflection
  isExternal: false
  name: TypeFilter
  nameWithType: TypeFilter
  fullName: System.Reflection.TypeFilter
- uid: System.Runtime.InteropServices._Type.FindMembers(System.Reflection.MemberTypes,System.Reflection.BindingFlags,System.Reflection.MemberFilter,System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  nameWithType: _Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
  fullName: System.Runtime.InteropServices._Type.FindMembers(MemberTypes,BindingFlags,MemberFilter,Object)
- uid: System.Reflection.MemberInfo[]
  parent: System.Reflection
  isExternal: true
  name: MemberInfo
  nameWithType: MemberInfo
  fullName: System.Reflection.MemberInfo[]
  spec.csharp:
  - uid: System.Reflection.MemberInfo
    name: MemberInfo
    nameWithType: MemberInfo
    fullName: MemberInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.MemberTypes
  parent: System.Reflection
  isExternal: false
  name: MemberTypes
  nameWithType: MemberTypes
  fullName: System.Reflection.MemberTypes
- uid: System.Reflection.BindingFlags
  parent: System.Reflection
  isExternal: false
  name: BindingFlags
  nameWithType: BindingFlags
  fullName: System.Reflection.BindingFlags
- uid: System.Reflection.MemberFilter
  parent: System.Reflection
  isExternal: false
  name: MemberFilter
  nameWithType: MemberFilter
  fullName: System.Reflection.MemberFilter
- uid: System.Runtime.InteropServices._Type.FullName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FullName
  nameWithType: _Type.FullName
  fullName: System.Runtime.InteropServices._Type.FullName
- uid: System.Runtime.InteropServices._Type.GetArrayRank
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetArrayRank()
  nameWithType: _Type.GetArrayRank()
  fullName: System.Runtime.InteropServices._Type.GetArrayRank()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(Type[])
  nameWithType: _Type.GetConstructor(Type[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(Type[])
- uid: System.Reflection.ConstructorInfo
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Reflection.Binder
  parent: System.Reflection
  isExternal: false
  name: Binder
  nameWithType: Binder
  fullName: System.Reflection.Binder
- uid: System.Reflection.ParameterModifier[]
  parent: System.Reflection
  isExternal: false
  name: ParameterModifier
  nameWithType: ParameterModifier
  fullName: System.Reflection.ParameterModifier[]
  spec.csharp:
  - uid: System.Reflection.ParameterModifier
    name: ParameterModifier
    nameWithType: ParameterModifier
    fullName: ParameterModifier[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetConstructor(System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetConstructor(BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Reflection.CallingConventions
  parent: System.Reflection
  isExternal: true
  name: CallingConventions
  nameWithType: CallingConventions
  fullName: System.Reflection.CallingConventions
- uid: System.Runtime.InteropServices._Type.GetConstructors
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors()
  nameWithType: _Type.GetConstructors()
  fullName: System.Runtime.InteropServices._Type.GetConstructors()
- uid: System.Reflection.ConstructorInfo[]
  parent: System.Reflection
  isExternal: true
  name: ConstructorInfo
  nameWithType: ConstructorInfo
  fullName: System.Reflection.ConstructorInfo[]
  spec.csharp:
  - uid: System.Reflection.ConstructorInfo
    name: ConstructorInfo
    nameWithType: ConstructorInfo
    fullName: ConstructorInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetConstructors(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors(BindingFlags)
  nameWithType: _Type.GetConstructors(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetConstructors(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes(Boolean)
  nameWithType: _Type.GetCustomAttributes(Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Boolean)
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes(Type,Boolean)
  nameWithType: _Type.GetCustomAttributes(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetCustomAttributes(Type,Boolean)
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetDefaultMembers()
  nameWithType: _Type.GetDefaultMembers()
  fullName: System.Runtime.InteropServices._Type.GetDefaultMembers()
- uid: System.Runtime.InteropServices._Type.GetElementType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetElementType()
  nameWithType: _Type.GetElementType()
  fullName: System.Runtime.InteropServices._Type.GetElementType()
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent(String)
  nameWithType: _Type.GetEvent(String)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String)
- uid: System.Reflection.EventInfo
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo
- uid: System.Runtime.InteropServices._Type.GetEvent(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent(String,BindingFlags)
  nameWithType: _Type.GetEvent(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvent(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetEvents
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents()
  nameWithType: _Type.GetEvents()
  fullName: System.Runtime.InteropServices._Type.GetEvents()
- uid: System.Reflection.EventInfo[]
  parent: System.Reflection
  isExternal: true
  name: EventInfo
  nameWithType: EventInfo
  fullName: System.Reflection.EventInfo[]
  spec.csharp:
  - uid: System.Reflection.EventInfo
    name: EventInfo
    nameWithType: EventInfo
    fullName: EventInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetEvents(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents(BindingFlags)
  nameWithType: _Type.GetEvents(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetEvents(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetField(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField(String)
  nameWithType: _Type.GetField(String)
  fullName: System.Runtime.InteropServices._Type.GetField(String)
- uid: System.Reflection.FieldInfo
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo
- uid: System.Runtime.InteropServices._Type.GetField(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField(String,BindingFlags)
  nameWithType: _Type.GetField(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetField(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetFields
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields()
  nameWithType: _Type.GetFields()
  fullName: System.Runtime.InteropServices._Type.GetFields()
- uid: System.Reflection.FieldInfo[]
  parent: System.Reflection
  isExternal: true
  name: FieldInfo
  nameWithType: FieldInfo
  fullName: System.Reflection.FieldInfo[]
  spec.csharp:
  - uid: System.Reflection.FieldInfo
    name: FieldInfo
    nameWithType: FieldInfo
    fullName: FieldInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetFields(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields(BindingFlags)
  nameWithType: _Type.GetFields(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetFields(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetHashCode
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetHashCode()
  nameWithType: _Type.GetHashCode()
  fullName: System.Runtime.InteropServices._Type.GetHashCode()
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames(System.Guid@,System.IntPtr,System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetIDsOfNames(Guid,IntPtr,UInt32,UInt32,IntPtr)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.UInt32
  parent: System
  isExternal: true
  name: UInt32
  nameWithType: UInt32
  fullName: System.UInt32
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface(String)
  nameWithType: _Type.GetInterface(String)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String)
- uid: System.Runtime.InteropServices._Type.GetInterface(System.String,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface(String,Boolean)
  nameWithType: _Type.GetInterface(String,Boolean)
  fullName: System.Runtime.InteropServices._Type.GetInterface(String,Boolean)
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaceMap(Type)
  nameWithType: _Type.GetInterfaceMap(Type)
  fullName: System.Runtime.InteropServices._Type.GetInterfaceMap(Type)
- uid: System.Reflection.InterfaceMapping
  parent: System.Reflection
  isExternal: true
  name: InterfaceMapping
  nameWithType: InterfaceMapping
  fullName: System.Reflection.InterfaceMapping
- uid: System.Runtime.InteropServices._Type.GetInterfaces
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaces()
  nameWithType: _Type.GetInterfaces()
  fullName: System.Runtime.InteropServices._Type.GetInterfaces()
- uid: System.Runtime.InteropServices._Type.GetMember(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String)
  nameWithType: _Type.GetMember(String)
  fullName: System.Runtime.InteropServices._Type.GetMember(String)
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String,BindingFlags)
  nameWithType: _Type.GetMember(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMember(System.String,System.Reflection.MemberTypes,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember(String,MemberTypes,BindingFlags)
  nameWithType: _Type.GetMember(String,MemberTypes,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMember(String,MemberTypes,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMembers
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers()
  nameWithType: _Type.GetMembers()
  fullName: System.Runtime.InteropServices._Type.GetMembers()
- uid: System.Runtime.InteropServices._Type.GetMembers(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers(BindingFlags)
  nameWithType: _Type.GetMembers(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMembers(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String)
  nameWithType: _Type.GetMethod(String)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String)
- uid: System.Reflection.MethodInfo
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags)
  nameWithType: _Type.GetMethod(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,Type[])
  nameWithType: _Type.GetMethod(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethod(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Reflection.CallingConventions,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  nameWithType: _Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetMethod(String,BindingFlags,Binder,CallingConventions,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetMethods
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods()
  nameWithType: _Type.GetMethods()
  fullName: System.Runtime.InteropServices._Type.GetMethods()
- uid: System.Reflection.MethodInfo[]
  parent: System.Reflection
  isExternal: true
  name: MethodInfo
  nameWithType: MethodInfo
  fullName: System.Reflection.MethodInfo[]
  spec.csharp:
  - uid: System.Reflection.MethodInfo
    name: MethodInfo
    nameWithType: MethodInfo
    fullName: MethodInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetMethods(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods(BindingFlags)
  nameWithType: _Type.GetMethods(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetMethods(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType(String)
  nameWithType: _Type.GetNestedType(String)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String)
- uid: System.Runtime.InteropServices._Type.GetNestedType(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType(String,BindingFlags)
  nameWithType: _Type.GetNestedType(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedType(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetNestedTypes
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes()
  nameWithType: _Type.GetNestedTypes()
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes()
- uid: System.Runtime.InteropServices._Type.GetNestedTypes(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes(BindingFlags)
  nameWithType: _Type.GetNestedTypes(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetNestedTypes(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperties
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties()
  nameWithType: _Type.GetProperties()
  fullName: System.Runtime.InteropServices._Type.GetProperties()
- uid: System.Reflection.PropertyInfo[]
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo[]
  spec.csharp:
  - uid: System.Reflection.PropertyInfo
    name: PropertyInfo
    nameWithType: PropertyInfo
    fullName: PropertyInfo[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.GetProperties(System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties(BindingFlags)
  nameWithType: _Type.GetProperties(BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperties(BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String)
  nameWithType: _Type.GetProperty(String)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String)
- uid: System.Reflection.PropertyInfo
  parent: System.Reflection
  isExternal: true
  name: PropertyInfo
  nameWithType: PropertyInfo
  fullName: System.Reflection.PropertyInfo
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,BindingFlags)
  nameWithType: _Type.GetProperty(String,BindingFlags)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type)
  nameWithType: _Type.GetProperty(String,Type)
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type)
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type[])
  nameWithType: _Type.GetProperty(String,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type,Type[])
  nameWithType: _Type.GetProperty(String,Type,Type[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,Type,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetProperty(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Type,System.Type[],System.Reflection.ParameterModifier[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  nameWithType: _Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
  fullName: System.Runtime.InteropServices._Type.GetProperty(String,BindingFlags,Binder,Type,Type[],ParameterModifier[])
- uid: System.Runtime.InteropServices._Type.GetType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetType()
  nameWithType: _Type.GetType()
  fullName: System.Runtime.InteropServices._Type.GetType()
- uid: System.Runtime.InteropServices._Type.GetTypeInfo(System.UInt32,System.UInt32,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfo(UInt32,UInt32,IntPtr)
  nameWithType: _Type.GetTypeInfo(UInt32,UInt32,IntPtr)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfo(UInt32,UInt32,IntPtr)
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount(System.UInt32@)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfoCount(UInt32)
  nameWithType: _Type.GetTypeInfoCount(UInt32)
  fullName: System.Runtime.InteropServices._Type.GetTypeInfoCount(UInt32)
- uid: System.Runtime.InteropServices._Type.GUID
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GUID
  nameWithType: _Type.GUID
  fullName: System.Runtime.InteropServices._Type.GUID
- uid: System.Runtime.InteropServices._Type.HasElementType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: HasElementType
  nameWithType: _Type.HasElementType
  fullName: System.Runtime.InteropServices._Type.HasElementType
- uid: System.Runtime.InteropServices._Type.Invoke(System.UInt32,System.Guid@,System.UInt32,System.Int16,System.IntPtr,System.IntPtr,System.IntPtr,System.IntPtr)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  nameWithType: _Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
  fullName: System.Runtime.InteropServices._Type.Invoke(UInt32,Guid,UInt32,Int16,IntPtr,IntPtr,IntPtr,IntPtr)
- uid: System.Int16
  parent: System
  isExternal: true
  name: Int16
  nameWithType: Int16
  fullName: System.Int16
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[])
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],CultureInfo)
- uid: System.Globalization.CultureInfo
  parent: System.Globalization
  isExternal: true
  name: CultureInfo
  nameWithType: CultureInfo
  fullName: System.Globalization.CultureInfo
- uid: System.Runtime.InteropServices._Type.InvokeMember(System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Reflection.ParameterModifier[],System.Globalization.CultureInfo,System.String[])
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  nameWithType: _Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
  fullName: System.Runtime.InteropServices._Type.InvokeMember(String,BindingFlags,Binder,Object,Object[],ParameterModifier[],CultureInfo,String[])
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Runtime.InteropServices._Type.IsAbstract
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAbstract
  nameWithType: _Type.IsAbstract
  fullName: System.Runtime.InteropServices._Type.IsAbstract
- uid: System.Runtime.InteropServices._Type.IsAnsiClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
  fullName: System.Runtime.InteropServices._Type.IsAnsiClass
- uid: System.Runtime.InteropServices._Type.IsArray
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsArray
  nameWithType: _Type.IsArray
  fullName: System.Runtime.InteropServices._Type.IsArray
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAssignableFrom(Type)
  nameWithType: _Type.IsAssignableFrom(Type)
  fullName: System.Runtime.InteropServices._Type.IsAssignableFrom(Type)
- uid: System.Runtime.InteropServices._Type.IsAutoClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
  fullName: System.Runtime.InteropServices._Type.IsAutoClass
- uid: System.Runtime.InteropServices._Type.IsAutoLayout
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
  fullName: System.Runtime.InteropServices._Type.IsAutoLayout
- uid: System.Runtime.InteropServices._Type.IsByRef
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsByRef
  nameWithType: _Type.IsByRef
  fullName: System.Runtime.InteropServices._Type.IsByRef
- uid: System.Runtime.InteropServices._Type.IsClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsClass
  nameWithType: _Type.IsClass
  fullName: System.Runtime.InteropServices._Type.IsClass
- uid: System.Runtime.InteropServices._Type.IsCOMObject
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
  fullName: System.Runtime.InteropServices._Type.IsCOMObject
- uid: System.Runtime.InteropServices._Type.IsContextful
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsContextful
  nameWithType: _Type.IsContextful
  fullName: System.Runtime.InteropServices._Type.IsContextful
- uid: System.Runtime.InteropServices._Type.IsDefined(System.Type,System.Boolean)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsDefined(Type,Boolean)
  nameWithType: _Type.IsDefined(Type,Boolean)
  fullName: System.Runtime.InteropServices._Type.IsDefined(Type,Boolean)
- uid: System.Runtime.InteropServices._Type.IsEnum
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsEnum
  nameWithType: _Type.IsEnum
  fullName: System.Runtime.InteropServices._Type.IsEnum
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
  fullName: System.Runtime.InteropServices._Type.IsExplicitLayout
- uid: System.Runtime.InteropServices._Type.IsImport
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsImport
  nameWithType: _Type.IsImport
  fullName: System.Runtime.InteropServices._Type.IsImport
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType(System.Object)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInstanceOfType(Object)
  nameWithType: _Type.IsInstanceOfType(Object)
  fullName: System.Runtime.InteropServices._Type.IsInstanceOfType(Object)
- uid: System.Runtime.InteropServices._Type.IsInterface
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInterface
  nameWithType: _Type.IsInterface
  fullName: System.Runtime.InteropServices._Type.IsInterface
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
  fullName: System.Runtime.InteropServices._Type.IsLayoutSequential
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
  fullName: System.Runtime.InteropServices._Type.IsMarshalByRef
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
  fullName: System.Runtime.InteropServices._Type.IsNestedAssembly
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamANDAssem
- uid: System.Runtime.InteropServices._Type.IsNestedFamily
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
  fullName: System.Runtime.InteropServices._Type.IsNestedFamily
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
  fullName: System.Runtime.InteropServices._Type.IsNestedFamORAssem
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
  fullName: System.Runtime.InteropServices._Type.IsNestedPrivate
- uid: System.Runtime.InteropServices._Type.IsNestedPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
  fullName: System.Runtime.InteropServices._Type.IsNestedPublic
- uid: System.Runtime.InteropServices._Type.IsNotPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
  fullName: System.Runtime.InteropServices._Type.IsNotPublic
- uid: System.Runtime.InteropServices._Type.IsPointer
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPointer
  nameWithType: _Type.IsPointer
  fullName: System.Runtime.InteropServices._Type.IsPointer
- uid: System.Runtime.InteropServices._Type.IsPrimitive
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
  fullName: System.Runtime.InteropServices._Type.IsPrimitive
- uid: System.Runtime.InteropServices._Type.IsPublic
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPublic
  nameWithType: _Type.IsPublic
  fullName: System.Runtime.InteropServices._Type.IsPublic
- uid: System.Runtime.InteropServices._Type.IsSealed
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSealed
  nameWithType: _Type.IsSealed
  fullName: System.Runtime.InteropServices._Type.IsSealed
- uid: System.Runtime.InteropServices._Type.IsSerializable
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSerializable
  nameWithType: _Type.IsSerializable
  fullName: System.Runtime.InteropServices._Type.IsSerializable
- uid: System.Runtime.InteropServices._Type.IsSpecialName
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
  fullName: System.Runtime.InteropServices._Type.IsSpecialName
- uid: System.Runtime.InteropServices._Type.IsSubclassOf(System.Type)
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSubclassOf(Type)
  nameWithType: _Type.IsSubclassOf(Type)
  fullName: System.Runtime.InteropServices._Type.IsSubclassOf(Type)
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
  fullName: System.Runtime.InteropServices._Type.IsUnicodeClass
- uid: System.Runtime.InteropServices._Type.IsValueType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsValueType
  nameWithType: _Type.IsValueType
  fullName: System.Runtime.InteropServices._Type.IsValueType
- uid: System.Runtime.InteropServices._Type.MemberType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: MemberType
  nameWithType: _Type.MemberType
  fullName: System.Runtime.InteropServices._Type.MemberType
- uid: System.Runtime.InteropServices._Type.Module
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Module
  nameWithType: _Type.Module
  fullName: System.Runtime.InteropServices._Type.Module
- uid: System.Reflection.Module
  parent: System.Reflection
  isExternal: true
  name: Module
  nameWithType: Module
  fullName: System.Reflection.Module
- uid: System.Runtime.InteropServices._Type.Name
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Name
  nameWithType: _Type.Name
  fullName: System.Runtime.InteropServices._Type.Name
- uid: System.Runtime.InteropServices._Type.Namespace
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Namespace
  nameWithType: _Type.Namespace
  fullName: System.Runtime.InteropServices._Type.Namespace
- uid: System.Runtime.InteropServices._Type.ReflectedType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ReflectedType
  nameWithType: _Type.ReflectedType
  fullName: System.Runtime.InteropServices._Type.ReflectedType
- uid: System.Runtime.InteropServices._Type.ToString
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ToString()
  nameWithType: _Type.ToString()
  fullName: System.Runtime.InteropServices._Type.ToString()
- uid: System.Runtime.InteropServices._Type.TypeHandle
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeHandle
  nameWithType: _Type.TypeHandle
  fullName: System.Runtime.InteropServices._Type.TypeHandle
- uid: System.RuntimeTypeHandle
  parent: System
  isExternal: true
  name: RuntimeTypeHandle
  nameWithType: RuntimeTypeHandle
  fullName: System.RuntimeTypeHandle
- uid: System.Runtime.InteropServices._Type.TypeInitializer
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
  fullName: System.Runtime.InteropServices._Type.TypeInitializer
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
  fullName: System.Runtime.InteropServices._Type.UnderlyingSystemType
- uid: System.Runtime.InteropServices._Type.Assembly*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Assembly
  nameWithType: _Type.Assembly
- uid: System.Runtime.InteropServices._Type.AssemblyQualifiedName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: AssemblyQualifiedName
  nameWithType: _Type.AssemblyQualifiedName
- uid: System.Runtime.InteropServices._Type.Attributes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Attributes
  nameWithType: _Type.Attributes
- uid: System.Runtime.InteropServices._Type.BaseType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: BaseType
  nameWithType: _Type.BaseType
- uid: System.Runtime.InteropServices._Type.DeclaringType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: DeclaringType
  nameWithType: _Type.DeclaringType
- uid: System.Runtime.InteropServices._Type.Equals*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Equals
  nameWithType: _Type.Equals
- uid: System.Runtime.InteropServices._Type.FindInterfaces*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindInterfaces
  nameWithType: _Type.FindInterfaces
- uid: System.Runtime.InteropServices._Type.FindMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FindMembers
  nameWithType: _Type.FindMembers
- uid: System.Runtime.InteropServices._Type.FullName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: FullName
  nameWithType: _Type.FullName
- uid: System.Runtime.InteropServices._Type.GetArrayRank*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetArrayRank
  nameWithType: _Type.GetArrayRank
- uid: System.Runtime.InteropServices._Type.GetConstructor*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructor
  nameWithType: _Type.GetConstructor
- uid: System.Runtime.InteropServices._Type.GetConstructors*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetConstructors
  nameWithType: _Type.GetConstructors
- uid: System.Runtime.InteropServices._Type.GetCustomAttributes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetCustomAttributes
  nameWithType: _Type.GetCustomAttributes
- uid: System.Runtime.InteropServices._Type.GetDefaultMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetDefaultMembers
  nameWithType: _Type.GetDefaultMembers
- uid: System.Runtime.InteropServices._Type.GetElementType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetElementType
  nameWithType: _Type.GetElementType
- uid: System.Runtime.InteropServices._Type.GetEvent*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvent
  nameWithType: _Type.GetEvent
- uid: System.Runtime.InteropServices._Type.GetEvents*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetEvents
  nameWithType: _Type.GetEvents
- uid: System.Runtime.InteropServices._Type.GetField*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetField
  nameWithType: _Type.GetField
- uid: System.Runtime.InteropServices._Type.GetFields*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetFields
  nameWithType: _Type.GetFields
- uid: System.Runtime.InteropServices._Type.GetHashCode*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetHashCode
  nameWithType: _Type.GetHashCode
- uid: System.Runtime.InteropServices._Type.GetIDsOfNames*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetIDsOfNames
  nameWithType: _Type.GetIDsOfNames
- uid: System.Runtime.InteropServices._Type.GetInterface*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterface
  nameWithType: _Type.GetInterface
- uid: System.Runtime.InteropServices._Type.GetInterfaceMap*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaceMap
  nameWithType: _Type.GetInterfaceMap
- uid: System.Runtime.InteropServices._Type.GetInterfaces*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetInterfaces
  nameWithType: _Type.GetInterfaces
- uid: System.Runtime.InteropServices._Type.GetMember*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMember
  nameWithType: _Type.GetMember
- uid: System.Runtime.InteropServices._Type.GetMembers*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMembers
  nameWithType: _Type.GetMembers
- uid: System.Runtime.InteropServices._Type.GetMethod*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethod
  nameWithType: _Type.GetMethod
- uid: System.Runtime.InteropServices._Type.GetMethods*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetMethods
  nameWithType: _Type.GetMethods
- uid: System.Runtime.InteropServices._Type.GetNestedType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedType
  nameWithType: _Type.GetNestedType
- uid: System.Runtime.InteropServices._Type.GetNestedTypes*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetNestedTypes
  nameWithType: _Type.GetNestedTypes
- uid: System.Runtime.InteropServices._Type.GetProperties*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperties
  nameWithType: _Type.GetProperties
- uid: System.Runtime.InteropServices._Type.GetProperty*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetProperty
  nameWithType: _Type.GetProperty
- uid: System.Runtime.InteropServices._Type.GetType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetType
  nameWithType: _Type.GetType
- uid: System.Runtime.InteropServices._Type.GetTypeInfo*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfo
  nameWithType: _Type.GetTypeInfo
- uid: System.Runtime.InteropServices._Type.GetTypeInfoCount*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GetTypeInfoCount
  nameWithType: _Type.GetTypeInfoCount
- uid: System.Runtime.InteropServices._Type.GUID*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: GUID
  nameWithType: _Type.GUID
- uid: System.Runtime.InteropServices._Type.HasElementType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: HasElementType
  nameWithType: _Type.HasElementType
- uid: System.Runtime.InteropServices._Type.Invoke*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Invoke
  nameWithType: _Type.Invoke
- uid: System.Runtime.InteropServices._Type.InvokeMember*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: InvokeMember
  nameWithType: _Type.InvokeMember
- uid: System.Runtime.InteropServices._Type.IsAbstract*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAbstract
  nameWithType: _Type.IsAbstract
- uid: System.Runtime.InteropServices._Type.IsAnsiClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAnsiClass
  nameWithType: _Type.IsAnsiClass
- uid: System.Runtime.InteropServices._Type.IsArray*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsArray
  nameWithType: _Type.IsArray
- uid: System.Runtime.InteropServices._Type.IsAssignableFrom*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAssignableFrom
  nameWithType: _Type.IsAssignableFrom
- uid: System.Runtime.InteropServices._Type.IsAutoClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoClass
  nameWithType: _Type.IsAutoClass
- uid: System.Runtime.InteropServices._Type.IsAutoLayout*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsAutoLayout
  nameWithType: _Type.IsAutoLayout
- uid: System.Runtime.InteropServices._Type.IsByRef*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsByRef
  nameWithType: _Type.IsByRef
- uid: System.Runtime.InteropServices._Type.IsClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsClass
  nameWithType: _Type.IsClass
- uid: System.Runtime.InteropServices._Type.IsCOMObject*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsCOMObject
  nameWithType: _Type.IsCOMObject
- uid: System.Runtime.InteropServices._Type.IsContextful*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsContextful
  nameWithType: _Type.IsContextful
- uid: System.Runtime.InteropServices._Type.IsDefined*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsDefined
  nameWithType: _Type.IsDefined
- uid: System.Runtime.InteropServices._Type.IsEnum*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsEnum
  nameWithType: _Type.IsEnum
- uid: System.Runtime.InteropServices._Type.IsExplicitLayout*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsExplicitLayout
  nameWithType: _Type.IsExplicitLayout
- uid: System.Runtime.InteropServices._Type.IsImport*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsImport
  nameWithType: _Type.IsImport
- uid: System.Runtime.InteropServices._Type.IsInstanceOfType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInstanceOfType
  nameWithType: _Type.IsInstanceOfType
- uid: System.Runtime.InteropServices._Type.IsInterface*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsInterface
  nameWithType: _Type.IsInterface
- uid: System.Runtime.InteropServices._Type.IsLayoutSequential*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsLayoutSequential
  nameWithType: _Type.IsLayoutSequential
- uid: System.Runtime.InteropServices._Type.IsMarshalByRef*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsMarshalByRef
  nameWithType: _Type.IsMarshalByRef
- uid: System.Runtime.InteropServices._Type.IsNestedAssembly*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedAssembly
  nameWithType: _Type.IsNestedAssembly
- uid: System.Runtime.InteropServices._Type.IsNestedFamANDAssem*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamANDAssem
  nameWithType: _Type.IsNestedFamANDAssem
- uid: System.Runtime.InteropServices._Type.IsNestedFamily*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamily
  nameWithType: _Type.IsNestedFamily
- uid: System.Runtime.InteropServices._Type.IsNestedFamORAssem*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedFamORAssem
  nameWithType: _Type.IsNestedFamORAssem
- uid: System.Runtime.InteropServices._Type.IsNestedPrivate*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPrivate
  nameWithType: _Type.IsNestedPrivate
- uid: System.Runtime.InteropServices._Type.IsNestedPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNestedPublic
  nameWithType: _Type.IsNestedPublic
- uid: System.Runtime.InteropServices._Type.IsNotPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsNotPublic
  nameWithType: _Type.IsNotPublic
- uid: System.Runtime.InteropServices._Type.IsPointer*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPointer
  nameWithType: _Type.IsPointer
- uid: System.Runtime.InteropServices._Type.IsPrimitive*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPrimitive
  nameWithType: _Type.IsPrimitive
- uid: System.Runtime.InteropServices._Type.IsPublic*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsPublic
  nameWithType: _Type.IsPublic
- uid: System.Runtime.InteropServices._Type.IsSealed*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSealed
  nameWithType: _Type.IsSealed
- uid: System.Runtime.InteropServices._Type.IsSerializable*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSerializable
  nameWithType: _Type.IsSerializable
- uid: System.Runtime.InteropServices._Type.IsSpecialName*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSpecialName
  nameWithType: _Type.IsSpecialName
- uid: System.Runtime.InteropServices._Type.IsSubclassOf*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsSubclassOf
  nameWithType: _Type.IsSubclassOf
- uid: System.Runtime.InteropServices._Type.IsUnicodeClass*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsUnicodeClass
  nameWithType: _Type.IsUnicodeClass
- uid: System.Runtime.InteropServices._Type.IsValueType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: IsValueType
  nameWithType: _Type.IsValueType
- uid: System.Runtime.InteropServices._Type.MemberType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: MemberType
  nameWithType: _Type.MemberType
- uid: System.Runtime.InteropServices._Type.Module*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Module
  nameWithType: _Type.Module
- uid: System.Runtime.InteropServices._Type.Name*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Name
  nameWithType: _Type.Name
- uid: System.Runtime.InteropServices._Type.Namespace*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: Namespace
  nameWithType: _Type.Namespace
- uid: System.Runtime.InteropServices._Type.ReflectedType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ReflectedType
  nameWithType: _Type.ReflectedType
- uid: System.Runtime.InteropServices._Type.ToString*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: ToString
  nameWithType: _Type.ToString
- uid: System.Runtime.InteropServices._Type.TypeHandle*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeHandle
  nameWithType: _Type.TypeHandle
- uid: System.Runtime.InteropServices._Type.TypeInitializer*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: TypeInitializer
  nameWithType: _Type.TypeInitializer
- uid: System.Runtime.InteropServices._Type.UnderlyingSystemType*
  parent: System.Runtime.InteropServices._Type
  isExternal: false
  name: UnderlyingSystemType
  nameWithType: _Type.UnderlyingSystemType
