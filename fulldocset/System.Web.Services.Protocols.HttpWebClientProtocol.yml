### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.HttpWebClientProtocol
  id: HttpWebClientProtocol
  children:
  - System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  - System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  - System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  - System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  - System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  - System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  - System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  - System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  - System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  - System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  langs:
  - csharp
  name: HttpWebClientProtocol
  nameWithType: HttpWebClientProtocol
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol
  type: Class
  summary: "Representa a classe base para todos os proxies de cliente de serviço de XML da Web que usam o protocolo de transporte HTTP."
  remarks: "As propriedades nessa classe são usadas para controlar o comportamento do objeto de solicitação HTTP usado para transmitir a solicitação de serviço da Web em XML e a resposta. O mapa de propriedades para propriedades encontradas em <xref:System.Net.HttpWebRequest>.</xref:System.Net.HttpWebRequest>       Para se comunicar com um serviço Web XML usando HTTP, você deve criar uma classe de proxy derivando indiretamente ou diretamente de HttpWebClientProtocol para o serviço Web XML. Em vez de criar a classe proxy manualmente, você pode usar a ferramenta Wsdl.exe para criar uma classe de proxy para a descrição do serviço de um determinado do XML Web Services.       Como a classe base para todas as classes de proxy HttpWebClientProtocol, suas propriedades estão em suas classes de proxy. Essas propriedades são úteis para controlar o comportamento de solicitação de transporte subjacente. Por exemplo, use o <xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A>propriedade para chamar os XML Web services por meio de um firewall.</xref:System.Web.Services.Protocols.HttpWebClientProtocol.Proxy%2A> Muitas dessas propriedades são usadas para inicializar o <xref:System.Net.HttpWebRequest>que faz a solicitação da Web.</xref:System.Net.HttpWebRequest>       <xref:System.Web.Services.Protocols.SoapHttpClientProtocol>, <xref:System.Web.Services.Protocols.HttpGetClientProtocol>, e <xref:System.Web.Services.Protocols.HttpPostClientProtocol>deriva diretamente ou indiretamente de HttpWebClientProtocol para oferecer suporte para SOAP, HTTP GET e POST HTTP respectivamente.</xref:System.Web.Services.Protocols.HttpPostClientProtocol> </xref:System.Web.Services.Protocols.HttpGetClientProtocol></xref:System.Web.Services.Protocols.SoapHttpClientProtocol>"
  example:
  - "The following example is an ASP.NET Web Form, which calls an XML Web service named `Math`. Within the `EnterBtn_Click` function, the Web Form allows the server to automatically redirect the client to other sites. It also sets client authentication credentials, proxy settings, the request encoding and the time out for the request before calling the XML Web service method.  \n  \n [!code-cs[Classic HttpWebClientProtocol Example#1](~/add/codesnippet/csharp/t-system.web.services.pr_9_1.aspx)]\n [!code-vb[Classic HttpWebClientProtocol Example#1](~/add/codesnippet/visualbasic/t-system.web.services.pr_9_1.aspx)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class HttpWebClientProtocol : System.Web.Services.Protocols.WebClientProtocol
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  - System.Web.Services.Protocols.WebClientProtocol
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Dispose(System.Boolean)
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Web.Services.Protocols.WebClientProtocol.Abort
  - System.Web.Services.Protocols.WebClientProtocol.AddToCache(System.Type,System.Object)
  - System.Web.Services.Protocols.WebClientProtocol.ConnectionGroupName
  - System.Web.Services.Protocols.WebClientProtocol.Credentials
  - System.Web.Services.Protocols.WebClientProtocol.GetFromCache(System.Type)
  - System.Web.Services.Protocols.WebClientProtocol.PreAuthenticate
  - System.Web.Services.Protocols.WebClientProtocol.RequestEncoding
  - System.Web.Services.Protocols.WebClientProtocol.Timeout
  - System.Web.Services.Protocols.WebClientProtocol.Url
  - System.Web.Services.Protocols.WebClientProtocol.UseDefaultCredentials
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: HttpWebClientProtocol()
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.HttpWebClientProtocol()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Services.Protocols.HttpWebClientProtocol&quot;> </xref> classe."
  syntax:
    content: protected HttpWebClientProtocol ();
    parameters: []
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  id: AllowAutoRedirect
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define se o cliente segue automaticamente redirecionamentos de servidor."
  remarks: "Se um cliente envia informações de autenticação, como um nome de usuário e senha, você não deseja ativar o servidor para encaminhar, porque isso pode comprometer a segurança.       Um <xref:System.Net.WebException>é gerada se a propriedade AllowAutoRedirect for `false` e o servidor Web tenta redirecionar a solicitação.</xref:System.Net.WebException> O <xref:System.Net.WebException.Response%2A>propriedade contém um <xref:System.Net.HttpWebResponse>objeto, em que tanto o <xref:System.Net.HttpWebResponse.StatusCode%2A>e <xref:System.Net.HttpWebResponse.Headers%2A>Propriedades refletem os detalhes sobre o redirecionamento de tentativa.</xref:System.Net.HttpWebResponse.Headers%2A> </xref:System.Net.HttpWebResponse.StatusCode%2A> </xref:System.Net.HttpWebResponse> </xref:System.Net.WebException.Response%2A> O <xref:System.Net.HttpWebResponse.StatusCode%2A>propriedade contém um <xref:System.Net.HttpStatusCode>equivalente a um dos códigos de status de redirecionamento de HTTP (301, 302 e 307) e o `Location` cabeçalho dentro de <xref:System.Net.HttpWebResponse.Headers%2A>coleção aponta para o URI que a solicitação tentou ser redirecionado para.</xref:System.Net.HttpWebResponse.Headers%2A> </xref:System.Net.HttpStatusCode> </xref:System.Net.HttpWebResponse.StatusCode%2A>"
  syntax:
    content: public bool AllowAutoRedirect { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para redirecionar automaticamente o cliente para seguir os redirecionamentos de servidor; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*
  exceptions:
  - type: System.Net.WebException
    commentId: T:System.Net.WebException
    description: "A propriedade AllowAutoRedirect é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> e o servidor Web tenta redirecionar a solicitação."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  id: CancelAsync(System.Object)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: CancelAsync(Object)
  nameWithType: HttpWebClientProtocol.CancelAsync(Object)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Cancela uma chamada assíncrona para um método de serviço da Web em XML, a menos que a chamada já foi concluída."
  syntax:
    content: protected void CancelAsync (object userState);
    parameters:
    - id: userState
      type: System.Object
      description: "O objeto fornecido no último parâmetro para a chamada assíncrona do <xref uid=&quot;langword_csharp_Begin&quot; name=&quot;Begin&quot; href=&quot;&quot;> </xref> método."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  id: ClientCertificates
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém a coleção de certificados de cliente."
  remarks: "Essa propriedade permite que um cliente passar um ou mais certificados de cliente, também conhecido como Authenticode x.&509; v.&3; certificados ao chamar um método de serviço da Web em XML. Se o método de serviço Web XML tiver sido configurado para usar certificados de cliente, um certificado de cliente pode ser usado como um mecanismo para autenticar o cliente. Para obter detalhes sobre como configurar certificados de cliente, consulte a documentação de serviços de informações da Internet (IIS)."
  example:
  - "The following code example demonstrates how to load in a client certificate from a file and then add it to the ClientCertificates property for calling an XML Web service method that uses client certificates for authentication.  \n  \n [!code-cs[HttpWebClientProtocol.ClientCertificates#1](~/add/codesnippet/csharp/p-system.web.services.pr_6_1.aspx)]\n [!code-vb[HttpWebClientProtocol.ClientCertificates#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_6_1.aspx)]"
  syntax:
    content: public System.Security.Cryptography.X509Certificates.X509CertificateCollection ClientCertificates { get; }
    return:
      type: System.Security.Cryptography.X509Certificates.X509CertificateCollection
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509CertificateCollection&quot;> </xref> que representa os certificados de cliente."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  id: CookieContainer
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define a coleção de cookies."
  remarks: "Se um método de serviço Web XML usa o estado de sessão, um cookie for repassado em cabeçalhos de resposta para o cliente do serviço da Web em XML que identifica exclusivamente a sessão para esse cliente de serviço da Web em XML. Em ordem para um serviço Web XML manter o estado de sessão para um cliente, o cliente deve armazenar o cookie. Os clientes recebem o cookie HTTP, criando uma nova instância da <xref:System.Net.CookieContainer>e atribuindo que à propriedade CookieContainer da classe de proxy antes de chamar o XML Web service método.</xref:System.Net.CookieContainer> Se você precisar manter o estado de sessão além quando a instância da classe proxy sai do escopo, o cliente deve armazenar o cookie HTTP entre as chamadas para o serviço Web XML. Por exemplo, um cliente de Web Forms pode armazenar o cookie HTTP salvando o <xref:System.Net.CookieContainer>em seu próprio estado de sessão.</xref:System.Net.CookieContainer> Porque nem todos os serviços Web XML usam o estado de sessão e, portanto, os clientes não são sempre necessário para usar a propriedade CookieContainer de um proxy do cliente, a documentação para o serviço Web XML deverá indicar se o estado da sessão é usado."
  example:
  - "The following code example is a Web Forms client of an XML Web service that uses session state. The client stores the HTTP cookie that uniquely identifies the session by storing it in the client's session state.  \n  \n [!code-vb[HttpWebClientProtocol.CookieContainer#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_14_1.aspx)]\n [!code-cs[HttpWebClientProtocol.CookieContainer#1](~/add/codesnippet/csharp/p-system.web.services.pr_14_1.aspx)]"
  syntax:
    content: public System.Net.CookieContainer CookieContainer { get; set; }
    return:
      type: System.Net.CookieContainer
      description: "Um <xref:System.Net.CookieContainer>que representa os cookies para um cliente de serviços Web.</xref:System.Net.CookieContainer>"
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  id: EnableDecompression
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define um valor que indica se a descompactação está habilitada para este <xref href=&quot;System.Web.Services.Protocols.HttpWebClientProtocol&quot;> </xref>."
  syntax:
    content: public bool EnableDecompression { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a descompactação está habilitada para esta <xref href=&quot;System.Web.Services.Protocols.HttpWebClientProtocol&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  id: GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GenerateXmlMappings(Type,ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém o <xref href=&quot;System.Xml.Serialization.XmlMembersMapping&quot;> </xref> para cada XML Web service método exposto pelo tipo especificado e armazena os mapeamentos do <xref href=&quot;System.Collections.ArrayList&quot;> </xref>."
  syntax:
    content: public static bool GenerateXmlMappings (Type type, System.Collections.ArrayList mappings);
    parameters:
    - id: type
      type: System.Type
      description: "O <xref:System.Type>que expõe os métodos do serviço da Web em XML.</xref:System.Type>"
    - id: mappings
      type: System.Collections.ArrayList
      description: "Um <xref href=&quot;System.Collections.ArrayList&quot;> </xref> que é usado para armazenar os mapeamentos."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>type</code> can be assigned to a <xref href=&quot;System.Web.Services.Protocols.SoapHttpClientProtocol&quot;></xref>; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  id: GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GenerateXmlMappings(Type[],ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém o <xref href=&quot;System.Xml.Serialization.XmlMembersMapping&quot;> </xref> para cada XML Web exposto por tipos especificados de método de serviço e armazena os mapeamentos do <xref href=&quot;System.Collections.ArrayList&quot;> </xref>, bem como em um <xref href=&quot;System.Collections.Hashtable&quot;> </xref> que este método retorna."
  syntax:
    content: public static System.Collections.Hashtable GenerateXmlMappings (Type[] types, System.Collections.ArrayList mappings);
    parameters:
    - id: types
      type: System.Type[]
      description: "Uma matriz do tipo <xref:System.Type>que contém os tipos que expõem os métodos do serviço da Web em XML.</xref:System.Type>"
    - id: mappings
      type: System.Collections.ArrayList
      description: "Um <xref href=&quot;System.Collections.ArrayList&quot;> </xref> que é usado para armazenar os mapeamentos."
    return:
      type: System.Collections.Hashtable
      description: "Um <xref href=&quot;System.Collections.Hashtable&quot;> </xref> que contém o <xref href=&quot;System.Xml.Serialization.XmlMembersMapping&quot;> </xref> para cada método de serviço Web XML exposto por tipos especificados. Os tipos contidos no <code> types </code> são usados como chaves."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  id: GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebRequest(Uri)
  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(Uri)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Cria um <xref:System.Net.WebRequest>para o URI especificado.</xref:System.Net.WebRequest>"
  syntax:
    content: protected override System.Net.WebRequest GetWebRequest (Uri uri);
    parameters:
    - id: uri
      type: System.Uri
      description: "<xref:System.Uri>Para criar o <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest> </xref:System.Uri>"
    return:
      type: System.Net.WebRequest
      description: "Criado <xref:System.Net.WebRequest>.</xref:System.Net.WebRequest>"
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <code>uri</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  id: GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retorna uma resposta de uma solicitação síncrona para um método de serviço da Web em XML."
  syntax:
    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "O <xref:System.Net.WebRequest>da qual obter a resposta.</xref:System.Net.WebRequest>"
    return:
      type: System.Net.WebResponse
      description: "Uma resposta de uma solicitação síncrona para um método de serviço da Web em XML."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  id: GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retorna uma resposta de uma solicitação assíncrona para um método de serviço da Web em XML."
  syntax:
    content: protected override System.Net.WebResponse GetWebResponse (System.Net.WebRequest request, IAsyncResult result);
    parameters:
    - id: request
      type: System.Net.WebRequest
      description: "O <xref:System.Net.WebRequest>da qual obter a resposta.</xref:System.Net.WebRequest>"
    - id: result
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>para passar para <xref:System.Net.HttpWebRequest.EndGetResponse*>quando a resposta foi concluída.</xref:System.Net.HttpWebRequest.EndGetResponse*> </xref:System.IAsyncResult>"
    return:
      type: System.Net.WebResponse
      description: "Uma resposta de uma solicitação assíncrona para um método de serviço da Web em XML."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  id: Proxy
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define informações de proxy para fazer uma solicitação de serviço da Web em XML através de um firewall."
  remarks: "Use a propriedade de Proxy, se um cliente precisa usar configurações de proxy diferentes nas configurações do sistema. Use a <xref:System.Net.WebProxy>classe para definir as configurações de proxy, porque ele implementa <xref:System.Net.IWebProxy>.</xref:System.Net.IWebProxy> </xref:System.Net.WebProxy>       Configurações de proxy padrão podem ser definidas em um arquivo de configuração. Para obter detalhes, consulte [Configurando aplicativos da Internet](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example sets the following proxy settings prior to invoking the `Math` XML Web service: the proxy server to http://proxyserver, the proxy port to 80 and the bypass to the proxy server for local addresses.  \n  \n [!code-cpp[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/cpp/p-system.web.services.pr_56_1.cpp)]\n [!code-vb[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_56_1.vb)]\n [!code-cs[Classic HttpWebClientProtocol.Proxy Example#1](~/add/codesnippet/csharp/p-system.web.services.pr_56_1.cs)]"
  syntax:
    content: public System.Net.IWebProxy Proxy { get; set; }
    return:
      type: System.Net.IWebProxy
      description: "Um <xref:System.Net.IWebProxy>que contém as informações de proxy para fazer solicitações por meio de um firewall.</xref:System.Net.IWebProxy> O valor padrão é que as configurações de proxy do sistema operacional."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  id: UnsafeAuthenticatedConnectionSharing
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define um valor que indica se o compartilhamento de conexão é habilitado quando o cliente usa a autenticação NTLM para se conectar ao servidor Web que hospeda o serviço Web XML."
  remarks: "Essa propriedade define o valor da <xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>propriedade o <xref:System.Net.HttpWebRequest>usado para se comunicar com o servidor Web.</xref:System.Net.HttpWebRequest> </xref:System.Net.HttpWebRequest.UnsafeAuthenticatedConnectionSharing%2A>"
  syntax:
    content: public bool UnsafeAuthenticatedConnectionSharing { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o compartilhamento de conexão estiver habilitado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  id: UserAgent
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  langs:
  - csharp
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  type: Property
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Obtém ou define o valor para o cabeçalho de agente do usuário que é enviado com cada solicitação."
  remarks: "A cadeia de caracteres de agente do usuário permite que um servidor Web para identificar o cliente."
  example:
  - >-
    [!code-cs[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/csharp/p-system.web.services.pr_74_1.cs)]
     [!code-vb[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/visualbasic/p-system.web.services.pr_74_1.vb)]
     [!code-cpp[HttpWebClientProtocol_UserAgent#1](~/add/codesnippet/cpp/p-system.web.services.pr_74_1.cpp)]
  syntax:
    content: public string UserAgent { get; set; }
    return:
      type: System.String
      description: "O valor do cabeçalho de agente de usuário de protocolo HTTP. O padrão é &quot;protocolo de cliente de serviços de Web MS <code> number </code> &quot;, onde <code> number </code> é a versão do common language runtime (por exemplo, 1.0.3705.0)."
  overload: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.WebClientProtocol
  isExternal: false
  name: System.Web.Services.Protocols.WebClientProtocol
- uid: System.Net.WebException
  isExternal: true
  name: System.Net.WebException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: HttpWebClientProtocol()
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol()
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.HttpWebClientProtocol()
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(System.Object)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CancelAsync(Object)
  nameWithType: HttpWebClientProtocol.CancelAsync(Object)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates
- uid: System.Security.Cryptography.X509Certificates.X509CertificateCollection
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509CertificateCollection
  nameWithType: X509CertificateCollection
  fullName: System.Security.Cryptography.X509Certificates.X509CertificateCollection
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type,System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings(Type,ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type,ArrayList)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(System.Type[],System.Collections.ArrayList)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings(Type[],ArrayList)
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings(Type[],ArrayList)
- uid: System.Collections.Hashtable
  parent: System.Collections
  isExternal: false
  name: Hashtable
  nameWithType: Hashtable
  fullName: System.Collections.Hashtable
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(System.Uri)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebRequest(Uri)
  nameWithType: HttpWebClientProtocol.GetWebRequest(Uri)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest(Uri)
- uid: System.Net.WebRequest
  parent: System.Net
  isExternal: true
  name: WebRequest
  nameWithType: WebRequest
  fullName: System.Net.WebRequest
- uid: System.Uri
  parent: System
  isExternal: true
  name: Uri
  nameWithType: Uri
  fullName: System.Uri
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(System.Net.WebRequest,System.IAsyncResult)
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse(WebRequest,IAsyncResult)
  nameWithType: HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse(WebRequest,IAsyncResult)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy
- uid: System.Net.IWebProxy
  parent: System.Net
  isExternal: true
  name: IWebProxy
  nameWithType: IWebProxy
  fullName: System.Net.IWebProxy
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
  fullName: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.#ctor*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: HttpWebClientProtocol
  nameWithType: HttpWebClientProtocol.HttpWebClientProtocol
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.AllowAutoRedirect*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: AllowAutoRedirect
  nameWithType: HttpWebClientProtocol.AllowAutoRedirect
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CancelAsync*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CancelAsync
  nameWithType: HttpWebClientProtocol.CancelAsync
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.ClientCertificates*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: ClientCertificates
  nameWithType: HttpWebClientProtocol.ClientCertificates
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.CookieContainer*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: CookieContainer
  nameWithType: HttpWebClientProtocol.CookieContainer
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.EnableDecompression*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: EnableDecompression
  nameWithType: HttpWebClientProtocol.EnableDecompression
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GenerateXmlMappings*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GenerateXmlMappings
  nameWithType: HttpWebClientProtocol.GenerateXmlMappings
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebRequest*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebRequest
  nameWithType: HttpWebClientProtocol.GetWebRequest
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.GetWebResponse*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: GetWebResponse
  nameWithType: HttpWebClientProtocol.GetWebResponse
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.Proxy*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: Proxy
  nameWithType: HttpWebClientProtocol.Proxy
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UnsafeAuthenticatedConnectionSharing
  nameWithType: HttpWebClientProtocol.UnsafeAuthenticatedConnectionSharing
- uid: System.Web.Services.Protocols.HttpWebClientProtocol.UserAgent*
  parent: System.Web.Services.Protocols.HttpWebClientProtocol
  isExternal: false
  name: UserAgent
  nameWithType: HttpWebClientProtocol.UserAgent
