### YamlMime:ManagedReference
items:
- uid: System.Runtime.InteropServices.RegistrationServices
  id: RegistrationServices
  children:
  - System.Runtime.InteropServices.RegistrationServices.#ctor
  - System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid
  - System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(System.Type)
  - System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  - System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  - System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  - System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)
  - System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)
  - System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(System.Type)
  - System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  - System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(System.Int32)
  langs:
  - csharp
  name: RegistrationServices
  nameWithType: RegistrationServices
  fullName: System.Runtime.InteropServices.RegistrationServices
  type: Class
  summary: "Fornece um conjunto de serviços para registrar e cancelar o registro gerenciado assemblies para uso de COM."
  remarks: "Registration is needed when the objects within an assembly are being used by COM clients. The [Regasm.exe (Assembly Registration Tool)](~/add/includes/ajax-current-ext-md.md) and [!INCLUDE[vsprvsext](~/add/includes/ajax-current-ext-md.md)] use methods exposed by the RegistrationServices class to add or remove COM-enabling registry entries for managed assemblies.  \n  \n You can use the following methods to assist you in preparing a registration file:  \n  \n-   <xref:System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid%2A>  \n  \n-   <xref:System.Runtime.InteropServices.RegistrationServices.GetProgIdForType%2A>  \n  \n-   <xref:System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly%2A>  \n  \n-   <xref:System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType%2A>  \n  \n Although these methods help in gathering information to be used in a registration file, they do not actually produce a registration file. Instead, you can use the [Regasm.exe (Assembly Registration Tool)](../Topic/Regasm.exe%20\\(Assembly%20Registration%20Tool\\).md) tool with the `/regfile` option to perform this task. RegistrationServices methods cannot export and register a type library. To export and register a type library, you can use the [Regasm.exe (Assembly Registration Tool)](../Topic/Regasm.exe%20\\(Assembly%20Registration%20Tool\\).md) tool and the [Tlbexp.exe (Type Library Exporter)](~/add/includes/ajax-current-ext-md.md) tool."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.None)]

      [System.Runtime.InteropServices.ComVisible(true)]

      [System.Runtime.InteropServices.Guid("475E398F-8AFA-43a7-A3BE-F4EF8D6787C9")]

      public class RegistrationServices : System.Runtime.InteropServices.IRegistrationServices
  inheritance:
  - System.Object
  implements:
  - System.Runtime.InteropServices.IRegistrationServices
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.#ctor
  id: '#ctor'
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: RegistrationServices()
  nameWithType: RegistrationServices.RegistrationServices()
  fullName: System.Runtime.InteropServices.RegistrationServices.RegistrationServices()
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Runtime.InteropServices.RegistrationServices&quot;> </xref> classe."
  syntax:
    content: public RegistrationServices ();
    parameters: []
  overload: System.Runtime.InteropServices.RegistrationServices.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid
  id: GetManagedCategoryGuid
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: GetManagedCategoryGuid()
  nameWithType: RegistrationServices.GetManagedCategoryGuid()
  fullName: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Retorna o GUID da categoria COM que contém as classes gerenciadas."
  syntax:
    content: public virtual Guid GetManagedCategoryGuid ();
    parameters: []
    return:
      type: System.Guid
      description: "O GUID da categoria COM que contém as classes gerenciadas."
  overload: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(System.Type)
  id: GetProgIdForType(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: GetProgIdForType(Type)
  nameWithType: RegistrationServices.GetProgIdForType(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Recupera o ProgID de COM para o tipo especificado."
  syntax:
    content: public virtual string GetProgIdForType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo correspondente a ProgID que está sendo solicitado."
    return:
      type: System.String
      description: "O ProgID para o tipo especificado."
  overload: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  id: GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: GetRegistrableTypesInAssembly(Assembly)
  nameWithType: RegistrationServices.GetRegistrableTypesInAssembly(Assembly)
  fullName: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Recupera uma lista de classes em um assembly que deve ser registrado por uma chamada para <xref:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly*>.</xref:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly*>"
  syntax:
    content: public virtual Type[] GetRegistrableTypesInAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "O assembly para procurar classes."
    return:
      type: System.Type[]
      description: "A <xref:System.Type>matriz que contém uma lista de classes <code> assembly </code>.</xref:System.Type>"
  overload: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>assembly</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  id: RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  nameWithType: RegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Registra as classes em um assembly gerenciado para permitir a criação de COM."
  remarks: "`RegisterAssembly`Adiciona as entradas de registro apropriados para os tipos no assembly especificado. Este método também chama nenhuma função de registro encontrada no assembly.       Use <xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName>para obter um assembly.</xref:System.Reflection.Assembly.Load%2A?displayProperty=fullName>"
  syntax:
    content: public virtual bool RegisterAssembly (System.Reflection.Assembly assembly, System.Runtime.InteropServices.AssemblyRegistrationFlags flags);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "O assembly a ser registrado."
    - id: flags
      type: System.Runtime.InteropServices.AssemblyRegistrationFlags
      description: "Um <xref href=&quot;System.Runtime.InteropServices.AssemblyRegistrationFlags&quot;> </xref> valor que indica alguma configuração especial usada durante o registro `assembly`."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> assembly </code> contém tipos que foram com êxito registrado; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o assembly contém tipos não qualificados."
  overload: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assembly</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The full name of <code>assembly</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - um método marcado com <xref href=&quot;System.Runtime.InteropServices.ComRegisterFunctionAttribute&quot;> </xref> não é <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>.       - ou - não há mais de um método marcado com <xref href=&quot;System.Runtime.InteropServices.ComRegisterFunctionAttribute&quot;> </xref> em um determinado nível da hierarquia.       - ou - a assinatura do método marcado com <xref href=&quot;System.Runtime.InteropServices.ComRegisterFunctionAttribute&quot;> </xref> não é válido."
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "Uma função de registro personalizadas definidas pelo usuário (marcados com o <xref href=&quot;System.Runtime.InteropServices.ComRegisterFunctionAttribute&quot;> </xref> atributo) gera uma exceção."
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  id: RegisterTypeForComClients(System.Type,System.Guid@)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: RegisterTypeForComClients(Type,Guid)
  nameWithType: RegistrationServices.RegisterTypeForComClients(Type,Guid)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(Type,Guid)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Registra o tipo especificado com usando o GUID especificado."
  remarks: "Esse método é equivalente a chamar `CoRegisterClassObject` em COM. O método RegisterTypeForComClients não é atômico e pode causar resultados imprevisíveis quando usado em um contexto multi-threaded.       Na versão 2.0 e posterior, use o <xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A>método para cancelar o registro de um tipo em COM.</xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A>       Observe que usando invocação de plataforma para chamar não gerenciado `CoRegisterClassObject` e `CoDisconnectObject` não há suporte para métodos de registro e cancelamento de registro de objetos COM."
  syntax:
    content: public virtual void RegisterTypeForComClients (Type type, ref Guid g);
    parameters:
    - id: type
      type: System.Type
      description: "A <xref:System.Type>ser registrado para uso de COM.</xref:System.Type>"
    - id: g
      type: System.Guid
      description: "O <xref:System.Guid>usada para registrar o tipo especificado.</xref:System.Guid>"
  overload: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> type </code> parâmetro não pode ser criado."
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)
  id: RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  nameWithType: RegistrationServices.RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Registra o tipo especificado com usando o contexto de execução especificado e o tipo de conexão."
  remarks: "Esse método é equivalente a chamar `CoRegisterClassObject` em COM. O método RegisterTypeForComClients não é atômico e pode causar resultados imprevisíveis quando usado em um contexto multi-threaded.       No .NET Framework versão 2.0 e posterior, use o <xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A>método para cancelar o registro de um tipo em COM.</xref:System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients%2A>       Observe que usando invocação de plataforma para chamar não gerenciado `CoRegisterClassObject` e `CoDisconnectObject` não há suporte para métodos de registro e cancelamento de registro de objetos COM."
  syntax:
    content: public virtual int RegisterTypeForComClients (Type type, System.Runtime.InteropServices.RegistrationClassContext classContext, System.Runtime.InteropServices.RegistrationConnectionType flags);
    parameters:
    - id: type
      type: System.Type
      description: "O <xref:System.Type>objeto a ser registrado para uso de COM.</xref:System.Type>"
    - id: classContext
      type: System.Runtime.InteropServices.RegistrationClassContext
      description: "Uma da <xref href=&quot;System.Runtime.InteropServices.RegistrationClassContext&quot;> </xref> valores que indicam o contexto no qual o código executável será executado."
    - id: flags
      type: System.Runtime.InteropServices.RegistrationConnectionType
      description: "Uma da <xref href=&quot;System.Runtime.InteropServices.RegistrationConnectionType&quot;> </xref> valores que especifica como as conexões são feitas para o objeto de classe."
    return:
      type: System.Int32
      description: "Um inteiro que representa um valor de cookie."
  overload: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "The <code>type</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O <code> type </code> parâmetro não pode ser criado."
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)
  id: TypeRepresentsComType(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: TypeRepresentsComType(Type)
  nameWithType: RegistrationServices.TypeRepresentsComType(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Indica se um tipo é marcado com o <xref:System.Runtime.InteropServices.ComImportAttribute>, ou que deriva de um tipo marcado com o <xref:System.Runtime.InteropServices.ComImportAttribute>e compartilha o mesmo GUID como o pai.</xref:System.Runtime.InteropServices.ComImportAttribute> </xref:System.Runtime.InteropServices.ComImportAttribute>"
  syntax:
    content: public virtual bool TypeRepresentsComType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo a ser verificado por ser um tipo COM."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um tipo é marcado com o <xref:System.Runtime.InteropServices.ComImportAttribute>, ou que deriva de um tipo marcado com o <xref:System.Runtime.InteropServices.ComImportAttribute>e compartilha o mesmo GUID como o pai; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Runtime.InteropServices.ComImportAttribute> </xref:System.Runtime.InteropServices.ComImportAttribute>"
  overload: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(System.Type)
  id: TypeRequiresRegistration(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: TypeRequiresRegistration(Type)
  nameWithType: RegistrationServices.TypeRequiresRegistration(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Determina se o tipo especificado requer registro."
  syntax:
    content: public virtual bool TypeRequiresRegistration (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo para verificar os requisitos de registro COM."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o tipo deve ser registrado para uso do COM; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  id: UnregisterAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: UnregisterAssembly(Assembly)
  nameWithType: RegistrationServices.UnregisterAssembly(Assembly)
  fullName: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(Assembly)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Cancela o registro de classes em um assembly gerenciado."
  remarks: '`UnregisterAssembly`Remove as entradas do registro para os tipos no assembly especificado anteriormente adicionado pelo <xref:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly%2A>.</xref:System.Runtime.InteropServices.RegistrationServices.RegisterAssembly%2A> Este método também chama nenhuma função de cancelamento de registro encontrada no assembly.'
  syntax:
    content: public virtual bool UnregisterAssembly (System.Reflection.Assembly assembly);
    parameters:
    - id: assembly
      type: System.Reflection.Assembly
      description: "O assembly a ser cancelado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <code> assembly </code> contém tipos que foram com êxito registrado; caso contrário <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o assembly contém tipos não qualificados."
  overload: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>assembly</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The full name of <code>assembly</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       - ou - um método marcado com <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> não é <xref uid=&quot;langword_csharp_static&quot; name=&quot;static&quot; href=&quot;&quot;> </xref>.       - ou - não há mais de um método marcado com <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> em um determinado nível da hierarquia.       - ou - a assinatura do método marcado com <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> não é válido."
  - type: System.Reflection.TargetInvocationException
    commentId: T:System.Reflection.TargetInvocationException
    description: "Uma função de cancelamento de registro personalizado definido pelo usuário (marcados com o <xref href=&quot;System.Runtime.InteropServices.ComUnregisterFunctionAttribute&quot;> </xref> atributo) gera uma exceção."
  platform:
  - net462
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(System.Int32)
  id: UnregisterTypeForComClients(System.Int32)
  parent: System.Runtime.InteropServices.RegistrationServices
  langs:
  - csharp
  name: UnregisterTypeForComClients(Int32)
  nameWithType: RegistrationServices.UnregisterTypeForComClients(Int32)
  fullName: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(Int32)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.InteropServices
  summary: "Remove as referências a um tipo registrado com o <xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*>método.</xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*>"
  remarks: "Observe que usando invocação de plataforma para chamar não gerenciado `CoRegisterClassObject` e `CoDisconnectObject` não há suporte para métodos para registrar e cancelar o registro de objetos COM."
  syntax:
    content: public virtual void UnregisterTypeForComClients (int cookie);
    parameters:
    - id: cookie
      type: System.Int32
      description: "O valor do cookie retornado por uma chamada anterior a <xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*>sobrecarga de método.</xref:System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*>"
  overload: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Reflection.TargetInvocationException
  isExternal: true
  name: System.Reflection.TargetInvocationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Runtime.InteropServices.RegistrationServices.#ctor
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegistrationServices()
  nameWithType: RegistrationServices.RegistrationServices()
  fullName: System.Runtime.InteropServices.RegistrationServices.RegistrationServices()
- uid: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetManagedCategoryGuid()
  nameWithType: RegistrationServices.GetManagedCategoryGuid()
  fullName: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid()
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetProgIdForType(Type)
  nameWithType: RegistrationServices.GetProgIdForType(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType(Type)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetRegistrableTypesInAssembly(Assembly)
  nameWithType: RegistrationServices.GetRegistrableTypesInAssembly(Assembly)
  fullName: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly(Assembly)
- uid: System.Type[]
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type[]
  spec.csharp:
  - uid: System.Type
    name: Type
    nameWithType: Type
    fullName: Type[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Reflection.Assembly
  parent: System.Reflection
  isExternal: true
  name: Assembly
  nameWithType: Assembly
  fullName: System.Reflection.Assembly
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(System.Reflection.Assembly,System.Runtime.InteropServices.AssemblyRegistrationFlags)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  nameWithType: RegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly(Assembly,AssemblyRegistrationFlags)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Runtime.InteropServices.AssemblyRegistrationFlags
  parent: System.Runtime.InteropServices
  isExternal: false
  name: AssemblyRegistrationFlags
  nameWithType: AssemblyRegistrationFlags
  fullName: System.Runtime.InteropServices.AssemblyRegistrationFlags
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Guid@)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterTypeForComClients(Type,Guid)
  nameWithType: RegistrationServices.RegisterTypeForComClients(Type,Guid)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(Type,Guid)
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(System.Type,System.Runtime.InteropServices.RegistrationClassContext,System.Runtime.InteropServices.RegistrationConnectionType)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  nameWithType: RegistrationServices.RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
  fullName: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients(Type,RegistrationClassContext,RegistrationConnectionType)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.InteropServices.RegistrationClassContext
  parent: System.Runtime.InteropServices
  isExternal: false
  name: RegistrationClassContext
  nameWithType: RegistrationClassContext
  fullName: System.Runtime.InteropServices.RegistrationClassContext
- uid: System.Runtime.InteropServices.RegistrationConnectionType
  parent: System.Runtime.InteropServices
  isExternal: false
  name: RegistrationConnectionType
  nameWithType: RegistrationConnectionType
  fullName: System.Runtime.InteropServices.RegistrationConnectionType
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: TypeRepresentsComType(Type)
  nameWithType: RegistrationServices.TypeRepresentsComType(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType(Type)
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(System.Type)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: TypeRequiresRegistration(Type)
  nameWithType: RegistrationServices.TypeRequiresRegistration(Type)
  fullName: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration(Type)
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(System.Reflection.Assembly)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: UnregisterAssembly(Assembly)
  nameWithType: RegistrationServices.UnregisterAssembly(Assembly)
  fullName: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly(Assembly)
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(System.Int32)
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: UnregisterTypeForComClients(Int32)
  nameWithType: RegistrationServices.UnregisterTypeForComClients(Int32)
  fullName: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients(Int32)
- uid: System.Runtime.InteropServices.RegistrationServices.#ctor*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegistrationServices
  nameWithType: RegistrationServices.RegistrationServices
- uid: System.Runtime.InteropServices.RegistrationServices.GetManagedCategoryGuid*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetManagedCategoryGuid
  nameWithType: RegistrationServices.GetManagedCategoryGuid
- uid: System.Runtime.InteropServices.RegistrationServices.GetProgIdForType*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetProgIdForType
  nameWithType: RegistrationServices.GetProgIdForType
- uid: System.Runtime.InteropServices.RegistrationServices.GetRegistrableTypesInAssembly*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: GetRegistrableTypesInAssembly
  nameWithType: RegistrationServices.GetRegistrableTypesInAssembly
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterAssembly*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterAssembly
  nameWithType: RegistrationServices.RegisterAssembly
- uid: System.Runtime.InteropServices.RegistrationServices.RegisterTypeForComClients*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: RegisterTypeForComClients
  nameWithType: RegistrationServices.RegisterTypeForComClients
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRepresentsComType*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: TypeRepresentsComType
  nameWithType: RegistrationServices.TypeRepresentsComType
- uid: System.Runtime.InteropServices.RegistrationServices.TypeRequiresRegistration*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: TypeRequiresRegistration
  nameWithType: RegistrationServices.TypeRequiresRegistration
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterAssembly*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: UnregisterAssembly
  nameWithType: RegistrationServices.UnregisterAssembly
- uid: System.Runtime.InteropServices.RegistrationServices.UnregisterTypeForComClients*
  parent: System.Runtime.InteropServices.RegistrationServices
  isExternal: false
  name: UnregisterTypeForComClients
  nameWithType: RegistrationServices.UnregisterTypeForComClients
