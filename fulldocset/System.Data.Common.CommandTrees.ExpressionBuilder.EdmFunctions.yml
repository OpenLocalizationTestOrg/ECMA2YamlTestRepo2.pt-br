### YamlMime:ManagedReference
items:
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  id: EdmFunctions
  children:
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression@)
  - System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression@)
  langs:
  - csharp
  name: EdmFunctions
  nameWithType: EdmFunctions
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  type: Class
  summary: "Fornece uma API para construir <xref href=&quot;System.Data.Common.CommandTrees.DbExpression&quot;> </xref>que invocar funções canônicas de EDM e permite que essa API para ser acessado como métodos de extensão do tipo de expressão em si."
  syntax:
    content: public static class EdmFunctions
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression@)
  id: Abs(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Abs(DbExpression)
  nameWithType: EdmFunctions.Abs(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Abs&quot; canônica com o argumento especificado, o que cada um deve ter um tipo de resultado numérico. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **valor**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Abs (this System.Data.Common.CommandTrees.DbExpression value);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor numérico."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor absoluto de **valor**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**value**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**value**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddDays(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddDays(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;AddDays&quot; canônica com os argumentos especificados, o que deve ter tipos de resultado de DateTime ou DateTimeOffset e inteiro. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **dateValue**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddDays (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor para o qual **addValue**devem ser adicionados."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o número de dias para adicionar a **dateValue**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que adiciona o número de dias especificado pelo **addValue** para o valor especificado pelo **dateValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**dateValue** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**dateValue** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddHours(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddHours(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;AddHours&quot; canônica com os argumentos especificados, o que deve ter DateTime, DateTimeOffset ou hora e tipos de resultados inteiro. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **timeValue**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddHours (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor para o qual **addValue**devem ser adicionados."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o número de horas para adicionar a **timeValue**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que adiciona o número de horas especificado por **addValue** para o valor especificado pelo **timeValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**timeValue** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**timeValue** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddMicroseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMicroseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;AddMicroseconds&quot; canônica com os argumentos especificados, o que deve ter DateTime, DateTimeOffset ou hora e tipos de resultados inteiro. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **timeValue**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor para o qual **addValue**devem ser adicionados."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o número de microssegundos para adicionar a **timeValue**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que adiciona o número de microssegundos especificado por **addValue** para o valor especificado pelo **timeValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**timeValue** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**timeValue** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddMilliseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMilliseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;AddMilliseconds&quot; canônica com os argumentos especificados, o que deve ter DateTime, DateTimeOffset ou hora e tipos de resultados inteiro. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **timeValue**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor para o qual **addValue**devem ser adicionados."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o número de milissegundos para adicionar a **timeValue**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que adiciona o número de milissegundos especificado pela **addValue** para o valor especificado pelo **timeValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**timeValue** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**timeValue** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddMinutes(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMinutes(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;AddMinutes&quot; canônica com os argumentos especificados, o que deve ter DateTime, DateTimeOffset ou hora e tipos de resultados inteiro. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **timeValue**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor para o qual **addValue**devem ser adicionados."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o número de minutos para adicionar a **timeValue**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que adiciona o número de minutos especificado pela **addValue** para o valor especificado pelo **timeValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**timeValue** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**timeValue** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddMonths(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMonths(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;AddMonths&quot; canônica com os argumentos especificados, o que deve ter tipos de resultado de DateTime ou DateTimeOffset e inteiro. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **dateValue**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddMonths (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor para o qual **addValue**devem ser adicionados."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o número de meses a adicionar a **dateValue**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que adiciona o número de meses especificado por **addValue** para o valor especificado pelo **dateValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**dateValue** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**dateValue** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddNanoseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddNanoseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;AddNanoseconds&quot; canônica com os argumentos especificados, o que deve ter DateTime, DateTimeOffset ou hora e tipos de resultados inteiro. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **timeValue**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor para o qual **addValue**devem ser adicionados."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o número de nanossegundos para adicionar a **timeValue**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que adiciona o número de nanossegundos especificado por **addValue** para o valor especificado pelo **timeValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**timeValue** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**timeValue** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddSeconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddSeconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;AddSeconds&quot; canônica com os argumentos especificados, o que deve ter DateTime, DateTimeOffset ou hora e tipos de resultados inteiro. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **timeValue**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor para o qual **addValue**devem ser adicionados."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o número de segundos para adicionar a **timeValue**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que adiciona o número de segundos especificado por **addValue** para o valor especificado pelo **timeValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**timeValue** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**timeValue** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: AddYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: AddYears(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddYears(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;AddYears&quot; canônica com os argumentos especificados, o que deve ter tipos de resultado de DateTime ou DateTimeOffset e inteiro. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **dateValue**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression AddYears (this System.Data.Common.CommandTrees.DbExpression dateValue, System.Data.Common.CommandTrees.DbExpression addValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor para o qual **addValue**devem ser adicionados."
    - id: addValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o número de anos para adicionar a **dateValue**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que adiciona o número de anos especificado por **addValue** para o valor especificado pelo **dateValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**dateValue** **addValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**dateValue** **addValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression@)
  id: Average(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Average(DbExpression)
  nameWithType: EdmFunctions.Average(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Média&quot; canônica na coleção especificada. O tipo de resultado da expressão é o mesmo que o tipo de elemento da coleção."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Average (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a coleção na qual o valor médio deve ser calculado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que produz o valor médio."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**coleção**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**coleção**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: BitwiseAnd(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: BitwiseAnd(DbExpression,DbExpression)
  nameWithType: EdmFunctions.BitwiseAnd(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;BitwiseAnd&quot; canônica com os argumentos especificados, o que deve ter o mesmo tipo de resultado numérico inteiro. O tipo de resultado da expressão é o mesmo que o tipo dos argumentos."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseAnd (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);
    parameters:
    - id: value1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro operando."
    - id: value2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o segundo operando."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor produzido por executar o AND bit a bit de **value1** e **value2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**value1** **value2**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**value1** **value2**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression@)
  id: BitwiseNot(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: BitwiseNot(DbExpression)
  nameWithType: EdmFunctions.BitwiseNot(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;BitwiseNot&quot; canônica com o argumento especificado, que deve ter um tipo de resultado numérico inteiro. O tipo de resultado da expressão é o mesmo que o tipo dos argumentos."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseNot (this System.Data.Common.CommandTrees.DbExpression value);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro operando."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor produzido por executar o bit a bit não de **valor**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**value**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**value**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: BitwiseOr(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: BitwiseOr(DbExpression,DbExpression)
  nameWithType: EdmFunctions.BitwiseOr(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;BitwiseOr&quot; canônica com os argumentos especificados, o que deve ter o mesmo tipo de resultado numérico inteiro. O tipo de resultado da expressão é o mesmo que o tipo dos argumentos."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseOr (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);
    parameters:
    - id: value1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro operando."
    - id: value2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o segundo operando."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor produzido por executar o OR bit a bit de **value1** e **value2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**value1** **value2**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**value1** **value2**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: BitwiseXor(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: BitwiseXor(DbExpression,DbExpression)
  nameWithType: EdmFunctions.BitwiseXor(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;BitwiseXor&quot; canônica com os argumentos especificados, o que deve ter o mesmo tipo de resultado numérico inteiro. O tipo de resultado da expressão é o mesmo que o tipo dos argumentos."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression BitwiseXor (this System.Data.Common.CommandTrees.DbExpression value1, System.Data.Common.CommandTrees.DbExpression value2);
    parameters:
    - id: value1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro operando."
    - id: value2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o segundo operando."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor produzido por executar o XOR bit a bit (OR exclusivo) de **value1** e **value2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**value1** **value2**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**value1** **value2**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression@)
  id: Ceiling(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Ceiling(DbExpression)
  nameWithType: EdmFunctions.Ceiling(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Ceiling&quot; canônica com o argumento especificado, que deve ter um tipo de resultado single, double ou decimal. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **valor**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Ceiling (this System.Data.Common.CommandTrees.DbExpression value);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor numérico."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o menor valor de inteiro não menor que **valor**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**value**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**value**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Concat(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Concat(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Concat(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Concat&quot; canônica com os argumentos especificados, o que cada um deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão é uma cadeia de caracteres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Concat (this System.Data.Common.CommandTrees.DbExpression string1, System.Data.Common.CommandTrees.DbExpression string2);
    parameters:
    - id: string1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres que deve aparecer primeira na cadeia de caracteres de resultado concatenado."
    - id: string2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres que deve aparecer em segundo lugar na cadeia de caracteres de resultado concatenado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que produz a cadeia de caracteres concatenada."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**string1** **string2**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**string1** **string2**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Contains(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Contains(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Contains(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Contém&quot; canônica com os argumentos especificados, o que cada um deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão é booliana."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbExpression Contains (this System.Data.Common.CommandTrees.DbExpression searchedString, System.Data.Common.CommandTrees.DbExpression searchedForString);
    parameters:
    - id: searchedString
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres para pesquisar qualquer ocorrência de **searchedForString**."
    - id: searchedForString
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres a ser pesquisado em **searchedString**."
    return:
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Um novo DbFunctionExpression que retorna um valor booliano que indica se ou não **searchedForString** ocorre em **searchedString**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**searchedString** **searchedForString**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**searchedString** **searchedForString**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression@)
  id: Count(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Count(DbExpression)
  nameWithType: EdmFunctions.Count(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Count&quot; canônica na coleção especificada. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Count (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a coleção em que o valor da contagem deve ser calculado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que produz o valor da contagem."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**coleção**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**coleção**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: CreateDateTime(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.CreateDateTime(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;CreateDateTime&quot; canônica com os argumentos especificados. **segundo** devem ter um tipo de resultado de EDM, enquanto todos os outros argumentos devem ter um tipo de resultado de Int32. O tipo de resultado da expressão é Edm.DateTime."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTime (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);
    parameters:
    - id: year
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de ano para a nova instância de DateTime."
    - id: month
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de mês para a nova instância de DateTime."
    - id: day
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor do dia para a nova instância de DateTime."
    - id: hour
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de hora para a nova instância de DateTime."
    - id: minute
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de minuto para a nova instância de DateTime."
    - id: second
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de segundo para a nova instância de DateTime."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna um novo DateTime com base nos valores especificados."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**year** **month** **day** **hour** **minute** **second**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**year** **month** **day** **hour** **minute** **second**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: CreateDateTimeOffset(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.CreateDateTimeOffset(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;CreateDateTimeOffset&quot; canônica com os argumentos especificados. **segundo** devem ter um tipo de resultado de EDM, enquanto todos os outros argumentos devem ter um tipo de resultado de Int32. O tipo de resultado da expressão é Edm.DateTimeOffset."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression CreateDateTimeOffset (System.Data.Common.CommandTrees.DbExpression year, System.Data.Common.CommandTrees.DbExpression month, System.Data.Common.CommandTrees.DbExpression day, System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second, System.Data.Common.CommandTrees.DbExpression timeZoneOffset);
    parameters:
    - id: year
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de ano para a nova instância de DateTimeOffset."
    - id: month
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de mês para a nova instância de DateTimeOffset."
    - id: day
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor do dia para a nova instância de DateTimeOffset."
    - id: hour
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de hora para a nova instância de DateTimeOffset."
    - id: minute
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de minuto para a nova instância de DateTimeOffset."
    - id: second
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de segundo para a nova instância de DateTimeOffset."
    - id: timeZoneOffset
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o número de minutos em que o valor de deslocamento de fuso horário para a nova instância de DateTimeOffset."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna um novo DateTimeOffset com base nos valores especificados."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**year** **month** **day** **hour** **minute** **second** **timeZoneOffset**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: CreateTime(DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.CreateTime(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;CreateTime&quot; canônica com os argumentos especificados. **segundo** devem ter um tipo de resultado de EDM, enquanto todos os outros argumentos devem ter um tipo de resultado de Int32. O tipo de resultado da expressão é Edm.Time."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression CreateTime (System.Data.Common.CommandTrees.DbExpression hour, System.Data.Common.CommandTrees.DbExpression minute, System.Data.Common.CommandTrees.DbExpression second);
    parameters:
    - id: hour
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de hora para a nova instância de DateTime."
    - id: minute
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de minuto para a nova instância de DateTime."
    - id: second
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que fornece o valor de segundo para a nova instância de DateTime."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna uma nova hora com base nos valores especificados."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**hora** **minuto** **segundo**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**hora** **minuto** **segundo**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime
  id: CurrentDateTime
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: CurrentDateTime()
  nameWithType: EdmFunctions.CurrentDateTime()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;CurrentDateTime&quot; canônica."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTime ();
    parameters: []
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna a data e hora atuais como uma instância de Edm.DateTime."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset
  id: CurrentDateTimeOffset
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: CurrentDateTimeOffset()
  nameWithType: EdmFunctions.CurrentDateTimeOffset()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;CurrentDateTimeOffset&quot; canônica."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentDateTimeOffset ();
    parameters: []
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna a data e hora atuais como uma instância de Edm.DateTimeOffset."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime
  id: CurrentUtcDateTime
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: CurrentUtcDateTime()
  nameWithType: EdmFunctions.CurrentUtcDateTime()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;CurrentUtcDateTime&quot; canônica."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression CurrentUtcDateTime ();
    parameters: []
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna a data UTC atual e a hora como uma instância de Edm.DateTime."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression@)
  id: Day(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Day(DbExpression)
  nameWithType: EdmFunctions.Day(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Day&quot; canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Day (this System.Data.Common.CommandTrees.DbExpression dateValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor do qual o dia deve ser recuperado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de dia inteiro de **dateValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**dateValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**dateValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression@)
  id: DayOfYear(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DayOfYear(DbExpression)
  nameWithType: EdmFunctions.DayOfYear(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;DayOfYear&quot; canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DayOfYear (this System.Data.Common.CommandTrees.DbExpression dateValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor do qual o dia do ano deve ser recuperada."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o dia inteiro do valor de ano de **dateValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**dateValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**dateValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffDays(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffDays(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;DiffDays&quot; canônica com os argumentos especificados, que devem ter cada resultado DateTime ou DateTimeOffset de tipo. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffDays (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);
    parameters:
    - id: dateValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro argumento de valor de data."
    - id: dateValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o segundo argumento de valor de data."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o número de dias que é a diferença entre **dateValue1** e **dateValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffHours(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffHours(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;DiffHours&quot; canônica com os argumentos especificados, o que cada um deve ter DateTime, DateTimeOffset ou Time que tipo de resultado. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffHours (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);
    parameters:
    - id: timeValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro argumento de valor de tempo."
    - id: timeValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o segundo argumento de valor de tempo."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o número de horas que é a diferença entre **timeValue1** e **timeValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffMicroseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMicroseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;DiffMicroseconds&quot; canônica com os argumentos especificados, o que cada um deve ter DateTime, DateTimeOffset ou Time que tipo de resultado. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMicroseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);
    parameters:
    - id: timeValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro argumento de valor de tempo."
    - id: timeValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o segundo argumento de valor de tempo."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o número de microssegundos que é a diferença entre **timeValue1** e **timeValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffMilliseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMilliseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;DiffMilliseconds&quot; canônica com os argumentos especificados, o que cada um deve ter DateTime, DateTimeOffset ou Time que tipo de resultado. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMilliseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);
    parameters:
    - id: timeValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro argumento de valor de tempo."
    - id: timeValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o segundo argumento de valor de tempo."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o número de milissegundos que é a diferença entre **timeValue1** e **timeValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffMinutes(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMinutes(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;DiffMinutes&quot; canônica com os argumentos especificados, o que cada um deve ter DateTime, DateTimeOffset ou Time que tipo de resultado. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMinutes (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);
    parameters:
    - id: timeValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro argumento de valor de tempo."
    - id: timeValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o segundo argumento de valor de tempo."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o número de minutos que é a diferença entre **timeValue1** e **timeValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffMonths(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMonths(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;DiffMonths&quot; canônica com os argumentos especificados, que devem ter cada resultado DateTime ou DateTimeOffset de tipo. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffMonths (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);
    parameters:
    - id: dateValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro argumento de valor de data."
    - id: dateValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o segundo argumento de valor de data."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o número de meses que é a diferença entre **dateValue1** e **dateValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffNanoseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffNanoseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;DiffNanoseconds&quot; canônica com os argumentos especificados, o que cada um deve ter DateTime, DateTimeOffset ou Time que tipo de resultado. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffNanoseconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);
    parameters:
    - id: timeValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro argumento de valor de tempo."
    - id: timeValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o segundo argumento de valor de tempo."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o número de nanossegundos que é a diferença entre **timeValue1** e **timeValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffSeconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffSeconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;DiffSeconds&quot; canônica com os argumentos especificados, o que cada um deve ter DateTime, DateTimeOffset ou Time que tipo de resultado. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffSeconds (this System.Data.Common.CommandTrees.DbExpression timeValue1, System.Data.Common.CommandTrees.DbExpression timeValue2);
    parameters:
    - id: timeValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro argumento de valor de tempo."
    - id: timeValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o segundo argumento de valor de tempo."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o número de segundos que a diferença entre **timeValue1** e **timeValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: DiffYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: DiffYears(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffYears(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;DiffYears&quot; canônica com os argumentos especificados, que devem ter cada resultado DateTime ou DateTimeOffset de tipo. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression DiffYears (this System.Data.Common.CommandTrees.DbExpression dateValue1, System.Data.Common.CommandTrees.DbExpression dateValue2);
    parameters:
    - id: dateValue1
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o primeiro argumento de valor de data."
    - id: dateValue2
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o segundo argumento de valor de data."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o número de anos é a diferença entre **dateValue1** e **dateValue2**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: EndsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: EndsWith(DbExpression,DbExpression)
  nameWithType: EdmFunctions.EndsWith(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;EndsWith&quot; canônica com os argumentos especificados, o que cada um deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão é booliana."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression EndsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression suffix);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres que é pesquisada no final de cadeia de caracteres **sufixo**."
    - id: suffix
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres de destino que é procurada no final da **stringArgument**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna um valor booliano que indica se ou não **stringArgument** termina com **sufixo**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression@)
  id: Floor(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Floor(DbExpression)
  nameWithType: EdmFunctions.Floor(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Floor&quot; canônica com o argumento especificado, que deve ter um tipo de resultado single, double ou decimal. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **valor**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Floor (this System.Data.Common.CommandTrees.DbExpression value);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor numérico."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o maior valor de inteiro não é maior que **valor**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**value**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**value**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression@)
  id: GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: GetTotalOffsetMinutes(DbExpression)
  nameWithType: EdmFunctions.GetTotalOffsetMinutes(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;GetTotalOffsetMinutes&quot; canônica com o argumento especificado, que deve ter um tipo de resultado de DateTimeOffset. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression GetTotalOffsetMinutes (this System.Data.Common.CommandTrees.DbExpression dateTimeOffsetArgument);
    parameters:
    - id: dateTimeOffsetArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor de DateTimeOffset em que o minuto deslocamento do GMT deve ser recuperado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o número de minutos **dateTimeOffsetArgument** é deslocada do GMT."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**dateTimeOffsetArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**dateTimeOffsetArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression@)
  id: Hour(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Hour(DbExpression)
  nameWithType: EdmFunctions.Hour(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Hour&quot; canônica com o argumento especificado, que deve ter um DateTime, DateTimeOffset ou tipo de resultado de tempo. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Hour (this System.Data.Common.CommandTrees.DbExpression timeValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor em que a hora deve ser recuperada."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de hora de inteiro de **timeValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**timeValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**timeValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: IndexOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: IndexOf(DbExpression,DbExpression)
  nameWithType: EdmFunctions.IndexOf(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;IndexOf&quot; canônica com os argumentos especificados, o que cada um deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão é Int32."
  remarks: "É o índice retornado pela IndexOf \\<b > baseados em&1; \\< /b >."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression IndexOf (this System.Data.Common.CommandTrees.DbExpression searchString, System.Data.Common.CommandTrees.DbExpression stringToFind);
    parameters:
    - id: searchString
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres para pesquisar **stringToFind**."
    - id: stringToFind
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres a ser localizado em **SequênciaDePesquisa** devem ser verificados."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o primeiro índice de **stringToFind** na **SequênciaDePesquisa**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**SequênciaDePesquisa** **stringToFind**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**SequênciaDePesquisa** **stringToFind**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Left(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Left(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Left(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função canônica &quot;Left&quot; com os argumentos especificados, o que deve ter um resultado numérico inteiro e de cadeia de caracteres de tipo. O tipo de resultado da expressão é uma cadeia de caracteres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Left (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres do qual extrair a subcadeia de caracteres mais à esquerda."
    - id: length
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o comprimento da subcadeia de caracteres mais à esquerda para extrair **stringArgument**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna a subcadeia de caracteres mais à esquerda de comprimento **comprimento** de **stringArgument**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument** **comprimento**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression@)
  id: Length(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Length(DbExpression)
  nameWithType: EdmFunctions.Length(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Length&quot; canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Length (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres para o qual o comprimento deve ser calculado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o comprimento de **stringArgument**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression@)
  id: LongCount(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: LongCount(DbExpression)
  nameWithType: EdmFunctions.LongCount(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;BigCount&quot; canônica na coleção especificada. O tipo de resultado da expressão é Edm.Int64."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression LongCount (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a coleção em que o valor da contagem deve ser calculado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que produz o valor da contagem."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**coleção**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**coleção**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression@)
  id: Max(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Max(DbExpression)
  nameWithType: EdmFunctions.Max(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Max&quot; canônica na coleção especificada. O tipo de resultado da expressão é o mesmo que o tipo de elemento da coleção."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Max (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a coleção em que o valor máximo deve ser recuperado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que produz o valor máximo."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**coleção**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**coleção**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression@)
  id: Millisecond(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Millisecond(DbExpression)
  nameWithType: EdmFunctions.Millisecond(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Milissegundo&quot; canônica com o argumento especificado, que deve ter um DateTime, DateTimeOffset ou tipo de resultado de tempo. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Millisecond (this System.Data.Common.CommandTrees.DbExpression timeValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor do qual o milissegundo deve ser recuperado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de milissegundos de inteiro de **timeValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**timeValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**timeValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression@)
  id: Min(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Min(DbExpression)
  nameWithType: EdmFunctions.Min(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Min&quot; canônica na coleção especificada. O tipo de resultado da expressão é o mesmo que o tipo de elemento da coleção."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Min (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a coleção em que o valor mínimo deve ser recuperado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que produz o valor mínimo."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**coleção**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**coleção**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression@)
  id: Minute(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Minute(DbExpression)
  nameWithType: EdmFunctions.Minute(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Minute&quot; canônica com o argumento especificado, que deve ter um DateTime, DateTimeOffset ou tipo de resultado de tempo. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Minute (this System.Data.Common.CommandTrees.DbExpression timeValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor do qual o minuto deve ser recuperado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de minuto de inteiro de **timeValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**timeValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**timeValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression@)
  id: Month(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Month(DbExpression)
  nameWithType: EdmFunctions.Month(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Month&quot; canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Month (this System.Data.Common.CommandTrees.DbExpression dateValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor do qual o mês deve ser recuperado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de mês inteiro de **dateValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**dateValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**dateValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid
  id: NewGuid
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: NewGuid()
  nameWithType: EdmFunctions.NewGuid()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid()
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;NewGuid&quot; canônica."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression NewGuid ();
    parameters: []
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna um novo valor GUID."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Power(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Power(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Power(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função de &quot;Power&quot; canônica com os argumentos especificados, que devem ter tipos de resultado numérico. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **baseArgument**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Power (this System.Data.Common.CommandTrees.DbExpression baseArgument, System.Data.Common.CommandTrees.DbExpression exponent);
    parameters:
    - id: baseArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor numérico para elevar à potência especificada."
    - id: exponent
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a potência à qual **baseArgument** deve ser gerado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de **baseArgument** elevado à potência especificada por **expoente**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**baseArgument** **expoente**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**baseArgument** **expoente**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: Replace(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Replace(DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.Replace(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função canônica &quot;Replace&quot; com os argumentos especificados, o que cada um deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão também é cadeia de caracteres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Replace (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression toReplace, System.Data.Common.CommandTrees.DbExpression replacement);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres no qual realizar a operação de substituição."
    - id: toReplace
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres que será substituída."
    - id: replacement
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres de substituição."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna uma nova cadeia de caracteres com base em **stringArgument** onde todas as ocorrências do **toReplace** é substituído por **substituição**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument** **toReplace** **substituição**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument** **toReplace** **substituição**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression@)
  id: Reverse(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Reverse(DbExpression)
  nameWithType: EdmFunctions.Reverse(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função canônica &quot;Reverter&quot; com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão também é cadeia de caracteres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Reverse (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres para reverter."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que produz o valor invertido **stringArgument**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Right(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Right(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Right(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função canônica &quot;Right&quot; com os argumentos especificados, o que deve ter um resultado numérico inteiro e de cadeia de caracteres de tipo. O tipo de resultado da expressão é uma cadeia de caracteres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Right (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression length);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres do qual extrair a subcadeia de caracteres mais à direita."
    - id: length
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o comprimento da subcadeia de caracteres mais à direita para extrair **stringArgument**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna a subcadeia de caracteres mais à direita de comprimento **comprimento** de **stringArgument**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument** **comprimento**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression@)
  id: Round(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Round(DbExpression)
  nameWithType: EdmFunctions.Round(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Round&quot; canônica com o argumento especificado, que deve ter um tipo de resultado single, double ou decimal. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **valor**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor numérico para arredondar."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que Arredonda o argumento especificado para o valor inteiro mais próximo."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**value**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**value**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Round(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Round(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Round(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Round&quot; canônica com os argumentos especificados, o que devem ter um único, duplo ou decimal e tipos de resultados inteiro. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **valor**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Round (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor numérico para arredondar."
    - id: digits
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o número de dígitos de precisão para usar ao arredondamento."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que Arredonda o argumento especificado para o valor inteiro mais próximo, com precisão conforme especificado por **dígitos**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**valor** **dígitos**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**valor** **dígitos**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression@)
  id: Second(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Second(DbExpression)
  nameWithType: EdmFunctions.Second(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função canônica &quot;Segunda&quot; com o argumento especificado, que deve ter um DateTime, DateTimeOffset ou tipo de resultado de tempo. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Second (this System.Data.Common.CommandTrees.DbExpression timeValue);
    parameters:
    - id: timeValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor do qual o segundo deve ser recuperado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o segundo valor de inteiro de **timeValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**timeValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**timeValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: StartsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: StartsWith(DbExpression,DbExpression)
  nameWithType: EdmFunctions.StartsWith(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;StartsWith&quot; canônica com os argumentos especificados, o que cada um deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão é booliana."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression StartsWith (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression prefix);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres que é pesquisada no início de cadeia de caracteres **prefixo**."
    - id: prefix
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres de destino que é procurada no início de **stringArgument**."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna um valor booliano que indica se ou não **stringArgument** começa com **prefixo**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression@)
  id: StDev(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: StDev(DbExpression)
  nameWithType: EdmFunctions.StDev(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;StDev&quot; canônica sobre os membros não nulos da coleção especificada. O tipo de resultado da expressão é EDM."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression StDev (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a coleção para a qual o desvio padrão deve ser calculado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que produz o valor de desvio padrão em nulas membros da coleção."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**coleção**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**coleção**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression@)
  id: StDevP(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: StDevP(DbExpression)
  nameWithType: EdmFunctions.StDevP(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;StDevP&quot; canônica sobre a população da coleção especificada. O tipo de resultado da expressão é EDM."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression StDevP (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a coleção para a qual o desvio padrão deve ser calculado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que produz o valor de desvio padrão."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**coleção**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**coleção**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  id: Substring(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Substring(DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.Substring(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(DbExpression,DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Substring&quot; canônica com os argumentos especificados, que devem ter tipos de resultado numérico uma cadeia de caracteres e inteiros. O tipo de resultado da expressão é uma cadeia de caracteres."
  remarks: "Subcadeia de caracteres requer que o índice especificado pelo **iniciar** ser \\<b > baseados em&1; \\< /b >."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Substring (this System.Data.Common.CommandTrees.DbExpression stringArgument, System.Data.Common.CommandTrees.DbExpression start, System.Data.Common.CommandTrees.DbExpression length);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres do qual extrair a subcadeia de caracteres."
    - id: start
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o índice inicial do qual a subcadeia de caracteres deve ser feita."
    - id: length
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o comprimento da subcadeia de caracteres."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna a subcadeia de caracteres de comprimento **comprimento** de **stringArgument** começando em **iniciar**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument** **iniciar** **comprimento**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument** **iniciar** **comprimento**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression@)
  id: Sum(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Sum(DbExpression)
  nameWithType: EdmFunctions.Sum(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Sum&quot; canônica na coleção especificada. O tipo de resultado da expressão é o mesmo que o tipo de elemento da coleção."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Sum (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a coleção na qual a soma deve ser calculada."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que produz a soma."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**coleção**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**coleção**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression@)
  id: ToLower(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: ToLower(DbExpression)
  nameWithType: EdmFunctions.ToLower(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;ToLower&quot; canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão também é cadeia de caracteres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression ToLower (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres que deve ser convertida em letras minúsculas."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de **stringArgument** convertidos em letras minúsculas."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression@)
  id: ToUpper(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: ToUpper(DbExpression)
  nameWithType: EdmFunctions.ToUpper(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;ToUpper&quot; canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão também é cadeia de caracteres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression ToUpper (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres que deve ser convertida em letras maiusculas."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de **stringArgument** convertido em letras maiusculas."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression@)
  id: Trim(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Trim(DbExpression)
  nameWithType: EdmFunctions.Trim(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função canônica &quot;Trim&quot; com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão também é cadeia de caracteres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Trim (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres da qual à esquerda e à direita espaço devem ser removidos."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de **stringArgument** à esquerda e à direita removido."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression@)
  id: TrimEnd(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: TrimEnd(DbExpression)
  nameWithType: EdmFunctions.TrimEnd(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;RTrim&quot; canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão também é cadeia de caracteres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression TrimEnd (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres da qual espaço à direita deve ser removido."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de **stringArgument** com à direita removido."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression@)
  id: TrimStart(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: TrimStart(DbExpression)
  nameWithType: EdmFunctions.TrimStart(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;LTrim&quot; canônica com o argumento especificado, que deve ter um tipo de resultado de cadeia de caracteres. O tipo de resultado da expressão também é cadeia de caracteres."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression TrimStart (this System.Data.Common.CommandTrees.DbExpression stringArgument);
    parameters:
    - id: stringArgument
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a cadeia de caracteres do que levam o espaço deve ser removido."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de **stringArgument** com à esquerda removido."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**stringArgument**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**stringArgument**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  id: Truncate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Truncate(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Truncate(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(DbExpression,DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Truncate&quot; canônica com os argumentos especificados, o que devem ter um único, duplo ou decimal e tipos de resultados inteiro. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **valor**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Truncate (this System.Data.Common.CommandTrees.DbExpression value, System.Data.Common.CommandTrees.DbExpression digits);
    parameters:
    - id: value
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor numérico para truncar."
    - id: digits
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o número de dígitos de precisão para usar ao truncar."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que trunca o argumento especificado para o valor inteiro mais próximo, com precisão conforme especificado por **dígitos**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**valor** **dígitos**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**valor** **dígitos**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression@)
  id: TruncateTime(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: TruncateTime(DbExpression)
  nameWithType: EdmFunctions.TruncateTime(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;TruncateTime&quot; canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset. O tipo de resultado da expressão é o mesmo que o tipo de resultado de **dateValue**."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression TruncateTime (this System.Data.Common.CommandTrees.DbExpression dateValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor para o qual a parte de hora deve ser truncada."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de **dateValue** com hora definida como zero."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**dateValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**dateValue**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression@)
  id: Var(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Var(DbExpression)
  nameWithType: EdmFunctions.Var(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Var&quot; canônica sobre os membros não nulos da coleção especificada. O tipo de resultado da expressão é EDM."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Var (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a coleção para a qual a variância estatística deve ser calculada."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que produz o valor de variação estatística para os membros não nulos da coleção."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**coleção**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**coleção**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression@)
  id: VarP(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: VarP(DbExpression)
  nameWithType: EdmFunctions.VarP(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;VarP&quot; canônica sobre a população da coleção especificada. O tipo de resultado da expressão EDM."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression VarP (this System.Data.Common.CommandTrees.DbExpression collection);
    parameters:
    - id: collection
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica a coleção para a qual a variância estatística deve ser calculada."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que produz o valor de variação estatística."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**coleção**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**coleção**'
  platform:
  - net462
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression@)
  id: Year(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  langs:
  - csharp
  name: Year(DbExpression)
  nameWithType: EdmFunctions.Year(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(DbExpression)
  type: Method
  assemblies:
  - System.Data.Entity
  namespace: System.Data.Common.CommandTrees.ExpressionBuilder
  summary: "Cria um <xref href=&quot;System.Data.Common.CommandTrees.DbFunctionExpression&quot;> </xref> que invoca a função &quot;Year&quot; canônica com o argumento especificado, que deve ter um tipo de resultado DateTime ou DateTimeOffset. O tipo de resultado da expressão é Int32."
  syntax:
    content: public static System.Data.Common.CommandTrees.DbFunctionExpression Year (this System.Data.Common.CommandTrees.DbExpression dateValue);
    parameters:
    - id: dateValue
      type: System.Data.Common.CommandTrees.DbExpression
      description: "Uma expressão que especifica o valor em que o ano deve ser recuperado."
    return:
      type: System.Data.Common.CommandTrees.DbFunctionExpression
      description: "Um novo DbFunctionExpression que retorna o valor de ano inteiro de **dateValue**."
  overload: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: '**dateValue**'
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: '**dateValue**'
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Abs(DbExpression)
  nameWithType: EdmFunctions.Abs(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs(DbExpression)
- uid: System.Data.Common.CommandTrees.DbFunctionExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbFunctionExpression
  nameWithType: DbFunctionExpression
  fullName: System.Data.Common.CommandTrees.DbFunctionExpression
- uid: System.Data.Common.CommandTrees.DbExpression
  parent: System.Data.Common.CommandTrees
  isExternal: false
  name: DbExpression
  nameWithType: DbExpression
  fullName: System.Data.Common.CommandTrees.DbExpression
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddDays(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddDays(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddHours(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddHours(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMicroseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMicroseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMilliseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMilliseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMinutes(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMinutes(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMonths(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddMonths(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddNanoseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddNanoseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddSeconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddSeconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddYears(DbExpression,DbExpression)
  nameWithType: EdmFunctions.AddYears(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Average(DbExpression)
  nameWithType: EdmFunctions.Average(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseAnd(DbExpression,DbExpression)
  nameWithType: EdmFunctions.BitwiseAnd(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseNot(DbExpression)
  nameWithType: EdmFunctions.BitwiseNot(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseOr(DbExpression,DbExpression)
  nameWithType: EdmFunctions.BitwiseOr(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseXor(DbExpression,DbExpression)
  nameWithType: EdmFunctions.BitwiseXor(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Ceiling(DbExpression)
  nameWithType: EdmFunctions.Ceiling(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Concat(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Concat(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Contains(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Contains(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Count(DbExpression)
  nameWithType: EdmFunctions.Count(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CreateDateTime(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.CreateDateTime(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CreateDateTimeOffset(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.CreateDateTimeOffset(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset(DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CreateTime(DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.CreateTime(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime(DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CurrentDateTime()
  nameWithType: EdmFunctions.CurrentDateTime()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime()
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CurrentDateTimeOffset()
  nameWithType: EdmFunctions.CurrentDateTimeOffset()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset()
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CurrentUtcDateTime()
  nameWithType: EdmFunctions.CurrentUtcDateTime()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime()
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Day(DbExpression)
  nameWithType: EdmFunctions.Day(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DayOfYear(DbExpression)
  nameWithType: EdmFunctions.DayOfYear(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffDays(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffDays(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffHours(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffHours(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMicroseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMicroseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMilliseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMilliseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMinutes(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMinutes(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMonths(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffMonths(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffNanoseconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffNanoseconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffSeconds(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffSeconds(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffYears(DbExpression,DbExpression)
  nameWithType: EdmFunctions.DiffYears(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: EndsWith(DbExpression,DbExpression)
  nameWithType: EdmFunctions.EndsWith(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Floor(DbExpression)
  nameWithType: EdmFunctions.Floor(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: GetTotalOffsetMinutes(DbExpression)
  nameWithType: EdmFunctions.GetTotalOffsetMinutes(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Hour(DbExpression)
  nameWithType: EdmFunctions.Hour(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: IndexOf(DbExpression,DbExpression)
  nameWithType: EdmFunctions.IndexOf(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Left(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Left(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Length(DbExpression)
  nameWithType: EdmFunctions.Length(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: LongCount(DbExpression)
  nameWithType: EdmFunctions.LongCount(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Max(DbExpression)
  nameWithType: EdmFunctions.Max(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Millisecond(DbExpression)
  nameWithType: EdmFunctions.Millisecond(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Min(DbExpression)
  nameWithType: EdmFunctions.Min(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Minute(DbExpression)
  nameWithType: EdmFunctions.Minute(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Month(DbExpression)
  nameWithType: EdmFunctions.Month(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: NewGuid()
  nameWithType: EdmFunctions.NewGuid()
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid()
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Power(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Power(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Replace(DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.Replace(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace(DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Reverse(DbExpression)
  nameWithType: EdmFunctions.Reverse(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Right(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Right(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Round(DbExpression)
  nameWithType: EdmFunctions.Round(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Round(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Round(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Second(DbExpression)
  nameWithType: EdmFunctions.Second(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: StartsWith(DbExpression,DbExpression)
  nameWithType: EdmFunctions.StartsWith(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: StDev(DbExpression)
  nameWithType: EdmFunctions.StDev(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: StDevP(DbExpression)
  nameWithType: EdmFunctions.StDevP(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Substring(DbExpression,DbExpression,DbExpression)
  nameWithType: EdmFunctions.Substring(DbExpression,DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring(DbExpression,DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Sum(DbExpression)
  nameWithType: EdmFunctions.Sum(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: ToLower(DbExpression)
  nameWithType: EdmFunctions.ToLower(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: ToUpper(DbExpression)
  nameWithType: EdmFunctions.ToUpper(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Trim(DbExpression)
  nameWithType: EdmFunctions.Trim(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: TrimEnd(DbExpression)
  nameWithType: EdmFunctions.TrimEnd(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: TrimStart(DbExpression)
  nameWithType: EdmFunctions.TrimStart(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(System.Data.Common.CommandTrees.DbExpression@,System.Data.Common.CommandTrees.DbExpression)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Truncate(DbExpression,DbExpression)
  nameWithType: EdmFunctions.Truncate(DbExpression,DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate(DbExpression,DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: TruncateTime(DbExpression)
  nameWithType: EdmFunctions.TruncateTime(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Var(DbExpression)
  nameWithType: EdmFunctions.Var(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: VarP(DbExpression)
  nameWithType: EdmFunctions.VarP(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(System.Data.Common.CommandTrees.DbExpression@)
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Year(DbExpression)
  nameWithType: EdmFunctions.Year(DbExpression)
  fullName: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year(DbExpression)
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Abs*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Abs
  nameWithType: EdmFunctions.Abs
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddDays*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddDays
  nameWithType: EdmFunctions.AddDays
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddHours*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddHours
  nameWithType: EdmFunctions.AddHours
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMicroseconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMicroseconds
  nameWithType: EdmFunctions.AddMicroseconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMilliseconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMilliseconds
  nameWithType: EdmFunctions.AddMilliseconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMinutes*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMinutes
  nameWithType: EdmFunctions.AddMinutes
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddMonths*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddMonths
  nameWithType: EdmFunctions.AddMonths
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddNanoseconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddNanoseconds
  nameWithType: EdmFunctions.AddNanoseconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddSeconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddSeconds
  nameWithType: EdmFunctions.AddSeconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.AddYears*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: AddYears
  nameWithType: EdmFunctions.AddYears
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Average*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Average
  nameWithType: EdmFunctions.Average
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseAnd*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseAnd
  nameWithType: EdmFunctions.BitwiseAnd
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseNot*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseNot
  nameWithType: EdmFunctions.BitwiseNot
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseOr*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseOr
  nameWithType: EdmFunctions.BitwiseOr
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.BitwiseXor*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: BitwiseXor
  nameWithType: EdmFunctions.BitwiseXor
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Ceiling*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Ceiling
  nameWithType: EdmFunctions.Ceiling
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Concat*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Concat
  nameWithType: EdmFunctions.Concat
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Contains*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Contains
  nameWithType: EdmFunctions.Contains
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Count*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Count
  nameWithType: EdmFunctions.Count
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTime*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CreateDateTime
  nameWithType: EdmFunctions.CreateDateTime
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateDateTimeOffset*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CreateDateTimeOffset
  nameWithType: EdmFunctions.CreateDateTimeOffset
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CreateTime*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CreateTime
  nameWithType: EdmFunctions.CreateTime
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTime*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CurrentDateTime
  nameWithType: EdmFunctions.CurrentDateTime
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentDateTimeOffset*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CurrentDateTimeOffset
  nameWithType: EdmFunctions.CurrentDateTimeOffset
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.CurrentUtcDateTime*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: CurrentUtcDateTime
  nameWithType: EdmFunctions.CurrentUtcDateTime
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Day*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Day
  nameWithType: EdmFunctions.Day
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DayOfYear*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DayOfYear
  nameWithType: EdmFunctions.DayOfYear
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffDays*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffDays
  nameWithType: EdmFunctions.DiffDays
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffHours*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffHours
  nameWithType: EdmFunctions.DiffHours
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMicroseconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMicroseconds
  nameWithType: EdmFunctions.DiffMicroseconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMilliseconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMilliseconds
  nameWithType: EdmFunctions.DiffMilliseconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMinutes*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMinutes
  nameWithType: EdmFunctions.DiffMinutes
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffMonths*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffMonths
  nameWithType: EdmFunctions.DiffMonths
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffNanoseconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffNanoseconds
  nameWithType: EdmFunctions.DiffNanoseconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffSeconds*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffSeconds
  nameWithType: EdmFunctions.DiffSeconds
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.DiffYears*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: DiffYears
  nameWithType: EdmFunctions.DiffYears
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.EndsWith*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: EndsWith
  nameWithType: EdmFunctions.EndsWith
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Floor*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Floor
  nameWithType: EdmFunctions.Floor
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.GetTotalOffsetMinutes*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: GetTotalOffsetMinutes
  nameWithType: EdmFunctions.GetTotalOffsetMinutes
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Hour*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Hour
  nameWithType: EdmFunctions.Hour
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.IndexOf*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: IndexOf
  nameWithType: EdmFunctions.IndexOf
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Left*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Left
  nameWithType: EdmFunctions.Left
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Length*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Length
  nameWithType: EdmFunctions.Length
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.LongCount*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: LongCount
  nameWithType: EdmFunctions.LongCount
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Max*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Max
  nameWithType: EdmFunctions.Max
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Millisecond*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Millisecond
  nameWithType: EdmFunctions.Millisecond
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Min*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Min
  nameWithType: EdmFunctions.Min
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Minute*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Minute
  nameWithType: EdmFunctions.Minute
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Month*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Month
  nameWithType: EdmFunctions.Month
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.NewGuid*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: NewGuid
  nameWithType: EdmFunctions.NewGuid
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Power*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Power
  nameWithType: EdmFunctions.Power
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Replace*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Replace
  nameWithType: EdmFunctions.Replace
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Reverse*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Reverse
  nameWithType: EdmFunctions.Reverse
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Right*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Right
  nameWithType: EdmFunctions.Right
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Round*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Round
  nameWithType: EdmFunctions.Round
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Second*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Second
  nameWithType: EdmFunctions.Second
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StartsWith*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: StartsWith
  nameWithType: EdmFunctions.StartsWith
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDev*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: StDev
  nameWithType: EdmFunctions.StDev
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.StDevP*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: StDevP
  nameWithType: EdmFunctions.StDevP
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Substring*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Substring
  nameWithType: EdmFunctions.Substring
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Sum*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Sum
  nameWithType: EdmFunctions.Sum
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToLower*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: ToLower
  nameWithType: EdmFunctions.ToLower
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.ToUpper*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: ToUpper
  nameWithType: EdmFunctions.ToUpper
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Trim*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Trim
  nameWithType: EdmFunctions.Trim
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimEnd*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: TrimEnd
  nameWithType: EdmFunctions.TrimEnd
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TrimStart*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: TrimStart
  nameWithType: EdmFunctions.TrimStart
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Truncate*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Truncate
  nameWithType: EdmFunctions.Truncate
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.TruncateTime*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: TruncateTime
  nameWithType: EdmFunctions.TruncateTime
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Var*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Var
  nameWithType: EdmFunctions.Var
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.VarP*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: VarP
  nameWithType: EdmFunctions.VarP
- uid: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions.Year*
  parent: System.Data.Common.CommandTrees.ExpressionBuilder.EdmFunctions
  isExternal: false
  name: Year
  nameWithType: EdmFunctions.Year
