### YamlMime:ManagedReference
items:
- uid: Microsoft.Build.Execution.ProjectInstance
  id: ProjectInstance
  children:
  - Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  - Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)
  - Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  - Microsoft.Build.Execution.ProjectInstance.Build
  - Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  - Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  - Microsoft.Build.Execution.ProjectInstance.DeepCopy
  - Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)
  - Microsoft.Build.Execution.ProjectInstance.DefaultTargets
  - Microsoft.Build.Execution.ProjectInstance.Directory
  - Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)
  - Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)
  - Microsoft.Build.Execution.ProjectInstance.FullPath
  - Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)
  - Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)
  - Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)
  - Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)
  - Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)
  - Microsoft.Build.Execution.ProjectInstance.GlobalProperties
  - Microsoft.Build.Execution.ProjectInstance.InitialTargets
  - Microsoft.Build.Execution.ProjectInstance.IsImmutable
  - Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
  - Microsoft.Build.Execution.ProjectInstance.Items
  - Microsoft.Build.Execution.ProjectInstance.ItemTypes
  - Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
  - Microsoft.Build.Execution.ProjectInstance.Properties
  - Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)
  - Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)
  - Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)
  - Microsoft.Build.Execution.ProjectInstance.Targets
  - Microsoft.Build.Execution.ProjectInstance.ToolsVersion
  - Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement
  - Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)
  langs:
  - csharp
  name: ProjectInstance
  nameWithType: ProjectInstance
  fullName: Microsoft.Build.Execution.ProjectInstance
  type: Class
  summary: "Representa uma instância de projeto."
  remarks: "As instâncias dessa classe surgir quando um projeto é clonado. Construtores são internos para exigir que os usuários criem instâncias de projeto de projetos existentes.       Novas instâncias de projeto são imutáveis, exceto que os itens de instância podem ser adicionados a eles e propriedades de instância definidas neles. Instâncias do projeto são úteis porque eles podem ser modificados e criados várias vezes sem afetar o projeto original.       Essa classe nem qualquer um de seus componentes pode ter referências a <xref:Microsoft.Build.Construction>ou <xref:Microsoft.Build.Evaluation>objetos.</xref:Microsoft.Build.Evaluation> </xref:Microsoft.Build.Construction>       Destinos de instância de projeto, serviços de host e o registro de tarefas não são expostos."
  syntax:
    content: >-
      [System.Diagnostics.DebuggerDisplay("{FullPath} #Targets={TargetsCount} DefaultTargets={(DefaultTargets == null) ? System.String.Empty : System.String.Join(";", DefaultTargets.ToArray())} ToolsVersion={Toolset.ToolsVersion} InitialTargets={(InitialTargets == null) ? System.String.Empty : System.String.Join(";", InitialTargets.ToArray())} #GlobalProperties={globalProperties.Count} #Properties={properties.Count} #ItemTypes={items.ItemTypes.Count} #Items={items.Count}")]

      public class ProjectInstance
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(ProjectRootElement)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Cria uma nova instância de projeto e a inicializa na raiz do projeto especificado, usando a coleção de projeto padrão."
  remarks: "Nenhum intermediário <xref:Microsoft.Build.Evaluation.Project>objeto é criado.</xref:Microsoft.Build.Evaluation.Project> Isso é útil se um projeto a ser criado, mas não exibido ou editado."
  syntax:
    content: public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "O elemento raiz do projeto."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(String)
  nameWithType: ProjectInstance.ProjectInstance(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Cria uma nova instância de projeto e inicia a partir do arquivo de projeto especificado, usando a coleção de projeto padrão."
  remarks: "Nenhum intermediário <xref:Microsoft.Build.Evaluation.Project>objeto é criado.</xref:Microsoft.Build.Evaluation.Project> Isso é útil se um projeto a ser criado, mas não exibido ou editado."
  syntax:
    content: public ProjectInstance (string projectFile);
    parameters:
    - id: projectFile
      type: System.String
      description: "O nome do arquivo do projeto."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(String,IDictionary<String,String>,String)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Cria uma nova instância de projeto e inicia a partir do arquivo de projeto especificado, usando as propriedades globais determinadas, versão de ferramentas e a coleção de projeto padrão."
  remarks: "Nenhum intermediário <xref:Microsoft.Build.Evaluation.Project>objeto é criado.</xref:Microsoft.Build.Evaluation.Project> Isso é útil se um projeto a ser criado, mas não exibido ou editado."
  syntax:
    content: public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion);
    parameters:
    - id: projectFile
      type: System.String
      description: "O nome do arquivo do projeto."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "As propriedades globais para usar."
    - id: toolsVersion
      type: System.String
      description: "A versão das ferramentas."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Cria uma nova instância de projeto e a inicializa na raiz do projeto especificado, usando as propriedades de global determinadas, a versão das ferramentas e a coleção de projeto."
  remarks: "Nenhum intermediário <xref:Microsoft.Build.Evaluation.Project>objeto é criado.</xref:Microsoft.Build.Evaluation.Project> Isso é útil se um projeto a ser criado, mas não exibido ou editado."
  syntax:
    content: public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "O elemento raiz do projeto"
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "As propriedades globais para usar. Pode ser nulo."
    - id: toolsVersion
      type: System.String
      description: "A versão das ferramentas. Pode ser nulo."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Coleção de projetos"
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Cria uma nova instância de projeto e inicia a partir do arquivo de projeto especificado, usando as propriedades de global determinadas, a versão das ferramentas e a coleção de projeto."
  remarks: "Nenhum intermediário <xref:Microsoft.Build.Evaluation.Project>objeto é criado.</xref:Microsoft.Build.Evaluation.Project> Isso é útil se um projeto a ser criado, mas não exibido ou editado."
  syntax:
    content: public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: projectFile
      type: System.String
      description: "O nome do arquivo do projeto."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "As propriedades globais para usar. Pode ser nulo."
    - id: toolsVersion
      type: System.String
      description: "A versão das ferramentas. Pode ser nulo."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Coleção de projetos"
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Cria uma nova instância de projeto e a inicializa na raiz do projeto especificado, usando as propriedades de global determinadas, a versão das ferramentas e a coleção de projetos"
  remarks: "Nenhum intermediário <xref:Microsoft.Build.Evaluation.Project>objeto é criado.</xref:Microsoft.Build.Evaluation.Project> Isso é útil se um projeto a ser criado, mas não exibido ou editado."
  syntax:
    content: public ProjectInstance (Microsoft.Build.Construction.ProjectRootElement xml, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: xml
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "O elemento raiz do projeto."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "As propriedades globais para usar. Pode ser nulo."
    - id: toolsVersion
      type: System.String
      description: "A versão das ferramentas. Pode ser nulo."
    - id: subToolsetVersion
      type: System.String
      description: "A versão do conjunto de ferramentas sub. Pode ser nulo."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Coleção de projetos."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  id: '#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)'
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  type: Constructor
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Cria uma nova instância de projeto e inicia a partir do arquivo de projeto especificado, usando o determinado propriedades globais, versão das ferramentas, versão do conjunto de ferramentas sub e coleção de projetos."
  remarks: "Nenhum intermediário <xref:Microsoft.Build.Evaluation.Project>objeto é criado.</xref:Microsoft.Build.Evaluation.Project> Isso é útil se um projeto a ser criado, mas não exibido ou editado."
  syntax:
    content: public ProjectInstance (string projectFile, System.Collections.Generic.IDictionary<string,string> globalProperties, string toolsVersion, string subToolsetVersion, Microsoft.Build.Evaluation.ProjectCollection projectCollection);
    parameters:
    - id: projectFile
      type: System.String
      description: "O nome do arquivo do projeto."
    - id: globalProperties
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "As propriedades globais para usar. Pode ser nulo."
    - id: toolsVersion
      type: System.String
      description: "A versão das ferramentas. Pode ser nulo."
    - id: subToolsetVersion
      type: System.String
      description: "A versão do conjunto de ferramentas sub. Pode ser nulo."
    - id: projectCollection
      type: Microsoft.Build.Evaluation.ProjectCollection
      description: "Coleção de projetos."
  overload: Microsoft.Build.Execution.ProjectInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)
  id: AddItem(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: AddItem(String,String)
  nameWithType: ProjectInstance.AddItem(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.AddItem(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Adiciona um item sem metadados para o projeto."
  remarks: "Não faremos um ProjectItemInstance para certificar-se de que não temos um que já está em uso por outro ProjectInstance."
  syntax:
    content: public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude);
    parameters:
    - id: itemType
      type: System.String
      description: "O tipo de item do item a ser adicionado."
    - id: evaluatedInclude
      type: System.String
      description: "O atributo Include avaliado do item."
    return:
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "Retorna o novo item."
  overload: Microsoft.Build.Execution.ProjectInstance.AddItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  id: AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: ProjectInstance.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Execution.ProjectInstance.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Adiciona um item com os metadados especificados para o projeto."
  remarks: "Não faremos um ProjectItemInstance para certificar-se de que não temos um que já está em uso por outro ProjectInstance."
  syntax:
    content: public Microsoft.Build.Execution.ProjectItemInstance AddItem (string itemType, string evaluatedInclude, System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<string,string>> metadata);
    parameters:
    - id: itemType
      type: System.String
      description: "O tipo de item do item a ser adicionado."
    - id: evaluatedInclude
      type: System.String
      description: "O atributo Include avaliado do item."
    - id: metadata
      type: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
      description: "Os metadados do item."
    return:
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "Retorna o novo item."
  overload: Microsoft.Build.Execution.ProjectInstance.AddItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build
  id: Build
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build()
  nameWithType: ProjectInstance.Build()
  fullName: Microsoft.Build.Execution.ProjectInstance.Build()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Compila os destinos padrão do projeto com agentes de log da coleção de projetos."
  syntax:
    content: public bool Build ();
    parameters: []
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se a compilação for bem-sucedida; FALSO caso contrário."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Compila os destinos padrão do projeto com os agentes de log fornecidos."
  remarks: "Gera InvalidOperationException se qualquer um dos agentes de log fornecidos associados ao serviço de registro em log."
  syntax:
    content: public bool Build (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Agentes de log a ser usado para a compilação. Pode ser nulo."
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se a compilação for bem-sucedida; FALSO caso contrário."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Compila os destinos padrão do projeto com determinado agentes e agentes de log remotos."
  remarks: "Gera InvalidOperationException se qualquer um dos agentes de log fornecidos associados ao serviço de registro em log."
  syntax:
    content: public bool Build (System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Agentes de log a ser usado para a compilação. Pode ser nulo."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "Os agentes remotos a ser usado para a compilação. Pode ser nulo."
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se a compilação for bem-sucedida; FALSO caso contrário."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String,IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(String,IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String,IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Compilações de determinado destino do projeto com os agentes de log fornecidos."
  remarks: "Gera InvalidOperationException se qualquer um dos agentes de log fornecidos associados ao serviço de registro em log."
  syntax:
    content: public bool Build (string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: target
      type: System.String
      description: "O destino de compilação. Pode ser nulo."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Agentes de log a ser usado para a compilação. Pode ser nulo."
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se a compilação for bem-sucedida; FALSO caso contrário."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Compila os destinos do projeto de determinado com os agentes de log fornecidos."
  remarks: "Gera InvalidOperationException se qualquer um dos agentes de log fornecidos associados ao serviço de registro em log."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers);
    parameters:
    - id: targets
      type: System.String[]
      description: "Os destinos de compilação. Pode ser nulo."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Agentes de log a ser usado para a compilação. Pode ser nulo."
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se a compilação for bem-sucedida; FALSO caso contrário."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Compilações de determinado destino do projeto com determinado agentes e agentes de log remotos."
  remarks: "Gera InvalidOperationException se qualquer um dos agentes de log fornecidos associados ao serviço de registro em log."
  syntax:
    content: public bool Build (string target, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: target
      type: System.String
      description: "O destino de compilação. Pode ser nulo."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Agentes de log a ser usado para a compilação. Pode ser nulo."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "Os agentes remotos a ser usado para a compilação. Pode ser nulo."
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se a compilação for bem-sucedida; FALSO caso contrário."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Crie uma lista de destinos com agentes de log especificados. Destinos podem ser nulos. Agentes de log podem ser nulos."
  remarks: "Se qualquer um dos agentes de log fornecidos associados para o serviço de log que foram passados, gera InvalidOperationException."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, out System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.TargetResult> targetOutputs);
    parameters:
    - id: targets
      type: System.String[]
      description: "Lista de destinos da compilação. Pode ser nulo."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Lista enumerada de agentes de log a ser usado para a criação de destinos."
    - id: targetOutputs
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}
      description: "Saídas de compilações de destino."
    return:
      type: System.Boolean
      description: "Retorna true se bem-sucedido, false em caso de falha."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Compila os destinos determinados do projeto com determinado agentes e agentes de log remotos."
  remarks: "Gera InvalidOperationException se qualquer um dos agentes de log fornecidos associados ao serviço de registro em log."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers);
    parameters:
    - id: targets
      type: System.String[]
      description: "Os destinos de compilação. Pode ser nulo."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Agentes de log a ser usado para a compilação. Pode ser nulo."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "Os agentes remotos a ser usado para a compilação. Pode ser nulo."
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se a compilação for bem-sucedida; FALSO caso contrário."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  id: Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Compila os destinos fornecidos com as saídas de determinado destino e agentes determinados e agentes de log remotos."
  remarks: "Gera InvalidOperationException se qualquer um dos agentes de log fornecidos associados ao serviço de registro em log."
  syntax:
    content: public bool Build (string[] targets, System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger> loggers, System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord> remoteLoggers, out System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.TargetResult> targetOutputs);
    parameters:
    - id: targets
      type: System.String[]
      description: "Os destinos de compilação. Pode ser nulo."
    - id: loggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
      description: "Agentes de log a ser usado para a compilação. Pode ser nulo."
    - id: remoteLoggers
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
      description: "Os agentes remotos a ser usado para a compilação. Pode ser nulo."
    - id: targetOutputs
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}
      description: "As saídas de destino."
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se a compilação for bem-sucedida; FALSO caso contrário."
  overload: Microsoft.Build.Execution.ProjectInstance.Build*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy
  id: DeepCopy
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: DeepCopy()
  nameWithType: ProjectInstance.DeepCopy()
  fullName: Microsoft.Build.Execution.ProjectInstance.DeepCopy()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Cria um clone profundo, independente do projeto e tudo nele. Clone tem a mesmo Mutabilidade do original. Útil para compilar um único arquivo ou para manter os resultados de compilação entre as compilações."
  syntax:
    content: public Microsoft.Build.Execution.ProjectInstance DeepCopy ();
    parameters: []
    return:
      type: Microsoft.Build.Execution.ProjectInstance
      description: "Cria um clone profundo, independente do projeto."
  overload: Microsoft.Build.Execution.ProjectInstance.DeepCopy*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)
  id: DeepCopy(System.Boolean)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: DeepCopy(Boolean)
  nameWithType: ProjectInstance.DeepCopy(Boolean)
  fullName: Microsoft.Build.Execution.ProjectInstance.DeepCopy(Boolean)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Cria um clone profundo, independente do projeto e tudo o que, com Mutabilidade especificada. Útil para compilar um único arquivo ou para manter os resultados de compilação entre as compilações."
  syntax:
    content: public Microsoft.Build.Execution.ProjectInstance DeepCopy (bool isImmutable);
    parameters:
    - id: isImmutable
      type: System.Boolean
      description: "Sinalizador indicando Mutabilidade do clone."
    return:
      type: Microsoft.Build.Execution.ProjectInstance
      description: "Retorna um clone profundo, independente do projeto, com Mutabilidade especificada."
  overload: Microsoft.Build.Execution.ProjectInstance.DeepCopy*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.DefaultTargets
  id: DefaultTargets
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: DefaultTargets
  nameWithType: ProjectInstance.DefaultTargets
  fullName: Microsoft.Build.Execution.ProjectInstance.DefaultTargets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém ou define a lista de destinos padrão para este projeto."
  remarks: "Destinos padrão são compilados se nenhum destino for especificado explicitamente."
  syntax:
    content: public System.Collections.Generic.List<string> DefaultTargets { get; }
    return:
      type: System.Collections.Generic.List{System.String}
      description: "Retorna a lista de destinos padrão para este projeto."
  overload: Microsoft.Build.Execution.ProjectInstance.DefaultTargets*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Directory
  id: Directory
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Directory
  nameWithType: ProjectInstance.Directory
  fullName: Microsoft.Build.Execution.ProjectInstance.Directory
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: 'Obtém o diretório raiz do projeto. Usado para avaliação de caminhos relativos e definir o diretório atual durante a compilação. Nunca é nulo: projetos não são carregados do disco usam o diretório atual do momento em que a compilação iniciada.'
  syntax:
    content: public string Directory { get; }
    return:
      type: System.String
      description: "Retorna o diretório raiz do projeto, que nunca é nulo. Projetos não são carregados do disco retornam o diretório atual no momento em que a compilação foi iniciada."
  overload: Microsoft.Build.Execution.ProjectInstance.Directory*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)
  id: EvaluateCondition(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: EvaluateCondition(String)
  nameWithType: ProjectInstance.EvaluateCondition(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Avalia a cadeia de caracteres fornecida como uma condição expandindo itens e propriedades, usando os itens atuais e as propriedades disponíveis, em seguida, fazer uma avaliação lógica."
  remarks: "Isso é útil para a janela imediata.       Não se expandir expressões de metadados vazio."
  syntax:
    content: public bool EvaluateCondition (string condition);
    parameters:
    - id: condition
      type: System.String
      description: "A cadeia de caracteres a ser expandido."
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se a cadeia de caracteres for avaliada como true; FALSO caso contrário."
  overload: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)
  id: ExpandString(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ExpandString(String)
  nameWithType: ProjectInstance.ExpandString(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ExpandString(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Avalia a cadeia de caracteres fornecida pelo Expandir itens e propriedades, usando os itens atuais e propriedades disponíveis."
  remarks: "Isso é útil para alguns dos hosts ou para a janela imediata do depurador.       Não se expandir expressões de metadados vazio."
  syntax:
    content: public string ExpandString (string unexpandedValue);
    parameters:
    - id: unexpandedValue
      type: System.String
      description: "A cadeia de caracteres a ser expandido."
    return:
      type: System.String
      description: "Retorna o valor de cadeia de caracteres expandida."
  overload: Microsoft.Build.Execution.ProjectInstance.ExpandString*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.FullPath
  id: FullPath
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: FullPath
  nameWithType: ProjectInstance.FullPath
  fullName: Microsoft.Build.Execution.ProjectInstance.FullPath
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém o caminho completo para o arquivo de projeto. Usado para fazer logon."
  syntax:
    content: public string FullPath { get; }
    return:
      type: System.String
      description: "Retorna o caminho completo para o arquivo de projeto. Retorna null se o projeto nunca foi chamado."
  overload: Microsoft.Build.Execution.ProjectInstance.FullPath*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)
  id: GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém o valor avaliado, com caracteres de escape do atributo de inclusão da definição do item fornecido."
  syntax:
    content: public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemDefinitionInstance
      description: "A definição do item a ser avaliada e escape."
    return:
      type: System.String
      description: "Retorna avaliada, o valor do atributo de inclusão da definição do item fornecido escape."
  overload: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)
  id: GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém o valor avaliado, com caracteres de escape do atributo de inclusão do item fornecido."
  syntax:
    content: public static string GetEvaluatedItemIncludeEscaped (Microsoft.Build.Execution.ProjectItemInstance item);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "O item a ser avaliada e escape."
    return:
      type: System.String
      description: "Retorna avaliada, o valor do atributo de inclusão do item fornecido escape."
  overload: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)
  id: GetItems(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetItems(String)
  nameWithType: ProjectInstance.GetItems(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetItems(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém todos os itens no projeto do tipo especificado. Esta é uma lista somente leitura."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance> GetItems (string itemType);
    parameters:
    - id: itemType
      type: System.String
      description: "O tipo de item de itens a serem recuperados."
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance}
      description: "Retorna todos os itens no projeto do tipo especificado. Retorna uma lista vazia se não houver nenhum."
  overload: Microsoft.Build.Execution.ProjectInstance.GetItems*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)
  id: GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetItemsByItemTypeAndEvaluatedInclude(String,String)
  nameWithType: ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém todos os itens no projeto do tipo especificado e avaliadas incluir valor. Esta é uma lista somente leitura."
  syntax:
    content: public System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.ProjectItemInstance> GetItemsByItemTypeAndEvaluatedInclude (string itemType, string evaluatedInclude);
    parameters:
    - id: itemType
      type: System.String
      description: "O tipo de item de itens a serem recuperados."
    - id: evaluatedInclude
      type: System.String
      description: "O valor avaliado incluir os itens a serem recuperados"
    return:
      type: System.Collections.Generic.IEnumerable{Microsoft.Build.Execution.ProjectItemInstance}
      description: "Retorna todos os itens no projeto do tipo especificado e avaliadas incluir valor. Retorna uma coleção vazia se não houver nenhum."
  overload: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)
  id: GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectMetadataInstance)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectMetadataInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectMetadataInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém o valor de escape do metadatum fornecido."
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectMetadataInstance metadatum);
    parameters:
    - id: metadatum
      type: Microsoft.Build.Execution.ProjectMetadataInstance
      description: "Metadatum de escape."
    return:
      type: System.String
      description: "Retorna o valor de escape do metadatum fornecido."
  overload: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)
  id: GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém o valor de escape do metadatum com o nome fornecido da definição do item fornecido."
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemDefinitionInstance item, string name);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemDefinitionInstance
      description: "A definição de item para fornecer o valor de metadatum."
    - id: name
      type: System.String
      description: "O nome do metadatum."
    return:
      type: System.String
      description: "Retorna o valor de escape do metadatum com o nome fornecido da definição do item fornecido."
  overload: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)
  id: GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetMetadataValueEscaped(ProjectItemInstance,String)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectItemInstance,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectItemInstance,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém o valor de escape de metadatum com o nome fornecido no item fornecido."
  syntax:
    content: public static string GetMetadataValueEscaped (Microsoft.Build.Execution.ProjectItemInstance item, string name);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "O item para fornecer o valor de metadatum."
    - id: name
      type: System.String
      description: "O nome do metadatum."
    return:
      type: System.String
      description: "Retorna o valor de escape de metadatum com o nome fornecido no item fornecido."
  overload: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)
  id: GetProperty(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetProperty(String)
  nameWithType: ProjectInstance.GetProperty(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetProperty(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém a propriedade com o nome fornecido."
  syntax:
    content: public Microsoft.Build.Execution.ProjectPropertyInstance GetProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da propriedade a recuperar."
    return:
      type: Microsoft.Build.Execution.ProjectPropertyInstance
      description: "Retorna a propriedade com o nome fornecido. Retorna nulo se não existe nenhuma propriedade com este nome."
  overload: Microsoft.Build.Execution.ProjectInstance.GetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)
  id: GetPropertyValue(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetPropertyValue(String)
  nameWithType: ProjectInstance.GetPropertyValue(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obter o valor da propriedade com o nome fornecido."
  remarks: "Esse método não faz distinção entre uma propriedade com um valor de cadeia de caracteres vazia e nenhuma propriedade com o nome fornecido."
  syntax:
    content: public string GetPropertyValue (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da propriedade cujo valor é a ser recuperado."
    return:
      type: System.String
      description: "Retorna o valor da propriedade com o nome fornecido. Retorna uma cadeia de caracteres vazia não se existir nenhuma propriedade com esse nome. O valor retornado não tem nenhuma sequência de escape de caractere."
  overload: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)
  id: GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GetPropertyValueEscaped(ProjectPropertyInstance)
  nameWithType: ProjectInstance.GetPropertyValueEscaped(ProjectPropertyInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(ProjectPropertyInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obter o valor de escape da propriedade fornecido."
  syntax:
    content: public static string GetPropertyValueEscaped (Microsoft.Build.Execution.ProjectPropertyInstance property);
    parameters:
    - id: property
      type: Microsoft.Build.Execution.ProjectPropertyInstance
      description: "A propriedade de escape."
    return:
      type: System.String
      description: "Retorna o valor de escape da propriedade fornecido."
  overload: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.GlobalProperties
  id: GlobalProperties
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: GlobalProperties
  nameWithType: ProjectInstance.GlobalProperties
  fullName: Microsoft.Build.Execution.ProjectInstance.GlobalProperties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém o dicionário de propriedades globais que este projeto foi avaliado, se houver."
  remarks: "Read only collection.  \n  \n Traverses project references.  \n  \n This is the publicly exposed getter, that translates into a read-only dead IDictionary\\<string, string>."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,string> GlobalProperties { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,System.String}
      description: "Retorna o dicionário de propriedades globais com que este projeto foi avaliado."
  overload: Microsoft.Build.Execution.ProjectInstance.GlobalProperties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.InitialTargets
  id: InitialTargets
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: InitialTargets
  nameWithType: ProjectInstance.InitialTargets
  fullName: Microsoft.Build.Execution.ProjectInstance.InitialTargets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém a lista de destinos inicias para o projeto e suas importações, profundidade. Esses destinos são criados antes de quaisquer outros destinos."
  syntax:
    content: public System.Collections.Generic.List<string> InitialTargets { get; }
    return:
      type: System.Collections.Generic.List{System.String}
      description: "Retorna a lista de destinos inicias para o projeto e todas as suas importações, profundidade."
  overload: Microsoft.Build.Execution.ProjectInstance.InitialTargets*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.IsImmutable
  id: IsImmutable
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: IsImmutable
  nameWithType: ProjectInstance.IsImmutable
  fullName: Microsoft.Build.Execution.ProjectInstance.IsImmutable
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém um sinalizador que indica que a instância de projeto é imutável. Este sinalizador é definido permanentemente quando a instância é criada."
  syntax:
    content: public bool IsImmutable { get; }
    return:
      type: System.Boolean
      description: "Retorna o sinalizador."
  overload: Microsoft.Build.Execution.ProjectInstance.IsImmutable*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
  id: ItemDefinitions
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ItemDefinitions
  nameWithType: ProjectInstance.ItemDefinitions
  fullName: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém um dicionário somente leitura das definições de item do projeto, chaveado segundo o tipo de item."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.ProjectItemDefinitionInstance> ItemDefinitions { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance}
      description: "Retorna um dicionário somente leitura das definições de item no projeto, chaveado segundo o tipo de item."
  overload: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Items
  id: Items
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Items
  nameWithType: ProjectInstance.Items
  fullName: Microsoft.Build.Execution.ProjectInstance.Items
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém todos os itens neste projeto."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance> Items { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance}
      description: "Retorna todos os itens neste projeto."
  overload: Microsoft.Build.Execution.ProjectInstance.Items*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ItemTypes
  id: ItemTypes
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ItemTypes
  nameWithType: ProjectInstance.ItemTypes
  fullName: Microsoft.Build.Execution.ProjectInstance.ItemTypes
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém todos os tipos de item neste projeto."
  syntax:
    content: public System.Collections.Generic.ICollection<string> ItemTypes { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Retorna todos os tipos de item neste projeto."
  overload: Microsoft.Build.Execution.ProjectInstance.ItemTypes*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
  id: ProjectFileLocation
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ProjectFileLocation
  nameWithType: ProjectInstance.ProjectFileLocation
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém o local do arquivo de origem em si. Nunca null."
  syntax:
    content: public Microsoft.Build.Construction.ElementLocation ProjectFileLocation { get; }
    return:
      type: Microsoft.Build.Construction.ElementLocation
      description: "Retorna o local do arquivo de origem. Nunca retorna null."
  overload: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Properties
  id: Properties
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Properties
  nameWithType: ProjectInstance.Properties
  fullName: Microsoft.Build.Execution.ProjectInstance.Properties
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém todas as propriedades neste projeto."
  syntax:
    content: public System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectPropertyInstance> Properties { get; }
    return:
      type: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectPropertyInstance}
      description: "Retorna todas as propriedades neste projeto."
  overload: Microsoft.Build.Execution.ProjectInstance.Properties*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)
  id: RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: RemoveItem(ProjectItemInstance)
  nameWithType: ProjectInstance.RemoveItem(ProjectItemInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.RemoveItem(ProjectItemInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Remove um item do projeto, se presente. Retorna VERDADEIRO se ele estiver presente, false caso contrário."
  syntax:
    content: public bool RemoveItem (Microsoft.Build.Execution.ProjectItemInstance item);
    parameters:
    - id: item
      type: Microsoft.Build.Execution.ProjectItemInstance
      description: "O item a ser removido."
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se o item foi antes da remoção; FALSO caso contrário."
  overload: Microsoft.Build.Execution.ProjectInstance.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)
  id: RemoveProperty(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: RemoveProperty(String)
  nameWithType: ProjectInstance.RemoveProperty(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.RemoveProperty(String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Remove uma propriedade com o nome fornecido. Retorna VERDADEIRO se a propriedade tiver um valor (cadeia de caracteres possivelmente vazia), caso contrário, false."
  syntax:
    content: public bool RemoveProperty (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome da propriedade a ser removido."
    return:
      type: System.Boolean
      description: "Retorna VERDADEIRO se a propriedade tiver um valor (possivelmente uma cadeia de caracteres vazia) antes da remoção; FALSO caso contrário."
  overload: Microsoft.Build.Execution.ProjectInstance.RemoveProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)
  id: SetProperty(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: SetProperty(String,String)
  nameWithType: ProjectInstance.SetProperty(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.SetProperty(String,String)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Adicione uma propriedade com o nome especificado e o valor para o projeto. Substitui qualquer propriedade com o mesmo nome já está na coleção de propriedades."
  remarks: "Não faremos um ProjectPropertyInstance para certificar-se de que não temos um que já está em uso por outro ProjectPropertyInstance."
  syntax:
    content: public Microsoft.Build.Execution.ProjectPropertyInstance SetProperty (string name, string evaluatedValue);
    parameters:
    - id: name
      type: System.String
      description: "O nome da propriedade a adicionar."
    - id: evaluatedValue
      type: System.String
      description: "Valor avaliado da propriedade a adicionar."
    return:
      type: Microsoft.Build.Execution.ProjectPropertyInstance
      description: "Retorna a nova propriedade."
  overload: Microsoft.Build.Execution.ProjectInstance.SetProperty*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.Targets
  id: Targets
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: Targets
  nameWithType: ProjectInstance.Targets
  fullName: Microsoft.Build.Execution.ProjectInstance.Targets
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém um enumerador sobre todos os destinos neste projeto. Esta coleção é somente leitura."
  syntax:
    content: public System.Collections.Generic.IDictionary<string,Microsoft.Build.Execution.ProjectTargetInstance> Targets { get; }
    return:
      type: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectTargetInstance}
      description: "Retorna um enumerador sobre todos os destinos neste projeto."
  overload: Microsoft.Build.Execution.ProjectInstance.Targets*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ToolsVersion
  id: ToolsVersion
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ToolsVersion
  nameWithType: ProjectInstance.ToolsVersion
  fullName: Microsoft.Build.Execution.ProjectInstance.ToolsVersion
  type: Property
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Obtém a versão das ferramentas que este projeto foi avaliado, se houver."
  remarks: "O resultado não é necessariamente o mesmo que a versão das ferramentas na marca do projeto, se houver; ele pode ter foi externamente especificado, por exemplo com um comutador /tv."
  syntax:
    content: public string ToolsVersion { get; }
    return:
      type: System.String
      description: "Retorna a versão das ferramentas que este projeto foi avaliado, se houver."
  overload: Microsoft.Build.Execution.ProjectInstance.ToolsVersion*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement
  id: ToProjectRootElement
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: ToProjectRootElement()
  nameWithType: ProjectInstance.ToProjectRootElement()
  fullName: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement()
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Cria um ProjectRootElement do conteúdo deste ProjectInstance."
  syntax:
    content: public Microsoft.Build.Construction.ProjectRootElement ToProjectRootElement ();
    parameters: []
    return:
      type: Microsoft.Build.Construction.ProjectRootElement
      description: "Retorna um ProjectRootElement que representa esta instância."
  overload: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement*
  exceptions: []
  platform:
  - net462
- uid: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)
  id: UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  langs:
  - csharp
  name: UpdateStateFrom(ProjectInstance)
  nameWithType: ProjectInstance.UpdateStateFrom(ProjectInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(ProjectInstance)
  type: Method
  assemblies:
  - Microsoft.Build
  namespace: Microsoft.Build.Execution
  summary: "Substitui o estado do projeto <> </> *>, <> </> *> e <xref:Microsoft.Build.Execution.ProjectInstance.Items*>com aqueles especificado <xref href=&quot;Microsoft.Build.Execution.ProjectInstance&quot;> </xref>.</xref:Microsoft.Build.Execution.ProjectInstance.Items*>"
  syntax:
    content: public void UpdateStateFrom (Microsoft.Build.Execution.ProjectInstance projectState);
    parameters:
    - id: projectState
      type: Microsoft.Build.Execution.ProjectInstance
      description: "O <xref uid=&quot;langword_csharp_ProjectInstance&quot; name=&quot;ProjectInstance&quot; href=&quot;&quot;> </xref> para atualizar a partir do."
  overload: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(ProjectRootElement)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement)
- uid: Microsoft.Build.Construction.ProjectRootElement
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ProjectRootElement
  nameWithType: ProjectRootElement
  fullName: Microsoft.Build.Construction.ProjectRootElement
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(String)
  nameWithType: ProjectInstance.ProjectInstance(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(String,IDictionary<String,String>,String)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String)
- uid: System.Collections.Generic.IDictionary{System.String,System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,String>
  nameWithType: IDictionary<String,String>
  fullName: System.Collections.Generic.IDictionary<System.String,System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Evaluation.ProjectCollection
  parent: Microsoft.Build.Evaluation
  isExternal: false
  name: ProjectCollection
  nameWithType: ProjectCollection
  fullName: Microsoft.Build.Evaluation.ProjectCollection
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,ProjectCollection)
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(Microsoft.Build.Construction.ProjectRootElement,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(ProjectRootElement,IDictionary<String,String>,String,String,ProjectCollection)
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor(System.String,System.Collections.Generic.IDictionary{System.String,System.String},System.String,System.String,Microsoft.Build.Evaluation.ProjectCollection)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  nameWithType: ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectInstance(String,IDictionary<String,String>,String,String,ProjectCollection)
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: AddItem(String,String)
  nameWithType: ProjectInstance.AddItem(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.AddItem(String,String)
- uid: Microsoft.Build.Execution.ProjectItemInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectItemInstance
  nameWithType: ProjectItemInstance
  fullName: Microsoft.Build.Execution.ProjectItemInstance
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem(System.String,System.String,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  nameWithType: ProjectInstance.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
  fullName: Microsoft.Build.Execution.ProjectInstance.AddItem(String,String,IEnumerable<KeyValuePair<String,String>>)
- uid: System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{System.String,System.String}}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<KeyValuePair<String,String>>
  nameWithType: IEnumerable<KeyValuePair<String,String>>
  fullName: System.Collections.Generic.IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.Collections.Generic.KeyValuePair<System.String,System.String>>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Collections.Generic.KeyValuePair`2
    name: KeyValuePair
    nameWithType: KeyValuePair
    fullName: KeyValuePair<System.String,System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Build
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build()
  nameWithType: ProjectInstance.Build()
  fullName: Microsoft.Build.Execution.ProjectInstance.Build()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(IEnumerable<ILogger>)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ILogger>
  nameWithType: IEnumerable<ILogger>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Framework.ILogger>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Framework.ILogger>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Framework.ILogger
    name: ILogger
    nameWithType: ILogger
    fullName: ILogger
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ForwardingLoggerRecord>
  nameWithType: IEnumerable<ForwardingLoggerRecord>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Logging.ForwardingLoggerRecord>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Logging.ForwardingLoggerRecord
    name: ForwardingLoggerRecord
    nameWithType: ForwardingLoggerRecord
    fullName: ForwardingLoggerRecord
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String,IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(String,IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String,IEnumerable<ILogger>)
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>)
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String,System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String,IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IDictionary<String,TargetResult>)
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,TargetResult>
  nameWithType: IDictionary<String,TargetResult>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.TargetResult>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Execution.TargetResult>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Execution.TargetResult
    name: TargetResult
    nameWithType: TargetResult
    fullName: TargetResult
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord})
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>)
- uid: Microsoft.Build.Execution.ProjectInstance.Build(System.String[],System.Collections.Generic.IEnumerable{Microsoft.Build.Framework.ILogger},System.Collections.Generic.IEnumerable{Microsoft.Build.Logging.ForwardingLoggerRecord},System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.TargetResult}@)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  nameWithType: ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
  fullName: Microsoft.Build.Execution.ProjectInstance.Build(String[],IEnumerable<ILogger>,IEnumerable<ForwardingLoggerRecord>,IDictionary<String,TargetResult>)
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DeepCopy()
  nameWithType: ProjectInstance.DeepCopy()
  fullName: Microsoft.Build.Execution.ProjectInstance.DeepCopy()
- uid: Microsoft.Build.Execution.ProjectInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectInstance
  nameWithType: ProjectInstance
  fullName: Microsoft.Build.Execution.ProjectInstance
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy(System.Boolean)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DeepCopy(Boolean)
  nameWithType: ProjectInstance.DeepCopy(Boolean)
  fullName: Microsoft.Build.Execution.ProjectInstance.DeepCopy(Boolean)
- uid: Microsoft.Build.Execution.ProjectInstance.DefaultTargets
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DefaultTargets
  nameWithType: ProjectInstance.DefaultTargets
  fullName: Microsoft.Build.Execution.ProjectInstance.DefaultTargets
- uid: System.Collections.Generic.List{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: List<String>
  nameWithType: List<String>
  fullName: System.Collections.Generic.List<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Directory
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Directory
  nameWithType: ProjectInstance.Directory
  fullName: Microsoft.Build.Execution.ProjectInstance.Directory
- uid: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: EvaluateCondition(String)
  nameWithType: ProjectInstance.EvaluateCondition(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition(String)
- uid: Microsoft.Build.Execution.ProjectInstance.ExpandString(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ExpandString(String)
  nameWithType: ProjectInstance.ExpandString(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.ExpandString(String)
- uid: Microsoft.Build.Execution.ProjectInstance.FullPath
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: FullPath
  nameWithType: ProjectInstance.FullPath
  fullName: Microsoft.Build.Execution.ProjectInstance.FullPath
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemDefinitionInstance)
- uid: Microsoft.Build.Execution.ProjectItemDefinitionInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectItemDefinitionInstance
  nameWithType: ProjectItemDefinitionInstance
  fullName: Microsoft.Build.Execution.ProjectItemDefinitionInstance
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(Microsoft.Build.Execution.ProjectItemInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped(ProjectItemInstance)
- uid: Microsoft.Build.Execution.ProjectInstance.GetItems(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetItems(String)
  nameWithType: ProjectInstance.GetItems(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetItems(String)
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectItemInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectItemInstance>
  nameWithType: ICollection<ProjectItemInstance>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectItemInstance>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Execution.ProjectItemInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectItemInstance
    name: ProjectItemInstance
    nameWithType: ProjectItemInstance
    fullName: ProjectItemInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetItemsByItemTypeAndEvaluatedInclude(String,String)
  nameWithType: ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude(String,String)
- uid: System.Collections.Generic.IEnumerable{Microsoft.Build.Execution.ProjectItemInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<ProjectItemInstance>
  nameWithType: IEnumerable<ProjectItemInstance>
  fullName: System.Collections.Generic.IEnumerable<Microsoft.Build.Execution.ProjectItemInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<Microsoft.Build.Execution.ProjectItemInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectItemInstance
    name: ProjectItemInstance
    nameWithType: ProjectItemInstance
    fullName: ProjectItemInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectMetadataInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetMetadataValueEscaped(ProjectMetadataInstance)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectMetadataInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectMetadataInstance)
- uid: Microsoft.Build.Execution.ProjectMetadataInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectMetadataInstance
  nameWithType: ProjectMetadataInstance
  fullName: Microsoft.Build.Execution.ProjectMetadataInstance
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemDefinitionInstance,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectItemDefinitionInstance,String)
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(Microsoft.Build.Execution.ProjectItemInstance,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetMetadataValueEscaped(ProjectItemInstance,String)
  nameWithType: ProjectInstance.GetMetadataValueEscaped(ProjectItemInstance,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped(ProjectItemInstance,String)
- uid: Microsoft.Build.Execution.ProjectInstance.GetProperty(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetProperty(String)
  nameWithType: ProjectInstance.GetProperty(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetProperty(String)
- uid: Microsoft.Build.Execution.ProjectPropertyInstance
  parent: Microsoft.Build.Execution
  isExternal: false
  name: ProjectPropertyInstance
  nameWithType: ProjectPropertyInstance
  fullName: Microsoft.Build.Execution.ProjectPropertyInstance
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetPropertyValue(String)
  nameWithType: ProjectInstance.GetPropertyValue(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue(String)
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(Microsoft.Build.Execution.ProjectPropertyInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetPropertyValueEscaped(ProjectPropertyInstance)
  nameWithType: ProjectInstance.GetPropertyValueEscaped(ProjectPropertyInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped(ProjectPropertyInstance)
- uid: Microsoft.Build.Execution.ProjectInstance.GlobalProperties
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GlobalProperties
  nameWithType: ProjectInstance.GlobalProperties
  fullName: Microsoft.Build.Execution.ProjectInstance.GlobalProperties
- uid: Microsoft.Build.Execution.ProjectInstance.InitialTargets
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: InitialTargets
  nameWithType: ProjectInstance.InitialTargets
  fullName: Microsoft.Build.Execution.ProjectInstance.InitialTargets
- uid: Microsoft.Build.Execution.ProjectInstance.IsImmutable
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: IsImmutable
  nameWithType: ProjectInstance.IsImmutable
  fullName: Microsoft.Build.Execution.ProjectInstance.IsImmutable
- uid: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ItemDefinitions
  nameWithType: ProjectInstance.ItemDefinitions
  fullName: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ProjectItemDefinitionInstance>
  nameWithType: IDictionary<String,ProjectItemDefinitionInstance>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Execution.ProjectItemDefinitionInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Execution.ProjectItemDefinitionInstance
    name: ProjectItemDefinitionInstance
    nameWithType: ProjectItemDefinitionInstance
    fullName: ProjectItemDefinitionInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.Items
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Items
  nameWithType: ProjectInstance.Items
  fullName: Microsoft.Build.Execution.ProjectInstance.Items
- uid: Microsoft.Build.Execution.ProjectInstance.ItemTypes
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ItemTypes
  nameWithType: ProjectInstance.ItemTypes
  fullName: Microsoft.Build.Execution.ProjectInstance.ItemTypes
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectFileLocation
  nameWithType: ProjectInstance.ProjectFileLocation
  fullName: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation
- uid: Microsoft.Build.Construction.ElementLocation
  parent: Microsoft.Build.Construction
  isExternal: false
  name: ElementLocation
  nameWithType: ElementLocation
  fullName: Microsoft.Build.Construction.ElementLocation
- uid: Microsoft.Build.Execution.ProjectInstance.Properties
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Properties
  nameWithType: ProjectInstance.Properties
  fullName: Microsoft.Build.Execution.ProjectInstance.Properties
- uid: System.Collections.Generic.ICollection{Microsoft.Build.Execution.ProjectPropertyInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<ProjectPropertyInstance>
  nameWithType: ICollection<ProjectPropertyInstance>
  fullName: System.Collections.Generic.ICollection<Microsoft.Build.Execution.ProjectPropertyInstance>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<Microsoft.Build.Execution.ProjectPropertyInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: Microsoft.Build.Execution.ProjectPropertyInstance
    name: ProjectPropertyInstance
    nameWithType: ProjectPropertyInstance
    fullName: ProjectPropertyInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveItem(Microsoft.Build.Execution.ProjectItemInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: RemoveItem(ProjectItemInstance)
  nameWithType: ProjectInstance.RemoveItem(ProjectItemInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.RemoveItem(ProjectItemInstance)
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveProperty(System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: RemoveProperty(String)
  nameWithType: ProjectInstance.RemoveProperty(String)
  fullName: Microsoft.Build.Execution.ProjectInstance.RemoveProperty(String)
- uid: Microsoft.Build.Execution.ProjectInstance.SetProperty(System.String,System.String)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: SetProperty(String,String)
  nameWithType: ProjectInstance.SetProperty(String,String)
  fullName: Microsoft.Build.Execution.ProjectInstance.SetProperty(String,String)
- uid: Microsoft.Build.Execution.ProjectInstance.Targets
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Targets
  nameWithType: ProjectInstance.Targets
  fullName: Microsoft.Build.Execution.ProjectInstance.Targets
- uid: System.Collections.Generic.IDictionary{System.String,Microsoft.Build.Execution.ProjectTargetInstance}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,ProjectTargetInstance>
  nameWithType: IDictionary<String,ProjectTargetInstance>
  fullName: System.Collections.Generic.IDictionary<System.String,Microsoft.Build.Execution.ProjectTargetInstance>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,Microsoft.Build.Execution.ProjectTargetInstance>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: Microsoft.Build.Execution.ProjectTargetInstance
    name: ProjectTargetInstance
    nameWithType: ProjectTargetInstance
    fullName: ProjectTargetInstance
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: Microsoft.Build.Execution.ProjectInstance.ToolsVersion
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ToolsVersion
  nameWithType: ProjectInstance.ToolsVersion
  fullName: Microsoft.Build.Execution.ProjectInstance.ToolsVersion
- uid: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ToProjectRootElement()
  nameWithType: ProjectInstance.ToProjectRootElement()
  fullName: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement()
- uid: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(Microsoft.Build.Execution.ProjectInstance)
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: UpdateStateFrom(ProjectInstance)
  nameWithType: ProjectInstance.UpdateStateFrom(ProjectInstance)
  fullName: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom(ProjectInstance)
- uid: Microsoft.Build.Execution.ProjectInstance.#ctor*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectInstance
  nameWithType: ProjectInstance.ProjectInstance
- uid: Microsoft.Build.Execution.ProjectInstance.AddItem*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: AddItem
  nameWithType: ProjectInstance.AddItem
- uid: Microsoft.Build.Execution.ProjectInstance.Build*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Build
  nameWithType: ProjectInstance.Build
- uid: Microsoft.Build.Execution.ProjectInstance.DeepCopy*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DeepCopy
  nameWithType: ProjectInstance.DeepCopy
- uid: Microsoft.Build.Execution.ProjectInstance.DefaultTargets*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: DefaultTargets
  nameWithType: ProjectInstance.DefaultTargets
- uid: Microsoft.Build.Execution.ProjectInstance.Directory*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Directory
  nameWithType: ProjectInstance.Directory
- uid: Microsoft.Build.Execution.ProjectInstance.EvaluateCondition*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: EvaluateCondition
  nameWithType: ProjectInstance.EvaluateCondition
- uid: Microsoft.Build.Execution.ProjectInstance.ExpandString*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ExpandString
  nameWithType: ProjectInstance.ExpandString
- uid: Microsoft.Build.Execution.ProjectInstance.FullPath*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: FullPath
  nameWithType: ProjectInstance.FullPath
- uid: Microsoft.Build.Execution.ProjectInstance.GetEvaluatedItemIncludeEscaped*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetEvaluatedItemIncludeEscaped
  nameWithType: ProjectInstance.GetEvaluatedItemIncludeEscaped
- uid: Microsoft.Build.Execution.ProjectInstance.GetItems*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetItems
  nameWithType: ProjectInstance.GetItems
- uid: Microsoft.Build.Execution.ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetItemsByItemTypeAndEvaluatedInclude
  nameWithType: ProjectInstance.GetItemsByItemTypeAndEvaluatedInclude
- uid: Microsoft.Build.Execution.ProjectInstance.GetMetadataValueEscaped*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetMetadataValueEscaped
  nameWithType: ProjectInstance.GetMetadataValueEscaped
- uid: Microsoft.Build.Execution.ProjectInstance.GetProperty*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetProperty
  nameWithType: ProjectInstance.GetProperty
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValue*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetPropertyValue
  nameWithType: ProjectInstance.GetPropertyValue
- uid: Microsoft.Build.Execution.ProjectInstance.GetPropertyValueEscaped*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GetPropertyValueEscaped
  nameWithType: ProjectInstance.GetPropertyValueEscaped
- uid: Microsoft.Build.Execution.ProjectInstance.GlobalProperties*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: GlobalProperties
  nameWithType: ProjectInstance.GlobalProperties
- uid: Microsoft.Build.Execution.ProjectInstance.InitialTargets*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: InitialTargets
  nameWithType: ProjectInstance.InitialTargets
- uid: Microsoft.Build.Execution.ProjectInstance.IsImmutable*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: IsImmutable
  nameWithType: ProjectInstance.IsImmutable
- uid: Microsoft.Build.Execution.ProjectInstance.ItemDefinitions*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ItemDefinitions
  nameWithType: ProjectInstance.ItemDefinitions
- uid: Microsoft.Build.Execution.ProjectInstance.Items*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Items
  nameWithType: ProjectInstance.Items
- uid: Microsoft.Build.Execution.ProjectInstance.ItemTypes*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ItemTypes
  nameWithType: ProjectInstance.ItemTypes
- uid: Microsoft.Build.Execution.ProjectInstance.ProjectFileLocation*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ProjectFileLocation
  nameWithType: ProjectInstance.ProjectFileLocation
- uid: Microsoft.Build.Execution.ProjectInstance.Properties*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Properties
  nameWithType: ProjectInstance.Properties
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveItem*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: RemoveItem
  nameWithType: ProjectInstance.RemoveItem
- uid: Microsoft.Build.Execution.ProjectInstance.RemoveProperty*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: RemoveProperty
  nameWithType: ProjectInstance.RemoveProperty
- uid: Microsoft.Build.Execution.ProjectInstance.SetProperty*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: SetProperty
  nameWithType: ProjectInstance.SetProperty
- uid: Microsoft.Build.Execution.ProjectInstance.Targets*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: Targets
  nameWithType: ProjectInstance.Targets
- uid: Microsoft.Build.Execution.ProjectInstance.ToolsVersion*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ToolsVersion
  nameWithType: ProjectInstance.ToolsVersion
- uid: Microsoft.Build.Execution.ProjectInstance.ToProjectRootElement*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: ToProjectRootElement
  nameWithType: ProjectInstance.ToProjectRootElement
- uid: Microsoft.Build.Execution.ProjectInstance.UpdateStateFrom*
  parent: Microsoft.Build.Execution.ProjectInstance
  isExternal: false
  name: UpdateStateFrom
  nameWithType: ProjectInstance.UpdateStateFrom
