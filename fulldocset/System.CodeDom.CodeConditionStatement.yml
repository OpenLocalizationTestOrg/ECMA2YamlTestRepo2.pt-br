### YamlMime:ManagedReference
items:
- uid: System.CodeDom.CodeConditionStatement
  id: CodeConditionStatement
  children:
  - System.CodeDom.CodeConditionStatement.#ctor
  - System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])
  - System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])
  - System.CodeDom.CodeConditionStatement.Condition
  - System.CodeDom.CodeConditionStatement.FalseStatements
  - System.CodeDom.CodeConditionStatement.TrueStatements
  langs:
  - csharp
  name: CodeConditionStatement
  nameWithType: CodeConditionStatement
  fullName: System.CodeDom.CodeConditionStatement
  type: Class
  summary: "Representa uma instrução de ramificação condicional, normalmente é representada como uma <xref uid=&quot;langword_csharp_if&quot; name=&quot;if&quot; href=&quot;&quot;> </xref> instrução."
  remarks: "CodeConditionStatement pode ser usado para representar o código que consiste em uma expressão condicional, uma coleção de instruções a serem executadas se a expressão condicional for avaliada como `true`e um conjunto opcional de instruções a serem executadas se a expressão condicional for avaliada como `false`. Um CodeConditionStatement é gerado em vários idiomas, como um `if` instrução.       A <xref:System.CodeDom.CodeConditionStatement.Condition%2A>propriedade indica a expressão para teste.</xref:System.CodeDom.CodeConditionStatement.Condition%2A> O <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A>propriedade contém as instruções a serem executadas se para testar a expressão for avaliada como `true`.</xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> O <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A>propriedade contém as instruções a serem executadas se para testar a expressão for avaliada como `false`.</xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A>"
  example:
  - "This example demonstrates using a CodeConditionStatement to represent an `if` statement with an `else` block.  \n  \n [!code-cpp[CodeConditionStatementExample#2](~/add/codesnippet/cpp/t-system.codedom.codecon_1_1.cpp)]\n [!code-cs[CodeConditionStatementExample#2](~/add/codesnippet/csharp/t-system.codedom.codecon_1_1.cs)]\n [!code-vb[CodeConditionStatementExample#2](~/add/codesnippet/visualbasic/t-system.codedom.codecon_1_1.vb)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class CodeConditionStatement : System.CodeDom.CodeStatement
  inheritance:
  - System.Object
  - System.CodeDom.CodeObject
  - System.CodeDom.CodeStatement
  implements: []
  inheritedMembers:
  - System.CodeDom.CodeObject.UserData
  - System.CodeDom.CodeStatement.EndDirectives
  - System.CodeDom.CodeStatement.LinePragma
  - System.CodeDom.CodeStatement.StartDirectives
  platform:
  - net462
- uid: System.CodeDom.CodeConditionStatement.#ctor
  id: '#ctor'
  parent: System.CodeDom.CodeConditionStatement
  langs:
  - csharp
  name: CodeConditionStatement()
  nameWithType: CodeConditionStatement.CodeConditionStatement()
  fullName: System.CodeDom.CodeConditionStatement.CodeConditionStatement()
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeConditionStatement&quot;> </xref> classe."
  syntax:
    content: public CodeConditionStatement ();
    parameters: []
  overload: System.CodeDom.CodeConditionStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])
  id: '#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])'
  parent: System.CodeDom.CodeConditionStatement
  langs:
  - csharp
  name: CodeConditionStatement(CodeExpression,CodeStatement[])
  nameWithType: CodeConditionStatement.CodeConditionStatement(CodeExpression,CodeStatement[])
  fullName: System.CodeDom.CodeConditionStatement.CodeConditionStatement(CodeExpression,CodeStatement[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeConditionStatement&quot;> </xref> classe usando as instruções e a condição especificada."
  syntax:
    content: public CodeConditionStatement (System.CodeDom.CodeExpression condition, System.CodeDom.CodeStatement[] trueStatements);
    parameters:
    - id: condition
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que indica a expressão a ser avaliada."
    - id: trueStatements
      type: System.CodeDom.CodeStatement[]
      description: "Uma matriz do tipo <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> que contém as instruções a serem executadas se a condição for <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeConditionStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])
  id: '#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])'
  parent: System.CodeDom.CodeConditionStatement
  langs:
  - csharp
  name: CodeConditionStatement(CodeExpression,CodeStatement[],CodeStatement[])
  nameWithType: CodeConditionStatement.CodeConditionStatement(CodeExpression,CodeStatement[],CodeStatement[])
  fullName: System.CodeDom.CodeConditionStatement.CodeConditionStatement(CodeExpression,CodeStatement[],CodeStatement[])
  type: Constructor
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Inicializa uma nova instância do <xref href=&quot;System.CodeDom.CodeConditionStatement&quot;> </xref> classe usando as instruções e a condição especificada."
  syntax:
    content: public CodeConditionStatement (System.CodeDom.CodeExpression condition, System.CodeDom.CodeStatement[] trueStatements, System.CodeDom.CodeStatement[] falseStatements);
    parameters:
    - id: condition
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que indica a condição para avaliar."
    - id: trueStatements
      type: System.CodeDom.CodeStatement[]
      description: "Uma matriz do tipo <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> que contém as instruções a serem executadas se a condição for <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
    - id: falseStatements
      type: System.CodeDom.CodeStatement[]
      description: "Uma matriz do tipo <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> que contém as instruções a serem executadas se a condição for <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeConditionStatement.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeConditionStatement.Condition
  id: Condition
  parent: System.CodeDom.CodeConditionStatement
  langs:
  - csharp
  name: Condition
  nameWithType: CodeConditionStatement.Condition
  fullName: System.CodeDom.CodeConditionStatement.Condition
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém ou define a expressão para avaliar <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  remarks: "Se essa expressão condicional for avaliada como `true`, o código contido no <xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A>coleção será executada.</xref:System.CodeDom.CodeConditionStatement.TrueStatements%2A> Se essa expressão condicional for avaliada como `false` e <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A>coleção não está vazia, o código contido no <xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A>coleção será executada.</xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A> </xref:System.CodeDom.CodeConditionStatement.FalseStatements%2A>"
  syntax:
    content: public System.CodeDom.CodeExpression Condition { get; set; }
    return:
      type: System.CodeDom.CodeExpression
      description: "A <xref href=&quot;System.CodeDom.CodeExpression&quot;></xref> to evaluate <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.CodeDom.CodeConditionStatement.Condition*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeConditionStatement.FalseStatements
  id: FalseStatements
  parent: System.CodeDom.CodeConditionStatement
  langs:
  - csharp
  name: FalseStatements
  nameWithType: CodeConditionStatement.FalseStatements
  fullName: System.CodeDom.CodeConditionStatement.FalseStatements
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém a coleção de instruções a serem executadas se a expressão condicional for avaliada como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public System.CodeDom.CodeStatementCollection FalseStatements { get; }
    return:
      type: System.CodeDom.CodeStatementCollection
      description: "Um <xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> que contém as instruções a serem executadas se a expressão condicional for avaliada como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeConditionStatement.FalseStatements*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.CodeConditionStatement.TrueStatements
  id: TrueStatements
  parent: System.CodeDom.CodeConditionStatement
  langs:
  - csharp
  name: TrueStatements
  nameWithType: CodeConditionStatement.TrueStatements
  fullName: System.CodeDom.CodeConditionStatement.TrueStatements
  type: Property
  assemblies:
  - System
  namespace: System.CodeDom
  summary: "Obtém a coleção de instruções a serem executadas se a expressão condicional for avaliada como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  syntax:
    content: public System.CodeDom.CodeStatementCollection TrueStatements { get; }
    return:
      type: System.CodeDom.CodeStatementCollection
      description: "Um <xref href=&quot;System.CodeDom.CodeStatementCollection&quot;> </xref> que contém as instruções a serem executadas se a expressão condicional for avaliada como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.CodeConditionStatement.TrueStatements*
  exceptions: []
  platform:
  - net462
references:
- uid: System.CodeDom.CodeStatement
  isExternal: false
  name: System.CodeDom.CodeStatement
- uid: System.CodeDom.CodeConditionStatement.#ctor
  parent: System.CodeDom.CodeConditionStatement
  isExternal: false
  name: CodeConditionStatement()
  nameWithType: CodeConditionStatement.CodeConditionStatement()
  fullName: System.CodeDom.CodeConditionStatement.CodeConditionStatement()
- uid: System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[])
  parent: System.CodeDom.CodeConditionStatement
  isExternal: false
  name: CodeConditionStatement(CodeExpression,CodeStatement[])
  nameWithType: CodeConditionStatement.CodeConditionStatement(CodeExpression,CodeStatement[])
  fullName: System.CodeDom.CodeConditionStatement.CodeConditionStatement(CodeExpression,CodeStatement[])
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.CodeDom.CodeStatement[]
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement[]
  spec.csharp:
  - uid: System.CodeDom.CodeStatement
    name: CodeStatement
    nameWithType: CodeStatement
    fullName: CodeStatement[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.CodeDom.CodeConditionStatement.#ctor(System.CodeDom.CodeExpression,System.CodeDom.CodeStatement[],System.CodeDom.CodeStatement[])
  parent: System.CodeDom.CodeConditionStatement
  isExternal: false
  name: CodeConditionStatement(CodeExpression,CodeStatement[],CodeStatement[])
  nameWithType: CodeConditionStatement.CodeConditionStatement(CodeExpression,CodeStatement[],CodeStatement[])
  fullName: System.CodeDom.CodeConditionStatement.CodeConditionStatement(CodeExpression,CodeStatement[],CodeStatement[])
- uid: System.CodeDom.CodeConditionStatement.Condition
  parent: System.CodeDom.CodeConditionStatement
  isExternal: false
  name: Condition
  nameWithType: CodeConditionStatement.Condition
  fullName: System.CodeDom.CodeConditionStatement.Condition
- uid: System.CodeDom.CodeConditionStatement.FalseStatements
  parent: System.CodeDom.CodeConditionStatement
  isExternal: false
  name: FalseStatements
  nameWithType: CodeConditionStatement.FalseStatements
  fullName: System.CodeDom.CodeConditionStatement.FalseStatements
- uid: System.CodeDom.CodeStatementCollection
  parent: System.CodeDom
  isExternal: false
  name: CodeStatementCollection
  nameWithType: CodeStatementCollection
  fullName: System.CodeDom.CodeStatementCollection
- uid: System.CodeDom.CodeConditionStatement.TrueStatements
  parent: System.CodeDom.CodeConditionStatement
  isExternal: false
  name: TrueStatements
  nameWithType: CodeConditionStatement.TrueStatements
  fullName: System.CodeDom.CodeConditionStatement.TrueStatements
- uid: System.CodeDom.CodeConditionStatement.#ctor*
  parent: System.CodeDom.CodeConditionStatement
  isExternal: false
  name: CodeConditionStatement
  nameWithType: CodeConditionStatement.CodeConditionStatement
- uid: System.CodeDom.CodeConditionStatement.Condition*
  parent: System.CodeDom.CodeConditionStatement
  isExternal: false
  name: Condition
  nameWithType: CodeConditionStatement.Condition
- uid: System.CodeDom.CodeConditionStatement.FalseStatements*
  parent: System.CodeDom.CodeConditionStatement
  isExternal: false
  name: FalseStatements
  nameWithType: CodeConditionStatement.FalseStatements
- uid: System.CodeDom.CodeConditionStatement.TrueStatements*
  parent: System.CodeDom.CodeConditionStatement
  isExternal: false
  name: TrueStatements
  nameWithType: CodeConditionStatement.TrueStatements
