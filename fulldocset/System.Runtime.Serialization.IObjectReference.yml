### YamlMime:ManagedReference
items:
- uid: System.Runtime.Serialization.IObjectReference
  id: IObjectReference
  children:
  - System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)
  langs:
  - csharp
  name: IObjectReference
  nameWithType: IObjectReference
  fullName: System.Runtime.Serialization.IObjectReference
  type: Interface
  summary: "Indica que o implementador da interface atual é uma referência a outro objeto."
  remarks: ''
  example:
  - >-
    [!code-cs[IObjectReference Interface Example#1](~/add/codesnippet/csharp/t-system.runtime.seriali_9_1.cs)]
     [!code-cpp[IObjectReference Interface Example#1](~/add/codesnippet/cpp/t-system.runtime.seriali_9_1.cpp)]
     [!code-vb[IObjectReference Interface Example#1](~/add/codesnippet/visualbasic/t-system.runtime.seriali_9_1.vb)]
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IObjectReference
  implements: []
  platform:
  - net462
- uid: System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)
  id: GetRealObject(System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.IObjectReference
  langs:
  - csharp
  name: GetRealObject(StreamingContext)
  nameWithType: IObjectReference.GetRealObject(StreamingContext)
  fullName: System.Runtime.Serialization.IObjectReference.GetRealObject(StreamingContext)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Serialization
  summary: "Retorna o objeto real que deve ser desserializado, em vez do objeto que especifica o fluxo serializado."
  remarks: "Esse método é útil em uma situação de comunicação remota onde você serializar um objeto do criador de proxy, não é um objeto real. Quando o objeto de proxy de criador é desserializado, desserialização chama seu método GetRealObject. Neste ponto, o objeto de proxy criador cria uma nova instância do objeto proxy que faz referência a objeto real original, talvez em um computador remoto. Por fim, o objeto de proxy de criador é descartado e posteriormente recuperado pela coleta de lixo.       Por exemplo, considere como <xref:System.Type>objetos são serializados.</xref:System.Type> Em vez de transmitir os dados a partir do <xref:System.Type>objeto, o sistema transmite um objeto reservado com o nome do objeto do tipo e informações sobre o assembly em que ele é encontrado em um objeto que implementa <xref:System.Runtime.Serialization.IObjectReference>.</xref:System.Runtime.Serialization.IObjectReference> </xref:System.Type> Quando o nome do tipo e o nome do assembly estão disponíveis, a infraestrutura de desserialização chama GetRealObject no objeto proprietário que foram transmitido. Esse suporte para retornar o <xref:System.Type>objeto que é inserido no gráfico.</xref:System.Type>       Esse método é protegido por um <xref:System.Security.Permissions.SecurityAction?displayProperty=fullName>para o <xref:System.Security.Permissions.SecurityPermission>com o <xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName>especificado.</xref:System.Security.Permissions.SecurityPermissionFlag?displayProperty=fullName> </xref:System.Security.Permissions.SecurityPermission> </xref:System.Security.Permissions.SecurityAction?displayProperty=fullName>"
  example:
  - >-
    [!code-cs[IObjectReference Interface Example#1](~/add/codesnippet/csharp/cd60c7d2-ba12-4220-8a1f-_1.cs)]
     [!code-cpp[IObjectReference Interface Example#1](~/add/codesnippet/cpp/cd60c7d2-ba12-4220-8a1f-_1.cpp)]
     [!code-vb[IObjectReference Interface Example#1](~/add/codesnippet/visualbasic/cd60c7d2-ba12-4220-8a1f-_1.vb)]
  syntax:
    content: public object GetRealObject (System.Runtime.Serialization.StreamingContext context);
    parameters:
    - id: context
      type: System.Runtime.Serialization.StreamingContext
      description: "O <xref:System.Runtime.Serialization.StreamingContext>do qual o objeto atual é desserializado.</xref:System.Runtime.Serialization.StreamingContext>"
    return:
      type: System.Object
      description: "Retorna o objeto real que é colocado no gráfico."
  overload: System.Runtime.Serialization.IObjectReference.GetRealObject*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária. A chamada não funcionará em um servidor de confiança médio."
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Serialization.IObjectReference.GetRealObject(System.Runtime.Serialization.StreamingContext)
  parent: System.Runtime.Serialization.IObjectReference
  isExternal: false
  name: GetRealObject(StreamingContext)
  nameWithType: IObjectReference.GetRealObject(StreamingContext)
  fullName: System.Runtime.Serialization.IObjectReference.GetRealObject(StreamingContext)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Runtime.Serialization.StreamingContext
  parent: System.Runtime.Serialization
  isExternal: true
  name: StreamingContext
  nameWithType: StreamingContext
  fullName: System.Runtime.Serialization.StreamingContext
- uid: System.Runtime.Serialization.IObjectReference.GetRealObject*
  parent: System.Runtime.Serialization.IObjectReference
  isExternal: false
  name: GetRealObject
  nameWithType: IObjectReference.GetRealObject
