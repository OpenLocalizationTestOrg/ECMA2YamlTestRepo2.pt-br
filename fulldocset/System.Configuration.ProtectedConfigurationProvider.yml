### YamlMime:ManagedReference
items:
- uid: System.Configuration.ProtectedConfigurationProvider
  id: ProtectedConfigurationProvider
  children:
  - System.Configuration.ProtectedConfigurationProvider.#ctor
  - System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  - System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  langs:
  - csharp
  name: ProtectedConfigurationProvider
  nameWithType: ProtectedConfigurationProvider
  fullName: System.Configuration.ProtectedConfigurationProvider
  type: Class
  summary: "É a classe base para criar provedores para criptografar e descriptografar dados de configuração protegida."
  remarks: "Você pode criptografar seções de um arquivo de configuração para proteger informações confidenciais usadas pelo seu aplicativo. Isso melhora a segurança, tornando difícil de acesso não autorizado mesmo se um invasor obtiver acesso ao seu arquivo de configuração.       O .NET Framework inclui dois provedores de configuração protegida que podem ser usados para criptografar as seções de um arquivo de configuração. O <xref:System.Configuration.RsaProtectedConfigurationProvider>classe usa a <xref:System.Security.Cryptography.RSACryptoServiceProvider>para criptografar as seções de configuração.</xref:System.Security.Cryptography.RSACryptoServiceProvider> </xref:System.Configuration.RsaProtectedConfigurationProvider> O <xref:System.Configuration.DpapiProtectedConfigurationProvider>classe usa a API de proteção de dados Windows (DPAPI) para criptografar as seções de configuração.</xref:System.Configuration.DpapiProtectedConfigurationProvider>       Você pode ter um requisito para criptografar informações confidenciais usando um algoritmo que não sejam os provedores de RSA ou DPAPI. Nesse caso, você pode criar seu próprio provedor de configuração protegida personalizado. O ProtectedConfigurationProvider é uma classe base abstrata que você deve herdar de criar seu próprio provedor de configuração protegida.       Se você usar um padrão ou um provedor personalizado, você deve garantir que ele é configurado com o `add` elemento o `providers` seção o `configProtectedData` seção de configuração. (Consulte o exemplo a seguir).       Para obter detalhes, consulte [implementando um provedor de configuração protegida](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > ASP.NET quando encontrar os dados de configuração criptografada, ele executa a descriptografia transparente usando o provedor configurado. Nenhuma ação é necessária em seu lado diferente certificando-se de que você configure o provedor necessário."
  example:
  - "The following example shows how to implement a custom ProtectedConfigurationProvider.  \n  \n To be able to configure this provider, as shown in the next configuration excerpt, you must install it in the Global Assembly Cache (GAC). Refer to [Implementing a Protected Configuration Provider](../Topic/Implementing%20a%20Protected%20Configuration%20Provider.md) for more information.  \n  \n [!code-cs[System.Configuration.ProtectedConfigurationProvider#1](~/add/codesnippet/csharp/t-system.configuration.p_7_1.cs)]\n [!code-vb[System.Configuration.ProtectedConfigurationProvider#1](~/add/codesnippet/visualbasic/t-system.configuration.p_7_1.vb)]  \n  \n The following example shows how to use the previous custom ProtectedConfigurationProvider.  \n  \n [!code-vb[System.Configuration.UsingProtectedConfigurationProvider#11](~/add/codesnippet/visualbasic/t-system.configuration.p_7_2.vb)]\n [!code-cs[System.Configuration.UsingProtectedConfigurationProvider#11](~/add/codesnippet/csharp/t-system.configuration.p_7_2.cs)]  \n  \n The following is an excerpt of the configuration file used by the above examples.  \n  \n```  \n<?xml version=\"1.0\" encoding=\"utf-8\" ?>  \n<configuration>  \n  \n  <configProtectedData >  \n    <providers>  \n      <clear />  \n      <add keyContainerName=\"pcKey.txt\"   \n        name=\"TripleDESProtectedConfigurationProvider\"  \ntype=\"Samples.Aspnet.TripleDESProtectedConfigurationProvider, protectedconfigurationproviderlib, Version=1.0.0.0, Culture=neutral, PublicKeyToken=79e01ae0f5cfc66f, processorArchitecture=MSIL\" />  \n    </providers>  \n  \n  </configProtectedData >  \n  \n  <connectionStrings>  \n    <add name=\"NorthwindConnectionString\"   \n      connectionString=\"Data Source=webnetue2;Initial Catalog=Northwind;User ID=aspnet_test;Password=test\"  \nproviderName=\"System.Data.SqlClient\" />  \n  </connectionStrings>  \n  \n</configuration>  \n```"
  syntax:
    content: 'public abstract class ProtectedConfigurationProvider : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Configuration.ProtectedConfigurationProvider.#ctor
  id: '#ctor'
  parent: System.Configuration.ProtectedConfigurationProvider
  langs:
  - csharp
  name: ProtectedConfigurationProvider()
  nameWithType: ProtectedConfigurationProvider.ProtectedConfigurationProvider()
  fullName: System.Configuration.ProtectedConfigurationProvider.ProtectedConfigurationProvider()
  type: Constructor
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.ProtectedConfigurationProvider&quot;> </xref> classe usando as configurações padrão."
  syntax:
    content: protected ProtectedConfigurationProvider ();
    parameters: []
  overload: System.Configuration.ProtectedConfigurationProvider.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  id: Decrypt(System.Xml.XmlNode)
  parent: System.Configuration.ProtectedConfigurationProvider
  langs:
  - csharp
  name: Decrypt(XmlNode)
  nameWithType: ProtectedConfigurationProvider.Decrypt(XmlNode)
  fullName: System.Configuration.ProtectedConfigurationProvider.Decrypt(XmlNode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Descriptografa o passado <xref href=&quot;System.Xml.XmlNode&quot;> </xref> objeto a partir de um arquivo de configuração."
  remarks: ''
  example:
  - "The following example shows how to use Decrypt method to perform custom decryption.  \n  \n [!code-cs[System.Configuration.ProtectedConfigurationProvider#2](~/add/codesnippet/csharp/490b80fa-87ff-462a-bceb-_1.cs)]\n [!code-vb[System.Configuration.ProtectedConfigurationProvider#2](~/add/codesnippet/visualbasic/490b80fa-87ff-462a-bceb-_1.vb)]"
  syntax:
    content: public abstract System.Xml.XmlNode Decrypt (System.Xml.XmlNode encryptedNode);
    parameters:
    - id: encryptedNode
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> objeto para descriptografar."
    return:
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> objeto que contém dados descriptografados."
  overload: System.Configuration.ProtectedConfigurationProvider.Decrypt*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  id: Encrypt(System.Xml.XmlNode)
  parent: System.Configuration.ProtectedConfigurationProvider
  langs:
  - csharp
  name: Encrypt(XmlNode)
  nameWithType: ProtectedConfigurationProvider.Encrypt(XmlNode)
  fullName: System.Configuration.ProtectedConfigurationProvider.Encrypt(XmlNode)
  type: Method
  assemblies:
  - System.Configuration
  namespace: System.Configuration
  summary: "Criptografa o passado <xref href=&quot;System.Xml.XmlNode&quot;> </xref> objeto a partir de um arquivo de configuração."
  remarks: ''
  example:
  - "The following example shows how to use Encrypt to perform custom encryption.  \n  \n [!code-cs[System.Configuration.ProtectedConfigurationProvider#3](~/add/codesnippet/csharp/1cc011d4-bc06-4499-99c2-_1.cs)]\n [!code-vb[System.Configuration.ProtectedConfigurationProvider#3](~/add/codesnippet/visualbasic/1cc011d4-bc06-4499-99c2-_1.vb)]"
  syntax:
    content: public abstract System.Xml.XmlNode Encrypt (System.Xml.XmlNode node);
    parameters:
    - id: node
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> objeto para criptografar."
    return:
      type: System.Xml.XmlNode
      description: "O <xref href=&quot;System.Xml.XmlNode&quot;> </xref> objeto que contém dados criptografados."
  overload: System.Configuration.ProtectedConfigurationProvider.Encrypt*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Configuration.ProtectedConfigurationProvider.#ctor
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: ProtectedConfigurationProvider()
  nameWithType: ProtectedConfigurationProvider.ProtectedConfigurationProvider()
  fullName: System.Configuration.ProtectedConfigurationProvider.ProtectedConfigurationProvider()
- uid: System.Configuration.ProtectedConfigurationProvider.Decrypt(System.Xml.XmlNode)
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: Decrypt(XmlNode)
  nameWithType: ProtectedConfigurationProvider.Decrypt(XmlNode)
  fullName: System.Configuration.ProtectedConfigurationProvider.Decrypt(XmlNode)
- uid: System.Xml.XmlNode
  parent: System.Xml
  isExternal: false
  name: XmlNode
  nameWithType: XmlNode
  fullName: System.Xml.XmlNode
- uid: System.Configuration.ProtectedConfigurationProvider.Encrypt(System.Xml.XmlNode)
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: Encrypt(XmlNode)
  nameWithType: ProtectedConfigurationProvider.Encrypt(XmlNode)
  fullName: System.Configuration.ProtectedConfigurationProvider.Encrypt(XmlNode)
- uid: System.Configuration.ProtectedConfigurationProvider.#ctor*
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: ProtectedConfigurationProvider
  nameWithType: ProtectedConfigurationProvider.ProtectedConfigurationProvider
- uid: System.Configuration.ProtectedConfigurationProvider.Decrypt*
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: Decrypt
  nameWithType: ProtectedConfigurationProvider.Decrypt
- uid: System.Configuration.ProtectedConfigurationProvider.Encrypt*
  parent: System.Configuration.ProtectedConfigurationProvider
  isExternal: false
  name: Encrypt
  nameWithType: ProtectedConfigurationProvider.Encrypt
