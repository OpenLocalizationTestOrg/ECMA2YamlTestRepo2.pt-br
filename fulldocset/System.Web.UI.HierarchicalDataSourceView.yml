### YamlMime:ManagedReference
items:
- uid: System.Web.UI.HierarchicalDataSourceView
  id: HierarchicalDataSourceView
  children:
  - System.Web.UI.HierarchicalDataSourceView.#ctor
  - System.Web.UI.HierarchicalDataSourceView.Select
  langs:
  - csharp
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView
  fullName: System.Web.UI.HierarchicalDataSourceView
  type: Class
  summary: "Representa uma exibição de dados em um nó ou uma coleção de nós em uma estrutura hierárquica de dados para um <xref href=&quot;System.Web.UI.HierarchicalDataSourceControl&quot;> </xref> controle."
  remarks: "ASP.NET oferece suporte a uma arquitetura de associação de dados que permite que os controles de servidor Web associar aos dados e apresentá-lo de forma consistente. Controles de servidor Web que associar aos dados são chamados de controles associados a dados e as classes que facilitam essa associação são chamadas de controles da fonte de dados. Controles de fonte de dados podem representar qualquer fonte de dados: um arquivo, um fluxo, um banco de dados relacional, um objeto comercial e assim por diante. Fonte de dados controla apresentar dados de uma maneira consistente para controles associados a dados, independentemente da origem ou o formato dos dados subjacentes.       Controles de fonte de dados que representam dados hierárquicos derivam da <xref:System.Web.UI.HierarchicalDataSourceControl>classe</xref:System.Web.UI.HierarchicalDataSourceControl> abstrata de Você pode pensar em um controle de fonte de dados como a combinação de suas exibições associadas nos dados subjacentes, que são representados por objetos de exibição de fonte de dados e o objeto de controle de fonte de dados. Controles de fonte de dados hierárquicos suportam uma exibição da fonte de dados hierárquicos para cada nível hierárquico de dados que eles representam. Os modos de exibição de fonte de dados não são nomeados, como os <xref:System.Web.UI.DataSourceView>objetos associados a um <xref:System.Web.UI.DataSourceControl>controle, mas são identificados por seu caminho hierárquico exclusivo</xref:System.Web.UI.DataSourceControl> </xref:System.Web.UI.DataSourceView>       Exibições da fonte de dados definem as capacidades de um controle de fonte de dados. Todos os dados da fonte de exibição de objetos, incluindo HierarchicalDataSourceView, oferecem suporte a recuperação de dados de subjacente fonte de dados usando o <xref:System.Web.UI.HierarchicalDataSourceView.Select%2A>método, que recupera uma lista hierárquica de dados como um <xref:System.Web.UI.IHierarchicalEnumerable>objeto.</xref:System.Web.UI.IHierarchicalEnumerable> </xref:System.Web.UI.HierarchicalDataSourceView.Select%2A> Exibição objetos opcionalmente dão suporte a um conjunto básico de recursos, incluindo operações como fonte de dados de todos os <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>, <xref:System.Web.UI.DataSourceView.Delete%2A>e a classificação.</xref:System.Web.UI.DataSourceView.Delete%2A> </xref:System.Web.UI.DataSourceView.Update%2A> </xref:System.Web.UI.DataSourceView.Insert%2A> Um controle associado a dados pode descobrir os recursos de um controle de fonte de dados, recuperando uma fonte de dados associado exibir usando o <xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A>método e consultar a exibição em tempo de design ou em tempo de execução.</xref:System.Web.UI.HierarchicalDataSourceControl.GetHierarchicalView%2A> HierarchicalDataSourceView não oferece suporte a <xref:System.Web.UI.DataSourceView.Insert%2A>, <xref:System.Web.UI.DataSourceView.Update%2A>ou <xref:System.Web.UI.DataSourceView.Delete%2A>operações.</xref:System.Web.UI.DataSourceView.Delete%2A> </xref:System.Web.UI.DataSourceView.Update%2A> </xref:System.Web.UI.DataSourceView.Insert%2A>"
  example:
  - "The following code example demonstrates how to derive a class from the HierarchicalDataSourceView class to retrieve data from hierarchical data storage, in this case a file system. The `FileSystemDataSourceView` class is a strongly typed HierarchicalDataSourceView instance that enables hierarchical Web server controls such as the <xref:System.Web.UI.WebControls.TreeView> control to bind to a `FileSystemDataSource` control and display file system information. For security purposes, file system information is displayed only if the data source control is being used in a localhost, authenticated scenario, and only starts with the virtual directory that the Web Forms page using the data source control resides in. Otherwise, the `viewPath` parameter passed to the constructor might be used to create a view based on the current file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/add/codesnippet/csharp/t-system.web.ui.hierarch_0_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/add/codesnippet/visualbasic/t-system.web.ui.hierarch_0_1.vb)]"
  syntax:
    content: public abstract class HierarchicalDataSourceView
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.HierarchicalDataSourceView.#ctor
  id: '#ctor'
  parent: System.Web.UI.HierarchicalDataSourceView
  langs:
  - csharp
  name: HierarchicalDataSourceView()
  nameWithType: HierarchicalDataSourceView.HierarchicalDataSourceView()
  fullName: System.Web.UI.HierarchicalDataSourceView.HierarchicalDataSourceView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.HierarchicalDataSourceView&quot;> </xref> classe."
  syntax:
    content: protected HierarchicalDataSourceView ();
    parameters: []
  overload: System.Web.UI.HierarchicalDataSourceView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.HierarchicalDataSourceView.Select
  id: Select
  parent: System.Web.UI.HierarchicalDataSourceView
  langs:
  - csharp
  name: Select()
  nameWithType: HierarchicalDataSourceView.Select()
  fullName: System.Web.UI.HierarchicalDataSourceView.Select()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma lista de todos os itens de dados no modo de exibição."
  remarks: "O método Select retorna um <xref:System.Web.UI.IHierarchicalEnumerable>coleção de itens de dados no modo de exibição atual.</xref:System.Web.UI.IHierarchicalEnumerable> Você pode chamar o <xref:System.Collections.IEnumerable.GetEnumerator%2A>método para obter um <xref:System.Collections.IEnumerator>de objeto e iterar pela coleção de itens de dados.</xref:System.Collections.IEnumerator> </xref:System.Collections.IEnumerable.GetEnumerator%2A>"
  example:
  - "The following code example demonstrates how to override the Select method in a class that derives from the <xref:System.Web.UI.HierarchicalDataSourceView> class to retrieve hierarchical <xref:System.IO.FileSystemInfo> data from a file system. For security purposes, file system information is displayed only if the data source control is being used in a localhost, authenticated scenario, and only starts with the virtual directory that the Web Forms page using the data source control resides in. Otherwise, the `viewPath` parameter passed to the constructor of the view object might be used to create a view based on the current file system path. This code example is part of a larger example provided for the <xref:System.Web.UI.HierarchicalDataSourceControl> class.  \n  \n [!code-cs[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/add/codesnippet/csharp/m-system.web.ui.hierarch_1_1.cs)]\n [!code-vb[Urtue.Samples.Alexkr.FileSystemDataSource_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.hierarch_1_1.vb)]"
  syntax:
    content: public abstract System.Web.UI.IHierarchicalEnumerable Select ();
    parameters: []
    return:
      type: System.Web.UI.IHierarchicalEnumerable
      description: "Um <xref href=&quot;System.Web.UI.IHierarchicalEnumerable&quot;> </xref> coleção de itens de dados."
  overload: System.Web.UI.HierarchicalDataSourceView.Select*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.HierarchicalDataSourceView.#ctor
  parent: System.Web.UI.HierarchicalDataSourceView
  isExternal: false
  name: HierarchicalDataSourceView()
  nameWithType: HierarchicalDataSourceView.HierarchicalDataSourceView()
  fullName: System.Web.UI.HierarchicalDataSourceView.HierarchicalDataSourceView()
- uid: System.Web.UI.HierarchicalDataSourceView.Select
  parent: System.Web.UI.HierarchicalDataSourceView
  isExternal: false
  name: Select()
  nameWithType: HierarchicalDataSourceView.Select()
  fullName: System.Web.UI.HierarchicalDataSourceView.Select()
- uid: System.Web.UI.IHierarchicalEnumerable
  parent: System.Web.UI
  isExternal: false
  name: IHierarchicalEnumerable
  nameWithType: IHierarchicalEnumerable
  fullName: System.Web.UI.IHierarchicalEnumerable
- uid: System.Web.UI.HierarchicalDataSourceView.#ctor*
  parent: System.Web.UI.HierarchicalDataSourceView
  isExternal: false
  name: HierarchicalDataSourceView
  nameWithType: HierarchicalDataSourceView.HierarchicalDataSourceView
- uid: System.Web.UI.HierarchicalDataSourceView.Select*
  parent: System.Web.UI.HierarchicalDataSourceView
  isExternal: false
  name: Select
  nameWithType: HierarchicalDataSourceView.Select
