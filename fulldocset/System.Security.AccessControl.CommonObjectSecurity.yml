### YamlMime:ManagedReference
items:
- uid: System.Security.AccessControl.CommonObjectSecurity
  id: CommonObjectSecurity
  children:
  - System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  - System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  - System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  - System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  langs:
  - csharp
  name: CommonObjectSecurity
  nameWithType: CommonObjectSecurity
  fullName: System.Security.AccessControl.CommonObjectSecurity
  type: Class
  summary: "Controla o acesso a objetos sem a manipulação direta de listas de controle de acesso (ACLs). Essa classe é a classe base abstrata para o <xref href=&quot;System.Security.AccessControl.NativeObjectSecurity&quot;> </xref> classe."
  syntax:
    content: 'public abstract class CommonObjectSecurity : System.Security.AccessControl.ObjectSecurity'
  inheritance:
  - System.Object
  - System.Security.AccessControl.ObjectSecurity
  implements: []
  inheritedMembers:
  - System.Security.AccessControl.ObjectSecurity.AccessRightType
  - System.Security.AccessControl.ObjectSecurity.AccessRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AccessControlType)
  - System.Security.AccessControl.ObjectSecurity.AccessRulesModified
  - System.Security.AccessControl.ObjectSecurity.AccessRuleType
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAccessRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesCanonical
  - System.Security.AccessControl.ObjectSecurity.AreAuditRulesProtected
  - System.Security.AccessControl.ObjectSecurity.AuditRuleFactory(System.Security.Principal.IdentityReference,System.Int32,System.Boolean,System.Security.AccessControl.InheritanceFlags,System.Security.AccessControl.PropagationFlags,System.Security.AccessControl.AuditFlags)
  - System.Security.AccessControl.ObjectSecurity.AuditRulesModified
  - System.Security.AccessControl.ObjectSecurity.AuditRuleType
  - System.Security.AccessControl.ObjectSecurity.GetGroup(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetOwner(System.Type)
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorBinaryForm
  - System.Security.AccessControl.ObjectSecurity.GetSecurityDescriptorSddlForm(System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.GroupModified
  - System.Security.AccessControl.ObjectSecurity.IsContainer
  - System.Security.AccessControl.ObjectSecurity.IsDS
  - System.Security.AccessControl.ObjectSecurity.IsSddlConversionSupported
  - System.Security.AccessControl.ObjectSecurity.ModifyAccessRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.ModifyAuditRule(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  - System.Security.AccessControl.ObjectSecurity.OwnerModified
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Boolean,System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.Runtime.InteropServices.SafeHandle,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.Persist(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.PurgeAccessRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.PurgeAuditRules(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.ReadLock
  - System.Security.AccessControl.ObjectSecurity.ReadUnlock
  - System.Security.AccessControl.ObjectSecurity.SetAccessRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetAuditRuleProtection(System.Boolean,System.Boolean)
  - System.Security.AccessControl.ObjectSecurity.SetGroup(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetOwner(System.Security.Principal.IdentityReference)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[])
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorBinaryForm(System.Byte[],System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String)
  - System.Security.AccessControl.ObjectSecurity.SetSecurityDescriptorSddlForm(System.String,System.Security.AccessControl.AccessControlSections)
  - System.Security.AccessControl.ObjectSecurity.WriteLock
  - System.Security.AccessControl.ObjectSecurity.WriteUnlock
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: CommonObjectSecurity(Boolean)
  nameWithType: CommonObjectSecurity.CommonObjectSecurity(Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.CommonObjectSecurity(Boolean)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> classe."
  syntax:
    content: protected CommonObjectSecurity (bool isContainer);
    parameters:
    - id: isContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o novo objeto é um objeto de contêiner."
  overload: System.Security.AccessControl.CommonObjectSecurity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  id: AddAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: AddAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Adiciona a regra de acesso especificado para lista de controle de acesso (DACL) discricionário associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objeto."
  remarks: "Adicionar uma regra de acesso pode causar regras de acesso existentes na DACL a serem mesclados.       Para evitar, inadvertidamente, permitindo o acesso a entidades de segurança, aplicativos devem verificar a existência de uma permissão todos completa a entrada de controle de acesso (ACE) de acesso (AEFA) e removê-la antes de modificar uma DACL."
  syntax:
    content: protected void AddAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A regra de acesso para adicionar."
  overload: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  id: AddAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: AddAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Adiciona a regra de auditoria para o acesso controle lista SACL (sistema) associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objeto."
  remarks: "Adicionar uma regra de auditoria pode gerar regras de acesso existentes nos SACL a serem mesclados."
  syntax:
    content: protected void AddAuditRule (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A regra de auditoria para adicionar."
  overload: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  id: GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: GetAccessRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Obtém uma coleção de regras de acesso associado com o identificador de segurança especificado."
  syntax:
    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAccessRules (bool includeExplicit, bool includeInherited, Type targetType);
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir o acesso a regras definidas explicitamente para o objeto."
    - id: includeInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir regras de acesso herdado."
    - id: targetType
      type: System.Type
      description: "Especifica se o identificador de segurança para o qual recuperar regras de acesso é do tipo T:System.Security.Principal.SecurityIdentifier ou T:System.Security.Principal.NTAccount. O valor desse parâmetro deve ser um tipo que possa ser convertido para o <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> tipo."
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: "A coleção de regras de acesso associado ao <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  overload: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  id: GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: GetAuditRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Obtém uma coleção de regras de auditoria associadas com o identificador de segurança especificados."
  syntax:
    content: public System.Security.AccessControl.AuthorizationRuleCollection GetAuditRules (bool includeExplicit, bool includeInherited, Type targetType);
    parameters:
    - id: includeExplicit
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir a auditoria regras explicitamente definida para o objeto."
    - id: includeInherited
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir regras de auditoria herdadas."
    - id: targetType
      type: System.Type
      description: "O identificador de segurança para o qual recuperar regras de auditoria. Isso deve ser um objeto que pode ser convertido como um <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
    return:
      type: System.Security.AccessControl.AuthorizationRuleCollection
      description: "A coleção de regras de auditoria associadas especificado <xref href=&quot;System.Security.Principal.SecurityIdentifier&quot;> </xref> objeto."
  overload: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  id: ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Aplica-se a modificação especificada para o acesso controle DACL (lista discricionário) associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objeto."
  remarks: "Para evitar, inadvertidamente, permitindo o acesso a entidades de segurança, aplicativos devem verificar a existência de uma permissão todos completa a entrada de controle de acesso (ACE) de acesso (AEFA) e removê-la antes de modificar uma DACL."
  syntax:
    content: protected override bool ModifyAccess (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AccessRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "A modificação para aplicar a DACL."
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A regra de acesso para modificar."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a DACL é modificada com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a DACL é modificada com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  id: ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Aplica-se a modificação especificada para o acesso controle lista SACL (sistema) associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objeto."
  syntax:
    content: protected override bool ModifyAudit (System.Security.AccessControl.AccessControlModification modification, System.Security.AccessControl.AuditRule rule, out bool modified);
    parameters:
    - id: modification
      type: System.Security.AccessControl.AccessControlModification
      description: "A modificação para aplicar a SACL."
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A regra de auditoria para modificar."
    - id: modified
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a SACL é modificada com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a SACL é modificada com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove regras de acesso que contêm a mesma máscara de acesso e o identificador de segurança, como a regra de acesso especificado da lista de controle de acesso (DACL) discricionário associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objeto."
  remarks: "Remoção de acesso é feita usando um algoritmo complexo que pode adicionar regras de controle de acesso além de removê-los.       Esse método falhar ao remover a regra de acesso e retorna `false` se as regras de herança associadas à regra de acesso são muito complexas para o algoritmo de remoção bem-sucedida.       Para evitar, inadvertidamente, permitindo o acesso a entidades de segurança, aplicativos devem verificar a existência de uma permissão todos completa a entrada de controle de acesso (ACE) de acesso (AEFA) e removê-la antes de modificar uma DACL."
  syntax:
    content: protected bool RemoveAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A regra de acesso para remover."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a regra de acesso foi removida com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRuleAll(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove todas as regras de acesso que tem o mesmo identificador de segurança, como a regra de acesso especificado da lista de controle de acesso (DACL) discricionário associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objeto."
  remarks: "Para evitar, inadvertidamente, permitindo o acesso a entidades de segurança, aplicativos devem verificar a existência de uma permissão todos completa a entrada de controle de acesso (ACE) de acesso (AEFA) e removê-la antes de modificar uma DACL."
  syntax:
    content: protected void RemoveAccessRuleAll (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A regra de acesso para remover."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  id: RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAccessRuleSpecific(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove todas as regras de acesso que correspondem exatamente à regra de acesso especificado do acesso controle DACL (lista discricionário) associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objeto."
  remarks: "Para evitar, inadvertidamente, permitindo o acesso a entidades de segurança, aplicativos devem verificar a existência de uma permissão todos completa a entrada de controle de acesso (ACE) de acesso (AEFA) e removê-la antes de modificar uma DACL."
  syntax:
    content: protected void RemoveAccessRuleSpecific (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A regra de acesso para remover."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove regras de auditoria que contêm a mesma máscara de acesso e o identificador de segurança, como a regra de auditoria do sistema acesso de controle de lista (SACL) associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objeto."
  remarks: "Remoção de auditoria é realizada usando um algoritmo complexo que pode adicionar regras de controle de auditoria além de removê-los.       Esse método falhar ao remover a regra de auditoria e retorna `false` se as regras de herança associadas à regra de auditoria forem muito complexas para o algoritmo de remoção bem-sucedida."
  syntax:
    content: protected bool RemoveAuditRule (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A regra de auditoria para remover."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a regra de auditoria foi removida com êxito; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRuleAll(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove todas as regras de auditoria que tem o mesmo identificador de segurança, como a regra de auditoria do sistema acesso de controle de lista (SACL) associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objeto."
  syntax:
    content: protected void RemoveAuditRuleAll (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A regra de auditoria para remover."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  id: RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: RemoveAuditRuleSpecific(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove todas as regras de auditoria que correspondem exatamente a regra de auditoria do acesso controle lista SACL (sistema) associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> objeto."
  syntax:
    content: protected void RemoveAuditRuleSpecific (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A regra de auditoria para remover."
  overload: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  id: ResetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: ResetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove todas as regras de acesso no acesso controle DACL (lista discricionário) associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> de objeto e, em seguida, adiciona a regra de acesso especificado."
  remarks: "Para evitar, inadvertidamente, permitindo o acesso a entidades de segurança, aplicativos devem verificar a existência de uma permissão todos completa a entrada de controle de acesso (ACE) de acesso (AEFA) e removê-la antes de modificar uma DACL."
  syntax:
    content: protected void ResetAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A regra de acesso para redefinição."
  overload: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  id: SetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: SetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(AccessRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove todas as regras de acesso que contêm o mesmo identificador de segurança e qualificador, como a regra de acesso especificado na lista de controle de acesso (DACL) discricionário associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> de objeto e, em seguida, adiciona a regra de acesso especificado."
  remarks: "Para evitar, inadvertidamente, permitindo o acesso a entidades de segurança, aplicativos devem verificar a existência de uma permissão todos completa a entrada de controle de acesso (ACE) de acesso (AEFA) e removê-la antes de modificar uma DACL."
  syntax:
    content: protected void SetAccessRule (System.Security.AccessControl.AccessRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AccessRule
      description: "A regra de acesso ao conjunto."
  overload: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule*
  exceptions: []
  platform:
  - net462
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  id: SetAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  langs:
  - csharp
  name: SetAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(AuditRule)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.AccessControl
  summary: "Remove todas as regras de auditoria que contêm o mesmo identificador de segurança e qualificador, como a regra de auditoria no sistema acesso de controle de lista (SACL) associado a esta <xref href=&quot;System.Security.AccessControl.CommonObjectSecurity&quot;> </xref> de objeto e, em seguida, adiciona a regra de auditoria."
  syntax:
    content: protected void SetAuditRule (System.Security.AccessControl.AuditRule rule);
    parameters:
    - id: rule
      type: System.Security.AccessControl.AuditRule
      description: "A regra de auditoria para definir."
  overload: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.AccessControl.ObjectSecurity
  isExternal: false
  name: System.Security.AccessControl.ObjectSecurity
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor(System.Boolean)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: CommonObjectSecurity(Boolean)
  nameWithType: CommonObjectSecurity.CommonObjectSecurity(Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.CommonObjectSecurity(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.AddAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule(AccessRule)
- uid: System.Security.AccessControl.AccessRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessRule
  nameWithType: AccessRule
  fullName: System.Security.AccessControl.AccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.AddAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule(AuditRule)
- uid: System.Security.AccessControl.AuditRule
  parent: System.Security.AccessControl
  isExternal: false
  name: AuditRule
  nameWithType: AuditRule
  fullName: System.Security.AccessControl.AuditRule
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAccessRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules(Boolean,Boolean,Type)
- uid: System.Security.AccessControl.AuthorizationRuleCollection
  parent: System.Security.AccessControl
  isExternal: false
  name: AuthorizationRuleCollection
  nameWithType: AuthorizationRuleCollection
  fullName: System.Security.AccessControl.AuthorizationRuleCollection
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(System.Boolean,System.Boolean,System.Type)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAuditRules(Boolean,Boolean,Type)
  nameWithType: CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
  fullName: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules(Boolean,Boolean,Type)
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AccessRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAccess(AccessControlModification,AccessRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess(AccessControlModification,AccessRule,Boolean)
- uid: System.Security.AccessControl.AccessControlModification
  parent: System.Security.AccessControl
  isExternal: false
  name: AccessControlModification
  nameWithType: AccessControlModification
  fullName: System.Security.AccessControl.AccessControlModification
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(System.Security.AccessControl.AccessControlModification,System.Security.AccessControl.AuditRule,System.Boolean@)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAudit(AccessControlModification,AuditRule,Boolean)
  nameWithType: CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit(AccessControlModification,AuditRule,Boolean)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleAll(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific(AccessRule)
  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleAll(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific(AuditRule)
  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ResetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.ResetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(System.Security.AccessControl.AccessRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAccessRule(AccessRule)
  nameWithType: CommonObjectSecurity.SetAccessRule(AccessRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule(AccessRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(System.Security.AccessControl.AuditRule)
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAuditRule(AuditRule)
  nameWithType: CommonObjectSecurity.SetAuditRule(AuditRule)
  fullName: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule(AuditRule)
- uid: System.Security.AccessControl.CommonObjectSecurity.#ctor*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: CommonObjectSecurity
  nameWithType: CommonObjectSecurity.CommonObjectSecurity
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAccessRule
  nameWithType: CommonObjectSecurity.AddAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.AddAuditRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: AddAuditRule
  nameWithType: CommonObjectSecurity.AddAuditRule
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAccessRules*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAccessRules
  nameWithType: CommonObjectSecurity.GetAccessRules
- uid: System.Security.AccessControl.CommonObjectSecurity.GetAuditRules*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: GetAuditRules
  nameWithType: CommonObjectSecurity.GetAuditRules
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAccess*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAccess
  nameWithType: CommonObjectSecurity.ModifyAccess
- uid: System.Security.AccessControl.CommonObjectSecurity.ModifyAudit*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ModifyAudit
  nameWithType: CommonObjectSecurity.ModifyAudit
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRule
  nameWithType: CommonObjectSecurity.RemoveAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleAll*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleAll
  nameWithType: CommonObjectSecurity.RemoveAccessRuleAll
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAccessRuleSpecific*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAccessRuleSpecific
  nameWithType: CommonObjectSecurity.RemoveAccessRuleSpecific
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRule
  nameWithType: CommonObjectSecurity.RemoveAuditRule
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleAll*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleAll
  nameWithType: CommonObjectSecurity.RemoveAuditRuleAll
- uid: System.Security.AccessControl.CommonObjectSecurity.RemoveAuditRuleSpecific*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: RemoveAuditRuleSpecific
  nameWithType: CommonObjectSecurity.RemoveAuditRuleSpecific
- uid: System.Security.AccessControl.CommonObjectSecurity.ResetAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: ResetAccessRule
  nameWithType: CommonObjectSecurity.ResetAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAccessRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAccessRule
  nameWithType: CommonObjectSecurity.SetAccessRule
- uid: System.Security.AccessControl.CommonObjectSecurity.SetAuditRule*
  parent: System.Security.AccessControl.CommonObjectSecurity
  isExternal: false
  name: SetAuditRule
  nameWithType: CommonObjectSecurity.SetAuditRule
