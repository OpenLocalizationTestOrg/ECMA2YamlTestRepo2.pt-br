### YamlMime:ManagedReference
items:
- uid: System.Activities.DurableInstancing.HasActivatableWorkflowEvent
  id: HasActivatableWorkflowEvent
  children:
  - System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor
  langs:
  - csharp
  name: HasActivatableWorkflowEvent
  nameWithType: HasActivatableWorkflowEvent
  fullName: System.Activities.DurableInstancing.HasActivatableWorkflowEvent
  type: Class
  summary: "Representa um evento que gera um repositório de instâncias para notificar os hosts genéricos sobre a existência de instâncias ativáveis no banco de dados de persistência."
  remarks: "Uma instância é *ativável*, se ele não está em estado suspenso ou o estado concluído e satisfaça as seguintes condições:-a instância é *executável*. Uma instância do banco de dados de persistência é considerada como executável se ela atende as seguintes condições:-a instância está desbloqueada e tem um timer pendentes que expirou.          -A instância está desbloqueada e seu status é **executando**.          -A instância tem um bloqueio inválido.      -Não há nenhum host de fluxo de trabalho capaz de carregar que a instância está em execução no computador.       Periodicamente, um repositório de instâncias deve pesquisar por instâncias de fluxo de trabalho ativável que pertencem a um host de fluxo de trabalho que usa o repositório. Ele deve gerar o HasActivatableWorkflowEvent quando ele encontra uma instância ativável no repositório de persistência. Se o repositório de instância não encontrar uma instância ativável no repositório de persistência, ele deve continuar a monitorar o repositório de persistência para todas as instâncias ativáveis.       Depois de gerar o HasActivatableWorkflowEvent, o repositório de instância deve parar de monitorar o repositório de persistência de instâncias ativáveis até que ele recebe e executa <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>.</xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> O monitoramento continua apenas se a execução do comando não retorna qualquer instância de fluxo de trabalho ativável.       Quando um host genérico recebe esse evento, ele executa o <xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand>em relação ao armazenamento de instância para obter os parâmetros de ativação necessários para criar um host de fluxo de trabalho.</xref:System.Activities.DurableInstancing.QueryActivatableWorkflowsCommand> O host genérico usa esses parâmetros de ativação para criar um host de fluxo de trabalho, que por sua vez, carrega e executa a instância de serviço. Os parâmetros de ativação para o tipo de ativação do WAS são: nome do Site, aplicativo caminho (relativo ao site) e serviço de caminho (relativo ao aplicativo). Um repositório de instâncias pode retornar vários conjuntos desses três parâmetros de ativação.       Um host genérico é um host que tem um parâmetro de XName denominado **ActivationType**, que deve ser definido como um valor suportado pelo repositório de instância. Atualmente, o armazenamento de instância de fluxo de trabalho do SQL oferece suporte a hosts genéricos com parâmetro ActivationType definido como valor: **WAS**. Se o ActivationType em todos os não for definido, o armazenamento de instância de fluxo de trabalho do SQL trata o host como um host genérico.      > [!NOTE] > O serviço de gerenciamento de fluxo de trabalho que é fornecido com o código de chamada &quot;Dublin&quot; (extensões de servidor de aplicativos para o .NET 4.0) é um host genérico que tem o tipo de ativação definido como **WAS**."
  syntax:
    content: 'public sealed class HasActivatableWorkflowEvent : System.Runtime.DurableInstancing.InstancePersistenceEvent<System.Activities.DurableInstancing.HasActivatableWorkflowEvent>'
  inheritance:
  - System.Object
  - System.Runtime.DurableInstancing.InstancePersistenceEvent
  - System.Runtime.DurableInstancing.InstancePersistenceEvent`1
  implements: []
  inheritedMembers:
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.Equals(System.Object)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.Equals(System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.GetHashCode
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.Name
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.op_Equality(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent.op_Inequality(System.Runtime.DurableInstancing.InstancePersistenceEvent,System.Runtime.DurableInstancing.InstancePersistenceEvent)
  - System.Runtime.DurableInstancing.InstancePersistenceEvent`1.Value
  platform:
  - net462
- uid: System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor
  id: '#ctor'
  parent: System.Activities.DurableInstancing.HasActivatableWorkflowEvent
  langs:
  - csharp
  name: HasActivatableWorkflowEvent()
  nameWithType: HasActivatableWorkflowEvent.HasActivatableWorkflowEvent()
  fullName: System.Activities.DurableInstancing.HasActivatableWorkflowEvent.HasActivatableWorkflowEvent()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.DurableInstancing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Activities.DurableInstancing.HasActivatableWorkflowEvent&quot;> </xref> classe."
  syntax:
    content: public HasActivatableWorkflowEvent ();
    parameters: []
  overload: System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Runtime.DurableInstancing.InstancePersistenceEvent`1
  isExternal: false
  name: System.Runtime.DurableInstancing.InstancePersistenceEvent<System.Activities.DurableInstancing.HasActivatableWorkflowEvent>
- uid: System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor
  parent: System.Activities.DurableInstancing.HasActivatableWorkflowEvent
  isExternal: false
  name: HasActivatableWorkflowEvent()
  nameWithType: HasActivatableWorkflowEvent.HasActivatableWorkflowEvent()
  fullName: System.Activities.DurableInstancing.HasActivatableWorkflowEvent.HasActivatableWorkflowEvent()
- uid: System.Activities.DurableInstancing.HasActivatableWorkflowEvent.#ctor*
  parent: System.Activities.DurableInstancing.HasActivatableWorkflowEvent
  isExternal: false
  name: HasActivatableWorkflowEvent
  nameWithType: HasActivatableWorkflowEvent.HasActivatableWorkflowEvent
