### YamlMime:ManagedReference
items:
- uid: System.EnterpriseServices.IProcessInitializer
  id: IProcessInitializer
  children:
  - System.EnterpriseServices.IProcessInitializer.Shutdown
  - System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  langs:
  - csharp
  name: IProcessInitializer
  nameWithType: IProcessInitializer
  fullName: System.EnterpriseServices.IProcessInitializer
  type: Interface
  summary: "Métodos de dá suporte a que podem ser chamados quando um componente COM é iniciado ou desligado."
  remarks: "Implemente os métodos de interface IProcessInitializer em componentes de serviço se você deseja executar a inicialização ou código de desligamento quando um processo do servidor (Dllhost.exe) é iniciado ou desligado, respectivamente.       COM+ fornece `Startup` e `Shutdown` eventos quando Dllhost.exe inicia e termina. Esse recurso permite que os componentes COM+ que estão instalados em um aplicativo COM+ para servidor (conhecido como componentes de servidor daqui em diante) para executar a inicialização personalizada e limpar o código. Uma instância de cada componente que implementa a interface IProcessInitializer será criada e armazenada para a duração do processo e chamada sobre os métodos de interface durante a inicialização e desligamento. Quando implementada em um <xref:System.EnterpriseServices.ServicedComponent>, durante o registro do componente, o `InitializesServerApplication` parâmetro o `COMAdminCatalogObject` dentro dos componentes coleção é definida como `true`.</xref:System.EnterpriseServices.ServicedComponent>       Usando o `Startup` e `Shutdown` eventos, você pode inicializar os recursos, criar conexões, inicializar dados compartilhados e executar o código de limpeza. No entanto, você não deve acessar estados que são específicos para COM+ como instâncias de componentes de servidor ainda não foi criadas. Além disso, o código de `Startup` e `Shutdown` eventos devem retornar assim que possível, porque o sistema aguarda somente 90 segundos para Dllhost.exe para se preparar para aceitar as ativações depois que o sistema é iniciado o processo. Se Dllhost.exe não indica que ele está pronto dentro de 90 segundos, o sistema termina o processo. Assim, todas as inicializações precisa ser concluída dentro deste quadro de tempo de processamento. Cada componente do servidor que participa de inicialização deve oferecer suporte à interface IProcessInitializer. Na inicialização de DllHost.exe COM+ cria todos os componentes de servidor que solicitou esse serviço, chamadas `QueryInterface` para a interface IProcessInitializer e chama o <xref:System.EnterpriseServices.IProcessInitializer.Startup%2A>função.</xref:System.EnterpriseServices.IProcessInitializer.Startup%2A> Da mesma forma, quando o processo DllHost.exe está desligado, ele chama o <xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>função naqueles armazenados anteriormente ponteiros de interface.</xref:System.EnterpriseServices.IProcessInitializer.Shutdown%2A>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.Guid("1113f52d-dc7f-4943-aed6-88d04027e32a")]

      [System.Runtime.InteropServices.InterfaceType(System.Runtime.InteropServices.ComInterfaceType.InterfaceIsIUnknown)]

      public interface IProcessInitializer
  implements: []
  platform:
  - net462
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown
  id: Shutdown
  parent: System.EnterpriseServices.IProcessInitializer
  langs:
  - csharp
  name: Shutdown()
  nameWithType: IProcessInitializer.Shutdown()
  fullName: System.EnterpriseServices.IProcessInitializer.Shutdown()
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Executa as ações de desligamento. Chamado quando Dllhost.exe está desligado."
  remarks: "Desligamento não é chamado durante um failfast ou outros eventos de desligamento catastrófico."
  syntax:
    content: public void Shutdown ();
    parameters: []
  overload: System.EnterpriseServices.IProcessInitializer.Shutdown*
  exceptions: []
  platform:
  - net462
- uid: System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  id: Startup(System.Object)
  parent: System.EnterpriseServices.IProcessInitializer
  langs:
  - csharp
  name: Startup(Object)
  nameWithType: IProcessInitializer.Startup(Object)
  fullName: System.EnterpriseServices.IProcessInitializer.Startup(Object)
  type: Method
  assemblies:
  - System.EnterpriseServices
  namespace: System.EnterpriseServices
  summary: "Executa a inicialização na inicialização. Chamado quando Dllhost.exe é iniciado."
  remarks: "O objeto referenciado por `punkProcessControl` implementa um <xref:System.EnterpriseServices.IProcessInitControl>interface.</xref:System.EnterpriseServices.IProcessInitControl> <xref:System.EnterpriseServices.IProcessInitControl>suporta o único método <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>.</xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A></xref:System.EnterpriseServices.IProcessInitControl>       O código de inicialização na inicialização pode chamar o <xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>, com o tempo limite definido igual ao número de segundos restantes antes da inicialização do componente expirar.</xref:System.EnterpriseServices.IProcessInitControl.ResetInitializerTimeout%2A>"
  syntax:
    content: public void Startup (object punkProcessControl);
    parameters:
    - id: punkProcessControl
      type: System.Object
      description: "No Microsoft Windows XP, um ponteiro para o <xref uid=&quot;langword_csharp_IUnknown&quot; name=&quot;IUnknown&quot; href=&quot;&quot;> </xref> interface do componente COM a inicialização. No Microsoft Windows 2000, este argumento é sempre <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.EnterpriseServices.IProcessInitializer.Startup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Shutdown()
  nameWithType: IProcessInitializer.Shutdown()
  fullName: System.EnterpriseServices.IProcessInitializer.Shutdown()
- uid: System.EnterpriseServices.IProcessInitializer.Startup(System.Object)
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Startup(Object)
  nameWithType: IProcessInitializer.Startup(Object)
  fullName: System.EnterpriseServices.IProcessInitializer.Startup(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.EnterpriseServices.IProcessInitializer.Shutdown*
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Shutdown
  nameWithType: IProcessInitializer.Shutdown
- uid: System.EnterpriseServices.IProcessInitializer.Startup*
  parent: System.EnterpriseServices.IProcessInitializer
  isExternal: false
  name: Startup
  nameWithType: IProcessInitializer.Startup
