### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  id: DesignerSerializationManager
  children:
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)
  - System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  langs:
  - csharp
  name: DesignerSerializationManager
  nameWithType: DesignerSerializationManager
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  type: Class
  summary: "Fornece uma implementação de <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager&quot;> </xref> interface."
  remarks: "O <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>interface é projetada para ser uma interface independente de formato para um objeto que controla a serialização.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Essencialmente, ele fornece contexto e serviços para serializadores, o que realmente executam a desserialização. <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>auxilia no processo de desserialização, controlando de objetos.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Isso é semelhante a técnica para o <xref:System.ComponentModel.Design.IDesignerHost>interface: designers, na verdade, fornecem a interface do usuário (IU), e <xref:System.ComponentModel.Design.IDesignerHost>fornece a liga que permite que diferentes designers trabalhem juntos.</xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.IDesignerHost>       A classe DesignerSerializationManager implementa <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager> Ele é projetado para fornecer um formulário genérico de desserialização é semelhante a serializadores de tempo de execução como <xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>.</xref:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter>       A classe DesignerSerializationManager atinge três objetivos:-é um objeto simple, completo, que pode ser usado para desserializar uma variedade de formatos.      -É genérico e não associado a qualquer formato específico. Ele pode ser usado igualmente para desserialização de CodeDOM, bem como a desserialização de marcação.      -É extensível e oferece suporte à serialização diferente métodos que são usados em copiar/colar e cenários de desfazer/refazer.       A serialização de tempo de design tem as seguintes diferenças de serialização do objeto de tempo de execução:-objeto que realiza a serialização é geralmente separado do objeto de tempo de execução, para que a lógica de tempo de design pode ser removida de um componente.      -O esquema de serialização pressupõe que o objeto será criado completamente inicializado e, em seguida, modificadas por meio de chamadas de método e propriedade durante a desserialização.      -Propriedades de um objeto que têm valores que nunca foram definidos no objeto (as propriedades contêm os valores padrão) não são serializados. Por outro lado, o fluxo de desserialização pode ter falhas.      -É dada ênfase a qualidade do conteúdo dentro do fluxo de serialização, em vez da serialização completa de um objeto. Isso significa que, se não houver nenhuma forma definida para serializar um objeto, esse objeto pode ser ignorado em vez de gerar uma exceção. O mecanismo de serialização pode fornecer a heurística para decidir qual falhas podem ser ignoradas e quais são irrecuperável.      -O fluxo de serialização pode ter mais dados do que é necessário para desserialização. Serialização de código fonte, por exemplo, tem misturado com o código necessário para desserializar um gráfico de objeto de código do usuário. Esse código de usuário deve ser ignorado na desserialização e preservado na serialização.       Devido a essas diferenças, um modelo de serialização diferentes se aplica a serialização de tempo de design. Esse modelo utiliza um objeto serializador separado para cada tipo de dados que está sendo serializado. Cada serializador fornece sua contribuição pequena para o problema como um todo. Esses serializadores estejam todos coordenados por meio de um Gerenciador de serialização comum. O Gerenciador de serialização é responsável por manter o estado entre esses serializadores diferentes. Por exemplo, considere a seguinte classe: [!code-cs [System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/add/codesnippet/csharp/t-system.componentmodel._7_1.cs)][!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#2](~/add/codesnippet/visualbasic/t-system.componentmodel._7_1.vb) ] uma instância dessa classe utilizaria três serializadores diferentes: um para `SampleObject`, um para cadeias de caracteres e outro para números inteiros.   O serializador para `SampleObject` é chamado o serializador raiz porque `SampleObject` é a raiz do gráfico de serialização. Gráficos de objeto mais complexos podem ser criados também. Por exemplo, considere o que aconteceria se `SampleObject` foram alterados da seguinte maneira: [!code-cs [System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/add/codesnippet/csharp/t-system.componentmodel._7_2.cs)][!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#11](~/add/codesnippet/visualbasic/t-system.componentmodel._7_2.vb) ] Isso permite `SampleObject` ter um filho que é outra instância de si mesma.   O código a seguir preenche o gráfico de objeto: [!code-cs [System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/add/codesnippet/csharp/t-system.componentmodel._7_3.cs)][!code-vb[System.ComponentModel.Design.Serialization.DesignerSerializationManager.SampleObject#12](~/add/codesnippet/visualbasic/t-system.componentmodel._7_3.vb) ] quando `root` é serializado, haverá quatro serializadores usados: o serializador de uma raiz, um serializador para o filho `SampleObject`, um serializador para `int`e um serializador para `string`.   Serializadores são armazenados em cache com base no tipo, portanto, não há necessidade de criar um serializador para cada instância do `SampleObject`.       A classe DesignerSerializationManager baseia-se a ideia de uma sessão de serialização. Uma sessão mantém o estado que pode ser acessado pelos serializadores vários. Quando uma sessão é descartada, esse estado é destruído. Isso ajuda a garantir que serializadores permanecem em grande parte sem monitoração de estado, e ajuda a limpar os serializadores que estão corrompida. As tabelas a seguir descrevem como o estado é gerenciado no e entre as sessões.      ## Estado global esse estado é de propriedade do objeto do Gerenciador de serialização, mas é independente da sessão atual de serialização.      | Objeto | Uso |   |------------|-----------|   | Provedores de serialização | Objetos podem adicionar a mesmos como provedores de serialização personalizada. Como esses provedores são usados para localizar os serializadores, eles sobreviver além de uma sessão de serialização. |      # # Sessão propriedade estado esse estado é de propriedade de uma sessão e é destruído quando uma sessão é destruída. Consequentemente, acessar quaisquer propriedades ou métodos que poderiam manipular esse estado lançará uma exceção se o Gerenciador de serialização não estiver em uma sessão ativa.      | Objeto | Uso |   |------------|-----------|   | evento <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>| O <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>evento está conectado por um serializador para fornecer a resolução de nomes adicional.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName> Todos os manipuladores são desanexados desse evento quando uma sessão é encerrada. |   | evento <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>| O <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete>é gerado antes de uma sessão é descartada.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SerializationComplete> Em seguida, todos os manipuladores são desanexados desse evento. |   | Tabela de nomes | O Gerenciador de serialização mantém uma tabela que mapeia entre objetos e seus nomes. Serializadores podem resultar em nomes de objetos para facilitar sua identificação. Esta tabela de nome é apagada quando a sessão é encerrada. |   | Cache do serializador | O Gerenciador de serialização mantém um cache de serializadores que foi solicitado a fornecer. Esse cache é limpo quando a sessão termina. O método <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>público pode ser chamado com segurança a qualquer momento, mas seu valor é armazenado em cache somente se ele é chamado de dentro de uma sessão. |   | A pilha de contexto | O Gerenciador de serialização mantém um objeto chamado a pilha de contexto, você pode acessar com o <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A>propriedade.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A> Serializadores podem usar esta pilha para armazenar informações adicionais que estão disponíveis para outros serializadores. Por exemplo, um serializador que é serializar um valor de propriedade pode enviar por push o nome da propriedade na pilha de serialização antes de solicitar o valor para serializar. Esta pilha é limpo quando a sessão é encerrada. |   | Lista de erros | O Gerenciador de serialização mantém uma lista de erros que ocorreram durante a serialização. Essa lista, que é acessada por meio de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>propriedade, será apagada quando a sessão é encerrada.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> Acessando o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>propriedade entre sessões resultará em uma exceção. |</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>"
  syntax:
    content: 'public class DesignerSerializationManager : IServiceProvider, System.ComponentModel.Design.Serialization.IDesignerSerializationManager'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.Design.Serialization.IDesignerSerializationManager
  - System.IServiceProvider
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: DesignerSerializationManager()
  nameWithType: DesignerSerializationManager.DesignerSerializationManager()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager()
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref> classe."
  remarks: "Esse construtor define o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>e <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>propriedades `true`.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>"
  syntax:
    content: public DesignerSerializationManager ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: DesignerSerializationManager(IServiceProvider)
  nameWithType: DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref> classe com o provedor de serviço em questão."
  remarks: "Se um serializador de solicitações de serviços que não podem ser atendidos pelo Gerenciador de serialização, a implementação padrão encaminhar essas solicitações para o `provider` parâmetro.       Esse construtor define o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>e <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>propriedades `true`.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>"
  syntax:
    content: public DesignerSerializationManager (IServiceProvider provider);
    parameters:
    - id: provider
      type: System.IServiceProvider
      description: "An <xref:System.IServiceProvider>.</xref:System.IServiceProvider>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>provider</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  id: Container
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: Container
  nameWithType: DesignerSerializationManager.Container
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém ou define o contêiner para este Gerenciador de serialização."
  remarks: "Se existe um contêiner, todos os componentes que são criados pelo Gerenciador de serialização serão adicionados ao contêiner. A implementação padrão dessa propriedade pesquisará o provedor de serviços para um <xref:System.ComponentModel.Design.IDesignerHost>e usar o contêiner fornecido pelo host do designer, um existe.</xref:System.ComponentModel.Design.IDesignerHost> Caso contrário, essa propriedade retornará `null` e componentes não serão adicionados a um contêiner."
  syntax:
    content: public System.ComponentModel.IContainer Container { get; set; }
    return:
      type: System.ComponentModel.IContainer
      description: "O <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> à qual o Gerenciador de serialização adicionará componentes."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O Gerenciador de serialização tem uma sessão de serialização ativa."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  id: CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Cria uma instância de um tipo."
  remarks: "Esse método é chamado pelo serializadores quando tentam criar uma instância de um tipo. A implementação padrão cria uma nova instância do tipo, ou pode retornar uma instância existente, dependendo dos valores da <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A>e <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>Propriedades.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames%2A> O <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>método usa reflexão para criar instâncias e executará alguns genérico <xref:System.IConvertible>transformações em parâmetros para localizar um construtor correspondente.</xref:System.IConvertible> </xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance%2A>"
  syntax:
    content: protected virtual object CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo para criar uma instância do."
    - id: arguments
      type: System.Collections.ICollection
      description: "Os parâmetros do construtor do tipo. Isso pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma coleção vazia para chamar o construtor padrão."
    - id: name
      type: System.String
      description: "Um nome para dar ao objeto. Se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o objeto não terá um nome, a menos que o objeto é adicionado a um contêiner e o contêiner fornece o objeto de um nome."
    - id: addToContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para adicionar o objeto para o contêiner, se o objeto implementa <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Object
      description: "Uma nova instância do tipo especificado pelo <code> type </code>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*
  exceptions:
  - type: System.Runtime.Serialization.SerializationException
    commentId: T:System.Runtime.Serialization.SerializationException
    description: "<code>type</code>não tem um construtor que aceite parâmetros na <code>arguments</code>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession
  id: CreateSession
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: CreateSession()
  nameWithType: DesignerSerializationManager.CreateSession()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Cria uma nova sessão de serialização."
  remarks: "A maioria dos dados dentro do Gerenciador de serialização é transitórios e existe somente durante a vida útil de uma sessão de serialização. Quando uma sessão é descartada, serialização é considerada concluída e estado transiente está desmarcado. Isso permite que uma única instância de um Gerenciador de serialização a ser usado para serializar várias árvores de objeto. Alguns estados, incluindo o provedor de serviços e quaisquer provedores de serialização personalizada que foram adicionados ao Gerenciador de serialização, abrangem as sessões."
  syntax:
    content: public IDisposable CreateSession ();
    parameters: []
    return:
      type: System.IDisposable
      description: "Um <xref:System.IDisposable>que representa uma nova sessão de serialização.</xref:System.IDisposable>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O Gerenciador de serialização é já dentro de uma sessão. Esta versão do <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager&quot;> </xref> não oferece suporte a sessões simultâneas."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  id: Errors
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: Errors
  nameWithType: DesignerSerializationManager.Errors
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém a lista de erros que ocorreram durante a serialização ou desserialização."
  remarks: "Você somente pode ler a lista de erros durante uma sessão de serialização ativa."
  syntax:
    content: public System.Collections.IList Errors { get; }
    return:
      type: System.Collections.IList
      description: "A lista de erros que ocorreram durante a serialização ou desserialização."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Essa propriedade foi acessada fora de uma sessão de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)
  id: GetRuntimeType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetRuntimeType(String)
  nameWithType: DesignerSerializationManager.GetRuntimeType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém o tipo correspondente ao nome do tipo especificado."
  syntax:
    content: public Type GetRuntimeType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "O nome do tipo a ser obtido."
    return:
      type: System.Type
      description: "O tipo especificado."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)
  id: GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(Type,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém o serializador para o tipo de objeto em questão."
  remarks: "Você pode solicitar o tipo de serializador desejado. Este método retorna `null` se não houver nenhum serializador do tipo solicitado para o tipo de objeto especificado."
  syntax:
    content: public object GetSerializer (Type objectType, Type serializerType);
    parameters:
    - id: objectType
      type: System.Type
      description: "O tipo de objeto para o qual recuperar o serializador."
    - id: serializerType
      type: System.Type
      description: "O tipo de serializador a recuperar."
    return:
      type: System.Object
      description: "O serializador para <code> objectType </code>, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, se não encontrado."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>objectType</code>or <code>serializerType</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)
  id: GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetService(Type)
  nameWithType: DesignerSerializationManager.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém o serviço solicitado."
  remarks: "O método GetService fornece acesso ao contêiner subjacente ou provedor de serviço que foi definida no construtor."
  syntax:
    content: protected virtual object GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "O tipo de serviço para recuperar."
    return:
      type: System.Object
      description: "O serviço solicitado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o serviço não pode ser resolvido."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)
  id: GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: GetType(String)
  nameWithType: DesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém o tipo solicitado."
  remarks: "O <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A>método pesquisará o provedor de serviços para um <xref:System.ComponentModel.Design.ITypeResolutionService>e, se disponível, ele delegará a esse serviço para resolver o tipo.</xref:System.ComponentModel.Design.ITypeResolutionService> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> Se um <xref:System.ComponentModel.Design.ITypeResolutionService>não estiver disponível, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A>chamará o <xref:System.Object.GetType%2A?displayProperty=fullName>método.</xref:System.Object.GetType%2A?displayProperty=fullName> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType%2A> </xref:System.ComponentModel.Design.ITypeResolutionService>"
  syntax:
    content: protected virtual Type GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "O nome do tipo para recuperar."
    return:
      type: System.Type
      description: "O tipo solicitado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o tipo não pode ser resolvido."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  id: OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: OnResolveName(ResolveNameEventArgs)
  nameWithType: DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Gera o <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnResolveName também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnResolveName (System.ComponentModel.Design.Serialization.ResolveNameEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
      description: "Um <xref href=&quot;System.ComponentModel.Design.Serialization.ResolveNameEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)
  id: OnSessionCreated(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: OnSessionCreated(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionCreated(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Gera o <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnSessionCreated também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSessionCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)
  id: OnSessionDisposed(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: OnSessionDisposed(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionDisposed(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(EventArgs)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Gera o <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnSessionDisposed também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSessionDisposed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  id: PreserveNames
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: PreserveNames
  nameWithType: DesignerSerializationManager.PreserveNames
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém ou define um valor que indica se o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>método deve verificar a presença do nome fornecido no contêiner.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>"
  remarks: "A propriedade PreserveNames determina o comportamento do <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>método.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Se `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>passará o nome do componente especificado.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Se `false`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>verifica a presença do nome fornecido no contêiner.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Se o nome não existe no contêiner, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>usará o nome fornecido.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Se o nome existe no contêiner, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>passará um valor nulo como o nome de um componente ao adicioná-lo para o contêiner, assim, dando a ele um novo nome.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Essa segunda é útil para implementar um serializador que duplica sempre objetos, em vez de supondo que esses objetos não existem. Colar comandos geralmente usam esse tipo de serializador.       Você só pode alterar essa propriedade quando você não estiver em uma sessão de serialização."
  syntax:
    content: public bool PreserveNames { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <> </> *> passará o nome do componente especificado; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se <> </> *> verifica a presença do nome fornecido no contêiner. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Essa propriedade foi alterada de dentro de uma sessão de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  id: PropertyProvider
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: PropertyProvider
  nameWithType: DesignerSerializationManager.PropertyProvider
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém o objeto que deve ser usado para fornecer as propriedades para o Gerenciador de serialização <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>propriedade.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>"
  remarks: "A propriedade PropertyProvider fornece uma maneira para dar o Gerenciador de serialização de um conjunto de propriedades de serialização que serializadores podem usar para configurar seu comportamento.       As propriedades públicas do objeto serão inspecionadas e encapsuladas em novos descritores de propriedade que tem um objeto de destino do Gerenciador de serialização."
  syntax:
    content: public object PropertyProvider { get; set; }
    return:
      type: System.Object
      description: "O objeto que deve ser usado para fornecer as propriedades para o Gerenciador de serialização <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>propriedade.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  id: RecycleInstances
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: RecycleInstances
  nameWithType: DesignerSerializationManager.RecycleInstances
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém ou define um sinalizador que indica se <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>sempre criará uma nova instância de um tipo.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>"
  remarks: "Se a propriedade RecycleInstances `false`, o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>método sempre criará uma nova instância de um tipo.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Se for RecycleInstances `true`, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>pesquisará primeiro a tabela de nome e o contêiner para um objeto do mesmo nome.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Se tal objeto exista e seja do mesmo tipo, <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>retornará a instância existente.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> Essa segunda é útil para implementar um serializador que aplica o estado de serialização para um conjunto de objetos existentes, em vez de criar sempre uma nova árvore. O **desfazer** comando geralmente usa esse tipo de serializador.       No caso em que é a propriedade RecycleInstances `true`, o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>propriedade mais irá modificar o comportamento de <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>dependendo dos tipos de dois objetos.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes%2A>"
  syntax:
    content: public bool RecycleInstances { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <> </> *> retornará a instância existente; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se <> </> *> criará uma nova instância de um tipo. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O Gerenciador de serialização tem uma sessão de serialização ativa."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  id: SessionCreated
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: SessionCreated
  nameWithType: DesignerSerializationManager.SessionCreated
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Ocorre quando uma sessão é criada."
  syntax:
    content: public event EventHandler SessionCreated;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  id: SessionDisposed
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: SessionDisposed
  nameWithType: DesignerSerializationManager.SessionDisposed
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Ocorre quando uma sessão é descartada."
  syntax:
    content: public event EventHandler SessionDisposed;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Adiciona um provedor de serialização personalizada para o Gerenciador de serialização."
  remarks: "Quando o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>método é usado para solicitar um provedor de serialização, o Gerenciador de serialização consulta os provedores de serialização personalizada primeiro antes procurando nos metadados do tipo de serializador adequado.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer%2A>"
  syntax:
    content: void IDesignerSerializationManager.AddSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);
    parameters:
    - id: provider
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
      description: "O provedor de serialização para adicionar."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém a pilha de contexto para esta sessão de serialização."
  remarks: "A pilha de contexto fornece uma área de armazenamento definida pelo usuário, implementada como uma pilha. Essa área de armazenamento é uma maneira útil para fornecer comunicação entre serializadores, como a serialização é um processo geralmente hierárquico."
  syntax:
    content: System.ComponentModel.Design.Serialization.ContextStack System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context { get; }
    return:
      type: System.ComponentModel.Design.Serialization.ContextStack
      description: "Um <xref href=&quot;System.ComponentModel.Design.Serialization.ContextStack&quot;> </xref> que armazena dados."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Essa propriedade foi acessada fora de uma sessão de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Implementa o <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*>método.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance*>"
  syntax:
    content: object IDesignerSerializationManager.CreateInstance (Type type, System.Collections.ICollection arguments, string name, bool addToContainer);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de dados para criar."
    - id: arguments
      type: System.Collections.ICollection
      description: "Os argumentos para passar para o construtor para este tipo."
    - id: name
      type: System.String
      description: "O nome do objeto. Esse nome pode ser usado para acessar o objeto mais tarde por meio de <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*>.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance*> Se <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> for passado, o objeto ainda será criado, mas não pode ser acessado pelo nome."
    - id: addToContainer
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para adicionar esse objeto para o contêiner de design. O objeto deve implementar <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> para que isso tenha efeito."
    return:
      type: System.Object
      description: "A instância do objeto recém-criado."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Recupera uma instância de um objeto criado do nome especificado."
  syntax:
    content: object IDesignerSerializationManager.GetInstance (string name);
    parameters:
    - id: name
      type: System.String
      description: "O nome do objeto a ser recuperada."
    return:
      type: System.Object
      description: "Uma instância do objeto com o nome fornecido, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum objeto com esse nome pode ser encontrado."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>name</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Essa propriedade foi acessada fora de uma sessão de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Recupera um nome para o objeto especificado."
  remarks: "Se o método IDesignerSerializationManager.GetName não é possível localizar um nome correspondente para o `value` parâmetro, ele gera o <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>evento antes de retornar `null`.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ResolveName>"
  syntax:
    content: string IDesignerSerializationManager.GetName (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto para o qual recuperar o nome."
    return:
      type: System.String
      description: "O nome do objeto, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o objeto for sem nome."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>value</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Essa propriedade foi acessada fora de uma sessão de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém um serializador do tipo solicitado para o tipo de objeto especificado."
  syntax:
    content: object IDesignerSerializationManager.GetSerializer (Type objectType, Type serializerType);
    parameters:
    - id: objectType
      type: System.Type
      description: "O tipo do objeto para obter o serializador para."
    - id: serializerType
      type: System.Type
      description: "O tipo de serializador para recuperar."
    return:
      type: System.Object
      description: "Uma instância do serializador solicitado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum serializador adequado pode ser localizado."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém um tipo do nome especificado."
  syntax:
    content: Type IDesignerSerializationManager.GetType (string typeName);
    parameters:
    - id: typeName
      type: System.String
      description: "O nome totalmente qualificado do tipo de carga."
    return:
      type: System.Type
      description: "Uma instância do tipo, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o tipo não pode ser carregado."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Essa propriedade foi acessada fora de uma sessão de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Implementa o <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>propriedade.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties*>"
  syntax:
    content: System.ComponentModel.PropertyDescriptorCollection System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties { get; }
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Um <xref href=&quot;System.ComponentModel.PropertyDescriptorCollection&quot;> </xref> que contém as propriedades a serem serializados."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Remove um provedor de serialização adicionado anteriormente."
  remarks: "O método IDesignerSerializationManager.RemoveSerializationProvider remove um provedor de serialização personalizada que foi adicionado anteriormente por uma chamada para o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A>método.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23AddSerializationProvider%2A>"
  syntax:
    content: void IDesignerSerializationManager.RemoveSerializationProvider (System.ComponentModel.Design.Serialization.IDesignerSerializationProvider provider);
    parameters:
    - id: provider
      type: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.IDesignerSerializationProvider&quot;> </xref> para remover."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Usado para relatar um erro recuperável na serialização."
  remarks: "Serializadores podem ser gravados para manipular erros recuperáveis normalmente chamando o método IDesignerSerializationManager.ReportError com as informações de erro. O Gerenciador de serialização pode oferecer suporte a uma lista de erros de emissão de relatórios depois que ela é concluída, ou pode lançar uma exceção desse método e anular o processo de serialização. O serializador deve continuar depois de chamar essa função.       IDesignerSerializationManager.ReportError adiciona o `errorInformation` parâmetro para o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A>coleção.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors%2A> Se `errorInformation` é `null`, nenhuma ação será tomada."
  syntax:
    content: void IDesignerSerializationManager.ReportError (object errorInformation);
    parameters:
    - id: errorInformation
      type: System.Object
      description: "Um objeto que contém as informações de erro, geralmente de tipo <xref:System.String>ou <xref:System.Exception>.</xref:System.Exception> </xref:System.String>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Essa propriedade foi acessada fora de uma sessão de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  id: System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Define o nome do objeto especificado."
  remarks: "O método IDesignerSerializationManager.SetName fornece uma maneira de definir o nome de um objeto existente. Isso permite a criação de uma instância do objeto por meio de uma chamada para o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A>método, evitando a sobrecarga do <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>método.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.System%23ComponentModel%23Design%23Serialization%23IDesignerSerializationManager%23GetInstance%2A>"
  syntax:
    content: void IDesignerSerializationManager.SetName (object instance, string name);
    parameters:
    - id: instance
      type: System.Object
      description: "O objeto para definir o nome."
    - id: name
      type: System.String
      description: "Um <xref:System.String>usado como o nome do objeto.</xref:System.String>"
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou ambos os parâmetros são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O objeto especificado por instância já tem um nome, ou <code> name </code> já está em uso por outro objeto nomeado."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Essa propriedade foi acessada fora de uma sessão de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)
  id: System#IServiceProvider#GetService(System.Type)
  isEii: true
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: System.IServiceProvider.GetService(Type)
  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.IServiceProvider.GetService(Type)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Para obter uma descrição desse membro, consulte o <xref:System.IServiceProvider.GetService*>método.</xref:System.IServiceProvider.GetService*>"
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager>instância é convertida em um <xref:System.IServiceProvider>interface.</xref:System.IServiceProvider> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager>"
  syntax:
    content: object IServiceProvider.GetService (Type serviceType);
    parameters:
    - id: serviceType
      type: System.Type
      description: "Um objeto que especifica o tipo de objeto de serviço a ser obtido."
    return:
      type: System.Object
      description: "Um objeto de serviço do tipo <code> serviceType </code>.       - ou - <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhum objeto de serviço do tipo <code> serviceType </code>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  id: ValidateRecycledTypes
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  langs:
  - csharp
  name: ValidateRecycledTypes
  nameWithType: DesignerSerializationManager.ValidateRecycledTypes
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  type: Property
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém ou define um sinalizador que indica se o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>método vai verificar que a correspondência de nomes referem-se para o mesmo tipo.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>"
  remarks: "A propriedade ValidateRecycledTypes modifica o comportamento do <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>método quando o <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A>é de propriedade `true`, conforme detalhado na tabela a seguir.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances%2A> </xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance%2A>      | `RecycleInstances`|`ValidateRecycledTypes`| Comportamento de `CreateInstance`|   |------------------------|-----------------------------|----------------------------------|   | `false`|`true` or `false`| Sempre crie uma nova instância do tipo especificado |   | `true`|`false`| Se uma instância correspondente for encontrada será retornado, independentemente de seu tipo. |   | `true`|`true`| Se uma instância correspondente for encontrada, ele é retornado somente se seu tipo for a mesma especificada na chamada do método. |       ValidateRecycledTypes é útil para metamorfose um tipo de objeto para outro se eles têm propriedades semelhantes, mas não compartilham nenhum pai comum ou interface."
  syntax:
    content: public bool ValidateRecycledTypes { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se <xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*>verifica tipos; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se não estiver.</xref:System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*> O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O Gerenciador de serialização tem uma sessão de serialização ativa."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Runtime.Serialization.SerializationException
  isExternal: true
  name: System.Runtime.Serialization.SerializationException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: DesignerSerializationManager()
  nameWithType: DesignerSerializationManager.DesignerSerializationManager()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager()
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: DesignerSerializationManager(IServiceProvider)
  nameWithType: DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.DesignerSerializationManager(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Container
  nameWithType: DesignerSerializationManager.Container
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateSession()
  nameWithType: DesignerSerializationManager.CreateSession()
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Errors
  nameWithType: DesignerSerializationManager.Errors
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors
- uid: System.Collections.IList
  parent: System.Collections
  isExternal: true
  name: IList
  nameWithType: IList
  fullName: System.Collections.IList
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetRuntimeType(String)
  nameWithType: DesignerSerializationManager.GetRuntimeType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer(Type,Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetService(Type)
  nameWithType: DesignerSerializationManager.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService(Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetType(String)
  nameWithType: DesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(System.ComponentModel.Design.Serialization.ResolveNameEventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnResolveName(ResolveNameEventArgs)
  nameWithType: DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName(ResolveNameEventArgs)
- uid: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: ResolveNameEventArgs
  nameWithType: ResolveNameEventArgs
  fullName: System.ComponentModel.Design.Serialization.ResolveNameEventArgs
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionCreated(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionCreated(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(System.EventArgs)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionDisposed(EventArgs)
  nameWithType: DesignerSerializationManager.OnSessionDisposed(EventArgs)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed(EventArgs)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PreserveNames
  nameWithType: DesignerSerializationManager.PreserveNames
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PropertyProvider
  nameWithType: DesignerSerializationManager.PropertyProvider
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: RecycleInstances
  nameWithType: DesignerSerializationManager.RecycleInstances
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: SessionCreated
  nameWithType: DesignerSerializationManager.SessionCreated
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionCreated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: SessionDisposed
  nameWithType: DesignerSerializationManager.SessionDisposed
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.SessionDisposed
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider(IDesignerSerializationProvider)
- uid: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerSerializationProvider
  nameWithType: IDesignerSerializationProvider
  fullName: System.ComponentModel.Design.Serialization.IDesignerSerializationProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
- uid: System.ComponentModel.Design.Serialization.ContextStack
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: ContextStack
  nameWithType: ContextStack
  fullName: System.ComponentModel.Design.Serialization.ContextStack
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance(System.Type,System.Collections.ICollection,System.String,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance(Type,ICollection,String,Boolean)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName(System.Object)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName(Object)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer(System.Type,System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer(Type,Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType(System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType(String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider(System.ComponentModel.Design.Serialization.IDesignerSerializationProvider)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider(IDesignerSerializationProvider)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError(System.Object)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError(Object)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName(System.Object,System.String)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName(Object,String)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService(System.Type)
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.IServiceProvider.GetService(Type)
  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService(Type)
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System.IServiceProvider.GetService(Type)
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: ValidateRecycledTypes
  nameWithType: DesignerSerializationManager.ValidateRecycledTypes
  fullName: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.#ctor*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: DesignerSerializationManager
  nameWithType: DesignerSerializationManager.DesignerSerializationManager
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Container*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Container
  nameWithType: DesignerSerializationManager.Container
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateInstance*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateInstance
  nameWithType: DesignerSerializationManager.CreateInstance
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.CreateSession*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: CreateSession
  nameWithType: DesignerSerializationManager.CreateSession
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.Errors*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: Errors
  nameWithType: DesignerSerializationManager.Errors
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetRuntimeType*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetRuntimeType
  nameWithType: DesignerSerializationManager.GetRuntimeType
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetSerializer*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetSerializer
  nameWithType: DesignerSerializationManager.GetSerializer
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetService*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetService
  nameWithType: DesignerSerializationManager.GetService
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.GetType*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: GetType
  nameWithType: DesignerSerializationManager.GetType
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnResolveName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnResolveName
  nameWithType: DesignerSerializationManager.OnResolveName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionCreated*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionCreated
  nameWithType: DesignerSerializationManager.OnSessionCreated
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.OnSessionDisposed*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: OnSessionDisposed
  nameWithType: DesignerSerializationManager.OnSessionDisposed
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PreserveNames*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PreserveNames
  nameWithType: DesignerSerializationManager.PreserveNames
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.PropertyProvider*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: PropertyProvider
  nameWithType: DesignerSerializationManager.PropertyProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.RecycleInstances*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: RecycleInstances
  nameWithType: DesignerSerializationManager.RecycleInstances
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#AddSerializationProvider*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.AddSerializationProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Context*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Context
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#CreateInstance*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.CreateInstance
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetInstance*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetInstance
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetSerializer*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetSerializer
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#GetType*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.GetType
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#Properties*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.Properties
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#RemoveSerializationProvider*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.RemoveSerializationProvider
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#ReportError*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.ReportError
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#ComponentModel#Design#Serialization#IDesignerSerializationManager#SetName*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName
  nameWithType: DesignerSerializationManager.System.ComponentModel.Design.Serialization.IDesignerSerializationManager.SetName
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.System#IServiceProvider#GetService*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: System.IServiceProvider.GetService
  nameWithType: DesignerSerializationManager.System.IServiceProvider.GetService
- uid: System.ComponentModel.Design.Serialization.DesignerSerializationManager.ValidateRecycledTypes*
  parent: System.ComponentModel.Design.Serialization.DesignerSerializationManager
  isExternal: false
  name: ValidateRecycledTypes
  nameWithType: DesignerSerializationManager.ValidateRecycledTypes
