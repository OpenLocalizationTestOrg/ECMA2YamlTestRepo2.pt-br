### YamlMime:ManagedReference
items:
- uid: System.Activities.Presentation.Model.EditingScope
  id: EditingScope
  children:
  - System.Activities.Presentation.Model.EditingScope.CanComplete
  - System.Activities.Presentation.Model.EditingScope.Changes
  - System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges
  - System.Activities.Presentation.Model.EditingScope.OnComplete
  - System.Activities.Presentation.Model.EditingScope.OnException(System.Exception)
  - System.Activities.Presentation.Model.EditingScope.OnRevert(System.Boolean)
  langs:
  - csharp
  name: EditingScope
  nameWithType: EditingScope
  fullName: System.Activities.Presentation.Model.EditingScope
  type: Class
  summary: "Um escopo de edição representa uma coleção de alterações para o <xref href=&quot;System.Activities.Presentation.Model.ModelItem&quot;> </xref> árvore que pode ser confirmada ou revertida como uma unidade atômica de trabalho."
  remarks: "Isso é útil para em lote de um conjunto de alterações a vários <xref:System.Activities.Presentation.Model.ModelItem>objetos.</xref:System.Activities.Presentation.Model.ModelItem> Como exemplo, as atividades de mensagens, as alterações feitas as caixas de diálogo geradas afetará vários valores de propriedade. No entanto, como todas as alterações que vêm de caixa de diálogo gerado, a necessidade de alterações a ser considerado como um lote e desfeitas como uma única unidade de trabalho. Para obter mais detalhes sobre o uso, consulte o exemplo de escopo de edição"
  syntax:
    content: 'public class EditingScope : System.Activities.Presentation.Model.ModelEditingScope'
  inheritance:
  - System.Object
  - System.Activities.Presentation.Model.ModelEditingScope
  implements: []
  inheritedMembers:
  - System.Activities.Presentation.Model.ModelEditingScope.Complete
  - System.Activities.Presentation.Model.ModelEditingScope.Description
  - System.Activities.Presentation.Model.ModelEditingScope.Dispose
  - System.Activities.Presentation.Model.ModelEditingScope.Dispose(System.Boolean)
  - System.Activities.Presentation.Model.ModelEditingScope.Revert
  platform:
  - net462
- uid: System.Activities.Presentation.Model.EditingScope.CanComplete
  id: CanComplete
  parent: System.Activities.Presentation.Model.EditingScope
  langs:
  - csharp
  name: CanComplete()
  nameWithType: EditingScope.CanComplete()
  fullName: System.Activities.Presentation.Model.EditingScope.CanComplete()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Determina se a instância atual de escopo de edição pode ser concluída."
  syntax:
    content: protected override bool CanComplete ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o escopo de edição pode ser concluída; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.EditingScope.CanComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.EditingScope.Changes
  id: Changes
  parent: System.Activities.Presentation.Model.EditingScope
  langs:
  - csharp
  name: Changes
  nameWithType: EditingScope.Changes
  fullName: System.Activities.Presentation.Model.EditingScope.Changes
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém uma lista de alterações."
  syntax:
    content: public System.Collections.Generic.List<System.Activities.Presentation.Model.Change> Changes { get; }
    return:
      type: System.Collections.Generic.List{System.Activities.Presentation.Model.Change}
      description: "Retorna um &lt;xref:System.Collections.Generic.List%601&gt; que contém as alterações."
  overload: System.Activities.Presentation.Model.EditingScope.Changes*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges
  id: HasEffectiveChanges
  parent: System.Activities.Presentation.Model.EditingScope
  langs:
  - csharp
  name: HasEffectiveChanges
  nameWithType: EditingScope.HasEffectiveChanges
  fullName: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges
  type: Property
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Obtém um valor booleano que especifica se as alterações foram aplicadas ao escopo de edição."
  syntax:
    content: public bool HasEffectiveChanges { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as alterações tiverem sido aplicadas ao escopo de edição; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>..."
  overload: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.EditingScope.OnComplete
  id: OnComplete
  parent: System.Activities.Presentation.Model.EditingScope
  langs:
  - csharp
  name: OnComplete()
  nameWithType: EditingScope.OnComplete()
  fullName: System.Activities.Presentation.Model.EditingScope.OnComplete()
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Gera o evento de conclusão."
  syntax:
    content: protected override void OnComplete ();
    parameters: []
  overload: System.Activities.Presentation.Model.EditingScope.OnComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.EditingScope.OnException(System.Exception)
  id: OnException(System.Exception)
  parent: System.Activities.Presentation.Model.EditingScope
  langs:
  - csharp
  name: OnException(Exception)
  nameWithType: EditingScope.OnException(Exception)
  fullName: System.Activities.Presentation.Model.EditingScope.OnException(Exception)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Manipula a exceção especificada."
  syntax:
    content: protected override bool OnException (Exception e);
    parameters:
    - id: e
      type: System.Exception
      description: "A exceção para tratar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a exceção é manipulada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Presentation.Model.EditingScope.OnException*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Presentation.Model.EditingScope.OnRevert(System.Boolean)
  id: OnRevert(System.Boolean)
  parent: System.Activities.Presentation.Model.EditingScope
  langs:
  - csharp
  name: OnRevert(Boolean)
  nameWithType: EditingScope.OnRevert(Boolean)
  fullName: System.Activities.Presentation.Model.EditingScope.OnRevert(Boolean)
  type: Method
  assemblies:
  - System.Activities.Presentation
  namespace: System.Activities.Presentation.Model
  summary: "Gera o evento de reversão."
  syntax:
    content: protected override void OnRevert (bool finalizing);
    parameters:
    - id: finalizing
      type: System.Boolean
      description: "Não usado nesta implementação."
  overload: System.Activities.Presentation.Model.EditingScope.OnRevert*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Activities.Presentation.Model.ModelEditingScope
  isExternal: false
  name: System.Activities.Presentation.Model.ModelEditingScope
- uid: System.Activities.Presentation.Model.EditingScope.CanComplete
  parent: System.Activities.Presentation.Model.EditingScope
  isExternal: false
  name: CanComplete()
  nameWithType: EditingScope.CanComplete()
  fullName: System.Activities.Presentation.Model.EditingScope.CanComplete()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Presentation.Model.EditingScope.Changes
  parent: System.Activities.Presentation.Model.EditingScope
  isExternal: false
  name: Changes
  nameWithType: EditingScope.Changes
  fullName: System.Activities.Presentation.Model.EditingScope.Changes
- uid: System.Collections.Generic.List{System.Activities.Presentation.Model.Change}
  parent: System.Collections.Generic
  isExternal: true
  name: List<Change>
  nameWithType: List<Change>
  fullName: System.Collections.Generic.List<System.Activities.Presentation.Model.Change>
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    nameWithType: List
    fullName: List<System.Activities.Presentation.Model.Change>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Presentation.Model.Change
    name: Change
    nameWithType: Change
    fullName: Change
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges
  parent: System.Activities.Presentation.Model.EditingScope
  isExternal: false
  name: HasEffectiveChanges
  nameWithType: EditingScope.HasEffectiveChanges
  fullName: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges
- uid: System.Activities.Presentation.Model.EditingScope.OnComplete
  parent: System.Activities.Presentation.Model.EditingScope
  isExternal: false
  name: OnComplete()
  nameWithType: EditingScope.OnComplete()
  fullName: System.Activities.Presentation.Model.EditingScope.OnComplete()
- uid: System.Activities.Presentation.Model.EditingScope.OnException(System.Exception)
  parent: System.Activities.Presentation.Model.EditingScope
  isExternal: false
  name: OnException(Exception)
  nameWithType: EditingScope.OnException(Exception)
  fullName: System.Activities.Presentation.Model.EditingScope.OnException(Exception)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Activities.Presentation.Model.EditingScope.OnRevert(System.Boolean)
  parent: System.Activities.Presentation.Model.EditingScope
  isExternal: false
  name: OnRevert(Boolean)
  nameWithType: EditingScope.OnRevert(Boolean)
  fullName: System.Activities.Presentation.Model.EditingScope.OnRevert(Boolean)
- uid: System.Activities.Presentation.Model.EditingScope.CanComplete*
  parent: System.Activities.Presentation.Model.EditingScope
  isExternal: false
  name: CanComplete
  nameWithType: EditingScope.CanComplete
- uid: System.Activities.Presentation.Model.EditingScope.Changes*
  parent: System.Activities.Presentation.Model.EditingScope
  isExternal: false
  name: Changes
  nameWithType: EditingScope.Changes
- uid: System.Activities.Presentation.Model.EditingScope.HasEffectiveChanges*
  parent: System.Activities.Presentation.Model.EditingScope
  isExternal: false
  name: HasEffectiveChanges
  nameWithType: EditingScope.HasEffectiveChanges
- uid: System.Activities.Presentation.Model.EditingScope.OnComplete*
  parent: System.Activities.Presentation.Model.EditingScope
  isExternal: false
  name: OnComplete
  nameWithType: EditingScope.OnComplete
- uid: System.Activities.Presentation.Model.EditingScope.OnException*
  parent: System.Activities.Presentation.Model.EditingScope
  isExternal: false
  name: OnException
  nameWithType: EditingScope.OnException
- uid: System.Activities.Presentation.Model.EditingScope.OnRevert*
  parent: System.Activities.Presentation.Model.EditingScope
  isExternal: false
  name: OnRevert
  nameWithType: EditingScope.OnRevert
