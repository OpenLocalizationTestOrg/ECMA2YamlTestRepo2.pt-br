### YamlMime:ManagedReference
items:
- uid: System.Web.ClientServices.ClientFormsIdentity
  id: ClientFormsIdentity
  children:
  - System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  - System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  - System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  - System.Web.ClientServices.ClientFormsIdentity.Dispose
  - System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  - System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  - System.Web.ClientServices.ClientFormsIdentity.Name
  - System.Web.ClientServices.ClientFormsIdentity.Provider
  - System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  langs:
  - csharp
  name: ClientFormsIdentity
  nameWithType: ClientFormsIdentity
  fullName: System.Web.ClientServices.ClientFormsIdentity
  type: Class
  summary: "Representa uma identidade de usuário autenticada para serviços de aplicativo cliente usando a autenticação de formulários."
  remarks: "O recurso de serviços de aplicativo cliente usa essa classe para representar um usuário autenticado. Quando você configura seu aplicativo para usar a autenticação de formulários e serviços de aplicativo cliente, você pode autenticar um usuário chamando o `static` <xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName>método.</xref:System.Web.Security.Membership.ValidateUser%2A?displayProperty=fullName> Após a autenticação, você pode recuperar uma referência para a instância atual do ClientFormsIdentity por meio de <xref:System.Security.Principal.IPrincipal.Identity%2A>propriedade do <xref:System.Security.Principal.IPrincipal>recuperados por meio do `static` <xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName>propriedade.</xref:System.Threading.Thread.CurrentPrincipal%2A?displayProperty=fullName> </xref:System.Security.Principal.IPrincipal> </xref:System.Security.Principal.IPrincipal.Identity%2A> Para obter mais informações, consulte [serviços de aplicativo cliente](~/add/includes/ajax-current-ext-md.md).       Normalmente você irá acessar um objeto ClientFormsIdentity como uma <xref:System.Security.Principal.IIdentity>referência para evitar uma dependência direta desta classe.</xref:System.Security.Principal.IIdentity> Você pode determinar se um usuário é autenticado, verificando o <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>propriedade de identidade.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> No entanto, o usuário poderá ser autenticado para o Windows, mas não para serviços de aplicativo cliente. Para determinar se o usuário é autenticado para serviços de aplicativo cliente, você deve confirmar que o <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>o valor da propriedade é &quot;ClientForms&quot;.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>       Você deve usar uma referência explícita de ClientFormsIdentity para chamar o <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>método, que não é definido pelo <xref:System.Security.Principal.IIdentity>interface.</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A>"
  example:
  - "The following example code demonstrates how to use this class to silently revalidate a user when the application leaves the offline state. In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value. If the user sets the application to the online state, the event handler attempts to revalidate the user by calling the <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method. However, if the authentication server is unavailable, the event handler returns the application to the offline state.  \n  \n> [!NOTE]\n>  The <xref:System.Web.ClientServices.ClientFormsIdentity.RevalidateUser%2A> method is for convenience only. Because it does not have a return value, it cannot indicate whether revalidation has failed. Revalidation can fail, for example, if the user credentials have changed on the server. In this case, you might want to include code that explicitly validates users after a service call fails. For more information, see the Accessing Web Settings section in [Walkthrough: Using Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#315](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#315)]\n [!code-cs[ClientApplicationServices#315](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#315)]"
  syntax:
    content: 'public class ClientFormsIdentity : IDisposable, System.Security.Principal.IIdentity'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  - System.Security.Principal.IIdentity
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  id: '#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)'
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  nameWithType: ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  fullName: System.Web.ClientServices.ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref> classe."
  syntax:
    content: public ClientFormsIdentity (string name, string password, System.Web.Security.MembershipProvider provider, string authenticationType, bool isAuthenticated, System.Net.CookieContainer authenticationCookies);
    parameters:
    - id: name
      type: System.String
      description: "O nome do usuário autenticado."
    - id: password
      type: System.String
      description: "A senha do usuário autenticado."
    - id: provider
      type: System.Web.Security.MembershipProvider
      description: "O provedor de associação usado para autenticar o usuário."
    - id: authenticationType
      type: System.String
      description: "O tipo de autenticação que é usada."
    - id: isAuthenticated
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o usuário foi autenticado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: authenticationCookies
      type: System.Net.CookieContainer
      description: "Os cookies são recuperados do serviço de autenticação."
  overload: System.Web.ClientServices.ClientFormsIdentity.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  id: AuthenticationCookies
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Obtém uma coleção de cookies recuperados do serviço de autenticação."
  remarks: "Essa propriedade não é destinada para uso no código do aplicativo. Significativamente não é possível modificar os cookies recuperados através desta propriedade e não contêm nenhuma informação útil."
  syntax:
    content: public System.Net.CookieContainer AuthenticationCookies { get; }
    return:
      type: System.Net.CookieContainer
      description: "Os cookies são recuperados do serviço de autenticação."
  overload: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  id: AuthenticationType
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Obtém o tipo de autenticação que é usado para autenticar o usuário."
  remarks: "Normalmente, você acessará um <xref:System.Web.ClientServices.ClientFormsIdentity>objeto como uma <xref:System.Security.Principal.IIdentity>referência para evitar uma dependência direta desta classe.</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> Você pode determinar se um usuário é autenticado, verificando o <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>propriedade de identidade.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> No entanto, o usuário poderá ser autenticado para o Windows, mas não para serviços de aplicativo cliente. Para determinar se o usuário é autenticado para serviços de aplicativo cliente, você deve confirmar que o <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>o valor da propriedade é &quot;ClientForms&quot;.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Para obter mais informações, consulte o <xref:System.Web.ClientServices.ClientFormsIdentity>Visão geral da classe.</xref:System.Web.ClientServices.ClientFormsIdentity>"
  example:
  - "The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services. This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires. Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired. For more information, see [How to: Configure Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#312](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#312)]\n [!code-cs[ClientApplicationServices#312](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#312)]"
  syntax:
    content: public string AuthenticationType { get; }
    return:
      type: System.String
      description: "O tipo de autenticação que é usado para autenticar o usuário."
  overload: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose
  id: Dispose
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Dispose()
  nameWithType: ClientFormsIdentity.Dispose()
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Libera todos os recursos usados pelo <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref>."
  remarks: "Chamar Dispose quando terminar de usar o <xref:System.Web.ClientServices.ClientFormsIdentity>.</xref:System.Web.ClientServices.ClientFormsIdentity> O método Dispose deixa a <xref:System.Web.ClientServices.ClientFormsIdentity>em um estado inutilizável.</xref:System.Web.ClientServices.ClientFormsIdentity> Depois de chamar Dispose, você deve liberar todas as referências para o <xref:System.Web.ClientServices.ClientFormsIdentity>para o coletor de lixo possa recuperar a memória que o <xref:System.Web.ClientServices.ClientFormsIdentity>estava ocupando.</xref:System.Web.ClientServices.ClientFormsIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada Dispose antes de liberar sua última referência a <xref:System.Web.ClientServices.ClientFormsIdentity>.</xref:System.Web.ClientServices.ClientFormsIdentity> Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.Web.ClientServices.ClientFormsIdentity>do objeto `Finalize` método.</xref:System.Web.ClientServices.ClientFormsIdentity>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: ClientFormsIdentity.Dispose(Boolean)
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Libera os recursos não gerenciados usados pelo <xref href=&quot;System.Web.ClientServices.ClientFormsIdentity&quot;> </xref> e, opcionalmente, libera os recursos gerenciados."
  remarks: "Este método é chamado pelo público `Dispose()` método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose()`invoca o protegido `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro for true, este método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Web.ClientServices.ClientFormsIdentity>referências.</xref:System.Web.ClientServices.ClientFormsIdentity> Este método chama o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para liberar apenas recursos não gerenciados."
  overload: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  id: IsAuthenticated
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
  fullName: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Obtém um valor que indica se o usuário foi autenticado."
  remarks: "Normalmente, você acessará um <xref:System.Web.ClientServices.ClientFormsIdentity>objeto como uma <xref:System.Security.Principal.IIdentity>referência para evitar uma dependência direta desta classe.</xref:System.Security.Principal.IIdentity> </xref:System.Web.ClientServices.ClientFormsIdentity> Você pode determinar se um usuário é autenticado, verificando o <xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName>propriedade de identidade.</xref:System.Security.Principal.IIdentity.IsAuthenticated%2A?displayProperty=fullName> No entanto, o usuário poderá ser autenticado para o Windows, mas não para serviços de aplicativo cliente. Para determinar se o usuário é autenticado para serviços de aplicativo cliente, você deve confirmar que o <xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName>o valor da propriedade é &quot;ClientForms&quot;.</xref:System.Security.Principal.IIdentity.AuthenticationType%2A?displayProperty=fullName> Para obter mais informações, consulte o <xref:System.Web.ClientServices.ClientFormsIdentity>Visão geral da classe.</xref:System.Web.ClientServices.ClientFormsIdentity>"
  example:
  - "The following example code demonstrates how to use this property through an <xref:System.Security.Principal.IIdentity> reference to determine whether a user is currently authenticated for client application services. This example assumes that the application is in the default configuration where users are not required to log in again when the authentication cookie expires. Otherwise, the <xref:System.Net.WebException> might indicate that the user login has expired. For more information, see [How to: Configure Client Application Services](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[ClientApplicationServices#312](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#312)]\n [!code-cs[ClientApplicationServices#312](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#312)]"
  syntax:
    content: public bool IsAuthenticated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o usuário foi autenticado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Name
  id: Name
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Name
  nameWithType: ClientFormsIdentity.Name
  fullName: System.Web.ClientServices.ClientFormsIdentity.Name
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Obtém o nome do usuário."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "O nome do usuário."
  overload: System.Web.ClientServices.ClientFormsIdentity.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider
  id: Provider
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
  fullName: System.Web.ClientServices.ClientFormsIdentity.Provider
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Obtém o provedor de associação que é usado para autenticar o usuário."
  syntax:
    content: public System.Web.Security.MembershipProvider Provider { get; }
    return:
      type: System.Web.Security.MembershipProvider
      description: "O provedor de associação que é usado para autenticar o usuário."
  overload: System.Web.ClientServices.ClientFormsIdentity.Provider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  id: RevalidateUser
  parent: System.Web.ClientServices.ClientFormsIdentity
  langs:
  - csharp
  name: RevalidateUser()
  nameWithType: ClientFormsIdentity.RevalidateUser()
  fullName: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ClientServices
  summary: "Silenciosamente autentica o usuário usando credenciais armazenadas em cache."
  remarks: "Quando você usar autenticação de formulários para validar o usuário atual, a <xref:System.Web.ClientServices.ClientFormsIdentity>classe armazena as credenciais do usuário, desde que o aplicativo está em execução.</xref:System.Web.ClientServices.ClientFormsIdentity> No entanto, o usuário só é autenticado até que o cookie de autenticação expira. Depois que o cookie expira, o usuário deve ser revalidado para acessar as funções remotas ou os serviços de configurações da Web. Você pode usar o **configurações avançadas para serviços** caixa de diálogo para configurar seu aplicativo para revalidar automaticamente o usuário, conforme descrito em [como: configurar serviços de aplicativo cliente](~/add/includes/ajax-current-ext-md.md). No entanto, se você configurar seu aplicativo para cumprir a expiração do cookie, você pode programaticamente revalidar o usuário chamando o método RevalidateUser. Esse método também é útil quando você alterna do modo offline para o modo online, porque o aplicativo pode ter sido desligado enquanto baixo offline.      > [!NOTE] > RevalidateUser o método é apenas para conveniência. Porque ele não tem um valor de retorno, não é possível indicar se a revalidação falhou. Revalidação pode falhar, por exemplo, se as credenciais do usuário foram alteradas no servidor. Nesse caso, você talvez queira incluir o código que valida usuários explicitamente após uma chamada de serviço falhar. Para obter mais informações, consulte a seção acessar configurações da Web [passo a passo: usando serviços de aplicativo cliente](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example code demonstrates how to use this method to silently revalidate a user when the application leaves the offline state. In this example, a <xref:System.Windows.Forms.CheckBox.CheckedChanged> event handler updates the offline status to match the check box value. If the user sets the application to the online state, the event handler attempts to revalidate the user. However, if the authentication server is unavailable, the event handler returns the application to the offline state.  \n  \n [!code-vb[ClientApplicationServices#315](~/add/codesnippet/visualbasic/ClientAppServicesDemo/Class1.vb#315)]\n [!code-cs[ClientApplicationServices#315](~/add/codesnippet/csharp/ClientAppServicesDemo/Class1.cs#315)]"
  syntax:
    content: public void RevalidateUser ();
    parameters: []
  overload: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor(System.String,System.String,System.Web.Security.MembershipProvider,System.String,System.Boolean,System.Net.CookieContainer)
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  nameWithType: ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
  fullName: System.Web.ClientServices.ClientFormsIdentity.ClientFormsIdentity(String,String,MembershipProvider,String,Boolean,CookieContainer)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.MembershipProvider
  parent: System.Web.Security
  isExternal: true
  name: MembershipProvider
  nameWithType: MembershipProvider
  fullName: System.Web.Security.MembershipProvider
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.CookieContainer
  parent: System.Net
  isExternal: true
  name: CookieContainer
  nameWithType: CookieContainer
  fullName: System.Net.CookieContainer
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
  fullName: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose()
  nameWithType: ClientFormsIdentity.Dispose()
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose()
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose(System.Boolean)
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: ClientFormsIdentity.Dispose(Boolean)
  fullName: System.Web.ClientServices.ClientFormsIdentity.Dispose(Boolean)
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
  fullName: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated
- uid: System.Web.ClientServices.ClientFormsIdentity.Name
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Name
  nameWithType: ClientFormsIdentity.Name
  fullName: System.Web.ClientServices.ClientFormsIdentity.Name
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
  fullName: System.Web.ClientServices.ClientFormsIdentity.Provider
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: RevalidateUser()
  nameWithType: ClientFormsIdentity.RevalidateUser()
  fullName: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser()
- uid: System.Web.ClientServices.ClientFormsIdentity.#ctor*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: ClientFormsIdentity
  nameWithType: ClientFormsIdentity.ClientFormsIdentity
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationCookies*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationCookies
  nameWithType: ClientFormsIdentity.AuthenticationCookies
- uid: System.Web.ClientServices.ClientFormsIdentity.AuthenticationType*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: AuthenticationType
  nameWithType: ClientFormsIdentity.AuthenticationType
- uid: System.Web.ClientServices.ClientFormsIdentity.Dispose*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Dispose
  nameWithType: ClientFormsIdentity.Dispose
- uid: System.Web.ClientServices.ClientFormsIdentity.IsAuthenticated*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: IsAuthenticated
  nameWithType: ClientFormsIdentity.IsAuthenticated
- uid: System.Web.ClientServices.ClientFormsIdentity.Name*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Name
  nameWithType: ClientFormsIdentity.Name
- uid: System.Web.ClientServices.ClientFormsIdentity.Provider*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: Provider
  nameWithType: ClientFormsIdentity.Provider
- uid: System.Web.ClientServices.ClientFormsIdentity.RevalidateUser*
  parent: System.Web.ClientServices.ClientFormsIdentity
  isExternal: false
  name: RevalidateUser
  nameWithType: ClientFormsIdentity.RevalidateUser
