### YamlMime:ManagedReference
items:
- uid: System.Web.UI.UpdatePanel
  id: UpdatePanel
  children:
  - System.Web.UI.UpdatePanel.#ctor
  - System.Web.UI.UpdatePanel.Attributes
  - System.Web.UI.UpdatePanel.ChildrenAsTriggers
  - System.Web.UI.UpdatePanel.ContentTemplate
  - System.Web.UI.UpdatePanel.ContentTemplateContainer
  - System.Web.UI.UpdatePanel.Controls
  - System.Web.UI.UpdatePanel.CreateContentTemplateContainer
  - System.Web.UI.UpdatePanel.CreateControlCollection
  - System.Web.UI.UpdatePanel.Initialize
  - System.Web.UI.UpdatePanel.IsInPartialRendering
  - System.Web.UI.UpdatePanel.OnInit(System.EventArgs)
  - System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)
  - System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)
  - System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)
  - System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.UpdatePanel.RenderMode
  - System.Web.UI.UpdatePanel.RequiresUpdate
  - System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.UpdatePanel.Triggers
  - System.Web.UI.UpdatePanel.Update
  - System.Web.UI.UpdatePanel.UpdateMode
  langs:
  - csharp
  name: UpdatePanel
  nameWithType: UpdatePanel
  fullName: System.Web.UI.UpdatePanel
  type: Class
  summary: "Permite que seções de uma página a ser parcialmente renderizados sem um postback."
  remarks: "Neste tópico:- [Introdução](#introduction)      -   [atualizar o conteúdo do UpdatePanel](#refreshing_updatepanel_content)      -   [UpdatePanel uso](#updatepanel_usage)      -   [aplicar estilos](#applying_styles)      -   [sintaxe declarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # controles do UpdatePanel Introdução são uma parte central da funcionalidade do AJAX do ASP.NET.       Eles são usados com o <xref:System.Web.UI.ScriptManager>controle para habilitar a renderização parcial da página.</xref:System.Web.UI.ScriptManager> Renderização de página parcial reduz a necessidade de postbacks síncronos e atualizações de página concluída quando apenas parte da página deve ser atualizada. Renderização parcial da página melhora a experiência do usuário, pois reduz a tremulação da tela que ocorre durante um postback da página inteira e melhora a interatividade de página da Web.      <a name=&quot;refreshing_updatepanel_content&quot;></a># # Renderização parcial da página de conteúdo de UpdatePanel quando a atualização é habilitada, um controle pode executar um postback que atualiza a página inteira ou um postback assíncrono que atualiza o conteúdo de um ou mais controles do UpdatePanel. Se um controle causa um postback assíncrono e atualiza um controle UpdatePanel dependem do seguinte: - se a <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>propriedade do controle UpdatePanel é definida como <xref:System.Web.UI.UpdatePanelUpdateMode>, conteúdo do controle UpdatePanel será atualizado em cada postagem que se origina de página.</xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel.UpdateMode%2A> Isso inclui postagens assíncronas de controles que estão dentro de outros controles do UpdatePanel e postagens de controles que não estão dentro de controles do UpdatePanel.      -Se a <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>está definida como <xref:System.Web.UI.UpdatePanelUpdateMode>, conteúdo do controle UpdatePanel será atualizado nas seguintes circunstâncias: - quando você chamar o <xref:System.Web.UI.UpdatePanel.Update%2A>controlar explicitamente o método do UpdatePanel.</xref:System.Web.UI.UpdatePanel.Update%2A> </xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel.UpdateMode%2A>          -Quando o controle UpdatePanel é aninhado dentro de outro controle UpdatePanel e o painel pai está atualizado.          -Quando um postback é causado por um controle que é definido como um gatilho usando a `Triggers` propriedade do controle UpdatePanel. Nesse cenário, o controle explicitamente dispara uma atualização do conteúdo do painel. O controle pode ser dentro ou fora do controle UpdatePanel que o gatilho está associado.          -Quando o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>estiver definida como `true` e um controle filho do controle UpdatePanel causa um postback.</xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> Controles filho de controles do UpdatePanel aninhados não causam uma atualização para o controle UpdatePanel externo, a menos que eles sejam explicitamente definidos como disparadores.       A combinação de configuração o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>propriedade `false` e o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>propriedade <xref:System.Web.UI.UpdatePanelUpdateMode>não é permitida e lançará uma exceção.</xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel.UpdateMode%2A> </xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>       Quando o controle UpdatePanel realiza um post assíncrono, ele adiciona um cabeçalho HTTP personalizado. Alguns proxies remover esse cabeçalho HTTP personalizado. Se isso ocorrer, o servidor processa a solicitação como um postback regular, o que causa um erro de cliente. Para resolver esse problema, insira um campo de formulário personalizado ao executar postagens assíncronas. Em seguida, verifique o cabeçalho ou o campo de formulário personalizado em código do servidor.      <a name=&quot;updatepanel_usage&quot;></a># # UpdatePanel uso você pode usar vários controles do UpdatePanel atualizar regiões de página diferentes independentemente. Quando a página que contém um ou mais controles do UpdatePanel é primeiro processada, todo o conteúdo de todos os controles do UpdatePanel são renderizadas e enviada para o navegador. Em postagens assíncronas subsequentes, o conteúdo de cada controle UpdatePanel pode não estar atualizado dependendo das configurações do painel e na lógica do cliente ou servidor para painéis individuais.       Você também pode usar os controles do UpdatePanel nos seguintes cenários: - em controles de usuário.      -Em páginas mestras e de conteúdo.      -Aninhados dentro de outros controles do UpdatePanel.      -Em modelos de controles, como o <xref:System.Web.UI.WebControls.GridView>ou <xref:System.Web.UI.WebControls.Repeater>controles.</xref:System.Web.UI.WebControls.Repeater> </xref:System.Web.UI.WebControls.GridView>       Controles do UpdatePanel podem ser adicionados declarativamente ou programaticamente.       Você pode adicionar um controle UpdatePanel programaticamente, mas não é possível adicionar gatilhos programaticamente. Para criar o comportamento do tipo de gatilho, você pode registrar um controle na página como um controle de postback assíncrono. Você faz isso chamando o <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A>método o <xref:System.Web.UI.ScriptManager>controle.</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> Você pode criar um manipulador de eventos que é executado em resposta a postback assíncrono e o manipulador de chamada a <xref:System.Web.UI.UpdatePanel.Update%2A>método do controle UpdatePanel.</xref:System.Web.UI.UpdatePanel.Update%2A>      <a name=&quot;applying_styles&quot;></a># # Aplicando estilos UpdatePanel controle aceita expando atributos. Isso permite que você defina uma classe CSS para o HTMLelements que os controles são processados. Por exemplo, você pode criar a marcação mostrada no exemplo a seguir: ```   <asp:UpdatePanel runat=&quot;server&quot; class=&quot;myStyle&quot;>   </asp:UpdatePanel>    ``` a marcação no exemplo anterior renderiza HTML semelhante à seguinte quando a página é executada: ```   <div id=&quot;ctl00_MainContent_UpdatePanel1&quot; class=&quot;MyStyle&quot;>   </div>   ``` <a name=&quot;declarative_syntax&quot;> </a> # # sintaxe declarativa      ```   <asp:UpdatePanel       ChildrenAsTriggers=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       RenderMode=&quot;Block|Inline&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       UpdateMode=&quot;Always|Conditional&quot;       Visible=&quot;True|False&quot;   >       <ContentTemplate>           <!-- child controls -->       </ContentTemplate>       <Triggers>           <asp:AsyncPostBackTrigger                ControlID=&quot;string&quot;               EventName=&quot;string&quot;           />           <asp:PostBackTrigger                ControlID=&quot;string&quot;           />       </Triggers>   </asp:UpdatePanel>   ```"
  example:
  - "The following examples show different uses of the UpdatePanel control.  \n  \n **Controls Inside an UpdatePanel Control**  \n  \n The following example shows how to put controls inside an UpdatePanel control to reduce screen flicker when you post to the server. In this example, a <xref:System.Web.UI.WebControls.Calendar> and a <xref:System.Web.UI.WebControls.DropDownList> control are inside an UpdatePanel control. By default, the <xref:System.Web.UI.UpdatePanel.UpdateMode%2A> property is <xref:System.Web.UI.UpdatePanelUpdateMode> and the <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> property is `true`. Therefore, child controls of the panel cause an asynchronous postback.  \n  \n [!code-vb[System.Web.UI.UpdatePanel#1](~/add/codesnippet/visualbasic/t-system.web.ui.updatepa_0_1.aspx)]\n [!code-cs[System.Web.UI.UpdatePanel#1](~/add/codesnippet/csharp/t-system.web.ui.updatepa_0_1.aspx)]  \n  \n **Master/Detail Scenario with UpdatePanel Controls**  \n  \n In the following example, an UpdatePanel control is used in a master/detail scenario that shows orders and order details from the Northwind database. One UpdatePanel control contains the <xref:System.Web.UI.WebControls.GridView> control that displays a list of orders. A second UpdatePanel control contains a <xref:System.Web.UI.WebControls.DetailsView> control that displays the details of one order. When you select an order from the first table, details for that order are displayed in the second table. The second table is updated asynchronously based on the selection in the first table. The sorting and paging operations in the orders summary table also cause partial updates.  \n  \n [!code-cs[System.Web.UI.UpdatePanel#2](~/add/codesnippet/csharp/t-system.web.ui.updatepa_0_2.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel#2](~/add/codesnippet/visualbasic/t-system.web.ui.updatepa_0_2.aspx)]  \n  \n If you put a <xref:System.Web.UI.WebControls.GridView> control inside an UpdatePanel control, setting the <xref:System.Web.UI.WebControls.GridView> control's <xref:System.Web.UI.WebControls.GridView.EnableSortingAndPagingCallbacks%2A> property to `true` is not supported. However, because the UpdatePanel control supports asynchronous postbacks, any postbacks that change the <xref:System.Web.UI.WebControls.GridView> control inside an UpdatePanel control cause the same behavior as sorting and paging callbacks.  \n  \n **Using an UpdatePanel Control in a Template**  \n  \n In the following example, an UpdatePanel control is used in the item template of a <xref:System.Web.UI.WebControls.GridView> control. UpdatePanel controls in each data row are generated automatically. Each row's UpdatePanel control contains a <xref:System.Web.UI.WebControls.Label> control to display the quantity of the item in that row and a <xref:System.Web.UI.WebControls.Button> control to decrease and increase the quantity.  \n  \n [!code-cs[System.Web.UI.UpdatePanel#3](~/add/codesnippet/csharp/t-system.web.ui.updatepa_0_3.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel#3](~/add/codesnippet/visualbasic/t-system.web.ui.updatepa_0_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultProperty("Triggers")]

      [System.ComponentModel.Designer("System.Web.UI.Design.UpdatePanelDesigner, System.Web.Extensions.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35")]

      [System.Drawing.ToolboxBitmap(typeof(EmbeddedResourceFinder), "System.Web.Resources.UpdatePanel.bmp")]

      [System.Web.UI.ParseChildren(true)]

      [System.Web.UI.PersistChildren(false)]

      public class UpdatePanel : System.Web.UI.Control, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.#ctor
  id: '#ctor'
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: UpdatePanel()
  nameWithType: UpdatePanel.UpdatePanel()
  fullName: System.Web.UI.UpdatePanel.UpdatePanel()
  type: Constructor
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> classe."
  remarks: "Use este construtor para inicializar uma nova instância de <xref:System.Web.UI.UpdatePanel>classe.</xref:System.Web.UI.UpdatePanel> Adicionar dinamicamente um <xref:System.Web.UI.UpdatePanel>controlar para uma página, crie um novo <xref:System.Web.UI.UpdatePanel>de instância e, em seguida, adicionar controles filho para o objeto de controle que é exposto pela instância do <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>propriedade.</xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>"
  example:
  - "The following example shows how to dynamically create an <xref:System.Web.UI.UpdatePanel> control and add it to a page. When you click the button inside the <xref:System.Web.UI.UpdatePanel> control, the message is refreshed with the date and time. Child controls are added by using the <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> property.  \n  \n [!code-cs[System.Web.UI.UpdatePanel.Constructor#1](~/add/codesnippet/csharp/m-system.web.ui.updatepa_1_1.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel.Constructor#1](~/add/codesnippet/visualbasic/m-system.web.ui.updatepa_1_1.aspx)]"
  syntax:
    content: public UpdatePanel ();
    parameters: []
  overload: System.Web.UI.UpdatePanel.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.Attributes
  id: Attributes
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: Attributes
  nameWithType: UpdatePanel.Attributes
  fullName: System.Web.UI.UpdatePanel.Attributes
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém a coleção de atributos da folha de estilos em cascata (CSS) a <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle."
  remarks: "A propriedade de atributos contém uma coleção de atributos de estilo CSS que podem ser usados em declarações `div` elemento o <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: public System.Web.UI.AttributeCollection Attributes { get; }
    return:
      type: System.Web.UI.AttributeCollection
      description: "Os nomes de CSS regras de estilo da coleção de atributos."
  overload: System.Web.UI.UpdatePanel.Attributes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.ChildrenAsTriggers
  id: ChildrenAsTriggers
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: ChildrenAsTriggers
  nameWithType: UpdatePanel.ChildrenAsTriggers
  fullName: System.Web.UI.UpdatePanel.ChildrenAsTriggers
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se controla a postagens de filho imediato de um <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle atualizar o conteúdo do painel."
  remarks: "Defina a propriedade ChildrenAsTriggers como `true` se você quiser postagens de controles filho imediato do <xref:System.Web.UI.UpdatePanel>controle para fazer com que uma atualização do conteúdo do painel.</xref:System.Web.UI.UpdatePanel> Controles filho de aninhados <xref:System.Web.UI.UpdatePanel>controles não fará com que uma atualização do pai <xref:System.Web.UI.UpdatePanel>controle do conteúdo, a menos que você chamar o <xref:System.Web.UI.UpdatePanel.Update%2A>método explicitamente ou definir os controles filho como disparadores.</xref:System.Web.UI.UpdatePanel.Update%2A> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>      > [!NOTE] > Quando o <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>estiver definida como <xref:System.Web.UI.UpdatePanelUpdateMode>e a propriedade ChildrenAsTriggers é definida como `false`, um <xref:System.InvalidOperationException>exceção é lançada durante a <xref:System.Web.UI.UpdatePanel.OnPreRender%2A>método.</xref:System.Web.UI.UpdatePanel.OnPreRender%2A> </xref:System.InvalidOperationException> </xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel.UpdateMode%2A> Essa combinação de propriedades não é permitida para o <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel>       Um cenário onde você pode definir ChildrenAsTriggers para `false` é quando você tem dois <xref:System.Web.UI.UpdatePanel>controles e você desejar um postback do primeiro painel para atualizar o conteúdo do segundo painel, mas não atualizar seu próprio conteúdo.</xref:System.Web.UI.UpdatePanel> Por exemplo, o primeiro painel pode ser uma lista de produtos para comprar e o segundo painel pode ser um carrinho de compras."
  syntax:
    content: public bool ChildrenAsTriggers { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os postbacks do filho imediato controles do <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> atualização de painel de controle do conteúdo; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.UpdatePanel.ChildrenAsTriggers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.ContentTemplate
  id: ContentTemplate
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: ContentTemplate
  nameWithType: UpdatePanel.ContentTemplate
  fullName: System.Web.UI.UpdatePanel.ContentTemplate
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define o modelo que define o conteúdo de <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle."
  remarks: "A propriedade ContentTemplate contém o conteúdo que é exibido dentro de um <xref:System.Web.UI.UpdatePanel>controlar quando ele for renderizado.</xref:System.Web.UI.UpdatePanel> Você pode criar o conteúdo do modelo declarativamente ou programaticamente. O modelo de conteúdo de um <xref:System.Web.UI.UpdatePanel>controle é um modelo de instância única.</xref:System.Web.UI.UpdatePanel> Portanto, as propriedades dos controles nele podem ser acessadas diretamente na página sem usar o <xref:System.Web.UI.Page.FindControl%2A>método.</xref:System.Web.UI.Page.FindControl%2A> Para obter mais informações, consulte o <xref:System.Web.UI.TemplateInstanceAttribute>Visão geral da classe.</xref:System.Web.UI.TemplateInstanceAttribute>       Para adicionar itens ao <xref:System.Web.UI.UpdatePanel>controlar declarativamente, adicione um `<ContentTemplate>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> Dentro de `<ContentTemplate>` marcas de elemento, declare outros elementos HTML e controles.       Para adicionar itens ao <xref:System.Web.UI.UpdatePanel>controlar dinamicamente, use o <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>propriedade, que permite que você adicione controles filho sem a necessidade de criar um modelo personalizado que implementa o <xref:System.Web.UI.ITemplate>interface.</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> </xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: public System.Web.UI.ITemplate ContentTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> que define o conteúdo de instância de <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.UpdatePanel.ContentTemplate*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "A propriedade ContentTemplate do <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle está definido depois que uma instância do modelo é criada ou após o contêiner do modelo de conteúdo é criado."
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.ContentTemplateContainer
  id: ContentTemplateContainer
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: ContentTemplateContainer
  nameWithType: UpdatePanel.ContentTemplateContainer
  fullName: System.Web.UI.UpdatePanel.ContentTemplateContainer
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém um objeto de controle para o qual você pode adicionar programaticamente os controles filho."
  remarks: "A propriedade ContentTemplateContainer permite que você adicionar programaticamente controles filho para o <xref:System.Web.UI.UpdatePanel>controle sem a necessidade de definir um modelo personalizado que herda o <xref:System.Web.UI.ITemplate>interface.</xref:System.Web.UI.ITemplate> </xref:System.Web.UI.UpdatePanel> Se você estiver adicionando o conteúdo para o <xref:System.Web.UI.UpdatePanel>controlar declarativamente ou por meio de um designer, você deve adicionar o conteúdo para o <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>propriedade usando um `<ContentTemplate>` elemento.</xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> </xref:System.Web.UI.UpdatePanel>"
  example:
  - "The following example shows how to programmatically specify the ContentTemplateContainer property of an <xref:System.Web.UI.UpdatePanel> control. The <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> control is set when `Button1` is clicked.  \n  \n [!code-cs[System.Web.UI.UpdatePanel.Constructor#1](~/add/codesnippet/csharp/p-system.web.ui.updatepa_2_1.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel.Constructor#1](~/add/codesnippet/visualbasic/p-system.web.ui.updatepa_2_1.aspx)]"
  syntax:
    content: public System.Web.UI.Control ContentTemplateContainer { get; }
    return:
      type: System.Web.UI.Control
      description: "Um <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto que define o conteúdo de <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle."
  overload: System.Web.UI.UpdatePanel.ContentTemplateContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.Controls
  id: Controls
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: Controls
  nameWithType: UpdatePanel.Controls
  fullName: System.Web.UI.UpdatePanel.Controls
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém o <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> controla o objeto que contém o filho para o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle."
  remarks: "A propriedade de controles é substituída na base de <xref:System.Web.UI.Control>classe e lacradas para evitar mais derivação.</xref:System.Web.UI.Control> Para adicionar controles para o <xref:System.Web.UI.UpdatePanel>controlar declarativamente, crie um `<ContentTemplate>` elemento dentro do <xref:System.Web.UI.UpdatePanel>marcação de controle.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> Para adicionar controles para o <xref:System.Web.UI.UpdatePanel>controlar programaticamente, use o <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>propriedade.</xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> </xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: public override sealed System.Web.UI.ControlCollection Controls { get; }
    return:
      type: System.Web.UI.ControlCollection
      description: "A coleção de controles filho para o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle."
  overload: System.Web.UI.UpdatePanel.Controls*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <>*>, <>*>, <>*>, <>*>, or <>*> method of the <xref href=&quot;System.Web.UI.ControlCollection&quot;></xref> class has been called. Para alterar o conteúdo a <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlar, modifique os controles filho do <> </> *> propriedade."
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.CreateContentTemplateContainer
  id: CreateContentTemplateContainer
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: CreateContentTemplateContainer()
  nameWithType: UpdatePanel.CreateContentTemplateContainer()
  fullName: System.Web.UI.UpdatePanel.CreateContentTemplateContainer()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Cria um <xref href=&quot;System.Web.UI.Control&quot;> </xref> objeto que atua como um contêiner para os controles filho que definem o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> conteúdo do controle."
  remarks: "Esse método é destinado ao uso por desenvolvedores de controle que desejam estender o <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel> Por exemplo, em classes derivadas, você pode fornecer um controle raiz diferentes que atua como um contêiner para o <xref:System.Web.UI.UpdatePanel>conteúdo do controle.</xref:System.Web.UI.UpdatePanel> A implementação padrão retorna um <xref:System.Web.UI.Control>objeto.</xref:System.Web.UI.Control>"
  example:
  - "The following example shows how to override the CreateContentTemplateContainer method in a custom <xref:System.Web.UI.UpdatePanel> control to always render the `<fieldset>` and `<legend>` elements for the panel's content. The custom <xref:System.Web.UI.UpdatePanel> control defines a public property named `GroupingText` that is a string literal inside the `<legend>` element.  \n  \n A custom <xref:System.Web.UI.UpdatePanel> control named `CustomUpdatePanel` derives from <xref:System.Web.UI.UpdatePanel> and overrides the CreateContentTemplateContainer method. Put the `CustomUpdatePanel` class source code in the Web site's App_Code folder.  \n  \n [!code-cs[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/add/codesnippet/csharp/m-system.web.ui.updatepa_2_1.cs)]\n [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#2](~/add/codesnippet/visualbasic/m-system.web.ui.updatepa_2_1.vb)]  \n  \n The custom <xref:System.Web.UI.UpdatePanel> control is used on the page just as the <xref:System.Web.UI.UpdatePanel> control is. The following example shows a page that contains the custom <xref:System.Web.UI.UpdatePanel> control.  \n  \n [!code-cs[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/add/codesnippet/csharp/m-system.web.ui.updatepa_2_2.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel.CreateContentTemplateContainer#1](~/add/codesnippet/visualbasic/m-system.web.ui.updatepa_2_2.aspx)]"
  syntax:
    content: protected virtual System.Web.UI.Control CreateContentTemplateContainer ();
    parameters: []
    return:
      type: System.Web.UI.Control
      description: "Um <xref href=&quot;System.Web.UI.Control&quot;> </xref> contêiner para o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> conteúdo do controle."
  overload: System.Web.UI.UpdatePanel.CreateContentTemplateContainer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.CreateControlCollection
  id: CreateControlCollection
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: CreateControlCollection()
  nameWithType: UpdatePanel.CreateControlCollection()
  fullName: System.Web.UI.UpdatePanel.CreateControlCollection()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Retorna a coleção de todos os controles que estão contidos no <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle."
  remarks: "O método CreateControlCollection é usado por desenvolvedores de controle.       Como esse método é protegido e lacrado, é visível para classes que herdam o <xref:System.Web.UI.UpdatePanel>classe, mas não pode ser substituído.</xref:System.Web.UI.UpdatePanel> Esse método substitui a implementação base para retornar uma <xref:System.Web.UI.ControlCollection>objeto que gera um <xref:System.InvalidOperationException>quando o <xref:System.Web.UI.ControlCollection.Add%2A>, <xref:System.Web.UI.ControlCollection.AddAt%2A>, <xref:System.Web.UI.ControlCollection.Clear%2A>, <xref:System.Web.UI.ControlCollection.Remove%2A>, ou <xref:System.Web.UI.ControlCollection.RemoveAt%2A>método o <xref:System.Web.UI.ControlCollection>classe é invocada.</xref:System.Web.UI.ControlCollection> </xref:System.Web.UI.ControlCollection.RemoveAt%2A> </xref:System.Web.UI.ControlCollection.Remove%2A> </xref:System.Web.UI.ControlCollection.Clear%2A> </xref:System.Web.UI.ControlCollection.AddAt%2A> </xref:System.Web.UI.ControlCollection.Add%2A> </xref:System.InvalidOperationException> </xref:System.Web.UI.ControlCollection> Para alterar o conteúdo do <xref:System.Web.UI.UpdatePanel>controlar, modifique os controles filho do <xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A>propriedade.</xref:System.Web.UI.UpdatePanel.ContentTemplateContainer%2A> </xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override sealed System.Web.UI.ControlCollection CreateControlCollection ();
    parameters: []
    return:
      type: System.Web.UI.ControlCollection
      description: "Um <xref href=&quot;System.Web.UI.ControlCollection&quot;> </xref> que consiste em todos os controles que definem o conteúdo do objeto de <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle."
  overload: System.Web.UI.UpdatePanel.CreateControlCollection*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.Initialize
  id: Initialize
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: Initialize()
  nameWithType: UpdatePanel.Initialize()
  fullName: System.Web.UI.UpdatePanel.Initialize()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Inicializa o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle gatilho coleção se renderização parcial da página está habilitada."
  remarks: "Se a renderização parcial da página não estiver habilitada, os gatilhos que são definidos no <xref:System.Web.UI.UpdatePanel.Triggers%2A>propriedade não está inicializado porque eles não têm nenhum efeito.</xref:System.Web.UI.UpdatePanel.Triggers%2A> O <xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A>propriedade o <xref:System.Web.UI.ScriptManager>controle obtém ou define um valor que indica se a renderização parcial da página está habilitada.</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.EnablePartialRendering%2A> O <xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>propriedade o <xref:System.Web.UI.ScriptManager>controle obtém ou define um valor que indica se a renderização parcial da página é suportada.</xref:System.Web.UI.ScriptManager> </xref:System.Web.UI.ScriptManager.SupportsPartialRendering%2A>"
  syntax:
    content: protected virtual void Initialize ();
    parameters: []
  overload: System.Web.UI.UpdatePanel.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.IsInPartialRendering
  id: IsInPartialRendering
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: IsInPartialRendering
  nameWithType: UpdatePanel.IsInPartialRendering
  fullName: System.Web.UI.UpdatePanel.IsInPartialRendering
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle está sendo atualizado como resultado de um postback assíncrono."
  remarks: "A propriedade IsInPartialRendering é destinada ao uso por desenvolvedores de controle que desejam saber quando um <xref:System.Web.UI.UpdatePanel>controle está sendo atualizado como resultado de um postback assíncrono.</xref:System.Web.UI.UpdatePanel> Em cenários de desenvolvimento de página, use o <xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>propriedade para determinar se uma página está processando como resultado de um postback assíncrono.</xref:System.Web.UI.ScriptManager.IsInAsyncPostBack%2A>"
  syntax:
    content: public bool IsInPartialRendering { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o atual <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle está sendo atualizada como resultado de um postback assíncrono; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.UpdatePanel.IsInPartialRendering*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: UpdatePanel.OnInit(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> eventos."
  remarks: "O <xref:System.Web.UI.UpdatePanel>do controle <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>propriedade é instanciada durante o método OnInit.</xref:System.Web.UI.UpdatePanel.ContentTemplate%2A> </xref:System.Web.UI.UpdatePanel>       O método OnInit é usado por desenvolvedores de controle para estender a funcionalidade do <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.UpdatePanel.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> propriedade está sendo definida quando o <> </> *> propriedade já foi criada."
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)
  id: OnLoad(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: OnLoad(EventArgs)
  nameWithType: UpdatePanel.OnLoad(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnLoad(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Load&quot;> </xref> eventos para o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controlar e invoca o <xref:System.Web.UI.UpdatePanel.Initialize*>método quando a renderização parcial da página não está habilitada.</xref:System.Web.UI.UpdatePanel.Initialize*>"
  syntax:
    content: protected override void OnLoad (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.UpdatePanel.OnLoad*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)
  id: OnPreRender(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: OnPreRender(EventArgs)
  nameWithType: UpdatePanel.OnPreRender(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnPreRender(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.PreRender&quot;> </xref> eventos."
  remarks: "O método OnPreRender é usado por desenvolvedores de controle para estender a funcionalidade do <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override void OnPreRender (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém os dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.UpdatePanel.OnPreRender*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <> </> *> está definida como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>e o <> </> *> está definida como <xref href=&quot;System.Web.UI.UpdatePanelUpdateMode&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)
  id: OnUnload(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: OnUnload(EventArgs)
  nameWithType: UpdatePanel.OnUnload(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnUnload(EventArgs)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Eleva a base <xref href=&quot;System.Web.UI.Control.Unload&quot;> </xref> eventos."
  remarks: "O método OnUnload é usado por desenvolvedores de controle para estender a funcionalidade do <xref:System.Web.UI.UpdatePanel>controle</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override void OnUnload (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>objeto que contém dados do evento.</xref:System.EventArgs>"
  overload: System.Web.UI.UpdatePanel.OnUnload*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: UpdatePanel.Render(HtmlTextWriter)
  fullName: System.Web.UI.UpdatePanel.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Gera o <xref:System.Web.UI.Control.Render*>evento.</xref:System.Web.UI.Control.Render*>"
  remarks: "O método de renderização é usado por desenvolvedores de controle para estender a funcionalidade do <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel>       O método de renderização grava o conteúdo renderizado o <xref:System.Web.UI.UpdatePanel>controle para o navegador usando fornecido <xref:System.Web.UI.HtmlTextWriter>objeto.</xref:System.Web.UI.HtmlTextWriter> </xref:System.Web.UI.UpdatePanel> Quando você substituir o método de renderização em uma classe derivada, certifique-se de chamar o método de renderização da classe base para que controla o filho do <xref:System.Web.UI.UpdatePanel>controle são renderizados.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto que representa o fluxo de saída para renderizar o conteúdo HTML."
  overload: System.Web.UI.UpdatePanel.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)
  id: RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: RenderChildren(HtmlTextWriter)
  nameWithType: UpdatePanel.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.UpdatePanel.RenderChildren(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Gera o evento RenderChildren."
  remarks: "O método RenderChildren é usado por desenvolvedores de controle para estender a funcionalidade do <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel>       O método RenderChildren grava o conteúdo renderizado o <xref:System.Web.UI.UpdatePanel>controle para o navegador usando fornecido <xref:System.Web.UI.HtmlTextWriter>objeto.</xref:System.Web.UI.HtmlTextWriter> </xref:System.Web.UI.UpdatePanel> Quando você substituir o método RenderChildren em uma classe derivada, certifique-se de chamar o método RenderChildren da classe base para que controla o filho do <xref:System.Web.UI.UpdatePanel>controle são renderizados.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected override void RenderChildren (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto que representa o fluxo de saída para renderizar o conteúdo HTML."
  overload: System.Web.UI.UpdatePanel.RenderChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.RenderMode
  id: RenderMode
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: RenderMode
  nameWithType: UpdatePanel.RenderMode
  fullName: System.Web.UI.UpdatePanel.RenderMode
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica se um <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> conteúdo do controle é colocado em um HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_&lt;span&gt;&quot; name=&quot;&lt;span&gt;&quot; href=&quot;&quot;> </xref> elemento."
  remarks: "Se a propriedade RenderMode é definida como <xref:System.Web.UI.UpdatePanelRenderMode>, o conteúdo de um <xref:System.Web.UI.UpdatePanel>controle é renderizado dentro de uma marca HTML `<span>` elemento.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanelRenderMode> Se a propriedade RenderMode é definida como <xref:System.Web.UI.UpdatePanelRenderMode>, ele é renderizado dentro de uma marca HTML `<div>` elemento.</xref:System.Web.UI.UpdatePanelRenderMode>"
  example:
  - "The following example shows how to set the RenderMode property declaratively. The <xref:System.Web.UI.UpdatePanel> control named `UpdatePanel1` is rendered in an HTML `<span>` element. If the RenderMode property were set to <xref:System.Web.UI.UpdatePanelRenderMode>, the resulting paragraph would appear disjointed because of the way in which the HTML `<div>` element is rendered.  \n  \n [!code-vb[System.Web.UI.UpdatePanel.RenderMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.updatepa_1_1.aspx)]\n [!code-cs[System.Web.UI.UpdatePanel.RenderMode#1](~/add/codesnippet/csharp/p-system.web.ui.updatepa_1_1.aspx)]"
  syntax:
    content: public System.Web.UI.UpdatePanelRenderMode RenderMode { get; set; }
    return:
      type: System.Web.UI.UpdatePanelRenderMode
      description: "Uma da <xref href=&quot;System.Web.UI.UpdatePanelRenderMode&quot;> </xref> valores. O padrão é <xref href=&quot;System.Web.UI.UpdatePanelRenderMode&quot;> </xref> para que o conteúdo do painel é colocado em um HTML <xref uid=&quot;langword_csharp_&lt;div&gt;&quot; name=&quot;&lt;div&gt;&quot; href=&quot;&quot;> </xref> elemento."
  overload: System.Web.UI.UpdatePanel.RenderMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.RequiresUpdate
  id: RequiresUpdate
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: RequiresUpdate
  nameWithType: UpdatePanel.RequiresUpdate
  fullName: System.Web.UI.UpdatePanel.RequiresUpdate
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o conteúdo a <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle será atualizado."
  remarks: "Por padrão, a propriedade RequiresUpdate retorna `true` se o <xref:System.Web.UI.UpdatePanel.Update%2A>método foi chamado explicitamente ou se a <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>propriedade é definida como <xref:System.Web.UI.UpdatePanelUpdateMode>.</xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel.UpdateMode%2A> </xref:System.Web.UI.UpdatePanel.Update%2A>       Essa propriedade é destinada ao uso por desenvolvedores de controle que desejam estender o <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel> Por exemplo, em classes derivadas, você pode fornecer lógica adicional para determinar se um <xref:System.Web.UI.UpdatePanel>controle deve ser atualizado.</xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: protected virtual bool RequiresUpdate { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> conteúdo do controle será atualizado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.UpdatePanel.RequiresUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  id: System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  isEii: true
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)
  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  fullName: System.Web.UI.UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Retorna um atributo de um controle da Web usando um nome especificado."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.UpdatePanel>instância é convertida em um <xref:System.Web.UI.IAttributeAccessor>interface.</xref:System.Web.UI.IAttributeAccessor> </xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: string IAttributeAccessor.GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "O nome do atributo."
    return:
      type: System.String
      description: "O valor do atributo."
  overload: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  id: System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  isEii: true
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  fullName: System.Web.UI.UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Define o valor do atributo de controle especificado."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.UpdatePanel>instância é convertida em um <xref:System.Web.UI.IAttributeAccessor>interface.</xref:System.Web.UI.IAttributeAccessor> </xref:System.Web.UI.UpdatePanel>"
  syntax:
    content: void IAttributeAccessor.SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "O nome do atributo a ser definido."
    - id: value
      type: System.String
      description: "O valor do atributo a ser definido."
  overload: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.Triggers
  id: Triggers
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: Triggers
  nameWithType: UpdatePanel.Triggers
  fullName: System.Web.UI.UpdatePanel.Triggers
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém um <xref href=&quot;System.Web.UI.UpdatePanelTriggerCollection&quot;> </xref> objeto que contém <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> e <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref> objetos que foram registrados declarativamente para o <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle."
  remarks: "A propriedade de gatilhos obtém uma coleção de todos os disparadores que foram definidos para o <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel> (Você pode definir disparadores declarativamente usando o **Coleção UpdatePanelTrigger** caixa de diálogo no designer ou usando o `<Triggers>` elemento do <xref:System.Web.UI.UpdatePanel>controle.)</xref:System.Web.UI.UpdatePanel> A coleção inclui <xref:System.Web.UI.AsyncPostBackTrigger>e <xref:System.Web.UI.PostBackTrigger>objetos.</xref:System.Web.UI.PostBackTrigger> </xref:System.Web.UI.AsyncPostBackTrigger>       Declarativos gatilhos que são definidos nos gatilhos coleção não são rastreadas na exibição estado.       Quando um controle que é um contêiner de nomenclatura é usado como um disparador, todos os seus controles filhos que causam postback se comportarão como disparadores."
  syntax:
    content: public System.Web.UI.UpdatePanelTriggerCollection Triggers { get; }
    return:
      type: System.Web.UI.UpdatePanelTriggerCollection
      description: "Uma coleção de objetos do tipo <xref href=&quot;System.Web.UI.AsyncPostBackTrigger&quot;> </xref> e <xref href=&quot;System.Web.UI.PostBackTrigger&quot;> </xref>."
  overload: System.Web.UI.UpdatePanel.Triggers*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.Update
  id: Update
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: Update()
  nameWithType: UpdatePanel.Update()
  fullName: System.Web.UI.UpdatePanel.Update()
  type: Method
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Faz com que uma atualização do conteúdo de um <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> controle."
  remarks: "Se a página estiver habilitada para renderização parcial da página, quando você invoca o método de atualização, o <xref:System.Web.UI.UpdatePanel>conteúdo do controle é atualizado no navegador.</xref:System.Web.UI.UpdatePanel> Chame o método de atualização, se você tiver um código de servidor que deve ser executada para determinar se um <xref:System.Web.UI.UpdatePanel>controle deve ser atualizado.</xref:System.Web.UI.UpdatePanel> Se você planeja usar o método de atualização, defina a <xref:System.Web.UI.UpdatePanel.UpdateMode%2A>propriedade <xref:System.Web.UI.UpdatePanelUpdateMode>.</xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel.UpdateMode%2A> Se você quiser que a decisão de atualizar o painel na lógica do servidor, verifique se o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>é de propriedade `false` e nenhum gatilho explícito definidas para o painel.</xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>       Em um cenário de desenvolvimento de página típico, se você definir os gatilhos ou se o <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>é de propriedade `true` para o <xref:System.Web.UI.UpdatePanel>controle, o método de atualização é chamado automaticamente durante o ciclo de vida da página.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>       Se o <xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>propriedade não está definida para o <xref:System.Web.UI.UpdatePanel>controlar, nenhuma atualização do painel ocorrerá.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.ContentTemplate%2A>"
  example:
  - "The following example uses the Update method to update the content of an <xref:System.Web.UI.UpdatePanel> control when more than five seconds have elapsed since the last update.  \n  \n [!code-cs[System.Web.UI.UpdatePanel.UpdateMode#1](~/add/codesnippet/csharp/m-system.web.ui.updatepa_0_1.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/add/codesnippet/visualbasic/m-system.web.ui.updatepa_0_1.aspx)]"
  syntax:
    content: public void Update ();
    parameters: []
  overload: System.Web.UI.UpdatePanel.Update*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Web.UI.UpdatePanel.UpdateMode*> property is set to <xref href=\"System.Web.UI.UpdatePanelUpdateMode\"></xref>.  \n  \n \\- or –  \n  \n The Update method is called during or after the page's <xref:System.Web.UI.Page.Render*> event."
  platform:
  - net462
- uid: System.Web.UI.UpdatePanel.UpdateMode
  id: UpdateMode
  parent: System.Web.UI.UpdatePanel
  langs:
  - csharp
  name: UpdateMode
  nameWithType: UpdatePanel.UpdateMode
  fullName: System.Web.UI.UpdatePanel.UpdateMode
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.UI
  summary: "Obtém ou define um valor que indica quando uma <xref href=&quot;System.Web.UI.UpdatePanel&quot;> </xref> conteúdo do controle é atualizado."
  remarks: "Quando um <xref:System.Web.UI.UpdatePanel>controle não está dentro de outro <xref:System.Web.UI.UpdatePanel>o painel de controle é atualizado de acordo com as configurações do UpdateMode e <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>Propriedades, junto com a coleção de gatilhos.</xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> </xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel> Quando um <xref:System.Web.UI.UpdatePanel>controle está dentro de outro <xref:System.Web.UI.UpdatePanel>controle filho é atualizada automaticamente quando o painel pai está atualizado.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>       O conteúdo de um <xref:System.Web.UI.UpdatePanel>controle é atualizado nas seguintes circunstâncias: - se a propriedade UpdateMode está definida como <xref:System.Web.UI.UpdatePanelUpdateMode>, o <xref:System.Web.UI.UpdatePanel>conteúdo do controle será atualizado em cada postagem que se origina em qualquer lugar na página.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanelUpdateMode> </xref:System.Web.UI.UpdatePanel> Isso inclui postagens assíncronas de controles que estão dentro de outros <xref:System.Web.UI.UpdatePanel>controles e postagens de controles que não estão dentro <xref:System.Web.UI.UpdatePanel>controles.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>      -Se a <xref:System.Web.UI.UpdatePanel>controle está aninhado em outro <xref:System.Web.UI.UpdatePanel>controle e o painel de atualização de pai é atualizada.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>      -Se a propriedade UpdateMode está definida como <xref:System.Web.UI.UpdatePanelUpdateMode>, e uma das seguintes condições ocorre:-você chamar o <xref:System.Web.UI.UpdatePanel.Update%2A>método o <xref:System.Web.UI.UpdatePanel>controlar explicitamente.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.Update%2A> </xref:System.Web.UI.UpdatePanelUpdateMode>          -A postagem é causada por um controle que é definido como um gatilho usando a <xref:System.Web.UI.UpdatePanel.Triggers%2A>propriedade o <xref:System.Web.UI.UpdatePanel>controle.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.Triggers%2A> Nesse cenário, o controle explicitamente dispara uma atualização do conteúdo do painel. O controle pode ser dentro ou fora de <xref:System.Web.UI.UpdatePanel>controle que define o gatilho.</xref:System.Web.UI.UpdatePanel>          -O <xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A>está definida como `true` e um controle filho de <xref:System.Web.UI.UpdatePanel>controle causar um postback.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel.ChildrenAsTriggers%2A> Um controle filho de uma construção <xref:System.Web.UI.UpdatePanel>controle não faz com que uma atualização para o exterior <xref:System.Web.UI.UpdatePanel>controlar a menos que ele é definido explicitamente como um disparador.</xref:System.Web.UI.UpdatePanel> </xref:System.Web.UI.UpdatePanel>"
  example:
  - "The following example shows how to use the UpdateMode property. The example declares two <xref:System.Web.UI.UpdatePanel> controls. In the first panel, the UpdateMode property is set to <xref:System.Web.UI.UpdatePanelUpdateMode>. In the second panel, UpdateMode is set to <xref:System.Web.UI.UpdatePanelUpdateMode>. A button outside both panels is registered as an asynchronous postback control by calling the <xref:System.Web.UI.ScriptManager.RegisterAsyncPostBackControl%2A> method of the <xref:System.Web.UI.ScriptManager> control. In the button's `Click` event handler, the <xref:System.Web.UI.UpdatePanel.Update%2A> method of the first panel is called if more than five seconds have elapsed since its last update. In this scenario, the panel’s content is updated only if the last panel refresh was more than five seconds ago. The content of the second panel is always updated.  \n  \n [!code-cs[System.Web.UI.UpdatePanel.UpdateMode#1](~/add/codesnippet/csharp/p-system.web.ui.updatepa_0_1.aspx)]\n [!code-vb[System.Web.UI.UpdatePanel.UpdateMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.updatepa_0_1.aspx)]"
  syntax:
    content: public System.Web.UI.UpdatePanelUpdateMode UpdateMode { get; set; }
    return:
      type: System.Web.UI.UpdatePanelUpdateMode
      description: "Uma da <xref href=&quot;System.Web.UI.UpdatePanelUpdateMode&quot;> </xref> valores. O padrão é <xref href=&quot;System.Web.UI.UpdatePanelUpdateMode&quot;> </xref>."
  overload: System.Web.UI.UpdatePanel.UpdateMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O tipo especificado não é um do <xref href=&quot;System.Web.UI.UpdatePanelUpdateMode&quot;> </xref> valores."
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.UI.UpdatePanel.#ctor
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: UpdatePanel()
  nameWithType: UpdatePanel.UpdatePanel()
  fullName: System.Web.UI.UpdatePanel.UpdatePanel()
- uid: System.Web.UI.UpdatePanel.Attributes
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Attributes
  nameWithType: UpdatePanel.Attributes
  fullName: System.Web.UI.UpdatePanel.Attributes
- uid: System.Web.UI.AttributeCollection
  parent: System.Web.UI
  isExternal: false
  name: AttributeCollection
  nameWithType: AttributeCollection
  fullName: System.Web.UI.AttributeCollection
- uid: System.Web.UI.UpdatePanel.ChildrenAsTriggers
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: ChildrenAsTriggers
  nameWithType: UpdatePanel.ChildrenAsTriggers
  fullName: System.Web.UI.UpdatePanel.ChildrenAsTriggers
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.UpdatePanel.ContentTemplate
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: ContentTemplate
  nameWithType: UpdatePanel.ContentTemplate
  fullName: System.Web.UI.UpdatePanel.ContentTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.UpdatePanel.ContentTemplateContainer
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: ContentTemplateContainer
  nameWithType: UpdatePanel.ContentTemplateContainer
  fullName: System.Web.UI.UpdatePanel.ContentTemplateContainer
- uid: System.Web.UI.UpdatePanel.Controls
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Controls
  nameWithType: UpdatePanel.Controls
  fullName: System.Web.UI.UpdatePanel.Controls
- uid: System.Web.UI.ControlCollection
  parent: System.Web.UI
  isExternal: false
  name: ControlCollection
  nameWithType: ControlCollection
  fullName: System.Web.UI.ControlCollection
- uid: System.Web.UI.UpdatePanel.CreateContentTemplateContainer
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: CreateContentTemplateContainer()
  nameWithType: UpdatePanel.CreateContentTemplateContainer()
  fullName: System.Web.UI.UpdatePanel.CreateContentTemplateContainer()
- uid: System.Web.UI.UpdatePanel.CreateControlCollection
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: CreateControlCollection()
  nameWithType: UpdatePanel.CreateControlCollection()
  fullName: System.Web.UI.UpdatePanel.CreateControlCollection()
- uid: System.Web.UI.UpdatePanel.Initialize
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Initialize()
  nameWithType: UpdatePanel.Initialize()
  fullName: System.Web.UI.UpdatePanel.Initialize()
- uid: System.Web.UI.UpdatePanel.IsInPartialRendering
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: IsInPartialRendering
  nameWithType: UpdatePanel.IsInPartialRendering
  fullName: System.Web.UI.UpdatePanel.IsInPartialRendering
- uid: System.Web.UI.UpdatePanel.OnInit(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: UpdatePanel.OnInit(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.UpdatePanel.OnLoad(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnLoad(EventArgs)
  nameWithType: UpdatePanel.OnLoad(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnLoad(EventArgs)
- uid: System.Web.UI.UpdatePanel.OnPreRender(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnPreRender(EventArgs)
  nameWithType: UpdatePanel.OnPreRender(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnPreRender(EventArgs)
- uid: System.Web.UI.UpdatePanel.OnUnload(System.EventArgs)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnUnload(EventArgs)
  nameWithType: UpdatePanel.OnUnload(EventArgs)
  fullName: System.Web.UI.UpdatePanel.OnUnload(EventArgs)
- uid: System.Web.UI.UpdatePanel.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: UpdatePanel.Render(HtmlTextWriter)
  fullName: System.Web.UI.UpdatePanel.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.UpdatePanel.RenderChildren(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: RenderChildren(HtmlTextWriter)
  nameWithType: UpdatePanel.RenderChildren(HtmlTextWriter)
  fullName: System.Web.UI.UpdatePanel.RenderChildren(HtmlTextWriter)
- uid: System.Web.UI.UpdatePanel.RenderMode
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: RenderMode
  nameWithType: UpdatePanel.RenderMode
  fullName: System.Web.UI.UpdatePanel.RenderMode
- uid: System.Web.UI.UpdatePanelRenderMode
  parent: System.Web.UI
  isExternal: false
  name: UpdatePanelRenderMode
  nameWithType: UpdatePanelRenderMode
  fullName: System.Web.UI.UpdatePanelRenderMode
- uid: System.Web.UI.UpdatePanel.RequiresUpdate
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: RequiresUpdate
  nameWithType: UpdatePanel.RequiresUpdate
  fullName: System.Web.UI.UpdatePanel.RequiresUpdate
- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.GetAttribute(String)
  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute(String)
  fullName: System.Web.UI.UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
  fullName: System.Web.UI.UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute(String,String)
- uid: System.Web.UI.UpdatePanel.Triggers
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Triggers
  nameWithType: UpdatePanel.Triggers
  fullName: System.Web.UI.UpdatePanel.Triggers
- uid: System.Web.UI.UpdatePanelTriggerCollection
  parent: System.Web.UI
  isExternal: false
  name: UpdatePanelTriggerCollection
  nameWithType: UpdatePanelTriggerCollection
  fullName: System.Web.UI.UpdatePanelTriggerCollection
- uid: System.Web.UI.UpdatePanel.Update
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Update()
  nameWithType: UpdatePanel.Update()
  fullName: System.Web.UI.UpdatePanel.Update()
- uid: System.Web.UI.UpdatePanel.UpdateMode
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: UpdateMode
  nameWithType: UpdatePanel.UpdateMode
  fullName: System.Web.UI.UpdatePanel.UpdateMode
- uid: System.Web.UI.UpdatePanelUpdateMode
  parent: System.Web.UI
  isExternal: false
  name: UpdatePanelUpdateMode
  nameWithType: UpdatePanelUpdateMode
  fullName: System.Web.UI.UpdatePanelUpdateMode
- uid: System.Web.UI.UpdatePanel.#ctor*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: UpdatePanel
  nameWithType: UpdatePanel.UpdatePanel
- uid: System.Web.UI.UpdatePanel.Attributes*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Attributes
  nameWithType: UpdatePanel.Attributes
- uid: System.Web.UI.UpdatePanel.ChildrenAsTriggers*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: ChildrenAsTriggers
  nameWithType: UpdatePanel.ChildrenAsTriggers
- uid: System.Web.UI.UpdatePanel.ContentTemplate*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: ContentTemplate
  nameWithType: UpdatePanel.ContentTemplate
- uid: System.Web.UI.UpdatePanel.ContentTemplateContainer*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: ContentTemplateContainer
  nameWithType: UpdatePanel.ContentTemplateContainer
- uid: System.Web.UI.UpdatePanel.Controls*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Controls
  nameWithType: UpdatePanel.Controls
- uid: System.Web.UI.UpdatePanel.CreateContentTemplateContainer*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: CreateContentTemplateContainer
  nameWithType: UpdatePanel.CreateContentTemplateContainer
- uid: System.Web.UI.UpdatePanel.CreateControlCollection*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: CreateControlCollection
  nameWithType: UpdatePanel.CreateControlCollection
- uid: System.Web.UI.UpdatePanel.Initialize*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Initialize
  nameWithType: UpdatePanel.Initialize
- uid: System.Web.UI.UpdatePanel.IsInPartialRendering*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: IsInPartialRendering
  nameWithType: UpdatePanel.IsInPartialRendering
- uid: System.Web.UI.UpdatePanel.OnInit*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnInit
  nameWithType: UpdatePanel.OnInit
- uid: System.Web.UI.UpdatePanel.OnLoad*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnLoad
  nameWithType: UpdatePanel.OnLoad
- uid: System.Web.UI.UpdatePanel.OnPreRender*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnPreRender
  nameWithType: UpdatePanel.OnPreRender
- uid: System.Web.UI.UpdatePanel.OnUnload*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: OnUnload
  nameWithType: UpdatePanel.OnUnload
- uid: System.Web.UI.UpdatePanel.Render*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Render
  nameWithType: UpdatePanel.Render
- uid: System.Web.UI.UpdatePanel.RenderChildren*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: RenderChildren
  nameWithType: UpdatePanel.RenderChildren
- uid: System.Web.UI.UpdatePanel.RenderMode*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: RenderMode
  nameWithType: UpdatePanel.RenderMode
- uid: System.Web.UI.UpdatePanel.RequiresUpdate*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: RequiresUpdate
  nameWithType: UpdatePanel.RequiresUpdate
- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#GetAttribute*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.GetAttribute
  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.GetAttribute
- uid: System.Web.UI.UpdatePanel.System#Web#UI#IAttributeAccessor#SetAttribute*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: System.Web.UI.IAttributeAccessor.SetAttribute
  nameWithType: UpdatePanel.System.Web.UI.IAttributeAccessor.SetAttribute
- uid: System.Web.UI.UpdatePanel.Triggers*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Triggers
  nameWithType: UpdatePanel.Triggers
- uid: System.Web.UI.UpdatePanel.Update*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: Update
  nameWithType: UpdatePanel.Update
- uid: System.Web.UI.UpdatePanel.UpdateMode*
  parent: System.Web.UI.UpdatePanel
  isExternal: false
  name: UpdateMode
  nameWithType: UpdatePanel.UpdateMode
