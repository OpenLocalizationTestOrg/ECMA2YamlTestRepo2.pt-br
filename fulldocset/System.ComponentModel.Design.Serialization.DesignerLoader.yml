### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.DesignerLoader
  id: DesignerLoader
  children:
  - System.ComponentModel.Design.Serialization.DesignerLoader.#ctor
  - System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  - System.ComponentModel.Design.Serialization.DesignerLoader.Dispose
  - System.ComponentModel.Design.Serialization.DesignerLoader.Flush
  - System.ComponentModel.Design.Serialization.DesignerLoader.Loading
  langs:
  - csharp
  name: DesignerLoader
  nameWithType: DesignerLoader
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader
  type: Class
  summary: "Fornece uma interface de carregador de designer básico que pode ser usada para implementar um carregador de designer personalizado."
  remarks: "DesignerLoader pode ser implementado para dar suporte a carregamento personalizado de um designer e componentes do designer. Um carregador de designer também é responsável por gravar alterações para um documento aberto para o armazenamento o carregador usado ao carregar o documento após o <xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A>método é chamado.</xref:System.ComponentModel.Design.Serialization.DesignerLoader.Flush%2A>       Por padrão, o ambiente de desenvolvimento do Visual Studio cria seu próprio variedade de DesignerLoader que pode carregar projetos básicos do designers. Para criar um carregador de designer personalizado, você deve herdar de e implementar a classe abstrata de DesignerLoader. Você não pode instanciar diretamente DesignerLoader, porque não tem nenhum construtor público.       Quando <xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A>é chamado, o carregador de designer carrega o documento de design, exibe o designer superfície usando o <xref:System.ComponentModel.Design.IDesignerHost>interface e chamadas <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A>no <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>interface quando terminar.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost.EndLoad%2A> </xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad%2A> A <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>implementação é geralmente a mesma classe que implementa <xref:System.ComponentModel.Design.IDesignerHost>.</xref:System.ComponentModel.Design.IDesignerHost> </xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public abstract class DesignerLoader
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: DesignerLoader()
  nameWithType: DesignerLoader.DesignerLoader()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.DesignerLoader()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerLoader&quot;> </xref> classe."
  syntax:
    content: protected DesignerLoader ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  id: BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: BeginLoad(IDesignerLoaderHost)
  nameWithType: DesignerLoader.BeginLoad(IDesignerLoaderHost)
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(IDesignerLoaderHost)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Começa a carregar um designer."
  remarks: "O <xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost>que é passado para o `host` parâmetro normalmente é o mesmo objeto de host do designer.</xref:System.ComponentModel.Design.Serialization.IDesignerLoaderHost> Através dessa referência para o host do carregador, o carregador de designer pode recarregar o documento de design e indicar que concluiu a carregar o documento de design."
  syntax:
    content: public abstract void BeginLoad (System.ComponentModel.Design.Serialization.IDesignerLoaderHost host);
    parameters:
    - id: host
      type: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
      description: "O host do carregador por meio do qual esse carregador carrega componentes."
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignerLoader.Dispose()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Libera todos os recursos usados pelo <xref href=&quot;System.ComponentModel.Design.Serialization.DesignerLoader&quot;> </xref>."
  remarks: "Chamar Dispose quando terminar de usar o <xref:System.ComponentModel.Design.Serialization.DesignerLoader>.</xref:System.ComponentModel.Design.Serialization.DesignerLoader> O método Dispose deixa a <xref:System.ComponentModel.Design.Serialization.DesignerLoader>em um estado inutilizável.</xref:System.ComponentModel.Design.Serialization.DesignerLoader> Depois de chamar Dispose, você deve liberar todas as referências para o <xref:System.ComponentModel.Design.Serialization.DesignerLoader>para o coletor de lixo possa recuperar a memória que o <xref:System.ComponentModel.Design.Serialization.DesignerLoader>estava ocupando.</xref:System.ComponentModel.Design.Serialization.DesignerLoader> </xref:System.ComponentModel.Design.Serialization.DesignerLoader> Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada Dispose antes de liberar sua última referência a <xref:System.ComponentModel.Design.Serialization.DesignerLoader>.</xref:System.ComponentModel.Design.Serialization.DesignerLoader> Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.ComponentModel.Design.Serialization.DesignerLoader>do objeto `Finalize` método.</xref:System.ComponentModel.Design.Serialization.DesignerLoader>"
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Flush
  id: Flush
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: Flush()
  nameWithType: DesignerLoader.Flush()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Flush()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Gravações em cache as alterações para o local que o designer foi carregado por."
  remarks: "O host de designer chama esse método periodicamente para garantir que as alterações feitas no documento foram salvos pelo carregador de designer. Esse método permite carregadores de designer implementar um esquema de gravação assíncrona para melhorar o desempenho. A implementação padrão desse método não fará nada."
  syntax:
    content: public virtual void Flush ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Loading
  id: Loading
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  langs:
  - csharp
  name: Loading
  nameWithType: DesignerLoader.Loading
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Loading
  type: Property
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Obtém um valor que indica se o carregador atualmente está carregando um documento."
  syntax:
    content: public virtual bool Loading { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o carregador atualmente está carregando um documento. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.Serialization.DesignerLoader.Loading*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.#ctor
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: DesignerLoader()
  nameWithType: DesignerLoader.DesignerLoader()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.DesignerLoader()
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(System.ComponentModel.Design.Serialization.IDesignerLoaderHost)
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: BeginLoad(IDesignerLoaderHost)
  nameWithType: DesignerLoader.BeginLoad(IDesignerLoaderHost)
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad(IDesignerLoaderHost)
- uid: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: IDesignerLoaderHost
  nameWithType: IDesignerLoaderHost
  fullName: System.ComponentModel.Design.Serialization.IDesignerLoaderHost
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Dispose()
  nameWithType: DesignerLoader.Dispose()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose()
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Flush
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Flush()
  nameWithType: DesignerLoader.Flush()
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Flush()
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Loading
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Loading
  nameWithType: DesignerLoader.Loading
  fullName: System.ComponentModel.Design.Serialization.DesignerLoader.Loading
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.#ctor*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: DesignerLoader
  nameWithType: DesignerLoader.DesignerLoader
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.BeginLoad*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: BeginLoad
  nameWithType: DesignerLoader.BeginLoad
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Dispose*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Dispose
  nameWithType: DesignerLoader.Dispose
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Flush*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Flush
  nameWithType: DesignerLoader.Flush
- uid: System.ComponentModel.Design.Serialization.DesignerLoader.Loading*
  parent: System.ComponentModel.Design.Serialization.DesignerLoader
  isExternal: false
  name: Loading
  nameWithType: DesignerLoader.Loading
