### YamlMime:ManagedReference
items:
- uid: System.DirectoryServices.ActiveDirectory.Forest
  id: Forest
  children:
  - System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions
  - System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  - System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  - System.DirectoryServices.ActiveDirectory.Forest.Dispose
  - System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)
  - System.DirectoryServices.ActiveDirectory.Forest.Domains
  - System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs
  - System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs
  - System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog
  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  - System.DirectoryServices.ActiveDirectory.Forest.ForestMode
  - System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel
  - System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships
  - System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest
  - System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  - System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs
  - System.DirectoryServices.ActiveDirectory.Forest.Name
  - System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner
  - System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)
  - System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)
  - System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  - System.DirectoryServices.ActiveDirectory.Forest.RootDomain
  - System.DirectoryServices.ActiveDirectory.Forest.Schema
  - System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner
  - System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  - System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)
  - System.DirectoryServices.ActiveDirectory.Forest.Sites
  - System.DirectoryServices.ActiveDirectory.Forest.ToString
  - System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  - System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)
  - System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  langs:
  - csharp
  name: Forest
  nameWithType: Forest
  fullName: System.DirectoryServices.ActiveDirectory.Forest
  type: Class
  summary: "A classe de floresta representa uma floresta do Active Directory Domain Services."
  syntax:
    content: 'public class Forest : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions
  id: ApplicationPartitions
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: ApplicationPartitions
  nameWithType: Forest.ApplicationPartitions
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém uma coleção de todas as partições de aplicativo na floresta."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection ApplicationPartitions { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
      description: "O <xref href=&quot;System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection&quot;> </xref> objeto que contém todas as partições de aplicativo nesta floresta."
  overload: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  id: CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Cria o lado local de uma relação de confiança com a floresta especificada."
  remarks: "Esse método cria um lado de uma relação de confiança. A relação de confiança é estabelecida não até que os dois lados da relação de confiança foi criados.       O `trustPassword` parâmetro associa uma senha com a relação de confiança criada. Quando o outro lado da relação de confiança é criado, a mesma senha é fornecida e as duas relações de confiança locais, em seguida, são vinculadas entre si.       Para criar programaticamente os dois lados de uma relação de confiança em uma única chamada de método, use o <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship%2A?displayProperty=fullName>método.</xref:System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void CreateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection direction, string trustPassword);
    parameters:
    - id: targetForestName
      type: System.String
      description: "O nome DNS da floresta criada com a relação de confiança."
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Uma da <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> membros que determina a direção da relação de confiança, em relação a essa floresta."
    - id: trustPassword
      type: System.String
      description: "A senha para a relação de confiança. Consulte a seção de comentários para obter mais informações."
  overload: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    description: "Já existe uma relação de confiança."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForest</code>nome ou <code>trustPassword</code> cadeia de caracteres está vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForest</code>or <code>trustPassword</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>não é válido <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> valor."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: CreateTrustRelationship(Forest,TrustDirection)
  nameWithType: Forest.CreateTrustRelationship(Forest,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(Forest,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Cria os dois lados de uma relação de confiança com a floresta especificada."
  remarks: "Esse método cria os dois lados de uma relação de confiança com uma única chamada de método. O <xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName>método é usado para criar apenas um dos lados de uma relação de confiança.</xref:System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void CreateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);
    parameters:
    - id: targetForest
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto que representa a floresta que o objeto de confiança que está sendo criado com."
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Uma da <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> membros que determina a direção da relação de confiança, em relação a essa floresta."
  overload: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
    description: "Já existe uma relação de confiança."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>direction</code>não é válido <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> valor."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)
  id: DeleteLocalSideOfTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: DeleteLocalSideOfTrustRelationship(String)
  nameWithType: Forest.DeleteLocalSideOfTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Exclui o lado local de uma relação de confiança."
  remarks: "Quando um lado de uma relação de confiança é excluído, a relação de confiança não está mais definida.       Para excluir os dois lados de uma relação de confiança com a chamada de um método, use o <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=fullName>método.</xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void DeleteLocalSideOfTrustRelationship (string targetForestName);
    parameters:
    - id: targetForestName
      type: System.String
      description: "O nome DNS da floresta que existe a relação de confiança com."
  overload: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança com o <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> que é especificado pelo <code> targetForestName </code> parâmetro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  id: DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: DeleteTrustRelationship(Forest)
  nameWithType: Forest.DeleteTrustRelationship(Forest)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(Forest)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Exclui os dois lados de uma relação de confiança."
  remarks: "Para excluir apenas um lado de uma relação de confiança, use o <xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName>método.</xref:System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship%2A?displayProperty=fullName>"
  syntax:
    content: public void DeleteTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);
    parameters:
    - id: targetForest
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto que representa a floresta que existe a relação de confiança com."
  overload: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança com especificado <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose
  id: Dispose
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: Dispose()
  nameWithType: Forest.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Libera todos os recursos gerenciados e não gerenciados que são mantidos pelo objeto."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.DirectoryServices.ActiveDirectory.Forest.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Forest.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose(Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Libera os recursos gerenciados usados pelo objeto e, opcionalmente, libera os recursos não gerenciados."
  syntax:
    content: protected void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Um <xref:System.Boolean>valor que determina se os recursos gerenciados devem ser liberados.</xref:System.Boolean> <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os recursos gerenciados devem ser liberados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se apenas os recursos não gerenciados devem ser liberados."
  overload: System.DirectoryServices.ActiveDirectory.Forest.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.Domains
  id: Domains
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: Domains
  nameWithType: Forest.Domains
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Domains
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém uma coleção de todos os domínios na floresta."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainCollection Domains { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainCollection
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainCollection&quot;> </xref> coleção que contém o <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> domínios no atual <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.Domains*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs
  id: FindAllDiscoverableGlobalCatalogs
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindAllDiscoverableGlobalCatalogs()
  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Localiza todos os catálogos globais detectáveis nesta floresta."
  remarks: "Você pode localizar controladores de domínio detectável consultando registros SRV do DNS.  Somente os catálogos globais que registram um genérico, não específica de site, o registro SRV GC são retornados por este método."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection&quot;> </xref> que contém a coleção de catálogos globais que foram encontrados."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)
  id: FindAllDiscoverableGlobalCatalogs(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindAllDiscoverableGlobalCatalogs(String)
  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Localiza todos os catálogos globais podem ser descobertos na floresta em um site especificado."
  remarks: "Você pode encontrar os catálogos globais detectáveis consultando os registros SRV do DNS.  Se um catálogo global não registra um registro de GC SRV para o site especificado, ele não será retornado por esse método, mesmo se o catálogo global estiver localizado fisicamente nesse site.       Todos os catálogos globais que registrar um registro de GC SRV para o site especificado serão retornados por esse método, mesmo que não podem ser localizados fisicamente dentro desse site."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllDiscoverableGlobalCatalogs (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "O nome do site para pesquisar."
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection&quot;> </xref> que contém a coleção de catálogos globais que foram encontrados."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs
  id: FindAllGlobalCatalogs
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindAllGlobalCatalogs()
  nameWithType: Forest.FindAllGlobalCatalogs()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Localiza todos os catálogos globais na floresta."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection&quot;> </xref> que contém a coleção de catálogos globais que foram encontrados."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)
  id: FindAllGlobalCatalogs(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindAllGlobalCatalogs(String)
  nameWithType: Forest.FindAllGlobalCatalogs(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Localiza todos os catálogos globais na floresta para um determinado site."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection FindAllGlobalCatalogs (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "O nome do site para pesquisar."
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection&quot;> </xref> objeto que contém a coleção de catálogos globais que foram encontrados."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog
  id: FindGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindGlobalCatalog()
  nameWithType: Forest.FindGlobalCatalog()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Localiza nenhum catálogo global na floresta."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog
      description: "A <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalog&quot;></xref> of this <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;></xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Um catálogo global não pode ser localizado."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindGlobalCatalog(LocatorOptions)
  nameWithType: Forest.FindGlobalCatalog(LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Localiza um catálogo global na floresta para um local especificado critérios."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.LocatorOptions&quot;> </xref> valor que especifica os critérios de localização."
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalog&quot;> </xref> objeto para os critérios do local especificado."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Um catálogo global não pode ser localizado."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)
  id: FindGlobalCatalog(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindGlobalCatalog(String)
  nameWithType: Forest.FindGlobalCatalog(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Localiza um catálogo global na floresta para um site especificado."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName);
    parameters:
    - id: siteName
      type: System.String
      description: "O nome do site para pesquisar."
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalog&quot;> </xref> objeto para o site especificado."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Um catálogo global não pode ser localizado."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  id: FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: FindGlobalCatalog(String,LocatorOptions)
  nameWithType: Forest.FindGlobalCatalog(String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String,LocatorOptions)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Localiza um catálogo global na floresta de um critério de site e o local especificado."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalog FindGlobalCatalog (string siteName, System.DirectoryServices.ActiveDirectory.LocatorOptions flag);
    parameters:
    - id: siteName
      type: System.String
      description: "O nome do site para pesquisar."
    - id: flag
      type: System.DirectoryServices.ActiveDirectory.LocatorOptions
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.LocatorOptions&quot;> </xref> valor que especifica os critérios de localização."
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalog
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalog&quot;> </xref> objeto para os critérios de site e o local especificados."
  overload: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Um catálogo global não pode ser localizado."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>siteName</code>é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>siteName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestMode
  id: ForestMode
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: ForestMode
  nameWithType: Forest.ForestMode
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestMode
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém o modo de operação da floresta."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ForestMode ForestMode { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ForestMode
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.ForestMode&quot;> </xref> valor que representa o modo de floresta atual deste <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.ForestMode*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel
  id: ForestModeLevel
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: ForestModeLevel
  nameWithType: Forest.ForestModeLevel
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém o nível de modo operacional da floresta."
  syntax:
    content: public int ForestModeLevel { get; }
    return:
      type: System.Int32
      description: "O nível de modo operacional da floresta."
  overload: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships
  id: GetAllTrustRelationships
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GetAllTrustRelationships()
  nameWithType: Forest.GetAllTrustRelationships()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém uma coleção de relações de confiança da floresta atual."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection GetAllTrustRelationships ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection&quot;> </xref> coleção que contém <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustRelationshipInformation&quot;> </xref> objetos que representa a relações do atual de confiança <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest
  id: GetCurrentForest
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GetCurrentForest()
  nameWithType: Forest.GetCurrentForest()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém um <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto para o contexto do usuário atual."
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Forest GetCurrentForest ();
    parameters: []
    return:
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto que representa a floresta atual."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  id: GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GetForest(DirectoryContext)
  nameWithType: Forest.GetForest(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetForest(DirectoryContext)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém um <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto para o contexto especificado."
  syntax:
    content: public static System.DirectoryServices.ActiveDirectory.Forest GetForest (System.DirectoryServices.ActiveDirectory.DirectoryContext context);
    parameters:
    - id: context
      type: System.DirectoryServices.ActiveDirectory.DirectoryContext
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.DirectoryContext&quot;> </xref> objeto que contém o destino e as credenciais a serem usadas para recuperar o objeto."
    return:
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto que representa a floresta que foi recuperada por este método."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GetForest*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Uma conexão para o destino especificado em <code> context </code> não pôde ser feita."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>context</code>não é válido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>context</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)
  id: GetSelectiveAuthenticationStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GetSelectiveAuthenticationStatus(String)
  nameWithType: Forest.GetSelectiveAuthenticationStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém um valor booliano que indica se a autenticação seletiva está habilitada na relação de confiança de entrada com a floresta especificada.  <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a autenticação seletiva estiver habilitada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Para obter mais informações, consulte a seção comentários."
  remarks: "Para uma relação de confiança de floresta, se você optar por autenticação seletiva, as permissões devem ser habilitadas manualmente em cada domínio e recurso na floresta local na qual você deseja que os usuários em outra floresta tenham acesso.       Quando um usuário se autentica em uma relação de confiança para o qual seletivo autenticação está habilitada, uma outra organização identificação de segurança (SID) é adicionada aos dados de autorização do usuário. A presença desse SID inicia uma verificação no domínio do recurso para garantir que o usuário tem permissão para autenticar no serviço. Depois que o usuário é autenticado, o servidor que autentica o usuário adiciona esse SID de organização, se o outro SID de organização não ainda estiver presente. Somente um desses SIDs especiais pode estar presente no contexto de um usuário autenticado."
  syntax:
    content: public bool GetSelectiveAuthenticationStatus (string targetForestName);
    parameters:
    - id: targetForestName
      type: System.String
      description: "O nome DNS do <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> com o qual existe a relação de confiança de entrada."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a autenticação seletiva estiver habilitada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança com o <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> especificado por <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Falha na chamada para LsaQueryTrustedDomainInfoByName. Para obter mais informações, consulte o tópico [LsaQueryTrustedDomainInfoByName](http://msdn.microsoft.com/library/default.asp?url=/library/en-us/secmgmt/security/lsaquerytrusteddomaininfobyname.asp) na biblioteca MSDN em [http://msdn.microsoft.com/library](http://msdn.microsoft.com/library)."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)
  id: GetSidFilteringStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GetSidFilteringStatus(String)
  nameWithType: Forest.GetSidFilteringStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém o SID filtragem de status de uma relação de confiança."
  syntax:
    content: public bool GetSidFilteringStatus (string targetForestName);
    parameters:
    - id: targetForestName
      type: System.String
      description: "O nome DNS do <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> do objeto com o qual existe a relação de confiança."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a filtragem de SID está habilitado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança com o <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto especificado por <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)
  id: GetTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GetTrustRelationship(String)
  nameWithType: Forest.GetTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém a relação de confiança entre a floresta a e a floresta especificada."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation GetTrustRelationship (string targetForestName);
    parameters:
    - id: targetForestName
      type: System.String
      description: "O nome do <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto para o qual as informações de relação de confiança deve ser obtido."
    return:
      type: System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation&quot;> </xref> objeto que representa a relação de confiança entre a floresta a e a floresta especificada."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança com o <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> especificado por <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs
  id: GlobalCatalogs
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: GlobalCatalogs
  nameWithType: Forest.GlobalCatalogs
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém uma coleção de todos os catálogos globais da floresta."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection GlobalCatalogs { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection&quot;> </xref> coleção que contém o <xref href=&quot;System.DirectoryServices.ActiveDirectory.GlobalCatalog&quot;> </xref> catálogos globais no atual <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.Name
  id: Name
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: Name
  nameWithType: Forest.Name
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Name
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém o nome da floresta."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "O nome deste <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.Name*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner
  id: NamingRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: NamingRoleOwner
  nameWithType: Forest.NamingRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém o controlador de domínio que detém a função de mestre de nomeação para a floresta FSMO."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController NamingRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> objeto que representa o controlador de domínio que é o mestre de nomeação de FSMO deste <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)
  id: RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: RaiseForestFunctionality(ForestMode)
  nameWithType: Forest.RaiseForestFunctionality(ForestMode)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(ForestMode)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Gera o modo de operação para a floresta."
  remarks: "O <xref:System.DirectoryServices.ActiveDirectory.ForestMode>valor pode ser gerado, mas não reduzida.</xref:System.DirectoryServices.ActiveDirectory.ForestMode> Isso significa que não é reversível aumentar o nível de funcionalidade da floresta e a decisão de fazer isso deve ser feita com cuidado.       Para obter mais informações sobre os modos operacionais de floresta, consulte [funcionalidade de domínio e floresta](http://www.microsoft.com/resources/documentation/WindowsServ/2003/standard/proddocs/en-us/sag_levels.asp).       A tabela a seguir define os valores válidos para `forestMode` com base no modo de operação atual da floresta.      | O modo atual | O modo pode ser aumentado para |   |------------------|---------------------------|   | <xref:System.DirectoryServices.ActiveDirectory.ForestMode>| <xref:System.DirectoryServices.ActiveDirectory.ForestMode></xref:System.DirectoryServices.ActiveDirectory.ForestMode></xref:System.DirectoryServices.ActiveDirectory.ForestMode><br /><br /> <xref:System.DirectoryServices.ActiveDirectory.ForestMode>|   | <xref:System.DirectoryServices.ActiveDirectory.ForestMode>| <xref:System.DirectoryServices.ActiveDirectory.ForestMode>|   | <xref:System.DirectoryServices.ActiveDirectory.ForestMode>| None|</xref:System.DirectoryServices.ActiveDirectory.ForestMode></xref:System.DirectoryServices.ActiveDirectory.ForestMode></xref:System.DirectoryServices.ActiveDirectory.ForestMode></xref:System.DirectoryServices.ActiveDirectory.ForestMode>"
  syntax:
    content: public void RaiseForestFunctionality (System.DirectoryServices.ActiveDirectory.ForestMode forestMode);
    parameters:
    - id: forestMode
      type: System.DirectoryServices.ActiveDirectory.ForestMode
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.ForestMode&quot;> </xref> valor de enumeração que especifica o novo nível de operação para a floresta."
  overload: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Com base no modo de operação atual da floresta, o valor especificado para <code> forestMode </code> não é válido."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>forestMode</code>não é válido <xref href=&quot;System.DirectoryServices.ActiveDirectory.ForestMode&quot;> </xref> valor de enumeração."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)
  id: RaiseForestFunctionalityLevel(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: RaiseForestFunctionalityLevel(Int32)
  nameWithType: Forest.RaiseForestFunctionalityLevel(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(Int32)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Aumenta o nível de funcionalidade de floresta para a configuração em questão."
  syntax:
    content: public void RaiseForestFunctionalityLevel (int forestMode);
    parameters:
    - id: forestMode
      type: System.Int32
      description: "Gere a esse nível."
  overload: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  id: RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: RepairTrustRelationship(Forest)
  nameWithType: Forest.RepairTrustRelationship(Forest)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(Forest)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Repara uma relação de confiança."
  syntax:
    content: public void RepairTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest);
    parameters:
    - id: targetForest
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> que representa o objeto de floresta com o qual existe a relação de confiança."
  overload: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança com o <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto especificado por <code> targetForest </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.RootDomain
  id: RootDomain
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: RootDomain
  nameWithType: Forest.RootDomain
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RootDomain
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém o primeiro domínio criado em uma floresta."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.Domain RootDomain { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.Domain
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.Domain&quot;> </xref> objeto que representa o primeiro domínio criado na <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.RootDomain*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.Schema
  id: Schema
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: Schema
  nameWithType: Forest.Schema
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Schema
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém o esquema da floresta."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema Schema { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema&quot;> </xref> objeto que representa o esquema do atual <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.Schema*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner
  id: SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: SchemaRoleOwner
  nameWithType: Forest.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém o controlador de domínio que detém a função de mestre de esquema do FSMO para a floresta."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.DomainController SchemaRoleOwner { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.DomainController
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.DomainController&quot;> </xref> objeto que representa o controlador de domínio que é o mestre de esquema do FSMO deste <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  id: SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: SetSelectiveAuthenticationStatus(String,Boolean)
  nameWithType: Forest.SetSelectiveAuthenticationStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(String,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Habilita ou desabilita a autenticação seletiva para uma relação de confiança de entrada."
  syntax:
    content: public void SetSelectiveAuthenticationStatus (string targetForestName, bool enable);
    parameters:
    - id: targetForestName
      type: System.String
      description: "O nome DNS do <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> do objeto com o qual existe a relação de confiança de entrada."
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a autenticação seletiva será habilitada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança com a floresta que é especificada pelo <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)
  id: SetSidFilteringStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: SetSidFilteringStatus(String,Boolean)
  nameWithType: Forest.SetSidFilteringStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(String,Boolean)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Define o estado com a floresta especificada a filtragem de SID."
  remarks: "Por padrão, as florestas novas e externas confia em [!INCLUDE[winxpsvr](~/add/includes/winxpsvr-md.md)] serviços de domínio do Active Directory impõem a filtragem SID.  A filtragem SID é usado para impedir ataques de usuários mal-intencionados que podem tentar conceder direitos de usuário elevados a outra conta de usuário.  Aplicar filtragem SID em relações de confiança de floresta não impede que migrações para domínios dentro da mesma floresta usem o histórico SID e não afetará sua estratégia de controle de acesso de grupo universal."
  syntax:
    content: public void SetSidFilteringStatus (string targetForestName, bool enable);
    parameters:
    - id: targetForestName
      type: System.String
      description: "O nome DNS do <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> do objeto com o qual existe a relação de confiança."
    - id: enable
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a filtragem SID será habilitada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança com a floresta que é especificada pelo <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto atual foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.Sites
  id: Sites
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: Sites
  nameWithType: Forest.Sites
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Sites
  type: Property
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Obtém uma coleção de sites que estão contidos na floresta."
  syntax:
    content: public System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection Sites { get; }
    return:
      type: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection&quot;> </xref> que contém o <xref href=&quot;System.DirectoryServices.ActiveDirectory.ActiveDirectorySite&quot;> </xref> sites no atual <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref>."
  overload: System.DirectoryServices.ActiveDirectory.Forest.Sites*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.ToString
  id: ToString
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: ToString()
  nameWithType: Forest.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ToString()
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Retorna uma representação de cadeia de caracteres da floresta atual."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Um <xref:System.String>que representa o nome de DNS a <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto.</xref:System.String>"
  overload: System.DirectoryServices.ActiveDirectory.Forest.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  id: UpdateLocalSideOfTrustRelationship(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: UpdateLocalSideOfTrustRelationship(String,String)
  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Atualiza a senha para o lado local de uma relação de confiança."
  syntax:
    content: public void UpdateLocalSideOfTrustRelationship (string targetForestName, string newTrustPassword);
    parameters:
    - id: targetForestName
      type: System.String
      description: "O nome do <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto para o qual a senha de confiança local deve ser alterado."
    - id: newTrustPassword
      type: System.String
      description: "A nova senha para a relação de confiança."
  overload: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança com a floresta que é especificada pelo <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>ou <code>newTrustPassword</code> é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>or <code>newTrustPassword</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  id: UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Atualiza a direção de relação de confiança e senha para o lado local de uma relação de confiança."
  syntax:
    content: public void UpdateLocalSideOfTrustRelationship (string targetForestName, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection, string newTrustPassword);
    parameters:
    - id: targetForestName
      type: System.String
      description: "O nome do <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto para o qual a direção da relação de confiança local e a senha devem ser alteradas."
    - id: newTrustDirection
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> valor para a nova direção de confiança para a relação de confiança."
    - id: newTrustPassword
      type: System.String
      description: "A nova senha para a relação de confiança."
  overload: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança com o <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto especificado por <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>ou <code>newTrustPassword</code> é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>or <code>newTrustPassword</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O <code> newTrustDirection </code> parâmetro não é válido <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> valor."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: UpdateTrustRelationship(Forest,TrustDirection)
  nameWithType: Forest.UpdateTrustRelationship(Forest,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(Forest,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Atualiza a direção da relação de confiança para uma relação de confiança. As instruções de confiança são atualizadas nos dois lados da relação de confiança."
  syntax:
    content: public void UpdateTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection newTrustDirection);
    parameters:
    - id: targetForest
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> de objeto para o qual as instruções de confiança devem ser alteradas."
    - id: newTrustDirection
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> valor que especifica a direção da relação de confiança novo para a relação de confiança."
  overload: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança com a floresta que é especificada pelo <code> targetForest </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "<code>newTrustDirection</code>não é válido <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> valor."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)
  id: VerifyOutboundTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: VerifyOutboundTrustRelationship(String)
  nameWithType: Forest.VerifyOutboundTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(String)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Verifica se uma relação de confiança de saída já estabelecida com a floresta especificada é válida."
  syntax:
    content: public void VerifyOutboundTrustRelationship (string targetForestName);
    parameters:
    - id: targetForestName
      type: System.String
      description: "O nome DNS do domínio com o qual existe a relação de confiança."
  overload: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança de saída com a floresta que é especificada pelo <code> targetForestName </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>targetForestName</code>é uma cadeia de caracteres vazia."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForestName</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  id: VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  langs:
  - csharp
  name: VerifyTrustRelationship(Forest,TrustDirection)
  nameWithType: Forest.VerifyTrustRelationship(Forest,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(Forest,TrustDirection)
  type: Method
  assemblies:
  - System.DirectoryServices
  namespace: System.DirectoryServices.ActiveDirectory
  summary: "Verifica se uma relação de confiança estabelecida anteriormente com a floresta especificada é válida."
  remarks: "Esse método verifica se uma relação de confiança foi estabelecida totalmente. A relação de confiança é estabelecida não até que os dois lados da relação de confiança foi criados."
  syntax:
    content: public void VerifyTrustRelationship (System.DirectoryServices.ActiveDirectory.Forest targetForest, System.DirectoryServices.ActiveDirectory.TrustDirection direction);
    parameters:
    - id: targetForest
      type: System.DirectoryServices.ActiveDirectory.Forest
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.Forest&quot;> </xref> objeto para o qual verificar a relação de confiança."
    - id: direction
      type: System.DirectoryServices.ActiveDirectory.TrustDirection
      description: "Um <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> valor que especifica a direção da relação de confiança, em relação a essa floresta."
  overload: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship*
  exceptions:
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
    description: "Não há nenhuma relação de confiança com a floresta que é especificada pelo <code> targetForest </code>, ou a floresta de destino não tem a direção da relação de confiança que é especificada pelo <code> direction </code>."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
    description: "Uma chamada para o serviço de diretório resultou em erro."
  - type: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    commentId: T:System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
    description: "O servidor de destino está ocupado ou indisponível."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>targetForest</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O <code> direction </code> parâmetro não é válido <xref href=&quot;System.DirectoryServices.ActiveDirectory.TrustDirection&quot;> </xref> valor."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto foi descartado."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "A conta especificada não tem permissão para executar esta operação."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryOperationException
  nameWithType: ActiveDirectoryOperationException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryOperationException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryServerDownException
  nameWithType: ActiveDirectoryServerDownException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryServerDownException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectExistsException
  nameWithType: ActiveDirectoryObjectExistsException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectExistsException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectoryObjectNotFoundException
  nameWithType: ActiveDirectoryObjectNotFoundException
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectoryObjectNotFoundException
- uid: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ApplicationPartitions
  nameWithType: Forest.ApplicationPartitions
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions
- uid: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ApplicationPartitionCollection
  nameWithType: ApplicationPartitionCollection
  fullName: System.DirectoryServices.ActiveDirectory.ApplicationPartitionCollection
- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship(String,TrustDirection,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.DirectoryServices.ActiveDirectory.TrustDirection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustDirection
  nameWithType: TrustDirection
  fullName: System.DirectoryServices.ActiveDirectory.TrustDirection
- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: CreateTrustRelationship(Forest,TrustDirection)
  nameWithType: Forest.CreateTrustRelationship(Forest,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship(Forest,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Forest
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Forest
  nameWithType: Forest
  fullName: System.DirectoryServices.ActiveDirectory.Forest
- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: DeleteLocalSideOfTrustRelationship(String)
  nameWithType: Forest.DeleteLocalSideOfTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: DeleteTrustRelationship(Forest)
  nameWithType: Forest.DeleteTrustRelationship(Forest)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship(Forest)
- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Dispose()
  nameWithType: Forest.Dispose()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose()
- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose(System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Forest.Dispose(Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.DirectoryServices.ActiveDirectory.Forest.Domains
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Domains
  nameWithType: Forest.Domains
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Domains
- uid: System.DirectoryServices.ActiveDirectory.DomainCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainCollection
  nameWithType: DomainCollection
  fullName: System.DirectoryServices.ActiveDirectory.DomainCollection
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindAllDiscoverableGlobalCatalogs()
  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs()
- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: GlobalCatalogCollection
  nameWithType: GlobalCatalogCollection
  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalogCollection
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindAllDiscoverableGlobalCatalogs(String)
  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindAllGlobalCatalogs()
  nameWithType: Forest.FindAllGlobalCatalogs()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs()
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindAllGlobalCatalogs(String)
  nameWithType: Forest.FindAllGlobalCatalogs(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindGlobalCatalog()
  nameWithType: Forest.FindGlobalCatalog()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog()
- uid: System.DirectoryServices.ActiveDirectory.GlobalCatalog
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: GlobalCatalog
  nameWithType: GlobalCatalog
  fullName: System.DirectoryServices.ActiveDirectory.GlobalCatalog
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindGlobalCatalog(LocatorOptions)
  nameWithType: Forest.FindGlobalCatalog(LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.LocatorOptions
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: LocatorOptions
  nameWithType: LocatorOptions
  fullName: System.DirectoryServices.ActiveDirectory.LocatorOptions
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindGlobalCatalog(String)
  nameWithType: Forest.FindGlobalCatalog(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(System.String,System.DirectoryServices.ActiveDirectory.LocatorOptions)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindGlobalCatalog(String,LocatorOptions)
  nameWithType: Forest.FindGlobalCatalog(String,LocatorOptions)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog(String,LocatorOptions)
- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestMode
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ForestMode
  nameWithType: Forest.ForestMode
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestMode
- uid: System.DirectoryServices.ActiveDirectory.ForestMode
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ForestMode
  nameWithType: ForestMode
  fullName: System.DirectoryServices.ActiveDirectory.ForestMode
- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ForestModeLevel
  nameWithType: Forest.ForestModeLevel
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetAllTrustRelationships()
  nameWithType: Forest.GetAllTrustRelationships()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships()
- uid: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: TrustRelationshipInformationCollection
  nameWithType: TrustRelationshipInformationCollection
  fullName: System.DirectoryServices.ActiveDirectory.TrustRelationshipInformationCollection
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetCurrentForest()
  nameWithType: Forest.GetCurrentForest()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest()
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetForest(System.DirectoryServices.ActiveDirectory.DirectoryContext)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetForest(DirectoryContext)
  nameWithType: Forest.GetForest(DirectoryContext)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetForest(DirectoryContext)
- uid: System.DirectoryServices.ActiveDirectory.DirectoryContext
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DirectoryContext
  nameWithType: DirectoryContext
  fullName: System.DirectoryServices.ActiveDirectory.DirectoryContext
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetSelectiveAuthenticationStatus(String)
  nameWithType: Forest.GetSelectiveAuthenticationStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetSidFilteringStatus(String)
  nameWithType: Forest.GetSidFilteringStatus(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetTrustRelationship(String)
  nameWithType: Forest.GetTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ForestTrustRelationshipInformation
  nameWithType: ForestTrustRelationshipInformation
  fullName: System.DirectoryServices.ActiveDirectory.ForestTrustRelationshipInformation
- uid: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GlobalCatalogs
  nameWithType: Forest.GlobalCatalogs
  fullName: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs
- uid: System.DirectoryServices.ActiveDirectory.Forest.Name
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Name
  nameWithType: Forest.Name
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Name
- uid: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: NamingRoleOwner
  nameWithType: Forest.NamingRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.DomainController
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: DomainController
  nameWithType: DomainController
  fullName: System.DirectoryServices.ActiveDirectory.DomainController
- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(System.DirectoryServices.ActiveDirectory.ForestMode)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RaiseForestFunctionality(ForestMode)
  nameWithType: Forest.RaiseForestFunctionality(ForestMode)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality(ForestMode)
- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(System.Int32)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RaiseForestFunctionalityLevel(Int32)
  nameWithType: Forest.RaiseForestFunctionalityLevel(Int32)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel(Int32)
- uid: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RepairTrustRelationship(Forest)
  nameWithType: Forest.RepairTrustRelationship(Forest)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship(Forest)
- uid: System.DirectoryServices.ActiveDirectory.Forest.RootDomain
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RootDomain
  nameWithType: Forest.RootDomain
  fullName: System.DirectoryServices.ActiveDirectory.Forest.RootDomain
- uid: System.DirectoryServices.ActiveDirectory.Domain
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: Domain
  nameWithType: Domain
  fullName: System.DirectoryServices.ActiveDirectory.Domain
- uid: System.DirectoryServices.ActiveDirectory.Forest.Schema
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Schema
  nameWithType: Forest.Schema
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Schema
- uid: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ActiveDirectorySchema
  nameWithType: ActiveDirectorySchema
  fullName: System.DirectoryServices.ActiveDirectory.ActiveDirectorySchema
- uid: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: Forest.SchemaRoleOwner
  fullName: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: SetSelectiveAuthenticationStatus(String,Boolean)
  nameWithType: Forest.SetSelectiveAuthenticationStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus(String,Boolean)
- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(System.String,System.Boolean)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: SetSidFilteringStatus(String,Boolean)
  nameWithType: Forest.SetSidFilteringStatus(String,Boolean)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus(String,Boolean)
- uid: System.DirectoryServices.ActiveDirectory.Forest.Sites
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Sites
  nameWithType: Forest.Sites
  fullName: System.DirectoryServices.ActiveDirectory.Forest.Sites
- uid: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
  parent: System.DirectoryServices.ActiveDirectory
  isExternal: false
  name: ReadOnlySiteCollection
  nameWithType: ReadOnlySiteCollection
  fullName: System.DirectoryServices.ActiveDirectory.ReadOnlySiteCollection
- uid: System.DirectoryServices.ActiveDirectory.Forest.ToString
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ToString()
  nameWithType: Forest.ToString()
  fullName: System.DirectoryServices.ActiveDirectory.Forest.ToString()
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship(String,String)
  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(System.String,System.DirectoryServices.ActiveDirectory.TrustDirection,System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  nameWithType: Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship(String,TrustDirection,String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: UpdateTrustRelationship(Forest,TrustDirection)
  nameWithType: Forest.UpdateTrustRelationship(Forest,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship(Forest,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(System.String)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: VerifyOutboundTrustRelationship(String)
  nameWithType: Forest.VerifyOutboundTrustRelationship(String)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship(String)
- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(System.DirectoryServices.ActiveDirectory.Forest,System.DirectoryServices.ActiveDirectory.TrustDirection)
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: VerifyTrustRelationship(Forest,TrustDirection)
  nameWithType: Forest.VerifyTrustRelationship(Forest,TrustDirection)
  fullName: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship(Forest,TrustDirection)
- uid: System.DirectoryServices.ActiveDirectory.Forest.ApplicationPartitions*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ApplicationPartitions
  nameWithType: Forest.ApplicationPartitions
- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: CreateLocalSideOfTrustRelationship
  nameWithType: Forest.CreateLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.CreateTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: CreateTrustRelationship
  nameWithType: Forest.CreateTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: DeleteLocalSideOfTrustRelationship
  nameWithType: Forest.DeleteLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.DeleteTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: DeleteTrustRelationship
  nameWithType: Forest.DeleteTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.Dispose*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Dispose
  nameWithType: Forest.Dispose
- uid: System.DirectoryServices.ActiveDirectory.Forest.Domains*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Domains
  nameWithType: Forest.Domains
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllDiscoverableGlobalCatalogs*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindAllDiscoverableGlobalCatalogs
  nameWithType: Forest.FindAllDiscoverableGlobalCatalogs
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindAllGlobalCatalogs*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindAllGlobalCatalogs
  nameWithType: Forest.FindAllGlobalCatalogs
- uid: System.DirectoryServices.ActiveDirectory.Forest.FindGlobalCatalog*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: FindGlobalCatalog
  nameWithType: Forest.FindGlobalCatalog
- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestMode*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ForestMode
  nameWithType: Forest.ForestMode
- uid: System.DirectoryServices.ActiveDirectory.Forest.ForestModeLevel*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ForestModeLevel
  nameWithType: Forest.ForestModeLevel
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetAllTrustRelationships*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetAllTrustRelationships
  nameWithType: Forest.GetAllTrustRelationships
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetCurrentForest*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetCurrentForest
  nameWithType: Forest.GetCurrentForest
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetForest*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetForest
  nameWithType: Forest.GetForest
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSelectiveAuthenticationStatus*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetSelectiveAuthenticationStatus
  nameWithType: Forest.GetSelectiveAuthenticationStatus
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetSidFilteringStatus*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetSidFilteringStatus
  nameWithType: Forest.GetSidFilteringStatus
- uid: System.DirectoryServices.ActiveDirectory.Forest.GetTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GetTrustRelationship
  nameWithType: Forest.GetTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.GlobalCatalogs*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: GlobalCatalogs
  nameWithType: Forest.GlobalCatalogs
- uid: System.DirectoryServices.ActiveDirectory.Forest.Name*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Name
  nameWithType: Forest.Name
- uid: System.DirectoryServices.ActiveDirectory.Forest.NamingRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: NamingRoleOwner
  nameWithType: Forest.NamingRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionality*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RaiseForestFunctionality
  nameWithType: Forest.RaiseForestFunctionality
- uid: System.DirectoryServices.ActiveDirectory.Forest.RaiseForestFunctionalityLevel*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RaiseForestFunctionalityLevel
  nameWithType: Forest.RaiseForestFunctionalityLevel
- uid: System.DirectoryServices.ActiveDirectory.Forest.RepairTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RepairTrustRelationship
  nameWithType: Forest.RepairTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.RootDomain*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: RootDomain
  nameWithType: Forest.RootDomain
- uid: System.DirectoryServices.ActiveDirectory.Forest.Schema*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Schema
  nameWithType: Forest.Schema
- uid: System.DirectoryServices.ActiveDirectory.Forest.SchemaRoleOwner*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: SchemaRoleOwner
  nameWithType: Forest.SchemaRoleOwner
- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSelectiveAuthenticationStatus*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: SetSelectiveAuthenticationStatus
  nameWithType: Forest.SetSelectiveAuthenticationStatus
- uid: System.DirectoryServices.ActiveDirectory.Forest.SetSidFilteringStatus*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: SetSidFilteringStatus
  nameWithType: Forest.SetSidFilteringStatus
- uid: System.DirectoryServices.ActiveDirectory.Forest.Sites*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: Sites
  nameWithType: Forest.Sites
- uid: System.DirectoryServices.ActiveDirectory.Forest.ToString*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: ToString
  nameWithType: Forest.ToString
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateLocalSideOfTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: UpdateLocalSideOfTrustRelationship
  nameWithType: Forest.UpdateLocalSideOfTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.UpdateTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: UpdateTrustRelationship
  nameWithType: Forest.UpdateTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyOutboundTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: VerifyOutboundTrustRelationship
  nameWithType: Forest.VerifyOutboundTrustRelationship
- uid: System.DirectoryServices.ActiveDirectory.Forest.VerifyTrustRelationship*
  parent: System.DirectoryServices.ActiveDirectory.Forest
  isExternal: false
  name: VerifyTrustRelationship
  nameWithType: Forest.VerifyTrustRelationship
