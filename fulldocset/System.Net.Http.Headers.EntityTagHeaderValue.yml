### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.EntityTagHeaderValue
  id: EntityTagHeaderValue
  children:
  - System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)
  - System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)
  - System.Net.Http.Headers.EntityTagHeaderValue.Any
  - System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode
  - System.Net.Http.Headers.EntityTagHeaderValue.IsWeak
  - System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.EntityTagHeaderValue.Tag
  - System.Net.Http.Headers.EntityTagHeaderValue.ToString
  - System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)
  langs:
  - csharp
  name: EntityTagHeaderValue
  nameWithType: EntityTagHeaderValue
  fullName: System.Net.Http.Headers.EntityTagHeaderValue
  type: Class
  summary: "Representa um valor de cabeçalho entity-tag."
  remarks: "Marcas de entidade são usadas para comparar duas ou mais entidades do mesmo recurso de solicitado."
  syntax:
    content: 'public class EntityTagHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  langs:
  - csharp
  name: EntityTagHeaderValue(String)
  nameWithType: EntityTagHeaderValue.EntityTagHeaderValue(String)
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.EntityTagHeaderValue(String)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;> </xref> classe."
  syntax:
    content: public EntityTagHeaderValue (string tag);
    parameters:
    - id: tag
      type: System.String
      description: "Uma cadeia de caracteres que contém um <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;> </xref>."
  overload: System.Net.Http.Headers.EntityTagHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)
  id: '#ctor(System.String,System.Boolean)'
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  langs:
  - csharp
  name: EntityTagHeaderValue(String,Boolean)
  nameWithType: EntityTagHeaderValue.EntityTagHeaderValue(String,Boolean)
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.EntityTagHeaderValue(String,Boolean)
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;> </xref> classe."
  syntax:
    content: public EntityTagHeaderValue (string tag, bool isWeak);
    parameters:
    - id: tag
      type: System.String
      description: "Uma cadeia de caracteres que contém um <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;> </xref>."
    - id: isWeak
      type: System.Boolean
      description: "Um valor que indica se esse cabeçalho de marca da entidade é um validador de baixa segurança. Se o cabeçalho entity-tag é validador fraco, em seguida, `isWeak` deve ser definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>. Se o cabeçalho de marca da entidade é um validador de alta segurança, em seguida, `isWeak` deve ser definido como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.EntityTagHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.EntityTagHeaderValue.Any
  id: Any
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  langs:
  - csharp
  name: Any
  nameWithType: EntityTagHeaderValue.Any
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.Any
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém o valor de cabeçalho entity-tag."
  remarks: "O valor do cabeçalho entity-tag."
  syntax:
    content: public static System.Net.Http.Headers.EntityTagHeaderValue Any { get; }
    return:
      type: System.Net.Http.Headers.EntityTagHeaderValue
      description: "Returns <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;></xref>."
  overload: System.Net.Http.Headers.EntityTagHeaderValue.Any*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: EntityTagHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se o especificado <xref:System.Object>é igual à atual <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;> </xref> objeto.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto a ser comparado com o objeto atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref:System.Object>for igual ao objeto atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Net.Http.Headers.EntityTagHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: EntityTagHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Serve como uma função de hash para um <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;> </xref> objeto."
  remarks: "Um código de hash é um valor numérico que é usado para identificar um objeto durante o teste de igualdade. Ela também poderá servir como um índice de um objeto em uma coleção.       O <xref:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode%2A>método é adequado para uso em algoritmos e estruturas de dados como uma tabela de hash de hash.</xref:System.Net.Http.Headers.AuthenticationHeaderValue.GetHashCode%2A>"
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash para o objeto atual."
  overload: System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.EntityTagHeaderValue.IsWeak
  id: IsWeak
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  langs:
  - csharp
  name: IsWeak
  nameWithType: EntityTagHeaderValue.IsWeak
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.IsWeak
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém se a tag de entidade é precedida por um indicador de deficiência."
  syntax:
    content: public bool IsWeak { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a marca de entidade é precedida por um indicador de ponto fraco; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.EntityTagHeaderValue.IsWeak*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: EntityTagHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Converte uma cadeia de caracteres para um <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;> </xref> instância."
  syntax:
    content: public static System.Net.Http.Headers.EntityTagHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "Uma cadeia de caracteres que representa informações de valor de cabeçalho de marca de entidade."
    return:
      type: System.Net.Http.Headers.EntityTagHeaderValue
      description: "Um <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;> </xref> instância."
  overload: System.Net.Http.Headers.EntityTagHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>é um <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> referência."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>não é informações do valor de cabeçalho de marca de entidade válido."
  platform:
  - net462
- uid: System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: EntityTagHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Cria um novo objeto que é uma cópia do atual <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;> </xref> instância."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Uma cópia da instância atual."
  overload: System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.EntityTagHeaderValue.Tag
  id: Tag
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  langs:
  - csharp
  name: Tag
  nameWithType: EntityTagHeaderValue.Tag
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.Tag
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Obtém o opaco entre aspas."
  syntax:
    content: public string Tag { get; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres entre aspas opaca."
  overload: System.Net.Http.Headers.EntityTagHeaderValue.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.EntityTagHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: EntityTagHeaderValue.ToString()
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Retorna uma cadeia de caracteres que representa o atual <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;> </xref> objeto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o objeto atual."
  overload: System.Net.Http.Headers.EntityTagHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  langs:
  - csharp
  name: TryParse(String,EntityTagHeaderValue)
  nameWithType: EntityTagHeaderValue.TryParse(String,EntityTagHeaderValue)
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.TryParse(String,EntityTagHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se uma cadeia de caracteres é válida <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;> </xref> informações."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.EntityTagHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "A cadeia de caracteres para validar."
    - id: parsedValue
      type: System.Net.Http.Headers.EntityTagHeaderValue
      description: "O <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;> </xref> versão da cadeia de caracteres."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.EntityTagHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.EntityTagHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String)
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: EntityTagHeaderValue(String)
  nameWithType: EntityTagHeaderValue.EntityTagHeaderValue(String)
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.EntityTagHeaderValue(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.EntityTagHeaderValue.#ctor(System.String,System.Boolean)
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: EntityTagHeaderValue(String,Boolean)
  nameWithType: EntityTagHeaderValue.EntityTagHeaderValue(String,Boolean)
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.EntityTagHeaderValue(String,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.EntityTagHeaderValue.Any
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: Any
  nameWithType: EntityTagHeaderValue.Any
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.Any
- uid: System.Net.Http.Headers.EntityTagHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: EntityTagHeaderValue
  nameWithType: EntityTagHeaderValue
  fullName: System.Net.Http.Headers.EntityTagHeaderValue
- uid: System.Net.Http.Headers.EntityTagHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: EntityTagHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.Equals(Object)
- uid: System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: EntityTagHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.EntityTagHeaderValue.IsWeak
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: IsWeak
  nameWithType: EntityTagHeaderValue.IsWeak
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.IsWeak
- uid: System.Net.Http.Headers.EntityTagHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: EntityTagHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: EntityTagHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.EntityTagHeaderValue.Tag
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: Tag
  nameWithType: EntityTagHeaderValue.Tag
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.Tag
- uid: System.Net.Http.Headers.EntityTagHeaderValue.ToString
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: EntityTagHeaderValue.ToString()
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.ToString()
- uid: System.Net.Http.Headers.EntityTagHeaderValue.TryParse(System.String,System.Net.Http.Headers.EntityTagHeaderValue@)
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: TryParse(String,EntityTagHeaderValue)
  nameWithType: EntityTagHeaderValue.TryParse(String,EntityTagHeaderValue)
  fullName: System.Net.Http.Headers.EntityTagHeaderValue.TryParse(String,EntityTagHeaderValue)
- uid: System.Net.Http.Headers.EntityTagHeaderValue.#ctor*
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: EntityTagHeaderValue
  nameWithType: EntityTagHeaderValue.EntityTagHeaderValue
- uid: System.Net.Http.Headers.EntityTagHeaderValue.Any*
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: Any
  nameWithType: EntityTagHeaderValue.Any
- uid: System.Net.Http.Headers.EntityTagHeaderValue.Equals*
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: Equals
  nameWithType: EntityTagHeaderValue.Equals
- uid: System.Net.Http.Headers.EntityTagHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: EntityTagHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.EntityTagHeaderValue.IsWeak*
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: IsWeak
  nameWithType: EntityTagHeaderValue.IsWeak
- uid: System.Net.Http.Headers.EntityTagHeaderValue.Parse*
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: Parse
  nameWithType: EntityTagHeaderValue.Parse
- uid: System.Net.Http.Headers.EntityTagHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: EntityTagHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.EntityTagHeaderValue.Tag*
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: Tag
  nameWithType: EntityTagHeaderValue.Tag
- uid: System.Net.Http.Headers.EntityTagHeaderValue.ToString*
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: ToString
  nameWithType: EntityTagHeaderValue.ToString
- uid: System.Net.Http.Headers.EntityTagHeaderValue.TryParse*
  parent: System.Net.Http.Headers.EntityTagHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: EntityTagHeaderValue.TryParse
