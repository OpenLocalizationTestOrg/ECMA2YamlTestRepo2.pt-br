### YamlMime:ManagedReference
items:
- uid: System.Net.Http.Headers.CacheControlHeaderValue
  id: CacheControlHeaderValue
  children:
  - System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  - System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  - System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  - System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  - System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  - System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  - System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  - System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  - System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  - System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  - System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  - System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  - System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  - System.Net.Http.Headers.CacheControlHeaderValue.Private
  - System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  - System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  - System.Net.Http.Headers.CacheControlHeaderValue.Public
  - System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  - System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  - System.Net.Http.Headers.CacheControlHeaderValue.ToString
  - System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  langs:
  - csharp
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: System.Net.Http.Headers.CacheControlHeaderValue
  type: Class
  summary: "Representa o valor do cabeçalho Cache-Control."
  syntax:
    content: 'public class CacheControlHeaderValue : ICloneable'
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  id: '#ctor'
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: CacheControlHeaderValue()
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()
  type: Constructor
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> classe."
  syntax:
    content: public CacheControlHeaderValue ();
    parameters: []
  overload: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: CacheControlHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(Object)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se o especificado <xref:System.Object>é igual à atual <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> objeto.</xref:System.Object>"
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto a ser comparado com o objeto atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se especificado <xref:System.Object>for igual ao objeto atual; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Object>"
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  id: Extensions
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Tokens de extensão de cache, cada um com um valor atribuído."
  remarks: "Esta propriedade representa a diretiva &quot;extensão de cache&quot; em um campo de cabeçalho cache-control em uma solicitação HTTP ou resposta HTTP."
  syntax:
    content: public System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue> Extensions { get; }
    return:
      type: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
      description: "Uma coleção de extensão de cache de tokens de cada um com um valor atribuído opcional."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  id: GetHashCode
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: CacheControlHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Serve como uma função de hash para um <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> objeto."
  remarks: "Um código de hash é um valor numérico que é usado para identificar um objeto durante o teste de igualdade. Ela também poderá servir como um índice de um objeto em uma coleção.       O método GetHashCode é adequado para uso em algoritmos de hash e estruturas de dados como uma tabela de hash."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash para o objeto atual."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  id: MaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A duração máxima, especificada em segundos, que o cliente HTTP está disposto a aceitar uma resposta."
  remarks: "Esta propriedade representa a diretiva &quot;max-age&quot; em um campo de cabeçalho cache-control em uma solicitação HTTP ou resposta HTTP.       A menos que o <xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A>propriedade também for definida, o cliente não estiver disposto a aceitar uma resposta obsoleta.</xref:System.Net.Http.Headers.CacheControlHeaderValue.MaxStale%2A>"
  syntax:
    content: public Nullable<TimeSpan> MaxAge { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "O tempo em segundos."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  id: MaxStale
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se um cliente HTTP está disposto a aceitar uma resposta que excedeu seu tempo de expiração."
  remarks: "Esta propriedade representa se a diretiva &quot;max obsoleta&quot; estiver presente em um campo de cabeçalho cache-control em uma solicitação HTTP."
  syntax:
    content: public bool MaxStale { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cliente HTTP está disposto a aceitar uma resposta que excedeu o tempo de expiração; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  id: MaxStaleLimit
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "O tempo máximo, em segundos, um cliente HTTP está disposto a aceitar uma resposta que excedeu seu tempo de expiração."
  remarks: "Esta propriedade representa o valor atribuído à diretiva &quot;max obsoleta&quot; em um campo de cabeçalho cache-control em uma solicitação HTTP.       Se a propriedade MaxStaleLimit é atribuída um valor diferente de zero, o cliente está disposto a aceitar uma resposta que ultrapassou seu tempo de expiração não mais do que o número especificado de segundos. Se um valor de zero é atribuído à propriedade MaxStaleLimit, o cliente está disposto a aceitar uma resposta obsoleta de qualquer idade."
  syntax:
    content: public Nullable<TimeSpan> MaxStaleLimit { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "O tempo em segundos."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  id: MinFresh
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A duração da atualização, em segundos, que um cliente HTTP está disposto a aceitar uma resposta."
  remarks: "Esta propriedade representa a diretiva &quot;nova min&quot; em um campo de cabeçalho cache-control em uma solicitação HTTP.       A propriedade indica que o cliente HTTP está disposto a aceitar uma resposta cujo tempo de vida de atualização não menos do que o atual idade mais o tempo de vida de atualização especificado o tempo em segundos. O cliente deseja uma resposta que ainda serão atualizada para, pelo menos, a idade atual e o tempo de vida de atualização."
  syntax:
    content: public Nullable<TimeSpan> MinFresh { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "O tempo em segundos."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  id: MustRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se o servidor de origem exigir revalidação de uma entrada de cache em qualquer uso subsequente quando a entrada do cache se tornar obsoleta."
  remarks: "Esta propriedade representa a diretiva &quot;must-revalidate&quot; em um campo de cabeçalho cache-control em uma resposta HTTP."
  syntax:
    content: public bool MustRevalidate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o servidor de origem exigir revalidação de uma entrada de cache em qualquer uso subsequente quando a entrada se tornar obsoleta; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  id: NoCache
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se um cliente HTTP está disposto a aceitar uma resposta em cache."
  remarks: "Esta propriedade representa a diretiva &quot;no-cache&quot; em um campo de cabeçalho cache-control em uma solicitação HTTP ou resposta HTTP.       Quando a propriedade NoCache é definida como `true` presente em uma mensagem de solicitação HTTP, um aplicativo deve encaminhar a solicitação para o servidor de origem mesmo se ele tiver uma cópia armazenada em cache do que está sendo solicitado."
  syntax:
    content: public bool NoCache { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o cliente HTTP está disposto a aceitar uma resposta em cache; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  id: NoCacheHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Uma coleção de fieldnames na diretiva de &quot;no-cache&quot; em um campo de cabeçalho cache-control em uma resposta HTTP."
  remarks: "Esta propriedade representa fieldnames na diretiva de &quot;no-cache&quot; em um campo de cabeçalho cache-control em uma resposta HTTP."
  syntax:
    content: public System.Collections.Generic.ICollection<string> NoCacheHeaders { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Uma coleção de fieldnames."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  id: NoStore
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se um cache não deve armazenar qualquer resposta ou qualquer parte de um a mressage solicitação HTTP."
  remarks: "Esta propriedade representa a diretiva &quot;no-store&quot; em um campo de cabeçalho cache-control em uma solicitação HTTP ou resposta HTTP.       A finalidade da propriedade NoStore é evitar a liberação acidental ou retenção de informações confidenciais. Essa propriedade se aplica a toda a mensagem e pode ser enviada em uma solicitação HTTP ou uma resposta."
  syntax:
    content: public bool NoStore { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um cache não deve armazenar qualquer parte de um a mressage solicitação HTTP ou qualquer resposta; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  id: NoTransform
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se um cache ou proxy não deve alterar qualquer aspecto do corpo da entidade."
  remarks: "Esta propriedade representa a diretiva &quot;não transformar&quot; em um campo de cabeçalho cache-control em uma solicitação HTTP ou resposta HTTP.       Quando o NoTransform é definido como `true`, caches intermediários ou rpoxies não deve alterar qualquer aspecto do corpo da entidade. Implementações de caches intermediários e proxies descobriram útil para converter o tipo de mídia de determinados corpos de entidade. Um proxy transparente não pode, por exemplo, converter entre formatos de imagem para economizar espaço em cache ou para reduzir a quantidade de tráfego em um link lento. Causar sérios problemas operacionais, no entanto, quando essas transformações são aplicadas ao corpo de entidade destinada para determinados tipos de aplicativos."
  syntax:
    content: public bool NoTransform { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um cache ou proxy não deve alterar qualquer aspecto do corpo da entidade; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  id: OnlyIfCached
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se um cache deverá responder usando uma entrada armazenada em cache que é consistente com as outras restrições da solicitação HTTP ou responder com status 504 (tempo limite de Gateway)."
  remarks: "Esta propriedade representa a diretiva &quot;somente se-cache&quot; em um campo de cabeçalho cache-control em uma solicitação HTTP."
  syntax:
    content: public bool OnlyIfCached { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um cache deverá responder usando uma entrada armazenada em cache que é consistente com as outras restrições da solicitação HTTP ou responder com status 504 (tempo limite de Gateway); Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  id: Parse(System.String)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Parse(String)
  nameWithType: CacheControlHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(String)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Converte uma cadeia de caracteres para um <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> instância."
  syntax:
    content: public static System.Net.Http.Headers.CacheControlHeaderValue Parse (string input);
    parameters:
    - id: input
      type: System.String
      description: "Uma cadeia de caracteres que representa as informações de valor do cabeçalho cache-control."
    return:
      type: System.Net.Http.Headers.CacheControlHeaderValue
      description: "Um <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> instância."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Parse*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>input</code>é um <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> referência."
  - type: System.FormatException
    commentId: T:System.FormatException
    description: "<code>input</code>não é informações de valor do cabeçalho cache-control válido."
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private
  id: Private
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Private
  nameWithType: CacheControlHeaderValue.Private
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se todo ou parte da mensagem de resposta HTTP é destinado a um único usuário e não deve ser armazenado em cache por um cache compartilhado."
  remarks: "Esta propriedade representa a diretiva &quot;private&quot; em um campo de cabeçalho cache-control em uma resposta HTTP."
  syntax:
    content: public bool Private { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a mensagem de resposta HTTP é destinada a um único usuário e não deve ser em cache por um cache compartilhado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Private*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  id: PrivateHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Fieldnames uma coleção na diretiva &quot;private&quot; em um campo de cabeçalho cache-control em uma resposta HTTP."
  remarks: "Esta propriedade representa fieldnames na diretiva &quot;private&quot; em um campo de cabeçalho cache-control em uma resposta HTTP."
  syntax:
    content: public System.Collections.Generic.ICollection<string> PrivateHeaders { get; }
    return:
      type: System.Collections.Generic.ICollection{System.String}
      description: "Uma coleção de fieldnames."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  id: ProxyRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se o servidor de origem exigir revalidação de uma entrada de cache em qualquer uso subsequente quando a entrada do cache se tornar obsoleta para caches de agente de usuário compartilhada."
  remarks: "Esta propriedade representa a diretiva de &quot;proxy-revalidate&quot; em um campo de cabeçalho cache-control em uma resposta HTTP.       Essa propriedade não afeta os caches de agente do usuário não compartilhado."
  syntax:
    content: public bool ProxyRevalidate { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o servidor de origem exigir revalidação de uma entrada de cache em qualquer uso subsequente quando a entrada se tornar obsoleta para caches de agente de usuário compartilhadas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public
  id: Public
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: Public
  nameWithType: CacheControlHeaderValue.Public
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Se uma resposta HTTP pode ser armazenados em cache por qualquer cache, mesmo que normalmente seria não armazenável em cache ou armazenável em cache apenas dentro de um cache compartilhado não."
  remarks: "Esta propriedade representa a diretiva &quot;public&quot; em um campo de cabeçalho cache-control em uma resposta HTTP."
  syntax:
    content: public bool Public { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a resposta HTTP pode ser armazenados em cache por qualquer cache, mesmo que seria normalmente ser não-armazenável em cache ou armazenável em cache apenas dentro de um não - cache compartilhado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.Public*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  id: SharedMaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  type: Property
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "A idade máxima compartilhada, especificado em segundos, em uma resposta HTTP que substitui a diretiva &quot;max-age&quot; em um cabeçalho cache-control ou um cabeçalho de expiração de um cache compartilhado."
  remarks: "Esta propriedade representa a diretiva &quot;s-max-age&quot; em um campo de cabeçalho cache-control em uma resposta HTTP."
  syntax:
    content: public Nullable<TimeSpan> SharedMaxAge { get; set; }
    return:
      type: System.Nullable{System.TimeSpan}
      description: "O tempo em segundos."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Cria um novo objeto que é uma cópia do atual <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> instância."
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Uma cópia da instância atual."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString
  id: ToString
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: ToString()
  nameWithType: CacheControlHeaderValue.ToString()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Retorna uma cadeia de caracteres que representa o atual <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> objeto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o objeto atual."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.ToString*
  exceptions: []
  platform:
  - net462
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  id: TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  langs:
  - csharp
  name: TryParse(String,CacheControlHeaderValue)
  nameWithType: CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  type: Method
  assemblies:
  - System.Net.Http
  namespace: System.Net.Http.Headers
  summary: "Determina se uma cadeia de caracteres é válida <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> informações."
  syntax:
    content: public static bool TryParse (string input, out System.Net.Http.Headers.CacheControlHeaderValue parsedValue);
    parameters:
    - id: input
      type: System.String
      description: "A cadeia de caracteres para validar."
    - id: parsedValue
      type: System.Net.Http.Headers.CacheControlHeaderValue
      description: "O <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;> </xref> versão da cadeia de caracteres."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>if <code>input</code> is valid <xref href=&quot;System.Net.Http.Headers.CacheControlHeaderValue&quot;></xref> information; otherwise, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  overload: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.FormatException
  isExternal: true
  name: System.FormatException
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: CacheControlHeaderValue()
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.CacheControlHeaderValue()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals(System.Object)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Equals(Object)
  nameWithType: CacheControlHeaderValue.Equals(Object)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Extensions
- uid: System.Collections.Generic.ICollection{System.Net.Http.Headers.NameValueHeaderValue}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<NameValueHeaderValue>
  nameWithType: ICollection<NameValueHeaderValue>
  fullName: System.Collections.Generic.ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Net.Http.Headers.NameValueHeaderValue>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Net.Http.Headers.NameValueHeaderValue
    name: NameValueHeaderValue
    nameWithType: NameValueHeaderValue
    fullName: NameValueHeaderValue
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: GetHashCode()
  nameWithType: CacheControlHeaderValue.GetHashCode()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge
- uid: System.Nullable{System.TimeSpan}
  parent: System
  isExternal: true
  name: Nullable<TimeSpan>
  nameWithType: Nullable<TimeSpan>
  fullName: System.Nullable<System.TimeSpan>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.TimeSpan>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.TimeSpan
    name: TimeSpan
    nameWithType: TimeSpan
    fullName: TimeSpan
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCache
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders
- uid: System.Collections.Generic.ICollection{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<String>
  nameWithType: ICollection<String>
  fullName: System.Collections.Generic.ICollection<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoStore
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse(System.String)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Parse(String)
  nameWithType: CacheControlHeaderValue.Parse(String)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Parse(String)
- uid: System.Net.Http.Headers.CacheControlHeaderValue
  parent: System.Net.Http.Headers
  isExternal: false
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue
  fullName: System.Net.Http.Headers.CacheControlHeaderValue
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Private
  nameWithType: CacheControlHeaderValue.Private
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Private
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Public
  nameWithType: CacheControlHeaderValue.Public
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.System.ICloneable.Clone()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ToString()
  nameWithType: CacheControlHeaderValue.ToString()
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.ToString()
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(System.String,System.Net.Http.Headers.CacheControlHeaderValue@)
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: TryParse(String,CacheControlHeaderValue)
  nameWithType: CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
  fullName: System.Net.Http.Headers.CacheControlHeaderValue.TryParse(String,CacheControlHeaderValue)
- uid: System.Net.Http.Headers.CacheControlHeaderValue.#ctor*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: CacheControlHeaderValue
  nameWithType: CacheControlHeaderValue.CacheControlHeaderValue
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Equals*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Equals
  nameWithType: CacheControlHeaderValue.Equals
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Extensions*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Extensions
  nameWithType: CacheControlHeaderValue.Extensions
- uid: System.Net.Http.Headers.CacheControlHeaderValue.GetHashCode*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: GetHashCode
  nameWithType: CacheControlHeaderValue.GetHashCode
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxAge*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxAge
  nameWithType: CacheControlHeaderValue.MaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStale*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStale
  nameWithType: CacheControlHeaderValue.MaxStale
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MaxStaleLimit*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MaxStaleLimit
  nameWithType: CacheControlHeaderValue.MaxStaleLimit
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MinFresh*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MinFresh
  nameWithType: CacheControlHeaderValue.MinFresh
- uid: System.Net.Http.Headers.CacheControlHeaderValue.MustRevalidate*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: MustRevalidate
  nameWithType: CacheControlHeaderValue.MustRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCache*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCache
  nameWithType: CacheControlHeaderValue.NoCache
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoCacheHeaders*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoCacheHeaders
  nameWithType: CacheControlHeaderValue.NoCacheHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoStore*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoStore
  nameWithType: CacheControlHeaderValue.NoStore
- uid: System.Net.Http.Headers.CacheControlHeaderValue.NoTransform*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: NoTransform
  nameWithType: CacheControlHeaderValue.NoTransform
- uid: System.Net.Http.Headers.CacheControlHeaderValue.OnlyIfCached*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: OnlyIfCached
  nameWithType: CacheControlHeaderValue.OnlyIfCached
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Parse*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Parse
  nameWithType: CacheControlHeaderValue.Parse
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Private*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Private
  nameWithType: CacheControlHeaderValue.Private
- uid: System.Net.Http.Headers.CacheControlHeaderValue.PrivateHeaders*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: PrivateHeaders
  nameWithType: CacheControlHeaderValue.PrivateHeaders
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ProxyRevalidate*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ProxyRevalidate
  nameWithType: CacheControlHeaderValue.ProxyRevalidate
- uid: System.Net.Http.Headers.CacheControlHeaderValue.Public*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: Public
  nameWithType: CacheControlHeaderValue.Public
- uid: System.Net.Http.Headers.CacheControlHeaderValue.SharedMaxAge*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: SharedMaxAge
  nameWithType: CacheControlHeaderValue.SharedMaxAge
- uid: System.Net.Http.Headers.CacheControlHeaderValue.System#ICloneable#Clone*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: CacheControlHeaderValue.System.ICloneable.Clone
- uid: System.Net.Http.Headers.CacheControlHeaderValue.ToString*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: ToString
  nameWithType: CacheControlHeaderValue.ToString
- uid: System.Net.Http.Headers.CacheControlHeaderValue.TryParse*
  parent: System.Net.Http.Headers.CacheControlHeaderValue
  isExternal: false
  name: TryParse
  nameWithType: CacheControlHeaderValue.TryParse
