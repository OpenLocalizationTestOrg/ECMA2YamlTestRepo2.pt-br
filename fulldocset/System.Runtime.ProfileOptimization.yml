### YamlMime:ManagedReference
items:
- uid: System.Runtime.ProfileOptimization
  id: ProfileOptimization
  children:
  - System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  - System.Runtime.ProfileOptimization.StartProfile(System.String)
  langs:
  - csharp
  name: ProfileOptimization
  nameWithType: ProfileOptimization
  fullName: System.Runtime.ProfileOptimization
  type: Class
  summary: "Melhora o desempenho de inicialização de domínios de aplicativo em aplicativos que exigem o compilador just-in-time (JIT), executando a compilação de plano de fundo de métodos que têm probabilidade de ser executado, com base nos perfis criados durante compilações anteriores."
  remarks: "> [!IMPORTANT]> Otimização perfil requer um computador com vários núcleos. Os métodos são ignorados em outros computadores.       Cada vez que você inicia a otimização de perfil em um domínio de aplicativo, o perfil que foi criado durante o uso anterior é lido. As informações do perfil são usadas para orientar a compilação em segundo plano, identificando os métodos que têm mais probabilidade de ser executado durante a inicialização. Em computadores com vários núcleos, isso aumenta as chances de que um método já compilados pelo tempo necessário para que o thread principal do aplicativo não precisa chamar o compilador JIT.       O arquivo de perfil é substituído cada uso, assim ele sempre contém as informações mais recentes sobre quais métodos são usados durante a inicialização.       Perfis de otimização não estão restritos a inicialização do domínio de aplicativo. Eles podem ser usados para qualquer atividade que exigirá o uso intenso do compilador JIT. Você pode manter vários perfis para um domínio de aplicativo para que cada essa atividade tem seu próprio perfil.       Para usar perfis de otimização em um domínio de aplicativo, você deve chamar o <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>método e especifique a pasta onde os perfis são armazenados.</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> A pasta já deve existir. Para começar a usar um perfil, chame o <xref:System.Runtime.ProfileOptimization.StartProfile%2A>método e especifique o nome do arquivo do perfil.</xref:System.Runtime.ProfileOptimization.StartProfile%2A> Se o arquivo não foi gravado anteriormente, ele será criado no primeiro uso. Não há nenhum tempo de primeiro do benefício de desempenho um perfil é criado.       Otimização de perfil não altera a ordem na qual os métodos são executados. Métodos não são executados no thread em segundo plano; Se um método é compilado, mas nunca foi chamado, ele simplesmente não será usado. Se um arquivo de perfil está corrompido ou não pode ser gravado na pasta especificada (por exemplo, porque a pasta não existe), a execução do programa continua sem otimização de criação de perfil."
  syntax:
    content: public static class ProfileOptimization
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  id: SetProfileRoot(System.String)
  parent: System.Runtime.ProfileOptimization
  langs:
  - csharp
  name: SetProfileRoot(String)
  nameWithType: ProfileOptimization.SetProfileRoot(String)
  fullName: System.Runtime.ProfileOptimization.SetProfileRoot(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime
  summary: "Permite a criação de perfil para o domínio de aplicativo atual de otimização e define a pasta onde os arquivos de perfil de otimização são armazenados. Em um computador de núcleo único, o método é ignorado."
  remarks: "Você deve chamar esse método antes de chamar o <xref:System.Runtime.ProfileOptimization.StartProfile%2A>método pela primeira vez no domínio do aplicativo atual.</xref:System.Runtime.ProfileOptimization.StartProfile%2A> Se você chamar SetProfileRoot mais de uma vez no mesmo domínio do aplicativo, todas as chamadas feitas depois do primeiro serão ignoradas.       A pasta especificada já deve existir. Se não existir, chamar este método não criá-lo e nenhuma criação de perfil ocorre.       Em computadores que não têm vários núcleos, esse método é ignorado."
  syntax:
    content: public static void SetProfileRoot (string directoryPath);
    parameters:
    - id: directoryPath
      type: System.String
      description: "O caminho completo para a pasta onde os arquivos de perfil são armazenados para o domínio de aplicativo atual."
  overload: System.Runtime.ProfileOptimization.SetProfileRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Runtime.ProfileOptimization.StartProfile(System.String)
  id: StartProfile(System.String)
  parent: System.Runtime.ProfileOptimization
  langs:
  - csharp
  name: StartProfile(String)
  nameWithType: ProfileOptimization.StartProfile(String)
  fullName: System.Runtime.ProfileOptimization.StartProfile(String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime
  summary: "Inicia a compilação just-in-time (JIT) dos métodos que foram registrados anteriormente no arquivo de perfil especificado, em um thread em segundo plano. Inicia o processo de gravação de uso atual de método, o que mais tarde substitui o arquivo de perfil especificado."
  remarks: "Se o perfil especificado existe na pasta especificada o <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>método, as informações que ele contém é usado para determinar a ordem na qual os métodos são compilados no thread em segundo plano.</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A> O método StartProfile cria o perfil, se ainda não existir e inicia o registro de uso do método.       Somente os métodos que são chamados, na verdade, são registrados, independentemente se eles foram compilados no thread em segundo plano ou no thread principal do aplicativo. Um método é compilado no thread principal do aplicativo se o aplicativo precisa chamá-lo antes do thread em segundo plano compilou.       O código que executa a gravação rastreia a taxa em que os métodos são compilados, incluindo métodos que são compilados no thread de segundo plano e no thread principal. Quando a taxa cai abaixo de um nível predeterminado, gravação interrompe. Gravação também parará se a taxa de compilação JIT excede um limite predeterminado.       Se o <xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>método não foi chamado para o domínio de aplicativo atual, ou se o computador não tiver vários núcleos, o método StartProfile não terá efeito.</xref:System.Runtime.ProfileOptimization.SetProfileRoot%2A>"
  syntax:
    content: public static void StartProfile (string profile);
    parameters:
    - id: profile
      type: System.String
      description: "O nome do arquivo do perfil a ser usado."
  overload: System.Runtime.ProfileOptimization.StartProfile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Runtime.ProfileOptimization.SetProfileRoot(System.String)
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: SetProfileRoot(String)
  nameWithType: ProfileOptimization.SetProfileRoot(String)
  fullName: System.Runtime.ProfileOptimization.SetProfileRoot(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.ProfileOptimization.StartProfile(System.String)
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: StartProfile(String)
  nameWithType: ProfileOptimization.StartProfile(String)
  fullName: System.Runtime.ProfileOptimization.StartProfile(String)
- uid: System.Runtime.ProfileOptimization.SetProfileRoot*
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: SetProfileRoot
  nameWithType: ProfileOptimization.SetProfileRoot
- uid: System.Runtime.ProfileOptimization.StartProfile*
  parent: System.Runtime.ProfileOptimization
  isExternal: false
  name: StartProfile
  nameWithType: ProfileOptimization.StartProfile
