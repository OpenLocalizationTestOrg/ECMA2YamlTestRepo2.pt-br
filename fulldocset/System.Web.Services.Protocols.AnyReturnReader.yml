### YamlMime:ManagedReference
items:
- uid: System.Web.Services.Protocols.AnyReturnReader
  id: AnyReturnReader
  children:
  - System.Web.Services.Protocols.AnyReturnReader.#ctor
  - System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)
  - System.Web.Services.Protocols.AnyReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  langs:
  - csharp
  name: AnyReturnReader
  nameWithType: AnyReturnReader
  fullName: System.Web.Services.Protocols.AnyReturnReader
  type: Class
  summary: "Fornece um leitor mínimo de valores de retorno de resposta de entrada para clientes de serviço Web implementados usando HTTP, mas sem SOAP."
  remarks: "AnyReturnReader e outras classes de <xref:System.Web.Services.Protocols>namespace oferece suporte às implementações do .NET Framework do Web services por meio de operações de HTTP GET e POST HTTP.</xref:System.Web.Services.Protocols> Os leitores e gravadores de serviço web serializar e desserializar, respectivamente, entre os parâmetros ou objetos de retorno de métodos Web e os fluxos de solicitação ou resposta HTTP. Os leitores e gravadores de serviço da web usam o HTTP para o transporte, mas não trocam mensagens usando o padrão SOAP.       A classe AnyReturnReader fornece uma implementação mínima da interface da classe pai abstrato <xref:System.Web.Services.Protocols.MimeReturnReader>. Você normalmente não precisará usar AnyReturnReader diretamente.</xref:System.Web.Services.Protocols.MimeReturnReader> Quando a ferramenta Wsdl.exe gera o código de proxy do cliente de acordo com as implementações de HTTP GET ou POST HTTP, ela se aplica a <xref:System.Web.Services.Protocols.HttpMethodAttribute>para cada método Web e, por padrão, define do atributo <xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A>propriedade, <xref:System.Web.Services.Protocols.XmlReturnReader>outra classe derivada de <xref:System.Web.Services.Protocols.MimeReturnReader>.</xref:System.Web.Services.Protocols.MimeReturnReader> </xref:System.Web.Services.Protocols.XmlReturnReader> </xref:System.Web.Services.Protocols.HttpMethodAttribute.ReturnFormatter%2A> </xref:System.Web.Services.Protocols.HttpMethodAttribute>"
  syntax:
    content: 'public class AnyReturnReader : System.Web.Services.Protocols.MimeReturnReader'
  inheritance:
  - System.Object
  - System.Web.Services.Protocols.MimeFormatter
  - System.Web.Services.Protocols.MimeReturnReader
  implements: []
  inheritedMembers:
  - System.Web.Services.Protocols.MimeFormatter.CreateInstance(System.Type,System.Object)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializer(System.Type,System.Web.Services.Protocols.LogicalMethodInfo)
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Type,System.Web.Services.Protocols.LogicalMethodInfo[])
  - System.Web.Services.Protocols.MimeFormatter.GetInitializers(System.Web.Services.Protocols.LogicalMethodInfo[])
  platform:
  - net462
- uid: System.Web.Services.Protocols.AnyReturnReader.#ctor
  id: '#ctor'
  parent: System.Web.Services.Protocols.AnyReturnReader
  langs:
  - csharp
  name: AnyReturnReader()
  nameWithType: AnyReturnReader.AnyReturnReader()
  fullName: System.Web.Services.Protocols.AnyReturnReader.AnyReturnReader()
  type: Constructor
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Services.Protocols.AnyReturnReader&quot;> </xref> classe."
  syntax:
    content: public AnyReturnReader ();
    parameters: []
  overload: System.Web.Services.Protocols.AnyReturnReader.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  id: GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.AnyReturnReader
  langs:
  - csharp
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: AnyReturnReader.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.AnyReturnReader.GetInitializer(LogicalMethodInfo)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retorna o parâmetro passado para o <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize*>método.</xref:System.Web.Services.Protocols.AnyReturnReader.Initialize*>"
  remarks: "Um inicializador é um objeto passado como um parâmetro para o <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A>método.</xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A> Para o <xref:System.Web.Services.Protocols.AnyReturnReader>o inicializador de classe, é a instância à qual a palavra-chave `this`, a menos que o <xref:System.Web.Services.Protocols.LogicalMethodInfo>valor do parâmetro tem um tipo de retorno void, caso o inicializador é definido como `null`.</xref:System.Web.Services.Protocols.LogicalMethodInfo> </xref:System.Web.Services.Protocols.AnyReturnReader>       O método GetInitializer é chamado durante a inicialização do serviço. Posteriormente, no momento em que uma resposta é processada, o inicializador <xref:System.Web.Services.Protocols.AnyReturnReader>objeto é passado para o <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A>método de outra <xref:System.Web.Services.Protocols.AnyReturnReader>instância.</xref:System.Web.Services.Protocols.AnyReturnReader> </xref:System.Web.Services.Protocols.AnyReturnReader.Initialize%2A> </xref:System.Web.Services.Protocols.AnyReturnReader> A outra instância usa a chamada para o <xref:System.Web.Services.Protocols.AnyReturnReader.Read%2A>método.</xref:System.Web.Services.Protocols.AnyReturnReader.Read%2A>"
  syntax:
    content: public override object GetInitializer (System.Web.Services.Protocols.LogicalMethodInfo methodInfo);
    parameters:
    - id: methodInfo
      type: System.Web.Services.Protocols.LogicalMethodInfo
      description: "Um <xref href=&quot;System.Web.Services.Protocols.LogicalMethodInfo&quot;> </xref> que indica o método da Web para o qual o inicializador é obtido."
    return:
      type: System.Object
      description: "O parâmetro passado para o <xref:System.Web.Services.Protocols.AnyReturnReader.Initialize*>método.</xref:System.Web.Services.Protocols.AnyReturnReader.Initialize*>"
  overload: System.Web.Services.Protocols.AnyReturnReader.GetInitializer*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Web.Services.Protocols.AnyReturnReader
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: AnyReturnReader.Initialize(Object)
  fullName: System.Web.Services.Protocols.AnyReturnReader.Initialize(Object)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Inicializa uma instância do <xref href=&quot;System.Web.Services.Protocols.AnyReturnReader&quot;> </xref> classe."
  remarks: "O método Initialize não fará nada.       Esse método é chamado quando que uma resposta é processada. O parâmetro de entrada, `initializer`, é outra instância do <xref:System.Web.Services.Protocols.AnyReturnReader>, obtido durante a inicialização do cliente.</xref:System.Web.Services.Protocols.AnyReturnReader>"
  syntax:
    content: public override void Initialize (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Outra instância do <xref href=&quot;System.Web.Services.Protocols.AnyReturnReader&quot;> </xref> classe, no qual o <xref:System.Web.Services.Protocols.AnyReturnReader.GetInitializer*>método foi chamado anteriormente.</xref:System.Web.Services.Protocols.AnyReturnReader.GetInitializer*>"
  overload: System.Web.Services.Protocols.AnyReturnReader.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Services.Protocols.AnyReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  id: Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.AnyReturnReader
  langs:
  - csharp
  name: Read(WebResponse,Stream)
  nameWithType: AnyReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.AnyReturnReader.Read(WebResponse,Stream)
  type: Method
  assemblies:
  - System.Web.Services
  namespace: System.Web.Services.Protocols
  summary: "Retorna um fluxo de resposta HTTP de entrada."
  remarks: "O <xref:System.Web.Services.Protocols.AnyReturnReader>implementação de classe do método de leitura não faz nenhuma leitura.</xref:System.Web.Services.Protocols.AnyReturnReader> Em vez disso, ele simplesmente retorna o <xref:System.IO.Stream>objeto passado como um parâmetro.</xref:System.IO.Stream>"
  syntax:
    content: public override object Read (System.Net.WebResponse response, System.IO.Stream responseStream);
    parameters:
    - id: response
      type: System.Net.WebResponse
      description: "Uma representação de resposta HTTP enviada por um serviço Web, que contém a mensagem de saída para uma operação."
    - id: responseStream
      type: System.IO.Stream
      description: "Um fluxo de saída cujo conteúdo é o corpo da resposta HTTP representado pelo `response` parâmetro."
    return:
      type: System.Object
      description: "O fluxo de resposta HTTP entrada."
  overload: System.Web.Services.Protocols.AnyReturnReader.Read*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.Services.Protocols.MimeReturnReader
  isExternal: false
  name: System.Web.Services.Protocols.MimeReturnReader
- uid: System.Web.Services.Protocols.AnyReturnReader.#ctor
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: AnyReturnReader()
  nameWithType: AnyReturnReader.AnyReturnReader()
  fullName: System.Web.Services.Protocols.AnyReturnReader.AnyReturnReader()
- uid: System.Web.Services.Protocols.AnyReturnReader.GetInitializer(System.Web.Services.Protocols.LogicalMethodInfo)
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: GetInitializer(LogicalMethodInfo)
  nameWithType: AnyReturnReader.GetInitializer(LogicalMethodInfo)
  fullName: System.Web.Services.Protocols.AnyReturnReader.GetInitializer(LogicalMethodInfo)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Services.Protocols.LogicalMethodInfo
  parent: System.Web.Services.Protocols
  isExternal: false
  name: LogicalMethodInfo
  nameWithType: LogicalMethodInfo
  fullName: System.Web.Services.Protocols.LogicalMethodInfo
- uid: System.Web.Services.Protocols.AnyReturnReader.Initialize(System.Object)
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: Initialize(Object)
  nameWithType: AnyReturnReader.Initialize(Object)
  fullName: System.Web.Services.Protocols.AnyReturnReader.Initialize(Object)
- uid: System.Web.Services.Protocols.AnyReturnReader.Read(System.Net.WebResponse,System.IO.Stream)
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: Read(WebResponse,Stream)
  nameWithType: AnyReturnReader.Read(WebResponse,Stream)
  fullName: System.Web.Services.Protocols.AnyReturnReader.Read(WebResponse,Stream)
- uid: System.Net.WebResponse
  parent: System.Net
  isExternal: true
  name: WebResponse
  nameWithType: WebResponse
  fullName: System.Net.WebResponse
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.Web.Services.Protocols.AnyReturnReader.#ctor*
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: AnyReturnReader
  nameWithType: AnyReturnReader.AnyReturnReader
- uid: System.Web.Services.Protocols.AnyReturnReader.GetInitializer*
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: GetInitializer
  nameWithType: AnyReturnReader.GetInitializer
- uid: System.Web.Services.Protocols.AnyReturnReader.Initialize*
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: Initialize
  nameWithType: AnyReturnReader.Initialize
- uid: System.Web.Services.Protocols.AnyReturnReader.Read*
  parent: System.Web.Services.Protocols.AnyReturnReader
  isExternal: false
  name: Read
  nameWithType: AnyReturnReader.Read
