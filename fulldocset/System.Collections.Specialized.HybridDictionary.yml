### YamlMime:ManagedReference
items:
- uid: System.Collections.Specialized.HybridDictionary
  id: HybridDictionary
  children:
  - System.Collections.Specialized.HybridDictionary.#ctor
  - System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)
  - System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)
  - System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)
  - System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)
  - System.Collections.Specialized.HybridDictionary.Clear
  - System.Collections.Specialized.HybridDictionary.Contains(System.Object)
  - System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)
  - System.Collections.Specialized.HybridDictionary.Count
  - System.Collections.Specialized.HybridDictionary.GetEnumerator
  - System.Collections.Specialized.HybridDictionary.IsFixedSize
  - System.Collections.Specialized.HybridDictionary.IsReadOnly
  - System.Collections.Specialized.HybridDictionary.IsSynchronized
  - System.Collections.Specialized.HybridDictionary.Item(System.Object)
  - System.Collections.Specialized.HybridDictionary.Keys
  - System.Collections.Specialized.HybridDictionary.Remove(System.Object)
  - System.Collections.Specialized.HybridDictionary.SyncRoot
  - System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator
  - System.Collections.Specialized.HybridDictionary.Values
  langs:
  - csharp
  name: HybridDictionary
  nameWithType: HybridDictionary
  fullName: System.Collections.Specialized.HybridDictionary
  type: Class
  summary: "Implementa <xref uid=&quot;langword_csharp_IDictionary&quot; name=&quot;IDictionary&quot; href=&quot;&quot;> </xref> usando um <xref href=&quot;System.Collections.Specialized.ListDictionary&quot;> </xref> enquanto a coleção é pequena e, em seguida, alternar para um <xref href=&quot;System.Collections.Hashtable&quot;> </xref> quando a coleção se torna grande."
  remarks: "Essa classe é recomendada para casos em que o número de elementos em um dicionário é desconhecido. Tira proveito de melhorar o desempenho de um <xref:System.Collections.Specialized.ListDictionary>com pequenas coleções e oferece a flexibilidade de alternar para um <xref:System.Collections.Hashtable>que trata de coleções maior melhores do que <xref:System.Collections.Specialized.ListDictionary>.</xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary>       Se o tamanho inicial da coleção é maior que o tamanho ideal para um <xref:System.Collections.Specialized.ListDictionary>a coleção é armazenada em um <xref:System.Collections.Hashtable>para evitar a sobrecarga de cópia de elementos da <xref:System.Collections.Specialized.ListDictionary> <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary>       O construtor aceita um parâmetro booliano que permite ao usuário especificar se a coleção ignora maiusculas ao comparar cadeias de caracteres. Se a coleção diferencia maiusculas de minúsculas, ele usa implementações da chave <xref:System.Object.GetHashCode%2A?displayProperty=fullName>e <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> Se a coleção diferencia maiusculas de minúsculas, ele executa uma simple comparação de maiusculas e minúsculas ordinal, que obedece às regras de maiusculas e minúsculas da cultura invariável. Por padrão, a coleção diferencia maiusculas de minúsculas. Para obter mais informações sobre a cultura invariável, consulte <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName>       Uma chave não pode ser nula, mas sim um valor.       O `foreach` instrução de linguagem c# (`For Each` no Visual Basic) retorna um objeto do tipo dos elementos na coleção. Como cada elemento de HybridDictionary é um par chave/valor, o tipo de elemento não é o tipo de chave ou o tipo do valor. Em vez disso, o tipo de elemento é <xref:System.Collections.DictionaryEntry>.</xref:System.Collections.DictionaryEntry> Por exemplo: [!code-cpp [System.Collections.Specialized.HybridDictionary2#2](~/add/codesnippet/cpp/t-system.collections.spe_3_1.cpp)][!code-cs[System.Collections.Specialized.HybridDictionary2#2](~/add/codesnippet/csharp/t-system.collections.spe_3_1.cs)][!code-vb[System.Collections.Specialized.HybridDictionary2#2](~/add/codesnippet/visualbasic/t-system.collections.spe_3_1.vb) ] o `foreach` instrução é um wrapper em torno de enumerador, que só permite ler, gravar não à coleção.    "
  example:
  - "The following code example demonstrates several of the properties and methods of HybridDictionary.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/cpp/t-system.collections.spe_3_2.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/csharp/t-system.collections.spe_3_2.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/visualbasic/t-system.collections.spe_3_2.vb)]"
  syntax:
    content: 'public class HybridDictionary : System.Collections.IDictionary'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IDictionary
  inheritedMembers: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.#ctor
  id: '#ctor'
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: HybridDictionary()
  nameWithType: HybridDictionary.HybridDictionary()
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary()
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Cria um vazio diferencia maiusculas de minúsculas <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "Por padrão, a coleção diferencia maiusculas de minúsculas e usa a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=fullName>como o provedor de código de hash e a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=fullName>como o comparador.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName>       O comparador determina se duas chaves são iguais. Todas as chaves em um <xref:System.Collections.Specialized.HybridDictionary>devem ser exclusivos.</xref:System.Collections.Specialized.HybridDictionary>       Este construtor é uma operação de (1)."
  example:
  - "The following code example demonstrates several of the properties and methods of <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/cpp/m-system.collections.spe_9_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/csharp/m-system.collections.spe_9_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary2#1](~/add/codesnippet/visualbasic/m-system.collections.spe_9_1.vb)]"
  syntax:
    content: public HybridDictionary ();
    parameters: []
  overload: System.Collections.Specialized.HybridDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)
  id: '#ctor(System.Boolean)'
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: HybridDictionary(Boolean)
  nameWithType: HybridDictionary.HybridDictionary(Boolean)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Cria um vazio <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> com a especificada entre maiusculas e minúsculas."
  remarks: "Se `caseInsensitive` é `false`, a coleção usa implementações da chave <xref:System.Object.GetHashCode%2A?displayProperty=fullName>e <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> Se `caseInsensitive` é `true`, a coleção executa uma simple comparação de maiusculas e minúsculas ordinal, que obedece às regras de maiusculas e minúsculas da cultura invariável. Para obter mais informações sobre a cultura invariável, consulte <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName>       Este construtor é uma operação de (1)."
  syntax:
    content: public HybridDictionary (bool caseInsensitive);
    parameters:
    - id: caseInsensitive
      type: System.Boolean
      description: "Um valor booleano que indica se o <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> diferencia maiusculas de minúsculas."
  overload: System.Collections.Specialized.HybridDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: HybridDictionary(Int32)
  nameWithType: HybridDictionary.HybridDictionary(Int32)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Int32)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Cria um diferencia maiusculas de minúsculas <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> com o tamanho inicial especificado."
  remarks: "Se o tamanho inicial da coleção é maior que o tamanho ideal para um <xref:System.Collections.Specialized.ListDictionary>a coleção é armazenada em um <xref:System.Collections.Hashtable>para evitar a sobrecarga de cópia de elementos da <xref:System.Collections.Specialized.ListDictionary> <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary>       Por padrão, a coleção diferencia maiusculas de minúsculas e usa a implementação da chave de <xref:System.Object.GetHashCode%2A?displayProperty=fullName>como o provedor de código de hash e a implementação da chave de <xref:System.Object.Equals%2A?displayProperty=fullName>como o comparador.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName>       O comparador determina se duas chaves são iguais. Todas as chaves em um <xref:System.Collections.Specialized.HybridDictionary>devem ser exclusivos.</xref:System.Collections.Specialized.HybridDictionary>       Este construtor é um O (`n`) operação, onde `n` é `initialSize`."
  syntax:
    content: public HybridDictionary (int initialSize);
    parameters:
    - id: initialSize
      type: System.Int32
      description: "O número aproximado de entradas que o <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> inicialmente pode conter."
  overload: System.Collections.Specialized.HybridDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)
  id: '#ctor(System.Int32,System.Boolean)'
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: HybridDictionary(Int32,Boolean)
  nameWithType: HybridDictionary.HybridDictionary(Int32,Boolean)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Int32,Boolean)
  type: Constructor
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Cria um <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> com o tamanho inicial especificado e a diferenciação de maiusculas e minúsculas."
  remarks: "Se o tamanho inicial da coleção é maior que o tamanho ideal para um <xref:System.Collections.Specialized.ListDictionary>a coleção é armazenada em um <xref:System.Collections.Hashtable>para evitar a sobrecarga de cópia de elementos da <xref:System.Collections.Specialized.ListDictionary> <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary>       Se `caseInsensitive` é `false`, a coleção usa implementações da chave <xref:System.Object.GetHashCode%2A?displayProperty=fullName>e <xref:System.Object.Equals%2A?displayProperty=fullName>.</xref:System.Object.Equals%2A?displayProperty=fullName> </xref:System.Object.GetHashCode%2A?displayProperty=fullName> Se `caseInsensitive` é `true`, a coleção executa uma simple comparação de maiusculas e minúsculas ordinal, que obedece às regras de maiusculas e minúsculas da cultura invariável. Para obter mais informações sobre a cultura invariável, consulte <xref:System.Globalization.CultureInfo?displayProperty=fullName>.</xref:System.Globalization.CultureInfo?displayProperty=fullName>       Este construtor é um O (`n`) operação, onde `n` é `initialSize`."
  syntax:
    content: public HybridDictionary (int initialSize, bool caseInsensitive);
    parameters:
    - id: initialSize
      type: System.Int32
      description: "O número aproximado de entradas que o <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> inicialmente pode conter."
    - id: caseInsensitive
      type: System.Boolean
      description: "Um valor booleano que indica se o <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> diferencia maiusculas de minúsculas."
  overload: System.Collections.Specialized.HybridDictionary.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)
  id: Add(System.Object,System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Add(Object,Object)
  nameWithType: HybridDictionary.Add(Object,Object)
  fullName: System.Collections.Specialized.HybridDictionary.Add(Object,Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Adiciona uma entrada com a chave especificada e o valor para o <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "Um objeto que não tem nenhuma correlação entre seu estado e seu valor de código de hash, normalmente, não deve ser usado como chave. Por exemplo, objetos de cadeia de caracteres são melhores que objetos de StringBuilder para uso como chaves.       Uma chave não pode ser `null`, mas um valor possível.       Você também pode usar o <xref:System.Collections.Specialized.HybridDictionary.Item%2A>propriedade para adicionar novos elementos, definindo o valor de uma chave que não existe no <xref:System.Collections.Specialized.HybridDictionary>; por exemplo, `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.Specialized.HybridDictionary.Item%2A> No entanto, se a chave especificada já existe no <xref:System.Collections.Specialized.HybridDictionary>, a definição de <xref:System.Collections.Specialized.HybridDictionary.Item%2A>propriedade substitui o valor antigo.</xref:System.Collections.Specialized.HybridDictionary.Item%2A> </xref:System.Collections.Specialized.HybridDictionary> Por outro lado, o método Add não modifica os elementos existentes.       Quando o número de elementos se torna maior que o tamanho ideal para um <xref:System.Collections.Specialized.ListDictionary>os elementos são copiados <xref:System.Collections.Specialized.ListDictionary>para <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Specialized.ListDictionary> No entanto, isso ocorre apenas uma vez. Se a coleção já esteja armazenada em um <xref:System.Collections.Hashtable>e o número de elementos cai abaixo do tamanho ideal para um <xref:System.Collections.Specialized.ListDictionary>a coleção permanece em <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable>       Esse método é uma operação de (1)."
  example:
  - "The following code example adds to and removes elements from a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/cpp/200580ad-8659-4e63-8e92-_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/csharp/200580ad-8659-4e63-8e92-_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/visualbasic/200580ad-8659-4e63-8e92-_1.vb)]"
  syntax:
    content: public void Add (object key, object value);
    parameters:
    - id: key
      type: System.Object
      description: "A chave de entrada a ser adicionada."
    - id: value
      type: System.Object
      description: "O valor da entrada a ser adicionada. O valor pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Já existe uma entrada com a mesma chave no <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Clear
  id: Clear
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Clear()
  nameWithType: HybridDictionary.Clear()
  fullName: System.Collections.Specialized.HybridDictionary.Clear()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Remove todas as entradas do <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "<xref:System.Collections.Specialized.HybridDictionary.Count%2A>é definido como zero, e referências a outros objetos de elementos da coleção também são liberadas.</xref:System.Collections.Specialized.HybridDictionary.Count%2A>       Se a coleção já esteja armazenada em um <xref:System.Collections.Hashtable>a coleção permaneça em <xref:System.Collections.Hashtable>.</xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable>       Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.HybridDictionary.Count%2A>.</xref:System.Collections.Specialized.HybridDictionary.Count%2A>"
  example:
  - "The following code example adds to and removes elements from a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_31_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_31_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_31_1.vb)]"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Collections.Specialized.HybridDictionary.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Contains(System.Object)
  id: Contains(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Contains(Object)
  nameWithType: HybridDictionary.Contains(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Contains(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Determina se o <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> contém uma chave específica."
  remarks: "Esse método é uma operação de (1).       Começando com o .NET Framework 2.0, esse método usa objetos da coleção <xref:System.Object.Equals%2A>e <xref:System.IComparable.CompareTo%2A>métodos em `key` para determinar se `item` existe.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A> Nas versões anteriores do .NET Framework, isso foi feito por meio de <xref:System.Object.Equals%2A>e <xref:System.IComparable.CompareTo%2A>métodos do `item` parâmetro nos objetos na coleção.</xref:System.IComparable.CompareTo%2A> </xref:System.Object.Equals%2A>"
  example:
  - "The following code example searches for an element in a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Contains#1](~/add/codesnippet/cpp/m-system.collections.spe_37_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Contains#1](~/add/codesnippet/csharp/m-system.collections.spe_37_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Contains#1](~/add/codesnippet/visualbasic/m-system.collections.spe_37_1.vb)]"
  syntax:
    content: public bool Contains (object key);
    parameters:
    - id: key
      type: System.Object
      description: "A chave a ser localizado no <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> contém uma entrada com a chave; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)
  id: CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: CopyTo(Array,Int32)
  nameWithType: HybridDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.HybridDictionary.CopyTo(Array,Int32)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Copia o <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> entradas para um unidimensional <xref:System.Array>instância no índice especificado.</xref:System.Array>"
  remarks: "Os elementos são copiados para o <xref:System.Array>na mesma ordem em que o enumerador que itera por meio de <xref:System.Collections.Specialized.HybridDictionary>.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Array>       Para copiar somente as chaves de <xref:System.Collections.Specialized.HybridDictionary>, use `HybridDictionary.Keys.CopyTo`.</xref:System.Collections.Specialized.HybridDictionary>       Para copiar somente os valores no <xref:System.Collections.Specialized.HybridDictionary>, use `HybridDictionary.Values.CopyTo`.</xref:System.Collections.Specialized.HybridDictionary>       Esse método é um O (`n`) operação, onde `n` é <xref:System.Collections.Specialized.HybridDictionary.Count%2A>.</xref:System.Collections.Specialized.HybridDictionary.Count%2A>"
  example:
  - "The following code example copies the elements of a <xref:System.Collections.Specialized.HybridDictionary> to an array.  \n  \n [!code-cs[System.Collections.Specialized.HybridDictionary_CopyTo#1](~/add/codesnippet/csharp/0bfe553c-62f4-44ed-b908-_1.cs)]\n [!code-cpp[System.Collections.Specialized.HybridDictionary_CopyTo#1](~/add/codesnippet/cpp/0bfe553c-62f4-44ed-b908-_1.cpp)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_CopyTo#1](~/add/codesnippet/visualbasic/0bfe553c-62f4-44ed-b908-_1.vb)]"
  syntax:
    content: public void CopyTo (Array array, int index);
    parameters:
    - id: array
      type: System.Array
      description: "O unidimensional <xref:System.Array>que é o destino do <xref:System.Collections.DictionaryEntry>objetos copiados do <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.DictionaryEntry> </xref:System.Array> O <xref:System.Array>devem ter a indexação com base em zero.</xref:System.Array>"
    - id: index
      type: System.Int32
      description: "O índice de base zero no `array` no qual a cópia começa."
  overload: System.Collections.Specialized.HybridDictionary.CopyTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>array</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>index</code>é menor que zero."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>array</code>é multidimensional.       o número de elementos na origem - ou - <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> é maior que o espaço disponível do <code>arrayIndex</code> até o final do destino <code>array</code>."
  - type: System.InvalidCastException
    commentId: T:System.InvalidCastException
    description: "O tipo da fonte de <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> não pode ser convertido automaticamente para o tipo de destino <code> array </code>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Count
  id: Count
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Count
  nameWithType: HybridDictionary.Count
  fullName: System.Collections.Specialized.HybridDictionary.Count
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém o número de pares chave/valor contidos no <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: ''
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_9_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_9_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_9_1.vb)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de pares chave/valor contidos no <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.       Recuperar o valor dessa propriedade é uma operação de (1)."
  overload: System.Collections.Specialized.HybridDictionary.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.GetEnumerator
  id: GetEnumerator
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: HybridDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retorna um <xref:System.Collections.IDictionaryEnumerator>que itera por meio de <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.IDictionaryEnumerator>"
  remarks: "O `foreach` instrução de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.  Portanto, usando `foreach` é recomendada, em vez de manipulação direta do enumerador.       Enumeradores podem ser usados para ler os dados na coleção, mas eles não podem ser usados para modificar a coleção subjacente.       Inicialmente, o enumerador está posicionado antes do primeiro elemento na coleção. <xref:System.Collections.IEnumerator.Reset%2A>também traz o enumerador de volta para essa posição.</xref:System.Collections.IEnumerator.Reset%2A>  Nesta posição, <xref:System.Collections.IEnumerator.Current%2A>é indefinido.</xref:System.Collections.IEnumerator.Current%2A> Portanto, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A>para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>Retorna o mesmo objeto até que o <xref:System.Collections.IEnumerator.MoveNext%2A>ou <xref:System.Collections.IEnumerator.Reset%2A>é chamado.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>define <xref:System.Collections.IEnumerator.Current%2A>para o próximo elemento.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Se <xref:System.Collections.IEnumerator.MoveNext%2A>passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e <xref:System.Collections.IEnumerator.MoveNext%2A>retorna `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Quando o enumerador está nessa posição, chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A>também retornam `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Se a última chamada <xref:System.Collections.IEnumerator.MoveNext%2A>retornado `false`, <xref:System.Collections.IEnumerator.Current%2A>é indefinido.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Definir <xref:System.Collections.IEnumerator.Current%2A>para o primeiro elemento da coleção novamente, você pode chamar <xref:System.Collections.IEnumerator.Reset%2A>seguido pelo <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       Um enumerador permanece válido desde que a coleção permaneça inalterada. Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e seu comportamento é indefinido.       O enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de thread-safe.  Para garantir a segurança de thread durante a enumeração, você pode bloquear a coleção durante toda a enumeração.  Para permitir que a coleção a ser acessado por vários threads para leitura e gravação, você deve implementar sua sincronização.       Esse método é uma operação de (1)."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/m-system.collections.spe_19_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/m-system.collections.spe_19_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/m-system.collections.spe_19_1.vb)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "An <xref:System.Collections.IDictionaryEnumerator> for the <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;></xref>.</xref:System.Collections.IDictionaryEnumerator>"
  overload: System.Collections.Specialized.HybridDictionary.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.IsFixedSize
  id: IsFixedSize
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: IsFixedSize
  nameWithType: HybridDictionary.IsFixedSize
  fullName: System.Collections.Specialized.HybridDictionary.IsFixedSize
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> tem um tamanho fixo."
  remarks: "<xref:System.Collections.Specialized.HybridDictionary>implementa a propriedade IsFixedSize porque ele é necessário para o <xref:System.Collections.IDictionary?displayProperty=fullName>interface.</xref:System.Collections.IDictionary?displayProperty=fullName></xref:System.Collections.Specialized.HybridDictionary>       Uma coleção com um tamanho fixo não permite a adição ou remoção de elementos após a criação da coleção, mas permite a modificação de elementos existentes.       Uma coleção com um tamanho fixo é simplesmente uma coleção com um wrapper que impede a adição e remoção de elementos; Portanto, se forem feitas alterações à coleção subjacente, incluindo a adição ou remoção de elementos, a coleção de tamanho fixo reflete as alterações.       Recuperar o valor dessa propriedade é uma operação de (1)."
  syntax:
    content: public bool IsFixedSize { get; }
    return:
      type: System.Boolean
      description: "Essa propriedade sempre retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.IsFixedSize*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.IsReadOnly
  id: IsReadOnly
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: HybridDictionary.IsReadOnly
  fullName: System.Collections.Specialized.HybridDictionary.IsReadOnly
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> é somente leitura."
  remarks: "<xref:System.Collections.Specialized.HybridDictionary>implementa a propriedade IsReadOnly porque ele é necessário para o <xref:System.Collections.IDictionary?displayProperty=fullName>interface.</xref:System.Collections.IDictionary?displayProperty=fullName></xref:System.Collections.Specialized.HybridDictionary>       Uma coleção que é somente leitura não permite a adição, remoção ou modificação de elementos após a criação da coleção.       Uma coleção que é somente leitura é simplesmente uma coleção com um wrapper que impede a modificação da coleção; Portanto, se forem feitas alterações à coleção subjacente, a coleção somente leitura reflete as alterações.       Recuperar o valor dessa propriedade é uma operação de (1)."
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "Essa propriedade sempre retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.IsSynchronized
  id: IsSynchronized
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: HybridDictionary.IsSynchronized
  fullName: System.Collections.Specialized.HybridDictionary.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém um valor que indica se o <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref> é sincronizado (thread-safe)."
  remarks: "<xref:System.Collections.Specialized.HybridDictionary>implementa a propriedade IsSynchronized porque ele é necessário para o <xref:System.Collections.ICollection?displayProperty=fullName>interface.</xref:System.Collections.ICollection?displayProperty=fullName></xref:System.Collections.Specialized.HybridDictionary>       Classes derivadas podem fornecer uma versão sincronizada do <xref:System.Collections.Specialized.HybridDictionary>usando o <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A>propriedade.</xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A> </xref:System.Collections.Specialized.HybridDictionary>       Enumerar através de uma coleção intrinsecamente não é um procedimento de thread-safe. Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção. Para garantir a segurança de thread durante a enumeração, você pode bloquear a coleção durante toda a enumeração ou capture as exceções resultante de alterações feitas por outros threads."
  example:
  - "The following code example shows how to lock the collection using the <xref:System.Collections.Specialized.HybridDictionary.SyncRoot%2A> during the entire enumeration.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/cpp/p-system.collections.spe_5_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/csharp/p-system.collections.spe_5_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/visualbasic/p-system.collections.spe_5_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "Essa propriedade sempre retorna <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Item(System.Object)
  id: Item(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Item(Object)
  nameWithType: HybridDictionary.Item(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Item(Object)
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém ou define o valor associado com a chave especificada."
  remarks: "Esta propriedade fornece a capacidade de acessar um elemento específico na coleção usando a seguinte sintaxe: `myCollection[key]`.       Você também pode usar a propriedade do Item para adicionar novos elementos, definindo o valor de uma chave que não existe no <xref:System.Collections.Specialized.HybridDictionary>; por exemplo, `myCollection[&quot;myNonexistentKey&quot;] = myValue`.</xref:System.Collections.Specialized.HybridDictionary> No entanto, se a chave especificada já existe na <xref:System.Collections.Specialized.HybridDictionary>, definindo a propriedade de Item substitui o valor antigo.</xref:System.Collections.Specialized.HybridDictionary> Em contraste, o <xref:System.Collections.Specialized.HybridDictionary.Add%2A>método não modifica os elementos existentes.</xref:System.Collections.Specialized.HybridDictionary.Add%2A>       Uma chave não pode ser `null`, mas um valor possível. Para distinguir entre `null` que é retornado porque a chave especificada não foi encontrada e `null` que é retornado porque o valor da chave especificada é `null`, use o <xref:System.Collections.Specialized.HybridDictionary.Contains%2A>método para determinar se a chave existe na lista.</xref:System.Collections.Specialized.HybridDictionary.Contains%2A>       A linguagem c# usa a palavra-chave para definir os indexadores em vez de implementar a propriedade do Item. Visual Basic implementa um Item como uma propriedade padrão, que fornece a mesma funcionalidade de indexação.       Recuperar o valor dessa propriedade é uma operação de (1); definindo a propriedade também é uma operação de (1)."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_27_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_27_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_27_1.vb)]"
  syntax:
    content: public object this[object key] { get; set; }
    parameters:
    - id: key
      type: System.Object
      description: "A chave cujo valor a ser obtido ou definido."
    return:
      type: System.Object
      description: "O valor associado com a chave especificada. Se a chave especificada não for encontrada, a tentativa de obtê-lo retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, e a tentativa de definir a ele cria uma nova entrada usando a chave especificada."
  overload: System.Collections.Specialized.HybridDictionary.Item*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Keys
  id: Keys
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Keys
  nameWithType: HybridDictionary.Keys
  fullName: System.Collections.Specialized.HybridDictionary.Keys
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém um <xref:System.Collections.ICollection>que contém as chaves de <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "A ordem dos valores no <xref:System.Collections.ICollection>não for especificado, mas é a mesma ordem que os valores associados no <xref:System.Collections.ICollection>retornado pelo <xref:System.Collections.Specialized.HybridDictionary.Values%2A>método.</xref:System.Collections.Specialized.HybridDictionary.Values%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       Retornado <xref:System.Collections.ICollection>não é uma cópia estática; em vez disso, o que <xref:System.Collections.ICollection>faz referência a chaves no original <xref:System.Collections.Specialized.HybridDictionary>.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Portanto, as alterações para o <xref:System.Collections.Specialized.HybridDictionary>continuam a ser refletido em <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.Specialized.HybridDictionary>       Recuperar o valor dessa propriedade é uma operação de (1)."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_20_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_20_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_20_1.vb)]"
  syntax:
    content: public System.Collections.ICollection Keys { get; }
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que contém as chaves de <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Specialized.HybridDictionary.Keys*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Remove(System.Object)
  id: Remove(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Remove(Object)
  nameWithType: HybridDictionary.Remove(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Remove(Object)
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Remove a entrada com a chave especificada do <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "Se o <xref:System.Collections.Specialized.HybridDictionary>não contém um elemento com a chave especificada, o <xref:System.Collections.Specialized.HybridDictionary>permanece inalterado.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.Specialized.HybridDictionary> Nenhuma exceção é lançada.       Se a coleção já esteja armazenada em um <xref:System.Collections.Hashtable>e o número de elementos cai abaixo do tamanho ideal para um <xref:System.Collections.Specialized.ListDictionary>o permanece coleção o <xref:System.Collections.Hashtable>para evitar a sobrecarga de cópia de elementos de <xref:System.Collections.Hashtable>volta para o <xref:System.Collections.Specialized.ListDictionary>.</xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable> </xref:System.Collections.Hashtable> </xref:System.Collections.Specialized.ListDictionary> </xref:System.Collections.Hashtable>       Esse método é uma operação de (1)."
  example:
  - "The following code example adds to and removes elements from a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/cpp/m-system.collections.spe_0_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/csharp/m-system.collections.spe_0_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_AddRemove#1](~/add/codesnippet/visualbasic/m-system.collections.spe_0_1.vb)]"
  syntax:
    content: public void Remove (object key);
    parameters:
    - id: key
      type: System.Object
      description: "A chave da entrada a ser removido."
  overload: System.Collections.Specialized.HybridDictionary.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>key</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.SyncRoot
  id: SyncRoot
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: SyncRoot
  nameWithType: HybridDictionary.SyncRoot
  fullName: System.Collections.Specialized.HybridDictionary.SyncRoot
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém um objeto que pode ser usado para sincronizar o acesso a <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  remarks: "Classes derivadas podem fornecer sua própria versão sincronizada de <xref:System.Collections.Specialized.HybridDictionary>usando a propriedade SyncRoot.</xref:System.Collections.Specialized.HybridDictionary> O código de sincronização deve executar operações no SyncRoot do <xref:System.Collections.Specialized.HybridDictionary>, não diretamente no <xref:System.Collections.Specialized.HybridDictionary>.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.Specialized.HybridDictionary> Isso garante que a operação correta de coleções que são derivados de outros objetos. Especificamente, ele mantém uma sincronização adequada com outros threads que podem ser simultaneamente modificando o <xref:System.Collections.Specialized.HybridDictionary>objeto.</xref:System.Collections.Specialized.HybridDictionary>       Enumerar através de uma coleção intrinsecamente não é um procedimento de thread-safe. Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção. Para garantir a segurança de thread durante a enumeração, você pode bloquear a coleção durante toda a enumeração ou capture as exceções resultante de alterações feitas por outros threads."
  example:
  - "The following code example shows how to lock the collection using the SyncRoot during the entire enumeration.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/cpp/p-system.collections.spe_22_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/csharp/p-system.collections.spe_22_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary2#3](~/add/codesnippet/visualbasic/p-system.collections.spe_22_1.vb)]  \n  \n Retrieving the value of this property is an O(1) operation."
  syntax:
    content: public object SyncRoot { get; }
    return:
      type: System.Object
      description: "Um objeto que pode ser usado para sincronizar o acesso a <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>."
  overload: System.Collections.Specialized.HybridDictionary.SyncRoot*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Retorna um <xref:System.Collections.IEnumerator>que itera por meio de <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.IEnumerator>"
  remarks: "O `foreach` instrução de linguagem c# (`for each` no Visual Basic) oculta a complexidade dos enumeradores.  Portanto, usando `foreach` é recomendada, em vez de manipulação direta do enumerador.       Enumeradores podem ser usados para ler os dados na coleção, mas eles não podem ser usados para modificar a coleção subjacente.       Inicialmente, o enumerador está posicionado antes do primeiro elemento na coleção. <xref:System.Collections.IEnumerator.Reset%2A>também traz o enumerador de volta para essa posição.</xref:System.Collections.IEnumerator.Reset%2A> AT isso posicionar, chamando <xref:System.Collections.IEnumerator.Current%2A>lança uma exceção.</xref:System.Collections.IEnumerator.Current%2A> Portanto, você deve chamar <xref:System.Collections.IEnumerator.MoveNext%2A>para avançar o enumerador para o primeiro elemento da coleção antes de ler o valor de <xref:System.Collections.IEnumerator.Current%2A>.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       <xref:System.Collections.IEnumerator.Current%2A>Retorna o mesmo objeto até que o <xref:System.Collections.IEnumerator.MoveNext%2A>ou <xref:System.Collections.IEnumerator.Reset%2A>é chamado.</xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A></xref:System.Collections.IEnumerator.Current%2A> <xref:System.Collections.IEnumerator.MoveNext%2A>define <xref:System.Collections.IEnumerator.Current%2A>para o próximo elemento.</xref:System.Collections.IEnumerator.Current%2A></xref:System.Collections.IEnumerator.MoveNext%2A>       Se <xref:System.Collections.IEnumerator.MoveNext%2A>passa o final da coleção, o enumerador está posicionado após o último elemento da coleção e <xref:System.Collections.IEnumerator.MoveNext%2A>retorna `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Quando o enumerador está nessa posição, chamadas subsequentes para <xref:System.Collections.IEnumerator.MoveNext%2A>também retornam `false`.</xref:System.Collections.IEnumerator.MoveNext%2A> Se a última chamada <xref:System.Collections.IEnumerator.MoveNext%2A>retornado `false`, chamar <xref:System.Collections.IEnumerator.Current%2A>lança uma exceção.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Definir <xref:System.Collections.IEnumerator.Current%2A>para o primeiro elemento da coleção novamente, você pode chamar <xref:System.Collections.IEnumerator.Reset%2A>seguido pelo <xref:System.Collections.IEnumerator.MoveNext%2A>.</xref:System.Collections.IEnumerator.MoveNext%2A> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.Current%2A>       Um enumerador permanece válido desde que a coleção permaneça inalterada. Se forem feitas alterações à coleção, como adicionar, modificar ou excluir elementos, o enumerador será invalidado irrecuperavelmente e a próxima chamada ou <xref:System.Collections.IEnumerator.MoveNext%2A> <xref:System.Collections.IEnumerator.Reset%2A>gera um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Collections.IEnumerator.Reset%2A> </xref:System.Collections.IEnumerator.MoveNext%2A> Se a coleção é modificada entre <xref:System.Collections.IEnumerator.MoveNext%2A>e <xref:System.Collections.IEnumerator.Current%2A>, <xref:System.Collections.IEnumerator.Current%2A>retorna o elemento que está definido como, mesmo se o enumerador já é invalidado.</xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.Current%2A> </xref:System.Collections.IEnumerator.MoveNext%2A>       O enumerador não tem acesso exclusivo à coleção; Portanto, enumerando através de uma coleção intrinsecamente não é um procedimento de thread-safe. Mesmo quando uma coleção é sincronizada, outros threads ainda podem modificar a coleção, o que faz com que o enumerador lançar uma exceção. Para garantir a segurança de thread durante a enumeração, você pode bloquear a coleção durante toda a enumeração ou capture as exceções resultante de alterações feitas por outros threads.       Esse método é uma operação de (1)."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/cfcf8780-64b5-47b8-8217-_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/cfcf8780-64b5-47b8-8217-_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/cfcf8780-64b5-47b8-8217-_1.vb)]"
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "An <xref:System.Collections.IEnumerator> for the <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;></xref>.</xref:System.Collections.IEnumerator>"
  overload: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Collections.Specialized.HybridDictionary.Values
  id: Values
  parent: System.Collections.Specialized.HybridDictionary
  langs:
  - csharp
  name: Values
  nameWithType: HybridDictionary.Values
  fullName: System.Collections.Specialized.HybridDictionary.Values
  type: Property
  assemblies:
  - System
  namespace: System.Collections.Specialized
  summary: "Obtém um <xref:System.Collections.ICollection>que contém os valores de <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  remarks: "A ordem dos valores no <xref:System.Collections.ICollection>não for especificado, mas é a mesma ordem que as chaves associadas no <xref:System.Collections.ICollection>retornado pelo <xref:System.Collections.Specialized.HybridDictionary.Keys%2A>método.</xref:System.Collections.Specialized.HybridDictionary.Keys%2A> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection>       Retornado <xref:System.Collections.ICollection>não é uma cópia estática; em vez disso, o que <xref:System.Collections.ICollection>faz referência a valores no original <xref:System.Collections.Specialized.HybridDictionary>.</xref:System.Collections.Specialized.HybridDictionary> </xref:System.Collections.ICollection> </xref:System.Collections.ICollection> Portanto, as alterações para o <xref:System.Collections.Specialized.HybridDictionary>continuam a ser refletido em <xref:System.Collections.ICollection>.</xref:System.Collections.ICollection> </xref:System.Collections.Specialized.HybridDictionary>       Recuperar o valor dessa propriedade é uma operação de (1)."
  example:
  - "The following code example enumerates the elements of a <xref:System.Collections.Specialized.HybridDictionary>.  \n  \n [!code-cpp[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/cpp/p-system.collections.spe_14_1.cpp)]\n [!code-cs[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/csharp/p-system.collections.spe_14_1.cs)]\n [!code-vb[System.Collections.Specialized.HybridDictionary_Enumerator#1](~/add/codesnippet/visualbasic/p-system.collections.spe_14_1.vb)]"
  syntax:
    content: public System.Collections.ICollection Values { get; }
    return:
      type: System.Collections.ICollection
      description: "Um <xref:System.Collections.ICollection>que contém os valores de <xref href=&quot;System.Collections.Specialized.HybridDictionary&quot;> </xref>.</xref:System.Collections.ICollection>"
  overload: System.Collections.Specialized.HybridDictionary.Values*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.InvalidCastException
  isExternal: true
  name: System.InvalidCastException
- uid: System.Collections.Specialized.HybridDictionary.#ctor
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary()
  nameWithType: HybridDictionary.HybridDictionary()
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary()
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Boolean)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary(Boolean)
  nameWithType: HybridDictionary.HybridDictionary(Boolean)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary(Int32)
  nameWithType: HybridDictionary.HybridDictionary(Int32)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Collections.Specialized.HybridDictionary.#ctor(System.Int32,System.Boolean)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary(Int32,Boolean)
  nameWithType: HybridDictionary.HybridDictionary(Int32,Boolean)
  fullName: System.Collections.Specialized.HybridDictionary.HybridDictionary(Int32,Boolean)
- uid: System.Collections.Specialized.HybridDictionary.Add(System.Object,System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Add(Object,Object)
  nameWithType: HybridDictionary.Add(Object,Object)
  fullName: System.Collections.Specialized.HybridDictionary.Add(Object,Object)
- uid: System.Collections.Specialized.HybridDictionary.Clear
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Clear()
  nameWithType: HybridDictionary.Clear()
  fullName: System.Collections.Specialized.HybridDictionary.Clear()
- uid: System.Collections.Specialized.HybridDictionary.Contains(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Contains(Object)
  nameWithType: HybridDictionary.Contains(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Contains(Object)
- uid: System.Collections.Specialized.HybridDictionary.CopyTo(System.Array,System.Int32)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: CopyTo(Array,Int32)
  nameWithType: HybridDictionary.CopyTo(Array,Int32)
  fullName: System.Collections.Specialized.HybridDictionary.CopyTo(Array,Int32)
- uid: System.Array
  parent: System
  isExternal: true
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: System.Collections.Specialized.HybridDictionary.Count
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Count
  nameWithType: HybridDictionary.Count
  fullName: System.Collections.Specialized.HybridDictionary.Count
- uid: System.Collections.Specialized.HybridDictionary.GetEnumerator
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: GetEnumerator()
  nameWithType: HybridDictionary.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Collections.Specialized.HybridDictionary.IsFixedSize
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: HybridDictionary.IsFixedSize
  fullName: System.Collections.Specialized.HybridDictionary.IsFixedSize
- uid: System.Collections.Specialized.HybridDictionary.IsReadOnly
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: HybridDictionary.IsReadOnly
  fullName: System.Collections.Specialized.HybridDictionary.IsReadOnly
- uid: System.Collections.Specialized.HybridDictionary.IsSynchronized
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: HybridDictionary.IsSynchronized
  fullName: System.Collections.Specialized.HybridDictionary.IsSynchronized
- uid: System.Collections.Specialized.HybridDictionary.Item(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Item(Object)
  nameWithType: HybridDictionary.Item(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Item(Object)
- uid: System.Collections.Specialized.HybridDictionary.Keys
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Keys
  nameWithType: HybridDictionary.Keys
  fullName: System.Collections.Specialized.HybridDictionary.Keys
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Collections.Specialized.HybridDictionary.Remove(System.Object)
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Remove(Object)
  nameWithType: HybridDictionary.Remove(Object)
  fullName: System.Collections.Specialized.HybridDictionary.Remove(Object)
- uid: System.Collections.Specialized.HybridDictionary.SyncRoot
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: HybridDictionary.SyncRoot
  fullName: System.Collections.Specialized.HybridDictionary.SyncRoot
- uid: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Collections.Specialized.HybridDictionary.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Collections.Specialized.HybridDictionary.Values
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Values
  nameWithType: HybridDictionary.Values
  fullName: System.Collections.Specialized.HybridDictionary.Values
- uid: System.Collections.Specialized.HybridDictionary.#ctor*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: HybridDictionary
  nameWithType: HybridDictionary.HybridDictionary
- uid: System.Collections.Specialized.HybridDictionary.Add*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Add
  nameWithType: HybridDictionary.Add
- uid: System.Collections.Specialized.HybridDictionary.Clear*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Clear
  nameWithType: HybridDictionary.Clear
- uid: System.Collections.Specialized.HybridDictionary.Contains*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Contains
  nameWithType: HybridDictionary.Contains
- uid: System.Collections.Specialized.HybridDictionary.CopyTo*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: CopyTo
  nameWithType: HybridDictionary.CopyTo
- uid: System.Collections.Specialized.HybridDictionary.Count*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Count
  nameWithType: HybridDictionary.Count
- uid: System.Collections.Specialized.HybridDictionary.GetEnumerator*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: GetEnumerator
  nameWithType: HybridDictionary.GetEnumerator
- uid: System.Collections.Specialized.HybridDictionary.IsFixedSize*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsFixedSize
  nameWithType: HybridDictionary.IsFixedSize
- uid: System.Collections.Specialized.HybridDictionary.IsReadOnly*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsReadOnly
  nameWithType: HybridDictionary.IsReadOnly
- uid: System.Collections.Specialized.HybridDictionary.IsSynchronized*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: IsSynchronized
  nameWithType: HybridDictionary.IsSynchronized
- uid: System.Collections.Specialized.HybridDictionary.Item*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Item
  nameWithType: HybridDictionary.Item
- uid: System.Collections.Specialized.HybridDictionary.Keys*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Keys
  nameWithType: HybridDictionary.Keys
- uid: System.Collections.Specialized.HybridDictionary.Remove*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Remove
  nameWithType: HybridDictionary.Remove
- uid: System.Collections.Specialized.HybridDictionary.SyncRoot*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: SyncRoot
  nameWithType: HybridDictionary.SyncRoot
- uid: System.Collections.Specialized.HybridDictionary.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: HybridDictionary.System.Collections.IEnumerable.GetEnumerator
- uid: System.Collections.Specialized.HybridDictionary.Values*
  parent: System.Collections.Specialized.HybridDictionary
  isExternal: false
  name: Values
  nameWithType: HybridDictionary.Values
