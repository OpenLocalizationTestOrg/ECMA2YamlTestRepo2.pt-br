### YamlMime:ManagedReference
items:
- uid: System.Web.Caching.Cache
  id: Cache
  children:
  - System.Web.Caching.Cache.#ctor
  - System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  - System.Web.Caching.Cache.Count
  - System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
  - System.Web.Caching.Cache.EffectivePrivateBytesLimit
  - System.Web.Caching.Cache.Get(System.String)
  - System.Web.Caching.Cache.GetEnumerator
  - System.Web.Caching.Cache.Insert(System.String,System.Object)
  - System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)
  - System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)
  - System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)
  - System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  - System.Web.Caching.Cache.Item(System.String)
  - System.Web.Caching.Cache.NoAbsoluteExpiration
  - System.Web.Caching.Cache.NoSlidingExpiration
  - System.Web.Caching.Cache.Remove(System.String)
  - System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator
  langs:
  - csharp
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
  type: Class
  summary: "Implementa o cache para um aplicativo Web. Essa classe não pode ser herdada."
  remarks: "Uma instância dessa classe é criada por domínio de aplicativo, e ele permanece válido desde que o domínio de aplicativo permanece ativo. Informações sobre uma instância desta classe estão disponíveis por meio de `Cache` propriedade do <xref:System.Web.HttpContext>objeto ou o `Cache` propriedade do <xref:System.Web.UI.Page>objeto.</xref:System.Web.UI.Page> </xref:System.Web.HttpContext>      > [!NOTE] > Classe o Cache não é destinado ao uso fora dos aplicativos ASP.NET. Ele foi criado e testado para uso no ASP.NET para fornecer armazenamento em cache para aplicativos da Web. Para outros tipos de aplicativos, como aplicativos de console ou aplicativos de formulários do Windows, use a <xref:System.Runtime.Caching.ObjectCache>classe.</xref:System.Runtime.Caching.ObjectCache>"
  example:
  - "The following example is a page that shows users the value assigned to an item in the cache, and then notifies them when the item is removed from the cache. It creates a `RemovedCallback` method, which has the signature of the `CacheItemRemovedCallback` delegate, to notify users when the cache item is removed, and it uses the <xref:System.Web.Caching.CacheItemRemovedReason> enumeration to tell them why it was removed. In addition, it uses the <xref:System.Web.Caching.Cache.Item%2A?displayProperty=fullName> property to add objects to the cache and retrieve the value of those objects. In the `AddItemToCache` method, it uses the <xref:System.Web.Caching.Cache.Add%2A?displayProperty=fullName> method to add an item to the cache. To use the `CacheItemRemovedCallback` delegate, you must add an item to the cache with this method or the <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName> method, so that that ASP.NET can automatically make the proper method calls when the item is removed. The custom `RemoveItemFromCache` method uses the <xref:System.Web.Caching.Cache.Remove%2A?displayProperty=fullName> method to explicitly delete the item from the cache, causing the `RemovedCallback` method to be invoked.  \n  \n> [!NOTE]\n>  The instance of Cache that is accessed by the snippet below is a member of the <xref:System.Web.UI.Page> object that this sample inherits.  \n  \n [!code-cs[System.Web.Caching Examples#1](~/add/codesnippet/csharp/t-system.web.caching.cache_1.aspx)]\n [!code-vb[System.Web.Caching Examples#1](~/add/codesnippet/visualbasic/t-system.web.caching.cache_1.aspx)]"
  syntax:
    content: 'public sealed class Cache : System.Collections.IEnumerable'
  inheritance:
  - System.Object
  implements:
  - System.Collections.IEnumerable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.#ctor
  id: '#ctor'
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Cache()
  nameWithType: Cache.Cache()
  fullName: System.Web.Caching.Cache.Cache()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> classe."
  syntax:
    content: public Cache ();
    parameters: []
  overload: System.Web.Caching.Cache.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  id: Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  nameWithType: Cache.Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  fullName: System.Web.Caching.Cache.Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Adiciona o item especificado para o <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> objeto com dependências, políticas de expiração e prioridade e um delegado que você pode usar para notificar o aplicativo quando o item inserido é removido do <xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>."
  remarks: "Chamadas para esse método falhará se um item com o mesmo `key` parâmetro já está armazenado no `Cache`. Para substituir um existente `Cache` item usando a mesma `key` parâmetro, use o <xref:System.Web.Caching.Cache.Insert%2A>método.</xref:System.Web.Caching.Cache.Insert%2A>       Não é possível definir ambos os `absoluteExpiration` e `slidingExpiration` parâmetros. Se você pretende que o item de cache para expirar em um momento específico, você definir o `absoluteExpiration` parâmetro a um tempo específico e o `slidingExpiration` parâmetro para <xref:System.Web.Caching.Cache.NoSlidingExpiration>.</xref:System.Web.Caching.Cache.NoSlidingExpiration>       Se você pretende que o item de cache expirar após um determinado período de tempo decorrido desde que o item foi acessado pela última vez, se você definir o `slidingExpiration` parâmetro para o intervalo de expiração e o `absoluteExpiration` parâmetro para <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.</xref:System.Web.Caching.Cache.NoAbsoluteExpiration>"
  example:
  - "The following example creates an `AddItemToCache` method. When this method is called, it sets an `itemRemoved` property to `false` and registers an `onRemove` method with a new instance of the <xref:System.Web.Caching.CacheItemRemovedCallback> delegate. The delegate's signature is used in the `RemovedCallback` method. The `AddItemToCache` method then checks the value associated with the `Key1` key in the cache. If the value is `null`, the `Add` method places an item in the cache with a key of `Key1`, a value of `Value 1`, an absolute expiration of 60 seconds, and a high cache priority. It also uses the `onRemove` method as an argument. This allows the `RemovedCallback` method to be called when this item is removed from the cache.  \n  \n> [!NOTE]\n>  For examples of how to use the <xref:System.Web.Caching.CacheDependency> class and the <xref:System.Web.Caching.CacheItemRemovedCallback> delegate, see [Caching Application Data](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Caching Examples#3](~/add/codesnippet/csharp/97b35003-2ed6-4e36-acd6-_1.aspx)]\n [!code-vb[System.Web.Caching Examples#3](~/add/codesnippet/visualbasic/97b35003-2ed6-4e36-acd6-_1.aspx)]"
  syntax:
    content: public object Add (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);
    parameters:
    - id: key
      type: System.String
      description: "A chave de cache usada para referenciar o item."
    - id: value
      type: System.Object
      description: "O item a ser adicionado ao cache."
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "Os arquivo ou cache dependências de chave para o item. Quando qualquer dependência for alterada, o objeto se torna inválido e será removido do cache. Se não houver nenhuma dependência, este parâmetro contém <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: absoluteExpiration
      type: System.DateTime
      description: "A hora em que o objeto adicionado expira e é removido do cache. Se você estiver usando a expiração deslizante, o `absoluteExpiration` parâmetro deve ser <xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;> </xref>."
    - id: slidingExpiration
      type: System.TimeSpan
      description: "O intervalo entre a hora em que o objeto adicionado foi acessado pela última vez e a hora em que esse objeto expira. Se esse valor é o equivalente de 20 minutos, o objeto expira e é removido do cache de 20 minutos depois que ele é acessado pela última vez. Se você estiver usando uma expiração absoluta, o `slidingExpiration` parâmetro deve ser <xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;> </xref>."
    - id: priority
      type: System.Web.Caching.CacheItemPriority
      description: "O custo relativo do objeto, conforme expresso pelo <xref href=&quot;System.Web.Caching.CacheItemPriority&quot;> </xref> enumeração. O cache usa esse valor quando ele remove objetos; objetos com um custo mais baixo são removidos do cache antes de objetos com um custo mais alto."
    - id: onRemoveCallback
      type: System.Web.Caching.CacheItemRemovedCallback
      description: "Um delegado que, se fornecido, é chamado quando um objeto é removido do cache. Você pode usar isso para notificar aplicativos quando os objetos são excluídos do cache."
    return:
      type: System.Object
      description: "Um objeto que representa o item que foi adicionado se o item foi armazenado anteriormente no cache; Caso contrário, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Caching.Cache.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is set to <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O <code> slidingExpiration </code> parâmetro for definido como menor que <xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;> </xref> ou mais de um ano."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> absoluteExpiration </code> e <code> slidingExpiration </code> parâmetros são definidos para o item que você está tentando adicionar ao <xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Caching.Cache.Count
  id: Count
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Count
  nameWithType: Cache.Count
  fullName: System.Web.Caching.Cache.Count
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Obtém o número de itens armazenados em cache."
  remarks: "Essa propriedade pode ser útil ao monitorar o desempenho do aplicativo ou ao usar a funcionalidade de rastreamento do ASP.NET."
  example:
  - "The following example obtains the value of the `Count` property, converts it to a string, and assigns the string to the <xref:System.Web.UI.WebControls.Label.Text%2A> property of a <xref:System.Web.UI.WebControls.Label> Web server control, `Label1`.  \n  \n [!code-vb[System.Web.Caching.Cache.Count#1](~/add/codesnippet/visualbasic/p-system.web.caching.cac_3_1.aspx)]\n [!code-cs[System.Web.Caching.Cache.Count#1](~/add/codesnippet/csharp/p-system.web.caching.cac_3_1.aspx)]"
  syntax:
    content: public int Count { get; }
    return:
      type: System.Int32
      description: "O número de itens armazenados em cache."
  overload: System.Web.Caching.Cache.Count*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
  id: EffectivePercentagePhysicalMemoryLimit
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: EffectivePercentagePhysicalMemoryLimit
  nameWithType: Cache.EffectivePercentagePhysicalMemoryLimit
  fullName: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Obtém o percentual de memória física que pode ser consumida por um aplicativo antes que o ASP.NET inicia a remoção de itens do cache."
  remarks: "A propriedade EffectivePercentagePhysicalMemoryLimit retorna a porcentagem de memória física disponível para o aplicativo. Quando a porcentagem disponível se torna baixa, o algoritmo de cache começa a remoção de itens do cache.       A propriedade EffectivePercentagePhysicalMemoryLimit pode ser definida com o `percentagePhysicalMemoryUsedLimit` atributo o [elemento de cache para armazenar em cache (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/68fa0040-5abf-4c73-93fc-17e3c6af3299) elemento no arquivo de configuração do aplicativo. Se o `percentagePhysicalMemoryUsedLimit` atributo não for definido, o algoritmo de cache determina o tamanho máximo do cache e a propriedade EffectivePercentagePhysicalMemoryLimit é calculada.       EffectivePercentagePhysicalMemoryLimit é introduzido no .NET Framework versão 3.5.  Para obter mais informações, consulte [versões e dependências](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public long EffectivePercentagePhysicalMemoryLimit { get; }
    return:
      type: System.Int64
      description: "A porcentagem de memória física disponível para o aplicativo."
  overload: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.EffectivePrivateBytesLimit
  id: EffectivePrivateBytesLimit
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: EffectivePrivateBytesLimit
  nameWithType: Cache.EffectivePrivateBytesLimit
  fullName: System.Web.Caching.Cache.EffectivePrivateBytesLimit
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Obtém o número de bytes disponíveis para o cache."
  remarks: "A propriedade EffectivePrivateBytesLimit retorna o número de bytes que pode ser usado pelo processo de aplicativo. Quando esse limite é atingido, o algoritmo de cache começa eliminação agressiva de cache.       A propriedade EffectivePrivateBytesLimit pode ser definida com o `privateBytesLimit` atributo o [elemento de cache para armazenar em cache (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/68fa0040-5abf-4c73-93fc-17e3c6af3299) elemento no arquivo de configuração do aplicativo. Quando o `privateBytesLimit` atributo não for definido, o algoritmo de cache determina o tamanho máximo do cache e a propriedade EffectivePrivateBytesLimit contém o tamanho escolhido pelo algoritmo."
  example:
  - <xref:System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit%2A>
  syntax:
    content: public long EffectivePrivateBytesLimit { get; }
    return:
      type: System.Int64
      description: "O número de bytes disponíveis para o cache."
  overload: System.Web.Caching.Cache.EffectivePrivateBytesLimit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.Get(System.String)
  id: Get(System.String)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Get(String)
  nameWithType: Cache.Get(String)
  fullName: System.Web.Caching.Cache.Get(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Recupera o item especificado do <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> objeto."
  remarks: ''
  example:
  - "The following example demonstrates how to retrieve the value cached for an ASP.NET text box server control.  \n  \n [!code-vb[Classic Cache.Get Example#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_4_1.vb)]\n [!code-cs[Classic Cache.Get Example#1](~/add/codesnippet/csharp/m-system.web.caching.cac_4_1.cs)]"
  syntax:
    content: public object Get (string key);
    parameters:
    - id: key
      type: System.String
      description: "O identificador do item de cache recuperar."
    return:
      type: System.Object
      description: "O item de cache recuperados, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a chave não for encontrada."
  overload: System.Web.Caching.Cache.Get*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.GetEnumerator
  id: GetEnumerator
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: GetEnumerator()
  nameWithType: Cache.GetEnumerator()
  fullName: System.Web.Caching.Cache.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Recupera um enumerador de dicionário usado para iterar por meio das configurações de chave e seus valores contidos no cache."
  remarks: "Itens podem ser adicionados a ou removidos do cache durante esse método é Enumerando os itens."
  example:
  - "The following example creates an <xref:System.Collections.IDictionaryEnumerator> object, `CacheEnum`, using the `GetEnumerator` method. The enumerator moves through the cache, converts the value of each cached item to a string, and then writes the values to a Web Forms page.  \n  \n [!code-vb[Cache.GetEnumerator#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_3_1.aspx)]\n [!code-cs[Cache.GetEnumerator#1](~/add/codesnippet/csharp/m-system.web.caching.cac_3_1.aspx)]"
  syntax:
    content: public System.Collections.IDictionaryEnumerator GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IDictionaryEnumerator
      description: "Um enumerador para iterar por meio de <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> objeto."
  overload: System.Web.Caching.Cache.GetEnumerator*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object)
  id: Insert(System.String,System.Object)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object)
  nameWithType: Cache.Insert(String,Object)
  fullName: System.Web.Caching.Cache.Insert(String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Insere um item para o <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> objeto com uma chave de cache para fazer referência a seu local, usando valores padrão fornecidos pelo <xref href=&quot;System.Web.Caching.CacheItemPriority&quot;> </xref> enumeração."
  remarks: "Este método substituirá um item de cache existente, cuja chave corresponde a `key` parâmetro. O objeto adicionado ao cache usando essa sobrecarga do `Insert` método é inserido sem dependências de arquivo ou cache, uma prioridade de <xref:System.Web.Caching.CacheItemPriority>, um deslizando o valor de expiração <xref:System.Web.Caching.Cache.NoSlidingExpiration>e um valor de expiração absoluta de <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.</xref:System.Web.Caching.Cache.NoAbsoluteExpiration> </xref:System.Web.Caching.Cache.NoSlidingExpiration> </xref:System.Web.Caching.CacheItemPriority>"
  example:
  - "The following example demonstrates how to insert an item into an application's cache.  \n  \n [!code-cs[Classic Cache.Insert Example#1](~/add/codesnippet/csharp/m-system.web.caching.cac_8_1.cs)]\n [!code-vb[Classic Cache.Insert Example#1](~/add/codesnippet/visualbasic/m-system.web.caching.cac_8_1.vb)]"
  syntax:
    content: public void Insert (string key, object value);
    parameters:
    - id: key
      type: System.String
      description: "A chave de cache usada para referenciar o item."
    - id: value
      type: System.Object
      description: "O objeto a ser inserido no cache."
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)
  id: Insert(System.String,System.Object,System.Web.Caching.CacheDependency)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object,CacheDependency)
  nameWithType: Cache.Insert(String,Object,CacheDependency)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Insere um objeto para o <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> que tem dependências de arquivo ou chave."
  remarks: "Este método substituirá um item de cache existente, cuja chave corresponde a `key` parâmetro. O objeto adicionado ao cache usando essa sobrecarga do `Insert` método é inserido sem dependências de arquivo ou cache, uma prioridade de <xref:System.Web.Caching.CacheItemPriority>, um deslizando o valor de expiração <xref:System.Web.Caching.Cache.NoSlidingExpiration>e um valor de expiração absoluta de <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.</xref:System.Web.Caching.Cache.NoAbsoluteExpiration> </xref:System.Web.Caching.Cache.NoSlidingExpiration> </xref:System.Web.Caching.CacheItemPriority>"
  example:
  - "The following example demonstrates how to insert an item into an application's cache with a cache dependency on an XML configuration file.  \n  \n [!code-cs[Classic Cache.Insert1 Example#1](~/add/codesnippet/csharp/1f70e8db-a9cf-4467-9e9a-_1.cs)]\n [!code-vb[Classic Cache.Insert1 Example#1](~/add/codesnippet/visualbasic/1f70e8db-a9cf-4467-9e9a-_1.vb)]"
  syntax:
    content: public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies);
    parameters:
    - id: key
      type: System.String
      description: "A chave de cache usada para identificar o item."
    - id: value
      type: System.Object
      description: "O objeto a ser inserido no cache."
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "Os arquivo ou cache dependências de chave para o objeto inserido. Quando qualquer dependência for alterada, o objeto se torna inválido e será removido do cache. Se não houver nenhuma dependência, este parâmetro contém <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)
  id: Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Insere um objeto para o <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> com as políticas de expiração e as dependências."
  remarks: "Este método substituirá uma existente `Cache` item com o mesmo `key` parâmetro.       Se o `slidingExpiration` parâmetro está definido como <xref:System.Web.Caching.Cache.NoSlidingExpiration>, a expiração deslizante está desabilitado.</xref:System.Web.Caching.Cache.NoSlidingExpiration> Se você definir o `slidingExpiration` parâmetro maior que <xref:System.TimeSpan.Zero>, o `absoluteExpiration` parâmetro está definido como <xref:System.DateTime.Now%2A>mais o valor contido no `slidingExpiration` parâmetro.</xref:System.DateTime.Now%2A> </xref:System.TimeSpan.Zero> Se o item é solicitado do cache antes do período de tempo especificado pelo `absoluteExpiration` parâmetro, o item será colocado no cache novamente, e `absoluteExpiration` novamente será definido como `DateTime.Now` mais o valor contido no `slidingExpiration` parâmetro. Se o item não é solicitado do cache antes da data no `absoluteExpiration` parâmetro, o item é removido do cache. . O item adicionado ao cache usando essa sobrecarga do método de inserção é inserido com uma prioridade de <xref:System.Web.Caching.CacheItemPriority>.</xref:System.Web.Caching.CacheItemPriority>"
  example:
  - "The following example demonstrates how to insert an item into an application's cache with an absolute expiration.  \n  \n> [!NOTE]\n>  Since this form of the `Insert` method supports cache dependencies, if the item has no dependencies, you must declare the `dependency` parameter as `null` (`Nothing` in Visual Basic) in the comma-delimited list of parameters.  \n  \n [!code-vb[Classic Cache.Insert2 Example#1](~/add/codesnippet/visualbasic/2de893fb-f78f-4325-b8b1-_1.vb)]\n [!code-cs[Classic Cache.Insert2 Example#1](~/add/codesnippet/csharp/2de893fb-f78f-4325-b8b1-_1.cs)]  \n  \n The following example demonstrates how to insert an item into the cache with a sliding expiration.  \n  \n [!code-vb[Classic Cache.Insert2 Example#2](~/add/codesnippet/visualbasic/2de893fb-f78f-4325-b8b1-_2.vb)]\n [!code-cs[Classic Cache.Insert2 Example#2](~/add/codesnippet/csharp/2de893fb-f78f-4325-b8b1-_2.cs)]"
  syntax:
    content: public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration);
    parameters:
    - id: key
      type: System.String
      description: "A chave de cache usada para fazer referência ao objeto."
    - id: value
      type: System.Object
      description: "O objeto a ser inserido no cache."
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "Os arquivo ou cache dependências de chave para o objeto inserido. Quando qualquer dependência for alterada, o objeto se torna inválido e será removido do cache. Se não houver nenhuma dependência, este parâmetro contém <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: absoluteExpiration
      type: System.DateTime
      description: "A hora em que o objeto inserido expira e é removido do cache. Para evitar possíveis problemas com a hora local, como as alterações do horário padrão para o horário de verão, use <> </> *> em vez de <> </> *> para este valor de parâmetro. Se você estiver usando uma expiração absoluta, o `slidingExpiration` parâmetro deve ser <xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;> </xref>."
    - id: slidingExpiration
      type: System.TimeSpan
      description: "O intervalo entre a hora em que o objeto inserido é acessado pela última vez e a hora em que esse objeto expira. Se esse valor é o equivalente de 20 minutos, o objeto irá expirar e ser removido do cache de 20 minutos depois que ele foi acessado pela última vez. Se você estiver usando a expiração deslizante, o `absoluteExpiration` parâmetro deve ser <xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;> </xref>."
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Definir o <code> slidingExpiration </code> parâmetro para menos de <xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;> </xref> ou o equivalente de mais de um ano."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> absoluteExpiration </code> e <code> slidingExpiration </code> parâmetros são definidos para o item que você está tentando adicionar ao <xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)
  id: Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Insere um objeto para o <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> objeto junto com dependências, políticas de expiração e um representante que você pode usar para notificar o aplicativo antes que o item é removido do cache."
  remarks: "O método Insert permite que você inserir um novo item no cache e fornecer um representante que é chamado antes que o item é removido do cache. O representante, você pode atualizar o item em cache e, portanto, impedir que ele está sendo removido do cache.       Este método substituirá uma existente `Cache` item com o mesmo `key` parâmetro.       Não é possível definir ambos os `absoluteExpiration` e `slidingExpiration` parâmetros. Se você pretende que o item de cache para expirar em um momento específico, você definir o `absoluteExpiration` parâmetro a um tempo específico e o `slidingExpiration` parâmetro para <xref:System.Web.Caching.Cache.NoSlidingExpiration>.</xref:System.Web.Caching.Cache.NoSlidingExpiration>       Se você pretende que o item de cache expirar após um determinado período de tempo desde que o item foi acessado pela última vez, se você definir o `slidingExpiration` parâmetro para o intervalo de expiração e você definir o `absoluteExpiration` parâmetro para <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.</xref:System.Web.Caching.Cache.NoAbsoluteExpiration>"
  syntax:
    content: public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemUpdateCallback onUpdateCallback);
    parameters:
    - id: key
      type: System.String
      description: "A chave de cache que é usada para fazer referência ao objeto."
    - id: value
      type: System.Object
      description: "O objeto a ser inserido no cache."
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "Os arquivo ou cache dependências de chave para o item. Quando qualquer dependência for alterada, o objeto se torna inválido e será removido do cache. Se não houver nenhuma dependência, este parâmetro contém <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: absoluteExpiration
      type: System.DateTime
      description: "A hora em que o objeto inserido expira e é removido do cache. Para evitar possíveis problemas com a hora local, como as alterações do horário padrão para o horário de verão, use <> </> *> em vez de <> </> *> para este valor de parâmetro. Se você estiver usando uma expiração absoluta, o `slidingExpiration` parâmetro deve ser definido como <xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;> </xref>."
    - id: slidingExpiration
      type: System.TimeSpan
      description: "O intervalo entre a hora em que o objeto armazenado em cache foi acessado pela última vez e a hora em que esse objeto expira. Se esse valor é o equivalente de 20 minutos, o objeto irá expirar e ser removido do cache de 20 minutos depois que ele foi acessado pela última vez. Se você estiver usando a expiração deslizante, o `absoluteExpiration` parâmetro deve ser definido como <xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;> </xref>."
    - id: onUpdateCallback
      type: System.Web.Caching.CacheItemUpdateCallback
      description: "Um delegado que será chamado antes do objeto é removido do cache. Você pode usar isso para atualizar o item em cache e certifique-se de que ele não é removido do cache."
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code>, <code>value</code>, or <code>onUpdateCallback</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Definir o <code> slidingExpiration </code> parâmetro para menos de <xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;> </xref> ou o equivalente de mais de um ano."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> absoluteExpiration </code> e <code> slidingExpiration </code> parâmetros são definidos para o item que você está tentando adicionar ao <xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>.       -or-       The <code>dependencies</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>, and the <code>absoluteExpiration</code> parameter is set to <xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;></xref>, and the <code>slidingExpiration</code> parameter is set to <xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  id: Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Insere um objeto para o <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> objeto com dependências, políticas de expiração e prioridade e um delegado que você pode usar para notificar o aplicativo quando o item inserido é removido do <xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>."
  remarks: "Este método substituirá uma existente `Cache` item com o mesmo `key` parâmetro.       Não é possível definir ambos os `absoluteExpiration` e `slidingExpiration` parâmetros. Se você pretende que o item de cache para expirar em um momento específico, você definir o `absoluteExpiration` parâmetro a um tempo específico e o `slidingExpiration` parâmetro para <xref:System.Web.Caching.Cache.NoSlidingExpiration>.</xref:System.Web.Caching.Cache.NoSlidingExpiration>       Se você pretende que o item de cache expirar após um determinado período de tempo se passou desde o último acesso ao item, se você definir o `slidingExpiration` parâmetro para o intervalo de expiração e o `absoluteExpiration` parâmetro para <xref:System.Web.Caching.Cache.NoAbsoluteExpiration>.</xref:System.Web.Caching.Cache.NoAbsoluteExpiration>"
  example:
  - "The following example demonstrates how to assign an item high priority when you insert it into your application's `Cache` object.  \n  \n> [!NOTE]\n>  For more information about how to use this method with the <xref:System.Web.Caching.CacheItemRemovedCallback> delegate, see [How to: Notify an Application When an Item Is Removed from the Cache](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[Classic Cache.Insert3 Example#1](~/add/codesnippet/csharp/50cb7857-3a5b-41d1-859e-_1.cs)]\n [!code-vb[Classic Cache.Insert3 Example#1](~/add/codesnippet/visualbasic/50cb7857-3a5b-41d1-859e-_1.vb)]"
  syntax:
    content: public void Insert (string key, object value, System.Web.Caching.CacheDependency dependencies, DateTime absoluteExpiration, TimeSpan slidingExpiration, System.Web.Caching.CacheItemPriority priority, System.Web.Caching.CacheItemRemovedCallback onRemoveCallback);
    parameters:
    - id: key
      type: System.String
      description: "A chave de cache usada para fazer referência ao objeto."
    - id: value
      type: System.Object
      description: "O objeto a ser inserido no cache."
    - id: dependencies
      type: System.Web.Caching.CacheDependency
      description: "Os arquivo ou cache dependências de chave para o item. Quando qualquer dependência for alterada, o objeto se torna inválido e será removido do cache. Se não houver nenhuma dependência, este parâmetro contém <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
    - id: absoluteExpiration
      type: System.DateTime
      description: "A hora em que o objeto inserido expira e é removido do cache. Para evitar possíveis problemas com a hora local, como as alterações do horário padrão para o horário de verão, use <> </> *> em vez de <> </> *> para este valor de parâmetro. Se você estiver usando uma expiração absoluta, o `slidingExpiration` parâmetro deve ser <xref href=&quot;System.Web.Caching.Cache.NoSlidingExpiration&quot;> </xref>."
    - id: slidingExpiration
      type: System.TimeSpan
      description: "O intervalo entre a hora em que o objeto inserido foi acessado pela última vez e a hora em que esse objeto expira. Se esse valor é o equivalente de 20 minutos, o objeto irá expirar e ser removido do cache de 20 minutos depois que ele foi acessado pela última vez. Se você estiver usando a expiração deslizante, o `absoluteExpiration` parâmetro deve ser <xref href=&quot;System.Web.Caching.Cache.NoAbsoluteExpiration&quot;> </xref>."
    - id: priority
      type: System.Web.Caching.CacheItemPriority
      description: "O custo do objeto em relação a outros itens armazenados em cache, conforme expresso pelo <xref href=&quot;System.Web.Caching.CacheItemPriority&quot;> </xref> enumeração. Esse valor é usado pelo cache quando ele remove objetos; objetos com um custo mais baixo são removidos do cache antes de objetos com um custo mais alto."
    - id: onRemoveCallback
      type: System.Web.Caching.CacheItemRemovedCallback
      description: "Um delegado que, se fornecido, será chamado quando um objeto é removido do cache. Você pode usar isso para notificar aplicativos quando os objetos são excluídos do cache."
  overload: System.Web.Caching.Cache.Insert*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>key</code> or <code>value</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "Definir o <code> slidingExpiration </code> parâmetro para menos de <xref uid=&quot;langword_csharp_TimeSpan.Zero&quot; name=&quot;TimeSpan.Zero&quot; href=&quot;&quot;> </xref> ou o equivalente de mais de um ano."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> absoluteExpiration </code> e <code> slidingExpiration </code> parâmetros são definidos para o item que você está tentando adicionar ao <xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.Caching.Cache.Item(System.String)
  id: Item(System.String)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Item(String)
  nameWithType: Cache.Item(String)
  fullName: System.Web.Caching.Cache.Item(String)
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Obtém ou define o item de cache na chave especificada."
  remarks: "Você pode usar essa propriedade para recuperar o valor de um item de cache especificado ou para adicionar um item e uma chave para ele no cache. Adicionar um item de cache usando a propriedade do Item é equivalente a chamar o <xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName>método.</xref:System.Web.Caching.Cache.Insert%2A?displayProperty=fullName>"
  example:
  - "The following example uses the `Item` property to retrieve the value of a cached object associated with the `Key1` key. It then uses the <xref:System.Web.HttpResponse.Write%2A?displayProperty=fullName> method to write the value and introductory text and the B HTML element to a Web Forms page.  \n  \n [!code-cs[System.Web.Caching Examples#5](~/add/codesnippet/csharp/p-system.web.caching.cac_2_1.aspx)]\n [!code-vb[System.Web.Caching Examples#5](~/add/codesnippet/visualbasic/p-system.web.caching.cac_2_1.aspx)]  \n  \n The following example demonstrates using this property to insert the value of a text box into the cache.  \n  \n [!code-vb[Classic Cache.this Example#2](~/add/codesnippet/visualbasic/p-system.web.caching.cac_2_2.vb)]\n [!code-cs[Classic Cache.this Example#2](~/add/codesnippet/csharp/p-system.web.caching.cac_2_2.cs)]"
  syntax:
    content: public object this[string key] { get; set; }
    parameters:
    - id: key
      type: System.String
      description: "Um <xref:System.String>objeto que representa a chave para o item de cache.</xref:System.String>"
    return:
      type: System.Object
      description: "O item de cache especificado."
  overload: System.Web.Caching.Cache.Item*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.NoAbsoluteExpiration
  id: NoAbsoluteExpiration
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: NoAbsoluteExpiration
  nameWithType: Cache.NoAbsoluteExpiration
  fullName: System.Web.Caching.Cache.NoAbsoluteExpiration
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Usado no <code> absoluteExpiration </code> parâmetro em um <xref:System.Web.Caching.Cache.Insert*>chamada de método para indicar o item nunca expirará.</xref:System.Web.Caching.Cache.Insert*> Este campo é somente leitura."
  remarks: "Quando usado, este campo define o `absoluteExpiration` parâmetro igual a <xref:System.DateTime>, que é uma constante que representa o maior possível `DateTime` valor 31/12/9999 11:59:59 PM.</xref:System.DateTime>"
  example:
  - "The following example demonstrates how to use the `NoAbsoluteExpiration` field to disable absolute expirations when inserting an item in the `Cache`.  \n  \n [!code-vb[Classic Cache.NoAbsoluteExpiration Example#1](~/add/codesnippet/visualbasic/f-system.web.caching.cac_1_1.vb)]\n [!code-cs[Classic Cache.NoAbsoluteExpiration Example#1](~/add/codesnippet/csharp/f-system.web.caching.cac_1_1.cs)]"
  syntax:
    content: public static readonly DateTime NoAbsoluteExpiration;
    return:
      type: System.DateTime
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.NoSlidingExpiration
  id: NoSlidingExpiration
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: NoSlidingExpiration
  nameWithType: Cache.NoSlidingExpiration
  fullName: System.Web.Caching.Cache.NoSlidingExpiration
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Usado como o <code> slidingExpiration </code> parâmetro em uma <> </> *> ou <> </> *> chamada de método para desabilitar a expiração deslizante. Este campo é somente leitura."
  remarks: "Quando usado, este campo define o `slidingExpiration` parâmetro para o <xref:System.TimeSpan?displayProperty=fullName>campo que tem um valor constante de zero.</xref:System.TimeSpan?displayProperty=fullName> O item em cache expira de acordo com o `absoluteExpiration` parâmetro associado a `Insert` ou `Add` chamada de método."
  example:
  - "The following example demonstrates how to use the Insert method to add an item to the <xref:System.Web.Caching.Cache> object using the `NoSlidingExpiration` field.  \n  \n [!code-vb[Classic Cache.NoSlidingExpiration Example#1](~/add/codesnippet/visualbasic/f-system.web.caching.cac_0_1.vb)]\n [!code-cs[Classic Cache.NoSlidingExpiration Example#1](~/add/codesnippet/csharp/f-system.web.caching.cac_0_1.cs)]"
  syntax:
    content: public static readonly TimeSpan NoSlidingExpiration;
    return:
      type: System.TimeSpan
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.Remove(System.String)
  id: Remove(System.String)
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: Remove(String)
  nameWithType: Cache.Remove(String)
  fullName: System.Web.Caching.Cache.Remove(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Remove o item especificado do aplicativo <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> objeto."
  remarks: ''
  example:
  - "The following example creates a `RemoveItemFromCache` method. When this method is called, it uses the <xref:System.Web.Caching.Cache.Item%2A> property to check whether the cache contains an object that is associated with a `Key1` key value. If it does, the `Remove` method is called to remove the object.  \n  \n [!code-cs[System.Web.Caching Examples#4](~/add/codesnippet/csharp/m-system.web.caching.cac_9_1.aspx)]\n [!code-vb[System.Web.Caching Examples#4](~/add/codesnippet/visualbasic/m-system.web.caching.cac_9_1.aspx)]"
  syntax:
    content: public object Remove (string key);
    parameters:
    - id: key
      type: System.String
      description: "Um <xref:System.String>identificador do item de cache remover.</xref:System.String>"
    return:
      type: System.Object
      description: "Removida o item de <xref uid=&quot;langword_csharp_Cache&quot; name=&quot;Cache&quot; href=&quot;&quot;> </xref>. Se o valor do parâmetro de chave não for encontrado, retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Caching.Cache.Remove*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator
  id: System#Collections#IEnumerable#GetEnumerator
  isEii: true
  parent: System.Web.Caching.Cache
  langs:
  - csharp
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Cache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.Caching.Cache.System.Collections.IEnumerable.GetEnumerator()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Caching
  summary: "Retorna um enumerador que pode iterar por meio de <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> coleção de objetos."
  syntax:
    content: System.Collections.IEnumerator IEnumerable.GetEnumerator ();
    parameters: []
    return:
      type: System.Collections.IEnumerator
      description: "Um enumerador que pode iterar por meio de <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> coleção de objetos."
  overload: System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Web.Caching.Cache.#ctor
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Cache()
  nameWithType: Cache.Cache()
  fullName: System.Web.Caching.Cache.Cache()
- uid: System.Web.Caching.Cache.Add(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  nameWithType: Cache.Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  fullName: System.Web.Caching.Cache.Add(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Caching.CacheDependency
  parent: System.Web.Caching
  isExternal: false
  name: CacheDependency
  nameWithType: CacheDependency
  fullName: System.Web.Caching.CacheDependency
- uid: System.DateTime
  parent: System
  isExternal: true
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Caching.CacheItemPriority
  parent: System.Web.Caching
  isExternal: false
  name: CacheItemPriority
  nameWithType: CacheItemPriority
  fullName: System.Web.Caching.CacheItemPriority
- uid: System.Web.Caching.CacheItemRemovedCallback
  parent: System.Web.Caching
  isExternal: false
  name: CacheItemRemovedCallback
  nameWithType: CacheItemRemovedCallback
  fullName: System.Web.Caching.CacheItemRemovedCallback
- uid: System.Web.Caching.Cache.Count
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Count
  nameWithType: Cache.Count
  fullName: System.Web.Caching.Cache.Count
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
  parent: System.Web.Caching.Cache
  isExternal: false
  name: EffectivePercentagePhysicalMemoryLimit
  nameWithType: Cache.EffectivePercentagePhysicalMemoryLimit
  fullName: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Web.Caching.Cache.EffectivePrivateBytesLimit
  parent: System.Web.Caching.Cache
  isExternal: false
  name: EffectivePrivateBytesLimit
  nameWithType: Cache.EffectivePrivateBytesLimit
  fullName: System.Web.Caching.Cache.EffectivePrivateBytesLimit
- uid: System.Web.Caching.Cache.Get(System.String)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Get(String)
  nameWithType: Cache.Get(String)
  fullName: System.Web.Caching.Cache.Get(String)
- uid: System.Web.Caching.Cache.GetEnumerator
  parent: System.Web.Caching.Cache
  isExternal: false
  name: GetEnumerator()
  nameWithType: Cache.GetEnumerator()
  fullName: System.Web.Caching.Cache.GetEnumerator()
- uid: System.Collections.IDictionaryEnumerator
  parent: System.Collections
  isExternal: true
  name: IDictionaryEnumerator
  nameWithType: IDictionaryEnumerator
  fullName: System.Collections.IDictionaryEnumerator
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object)
  nameWithType: Cache.Insert(String,Object)
  fullName: System.Web.Caching.Cache.Insert(String,Object)
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object,CacheDependency)
  nameWithType: Cache.Insert(String,Object,CacheDependency)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency)
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan)
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemUpdateCallback)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemUpdateCallback)
- uid: System.Web.Caching.CacheItemUpdateCallback
  parent: System.Web.Caching
  isExternal: false
  name: CacheItemUpdateCallback
  nameWithType: CacheItemUpdateCallback
  fullName: System.Web.Caching.CacheItemUpdateCallback
- uid: System.Web.Caching.Cache.Insert(System.String,System.Object,System.Web.Caching.CacheDependency,System.DateTime,System.TimeSpan,System.Web.Caching.CacheItemPriority,System.Web.Caching.CacheItemRemovedCallback)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  nameWithType: Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
  fullName: System.Web.Caching.Cache.Insert(String,Object,CacheDependency,DateTime,TimeSpan,CacheItemPriority,CacheItemRemovedCallback)
- uid: System.Web.Caching.Cache.Item(System.String)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Item(String)
  nameWithType: Cache.Item(String)
  fullName: System.Web.Caching.Cache.Item(String)
- uid: System.Web.Caching.Cache.NoAbsoluteExpiration
  parent: System.Web.Caching.Cache
  isExternal: false
  name: NoAbsoluteExpiration
  nameWithType: Cache.NoAbsoluteExpiration
  fullName: System.Web.Caching.Cache.NoAbsoluteExpiration
- uid: System.Web.Caching.Cache.NoSlidingExpiration
  parent: System.Web.Caching.Cache
  isExternal: false
  name: NoSlidingExpiration
  nameWithType: Cache.NoSlidingExpiration
  fullName: System.Web.Caching.Cache.NoSlidingExpiration
- uid: System.Web.Caching.Cache.Remove(System.String)
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Remove(String)
  nameWithType: Cache.Remove(String)
  fullName: System.Web.Caching.Cache.Remove(String)
- uid: System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator
  parent: System.Web.Caching.Cache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator()
  nameWithType: Cache.System.Collections.IEnumerable.GetEnumerator()
  fullName: System.Web.Caching.Cache.System.Collections.IEnumerable.GetEnumerator()
- uid: System.Collections.IEnumerator
  parent: System.Collections
  isExternal: true
  name: IEnumerator
  nameWithType: IEnumerator
  fullName: System.Collections.IEnumerator
- uid: System.Web.Caching.Cache.#ctor*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Cache
  nameWithType: Cache.Cache
- uid: System.Web.Caching.Cache.Add*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Add
  nameWithType: Cache.Add
- uid: System.Web.Caching.Cache.Count*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Count
  nameWithType: Cache.Count
- uid: System.Web.Caching.Cache.EffectivePercentagePhysicalMemoryLimit*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: EffectivePercentagePhysicalMemoryLimit
  nameWithType: Cache.EffectivePercentagePhysicalMemoryLimit
- uid: System.Web.Caching.Cache.EffectivePrivateBytesLimit*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: EffectivePrivateBytesLimit
  nameWithType: Cache.EffectivePrivateBytesLimit
- uid: System.Web.Caching.Cache.Get*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Get
  nameWithType: Cache.Get
- uid: System.Web.Caching.Cache.GetEnumerator*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: GetEnumerator
  nameWithType: Cache.GetEnumerator
- uid: System.Web.Caching.Cache.Insert*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Insert
  nameWithType: Cache.Insert
- uid: System.Web.Caching.Cache.Item*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Item
  nameWithType: Cache.Item
- uid: System.Web.Caching.Cache.Remove*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: Remove
  nameWithType: Cache.Remove
- uid: System.Web.Caching.Cache.System#Collections#IEnumerable#GetEnumerator*
  parent: System.Web.Caching.Cache
  isExternal: false
  name: System.Collections.IEnumerable.GetEnumerator
  nameWithType: Cache.System.Collections.IEnumerable.GetEnumerator
