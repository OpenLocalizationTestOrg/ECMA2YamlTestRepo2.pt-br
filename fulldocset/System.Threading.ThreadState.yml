### YamlMime:ManagedReference
items:
- uid: System.Threading.ThreadState
  id: ThreadState
  children:
  - System.Threading.ThreadState.Aborted
  - System.Threading.ThreadState.AbortRequested
  - System.Threading.ThreadState.Background
  - System.Threading.ThreadState.Running
  - System.Threading.ThreadState.Stopped
  - System.Threading.ThreadState.StopRequested
  - System.Threading.ThreadState.Suspended
  - System.Threading.ThreadState.SuspendRequested
  - System.Threading.ThreadState.Unstarted
  - System.Threading.ThreadState.WaitSleepJoin
  langs:
  - csharp
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Threading.ThreadState
  type: Enum
  summary: "Especifica os estados de execução de um <xref href=&quot;System.Threading.Thread&quot;> </xref>."
  remarks: "A enumeração ThreadState é de interesse apenas em alguns cenários de depuração. O código nunca deve usar o estado do segmento para sincronizar as atividades de threads.       ThreadState define um conjunto de todos os estados possíveis de execução para threads. Quando um thread é criado, é em pelo menos um dos Estados até que ele seja encerrado. Threads criados no tempo de execução de linguagem comum estiverem inicialmente no `Unstarted` de estado, enquanto threads externos que são fornecidos em tempo de execução já estão o `Running` estado. Um `Unstarted` thread é feito a transição para o `Running` estado chamando <xref:System.Threading.Thread.Start%2A>.</xref:System.Threading.Thread.Start%2A> Nem todas as combinações de `ThreadState` valores são válidos; por exemplo, um thread não pode estar em ambos os `Aborted` e `Unstarted` estados.      > [!IMPORTANT] > Há enumerações de estado dois threads, ThreadState e <xref:System.Diagnostics.ThreadState?displayProperty=fullName>.</xref:System.Diagnostics.ThreadState?displayProperty=fullName>       A tabela a seguir mostra as ações que causam uma alteração de estado.      | Ação | ThreadState |   |------------|-----------------|   | Um thread é criado no common language runtime. | Ainda não foram iniciadas |   | Chamadas de outro thread o <xref:System.Threading.Thread.Start%2A?displayProperty=fullName>método em um novo thread e a chamada retorna.</xref:System.Threading.Thread.Start%2A?displayProperty=fullName><br /><br /> O <xref:System.Threading.Thread.Start%2A>método não retorna até que o novo thread foi iniciado em execução.</xref:System.Threading.Thread.Start%2A> Não é possível saber em que ponto o novo thread é iniciada, durante a chamada para <xref:System.Threading.Thread.Start%2A>. | Em execução |   | As chamadas de thread <xref:System.Threading.Thread.Sleep%2A>| WaitSleepJoin |   | As chamadas de thread <xref:System.Threading.Monitor.Wait%2A>em outro objeto. | WaitSleepJoin |   | As chamadas de thread <xref:System.Threading.Thread.Join%2A>em outro thread. | WaitSleepJoin |   | Chamadas de outro thread <xref:System.Threading.Thread.Interrupt%2A>| Em execução |   | Chamadas de outro thread <xref:System.Threading.Thread.Suspend%2A>| SuspendRequested |   | O thread responde a uma solicitação <xref:System.Threading.Thread.Suspend%2A>. | Suspenso |   | Chamadas de outro thread <xref:System.Threading.Thread.Resume%2A>| Em execução |   | Chamadas de outro thread <xref:System.Threading.Thread.Abort%2A>| AbortRequested |   | O thread responde a uma solicitação <xref:System.Threading.Thread.Abort%2A>. | Interrompido |   | Um thread é finalizado. | Interrompido |       Além dos Estados observados acima, há também o `Background` estado, que indica se o thread está em execução no plano de fundo ou primeiro plano.</xref:System.Threading.Thread.Abort%2A> </xref:System.Threading.Thread.Abort%2A> </xref:System.Threading.Thread.Resume%2A> </xref:System.Threading.Thread.Suspend%2A> </xref:System.Threading.Thread.Suspend%2A> </xref:System.Threading.Thread.Interrupt%2A> </xref:System.Threading.Thread.Join%2A> </xref:System.Threading.Monitor.Wait%2A> </xref:System.Threading.Thread.Sleep%2A> </xref:System.Threading.Thread.Start%2A>       Um thread pode ser em mais de um estado em um determinado momento. Por exemplo, se um thread está bloqueado em uma chamada para <xref:System.Threading.Monitor.Wait%2A>e chamadas de outro thread <xref:System.Threading.Thread.Abort%2A>no thread bloqueado, o thread bloqueado será em ambos os `WaitSleepJoin` e o `AbortRequested` estados ao mesmo tempo.</xref:System.Threading.Thread.Abort%2A> </xref:System.Threading.Monitor.Wait%2A> Nesse caso, assim que o thread retorna da chamada para <xref:System.Threading.Monitor.Wait%2A>ou é interrompido, ele receberá o <xref:System.Threading.ThreadAbortException>para começar a anulação.</xref:System.Threading.ThreadAbortException> </xref:System.Threading.Monitor.Wait%2A>       O <xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName>propriedade de thread fornece o estado atual de um thread.</xref:System.Threading.Thread.ThreadState%2A?displayProperty=fullName> Aplicativos devem usar uma máscara de bits para determinar se um thread está em execução. Como o valor para `Running` é zero (0), testar se um thread está em execução usando o código c#, como `(myThread.ThreadState & (ThreadState.Stopped | ThreadState.Unstarted)) == 0` ou código do Visual Basic, como `(myThread.ThreadState And (ThreadState.Stopped Or ThreadState.Unstarted)) = 0`."
  syntax:
    content: >-
      [System.Flags]

      [System.Runtime.InteropServices.ComVisible(true)]

      public enum ThreadState
  inheritance:
  - System.Enum
  platform:
  - net462
- uid: System.Threading.ThreadState.Aborted
  id: Aborted
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Aborted
  nameWithType: ThreadState.Aborted
  fullName: System.Threading.ThreadState.Aborted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "O estado do segmento inclui AbortRequested e o thread está inoperante no momento, mas seu estado ainda não foi alterado para parado."
  syntax:
    content: Aborted
    return:
      type: System.Threading.ThreadState
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.AbortRequested
  id: AbortRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: AbortRequested
  nameWithType: ThreadState.AbortRequested
  fullName: System.Threading.ThreadState.AbortRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "O &lt;xref:System.Threading.Thread.Abort%2A?displayProperty=fullName&gt; método foi chamado no thread, mas o thread ainda não recebeu o pendente <xref href=&quot;System.Threading.ThreadAbortException&quot;> </xref> que tentará encerrá-lo."
  syntax:
    content: AbortRequested
    return:
      type: System.Threading.ThreadState
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Background
  id: Background
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Background
  nameWithType: ThreadState.Background
  fullName: System.Threading.ThreadState.Background
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "O thread está sendo executado como um thread em segundo plano, em vez de um thread em primeiro plano. Esse estado é controlado pela configuração de &lt;xref:System.Threading.Thread.IsBackground%2A?displayProperty=fullName&gt; propriedade."
  syntax:
    content: Background
    return:
      type: System.Threading.ThreadState
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Running
  id: Running
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Running
  nameWithType: ThreadState.Running
  fullName: System.Threading.ThreadState.Running
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "O thread foi iniciado, ele não será bloqueado e não há não pendentes <xref href=&quot;System.Threading.ThreadAbortException&quot;> </xref>."
  syntax:
    content: Running
    return:
      type: System.Threading.ThreadState
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Stopped
  id: Stopped
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Stopped
  nameWithType: ThreadState.Stopped
  fullName: System.Threading.ThreadState.Stopped
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "O thread foi interrompido."
  syntax:
    content: Stopped
    return:
      type: System.Threading.ThreadState
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.StopRequested
  id: StopRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: StopRequested
  nameWithType: ThreadState.StopRequested
  fullName: System.Threading.ThreadState.StopRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "O thread está sendo solicitado a parar. Isso é apenas para uso interno."
  syntax:
    content: StopRequested
    return:
      type: System.Threading.ThreadState
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Suspended
  id: Suspended
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Suspended
  nameWithType: ThreadState.Suspended
  fullName: System.Threading.ThreadState.Suspended
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "O thread foi suspenso."
  syntax:
    content: Suspended
    return:
      type: System.Threading.ThreadState
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.SuspendRequested
  id: SuspendRequested
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: SuspendRequested
  nameWithType: ThreadState.SuspendRequested
  fullName: System.Threading.ThreadState.SuspendRequested
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "O thread está sendo solicitado para suspender."
  syntax:
    content: SuspendRequested
    return:
      type: System.Threading.ThreadState
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.Unstarted
  id: Unstarted
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: Unstarted
  nameWithType: ThreadState.Unstarted
  fullName: System.Threading.ThreadState.Unstarted
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "O &lt;xref:System.Threading.Thread.Start%2A?displayProperty=fullName&gt; método não foi invocado no thread."
  syntax:
    content: Unstarted
    return:
      type: System.Threading.ThreadState
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Threading.ThreadState.WaitSleepJoin
  id: WaitSleepJoin
  parent: System.Threading.ThreadState
  langs:
  - csharp
  name: WaitSleepJoin
  nameWithType: ThreadState.WaitSleepJoin
  fullName: System.Threading.ThreadState.WaitSleepJoin
  type: Field
  assemblies:
  - mscorlib
  namespace: System.Threading
  summary: "O thread está bloqueado. Isso pode ser o resultado da chamada &lt;xref:System.Threading.Thread.Sleep%2A?displayProperty=fullName&gt; ou &lt;xref:System.Threading.Thread.Join%2A?displayProperty=fullName&gt;, solicitar um bloqueio — por exemplo, chamando &lt;xref:System.Threading.Monitor.Enter%2A?displayProperty=fullName&gt; ou &lt;xref:System.Threading.Monitor.Wait%2A?displayProperty=fullName&gt; — ou de espera em um objeto de sincronização de thread como <xref:System.Threading.ManualResetEvent>.</xref:System.Threading.ManualResetEvent>"
  syntax:
    content: WaitSleepJoin
    return:
      type: System.Threading.ThreadState
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
references:
- uid: System.Enum
  isExternal: false
  name: System.Enum
- uid: System.Threading.ThreadState.Aborted
  parent: System.Threading.ThreadState
  isExternal: false
  name: Aborted
  nameWithType: ThreadState.Aborted
  fullName: System.Threading.ThreadState.Aborted
- uid: System.Threading.ThreadState
  parent: System.Threading
  isExternal: false
  name: ThreadState
  nameWithType: ThreadState
  fullName: System.Threading.ThreadState
- uid: System.Threading.ThreadState.AbortRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: AbortRequested
  nameWithType: ThreadState.AbortRequested
  fullName: System.Threading.ThreadState.AbortRequested
- uid: System.Threading.ThreadState.Background
  parent: System.Threading.ThreadState
  isExternal: false
  name: Background
  nameWithType: ThreadState.Background
  fullName: System.Threading.ThreadState.Background
- uid: System.Threading.ThreadState.Running
  parent: System.Threading.ThreadState
  isExternal: false
  name: Running
  nameWithType: ThreadState.Running
  fullName: System.Threading.ThreadState.Running
- uid: System.Threading.ThreadState.Stopped
  parent: System.Threading.ThreadState
  isExternal: false
  name: Stopped
  nameWithType: ThreadState.Stopped
  fullName: System.Threading.ThreadState.Stopped
- uid: System.Threading.ThreadState.StopRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: StopRequested
  nameWithType: ThreadState.StopRequested
  fullName: System.Threading.ThreadState.StopRequested
- uid: System.Threading.ThreadState.Suspended
  parent: System.Threading.ThreadState
  isExternal: false
  name: Suspended
  nameWithType: ThreadState.Suspended
  fullName: System.Threading.ThreadState.Suspended
- uid: System.Threading.ThreadState.SuspendRequested
  parent: System.Threading.ThreadState
  isExternal: false
  name: SuspendRequested
  nameWithType: ThreadState.SuspendRequested
  fullName: System.Threading.ThreadState.SuspendRequested
- uid: System.Threading.ThreadState.Unstarted
  parent: System.Threading.ThreadState
  isExternal: false
  name: Unstarted
  nameWithType: ThreadState.Unstarted
  fullName: System.Threading.ThreadState.Unstarted
- uid: System.Threading.ThreadState.WaitSleepJoin
  parent: System.Threading.ThreadState
  isExternal: false
  name: WaitSleepJoin
  nameWithType: ThreadState.WaitSleepJoin
  fullName: System.Threading.ThreadState.WaitSleepJoin
