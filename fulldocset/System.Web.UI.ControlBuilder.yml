### YamlMime:ManagedReference
items:
- uid: System.Web.UI.ControlBuilder
  id: ControlBuilder
  children:
  - System.Web.UI.ControlBuilder.#ctor
  - System.Web.UI.ControlBuilder.AllowWhitespaceLiterals
  - System.Web.UI.ControlBuilder.AppendLiteralString(System.String)
  - System.Web.UI.ControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)
  - System.Web.UI.ControlBuilder.BindingContainerBuilder
  - System.Web.UI.ControlBuilder.BindingContainerType
  - System.Web.UI.ControlBuilder.BuildObject
  - System.Web.UI.ControlBuilder.CloseControl
  - System.Web.UI.ControlBuilder.ComplexPropertyEntries
  - System.Web.UI.ControlBuilder.ControlType
  - System.Web.UI.ControlBuilder.CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)
  - System.Web.UI.ControlBuilder.CurrentFilterResolutionService
  - System.Web.UI.ControlBuilder.DeclareType
  - System.Web.UI.ControlBuilder.DesignerFilter
  - System.Web.UI.ControlBuilder.FChildrenAsProperties
  - System.Web.UI.ControlBuilder.FIsNonParserAccessor
  - System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)
  - System.Web.UI.ControlBuilder.GetObjectPersistData
  - System.Web.UI.ControlBuilder.GetResourceKey
  - System.Web.UI.ControlBuilder.HasAspCode
  - System.Web.UI.ControlBuilder.HasBody
  - System.Web.UI.ControlBuilder.HtmlDecodeLiterals
  - System.Web.UI.ControlBuilder.ID
  - System.Web.UI.ControlBuilder.InDesigner
  - System.Web.UI.ControlBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)
  - System.Web.UI.ControlBuilder.InPageTheme
  - System.Web.UI.ControlBuilder.ItemType
  - System.Web.UI.ControlBuilder.Localize
  - System.Web.UI.ControlBuilder.NamingContainerType
  - System.Web.UI.ControlBuilder.NeedsTagInnerText
  - System.Web.UI.ControlBuilder.OnAppendToParentBuilder(System.Web.UI.ControlBuilder)
  - System.Web.UI.ControlBuilder.PageVirtualPath
  - System.Web.UI.ControlBuilder.Parser
  - System.Web.UI.ControlBuilder.ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)
  - System.Web.UI.ControlBuilder.ServiceProvider
  - System.Web.UI.ControlBuilder.SetResourceKey(System.String)
  - System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)
  - System.Web.UI.ControlBuilder.SetTagInnerText(System.String)
  - System.Web.UI.ControlBuilder.SubBuilders
  - System.Web.UI.ControlBuilder.TagName
  - System.Web.UI.ControlBuilder.TemplatePropertyEntries
  - System.Web.UI.ControlBuilder.ThemeResolutionService
  langs:
  - csharp
  name: ControlBuilder
  nameWithType: ControlBuilder
  fullName: System.Web.UI.ControlBuilder
  type: Class
  summary: "Suporta o analisador de página na criação de um controle e o filho controles que ele contém."
  remarks: "Por padrão, cada controle em uma página está associado uma classe de ControlBuilder padrão. Durante a análise, a estrutura da página ASP.NET cria uma árvore de objetos ControlBuilder correspondente para a árvore de controles para a página. A árvore de ControlBuilder, em seguida, é usada para gerar o código de página para criar a árvore de controle. Além dos controles filho, o ControlBuilder define o comportamento de como o conteúdo dentro de marcas de controle é analisado. Você pode substituir esse comportamento padrão definindo sua própria classe de construtor do controle personalizado. Isso é feito aplicando um <xref:System.Web.UI.ControlBuilderAttribute>atributo à sua classe de construtor do controle da seguinte maneira: `[ControlBuilderAttribute(typeof(ControlBuilderType))]` </xref:System.Web.UI.ControlBuilderAttribute>"
  example:
  - "The following code example creates a <xref:System.Web.UI.WebControls.Table> control whose attributes and content are defined at the time the table is built. The following is the command line to use to build the executable.  \n  \n [Visual Basic]  \n  \n```  \nvbc /r:System.dll /r:System.Web.dll /r:System.Drawing.dll /t:library /out:myWebAppPath/Bin/vb_mycontrolbuilder.dll myControlBuilder.vb  \n```  \n  \n [C#]  \n  \n```  \ncsc /t:library /out:myWebAppPath/Bin/cs_mycontrolbuilder.dll myControlBuilder.cs  \n```  \n  \n [!code-cs[SystemWebUI_ControlBuilder_2#1](~/add/codesnippet/csharp/t-system.web.ui.controlb_1_1.cs)]\n [!code-vb[SystemWebUI_ControlBuilder_2#1](~/add/codesnippet/visualbasic/t-system.web.ui.controlb_1_1.vb)]  \n  \n The following code example uses the previous custom control. In particular, it builds a table whose attributes and content are defined at run time. Notice that the values shown in the  directive reflect the previous command line.  \n  \n [!code-cs[SystemWebUI_ControlBuilder_2#2](~/add/codesnippet/csharp/t-system.web.ui.controlb_1_2.aspx)]\n [!code-vb[SystemWebUI_ControlBuilder_2#2](~/add/codesnippet/visualbasic/t-system.web.ui.controlb_1_2.aspx)]"
  syntax:
    content: public class ControlBuilder
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.#ctor
  id: '#ctor'
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ControlBuilder()
  nameWithType: ControlBuilder.ControlBuilder()
  fullName: System.Web.UI.ControlBuilder.ControlBuilder()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> classe."
  remarks: "Use este construtor para criar uma nova instância de <xref:System.Web.UI.ControlBuilder>classe.</xref:System.Web.UI.ControlBuilder>      > [!NOTE] > Este construtor é geralmente usado pelo ASP.NET ao analisar a página e criar a hierarquia de controle. Ele não se destina para uso em seu código."
  syntax:
    content: public ControlBuilder ();
    parameters: []
  overload: System.Web.UI.ControlBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.AllowWhitespaceLiterals
  id: AllowWhitespaceLiterals
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: AllowWhitespaceLiterals()
  nameWithType: ControlBuilder.AllowWhitespaceLiterals()
  fullName: System.Web.UI.ControlBuilder.AllowWhitespaceLiterals()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o espaço em branco literais são permitidos no conteúdo entre um controle marcas de abertura e fechamento. Este método é chamado pela estrutura de página ASP.NET."
  remarks: "O método AllowWhitespaceLiterals é usado para determinar se espaço em branco literais são permitidos em conteúdo entre as marcas de abertura e fechamento de um controle. Quando este método retorna `false`, os literais de espaço em branco são cortados do conteúdo antes do conteúdo é processado pelo analisador de página. Quando este método retorna `true`, os literais de espaço em branco não é removidos.       Esse método é chamado pela estrutura de página ASP.NET durante a análise e não se destina a ser chamado diretamente de código."
  example:
  - >-
    [!code-cs[ControlBuilderSamples_1#4](~/add/codesnippet/csharp/m-system.web.ui.controlb_4_1.cs)]
     [!code-vb[ControlBuilderSamples_1#4](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_4_1.vb)]
  syntax:
    content: public virtual bool AllowWhitespaceLiterals ();
    parameters: []
    return:
      type: System.Boolean
      description: "Sempre retorna <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlBuilder.AllowWhitespaceLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.AppendLiteralString(System.String)
  id: AppendLiteralString(System.String)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: AppendLiteralString(String)
  nameWithType: ControlBuilder.AppendLiteralString(String)
  fullName: System.Web.UI.ControlBuilder.AppendLiteralString(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adiciona o conteúdo literal especificado para um controle. Este método é chamado pela estrutura de página ASP.NET."
  remarks: "Substitua o método AppendLiteralString para controlar o conteúdo como literal entre abrir do controle e marcas de fechamento é processada. Conteúdo literal pode ser qualquer texto que é passado pelo navegador para o controle de servidor. Por exemplo, quaisquer elementos HTML e texto entre suas marcas de abertura e fechamento, são conteúdo literal."
  example:
  - >-
    [!code-cs[ControlBuilderSamples_1#3](~/add/codesnippet/csharp/m-system.web.ui.controlb_3_1.cs)]
     [!code-vb[ControlBuilderSamples_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_3_1.vb)]
  syntax:
    content: public virtual void AppendLiteralString (string s);
    parameters:
    - id: s
      type: System.String
      description: "O conteúdo para adicionar ao controle."
  overload: System.Web.UI.ControlBuilder.AppendLiteralString*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "A cadeia de caracteres literal não está bem formada."
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)
  id: AppendSubBuilder(System.Web.UI.ControlBuilder)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: AppendSubBuilder(ControlBuilder)
  nameWithType: ControlBuilder.AppendSubBuilder(ControlBuilder)
  fullName: System.Web.UI.ControlBuilder.AppendSubBuilder(ControlBuilder)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Adiciona construtores para o <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto para os controles filho que pertencem ao controle de contêiner."
  remarks: ''
  example:
  - "The following example overrides the AppendSubBuilder method to throw an <xref:System.Exception> if the control this control builder is applied to tries to include controls in its instance of <xref:System.Web.UI.ControlCollection> class.  \n  \n [!code-vb[ControlBuilderSamples_2#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_5_1.vb)]\n [!code-cs[ControlBuilderSamples_2#1](~/add/codesnippet/csharp/m-system.web.ui.controlb_5_1.cs)]"
  syntax:
    content: public virtual void AppendSubBuilder (System.Web.UI.ControlBuilder subBuilder);
    parameters:
    - id: subBuilder
      type: System.Web.UI.ControlBuilder
      description: "O <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto atribuído ao controle filho."
  overload: System.Web.UI.ControlBuilder.AppendSubBuilder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.BindingContainerBuilder
  id: BindingContainerBuilder
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: BindingContainerBuilder
  nameWithType: ControlBuilder.BindingContainerBuilder
  fullName: System.Web.UI.ControlBuilder.BindingContainerBuilder
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o construtor de controle que corresponde ao contêiner de associação para o controle que cria este construtor."
  syntax:
    content: public virtual System.Web.UI.ControlBuilder BindingContainerBuilder { get; }
    return:
      type: System.Web.UI.ControlBuilder
      description: "O construtor de controle que corresponde ao contêiner de associação para o controle."
  overload: System.Web.UI.ControlBuilder.BindingContainerBuilder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.BindingContainerType
  id: BindingContainerType
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: BindingContainerType
  nameWithType: ControlBuilder.BindingContainerType
  fullName: System.Web.UI.ControlBuilder.BindingContainerType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o tipo do contêiner de associação para o controle que cria este construtor."
  syntax:
    content: public virtual Type BindingContainerType { get; }
    return:
      type: System.Type
      description: "Um <xref:System.Type>que representa o tipo do contêiner de associação para o controle que cria este construtor.</xref:System.Type>"
  overload: System.Web.UI.ControlBuilder.BindingContainerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.BuildObject
  id: BuildObject
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: BuildObject()
  nameWithType: ControlBuilder.BuildObject()
  fullName: System.Web.UI.ControlBuilder.BuildObject()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Cria uma instância de tempo de design do controle que é referenciado por essa <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto."
  syntax:
    content: public virtual object BuildObject ();
    parameters: []
    return:
      type: System.Object
      description: "Resultante criado o controle."
  overload: System.Web.UI.ControlBuilder.BuildObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.CloseControl
  id: CloseControl
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: CloseControl()
  nameWithType: ControlBuilder.CloseControl()
  fullName: System.Web.UI.ControlBuilder.CloseControl()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Chamado pelo analisador para informar o construtor que a análise do controle marcas de abertura e fechamento foi concluída."
  remarks: "O método CloseControl é usado pelo analisador para indicar para o construtor que concluiu a análise do controle."
  syntax:
    content: public virtual void CloseControl ();
    parameters: []
  overload: System.Web.UI.ControlBuilder.CloseControl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ComplexPropertyEntries
  id: ComplexPropertyEntries
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ComplexPropertyEntries
  nameWithType: ControlBuilder.ComplexPropertyEntries
  fullName: System.Web.UI.ControlBuilder.ComplexPropertyEntries
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma coleção de entradas de propriedade complexa."
  remarks: "Se não houver nenhuma entrada, uma coleção vazia estática será retornada."
  syntax:
    content: public System.Collections.ICollection ComplexPropertyEntries { get; }
    return:
      type: System.Collections.ICollection
      description: "Uma coleção de entradas de propriedade complexa."
  overload: System.Web.UI.ControlBuilder.ComplexPropertyEntries*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ControlType
  id: ControlType
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ControlType
  nameWithType: ControlBuilder.ControlType
  fullName: System.Web.UI.ControlBuilder.ControlType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref:System.Type>para o controle a ser criado.</xref:System.Type>"
  remarks: ''
  example:
  - "This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the ControlType property to determine what type of control this builder is applied to. If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control. If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.  \n  \n [!code-vb[ControlBuilderSamples_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlb_1_1.vb)]\n [!code-cs[ControlBuilderSamples_4#1](~/add/codesnippet/csharp/p-system.web.ui.controlb_1_1.cs)]"
  syntax:
    content: public Type ControlType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>para o controle a ser criado.</xref:System.Type>"
  overload: System.Web.UI.ControlBuilder.ControlType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)
  id: CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: CreateBuilderFromType(TemplateParser,ControlBuilder,Type,String,String,IDictionary,Int32,String)
  nameWithType: ControlBuilder.CreateBuilderFromType(TemplateParser,ControlBuilder,Type,String,String,IDictionary,Int32,String)
  fullName: System.Web.UI.ControlBuilder.CreateBuilderFromType(TemplateParser,ControlBuilder,Type,String,String,IDictionary,Int32,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Cria um <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto do tipo de objeto e o nome da marca especificado, bem como outros parâmetros que definem o construtor."
  syntax:
    content: public static System.Web.UI.ControlBuilder CreateBuilderFromType (System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attribs, int line, string sourceFileName);
    parameters:
    - id: parser
      type: System.Web.UI.TemplateParser
      description: "O <xref href=&quot;System.Web.UI.TemplateParser&quot;> </xref> objeto responsável pela análise do controle."
    - id: parentBuilder
      type: System.Web.UI.ControlBuilder
      description: "O <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto responsável pela criação do controle pai."
    - id: type
      type: System.Type
      description: "O <xref:System.Type>do objeto que o construtor de relatórios criará.</xref:System.Type>"
    - id: tagName
      type: System.String
      description: "O nome da marca a ser criado. Isso permite que o construtor dar suporte a vários tipos de marca."
    - id: id
      type: System.String
      description: "O <xref:System.Web.UI.ControlBuilder.ID*>atributo atribuído ao controle.</xref:System.Web.UI.ControlBuilder.ID*>"
    - id: attribs
      type: System.Collections.IDictionary
      description: "O <xref:System.Collections.IDictionary>objeto que contém todos os atributos de marca especificada.</xref:System.Collections.IDictionary>"
    - id: line
      type: System.Int32
      description: "O número de linha de arquivo de origem para o controle especificado."
    - id: sourceFileName
      type: System.String
      description: "O nome do arquivo de origem do qual o controle será criado."
    return:
      type: System.Web.UI.ControlBuilder
      description: "O construtor que é responsável por criar o controle."
  overload: System.Web.UI.ControlBuilder.CreateBuilderFromType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.CurrentFilterResolutionService
  id: CurrentFilterResolutionService
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: CurrentFilterResolutionService
  nameWithType: ControlBuilder.CurrentFilterResolutionService
  fullName: System.Web.UI.ControlBuilder.CurrentFilterResolutionService
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um <xref href=&quot;System.Web.UI.IFilterResolutionService&quot;> </xref> objeto que é usado para gerenciar o filtro de dispositivo serviços relacionados ao analisar e persistência de controles no designer."
  remarks: "O <xref:System.Web.UI.IFilterResolutionService>é uma interface que é específica para como um controle usa filtros de dispositivo em um designer.</xref:System.Web.UI.IFilterResolutionService> Quando controles são analisados ou persistentes no designer de fora do contexto de uma solicitação do navegador, o <xref:System.Web.UI.IFilterResolutionService>fornece uma maneira de determinar se o controle atual é afetado por um filtro nomeado e se um filtro é parte de uma hierarquia de filtro de dispositivo específico.</xref:System.Web.UI.IFilterResolutionService>"
  syntax:
    content: public System.Web.UI.IFilterResolutionService CurrentFilterResolutionService { get; }
    return:
      type: System.Web.UI.IFilterResolutionService
      description: "Um <xref href=&quot;System.Web.UI.IFilterResolutionService&quot;> </xref> objeto que é usado para gerenciar o filtro de dispositivo serviços relacionados ao analisar e persistência de controles no designer."
  overload: System.Web.UI.ControlBuilder.CurrentFilterResolutionService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.DeclareType
  id: DeclareType
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: DeclareType
  nameWithType: ControlBuilder.DeclareType
  fullName: System.Web.UI.ControlBuilder.DeclareType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o tipo que será usado por geração de código para declarar o controle."
  syntax:
    content: public virtual Type DeclareType { get; }
    return:
      type: System.Type
      description: "O <xref:System.Type>do controle usado por geração de código para declarar o controle.</xref:System.Type>"
  overload: System.Web.UI.ControlBuilder.DeclareType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.DesignerFilter
  id: DesignerFilter
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: DesignerFilter
  nameWithType: ControlBuilder.DesignerFilter
  fullName: System.Web.UI.ControlBuilder.DesignerFilter
  type: Field
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Representa o `&quot;__designer&quot;` cadeia de caracteres literal."
  syntax:
    content: public static readonly string DesignerFilter;
    return:
      type: System.String
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.FChildrenAsProperties
  id: FChildrenAsProperties
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: FChildrenAsProperties
  nameWithType: ControlBuilder.FChildrenAsProperties
  fullName: System.Web.UI.ControlBuilder.FChildrenAsProperties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que determina se o controle tem um <xref href=&quot;System.Web.UI.ParseChildrenAttribute&quot;> </xref> com <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties*>definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties*>"
  syntax:
    content: protected bool FChildrenAsProperties { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle tiver um <xref href=&quot;System.Web.UI.ParseChildrenAttribute&quot;> </xref> com <xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties*>definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.ParseChildrenAttribute.ChildrenAsProperties*>"
  overload: System.Web.UI.ControlBuilder.FChildrenAsProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.FIsNonParserAccessor
  id: FIsNonParserAccessor
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: FIsNonParserAccessor
  nameWithType: ControlBuilder.FIsNonParserAccessor
  fullName: System.Web.UI.ControlBuilder.FIsNonParserAccessor
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que determina se o controle implementa o <xref href=&quot;System.Web.UI.IParserAccessor&quot;> </xref> interface."
  syntax:
    content: protected bool FIsNonParserAccessor { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se o controle implementa o <xref href=&quot;System.Web.UI.IParserAccessor&quot;> </xref> interface, caso contrário <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlBuilder.FIsNonParserAccessor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)
  id: GetChildControlType(System.String,System.Collections.IDictionary)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: GetChildControlType(String,IDictionary)
  nameWithType: ControlBuilder.GetChildControlType(String,IDictionary)
  fullName: System.Web.UI.ControlBuilder.GetChildControlType(String,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref:System.Type>do tipo de controle correspondente a uma tag filho.</xref:System.Type> Este método é chamado pela estrutura de página ASP.NET."
  remarks: "Esse método é chamado pela estrutura de página ASP.NET durante a análise e não se destina a ser chamado diretamente de código."
  example:
  - >-
    [!code-cs[ControlBuilderSamples_1#2](~/add/codesnippet/csharp/1e17c7c0-caef-4f64-90f8-_1.cs)]
     [!code-vb[ControlBuilderSamples_1#2](~/add/codesnippet/visualbasic/1e17c7c0-caef-4f64-90f8-_1.vb)]
  syntax:
    content: public virtual Type GetChildControlType (string tagName, System.Collections.IDictionary attribs);
    parameters:
    - id: tagName
      type: System.String
      description: "O nome da marca do filho."
    - id: attribs
      type: System.Collections.IDictionary
      description: "Uma matriz de atributos contidos no controle filho."
    return:
      type: System.Type
      description: "O <xref:System.Type>do filho do controle especificado.</xref:System.Type>"
  overload: System.Web.UI.ControlBuilder.GetChildControlType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.GetObjectPersistData
  id: GetObjectPersistData
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: GetObjectPersistData()
  nameWithType: ControlBuilder.GetObjectPersistData()
  fullName: System.Web.UI.ControlBuilder.GetObjectPersistData()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Cria o <xref href=&quot;System.Web.UI.ObjectPersistData&quot;> </xref> objeto para este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto."
  syntax:
    content: public System.Web.UI.ObjectPersistData GetObjectPersistData ();
    parameters: []
    return:
      type: System.Web.UI.ObjectPersistData
      description: "The <xref href=&quot;System.Web.UI.ObjectPersistData&quot;></xref> for this <xref href=&quot;System.Web.UI.ControlBuilder&quot;></xref>."
  overload: System.Web.UI.ControlBuilder.GetObjectPersistData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.GetResourceKey
  id: GetResourceKey
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: GetResourceKey()
  nameWithType: ControlBuilder.GetResourceKey()
  fullName: System.Web.UI.ControlBuilder.GetResourceKey()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Recupera a chave de recurso para este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto."
  syntax:
    content: public string GetResourceKey ();
    parameters: []
    return:
      type: System.String
      description: "A chave de recurso para este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref>."
  overload: System.Web.UI.ControlBuilder.GetResourceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.HasAspCode
  id: HasAspCode
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: HasAspCode
  nameWithType: ControlBuilder.HasAspCode
  fullName: System.Web.UI.ControlBuilder.HasAspCode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor que indica se o controle contém os blocos de código."
  remarks: ''
  example:
  - "This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to. If it is a `CustomTextBox`, the builder checks whether the value of the HasAspCode property is included in the control. If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.  \n  \n [!code-vb[ControlBuilderSamples_4#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlb_3_1.vb)]\n [!code-cs[ControlBuilderSamples_4#1](~/add/codesnippet/csharp/p-system.web.ui.controlb_3_1.cs)]"
  syntax:
    content: public virtual bool HasAspCode { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle contiver pelo menos um bloco de código; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlBuilder.HasAspCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.HasBody
  id: HasBody
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: HasBody()
  nameWithType: ControlBuilder.HasBody()
  fullName: System.Web.UI.ControlBuilder.HasBody()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se um controle tiver uma abertura e a marca de fechamento. Este método é chamado pela estrutura de página ASP.NET."
  remarks: "Esse método é chamado pela estrutura de página ASP.NET durante a análise e não se destina a ser chamado diretamente de código."
  example:
  - "This example overrides the <xref:System.Web.UI.ControlBuilder.OnAppendToParentBuilder%2A> method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to. If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control. If so, an exception is thrown, if not the HasBody method is called.  \n  \n [!code-vb[ControlBuilderSamples_4#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_1_1.vb)]\n [!code-cs[ControlBuilderSamples_4#1](~/add/codesnippet/csharp/m-system.web.ui.controlb_1_1.cs)]"
  syntax:
    content: public virtual bool HasBody ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle tiver uma marca de abertura e fechamento; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlBuilder.HasBody*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.HtmlDecodeLiterals
  id: HtmlDecodeLiterals
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: HtmlDecodeLiterals()
  nameWithType: ControlBuilder.HtmlDecodeLiterals()
  fullName: System.Web.UI.ControlBuilder.HtmlDecodeLiterals()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se a cadeia de caracteres literal de um controle HTML deve ser decodificado de HTML. Este método é chamado pela estrutura de página ASP.NET."
  remarks: "Uma cadeia de caracteres literal refere-se ao texto entre a abertura e a marca de fechamento de um controle HTML. Codificação HTML é quando o texto é convertido em uma representação de cadeia de caracteres que o navegador irá exibir em vez de interpretar como HTML. Marcar de caracteres, como o ponto de interrogação (?), e comercial (&), barra (/) e espaços podem ser truncados ou corrompidos por alguns navegadores, portanto esses caracteres devem ser codificados quando eles aparecem na `a` marcas ou em cadeias de caracteres de consulta.       O método HtmlDecodeLiterals é chamado pela estrutura de página ASP.NET durante a análise e não se destina a ser chamado diretamente no código."
  example:
  - "The following example overrides the HtmlDecodeLiterals method to allow HTML decoding of literal strings in any control this builder is applied to.  \n  \n [!code-vb[ControlBuilderSamples_2#2](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_6_1.vb)]\n [!code-cs[ControlBuilderSamples_2#2](~/add/codesnippet/csharp/m-system.web.ui.controlb_6_1.cs)]"
  syntax:
    content: public virtual bool HtmlDecodeLiterals ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o HTML controle literal cadeia de caracteres é a ser decodificado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlBuilder.HtmlDecodeLiterals*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ID
  id: ID
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ID
  nameWithType: ControlBuilder.ID
  fullName: System.Web.UI.ControlBuilder.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define a propriedade do identificador para o controle a ser criado."
  syntax:
    content: public string ID { get; set; }
    return:
      type: System.String
      description: "A propriedade do identificador para o controle."
  overload: System.Web.UI.ControlBuilder.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.InDesigner
  id: InDesigner
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: InDesigner
  nameWithType: ControlBuilder.InDesigner
  fullName: System.Web.UI.ControlBuilder.InDesigner
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Retorna se o <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> está em execução no designer."
  remarks: ''
  example:
  - "The following example uses the InDesigner property when the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method is called. When a control has this builder attached to it, the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method determines whether the control is being accessed at design-time through a designer. The <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> returns the value of the InDesigner property, and then the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> method is called. If the InDesigner property is set to `false`, an <xref:System.Exception> is thrown. Otherwise, the inner text of the control is returned on the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> call.  \n  \n [!code-vb[ControlBuilderSamples_3#1](~/add/codesnippet/visualbasic/p-system.web.ui.controlb_0_1.vb)]\n [!code-cs[ControlBuilderSamples_3#1](~/add/codesnippet/csharp/p-system.web.ui.controlb_0_1.cs)]"
  syntax:
    content: protected bool InDesigner { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> está em execução no designer; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlBuilder.InDesigner*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)
  id: Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: Init(TemplateParser,ControlBuilder,Type,String,String,IDictionary)
  nameWithType: ControlBuilder.Init(TemplateParser,ControlBuilder,Type,String,String,IDictionary)
  fullName: System.Web.UI.ControlBuilder.Init(TemplateParser,ControlBuilder,Type,String,String,IDictionary)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa o <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> para uso após ele ser instanciado. Este método é chamado pela estrutura de página ASP.NET."
  remarks: "Esse método é chamado pela estrutura de página ASP.NET durante a análise e não se destina a ser chamado diretamente de código."
  syntax:
    content: public virtual void Init (System.Web.UI.TemplateParser parser, System.Web.UI.ControlBuilder parentBuilder, Type type, string tagName, string id, System.Collections.IDictionary attribs);
    parameters:
    - id: parser
      type: System.Web.UI.TemplateParser
      description: "O <xref href=&quot;System.Web.UI.TemplateParser&quot;> </xref> objeto responsável pela análise do controle."
    - id: parentBuilder
      type: System.Web.UI.ControlBuilder
      description: "O <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto responsável pela criação do controle pai."
    - id: type
      type: System.Type
      description: "O <xref:System.Type>atribuído ao controle que o construtor de relatórios criará.</xref:System.Type>"
    - id: tagName
      type: System.String
      description: "O nome da marca a ser criado. Isso permite que o construtor dar suporte a vários tipos de marca."
    - id: id
      type: System.String
      description: "O <xref:System.Web.UI.ControlBuilder.ID*>atributo atribuído ao controle.</xref:System.Web.UI.ControlBuilder.ID*>"
    - id: attribs
      type: System.Collections.IDictionary
      description: "O <xref:System.Collections.IDictionary>objeto que contém todos os atributos de marca especificada.</xref:System.Collections.IDictionary>"
  overload: System.Web.UI.ControlBuilder.Init*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.InPageTheme
  id: InPageTheme
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: InPageTheme
  nameWithType: ControlBuilder.InPageTheme
  fullName: System.Web.UI.ControlBuilder.InPageTheme
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor booliano que indica se este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto é usado para gerar os temas de página."
  syntax:
    content: protected bool InPageTheme { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Use essa <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> para gerar temas de página; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlBuilder.InPageTheme*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ItemType
  id: ItemType
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ItemType
  nameWithType: ControlBuilder.ItemType
  fullName: System.Web.UI.ControlBuilder.ItemType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o tipo definido no contêiner de associação."
  syntax:
    content: public virtual string ItemType { get; }
    return:
      type: System.String
      description: "O tipo definido no contêiner de associação."
  overload: System.Web.UI.ControlBuilder.ItemType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.Localize
  id: Localize
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: Localize
  nameWithType: ControlBuilder.Localize
  fullName: System.Web.UI.ControlBuilder.Localize
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um valor booliano que indica se o controle que é criado por este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto está localizado."
  syntax:
    content: public bool Localize { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar que o controle é criado por este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto for localizado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlBuilder.Localize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.NamingContainerType
  id: NamingContainerType
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: NamingContainerType
  nameWithType: ControlBuilder.NamingContainerType
  fullName: System.Web.UI.ControlBuilder.NamingContainerType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o tipo de contêiner de nomeação para o controle que cria este construtor."
  syntax:
    content: public Type NamingContainerType { get; }
    return:
      type: System.Type
      description: "Um <xref:System.Type>que representa o tipo de contêiner de nomeação para o controle que cria este construtor.</xref:System.Type>"
  overload: System.Web.UI.ControlBuilder.NamingContainerType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.NeedsTagInnerText
  id: NeedsTagInnerText
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: NeedsTagInnerText()
  nameWithType: ControlBuilder.NeedsTagInnerText()
  fullName: System.Web.UI.ControlBuilder.NeedsTagInnerText()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Determina se o construtor de controle precisa obter seu texto interno. Nesse caso, o <xref:System.Web.UI.ControlBuilder.SetTagInnerText*>método deve ser chamado.</xref:System.Web.UI.ControlBuilder.SetTagInnerText*> Este método é chamado pela estrutura de página ASP.NET."
  remarks: "O texto interno é o texto entre as marcas de abertura e fechamento do controle.       Esse método é chamado pela estrutura de página ASP.NET durante a análise e não se destina a ser chamado diretamente de código."
  example:
  - "The following example uses the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property when the NeedsTagInnerText method is called. When a control has this builder attached to it, the NeedsTagInnerText determines whether the control is being accessed at design-time through a designer. The NeedsTagInnerText returns the value of the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property, and then the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> method is called. If the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property is set to `false`, an <xref:System.Exception> is thrown. Otherwise, the inner text of the control is returned on the <xref:System.Web.UI.ControlBuilder.SetTagInnerText%2A> call.  \n  \n [!code-vb[ControlBuilderSamples_3#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_0_1.vb)]\n [!code-cs[ControlBuilderSamples_3#1](~/add/codesnippet/csharp/m-system.web.ui.controlb_0_1.cs)]"
  syntax:
    content: public virtual bool NeedsTagInnerText ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o construtor de controle precisa obter seu texto interno. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.ControlBuilder.NeedsTagInnerText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.OnAppendToParentBuilder(System.Web.UI.ControlBuilder)
  id: OnAppendToParentBuilder(System.Web.UI.ControlBuilder)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: OnAppendToParentBuilder(ControlBuilder)
  nameWithType: ControlBuilder.OnAppendToParentBuilder(ControlBuilder)
  fullName: System.Web.UI.ControlBuilder.OnAppendToParentBuilder(ControlBuilder)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Notifica o <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> que está sendo adicionado a um construtor de controle pai."
  remarks: ''
  example:
  - "This example overrides the OnAppendToParentBuilder method to check the <xref:System.Web.UI.ControlBuilder.ControlType%2A> property to determine what type of control this builder is applied to. If it is a `CustomTextBox`, the builder checks whether the value of the <xref:System.Web.UI.ControlBuilder.HasAspCode%2A> property is included in the control. If so, an exception is thrown, if not the <xref:System.Web.UI.ControlBuilder.HasBody%2A> method is called.  \n  \n [!code-vb[ControlBuilderSamples_4#1](~/add/codesnippet/visualbasic/6102f4e2-d19f-4c63-97f4-_1.vb)]\n [!code-cs[ControlBuilderSamples_4#1](~/add/codesnippet/csharp/6102f4e2-d19f-4c63-97f4-_1.cs)]"
  syntax:
    content: public virtual void OnAppendToParentBuilder (System.Web.UI.ControlBuilder parentBuilder);
    parameters:
    - id: parentBuilder
      type: System.Web.UI.ControlBuilder
      description: "O <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> do objeto ao qual o construtor atual é adicionado."
  overload: System.Web.UI.ControlBuilder.OnAppendToParentBuilder*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.PageVirtualPath
  id: PageVirtualPath
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: PageVirtualPath
  nameWithType: ControlBuilder.PageVirtualPath
  fullName: System.Web.UI.ControlBuilder.PageVirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o caminho virtual de uma página a ser criado por este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> instância."
  syntax:
    content: public string PageVirtualPath { get; }
    return:
      type: System.String
      description: "O caminho virtual da página a ser criado."
  overload: System.Web.UI.ControlBuilder.PageVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.Parser
  id: Parser
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: Parser
  nameWithType: ControlBuilder.Parser
  fullName: System.Web.UI.ControlBuilder.Parser
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o <xref href=&quot;System.Web.UI.TemplateParser&quot;> </xref> responsável pela análise do controle."
  remarks: "Essa propriedade recupera o <xref:System.Web.UI.TemplateParser>responsável pela análise do controle.</xref:System.Web.UI.TemplateParser>"
  syntax:
    content: protected System.Web.UI.TemplateParser Parser { get; }
    return:
      type: System.Web.UI.TemplateParser
      description: "O <xref href=&quot;System.Web.UI.TemplateParser&quot;> </xref> usado para analisar o controle."
  overload: System.Web.UI.ControlBuilder.Parser*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)
  id: ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ProcessGeneratedCode(CodeCompileUnit,CodeTypeDeclaration,CodeTypeDeclaration,CodeMemberMethod,CodeMemberMethod)
  nameWithType: ControlBuilder.ProcessGeneratedCode(CodeCompileUnit,CodeTypeDeclaration,CodeTypeDeclaration,CodeMemberMethod,CodeMemberMethod)
  fullName: System.Web.UI.ControlBuilder.ProcessGeneratedCode(CodeCompileUnit,CodeTypeDeclaration,CodeTypeDeclaration,CodeMemberMethod,CodeMemberMethod)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Permite que desenvolvedores de controle personalizado acessar o modelo de objeto de documento do código de gerado (CodeDom) e inserir e modificar o código durante o processo de análise e criação de controles."
  remarks: "No modelo de página de arquivo único, o `baseType` e `derivedType` parâmetros são do mesmo <xref:System.CodeDom.CodeTypeDeclaration>tipo, que normalmente é derivado da <xref:System.Web.UI.Page>classe</xref:System.Web.UI.Page> de</xref:System.CodeDom.CodeTypeDeclaration>       No modelo de página code-behind, `baseType` é o <xref:System.CodeDom.CodeTypeDeclaration>tipo que representa a classe de code-behind parcial, que normalmente é derivado da <xref:System.Web.UI.Page>classe</xref:System.Web.UI.Page> de</xref:System.CodeDom.CodeTypeDeclaration> O `derivedType` parâmetro é a classe que deriva da classe parcial que contém a marcação.       Para obter mais informações sobre modelos de página da Web do ASP.NET, consulte [visão geral da sintaxe de página do ASP.NET Web Forms](~/add/includes/ajax-current-ext-md.md).       Para obter mais informações sobre como usar o CodeDOM para representar e gerar código-fonte, consulte [dinâmico geração de código-fonte e compilação](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public virtual void ProcessGeneratedCode (System.CodeDom.CodeCompileUnit codeCompileUnit, System.CodeDom.CodeTypeDeclaration baseType, System.CodeDom.CodeTypeDeclaration derivedType, System.CodeDom.CodeMemberMethod buildMethod, System.CodeDom.CodeMemberMethod dataBindingMethod);
    parameters:
    - id: codeCompileUnit
      type: System.CodeDom.CodeCompileUnit
      description: "O contêiner raiz de um gráfico CodeDOM do controle que está sendo criado."
    - id: baseType
      type: System.CodeDom.CodeTypeDeclaration
      description: "O tipo base do controle de página ou o usuário que contém o controle que está sendo criado."
    - id: derivedType
      type: System.CodeDom.CodeTypeDeclaration
      description: "O tipo derivado do controle de página ou o usuário que contém o controle que está sendo criado."
    - id: buildMethod
      type: System.CodeDom.CodeMemberMethod
      description: "O código que é usado para criar o controle."
    - id: dataBindingMethod
      type: System.CodeDom.CodeMemberMethod
      description: "O código que é usado para criar o método de associação de dados do controle."
  overload: System.Web.UI.ControlBuilder.ProcessGeneratedCode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ServiceProvider
  id: ServiceProvider
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ServiceProvider
  nameWithType: ControlBuilder.ServiceProvider
  fullName: System.Web.UI.ControlBuilder.ServiceProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o objeto de serviço para este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto."
  syntax:
    content: public IServiceProvider ServiceProvider { get; }
    return:
      type: System.IServiceProvider
      description: "Um <xref:System.IServiceProvider>que representa o objeto de serviço para este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref>.</xref:System.IServiceProvider>"
  overload: System.Web.UI.ControlBuilder.ServiceProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.SetResourceKey(System.String)
  id: SetResourceKey(System.String)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: SetResourceKey(String)
  nameWithType: ControlBuilder.SetResourceKey(String)
  fullName: System.Web.UI.ControlBuilder.SetResourceKey(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define a chave de recurso para este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto."
  syntax:
    content: public void SetResourceKey (string resourceKey);
    parameters:
    - id: resourceKey
      type: System.String
      description: "A chave de recurso para este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref>."
  overload: System.Web.UI.ControlBuilder.SetResourceKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)
  id: SetServiceProvider(System.IServiceProvider)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: SetServiceProvider(IServiceProvider)
  nameWithType: ControlBuilder.SetServiceProvider(IServiceProvider)
  fullName: System.Web.UI.ControlBuilder.SetServiceProvider(IServiceProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Define o objeto de serviço para este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto."
  syntax:
    content: public void SetServiceProvider (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "Um <xref:System.IServiceProvider>que representa o objeto de serviço para o <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref>.</xref:System.IServiceProvider>"
  overload: System.Web.UI.ControlBuilder.SetServiceProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.SetTagInnerText(System.String)
  id: SetTagInnerText(System.String)
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: SetTagInnerText(String)
  nameWithType: ControlBuilder.SetTagInnerText(String)
  fullName: System.Web.UI.ControlBuilder.SetTagInnerText(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Fornece o <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> com o texto interno da marca do controle."
  remarks: "Este método é chamado somente se <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A>retornados anteriormente `true`.</xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A>"
  example:
  - "The following example uses the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property when the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> method is called. When a control has this builder attached to it, the <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> determines whether the control is being accessed at design-time through a designer. The <xref:System.Web.UI.ControlBuilder.NeedsTagInnerText%2A> returns the value of the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property, and then the SetTagInnerText method is called. If the <xref:System.Web.UI.ControlBuilder.InDesigner%2A> property is set to `false`, an <xref:System.Exception> is thrown. Otherwise, the inner text of the control is returned on the SetTagInnerText call.  \n  \n [!code-vb[ControlBuilderSamples_3#1](~/add/codesnippet/visualbasic/m-system.web.ui.controlb_2_1.vb)]\n [!code-cs[ControlBuilderSamples_3#1](~/add/codesnippet/csharp/m-system.web.ui.controlb_2_1.cs)]"
  syntax:
    content: public virtual void SetTagInnerText (string text);
    parameters:
    - id: text
      type: System.String
      description: "O texto a ser fornecido."
  overload: System.Web.UI.ControlBuilder.SetTagInnerText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.SubBuilders
  id: SubBuilders
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: SubBuilders
  nameWithType: ControlBuilder.SubBuilders
  fullName: System.Web.UI.ControlBuilder.SubBuilders
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma lista de filhos <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objetos para este <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objeto."
  syntax:
    content: public System.Collections.ArrayList SubBuilders { get; }
    return:
      type: System.Collections.ArrayList
      description: "Uma lista de filhos <xref href=&quot;System.Web.UI.ControlBuilder&quot;> </xref> objetos."
  overload: System.Web.UI.ControlBuilder.SubBuilders*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.TagName
  id: TagName
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: TagName
  nameWithType: ControlBuilder.TagName
  fullName: System.Web.UI.ControlBuilder.TagName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém o nome da marca para o controle a ser criado."
  syntax:
    content: public string TagName { get; }
    return:
      type: System.String
      description: "O nome da marca do controle."
  overload: System.Web.UI.ControlBuilder.TagName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.TemplatePropertyEntries
  id: TemplatePropertyEntries
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: TemplatePropertyEntries
  nameWithType: ControlBuilder.TemplatePropertyEntries
  fullName: System.Web.UI.ControlBuilder.TemplatePropertyEntries
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém uma coleção de entradas de propriedade do modelo."
  remarks: "Se não houver nenhuma entrada, uma coleção vazia estática será retornada."
  syntax:
    content: public System.Collections.ICollection TemplatePropertyEntries { get; }
    return:
      type: System.Collections.ICollection
      description: "Uma coleção de entradas de propriedade do modelo."
  overload: System.Web.UI.ControlBuilder.TemplatePropertyEntries*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.ControlBuilder.ThemeResolutionService
  id: ThemeResolutionService
  parent: System.Web.UI.ControlBuilder
  langs:
  - csharp
  name: ThemeResolutionService
  nameWithType: ControlBuilder.ThemeResolutionService
  fullName: System.Web.UI.ControlBuilder.ThemeResolutionService
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um <xref href=&quot;System.Web.UI.IThemeResolutionService&quot;> </xref> objeto que é usado em tempo de design para gerenciar capas e temas do controle."
  remarks: "O <xref:System.Web.UI.IThemeResolutionService>interface é um contêiner para um ou mais <xref:System.Web.UI.ThemeProvider>objetos, que por sua vez fornecem o <xref:System.Web.UI.SkinBuilder>objetos que se aplicam a temas e capas de controle para controles quando eles são criados em um designer.</xref:System.Web.UI.SkinBuilder> </xref:System.Web.UI.ThemeProvider> </xref:System.Web.UI.IThemeResolutionService>"
  syntax:
    content: public System.Web.UI.IThemeResolutionService ThemeResolutionService { get; }
    return:
      type: System.Web.UI.IThemeResolutionService
      description: "Um <xref href=&quot;System.Web.UI.IThemeResolutionService&quot;> </xref> objeto que é usado em tempo de design para gerenciar capas e temas do controle."
  overload: System.Web.UI.ControlBuilder.ThemeResolutionService*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.UI.ControlBuilder.#ctor
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ControlBuilder()
  nameWithType: ControlBuilder.ControlBuilder()
  fullName: System.Web.UI.ControlBuilder.ControlBuilder()
- uid: System.Web.UI.ControlBuilder.AllowWhitespaceLiterals
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: AllowWhitespaceLiterals()
  nameWithType: ControlBuilder.AllowWhitespaceLiterals()
  fullName: System.Web.UI.ControlBuilder.AllowWhitespaceLiterals()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.ControlBuilder.AppendLiteralString(System.String)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: AppendLiteralString(String)
  nameWithType: ControlBuilder.AppendLiteralString(String)
  fullName: System.Web.UI.ControlBuilder.AppendLiteralString(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.ControlBuilder.AppendSubBuilder(System.Web.UI.ControlBuilder)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: AppendSubBuilder(ControlBuilder)
  nameWithType: ControlBuilder.AppendSubBuilder(ControlBuilder)
  fullName: System.Web.UI.ControlBuilder.AppendSubBuilder(ControlBuilder)
- uid: System.Web.UI.ControlBuilder
  parent: System.Web.UI
  isExternal: false
  name: ControlBuilder
  nameWithType: ControlBuilder
  fullName: System.Web.UI.ControlBuilder
- uid: System.Web.UI.ControlBuilder.BindingContainerBuilder
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: BindingContainerBuilder
  nameWithType: ControlBuilder.BindingContainerBuilder
  fullName: System.Web.UI.ControlBuilder.BindingContainerBuilder
- uid: System.Web.UI.ControlBuilder.BindingContainerType
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: BindingContainerType
  nameWithType: ControlBuilder.BindingContainerType
  fullName: System.Web.UI.ControlBuilder.BindingContainerType
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.ControlBuilder.BuildObject
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: BuildObject()
  nameWithType: ControlBuilder.BuildObject()
  fullName: System.Web.UI.ControlBuilder.BuildObject()
- uid: System.Web.UI.ControlBuilder.CloseControl
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: CloseControl()
  nameWithType: ControlBuilder.CloseControl()
  fullName: System.Web.UI.ControlBuilder.CloseControl()
- uid: System.Web.UI.ControlBuilder.ComplexPropertyEntries
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ComplexPropertyEntries
  nameWithType: ControlBuilder.ComplexPropertyEntries
  fullName: System.Web.UI.ControlBuilder.ComplexPropertyEntries
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.Web.UI.ControlBuilder.ControlType
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ControlType
  nameWithType: ControlBuilder.ControlType
  fullName: System.Web.UI.ControlBuilder.ControlType
- uid: System.Web.UI.ControlBuilder.CreateBuilderFromType(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary,System.Int32,System.String)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: CreateBuilderFromType(TemplateParser,ControlBuilder,Type,String,String,IDictionary,Int32,String)
  nameWithType: ControlBuilder.CreateBuilderFromType(TemplateParser,ControlBuilder,Type,String,String,IDictionary,Int32,String)
  fullName: System.Web.UI.ControlBuilder.CreateBuilderFromType(TemplateParser,ControlBuilder,Type,String,String,IDictionary,Int32,String)
- uid: System.Web.UI.TemplateParser
  parent: System.Web.UI
  isExternal: false
  name: TemplateParser
  nameWithType: TemplateParser
  fullName: System.Web.UI.TemplateParser
- uid: System.Collections.IDictionary
  parent: System.Collections
  isExternal: true
  name: IDictionary
  nameWithType: IDictionary
  fullName: System.Collections.IDictionary
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.ControlBuilder.CurrentFilterResolutionService
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: CurrentFilterResolutionService
  nameWithType: ControlBuilder.CurrentFilterResolutionService
  fullName: System.Web.UI.ControlBuilder.CurrentFilterResolutionService
- uid: System.Web.UI.IFilterResolutionService
  parent: System.Web.UI
  isExternal: false
  name: IFilterResolutionService
  nameWithType: IFilterResolutionService
  fullName: System.Web.UI.IFilterResolutionService
- uid: System.Web.UI.ControlBuilder.DeclareType
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: DeclareType
  nameWithType: ControlBuilder.DeclareType
  fullName: System.Web.UI.ControlBuilder.DeclareType
- uid: System.Web.UI.ControlBuilder.DesignerFilter
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: DesignerFilter
  nameWithType: ControlBuilder.DesignerFilter
  fullName: System.Web.UI.ControlBuilder.DesignerFilter
- uid: System.Web.UI.ControlBuilder.FChildrenAsProperties
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: FChildrenAsProperties
  nameWithType: ControlBuilder.FChildrenAsProperties
  fullName: System.Web.UI.ControlBuilder.FChildrenAsProperties
- uid: System.Web.UI.ControlBuilder.FIsNonParserAccessor
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: FIsNonParserAccessor
  nameWithType: ControlBuilder.FIsNonParserAccessor
  fullName: System.Web.UI.ControlBuilder.FIsNonParserAccessor
- uid: System.Web.UI.ControlBuilder.GetChildControlType(System.String,System.Collections.IDictionary)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: GetChildControlType(String,IDictionary)
  nameWithType: ControlBuilder.GetChildControlType(String,IDictionary)
  fullName: System.Web.UI.ControlBuilder.GetChildControlType(String,IDictionary)
- uid: System.Web.UI.ControlBuilder.GetObjectPersistData
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: GetObjectPersistData()
  nameWithType: ControlBuilder.GetObjectPersistData()
  fullName: System.Web.UI.ControlBuilder.GetObjectPersistData()
- uid: System.Web.UI.ObjectPersistData
  parent: System.Web.UI
  isExternal: false
  name: ObjectPersistData
  nameWithType: ObjectPersistData
  fullName: System.Web.UI.ObjectPersistData
- uid: System.Web.UI.ControlBuilder.GetResourceKey
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: GetResourceKey()
  nameWithType: ControlBuilder.GetResourceKey()
  fullName: System.Web.UI.ControlBuilder.GetResourceKey()
- uid: System.Web.UI.ControlBuilder.HasAspCode
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: HasAspCode
  nameWithType: ControlBuilder.HasAspCode
  fullName: System.Web.UI.ControlBuilder.HasAspCode
- uid: System.Web.UI.ControlBuilder.HasBody
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: HasBody()
  nameWithType: ControlBuilder.HasBody()
  fullName: System.Web.UI.ControlBuilder.HasBody()
- uid: System.Web.UI.ControlBuilder.HtmlDecodeLiterals
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: HtmlDecodeLiterals()
  nameWithType: ControlBuilder.HtmlDecodeLiterals()
  fullName: System.Web.UI.ControlBuilder.HtmlDecodeLiterals()
- uid: System.Web.UI.ControlBuilder.ID
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ID
  nameWithType: ControlBuilder.ID
  fullName: System.Web.UI.ControlBuilder.ID
- uid: System.Web.UI.ControlBuilder.InDesigner
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: InDesigner
  nameWithType: ControlBuilder.InDesigner
  fullName: System.Web.UI.ControlBuilder.InDesigner
- uid: System.Web.UI.ControlBuilder.Init(System.Web.UI.TemplateParser,System.Web.UI.ControlBuilder,System.Type,System.String,System.String,System.Collections.IDictionary)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: Init(TemplateParser,ControlBuilder,Type,String,String,IDictionary)
  nameWithType: ControlBuilder.Init(TemplateParser,ControlBuilder,Type,String,String,IDictionary)
  fullName: System.Web.UI.ControlBuilder.Init(TemplateParser,ControlBuilder,Type,String,String,IDictionary)
- uid: System.Web.UI.ControlBuilder.InPageTheme
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: InPageTheme
  nameWithType: ControlBuilder.InPageTheme
  fullName: System.Web.UI.ControlBuilder.InPageTheme
- uid: System.Web.UI.ControlBuilder.ItemType
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ItemType
  nameWithType: ControlBuilder.ItemType
  fullName: System.Web.UI.ControlBuilder.ItemType
- uid: System.Web.UI.ControlBuilder.Localize
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: Localize
  nameWithType: ControlBuilder.Localize
  fullName: System.Web.UI.ControlBuilder.Localize
- uid: System.Web.UI.ControlBuilder.NamingContainerType
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: NamingContainerType
  nameWithType: ControlBuilder.NamingContainerType
  fullName: System.Web.UI.ControlBuilder.NamingContainerType
- uid: System.Web.UI.ControlBuilder.NeedsTagInnerText
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: NeedsTagInnerText()
  nameWithType: ControlBuilder.NeedsTagInnerText()
  fullName: System.Web.UI.ControlBuilder.NeedsTagInnerText()
- uid: System.Web.UI.ControlBuilder.OnAppendToParentBuilder(System.Web.UI.ControlBuilder)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: OnAppendToParentBuilder(ControlBuilder)
  nameWithType: ControlBuilder.OnAppendToParentBuilder(ControlBuilder)
  fullName: System.Web.UI.ControlBuilder.OnAppendToParentBuilder(ControlBuilder)
- uid: System.Web.UI.ControlBuilder.PageVirtualPath
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: PageVirtualPath
  nameWithType: ControlBuilder.PageVirtualPath
  fullName: System.Web.UI.ControlBuilder.PageVirtualPath
- uid: System.Web.UI.ControlBuilder.Parser
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: Parser
  nameWithType: ControlBuilder.Parser
  fullName: System.Web.UI.ControlBuilder.Parser
- uid: System.Web.UI.ControlBuilder.ProcessGeneratedCode(System.CodeDom.CodeCompileUnit,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeTypeDeclaration,System.CodeDom.CodeMemberMethod,System.CodeDom.CodeMemberMethod)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ProcessGeneratedCode(CodeCompileUnit,CodeTypeDeclaration,CodeTypeDeclaration,CodeMemberMethod,CodeMemberMethod)
  nameWithType: ControlBuilder.ProcessGeneratedCode(CodeCompileUnit,CodeTypeDeclaration,CodeTypeDeclaration,CodeMemberMethod,CodeMemberMethod)
  fullName: System.Web.UI.ControlBuilder.ProcessGeneratedCode(CodeCompileUnit,CodeTypeDeclaration,CodeTypeDeclaration,CodeMemberMethod,CodeMemberMethod)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.CodeDom.CodeMemberMethod
  parent: System.CodeDom
  isExternal: false
  name: CodeMemberMethod
  nameWithType: CodeMemberMethod
  fullName: System.CodeDom.CodeMemberMethod
- uid: System.Web.UI.ControlBuilder.ServiceProvider
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ServiceProvider
  nameWithType: ControlBuilder.ServiceProvider
  fullName: System.Web.UI.ControlBuilder.ServiceProvider
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.Web.UI.ControlBuilder.SetResourceKey(System.String)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SetResourceKey(String)
  nameWithType: ControlBuilder.SetResourceKey(String)
  fullName: System.Web.UI.ControlBuilder.SetResourceKey(String)
- uid: System.Web.UI.ControlBuilder.SetServiceProvider(System.IServiceProvider)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SetServiceProvider(IServiceProvider)
  nameWithType: ControlBuilder.SetServiceProvider(IServiceProvider)
  fullName: System.Web.UI.ControlBuilder.SetServiceProvider(IServiceProvider)
- uid: System.Web.UI.ControlBuilder.SetTagInnerText(System.String)
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SetTagInnerText(String)
  nameWithType: ControlBuilder.SetTagInnerText(String)
  fullName: System.Web.UI.ControlBuilder.SetTagInnerText(String)
- uid: System.Web.UI.ControlBuilder.SubBuilders
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SubBuilders
  nameWithType: ControlBuilder.SubBuilders
  fullName: System.Web.UI.ControlBuilder.SubBuilders
- uid: System.Collections.ArrayList
  parent: System.Collections
  isExternal: false
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Web.UI.ControlBuilder.TagName
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: TagName
  nameWithType: ControlBuilder.TagName
  fullName: System.Web.UI.ControlBuilder.TagName
- uid: System.Web.UI.ControlBuilder.TemplatePropertyEntries
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: TemplatePropertyEntries
  nameWithType: ControlBuilder.TemplatePropertyEntries
  fullName: System.Web.UI.ControlBuilder.TemplatePropertyEntries
- uid: System.Web.UI.ControlBuilder.ThemeResolutionService
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ThemeResolutionService
  nameWithType: ControlBuilder.ThemeResolutionService
  fullName: System.Web.UI.ControlBuilder.ThemeResolutionService
- uid: System.Web.UI.IThemeResolutionService
  parent: System.Web.UI
  isExternal: false
  name: IThemeResolutionService
  nameWithType: IThemeResolutionService
  fullName: System.Web.UI.IThemeResolutionService
- uid: System.Web.UI.ControlBuilder.#ctor*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ControlBuilder
  nameWithType: ControlBuilder.ControlBuilder
- uid: System.Web.UI.ControlBuilder.AllowWhitespaceLiterals*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: AllowWhitespaceLiterals
  nameWithType: ControlBuilder.AllowWhitespaceLiterals
- uid: System.Web.UI.ControlBuilder.AppendLiteralString*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: AppendLiteralString
  nameWithType: ControlBuilder.AppendLiteralString
- uid: System.Web.UI.ControlBuilder.AppendSubBuilder*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: AppendSubBuilder
  nameWithType: ControlBuilder.AppendSubBuilder
- uid: System.Web.UI.ControlBuilder.BindingContainerBuilder*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: BindingContainerBuilder
  nameWithType: ControlBuilder.BindingContainerBuilder
- uid: System.Web.UI.ControlBuilder.BindingContainerType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: BindingContainerType
  nameWithType: ControlBuilder.BindingContainerType
- uid: System.Web.UI.ControlBuilder.BuildObject*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: BuildObject
  nameWithType: ControlBuilder.BuildObject
- uid: System.Web.UI.ControlBuilder.CloseControl*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: CloseControl
  nameWithType: ControlBuilder.CloseControl
- uid: System.Web.UI.ControlBuilder.ComplexPropertyEntries*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ComplexPropertyEntries
  nameWithType: ControlBuilder.ComplexPropertyEntries
- uid: System.Web.UI.ControlBuilder.ControlType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ControlType
  nameWithType: ControlBuilder.ControlType
- uid: System.Web.UI.ControlBuilder.CreateBuilderFromType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: CreateBuilderFromType
  nameWithType: ControlBuilder.CreateBuilderFromType
- uid: System.Web.UI.ControlBuilder.CurrentFilterResolutionService*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: CurrentFilterResolutionService
  nameWithType: ControlBuilder.CurrentFilterResolutionService
- uid: System.Web.UI.ControlBuilder.DeclareType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: DeclareType
  nameWithType: ControlBuilder.DeclareType
- uid: System.Web.UI.ControlBuilder.FChildrenAsProperties*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: FChildrenAsProperties
  nameWithType: ControlBuilder.FChildrenAsProperties
- uid: System.Web.UI.ControlBuilder.FIsNonParserAccessor*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: FIsNonParserAccessor
  nameWithType: ControlBuilder.FIsNonParserAccessor
- uid: System.Web.UI.ControlBuilder.GetChildControlType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: GetChildControlType
  nameWithType: ControlBuilder.GetChildControlType
- uid: System.Web.UI.ControlBuilder.GetObjectPersistData*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: GetObjectPersistData
  nameWithType: ControlBuilder.GetObjectPersistData
- uid: System.Web.UI.ControlBuilder.GetResourceKey*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: GetResourceKey
  nameWithType: ControlBuilder.GetResourceKey
- uid: System.Web.UI.ControlBuilder.HasAspCode*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: HasAspCode
  nameWithType: ControlBuilder.HasAspCode
- uid: System.Web.UI.ControlBuilder.HasBody*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: HasBody
  nameWithType: ControlBuilder.HasBody
- uid: System.Web.UI.ControlBuilder.HtmlDecodeLiterals*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: HtmlDecodeLiterals
  nameWithType: ControlBuilder.HtmlDecodeLiterals
- uid: System.Web.UI.ControlBuilder.ID*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ID
  nameWithType: ControlBuilder.ID
- uid: System.Web.UI.ControlBuilder.InDesigner*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: InDesigner
  nameWithType: ControlBuilder.InDesigner
- uid: System.Web.UI.ControlBuilder.Init*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: Init
  nameWithType: ControlBuilder.Init
- uid: System.Web.UI.ControlBuilder.InPageTheme*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: InPageTheme
  nameWithType: ControlBuilder.InPageTheme
- uid: System.Web.UI.ControlBuilder.ItemType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ItemType
  nameWithType: ControlBuilder.ItemType
- uid: System.Web.UI.ControlBuilder.Localize*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: Localize
  nameWithType: ControlBuilder.Localize
- uid: System.Web.UI.ControlBuilder.NamingContainerType*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: NamingContainerType
  nameWithType: ControlBuilder.NamingContainerType
- uid: System.Web.UI.ControlBuilder.NeedsTagInnerText*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: NeedsTagInnerText
  nameWithType: ControlBuilder.NeedsTagInnerText
- uid: System.Web.UI.ControlBuilder.OnAppendToParentBuilder*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: OnAppendToParentBuilder
  nameWithType: ControlBuilder.OnAppendToParentBuilder
- uid: System.Web.UI.ControlBuilder.PageVirtualPath*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: PageVirtualPath
  nameWithType: ControlBuilder.PageVirtualPath
- uid: System.Web.UI.ControlBuilder.Parser*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: Parser
  nameWithType: ControlBuilder.Parser
- uid: System.Web.UI.ControlBuilder.ProcessGeneratedCode*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ProcessGeneratedCode
  nameWithType: ControlBuilder.ProcessGeneratedCode
- uid: System.Web.UI.ControlBuilder.ServiceProvider*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ServiceProvider
  nameWithType: ControlBuilder.ServiceProvider
- uid: System.Web.UI.ControlBuilder.SetResourceKey*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SetResourceKey
  nameWithType: ControlBuilder.SetResourceKey
- uid: System.Web.UI.ControlBuilder.SetServiceProvider*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SetServiceProvider
  nameWithType: ControlBuilder.SetServiceProvider
- uid: System.Web.UI.ControlBuilder.SetTagInnerText*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SetTagInnerText
  nameWithType: ControlBuilder.SetTagInnerText
- uid: System.Web.UI.ControlBuilder.SubBuilders*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: SubBuilders
  nameWithType: ControlBuilder.SubBuilders
- uid: System.Web.UI.ControlBuilder.TagName*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: TagName
  nameWithType: ControlBuilder.TagName
- uid: System.Web.UI.ControlBuilder.TemplatePropertyEntries*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: TemplatePropertyEntries
  nameWithType: ControlBuilder.TemplatePropertyEntries
- uid: System.Web.UI.ControlBuilder.ThemeResolutionService*
  parent: System.Web.UI.ControlBuilder
  isExternal: false
  name: ThemeResolutionService
  nameWithType: ControlBuilder.ThemeResolutionService
