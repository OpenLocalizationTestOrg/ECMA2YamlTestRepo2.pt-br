### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Composition.Hosting.CompositionService
  id: CompositionService
  children:
  - System.ComponentModel.Composition.Hosting.CompositionService.Dispose
  - System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  langs:
  - csharp
  name: CompositionService
  nameWithType: CompositionService
  fullName: System.ComponentModel.Composition.Hosting.CompositionService
  type: Class
  summary: "Fornece métodos para atender as importações em uma instância existente da parte."
  remarks: >-
    > [!IMPORTANT]

    >  This type implements the <xref:System.IDisposable> interface. When you have finished using the type, you should dispose of it either directly or indirectly. To dispose of the type directly, call its <xref:System.IDisposable.Dispose%2A> method in a `try`/`catch` block. To dispose of it indirectly, use a language construct such as `using` (in C#) or `Using` (in Visual Basic). For more information, see the “Using an Object that Implements IDisposable” section in the <xref:System.IDisposable> interface topic.
  syntax:
    content: 'public class CompositionService : IDisposable, System.ComponentModel.Composition.ICompositionService'
  inheritance:
  - System.Object
  implements:
  - System.ComponentModel.Composition.ICompositionService
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionService.Dispose
  id: Dispose
  parent: System.ComponentModel.Composition.Hosting.CompositionService
  langs:
  - csharp
  name: Dispose()
  nameWithType: CompositionService.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.CompositionService.Dispose()
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Libera todos os recursos usados pela instância atual do <xref href=&quot;System.ComponentModel.Composition.Hosting.CompositionContainer&quot;> </xref> classe."
  remarks: "Chamar `Dispose` quando terminar de usar o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> O `Dispose` método deixa o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>em um estado inutilizável.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> Depois de chamar `Dispose`, você deve liberar todas as referências para o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>para o coletor de lixo possa recuperar a memória que o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>estava ocupando.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> </xref:System.ComponentModel.Composition.Hosting.CompositionContainer>       Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada `Dispose` antes de liberar sua última referência a <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer> Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.ComponentModel.Composition.Hosting.CompositionContainer>do objeto `Finalize` método.</xref:System.ComponentModel.Composition.Hosting.CompositionContainer>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Composition.Hosting.CompositionService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  id: SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  parent: System.ComponentModel.Composition.Hosting.CompositionService
  langs:
  - csharp
  name: SatisfyImportsOnce(ComposablePart)
  nameWithType: CompositionService.SatisfyImportsOnce(ComposablePart)
  fullName: System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(ComposablePart)
  type: Method
  assemblies:
  - System.ComponentModel.Composition
  namespace: System.ComponentModel.Composition.Hosting
  summary: "Compõe a parte especificada, com recomposition e a validação desabilitado."
  syntax:
    content: public void SatisfyImportsOnce (System.ComponentModel.Composition.Primitives.ComposablePart part);
    parameters:
    - id: part
      type: System.ComponentModel.Composition.Primitives.ComposablePart
      description: "A parte para compor."
  overload: System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ComponentModel.Composition.Hosting.CompositionService.Dispose
  parent: System.ComponentModel.Composition.Hosting.CompositionService
  isExternal: false
  name: Dispose()
  nameWithType: CompositionService.Dispose()
  fullName: System.ComponentModel.Composition.Hosting.CompositionService.Dispose()
- uid: System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(System.ComponentModel.Composition.Primitives.ComposablePart)
  parent: System.ComponentModel.Composition.Hosting.CompositionService
  isExternal: false
  name: SatisfyImportsOnce(ComposablePart)
  nameWithType: CompositionService.SatisfyImportsOnce(ComposablePart)
  fullName: System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce(ComposablePart)
- uid: System.ComponentModel.Composition.Primitives.ComposablePart
  parent: System.ComponentModel.Composition.Primitives
  isExternal: false
  name: ComposablePart
  nameWithType: ComposablePart
  fullName: System.ComponentModel.Composition.Primitives.ComposablePart
- uid: System.ComponentModel.Composition.Hosting.CompositionService.Dispose*
  parent: System.ComponentModel.Composition.Hosting.CompositionService
  isExternal: false
  name: Dispose
  nameWithType: CompositionService.Dispose
- uid: System.ComponentModel.Composition.Hosting.CompositionService.SatisfyImportsOnce*
  parent: System.ComponentModel.Composition.Hosting.CompositionService
  isExternal: false
  name: SatisfyImportsOnce
  nameWithType: CompositionService.SatisfyImportsOnce
