### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  id: X509SecurityTokenAuthenticator
  children:
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  - System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator
  nameWithType: X509SecurityTokenAuthenticator
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  type: Class
  summary: "Autentica um <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>."
  remarks: "Use a classe X509SecurityTokenAuthenticator para autenticar <xref:System.IdentityModel.Tokens.X509SecurityToken>tokens de segurança.</xref:System.IdentityModel.Tokens.X509SecurityToken>"
  syntax:
    content: 'public class X509SecurityTokenAuthenticator : System.IdentityModel.Selectors.SecurityTokenAuthenticator'
  inheritance:
  - System.Object
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator
  implements: []
  inheritedMembers:
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.CanValidateToken(System.IdentityModel.Tokens.SecurityToken)
  - System.IdentityModel.Selectors.SecurityTokenAuthenticator.ValidateToken(System.IdentityModel.Tokens.SecurityToken)
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator()
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> classe."
  remarks: "Quando o <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>método é chamado para autenticar o token, o certificado x.&509; não está mapeado para uma identidade do Windows e o certificado é validado usando uma cadeia de certificados.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: public X509SecurityTokenAuthenticator ();
    parameters: []
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> classe usando o validador de certificado especificado."
  remarks: "O <xref:System.IdentityModel.Selectors.X509CertificateValidator>classe fornece modelos de validação de um conjunto de certificados predefinidos, como o <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>propriedade.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> Esses modelos de validação podem ser passados para o `validator` parâmetro. Quando um aplicativo requer um método de validação personalizada, derive uma classe de <xref:System.IdentityModel.Selectors.X509CertificateValidator>e substituir o <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>método.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> O <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>método é chamado pelo <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>método.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       Por padrão, o <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>não mapear o certificado x.&509; para uma identidade do Windows.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>"
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> que verifica se o certificado é válido."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> classe usando o método de validação de certificado especificado e indica se a identidade do certificado é mapeada para uma identidade do Windows."
  remarks: "O <xref:System.IdentityModel.Selectors.X509CertificateValidator>classe fornece modelos de validação de um conjunto de certificados predefinidos, como o <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>propriedade.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> Esses modelos de validação podem ser passados para o `validator` parâmetro. Quando um aplicativo requer um método de validação personalizada, derive uma classe de <xref:System.IdentityModel.Selectors.X509CertificateValidator>e substituir o <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>método.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> O <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>método é chamado pelo <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>método.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       Quando o <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>método é chamado para autenticar o token e `mapToWindows` é `true`, o certificado x.&509; é mapeado para uma conta do Windows e declarações são adicionadas a <xref:System.IdentityModel.Policy.EvaluationContext>com os grupos do Windows que o usuário pertence.</xref:System.IdentityModel.Policy.EvaluationContext> </xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> Como o certificado x.&509; é mapeado para uma conta do Windows depende do tipo de token de segurança: - quando o token de segurança é do tipo <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, o certificado x.&509; é mapeado usando o <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A>propriedade.</xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> </xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>      -Quando o token de segurança é do tipo `X509SecurityToken`, o certificado x.&509; é mapeado para uma conta do Windows usando o nome de usuário principal (UPN)."
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> que verifica se o certificado é válido."
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para mapear a identidade do certificado para uma identidade do Windows; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  id: '#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)'
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Selectors.X509SecurityTokenAuthenticator&quot;> </xref> classe usando o método de validação de certificado especificado e indica se a identidade do certificado é mapeada para uma identidade do Windows e os grupos do Windows que o usuário pertence."
  remarks: "Passar `false` para o `includeWindowsGroups` parâmetro quando informações de grupo do Windows não é necessário para melhorar o desempenho.       O <xref:System.IdentityModel.Selectors.X509CertificateValidator>classe tem várias propriedades estáticas, como o <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>propriedade que pode ser passada para o `validator` parâmetro.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator> Essas propriedades fornecem métodos comuns de validação de certificados x.&509;. Quando um método de validação personalizada é necessário, derive uma classe de <xref:System.IdentityModel.Selectors.X509CertificateValidator>e substituir o <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>método.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29> </xref:System.IdentityModel.Selectors.X509CertificateValidator> O <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>método é chamado pelo <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>método.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A> </xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>       Quando `true` é passado para o `mapToWindows` parâmetro, o certificado x.&509; é mapeado para uma conta do Windows e declarações relevantes são adicionadas ao <xref:System.IdentityModel.Policy.EvaluationContext>, como as janelas de grupos que o usuário pertence.</xref:System.IdentityModel.Policy.EvaluationContext> Quando o token de segurança é do tipo <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>, o <xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A>é de propriedade usando a identidade que é especificada no token; caso contrário, o certificado x.&509; está mapeado para uma identidade do Windows usando um logon do Kerberos S4U com base na extensão de SubjectAltNames de nome principal de usuário do certificado x.&509;.</xref:System.IdentityModel.Tokens.X509WindowsSecurityToken.WindowsIdentity%2A> </xref:System.IdentityModel.Tokens.X509WindowsSecurityToken>"
  syntax:
    content: public X509SecurityTokenAuthenticator (System.IdentityModel.Selectors.X509CertificateValidator validator, bool mapToWindows, bool includeWindowsGroups);
    parameters:
    - id: validator
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> que verifica se o certificado é válido."
    - id: mapToWindows
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para mapear a identidade do certificado para uma identidade do Windows; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: includeWindowsGroups
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir os grupos do Windows usuário pertence no <xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*>propriedade que é construído em todo o processo de autenticação; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.IdentityModel.Policy.AuthorizationContext.ClaimSets*>"
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém um valor que indica se o token de segurança especificado pode ser validado pelo autenticador de token de segurança."
  remarks: "O método CanValidateTokenCore não autentica o token de segurança; que é executada pelo <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>método.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore%2A>"
  syntax:
    content: protected override bool CanValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "O <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> a ser validado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Quando <code> token </code> é um <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref> token de segurança ou uma classe que deriva de <xref href=&quot;System.IdentityModel.Tokens.X509SecurityToken&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  id: MapCertificateToWindowsAccount
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém um valor que indica se deve mapear o certificado x.&509; para uma conta do Windows."
  remarks: "A propriedade MapCertificateToWindowsAccount só pode ser definida em um construtor.       Se a segurança em nível de transporte SSL ou HTTPS está sendo usada e mapeamento já é fornecido pelo canal de segurança subjacente ou pelo Internet Information Services (IIS), esse mapeamento é aplicado com nenhuma validação da cadeia. Caso contrário, antes de fazer o mapeamento, o certificado é validado usando uma cadeia de certificados e o certificado deve se encadear a uma identidade NT_AUTHORITY. A estrutura de cadeia usada corresponde do CERT_CHAIN_POLICY_NT_AUTH conforme definido no `CertVerifyCertificateChainPolicy` função (consulte o [CertVerifyCertificateChainPolicy](http://go.microsoft.com/fwlink/?LinkId=83570) função do SDK de criptografia). Esse comportamento ocorre apenas quando o mapeamento de um certificado para uma conta do Windows."
  syntax:
    content: public bool MapCertificateToWindowsAccount { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para mapear o certificado x.&509; para uma conta do Windows; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  id: ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  langs:
  - csharp
  name: ValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Autentica o token de segurança especificado e retorna o conjunto de diretivas de autorização para o token de segurança."
  remarks: "Quando o método ValidateTokenCore é substituído, siga estas diretrizes: - quando o token de segurança é passado para o `token` parâmetro não pode ser validada, gerar o <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>exceção.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>      -Quando não houver nenhuma política de autorização em vigor para este aplicativo, retornar um vazia <xref:System.Collections.ObjectModel.ReadOnlyCollection%601>do tipo <xref:System.IdentityModel.Policy.IAuthorizationPolicy>.</xref:System.IdentityModel.Policy.IAuthorizationPolicy> </xref:System.Collections.ObjectModel.ReadOnlyCollection%601>       Quando `null` é retornado por esse método, [!INCLUDE[vsindigo](~/add/includes/vsindigo-md.md)] gera o <xref:System.IdentityModel.Tokens.SecurityTokenValidationException>exceção.</xref:System.IdentityModel.Tokens.SecurityTokenValidationException>       As chamadas de método ValidateTokenCore o <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>método do método de validação especificado no construtor para autenticar o `token` parâmetro.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%28System.Security.Cryptography.X509Certificates.X509Certificate2%29>"
  syntax:
    content: protected override System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy> ValidateTokenCore (System.IdentityModel.Tokens.SecurityToken token);
    parameters:
    - id: token
      type: System.IdentityModel.Tokens.SecurityToken
      description: "O <xref href=&quot;System.IdentityModel.Tokens.SecurityToken&quot;> </xref> a ser validado."
    return:
      type: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
      description: "Um &lt;xref:System.Collections.ObjectModel.ReadOnlyCollection%601&gt; do tipo <xref href=&quot;System.IdentityModel.Policy.IAuthorizationPolicy&quot;> </xref> que contém o conjunto de políticas de autorização em vigor para este aplicativo."
  overload: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IdentityModel.Selectors.SecurityTokenAuthenticator
  isExternal: false
  name: System.IdentityModel.Selectors.SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator()
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator()
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator)
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor(System.IdentityModel.Selectors.X509CertificateValidator,System.Boolean,System.Boolean)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator(X509CertificateValidator,Boolean,Boolean)
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore(SecurityToken)
- uid: System.IdentityModel.Tokens.SecurityToken
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityToken
  nameWithType: SecurityToken
  fullName: System.IdentityModel.Tokens.SecurityToken
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(System.IdentityModel.Tokens.SecurityToken)
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore(SecurityToken)
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
  fullName: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore(SecurityToken)
- uid: System.Collections.ObjectModel.ReadOnlyCollection{System.IdentityModel.Policy.IAuthorizationPolicy}
  parent: System.Collections.ObjectModel
  isExternal: true
  name: ReadOnlyCollection<IAuthorizationPolicy>
  nameWithType: ReadOnlyCollection<IAuthorizationPolicy>
  fullName: System.Collections.ObjectModel.ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  spec.csharp:
  - uid: System.Collections.ObjectModel.ReadOnlyCollection`1
    name: ReadOnlyCollection
    nameWithType: ReadOnlyCollection
    fullName: ReadOnlyCollection<System.IdentityModel.Policy.IAuthorizationPolicy>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Policy.IAuthorizationPolicy
    name: IAuthorizationPolicy
    nameWithType: IAuthorizationPolicy
    fullName: IAuthorizationPolicy
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.#ctor*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: X509SecurityTokenAuthenticator
  nameWithType: X509SecurityTokenAuthenticator.X509SecurityTokenAuthenticator
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.CanValidateTokenCore*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: CanValidateTokenCore
  nameWithType: X509SecurityTokenAuthenticator.CanValidateTokenCore
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: MapCertificateToWindowsAccount
  nameWithType: X509SecurityTokenAuthenticator.MapCertificateToWindowsAccount
- uid: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator.ValidateTokenCore*
  parent: System.IdentityModel.Selectors.X509SecurityTokenAuthenticator
  isExternal: false
  name: ValidateTokenCore
  nameWithType: X509SecurityTokenAuthenticator.ValidateTokenCore
