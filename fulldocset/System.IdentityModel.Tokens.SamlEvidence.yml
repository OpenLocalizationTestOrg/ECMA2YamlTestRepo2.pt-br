### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Tokens.SamlEvidence
  id: SamlEvidence
  children:
  - System.IdentityModel.Tokens.SamlEvidence.#ctor
  - System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})
  - System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})
  - System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})
  - System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences
  - System.IdentityModel.Tokens.SamlEvidence.Assertions
  - System.IdentityModel.Tokens.SamlEvidence.IsReadOnly
  - System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly
  - System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  - System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  langs:
  - csharp
  name: SamlEvidence
  nameWithType: SamlEvidence
  fullName: System.IdentityModel.Tokens.SamlEvidence
  type: Class
  summary: "Representa a evidência usada para renderizar uma decisão de autorização para um <xref href=&quot;System.IdentityModel.Tokens.SamlSecurityToken&quot;> </xref> token de segurança."
  remarks: "<xref:System.IdentityModel.Tokens.SamlSecurityToken>tokens de segurança especificam suas declarações usando asserções SAML, o que podem ser especificada quando a entidade foi autorizada a acessar um recurso específico.</xref:System.IdentityModel.Tokens.SamlSecurityToken> As declarações em uma asserção de SAML são representadas por instruções de SAML. A especificação de SAML define um conjunto de tipos de declaração SAML e um deles é <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement> Um <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>declara uma decisão de autorização sobre acesso de assunto para o recurso especificado foi feita.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement> A classe SamlEvidence representa a evidência usada por uma autoridade de SAML para renderizar uma decisão de autorização para <xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>.</xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement> A evidência é especificada como declarações SAML ou uma referência a asserção de SAML, que se referir ao <xref:System.IdentityModel.Tokens.SamlEvidence.Assertions%2A>e <xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences%2A>Propriedades, respectivamente.</xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences%2A> </xref:System.IdentityModel.Tokens.SamlEvidence.Assertions%2A>"
  example:
  - "<xref:System.IdentityModel.Tokens.SamlAuthorizationDecisionStatement>  \n  \n <xref:System.IdentityModel.Tokens.SamlAssertion>  \n  \n <xref:System.IdentityModel.Tokens.SamlSecurityToken>"
  syntax:
    content: public class SamlEvidence
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlEvidence.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Tokens.SamlEvidence
  langs:
  - csharp
  name: SamlEvidence()
  nameWithType: SamlEvidence.SamlEvidence()
  fullName: System.IdentityModel.Tokens.SamlEvidence.SamlEvidence()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.SamlEvidence&quot;> </xref> classe."
  remarks: "Este construtor inicializa o <xref:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly%2A>propriedade `false`.</xref:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly%2A>"
  syntax:
    content: public SamlEvidence ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlEvidence.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})'
  parent: System.IdentityModel.Tokens.SamlEvidence
  langs:
  - csharp
  name: SamlEvidence(IEnumerable<SamlAssertion>)
  nameWithType: SamlEvidence.SamlEvidence(IEnumerable<SamlAssertion>)
  fullName: System.IdentityModel.Tokens.SamlEvidence.SamlEvidence(IEnumerable<SamlAssertion>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.SamlEvidence&quot;> </xref> classe usando o conjunto de declarações SAML especificado."
  remarks: "Use este construtor quando você tem uma coleção de <xref:System.IdentityModel.Tokens.SamlAssertion>objetos, mas nenhuma referência de asserção SAML.</xref:System.IdentityModel.Tokens.SamlAssertion>"
  syntax:
    content: public SamlEvidence (System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlAssertion> assertions);
    parameters:
    - id: assertions
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion}
      description: "Um &lt;xref:System.Collections.Generic.IEnumerable%601&gt; do tipo <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> que contém a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização. Conjuntos de <xref:System.IdentityModel.Tokens.SamlEvidence.Assertions*>propriedade.</xref:System.IdentityModel.Tokens.SamlEvidence.Assertions*>"
  overload: System.IdentityModel.Tokens.SamlEvidence.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>assertions</code>contém um membro que é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String})'
  parent: System.IdentityModel.Tokens.SamlEvidence
  langs:
  - csharp
  name: SamlEvidence(IEnumerable<String>)
  nameWithType: SamlEvidence.SamlEvidence(IEnumerable<String>)
  fullName: System.IdentityModel.Tokens.SamlEvidence.SamlEvidence(IEnumerable<String>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.SamlEvidence&quot;> </xref> classe usando o conjunto especificado de referências de asserção SAML."
  remarks: "Use este construtor quando você tem uma coleção de referências de asserção SAML, mas não <xref:System.IdentityModel.Tokens.SamlAssertion>objetos.</xref:System.IdentityModel.Tokens.SamlAssertion>"
  syntax:
    content: public SamlEvidence (System.Collections.Generic.IEnumerable<string> assertionIdReferences);
    parameters:
    - id: assertionIdReferences
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Um &lt;xref:System.Collections.Generic.IEnumerable%601&gt; do tipo <xref:System.String>que contém um identificador para uma asserção SAML que especifica a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização.</xref:System.String> Conjuntos de <xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences*>propriedade.</xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences*>"
  overload: System.IdentityModel.Tokens.SamlEvidence.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>assertionIdReferences</code>contém um membro que é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou vazio."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})'
  parent: System.IdentityModel.Tokens.SamlEvidence
  langs:
  - csharp
  name: SamlEvidence(IEnumerable<String>,IEnumerable<SamlAssertion>)
  nameWithType: SamlEvidence.SamlEvidence(IEnumerable<String>,IEnumerable<SamlAssertion>)
  fullName: System.IdentityModel.Tokens.SamlEvidence.SamlEvidence(IEnumerable<String>,IEnumerable<SamlAssertion>)
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Tokens.SamlEvidence&quot;> </xref> classe usando o conjunto especificado de referências de asserção SAML e asserções SAML."
  remarks: "Use este construtor quando você tiver uma coleção de referências de asserção SAML e uma coleção de <xref:System.IdentityModel.Tokens.SamlAssertion>objetos.</xref:System.IdentityModel.Tokens.SamlAssertion>"
  syntax:
    content: public SamlEvidence (System.Collections.Generic.IEnumerable<string> assertionIdReferences, System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlAssertion> assertions);
    parameters:
    - id: assertionIdReferences
      type: System.Collections.Generic.IEnumerable{System.String}
      description: "Um &lt;xref:System.Collections.Generic.IEnumerable%601&gt; do tipo <xref:System.String>que contém um identificador para uma asserção SAML que especifica a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização.</xref:System.String> Conjuntos de <xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences*>propriedade.</xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences*>"
    - id: assertions
      type: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion}
      description: "Um &lt;xref:System.Collections.Generic.IEnumerable%601&gt; do tipo <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> que contém a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização. Conjuntos de <xref:System.IdentityModel.Tokens.SamlEvidence.Assertions*>propriedade.</xref:System.IdentityModel.Tokens.SamlEvidence.Assertions*>"
  overload: System.IdentityModel.Tokens.SamlEvidence.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>assertionIdReferences</code>contém um membro que é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou vazio.       - ou - <code>assertions</code> contém um membro que é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>.       -or-       <code>assertionIdReferences</code> and <code>assertions</code> are both <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences
  id: AssertionIdReferences
  parent: System.IdentityModel.Tokens.SamlEvidence
  langs:
  - csharp
  name: AssertionIdReferences
  nameWithType: SamlEvidence.AssertionIdReferences
  fullName: System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém uma coleção de identificadores de asserções SAML que especificam a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização."
  remarks: "A propriedade AssertionIdReferences corresponde do `\\<saml:AssertionIDReference>` elemento que é definido no protocolo e asserções para a especificação do OASIS SAML Security Assertion Markup Language ()."
  syntax:
    content: public System.Collections.Generic.IList<string> AssertionIdReferences { get; }
    return:
      type: System.Collections.Generic.IList{System.String}
      description: "Um &lt;xref:System.Collections.Generic.IList%601&gt; do tipo <xref:System.String>que contém identificadores de asserções SAML que especificam a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização.</xref:System.String>"
  overload: System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlEvidence.Assertions
  id: Assertions
  parent: System.IdentityModel.Tokens.SamlEvidence
  langs:
  - csharp
  name: Assertions
  nameWithType: SamlEvidence.Assertions
  fullName: System.IdentityModel.Tokens.SamlEvidence.Assertions
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém a coleção de asserções SAML que compõem a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização."
  remarks: "O <xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences%2A>propriedade corresponde do `\\<saml:Assertion>` elemento que é definido no protocolo e asserções para a especificação do OASIS SAML Security Assertion Markup Language ().</xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences%2A>"
  syntax:
    content: public System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlAssertion> Assertions { get; }
    return:
      type: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlAssertion}
      description: "Um &lt;xref:System.Collections.Generic.IList%601&gt; do tipo <xref href=&quot;System.IdentityModel.Tokens.SamlAssertion&quot;> </xref> que contém a evidência que a autoridade SAML confiáveis para a renderização a decisão de autorização."
  overload: System.IdentityModel.Tokens.SamlEvidence.Assertions*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlEvidence.IsReadOnly
  id: IsReadOnly
  parent: System.IdentityModel.Tokens.SamlEvidence
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: SamlEvidence.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlEvidence.IsReadOnly
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Obtém um valor que indica se as propriedades desta instância são somente leitura."
  remarks: "Para tornar essa instância do <xref:System.IdentityModel.Tokens.SamlEvidence>chamada de classe somente leitura, o <xref:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly%2A>método.</xref:System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly%2A> </xref:System.IdentityModel.Tokens.SamlEvidence>"
  syntax:
    content: public bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as propriedades desta instância são somente leitura; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.IdentityModel.Tokens.SamlEvidence.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly
  id: MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlEvidence
  langs:
  - csharp
  name: MakeReadOnly()
  nameWithType: SamlEvidence.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly()
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Faz com que essa instância para ser somente leitura."
  remarks: "Quando o método MakeReadOnly é chamado, o <xref:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly%2A>está definida como `true` e propriedades desta instância não podem ser definidas.</xref:System.IdentityModel.Tokens.SamlEvidence.IsReadOnly%2A>"
  syntax:
    content: public void MakeReadOnly ();
    parameters: []
  overload: System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  id: ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlEvidence
  langs:
  - csharp
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlEvidence.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlEvidence.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Lê a evidência do leitor XML especificado."
  remarks: "O método ReadXml define as propriedades a seguir:- <xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences%2A>- <xref:System.IdentityModel.Tokens.SamlEvidence.Assertions%2A></xref:System.IdentityModel.Tokens.SamlEvidence.Assertions%2A> </xref:System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences%2A>"
  syntax:
    content: public virtual void ReadXml (System.Xml.XmlDictionaryReader reader, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer, System.IdentityModel.Selectors.SecurityTokenResolver outOfBandTokenResolver);
    parameters:
    - id: reader
      type: System.Xml.XmlDictionaryReader
      description: "Um <xref:System.Xml.XmlDictionaryReader>para ler a evidência.</xref:System.Xml.XmlDictionaryReader>"
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref> que é capaz de ler a declaração de autorização de SAML que é definido na especificação de SAML elementos XML."
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> que lê o <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref> cláusula da assinatura digital."
    - id: outOfBandTokenResolver
      type: System.IdentityModel.Selectors.SecurityTokenResolver
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenResolver&quot;> </xref> que determina o token de segurança que criou a assinatura digital."
  overload: System.IdentityModel.Tokens.SamlEvidence.ReadXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>reader</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>samlSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.IdentityModel.Tokens.SecurityTokenException
    commentId: T:System.IdentityModel.Tokens.SecurityTokenException
    description: "<code>reader</code>refere-se a um elemento XML que não tem pelo menos um <xref uid=&quot;langword_csharp_&lt;saml:AssertionIDReference&gt;&quot; name=&quot;&lt;saml:AssertionIDReference&gt;&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_&lt;saml:Assertion&gt;&quot; name=&quot;&lt;saml:Assertion&gt;&quot; href=&quot;&quot;> </xref> elemento filho."
  platform:
  - net462
- uid: System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  id: WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlEvidence
  langs:
  - csharp
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlEvidence.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlEvidence.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Tokens
  summary: "Grava a evidência para o serializador XML especificado."
  remarks: "Use o método WriteXml para gravar atual <xref:System.IdentityModel.Tokens.SamlEvidence>instância em um `<saml:Evidence>` elemento.</xref:System.IdentityModel.Tokens.SamlEvidence>"
  syntax:
    content: public virtual void WriteXml (System.Xml.XmlDictionaryWriter writer, System.IdentityModel.Tokens.SamlSerializer samlSerializer, System.IdentityModel.Selectors.SecurityTokenSerializer keyInfoSerializer);
    parameters:
    - id: writer
      type: System.Xml.XmlDictionaryWriter
      description: "Um <xref:System.Xml.XmlDictionaryWriter>para gravar a evidência.</xref:System.Xml.XmlDictionaryWriter>"
    - id: samlSerializer
      type: System.IdentityModel.Tokens.SamlSerializer
      description: "Um <xref href=&quot;System.IdentityModel.Tokens.SamlSerializer&quot;> </xref> que é capaz de gravar elementos XML em uma asserção SAML."
    - id: keyInfoSerializer
      type: System.IdentityModel.Selectors.SecurityTokenSerializer
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.SecurityTokenSerializer&quot;> </xref> que é capaz de gravar <xref uid=&quot;langword_csharp_KeyInfo&quot; name=&quot;KeyInfo&quot; href=&quot;&quot;> </xref> cláusulas."
  overload: System.IdentityModel.Tokens.SamlEvidence.WriteXml*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>writer</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>.       -or-       <code>samlSerializer</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IdentityModel.Tokens.SecurityTokenException
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SecurityTokenException
  nameWithType: SecurityTokenException
  fullName: System.IdentityModel.Tokens.SecurityTokenException
- uid: System.IdentityModel.Tokens.SamlEvidence.#ctor
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: SamlEvidence()
  nameWithType: SamlEvidence.SamlEvidence()
  fullName: System.IdentityModel.Tokens.SamlEvidence.SamlEvidence()
- uid: System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: SamlEvidence(IEnumerable<SamlAssertion>)
  nameWithType: SamlEvidence.SamlEvidence(IEnumerable<SamlAssertion>)
  fullName: System.IdentityModel.Tokens.SamlEvidence.SamlEvidence(IEnumerable<SamlAssertion>)
- uid: System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<SamlAssertion>
  nameWithType: IEnumerable<SamlAssertion>
  fullName: System.Collections.Generic.IEnumerable<System.IdentityModel.Tokens.SamlAssertion>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.IdentityModel.Tokens.SamlAssertion>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlAssertion
    name: SamlAssertion
    nameWithType: SamlAssertion
    fullName: SamlAssertion
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String})
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: SamlEvidence(IEnumerable<String>)
  nameWithType: SamlEvidence.SamlEvidence(IEnumerable<String>)
  fullName: System.IdentityModel.Tokens.SamlEvidence.SamlEvidence(IEnumerable<String>)
- uid: System.Collections.Generic.IEnumerable{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<String>
  nameWithType: IEnumerable<String>
  fullName: System.Collections.Generic.IEnumerable<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlEvidence.#ctor(System.Collections.Generic.IEnumerable{System.String},System.Collections.Generic.IEnumerable{System.IdentityModel.Tokens.SamlAssertion})
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: SamlEvidence(IEnumerable<String>,IEnumerable<SamlAssertion>)
  nameWithType: SamlEvidence.SamlEvidence(IEnumerable<String>,IEnumerable<SamlAssertion>)
  fullName: System.IdentityModel.Tokens.SamlEvidence.SamlEvidence(IEnumerable<String>,IEnumerable<SamlAssertion>)
- uid: System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: AssertionIdReferences
  nameWithType: SamlEvidence.AssertionIdReferences
  fullName: System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences
- uid: System.Collections.Generic.IList{System.String}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<String>
  nameWithType: IList<String>
  fullName: System.Collections.Generic.IList<System.String>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.String>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlEvidence.Assertions
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: Assertions
  nameWithType: SamlEvidence.Assertions
  fullName: System.IdentityModel.Tokens.SamlEvidence.Assertions
- uid: System.Collections.Generic.IList{System.IdentityModel.Tokens.SamlAssertion}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<SamlAssertion>
  nameWithType: IList<SamlAssertion>
  fullName: System.Collections.Generic.IList<System.IdentityModel.Tokens.SamlAssertion>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.IdentityModel.Tokens.SamlAssertion>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.IdentityModel.Tokens.SamlAssertion
    name: SamlAssertion
    nameWithType: SamlAssertion
    fullName: SamlAssertion
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.IdentityModel.Tokens.SamlEvidence.IsReadOnly
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlEvidence.IsReadOnly
  fullName: System.IdentityModel.Tokens.SamlEvidence.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: MakeReadOnly()
  nameWithType: SamlEvidence.MakeReadOnly()
  fullName: System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly()
- uid: System.IdentityModel.Tokens.SamlEvidence.ReadXml(System.Xml.XmlDictionaryReader,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer,System.IdentityModel.Selectors.SecurityTokenResolver)
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  nameWithType: SamlEvidence.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
  fullName: System.IdentityModel.Tokens.SamlEvidence.ReadXml(XmlDictionaryReader,SamlSerializer,SecurityTokenSerializer,SecurityTokenResolver)
- uid: System.Xml.XmlDictionaryReader
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryReader
  nameWithType: XmlDictionaryReader
  fullName: System.Xml.XmlDictionaryReader
- uid: System.IdentityModel.Tokens.SamlSerializer
  parent: System.IdentityModel.Tokens
  isExternal: false
  name: SamlSerializer
  nameWithType: SamlSerializer
  fullName: System.IdentityModel.Tokens.SamlSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenSerializer
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenSerializer
  nameWithType: SecurityTokenSerializer
  fullName: System.IdentityModel.Selectors.SecurityTokenSerializer
- uid: System.IdentityModel.Selectors.SecurityTokenResolver
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: SecurityTokenResolver
  nameWithType: SecurityTokenResolver
  fullName: System.IdentityModel.Selectors.SecurityTokenResolver
- uid: System.IdentityModel.Tokens.SamlEvidence.WriteXml(System.Xml.XmlDictionaryWriter,System.IdentityModel.Tokens.SamlSerializer,System.IdentityModel.Selectors.SecurityTokenSerializer)
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  nameWithType: SamlEvidence.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
  fullName: System.IdentityModel.Tokens.SamlEvidence.WriteXml(XmlDictionaryWriter,SamlSerializer,SecurityTokenSerializer)
- uid: System.Xml.XmlDictionaryWriter
  parent: System.Xml
  isExternal: true
  name: XmlDictionaryWriter
  nameWithType: XmlDictionaryWriter
  fullName: System.Xml.XmlDictionaryWriter
- uid: System.IdentityModel.Tokens.SamlEvidence.#ctor*
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: SamlEvidence
  nameWithType: SamlEvidence.SamlEvidence
- uid: System.IdentityModel.Tokens.SamlEvidence.AssertionIdReferences*
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: AssertionIdReferences
  nameWithType: SamlEvidence.AssertionIdReferences
- uid: System.IdentityModel.Tokens.SamlEvidence.Assertions*
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: Assertions
  nameWithType: SamlEvidence.Assertions
- uid: System.IdentityModel.Tokens.SamlEvidence.IsReadOnly*
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: IsReadOnly
  nameWithType: SamlEvidence.IsReadOnly
- uid: System.IdentityModel.Tokens.SamlEvidence.MakeReadOnly*
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: MakeReadOnly
  nameWithType: SamlEvidence.MakeReadOnly
- uid: System.IdentityModel.Tokens.SamlEvidence.ReadXml*
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: ReadXml
  nameWithType: SamlEvidence.ReadXml
- uid: System.IdentityModel.Tokens.SamlEvidence.WriteXml*
  parent: System.IdentityModel.Tokens.SamlEvidence
  isExternal: false
  name: WriteXml
  nameWithType: SamlEvidence.WriteXml
