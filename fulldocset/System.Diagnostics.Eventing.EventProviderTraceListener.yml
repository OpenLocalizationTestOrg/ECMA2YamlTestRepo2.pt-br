### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.EventProviderTraceListener
  id: EventProviderTraceListener
  children:
  - System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.Close
  - System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  - System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.Flush
  - System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes
  - System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  - System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  - System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)
  - System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)
  langs:
  - csharp
  name: EventProviderTraceListener
  nameWithType: EventProviderTraceListener
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener
  type: Class
  summary: "Um ouvinte para <xref href=&quot;System.Diagnostics.TraceSource&quot;> </xref> que grava eventos para o subsistema ETW."
  remarks: "Todos os dados de evento (rastreamento ou depuração) a partir do evento de origem são gravados no subsistema ETW como uma cadeia de caracteres. Os elementos de dados são delimitados por vírgula. Para especificar um delimitador diferente, use o <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A>propriedade.</xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter%2A>       A adição do ouvinte para <xref:System.Diagnostics.TraceSource?displayProperty=fullName>registra o provedor com o subsistema ETW.</xref:System.Diagnostics.TraceSource?displayProperty=fullName> Você deve criar uma sessão de rastreamento ETW usando o programa executável Logman.exe (ou algo semelhante) para gravar os eventos em um arquivo de log.       Não é necessário um manifesto para consumir eventos do ouvinte, porque os dados de evento são uma única cadeia de caracteres.       Quando você chama o <xref:System.Diagnostics.TraceSource?displayProperty=fullName>métodos para gravar eventos, você passa uma <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>valor de enumeração.</xref:System.Diagnostics.TraceEventType?displayProperty=fullName> </xref:System.Diagnostics.TraceSource?displayProperty=fullName> A enumeração contém valores nível e a palavra-chave. Quando você habilita um provedor de ouvinte de rastreamento de uma sessão do ETW, o valor do nível que você especificar pode ser o valor associado a um dos seguintes valores de enumeração <xref:System.Diagnostics.TraceEventType?displayProperty=fullName>: - crítico (o valor é 1) - erro (o valor é 2) - informações (o valor é 8) - Verbose (o valor é 16) - aviso (o valor é 4) o valor de palavra-chave que você especificar para a sessão pode ser o valor associado a um dos seguintes valores de enumeração <xref:System.Diagnostics.TraceEventType?displayProperty=fullName> :-Retomar (o valor é 2.048) - início (o valor é 256) - parar (o valor é 512) - Suspender (o valor é 1.024) - transferência (o valor é 4.096)</xref:System.Diagnostics.TraceEventType?displayProperty=fullName> </xref:System.Diagnostics.TraceEventType?displayProperty=fullName>"
  example:
  - "```  \nprivate static Guid providerId = new Guid(\"{B3F0C8FC-E8A8-4868-8901-1465E8A2F41B}\");  \n  \n    EventProviderTraceListener listener = new EventProviderTraceListener(providerId.ToString(), \"Test Listener\", \"::\");  \n  \n    // You should use the All default level and control the level using the  \n    // ETW session; otherwise, you may not log all the events requested by the  \n    // session.  \n    TraceSource source = new TraceSource(\"MyProvider\", SourceLevels.All);  \n  \n    source.Listeners.Add(listener);  \n  \n    source.TraceData(TraceEventType.Warning | TraceEventType.Start, 2, new object[] { \"abc\", \"def\", true, 123 });  \n  \n    source.TraceEvent(TraceEventType.Warning, 12, \"Provider guid: {0}\", new object[] { providerId });  \n  \n    source.TraceInformation(\"string {0}, bool {1}, int {2}, ushort {3}\", new object[] { \"abc\", false, 123, (UInt32)5 });  \n```"
  syntax:
    content: 'public class EventProviderTraceListener : System.Diagnostics.TraceListener'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.Diagnostics.TraceListener
  implements: []
  inheritedMembers:
  - System.Diagnostics.TraceListener.Attributes
  - System.Diagnostics.TraceListener.Dispose
  - System.Diagnostics.TraceListener.Dispose(System.Boolean)
  - System.Diagnostics.TraceListener.Fail(System.String)
  - System.Diagnostics.TraceListener.Filter
  - System.Diagnostics.TraceListener.IndentLevel
  - System.Diagnostics.TraceListener.IndentSize
  - System.Diagnostics.TraceListener.Name
  - System.Diagnostics.TraceListener.NeedIndent
  - System.Diagnostics.TraceListener.TraceOutputOptions
  - System.Diagnostics.TraceListener.Write(System.Object)
  - System.Diagnostics.TraceListener.Write(System.Object,System.String)
  - System.Diagnostics.TraceListener.Write(System.String,System.String)
  - System.Diagnostics.TraceListener.WriteIndent
  - System.Diagnostics.TraceListener.WriteLine(System.Object)
  - System.Diagnostics.TraceListener.WriteLine(System.Object,System.String)
  - System.Diagnostics.TraceListener.WriteLine(System.String,System.String)
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: EventProviderTraceListener(String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.Eventing.EventProviderTraceListener&quot;> </xref> classe usando o identificador do provedor especificado."
  syntax:
    content: public EventProviderTraceListener (string providerId);
    parameters:
    - id: providerId
      type: System.String
      description: "Uma cadeia de caracteres exclusiva <xref:System.Guid>que identifica o provedor.</xref:System.Guid>"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: EventProviderTraceListener(String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.Eventing.EventProviderTraceListener&quot;> </xref> classe usando o identificador do provedor especificado e o nome do ouvinte."
  syntax:
    content: public EventProviderTraceListener (string providerId, string name);
    parameters:
    - id: providerId
      type: System.String
      description: "Uma cadeia de caracteres exclusiva <xref:System.Guid>que identifica o provedor.</xref:System.Guid>"
    - id: name
      type: System.String
      description: "Nome do ouvinte."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: EventProviderTraceListener(String,String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String,String)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.Eventing.EventProviderTraceListener&quot;> </xref> classe usando o identificador de provedor especificado, o nome do ouvinte e delimitador."
  remarks: '-'
  syntax:
    content: public EventProviderTraceListener (string providerId, string name, string delimiter);
    parameters:
    - id: providerId
      type: System.String
      description: "Uma cadeia de caracteres exclusiva <xref:System.Guid>que identifica o provedor.</xref:System.Guid>"
    - id: name
      type: System.String
      description: "Nome do ouvinte."
    - id: delimiter
      type: System.String
      description: "Delimitador usado para delimitar os dados do evento. (Para obter mais detalhes, consulte o <xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*>propriedade.)</xref:System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*>"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Close
  id: Close
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Close()
  nameWithType: EventProviderTraceListener.Close()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Close()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Fecha o fluxo de saída para que ele não recebe a saída de rastreamento ou de depuração."
  syntax:
    content: public override void Close ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Close*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  id: Delimiter
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Delimiter
  nameWithType: EventProviderTraceListener.Delimiter
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Obtém e define o delimitador usado para delimitar os dados de evento que são gravados no subsistema ETW."
  remarks: "O ouvinte converte os elementos de dados em cadeias de caracteres e, em seguida, concatena as cadeias de caracteres, usando o delimitador especificado para delimitar a cada elemento de dados na cadeia de caracteres. A cadeia de caracteres é gravada como os dados de evento no subsistema ETW.       Para analisar com êxito a cadeia de caracteres, o consumidor deve saber o delimitador que foi usado.       Se os dados contêm uma cadeia de caracteres que pode conter uma vírgula, especifique um delimitador apropriado, para que os dados de evento podem ser analisados corretamente.       Não é necessário um manifesto para consumir eventos do ouvinte, porque os dados de evento são uma única cadeia de caracteres.       O delimitador aplica-se aos dados de evento escritos usando o <xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=fullName>método.</xref:System.Diagnostics.TraceSource.TraceData%2A?displayProperty=fullName>"
  syntax:
    content: public string Delimiter { get; set; }
    return:
      type: System.String
      description: "O delimitador usado para delimitar os dados do evento. O delimitador padrão é uma vírgula."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)
  id: Fail(System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Fail(String,String)
  nameWithType: EventProviderTraceListener.Fail(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(String,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Emite um erro de mensagem e uma mensagem de erro detalhada para o ouvinte criar quando você implementa o <xref href=&quot;System.Diagnostics.TraceListener&quot;> </xref> classe."
  syntax:
    content: public override void Fail (string message, string detailMessage);
    parameters:
    - id: message
      type: System.String
      description: "Uma mensagem de emissão."
    - id: detailMessage
      type: System.String
      description: "Uma mensagem detalhada de emissão."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Fail*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Flush
  id: Flush
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Flush()
  nameWithType: EventProviderTraceListener.Flush()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Flush()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Libera o buffer de saída."
  syntax:
    content: public override sealed void Flush ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes
  id: GetSupportedAttributes
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: GetSupportedAttributes()
  nameWithType: EventProviderTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Obtém os atributos personalizados que suporte o ouvinte de rastreamento."
  syntax:
    content: protected override string[] GetSupportedAttributes ();
    parameters: []
    return:
      type: System.String[]
      description: "Uma matriz de cadeia de caracteres, os atributos personalizados que suporte o ouvinte de rastreamento de nomenclatura ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhum atributo personalizado."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  id: IsThreadSafe
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: IsThreadSafe
  nameWithType: EventProviderTraceListener.IsThreadSafe
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  type: Property
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Obtém um valor que indica se o ouvinte de rastreamento é thread safe."
  syntax:
    content: public override sealed bool IsThreadSafe { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o ouvinte de rastreamento é thread-safe; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Grava o rastreamento de informações, informações de evento e do objeto de dados para a saída específica do ouvinte."
  syntax:
    content: public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Um <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objeto que contém o atual ID do processo, ID do thread e informações de rastreamento de pilha."
    - id: source
      type: System.String
      description: "Um nome usado para identificar a saída, normalmente o nome do aplicativo que gerou o evento de rastreamento."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uma da <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valores que especificam o tipo de evento que causou o rastreamento."
    - id: id
      type: System.Int32
      description: "Um identificador numérico para o evento."
    - id: data
      type: System.Object
      description: "Os dados de rastreamento para emitir."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  id: TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Grava o rastreamento de informações, informações de evento e do objeto de dados para a saída específica do ouvinte."
  syntax:
    content: public override sealed void TraceData (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, object[] data);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Um <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objeto que contém o atual ID do processo, ID do thread e informações de rastreamento de pilha."
    - id: source
      type: System.String
      description: "Um nome usado para identificar a saída, normalmente o nome do aplicativo que gerou o evento de rastreamento."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uma da <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valores que especificam o tipo de evento que causou o rastreamento."
    - id: id
      type: System.Int32
      description: "Um identificador numérico para o evento."
    - id: data
      type: System.Object[]
      description: "Uma matriz de objetos para a emissão de dados."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Informações gravações de rastreamento e eventos para a saída específica do ouvinte."
  syntax:
    content: public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Um <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objeto que contém o atual ID do processo, ID do thread e informações de rastreamento de pilha."
    - id: source
      type: System.String
      description: "Um nome usado para identificar a saída, normalmente o nome do aplicativo que gerou o evento de rastreamento."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uma da <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valores que especificam o tipo de evento que causou o rastreamento."
    - id: id
      type: System.Int32
      description: "Um identificador numérico para o evento."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Grava informações de uma mensagem e informações de evento para a saída específica do ouvinte de rastreamento."
  syntax:
    content: public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string message);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Um <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objeto que contém o atual ID do processo, ID do thread e informações de rastreamento de pilha."
    - id: source
      type: System.String
      description: "Um nome usado para identificar a saída, normalmente o nome do aplicativo que gerou o evento de rastreamento."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uma da <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valores que especificam o tipo de evento que causou o rastreamento."
    - id: id
      type: System.Int32
      description: "Um identificador numérico para o evento."
    - id: message
      type: System.String
      description: "Uma mensagem a ser gravada."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  id: TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Grava informações de rastreamento, uma matriz formatada de objetos e informações de evento para a saída específica do ouvinte."
  syntax:
    content: public override sealed void TraceEvent (System.Diagnostics.TraceEventCache eventCache, string source, System.Diagnostics.TraceEventType eventType, int id, string format, object[] args);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Um <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objeto que contém o atual ID do processo, ID do thread e informações de rastreamento de pilha."
    - id: source
      type: System.String
      description: "Um nome usado para identificar a saída, normalmente o nome do aplicativo que gerou o evento de rastreamento."
    - id: eventType
      type: System.Diagnostics.TraceEventType
      description: "Uma da <xref href=&quot;System.Diagnostics.TraceEventType&quot;> </xref> valores que especificam o tipo de evento que causou o rastreamento."
    - id: id
      type: System.Int32
      description: "Um identificador numérico para o evento."
    - id: format
      type: System.String
      description: "Uma cadeia de caracteres de formato que contém zero ou mais itens de formato, que correspondem aos objetos na `args` matriz."
    - id: args
      type: System.Object[]
      description: "Um <xref uid=&quot;langword_csharp_object&quot; name=&quot;object&quot; href=&quot;&quot;> </xref> matriz que contém zero ou mais objetos a serem formatados."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  id: TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Grava informações de rastreamento, uma mensagem, informações de identidade e eventos de atividade relacionada para a saída específica do ouvinte."
  syntax:
    content: public override sealed void TraceTransfer (System.Diagnostics.TraceEventCache eventCache, string source, int id, string message, Guid relatedActivityId);
    parameters:
    - id: eventCache
      type: System.Diagnostics.TraceEventCache
      description: "Um <xref href=&quot;System.Diagnostics.TraceEventCache&quot;> </xref> objeto que contém o atual ID do processo, ID do thread e informações de rastreamento de pilha."
    - id: source
      type: System.String
      description: "Um nome usado para identificar a saída, normalmente o nome do aplicativo que gerou o evento de rastreamento."
    - id: id
      type: System.Int32
      description: "Um identificador numérico para o evento."
    - id: message
      type: System.String
      description: "Uma mensagem a ser gravada."
    - id: relatedActivityId
      type: System.Guid
      description: "Um <xref:System.Guid>objeto identificando uma atividade relacionada.</xref:System.Guid>"
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)
  id: Write(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: Write(String)
  nameWithType: EventProviderTraceListener.Write(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Write(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Quando substituído em uma classe derivada, grava a mensagem especificada para o ouvinte que você criar na classe derivada."
  syntax:
    content: public override sealed void Write (string message);
    parameters:
    - id: message
      type: System.String
      description: "Uma mensagem a ser gravada."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.Write*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)
  id: WriteLine(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  langs:
  - csharp
  name: WriteLine(String)
  nameWithType: EventProviderTraceListener.WriteLine(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Quando substituído em uma classe derivada, grava uma mensagem para o ouvinte que você criar na classe derivada, seguido por um terminador de linha."
  syntax:
    content: public override sealed void WriteLine (string message);
    parameters:
    - id: message
      type: System.String
      description: "Uma mensagem a ser gravada."
  overload: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Diagnostics.TraceListener
  isExternal: false
  name: System.Diagnostics.TraceListener
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener(String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener(String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor(System.String,System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener(String,String,String)
  nameWithType: EventProviderTraceListener.EventProviderTraceListener(String,String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.EventProviderTraceListener(String,String,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Close
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Close()
  nameWithType: EventProviderTraceListener.Close()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Close()
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: EventProviderTraceListener.Delimiter
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(System.String,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Fail(String,String)
  nameWithType: EventProviderTraceListener.Fail(String,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Fail(String,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Flush
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Flush()
  nameWithType: EventProviderTraceListener.Flush()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Flush()
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: GetSupportedAttributes()
  nameWithType: EventProviderTraceListener.GetSupportedAttributes()
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes()
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: EventProviderTraceListener.IsThreadSafe
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object)
- uid: System.Diagnostics.TraceEventCache
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventCache
  nameWithType: TraceEventCache
  fullName: System.Diagnostics.TraceEventCache
- uid: System.Diagnostics.TraceEventType
  parent: System.Diagnostics
  isExternal: false
  name: TraceEventType
  nameWithType: TraceEventType
  fullName: System.Diagnostics.TraceEventType
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  nameWithType: EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData(TraceEventCache,String,TraceEventType,Int32,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(System.Diagnostics.TraceEventCache,System.String,System.Diagnostics.TraceEventType,System.Int32,System.String,System.Object[])
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  nameWithType: EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent(TraceEventCache,String,TraceEventType,Int32,String,Object[])
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(System.Diagnostics.TraceEventCache,System.String,System.Int32,System.String,System.Guid)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  nameWithType: EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer(TraceEventCache,String,Int32,String,Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Write(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Write(String)
  nameWithType: EventProviderTraceListener.Write(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.Write(String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(System.String)
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: WriteLine(String)
  nameWithType: EventProviderTraceListener.WriteLine(String)
  fullName: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine(String)
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.#ctor*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: EventProviderTraceListener
  nameWithType: EventProviderTraceListener.EventProviderTraceListener
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Close*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Close
  nameWithType: EventProviderTraceListener.Close
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Delimiter*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Delimiter
  nameWithType: EventProviderTraceListener.Delimiter
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Fail*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Fail
  nameWithType: EventProviderTraceListener.Fail
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Flush*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Flush
  nameWithType: EventProviderTraceListener.Flush
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.GetSupportedAttributes*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: GetSupportedAttributes
  nameWithType: EventProviderTraceListener.GetSupportedAttributes
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.IsThreadSafe*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: IsThreadSafe
  nameWithType: EventProviderTraceListener.IsThreadSafe
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceData*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceData
  nameWithType: EventProviderTraceListener.TraceData
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceEvent*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceEvent
  nameWithType: EventProviderTraceListener.TraceEvent
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.TraceTransfer*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: TraceTransfer
  nameWithType: EventProviderTraceListener.TraceTransfer
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.Write*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: Write
  nameWithType: EventProviderTraceListener.Write
- uid: System.Diagnostics.Eventing.EventProviderTraceListener.WriteLine*
  parent: System.Diagnostics.Eventing.EventProviderTraceListener
  isExternal: false
  name: WriteLine
  nameWithType: EventProviderTraceListener.WriteLine
