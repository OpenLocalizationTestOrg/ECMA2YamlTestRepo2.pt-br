### YamlMime:ManagedReference
items:
- uid: System.Activities.Hosting.WorkflowInstance
  id: WorkflowInstance
  children:
  - System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)
  - System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  - System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.Controller
  - System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  - System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  - System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  - System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.Hosting.WorkflowInstance.GetExtension``1
  - System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  - System.Activities.Hosting.WorkflowInstance.HostEnvironment
  - System.Activities.Hosting.WorkflowInstance.Id
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  - System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  - System.Activities.Hosting.WorkflowInstance.IsReadOnly
  - System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  - System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)
  - System.Activities.Hosting.WorkflowInstance.OnNotifyPaused
  - System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  - System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)
  - System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  - System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  - System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  - System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  - System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  langs:
  - csharp
  name: WorkflowInstance
  nameWithType: WorkflowInstance
  fullName: System.Activities.Hosting.WorkflowInstance
  type: Class
  summary: "WorkflowInstance é um tempo de execução por instância leve, para executar um programa de fluxo de trabalho. Ela pode ser construída para criar uma nova instância de fluxo de trabalho ou de estado da instância existente. As APIs que <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>expõe é o conjunto mínimo de controles de tempo de execução do qual as operações de nível superior podem ser implementadas.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> Esse conjunto de APIs representa a amplitude inteira da funcionalidade de tempo de execução. WorkflowInstance é uma classe abstrata e se baseia na implementação do host de seus métodos abstratos para fornecer funcionalidade de host, como sincronização, persistência, acompanhamento e extensões."
  remarks: "WorkflowInstance é single threaded e supõe que o host sincroniza todo o acesso a ele. Uma tentativa de chamar APIs vários simultaneamente resultará em um <xref:System.InvalidOperationException>que está sendo gerada.</xref:System.InvalidOperationException>       Internamente, uma WorkflowInstance tem dois estados: em execução e em pausa. A única maneira de fazer com que o tempo de execução para fazer a transição de pausa a execução é chamar <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> Todas as ações (exceto Pausar) só podem ser feitas enquanto o tempo de execução está em pausa. O tempo de execução será se tornam espontaneamente pausado nas seguintes situações:-Ocorreu um erro fatal no tempo de execução. O host será sinalizado por meio de <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>(que não indica uma transição para pausado) e, em seguida, é notificado por meio de <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> </xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>      -Uma exceção no fluxo de trabalho foi não identificada e escape raiz. O host será notificado por meio de <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A>método.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException%2A>      -O Agendador está sem itens de trabalho e agora é <xref:System.Activities.Hosting.WorkflowInstanceState>.</xref:System.Activities.Hosting.WorkflowInstanceState> O host será notificado por meio de <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>método.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> Observe que o Agendador pode ter ficado sem itens de trabalho porque a instância estiver ociosa ou porque a instância seja concluída. O <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>valor o <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>propriedade pode ser usada para diferenciar entre os dois.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>       O host pode solicitar uma alteração de executando para pausada chamando o <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A>ou <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A>métodos da <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>instância retornada pelo <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>propriedade.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.PauseWhenPersistable%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> Esta solicitação não deve ser considerada para uma resposta específica, que significa que o host não deve tentar correlacionar uma OnNotify* ou <xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A>com uma chamada específica para pausar.</xref:System.Activities.Hosting.WorkflowInstance.OnRequestAbort%2A> Em resposta a uma solicitação de pausa, o tempo de execução pode fazer a transição para pausado e chamada <xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A>enquanto o Agendador ainda tem itens de trabalho pendentes.</xref:System.Activities.Hosting.WorkflowInstance.OnNotifyPaused%2A> O <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>valor o <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>propriedade pode ser usada para determinar se o Agendador não tem não mais trabalho ou foi interrompido por uma solicitação para pausar.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.State%2A>       O <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A>método o <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>instância retornada pelo <xref:System.Activities.Hosting.WorkflowInstance.Controller%2A>propriedade é o único método que pode ser chamado enquanto o WorkflowInstance está no estado executando.</xref:System.Activities.Hosting.WorkflowInstance.Controller%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.RequestPause%2A> Todos os outros métodos lançará um <xref:System.InvalidOperationException>se for chamado. Dadas as regras para como WorkflowInstance faz a transição de um estado para outro, a noção de pública de execução e em pausa pode ser definida da seguinte maneira: - em execução – o estado entre uma chamada para <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>e o próximo WorkflowInstance.OnNotify*.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> </xref:System.InvalidOperationException>      -O estado entre a última WorkflowInstance.OnNotify* e a próxima chamada para <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A>.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Run%2A> pausado –"
  syntax:
    content: public abstract class WorkflowInstance
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)
  id: '#ctor(System.Activities.Activity)'
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: WorkflowInstance(Activity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref> classe com a definição de fluxo de trabalho especificado."
  syntax:
    content: protected WorkflowInstance (System.Activities.Activity workflowDefinition);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "A atividade que define o fluxo de trabalho."
  overload: System.Activities.Hosting.WorkflowInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  id: '#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)'
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: WorkflowInstance(Activity,WorkflowIdentity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref> classe com a definição de fluxo de trabalho especificado e a identidade de definição."
  syntax:
    content: protected WorkflowInstance (System.Activities.Activity workflowDefinition, System.Activities.WorkflowIdentity definitionIdentity);
    parameters:
    - id: workflowDefinition
      type: System.Activities.Activity
      description: "A atividade que define o fluxo de trabalho."
    - id: definitionIdentity
      type: System.Activities.WorkflowIdentity
      description: "A identidade de definição."
  overload: System.Activities.Hosting.WorkflowInstance.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para iniciar o envio pendente registros de rastreamento para os participantes de rastreamento assincronamente."
  syntax:
    content: protected IAsyncResult BeginFlushTrackingRecords (TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "O período de tempo após o qual a tentativa de anular."
    - id: callback
      type: System.AsyncCallback
      description: "O método a ser chamado quando a operação de controle foi concluída."
    - id: state
      type: System.Object
      description: "As informações sobre a operação assíncrona."
    return:
      type: System.IAsyncResult
      description: "O status da operação atual de controle."
  overload: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Controller
  id: Controller
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Controller
  nameWithType: WorkflowInstance.Controller
  fullName: System.Activities.Hosting.WorkflowInstance.Controller
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Obtém o <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>instância para este <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref>.</xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>"
  syntax:
    content: protected System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl Controller { get; }
    return:
      type: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
      description: "A instância de controlador para essa instância de fluxo de trabalho."
  overload: System.Activities.Hosting.WorkflowInstance.Controller*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  id: DefinitionIdentity
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: DefinitionIdentity
  nameWithType: WorkflowInstance.DefinitionIdentity
  fullName: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Obtém ou define a identidade de definição de <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref>."
  syntax:
    content: public System.Activities.WorkflowIdentity DefinitionIdentity { get; }
    return:
      type: System.Activities.WorkflowIdentity
      description: "A identidade de definição de <xref href=&quot;System.Activities.Hosting.WorkflowInstance&quot;> </xref>."
  overload: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  id: DisposeExtensions
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: DisposeExtensions()
  nameWithType: WorkflowInstance.DisposeExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.DisposeExtensions()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chama <xref:System.Disposable.Dispose*>em todas as extensões que implementam <xref:System.IDisposable>.</xref:System.IDisposable> </xref:System.Disposable.Dispose*>"
  syntax:
    content: protected void DisposeExtensions ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.DisposeExtensions*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  id: EndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: EndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para encerrar a operação de controle."
  syntax:
    content: protected void EndFlushTrackingRecords (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O status da operação assíncrona do controle."
  overload: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  id: FlushTrackingRecords(System.TimeSpan)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: FlushTrackingRecords(TimeSpan)
  nameWithType: WorkflowInstance.FlushTrackingRecords(TimeSpan)
  fullName: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para enviar pendentes registros de rastreamento para os participantes de rastreamento."
  syntax:
    content: protected void FlushTrackingRecords (TimeSpan timeout);
    parameters:
    - id: timeout
      type: System.TimeSpan
      description: "O período de tempo após o qual a tentativa de anular."
  overload: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  id: GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Recupera a lista de atividade que está bloqueando a atualização do fluxo de trabalho."
  syntax:
    content: protected static System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate> GetActivitiesBlockingUpdate (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);
    parameters:
    - id: deserializedRuntimeState
      type: System.Object
      description: "O estado de tempo de execução desserializado."
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "O mapa de atualização."
    return:
      type: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}
      description: "A lista de atividade que está bloqueando a atualização."
  overload: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.GetExtension``1
  id: GetExtension``1
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: GetExtension()
  nameWithType: WorkflowInstance.GetExtension()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtension()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: 'protected T GetExtension<T> () where T : class;'
    parameters: []
    return:
      type: T
      description: "A ser adicionado."
  overload: System.Activities.Hosting.WorkflowInstance.GetExtension<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  id: GetExtensions``1
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: GetExtensions()
  nameWithType: WorkflowInstance.GetExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtensions()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  syntax:
    content: 'protected System.Collections.Generic.IEnumerable<T> GetExtensions<T> () where T : class;'
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{T}
      description: "A ser adicionado."
  overload: System.Activities.Hosting.WorkflowInstance.GetExtensions<T>*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment
  id: HostEnvironment
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: HostEnvironment
  nameWithType: WorkflowInstance.HostEnvironment
  fullName: System.Activities.Hosting.WorkflowInstance.HostEnvironment
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Obtém ou define o ambiente de raiz para a instância de fluxo de trabalho argumentos e variáveis."
  remarks: "Se essa propriedade é definida depois que a instância de fluxo de trabalho é inicializada e <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>retorna `true`, uma <xref:System.InvalidOperationException>é gerada.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>"
  syntax:
    content: public System.Activities.LocationReferenceEnvironment HostEnvironment { get; set; }
    return:
      type: System.Activities.LocationReferenceEnvironment
      description: "O ambiente de raiz para a instância de fluxo de trabalho argumentos e variáveis."
  overload: System.Activities.Hosting.WorkflowInstance.HostEnvironment*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Id
  id: Id
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Id
  nameWithType: WorkflowInstance.Id
  fullName: System.Activities.Hosting.WorkflowInstance.Id
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Obtém o identificador exclusivo para a instância de fluxo de trabalho."
  syntax:
    content: public abstract Guid Id { get; }
    return:
      type: System.Guid
      description: "O identificador exclusivo para a instância de fluxo de trabalho."
  overload: System.Activities.Hosting.WorkflowInstance.Id*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  id: Initialize(System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Initialize(Object)
  nameWithType: WorkflowInstance.Initialize(Object)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo host a inicializar a instância de fluxo de trabalho com o estado de tempo de execução do fluxo de trabalho."
  syntax:
    content: protected void Initialize (object deserializedRuntimeState);
    parameters:
    - id: deserializedRuntimeState
      type: System.Object
      description: "O estado de tempo de execução usado para executar o fluxo de trabalho."
  overload: System.Activities.Hosting.WorkflowInstance.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  id: Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Initialize(IDictionary<String,Object>,IList<Handle>)
  nameWithType: WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo host a inicializar a instância de fluxo de trabalho com os valores de argumento e propriedades de execução."
  syntax:
    content: protected void Initialize (System.Collections.Generic.IDictionary<string,object> workflowArgumentValues, System.Collections.Generic.IList<System.Activities.Handle> workflowExecutionProperties);
    parameters:
    - id: workflowArgumentValues
      type: System.Collections.Generic.IDictionary{System.String,System.Object}
      description: "Os parâmetros de entrada para o fluxo de trabalho, chaveado segundo o nome do argumento."
    - id: workflowExecutionProperties
      type: System.Collections.Generic.IList{System.Activities.Handle}
      description: "A lista de propriedades de execução de fluxo de trabalho."
  overload: System.Activities.Hosting.WorkflowInstance.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  id: Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: Initialize(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.Initialize(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object,DynamicUpdateMap)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo host a inicializar a instância de fluxo de trabalho com o estado de tempo de execução do fluxo de trabalho e atualizar o mapa."
  syntax:
    content: protected void Initialize (object deserializedRuntimeState, System.Activities.DynamicUpdate.DynamicUpdateMap updateMap);
    parameters:
    - id: deserializedRuntimeState
      type: System.Object
      description: "O estado de tempo de execução usado para executar o fluxo de trabalho."
    - id: updateMap
      type: System.Activities.DynamicUpdate.DynamicUpdateMap
      description: "O mapa de atualização."
  overload: System.Activities.Hosting.WorkflowInstance.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly
  id: IsReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: IsReadOnly
  nameWithType: WorkflowInstance.IsReadOnly
  fullName: System.Activities.Hosting.WorkflowInstance.IsReadOnly
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Obtém um valor que indica se a instância de fluxo de trabalho foi inicializada."
  syntax:
    content: protected bool IsReadOnly { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a instância de fluxo de trabalho tiver sido inicializada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Activities.Hosting.WorkflowInstance.IsReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  id: OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para notificar o host que novas chaves de instância devem ser associadas esta instância."
  syntax:
    content: protected abstract IAsyncResult OnBeginAssociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys, AsyncCallback callback, object state);
    parameters:
    - id: keys
      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
      description: "As chaves de instância para associar a esta instância de fluxo de trabalho."
    - id: callback
      type: System.AsyncCallback
      description: "O método a ser chamado quando a operação for concluída."
    - id: state
      type: System.Object
      description: "Um objeto específico do aplicativo opcional que contém informações sobre a operação assíncrona."
    return:
      type: System.IAsyncResult
      description: "Uma referência para o assíncrona associar a operação de chaves."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  id: OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginFlushTrackingRecords(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamada assíncrona para solicitar que o host ao liberar pendentes registros de rastreamento para os participantes de rastreamento."
  syntax:
    content: protected virtual IAsyncResult OnBeginFlushTrackingRecords (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "O método a ser chamado quando a operação de controle foi concluída."
    - id: state
      type: System.Object
      description: "As informações sobre a operação assíncrona."
    return:
      type: System.IAsyncResult
      description: "O status da operação atual de controle."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)
  id: OnBeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamada assíncrona para solicitar que o host para manter o fluxo de trabalho."
  syntax:
    content: protected abstract IAsyncResult OnBeginPersist (AsyncCallback callback, object state);
    parameters:
    - id: callback
      type: System.AsyncCallback
      description: "O método a ser chamado quando a operação de persistência foi concluída."
    - id: state
      type: System.Object
      description: "Um objeto específico do aplicativo opcional que contém informações sobre a operação assíncrona."
    return:
      type: System.IAsyncResult
      description: "Uma referência ao atual mantêm a operação."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  id: OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para notificar o host que uma operação de indicador de continuação está começando."
  syntax:
    content: protected abstract IAsyncResult OnBeginResumeBookmark (System.Activities.Bookmark bookmark, object value, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: bookmark
      type: System.Activities.Bookmark
      description: "O indicador para continuar."
    - id: value
      type: System.Object
      description: "Os dados a serem passados para a atividade que criou o <xref href=&quot;System.Activities.Bookmark&quot;> </xref>."
    - id: timeout
      type: System.TimeSpan
      description: "O intervalo no qual a operação de retomada deve concluir antes da operação será cancelada e um <xref:System.TimeoutException>é gerada.</xref:System.TimeoutException>"
    - id: callback
      type: System.AsyncCallback
      description: "O método a ser chamado quando a operação de retomada foi concluída."
    - id: state
      type: System.Object
      description: "Um objeto específico do aplicativo opcional que contém informações sobre a operação assíncrona."
    return:
      type: System.IAsyncResult
      description: "Uma referência para a operação de retomada assíncrona."
  overload: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  id: OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnDisassociateKeys(ICollection<InstanceKey>)
  nameWithType: WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
  fullName: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para notificar o host que um determinado conjunto de chaves de instância não deve ser associado esta instância."
  syntax:
    content: protected abstract void OnDisassociateKeys (System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey> keys);
    parameters:
    - id: keys
      type: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
      description: "A lista de chaves para desassociar."
  overload: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)
  id: OnEndAssociateKeys(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndAssociateKeys(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para notificar o host que uma operação de associação de chaves foi concluída."
  syntax:
    content: protected abstract void OnEndAssociateKeys (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A referência ao assíncrona associar a operação de chaves."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  id: OnEndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para notificar o host quando a limpeza de registros de operação de rastreamento é concluída."
  syntax:
    content: protected virtual void OnEndFlushTrackingRecords (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O status da limpeza assíncrona de operação de registros de rastreamento."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)
  id: OnEndPersist(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndPersist(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndPersist(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndPersist(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para notificar o host que uma operação de persistência foi concluída."
  syntax:
    content: protected abstract void OnEndPersist (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A referência ao assíncrona mantêm a operação."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndPersist*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)
  id: OnEndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnEndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para notificar o host que uma operação de indicador de continuação foi concluída."
  syntax:
    content: protected abstract System.Activities.BookmarkResumptionResult OnEndResumeBookmark (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "A referência para a operação de indicador de retomada assíncrona."
    return:
      type: System.Activities.BookmarkResumptionResult
      description: "Um dos valores de enumeração que indica o resultado de uma <xref href=&quot;System.Activities.Bookmark&quot;> </xref> retomar a operação."
  overload: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused
  id: OnNotifyPaused
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnNotifyPaused()
  nameWithType: WorkflowInstance.OnNotifyPaused()
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para notificar o host em que a instância de fluxo de trabalho tiver feito a transição do estado de execução para o estado de pausa."
  syntax:
    content: protected abstract void OnNotifyPaused ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  id: OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnNotifyUnhandledException(Exception,Activity,String)
  nameWithType: WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para notificar o host que ocorreu uma exceção sem tratamento na instância de fluxo de trabalho."
  syntax:
    content: protected abstract void OnNotifyUnhandledException (Exception exception, System.Activities.Activity source, string sourceInstanceId);
    parameters:
    - id: exception
      type: System.Exception
      description: "A exceção sem tratamento."
    - id: source
      type: System.Activities.Activity
      description: "A atividade que lançou a exceção."
    - id: sourceInstanceId
      type: System.String
      description: "O identificador exclusivo do <xref href=&quot;System.Activities.ActivityInstance&quot;> </xref> que representa a atividade que lançou a exceção."
  overload: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)
  id: OnRequestAbort(System.Exception)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: OnRequestAbort(Exception)
  nameWithType: WorkflowInstance.OnRequestAbort(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(Exception)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo tempo de execução de fluxo de trabalho para notificar o host que uma operação de anulação foi solicitada para a instância de fluxo de trabalho."
  remarks: "Uma vez OnRequestAbort é chamado, a maioria das <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl>APIs exceto <xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A>lançará um <xref:System.InvalidOperationException>.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl.Abort%2A> </xref:System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl> É esperado que depois OnRequestAbort é chamado de um host será tendência em direção a um estado em que ele pode atender a anulação."
  syntax:
    content: protected abstract void OnRequestAbort (Exception reason);
    parameters:
    - id: reason
      type: System.Exception
      description: "O motivo para anular a instância de fluxo de trabalho."
  overload: System.Activities.Hosting.WorkflowInstance.OnRequestAbort*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  id: RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: RegisterExtensionManager(WorkflowInstanceExtensionManager)
  nameWithType: WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
  fullName: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Chamado pelo host para registrar o Gerenciador de extensão especificada, validar todas as necessárias extensões estão presentes e inicializar a coleção de extensões a ser usado."
  remarks: "As extensões são criptografadas pelo tipo e um host fornecido extensão sempre será usada se fornecido. Extensões adicionadas por meio de <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A>usar o tipo de tempo de execução do objeto como a chave de tipo.</xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> Provedores de extensões adicionadas por meio de <xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A>usar o tipo T decared do Func\\<T > como a chave de tipo.</xref:System.Activities.Hosting.WorkflowInstanceExtensionManager.Add%2A> Provedores de extensão da contribuição atividades através de vários métodos *ActivityMetadata.AddDefaultExtensionProvider serão descartadas se existe uma extensão de host para o tipo declarado ou se há um tipo mais amplo fornecido por meio de AddDefaultExtensionProvider (ex. Se Func\\<StreamWriter > é fornecido e Func\\<TextWriter > for fornecido, apenas Func\\<StreamWriter > serão mantidas). Se uma extensão não existe na coleção que é exigida por uma atividade (expresso chamando \\*ActivityMetadata.RequireExtension) um <xref:System.Activities.ValidationException>é gerada.</xref:System.Activities.ValidationException>"
  syntax:
    content: protected void RegisterExtensionManager (System.Activities.Hosting.WorkflowInstanceExtensionManager extensionManager);
    parameters:
    - id: extensionManager
      type: System.Activities.Hosting.WorkflowInstanceExtensionManager
      description: "O Gerenciador de extensões para registrar."
  overload: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  id: SupportsInstanceKeys
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: SupportsInstanceKeys
  nameWithType: WorkflowInstance.SupportsInstanceKeys
  fullName: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Obtém um valor que indica se o host oferece suporte a associação de <xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>com uma instância de tempo de execução.</xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>"
  syntax:
    content: protected abstract bool SupportsInstanceKeys { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o host der suporte a associação de <xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>com uma instância de fluxo de trabalho; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Runtime.Persistence.InstanceView.InstanceKeys*>"
  overload: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  id: SynchronizationContext
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: SynchronizationContext
  nameWithType: WorkflowInstance.SynchronizationContext
  fullName: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Obtém ou define o <xref:System.Threading.SynchronizationContext>usado para agendar a instância de fluxo de trabalho.</xref:System.Threading.SynchronizationContext>"
  remarks: "Se essa propriedade é definida depois que a instância de fluxo de trabalho é inicializada e <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>retorna `true`, uma <xref:System.InvalidOperationException>é gerada.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>"
  syntax:
    content: public System.Threading.SynchronizationContext SynchronizationContext { get; set; }
    return:
      type: System.Threading.SynchronizationContext
      description: "O contexto de sincronização usado para a instância de fluxo de trabalho de agendamento."
  overload: System.Activities.Hosting.WorkflowInstance.SynchronizationContext*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  id: ThrowIfReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: ThrowIfReadOnly()
  nameWithType: WorkflowInstance.ThrowIfReadOnly()
  fullName: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly()
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Gera um <xref:System.InvalidOperationException>se a instância de fluxo de trabalho tiver sido inicializado, conforme determinado pelo <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly*>.</xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly*> </xref:System.InvalidOperationException>"
  remarks: "Se <xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>retorna `true`, então um <xref:System.InvalidOperationException>é gerada.</xref:System.InvalidOperationException> </xref:System.Activities.Hosting.WorkflowInstance.IsReadOnly%2A>"
  syntax:
    content: protected void ThrowIfReadOnly ();
    parameters: []
  overload: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  id: WorkflowDefinition
  parent: System.Activities.Hosting.WorkflowInstance
  langs:
  - csharp
  name: WorkflowDefinition
  nameWithType: WorkflowInstance.WorkflowDefinition
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Hosting
  summary: "Obtém a definição de fluxo de trabalho da instância do fluxo de trabalho."
  syntax:
    content: public System.Activities.Activity WorkflowDefinition { get; }
    return:
      type: System.Activities.Activity
      description: "A definição de fluxo de trabalho da instância do fluxo de trabalho."
  overload: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowInstance(Activity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity)
- uid: System.Activities.Activity
  parent: System.Activities
  isExternal: false
  name: Activity
  nameWithType: Activity
  fullName: System.Activities.Activity
- uid: System.Activities.Hosting.WorkflowInstance.#ctor(System.Activities.Activity,System.Activities.WorkflowIdentity)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowInstance(Activity,WorkflowIdentity)
  nameWithType: WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowInstance(Activity,WorkflowIdentity)
- uid: System.Activities.WorkflowIdentity
  parent: System.Activities
  isExternal: false
  name: WorkflowIdentity
  nameWithType: WorkflowIdentity
  fullName: System.Activities.WorkflowIdentity
- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords(TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Activities.Hosting.WorkflowInstance.Controller
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Controller
  nameWithType: WorkflowInstance.Controller
  fullName: System.Activities.Hosting.WorkflowInstance.Controller
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowInstanceControl
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstance+WorkflowInstanceControl
  nameWithType: WorkflowInstance+WorkflowInstanceControl
  fullName: System.Activities.Hosting.WorkflowInstance+WorkflowInstanceControl
- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DefinitionIdentity
  nameWithType: WorkflowInstance.DefinitionIdentity
  fullName: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity
- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DisposeExtensions()
  nameWithType: WorkflowInstance.DisposeExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.DisposeExtensions()
- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: EndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(System.TimeSpan)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: FlushTrackingRecords(TimeSpan)
  nameWithType: WorkflowInstance.FlushTrackingRecords(TimeSpan)
  fullName: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords(TimeSpan)
- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate(Object,DynamicUpdateMap)
- uid: System.Collections.Generic.IList{System.Activities.DynamicUpdate.ActivityBlockingUpdate}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<ActivityBlockingUpdate>
  nameWithType: IList<ActivityBlockingUpdate>
  fullName: System.Collections.Generic.IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Activities.DynamicUpdate.ActivityBlockingUpdate>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.DynamicUpdate.ActivityBlockingUpdate
    name: ActivityBlockingUpdate
    nameWithType: ActivityBlockingUpdate
    fullName: ActivityBlockingUpdate
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.DynamicUpdate.DynamicUpdateMap
  parent: System.Activities.DynamicUpdate
  isExternal: false
  name: DynamicUpdateMap
  nameWithType: DynamicUpdateMap
  fullName: System.Activities.DynamicUpdate.DynamicUpdateMap
- uid: System.Activities.Hosting.WorkflowInstance.GetExtension``1
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtension()
  nameWithType: WorkflowInstance.GetExtension()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtension()
- uid: T
  isExternal: true
  name: T
  nameWithType: T
  fullName: T
- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions``1
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtensions()
  nameWithType: WorkflowInstance.GetExtensions()
  fullName: System.Activities.Hosting.WorkflowInstance.GetExtensions()
- uid: System.Collections.Generic.IEnumerable{T}
  parent: System.Collections.Generic
  isExternal: true
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    nameWithType: IEnumerable
    fullName: IEnumerable<T>
  - name: <
    nameWithType: <
    fullName: <
  - uid: T
    name: T
    nameWithType: T
    fullName: T
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: HostEnvironment
  nameWithType: WorkflowInstance.HostEnvironment
  fullName: System.Activities.Hosting.WorkflowInstance.HostEnvironment
- uid: System.Activities.LocationReferenceEnvironment
  parent: System.Activities
  isExternal: false
  name: LocationReferenceEnvironment
  nameWithType: LocationReferenceEnvironment
  fullName: System.Activities.LocationReferenceEnvironment
- uid: System.Activities.Hosting.WorkflowInstance.Id
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Id
  nameWithType: WorkflowInstance.Id
  fullName: System.Activities.Hosting.WorkflowInstance.Id
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize(Object)
  nameWithType: WorkflowInstance.Initialize(Object)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object)
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Collections.Generic.IDictionary{System.String,System.Object},System.Collections.Generic.IList{System.Activities.Handle})
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize(IDictionary<String,Object>,IList<Handle>)
  nameWithType: WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(IDictionary<String,Object>,IList<Handle>)
- uid: System.Collections.Generic.IDictionary{System.String,System.Object}
  parent: System.Collections.Generic
  isExternal: true
  name: IDictionary<String,Object>
  nameWithType: IDictionary<String,Object>
  fullName: System.Collections.Generic.IDictionary<System.String,System.Object>
  spec.csharp:
  - uid: System.Collections.Generic.IDictionary`2
    name: IDictionary
    nameWithType: IDictionary
    fullName: IDictionary<System.String,System.Object>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Collections.Generic.IList{System.Activities.Handle}
  parent: System.Collections.Generic
  isExternal: true
  name: IList<Handle>
  nameWithType: IList<Handle>
  fullName: System.Collections.Generic.IList<System.Activities.Handle>
  spec.csharp:
  - uid: System.Collections.Generic.IList`1
    name: IList
    nameWithType: IList
    fullName: IList<System.Activities.Handle>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Activities.Handle
    name: Handle
    nameWithType: Handle
    fullName: Handle
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.Initialize(System.Object,System.Activities.DynamicUpdate.DynamicUpdateMap)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize(Object,DynamicUpdateMap)
  nameWithType: WorkflowInstance.Initialize(Object,DynamicUpdateMap)
  fullName: System.Activities.Hosting.WorkflowInstance.Initialize(Object,DynamicUpdateMap)
- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: IsReadOnly
  nameWithType: WorkflowInstance.IsReadOnly
  fullName: System.Activities.Hosting.WorkflowInstance.IsReadOnly
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey},System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys(ICollection<InstanceKey>,AsyncCallback,Object)
- uid: System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey}
  parent: System.Collections.Generic
  isExternal: true
  name: ICollection<InstanceKey>
  nameWithType: ICollection<InstanceKey>
  fullName: System.Collections.Generic.ICollection<System.Runtime.DurableInstancing.InstanceKey>
  spec.csharp:
  - uid: System.Collections.Generic.ICollection`1
    name: ICollection
    nameWithType: ICollection
    fullName: ICollection<System.Runtime.DurableInstancing.InstanceKey>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Runtime.DurableInstancing.InstanceKey
    name: InstanceKey
    nameWithType: InstanceKey
    fullName: InstanceKey
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginFlushTrackingRecords(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords(AsyncCallback,Object)
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginPersist(AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginPersist(AsyncCallback,Object)
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(System.Activities.Bookmark,System.Object,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  nameWithType: WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark(Bookmark,Object,TimeSpan,AsyncCallback,Object)
- uid: System.Activities.Bookmark
  parent: System.Activities
  isExternal: false
  name: Bookmark
  nameWithType: Bookmark
  fullName: System.Activities.Bookmark
- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(System.Collections.Generic.ICollection{System.Runtime.DurableInstancing.InstanceKey})
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnDisassociateKeys(ICollection<InstanceKey>)
  nameWithType: WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
  fullName: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys(ICollection<InstanceKey>)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndAssociateKeys(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndFlushTrackingRecords(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndPersist(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndPersist(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndPersist(IAsyncResult)
- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(System.IAsyncResult)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndResumeBookmark(IAsyncResult)
  nameWithType: WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
  fullName: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark(IAsyncResult)
- uid: System.Activities.BookmarkResumptionResult
  parent: System.Activities
  isExternal: false
  name: BookmarkResumptionResult
  nameWithType: BookmarkResumptionResult
  fullName: System.Activities.BookmarkResumptionResult
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyPaused()
  nameWithType: WorkflowInstance.OnNotifyPaused()
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused()
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(System.Exception,System.Activities.Activity,System.String)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyUnhandledException(Exception,Activity,String)
  nameWithType: WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
  fullName: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException(Exception,Activity,String)
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(System.Exception)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnRequestAbort(Exception)
  nameWithType: WorkflowInstance.OnRequestAbort(Exception)
  fullName: System.Activities.Hosting.WorkflowInstance.OnRequestAbort(Exception)
- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(System.Activities.Hosting.WorkflowInstanceExtensionManager)
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: RegisterExtensionManager(WorkflowInstanceExtensionManager)
  nameWithType: WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
  fullName: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager(WorkflowInstanceExtensionManager)
- uid: System.Activities.Hosting.WorkflowInstanceExtensionManager
  parent: System.Activities.Hosting
  isExternal: false
  name: WorkflowInstanceExtensionManager
  nameWithType: WorkflowInstanceExtensionManager
  fullName: System.Activities.Hosting.WorkflowInstanceExtensionManager
- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SupportsInstanceKeys
  nameWithType: WorkflowInstance.SupportsInstanceKeys
  fullName: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys
- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SynchronizationContext
  nameWithType: WorkflowInstance.SynchronizationContext
  fullName: System.Activities.Hosting.WorkflowInstance.SynchronizationContext
- uid: System.Threading.SynchronizationContext
  parent: System.Threading
  isExternal: true
  name: SynchronizationContext
  nameWithType: SynchronizationContext
  fullName: System.Threading.SynchronizationContext
- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: ThrowIfReadOnly()
  nameWithType: WorkflowInstance.ThrowIfReadOnly()
  fullName: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly()
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowDefinition
  nameWithType: WorkflowInstance.WorkflowDefinition
  fullName: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition
- uid: System.Activities.Hosting.WorkflowInstance.#ctor*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowInstance
  nameWithType: WorkflowInstance.WorkflowInstance
- uid: System.Activities.Hosting.WorkflowInstance.BeginFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: BeginFlushTrackingRecords
  nameWithType: WorkflowInstance.BeginFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.Controller*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Controller
  nameWithType: WorkflowInstance.Controller
- uid: System.Activities.Hosting.WorkflowInstance.DefinitionIdentity*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DefinitionIdentity
  nameWithType: WorkflowInstance.DefinitionIdentity
- uid: System.Activities.Hosting.WorkflowInstance.DisposeExtensions*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: DisposeExtensions
  nameWithType: WorkflowInstance.DisposeExtensions
- uid: System.Activities.Hosting.WorkflowInstance.EndFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: EndFlushTrackingRecords
  nameWithType: WorkflowInstance.EndFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.FlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: FlushTrackingRecords
  nameWithType: WorkflowInstance.FlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.GetActivitiesBlockingUpdate*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetActivitiesBlockingUpdate
  nameWithType: WorkflowInstance.GetActivitiesBlockingUpdate
- uid: System.Activities.Hosting.WorkflowInstance.GetExtension<T>*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtension<T>
  nameWithType: WorkflowInstance.GetExtension<T>
- uid: System.Activities.Hosting.WorkflowInstance.GetExtensions<T>*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: GetExtensions<T>
  nameWithType: WorkflowInstance.GetExtensions<T>
- uid: System.Activities.Hosting.WorkflowInstance.HostEnvironment*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: HostEnvironment
  nameWithType: WorkflowInstance.HostEnvironment
- uid: System.Activities.Hosting.WorkflowInstance.Id*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Id
  nameWithType: WorkflowInstance.Id
- uid: System.Activities.Hosting.WorkflowInstance.Initialize*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: Initialize
  nameWithType: WorkflowInstance.Initialize
- uid: System.Activities.Hosting.WorkflowInstance.IsReadOnly*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: IsReadOnly
  nameWithType: WorkflowInstance.IsReadOnly
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginAssociateKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginAssociateKeys
  nameWithType: WorkflowInstance.OnBeginAssociateKeys
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginFlushTrackingRecords
  nameWithType: WorkflowInstance.OnBeginFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginPersist*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginPersist
  nameWithType: WorkflowInstance.OnBeginPersist
- uid: System.Activities.Hosting.WorkflowInstance.OnBeginResumeBookmark*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnBeginResumeBookmark
  nameWithType: WorkflowInstance.OnBeginResumeBookmark
- uid: System.Activities.Hosting.WorkflowInstance.OnDisassociateKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnDisassociateKeys
  nameWithType: WorkflowInstance.OnDisassociateKeys
- uid: System.Activities.Hosting.WorkflowInstance.OnEndAssociateKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndAssociateKeys
  nameWithType: WorkflowInstance.OnEndAssociateKeys
- uid: System.Activities.Hosting.WorkflowInstance.OnEndFlushTrackingRecords*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndFlushTrackingRecords
  nameWithType: WorkflowInstance.OnEndFlushTrackingRecords
- uid: System.Activities.Hosting.WorkflowInstance.OnEndPersist*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndPersist
  nameWithType: WorkflowInstance.OnEndPersist
- uid: System.Activities.Hosting.WorkflowInstance.OnEndResumeBookmark*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnEndResumeBookmark
  nameWithType: WorkflowInstance.OnEndResumeBookmark
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyPaused*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyPaused
  nameWithType: WorkflowInstance.OnNotifyPaused
- uid: System.Activities.Hosting.WorkflowInstance.OnNotifyUnhandledException*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnNotifyUnhandledException
  nameWithType: WorkflowInstance.OnNotifyUnhandledException
- uid: System.Activities.Hosting.WorkflowInstance.OnRequestAbort*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: OnRequestAbort
  nameWithType: WorkflowInstance.OnRequestAbort
- uid: System.Activities.Hosting.WorkflowInstance.RegisterExtensionManager*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: RegisterExtensionManager
  nameWithType: WorkflowInstance.RegisterExtensionManager
- uid: System.Activities.Hosting.WorkflowInstance.SupportsInstanceKeys*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SupportsInstanceKeys
  nameWithType: WorkflowInstance.SupportsInstanceKeys
- uid: System.Activities.Hosting.WorkflowInstance.SynchronizationContext*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: SynchronizationContext
  nameWithType: WorkflowInstance.SynchronizationContext
- uid: System.Activities.Hosting.WorkflowInstance.ThrowIfReadOnly*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: ThrowIfReadOnly
  nameWithType: WorkflowInstance.ThrowIfReadOnly
- uid: System.Activities.Hosting.WorkflowInstance.WorkflowDefinition*
  parent: System.Activities.Hosting.WorkflowInstance
  isExternal: false
  name: WorkflowDefinition
  nameWithType: WorkflowInstance.WorkflowDefinition
