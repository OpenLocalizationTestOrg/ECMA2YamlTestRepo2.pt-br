### YamlMime:ManagedReference
items:
- uid: System.Data.SqlTypes.SqlFileStream
  id: SqlFileStream
  children:
  - System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  - System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  - System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.Data.SqlTypes.SqlFileStream.CanRead
  - System.Data.SqlTypes.SqlFileStream.CanSeek
  - System.Data.SqlTypes.SqlFileStream.CanTimeout
  - System.Data.SqlTypes.SqlFileStream.CanWrite
  - System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  - System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  - System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  - System.Data.SqlTypes.SqlFileStream.Finalize
  - System.Data.SqlTypes.SqlFileStream.Flush
  - System.Data.SqlTypes.SqlFileStream.Length
  - System.Data.SqlTypes.SqlFileStream.Name
  - System.Data.SqlTypes.SqlFileStream.Position
  - System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlFileStream.ReadByte
  - System.Data.SqlTypes.SqlFileStream.ReadTimeout
  - System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  - System.Data.SqlTypes.SqlFileStream.TransactionContext
  - System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  - System.Data.SqlTypes.SqlFileStream.WriteTimeout
  langs:
  - csharp
  name: SqlFileStream
  nameWithType: SqlFileStream
  fullName: System.Data.SqlTypes.SqlFileStream
  type: Class
  summary: "Expõe os dados do SQL Server que são armazenados com o atributo de coluna FILESTREAM como uma sequência de bytes."
  remarks: "A classe SqlFileStream é usada para trabalhar com `varbinary(max)` dados armazenados com o atributo FILESTREAM em um banco de dados do SQL Server 2008. Você deve instalar o .NET Framework 3.5 SP1 (ou posterior) para usar <xref:System.Data.SqlTypes.SqlFileStream>para trabalhar com dados FILESTREAM.</xref:System.Data.SqlTypes.SqlFileStream>       Especificando o FILESTREAM de atributo em um `varbinary(max)` coluna faz com que o SQL Server para armazenar os dados em que o sistema de arquivos NTFS local em vez de no arquivo de banco de dados. Instruções Transact-SQL fornecem recursos de manipulação de dados no servidor e interfaces de sistema de arquivos do Win32 fornecem acesso de streaming aos dados.      > [!NOTE] > Arquivos individuais armazenados em uma coluna FILESTREAM não podem ser abertos diretamente do sistema de arquivos NTFS. Fluxo de dados FILESTREAM funciona apenas no contexto de uma transação do SQL Server.       A classe SqlFileStream é derivada de <xref:System.IO.Stream>classe que representa uma abstração de uma sequência de bytes de alguma origem de dados arbitrários como um arquivo ou um bloco de memória.</xref:System.IO.Stream> Você pode ler de um FILESTREAM por meio da transferência de dados de um fluxo em uma estrutura de dados como uma matriz de bytes. Você pode gravar em um FILESTREAM transferindo dados de uma estrutura de dados em um fluxo. Você também pode pesquisar dentro do fluxo, o que lhe permite consultar e modificar dados na posição atual dentro do fluxo.       Para documentação conceitual e exemplos de código, consulte [dados FILESTREAM](~/add/includes/ajax-current-ext-md.md).       Para obter a documentação sobre como definir e configurar dados FILESTREAM no SQL Server, consulte [Projetando e implementando armazenamento de FILESTREAM](http://go.microsoft.com/fwlink/?LinkId=121499) nos Manuais Online do SQL Server 2008."
  syntax:
    content: 'public sealed class SqlFileStream : System.IO.Stream'
  inheritance:
  - System.IO.Stream
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  id: '#ctor(System.String,System.Byte[],System.IO.FileAccess)'
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: SqlFileStream(String,Byte[],FileAccess)
  nameWithType: SqlFileStream.SqlFileStream(String,Byte[],FileAccess)
  fullName: System.Data.SqlTypes.SqlFileStream.SqlFileStream(String,Byte[],FileAccess)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> classe."
  remarks: "Se uma exceção for lançada, qualquer transação aberta deve ser revertida. Caso contrário, pode ocorrer perda de dados."
  syntax:
    content: public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access);
    parameters:
    - id: path
      type: System.String
      description: "O caminho lógico para o arquivo. O caminho pode ser recuperado usando a função Pathname Transact-SQL na coluna FILESTREAM subjacente na tabela."
    - id: transactionContext
      type: System.Byte[]
      description: "O contexto de transação para o <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> objeto. Aplicativos devem retornar a matriz de bytes retornada ao chamar o método GET_FILESTREAM_TRANSACTION_CONTEXT."
    - id: access
      type: System.IO.FileAccess
      description: "O modo de acesso para usar ao abrir o arquivo. Supported <xref href=&quot;System.IO.FileAccess&quot;></xref> enumeration values are <xref href=&quot;System.IO.FileAccess&quot;></xref>, <xref href=&quot;System.IO.FileAccess&quot;></xref>, and <xref href=&quot;System.IO.FileAccess&quot;></xref>.       Ao usar <xref uid=&quot;langword_csharp_FileAccess.Read&quot; name=&quot;FileAccess.Read&quot; href=&quot;&quot;> </xref>, o <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> objeto pode ser usado para ler todos os dados existentes.       Ao usar <xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> aponta para um arquivo de zero bytes. Os dados existentes serão substituídos quando o objeto é fechado e a transação é confirmada.       Ao usar <xref uid=&quot;langword_csharp_FileAccess.ReadWrite&quot; name=&quot;FileAccess.ReadWrite&quot; href=&quot;&quot;> </xref>, o <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> aponta para um arquivo que tem todos os dados existentes nele. O identificador é posicionado no início do arquivo. Você pode usar uma da <xref uid=&quot;langword_csharp_System.IO&quot; name=&quot;System.IO&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_Seek&quot; name=&quot;Seek&quot; href=&quot;&quot;> </xref> métodos para mover a posição do identificador de dentro do arquivo para gravar ou anexar novos dados."
  overload: System.Data.SqlTypes.SqlFileStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>é uma referência nula, ou <code>transactionContext</code> é nulo."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>path</code> is an empty string (\"\"), contains only white space, or contains one or more invalid characters.  \n  \n <code>path</code> begins with \"\\\\\\\\.\\\\\", for example \"\\\\\\\\.\\PHYSICALDRIVE0 \".  \n  \n The handle returned by the call to NTCreateFile is not of type FILE_TYPE_DISK.  \n  \n <code>options</code> contains an unsupported value."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não pode ser encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Especificado <code> path </code> é inválida, como estando em uma unidade não mapeada."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O acesso solicitado não é permitido pelo sistema operacional para o caminho especificado. Isso ocorre quando o acesso de gravação ou ReadWrite for especificado e o arquivo ou diretório é definido para acesso somente leitura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "NtCreateFile falhará com o código de erro definido como ERROR_SHARING_VIOLATION."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  id: '#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)'
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  nameWithType: SqlFileStream.SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  fullName: System.Data.SqlTypes.SqlFileStream.SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> classe."
  remarks: "Se uma exceção for lançada, qualquer transação aberta deve ser revertida. Caso contrário, pode ocorrer perda de dados."
  syntax:
    content: public SqlFileStream (string path, byte[] transactionContext, System.IO.FileAccess access, System.IO.FileOptions options, long allocationSize);
    parameters:
    - id: path
      type: System.String
      description: "O caminho lógico para o arquivo. O caminho pode ser recuperado usando a função Pathname Transact-SQL na coluna FILESTREAM subjacente na tabela."
    - id: transactionContext
      type: System.Byte[]
      description: "O contexto de transação para o <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> objeto. Quando definido como null, uma transação implícita será usado para o <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> objeto. Aplicativos devem retornar a matriz de bytes retornada ao chamar o método GET_FILESTREAM_TRANSACTION_CONTEXT."
    - id: access
      type: System.IO.FileAccess
      description: "O modo de acesso para usar ao abrir o arquivo. Supported <xref href=&quot;System.IO.FileAccess&quot;></xref> enumeration values are <xref href=&quot;System.IO.FileAccess&quot;></xref>, <xref href=&quot;System.IO.FileAccess&quot;></xref>, and <xref href=&quot;System.IO.FileAccess&quot;></xref>.       Ao usar <xref uid=&quot;langword_csharp_FileAccess.Read&quot; name=&quot;FileAccess.Read&quot; href=&quot;&quot;> </xref>, o <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> objeto pode ser usado para ler todos os dados existentes.       Ao usar <xref uid=&quot;langword_csharp_FileAccess.Write&quot; name=&quot;FileAccess.Write&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> aponta para um arquivo de zero bytes. Os dados existentes serão substituídos quando o objeto é fechado e a transação é confirmada.       Ao usar <xref uid=&quot;langword_csharp_FileAccess.ReadWrite&quot; name=&quot;FileAccess.ReadWrite&quot; href=&quot;&quot;> </xref>, o <xref uid=&quot;langword_csharp_SqlFileStream&quot; name=&quot;SqlFileStream&quot; href=&quot;&quot;> </xref> aponta para um arquivo que tem todos os dados existentes nele. O identificador é posicionado no início do arquivo. Você pode usar uma da <xref uid=&quot;langword_csharp_System.IO&quot; name=&quot;System.IO&quot; href=&quot;&quot;> </xref> <xref uid=&quot;langword_csharp_Seek&quot; name=&quot;Seek&quot; href=&quot;&quot;> </xref> métodos para mover a posição do identificador de dentro do arquivo para gravar ou anexar novos dados."
    - id: options
      type: System.IO.FileOptions
      description: "Especifica a opção de usar ao abrir o arquivo. Supported <xref href=&quot;System.IO.FileOptions&quot;></xref> values are <xref href=&quot;System.IO.FileOptions&quot;></xref>, <xref href=&quot;System.IO.FileOptions&quot;></xref>, <xref href=&quot;System.IO.FileOptions&quot;></xref>, and <xref href=&quot;System.IO.FileOptions&quot;></xref>."
    - id: allocationSize
      type: System.Int64
      description: "O tamanho de alocação para usar ao criar um arquivo. Se definido como 0, o valor padrão será usado."
  overload: System.Data.SqlTypes.SqlFileStream.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>path</code>é uma referência nula, ou <code>transactionContext</code> é nulo."
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>path</code> is an empty string (\"\"), contains only white space, or contains one or more invalid characters.  \n  \n <code>path</code> begins with \"\\\\\\\\.\\\\\", for example \"\\\\\\\\.\\PHYSICALDRIVE0 \".  \n  \n The handle returned by call to NTCreateFile is not of type FILE_TYPE_DISK.  \n  \n <code>options</code> contains an unsupported value."
  - type: System.IO.FileNotFoundException
    commentId: T:System.IO.FileNotFoundException
    description: "O arquivo não pode ser encontrado."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s."
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador não tem a permissão necessária."
  - type: System.IO.DirectoryNotFoundException
    commentId: T:System.IO.DirectoryNotFoundException
    description: "Especificado <code> path </code> é inválida, como estando em uma unidade não mapeada."
  - type: System.UnauthorizedAccessException
    commentId: T:System.UnauthorizedAccessException
    description: "O acesso solicitado não é permitido pelo sistema operacional para o caminho especificado. Isso ocorre quando o acesso de gravação ou ReadWrite for especificado e o arquivo ou diretório é definido para acesso somente leitura."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "NtCreateFile falhará com o código de erro definido como ERROR_SHARING_VIOLATION."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SqlFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Data.SqlTypes.SqlFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicia uma operação de leitura assíncrona."
  remarks: "Use o <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>propriedade para determinar se a instância atual oferece suporte à leitura.</xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>"
  syntax:
    content: public override IAsyncResult BeginRead (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "O buffer para ler os dados."
    - id: offset
      type: System.Int32
      description: "O deslocamento de byte no `buffer` no qual começar a gravar os dados lidos do fluxo."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes a serem lidos."
    - id: callback
      type: System.AsyncCallback
      description: "Um opcional retorno de chamada assíncrono, a ser chamado quando a leitura é concluída."
    - id: state
      type: System.Object
      description: "Um objeto fornecido pelo usuário que distingue esta solicitação de leitura assíncrona específica de outras solicitações"
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa a leitura assíncrona, ainda pode estar pendente.</xref:System.IAsyncResult>"
  overload: System.Data.SqlTypes.SqlFileStream.BeginRead*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não há suporte para a leitura de dados no fluxo."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  id: BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SqlFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Data.SqlTypes.SqlFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Inicia uma operação de gravação assíncrona."
  remarks: "Use o <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>propriedade para determinar se a instância atual oferece suporte à gravação.</xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>"
  syntax:
    content: public override IAsyncResult BeginWrite (byte[] buffer, int offset, int count, AsyncCallback callback, object state);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "O buffer para gravar dados."
    - id: offset
      type: System.Int32
      description: "O deslocamento de byte no `buffer` da qual começar a escrever."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes a serem gravados."
    - id: callback
      type: System.AsyncCallback
      description: "Um opcional retorno de chamada assíncrono, a ser chamado quando a gravação é concluída."
    - id: state
      type: System.Object
      description: "Um objeto definido pelo usuário que distingue esta solicitação de gravação assíncrona específica de outras solicitações."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa a gravação assíncrona, ainda pode estar pendente.</xref:System.IAsyncResult>"
  overload: System.Data.SqlTypes.SqlFileStream.BeginWrite*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "Não há suporte para a gravação de dados no fluxo."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.CanRead
  id: CanRead
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanRead
  nameWithType: SqlFileStream.CanRead
  fullName: System.Data.SqlTypes.SqlFileStream.CanRead
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém um valor que indica se o fluxo atual oferece suporte à leitura."
  syntax:
    content: public override bool CanRead { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o fluxo atual oferece suporte à leitura; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.CanRead*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.CanSeek
  id: CanSeek
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanSeek
  nameWithType: SqlFileStream.CanSeek
  fullName: System.Data.SqlTypes.SqlFileStream.CanSeek
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém um valor que indica se o fluxo atual oferece suporte à busca."
  syntax:
    content: public override bool CanSeek { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o fluxo atual oferece suporte à busca; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.CanSeek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.CanTimeout
  id: CanTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanTimeout
  nameWithType: SqlFileStream.CanTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.CanTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém um valor que indica se o fluxo atual pode atingir o tempo limite."
  syntax:
    content: public override bool CanTimeout { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o fluxo atual pode atingir o tempo limite; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.CanTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.CanWrite
  id: CanWrite
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: CanWrite
  nameWithType: SqlFileStream.CanWrite
  fullName: System.Data.SqlTypes.SqlFileStream.CanWrite
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém um valor que indica se o fluxo atual oferece suporte à gravação."
  syntax:
    content: public override bool CanWrite { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o fluxo atual oferece suporte à gravação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.CanWrite*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: SqlFileStream.Dispose(Boolean)
  fullName: System.Data.SqlTypes.SqlFileStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.Data.SqlTypes.SqlFileStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  id: EndRead(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: EndRead(IAsyncResult)
  nameWithType: SqlFileStream.EndRead(IAsyncResult)
  fullName: System.Data.SqlTypes.SqlFileStream.EndRead(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Aguarda a leitura assíncrona pendente concluir."
  syntax:
    content: public override int EndRead (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "A referência para a solicitação assíncrona pendente para concluir."
    return:
      type: System.Int32
      description: "O número de bytes lidos do fluxo, entre zero (0) e o número de bytes solicitado. Os fluxos retornam zero (0) somente no final do fluxo, caso contrário, eles devem ser bloqueados até que pelo menos um byte esteja disponível."
  overload: System.Data.SqlTypes.SqlFileStream.EndRead*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <xref:System.IAsyncResult>objeto não veio do correspondente <xref uid=&quot;langword_csharp_BeginRead&quot; name=&quot;BeginRead&quot; href=&quot;&quot;> </xref> método.</xref:System.IAsyncResult>"
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  id: EndWrite(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: EndWrite(IAsyncResult)
  nameWithType: SqlFileStream.EndWrite(IAsyncResult)
  fullName: System.Data.SqlTypes.SqlFileStream.EndWrite(IAsyncResult)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Termina uma operação de gravação assíncrona."
  syntax:
    content: public override void EndWrite (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "Uma referência para a solicitação de e/s assíncrona pendente."
  overload: System.Data.SqlTypes.SqlFileStream.EndWrite*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <xref:System.IAsyncResult>objeto não veio do correspondente <xref uid=&quot;langword_csharp_BeginWrite&quot; name=&quot;BeginWrite&quot; href=&quot;&quot;> </xref> método.</xref:System.IAsyncResult>"
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Finalize
  id: Finalize
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: SqlFileStream.Finalize()
  fullName: System.Data.SqlTypes.SqlFileStream.Finalize()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Garante que os recursos são liberados e outras operações de limpeza são realizadas quando o coletor de lixo recupera o <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref>."
  syntax:
    content: ~SqlFileStream ();
    parameters: []
  overload: System.Data.SqlTypes.SqlFileStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Flush
  id: Flush
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Flush()
  nameWithType: SqlFileStream.Flush()
  fullName: System.Data.SqlTypes.SqlFileStream.Flush()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Limpa todos os buffers para esse fluxo e faz com que todos os dados armazenados em buffer a ser gravado no dispositivo subjacente."
  syntax:
    content: public override void Flush ();
    parameters: []
  overload: System.Data.SqlTypes.SqlFileStream.Flush*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Length
  id: Length
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Length
  nameWithType: SqlFileStream.Length
  fullName: System.Data.SqlTypes.SqlFileStream.Length
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém um valor que indica o comprimento do fluxo atual em bytes."
  syntax:
    content: public override long Length { get; }
    return:
      type: System.Int64
      description: "Um <xref:System.Int64>que indica o comprimento do fluxo atual em bytes.</xref:System.Int64>"
  overload: System.Data.SqlTypes.SqlFileStream.Length*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Name
  id: Name
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Name
  nameWithType: SqlFileStream.Name
  fullName: System.Data.SqlTypes.SqlFileStream.Name
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém o caminho lógico do <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> transmitido ao construtor."
  syntax:
    content: public string Name { get; }
    return:
      type: System.String
      description: "Um valor de cadeia de caracteres que indica o nome do <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Position
  id: Position
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Position
  nameWithType: SqlFileStream.Position
  fullName: System.Data.SqlTypes.SqlFileStream.Position
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém ou define a posição dentro do fluxo atual."
  syntax:
    content: public override long Position { get; set; }
    return:
      type: System.Int64
      description: "A posição atual dentro do <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref>."
  overload: System.Data.SqlTypes.SqlFileStream.Position*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  id: Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Read(Byte[],Int32,Int32)
  nameWithType: SqlFileStream.Read(Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlFileStream.Read(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Lê uma sequência de bytes do fluxo atual e avança a posição dentro do fluxo pelo número de bytes lidos."
  remarks: "Use o <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>propriedade para determinar se a instância atual oferece suporte à gravação.</xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>"
  syntax:
    content: public override int Read (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Uma matriz de bytes. Quando este método retorna, o buffer contém a matriz de bytes especificada com os valores entre deslocamento e (deslocamento + contagem - 1) substituídos pelos bytes lidos da origem atual."
    - id: offset
      type: System.Int32
      description: "O deslocamento de bytes baseado em zero em buffer no qual começar a armazenar os dados lidos do fluxo atual."
    - id: count
      type: System.Int32
      description: "O número máximo de bytes a serem lidos do fluxo atual."
    return:
      type: System.Int32
      description: "O número total de bytes lidos no buffer. Isso pode ser menor que o número de bytes solicitado se que muitos bytes não estão disponíveis no momento ou zero (0) se o fim do fluxo foi atingido."
  overload: System.Data.SqlTypes.SqlFileStream.Read*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O objeto não dá suporte para leitura de dados."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.ReadByte
  id: ReadByte
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: ReadByte()
  nameWithType: SqlFileStream.ReadByte()
  fullName: System.Data.SqlTypes.SqlFileStream.ReadByte()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Lê um byte do fluxo e avança a posição dentro do fluxo por um byte ou retornará -1 se estiver no final do fluxo."
  remarks: "Use o <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>propriedade para determinar se a instância atual oferece suporte à leitura.</xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>"
  syntax:
    content: public override int ReadByte ();
    parameters: []
    return:
      type: System.Int32
      description: "O byte sem sinal é convertido em um <xref:System.Int32>, ou -1 se estiver no final do fluxo.</xref:System.Int32>"
  overload: System.Data.SqlTypes.SqlFileStream.ReadByte*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O objeto não dá suporte para leitura de dados."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.ReadTimeout
  id: ReadTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: ReadTimeout
  nameWithType: SqlFileStream.ReadTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.ReadTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém ou define um valor, em milissegundos, que determina quanto tempo o fluxo tentará antes do tempo limite de leitura."
  syntax:
    content: public override int ReadTimeout { get; set; }
    return:
      type: System.Int32
      description: "Um valor, em milissegundos, que determina quanto tempo o fluxo de tentativa de leitura antes do tempo limite."
  overload: System.Data.SqlTypes.SqlFileStream.ReadTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  id: Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Seek(Int64,SeekOrigin)
  nameWithType: SqlFileStream.Seek(Int64,SeekOrigin)
  fullName: System.Data.SqlTypes.SqlFileStream.Seek(Int64,SeekOrigin)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Define a posição dentro do fluxo atual."
  syntax:
    content: public override long Seek (long offset, System.IO.SeekOrigin origin);
    parameters:
    - id: offset
      type: System.Int64
      description: "Um deslocamento de bytes relativo a `origin` parâmetro"
    - id: origin
      type: System.IO.SeekOrigin
      description: "Um valor de tipo <xref:System.IO.SeekOrigin>que indica o ponto de referência usado para obter a nova posição</xref:System.IO.SeekOrigin>"
    return:
      type: System.Int64
      description: "A nova posição dentro do fluxo atual."
  overload: System.Data.SqlTypes.SqlFileStream.Seek*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  id: SetLength(System.Int64)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: SetLength(Int64)
  nameWithType: SqlFileStream.SetLength(Int64)
  fullName: System.Data.SqlTypes.SqlFileStream.SetLength(Int64)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Define o comprimento do fluxo atual."
  remarks: "Use o <xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>propriedade para determinar se a instância atual oferece suporte à leitura.</xref:System.Data.SqlTypes.SqlFileStream.CanRead%2A>"
  syntax:
    content: public override void SetLength (long value);
    parameters:
    - id: value
      type: System.Int64
      description: "O comprimento desejado do fluxo atual em bytes."
  overload: System.Data.SqlTypes.SqlFileStream.SetLength*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O objeto não dá suporte para leitura de dados."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.TransactionContext
  id: TransactionContext
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: TransactionContext
  nameWithType: SqlFileStream.TransactionContext
  fullName: System.Data.SqlTypes.SqlFileStream.TransactionContext
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém ou define o contexto de transação para este <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> objeto."
  syntax:
    content: public byte[] TransactionContext { get; }
    return:
      type: System.Byte[]
      description: "O <code> transactionContext </code> matriz passado para o construtor para este <xref href=&quot;System.Data.SqlTypes.SqlFileStream&quot;> </xref> objeto."
  overload: System.Data.SqlTypes.SqlFileStream.TransactionContext*
  exceptions: []
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  id: Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: Write(Byte[],Int32,Int32)
  nameWithType: SqlFileStream.Write(Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlFileStream.Write(Byte[],Int32,Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Grava uma sequência de bytes no fluxo atual e avança a posição atual dentro do fluxo pelo número de bytes gravados."
  remarks: "Use o <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>propriedade para determinar se a instância atual oferece suporte à gravação.</xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>"
  syntax:
    content: public override void Write (byte[] buffer, int offset, int count);
    parameters:
    - id: buffer
      type: System.Byte[]
      description: "Uma matriz de bytes. Esse método copia `count` bytes do `buffer` para o fluxo atual."
    - id: offset
      type: System.Int32
      description: "O deslocamento de bytes baseado em zero em `buffer` no qual começar a copiar bytes para o fluxo atual."
    - id: count
      type: System.Int32
      description: "O número de bytes a serem gravados no fluxo atual."
  overload: System.Data.SqlTypes.SqlFileStream.Write*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O objeto não oferece suporte à gravação de dados."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  id: WriteByte(System.Byte)
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: WriteByte(Byte)
  nameWithType: SqlFileStream.WriteByte(Byte)
  fullName: System.Data.SqlTypes.SqlFileStream.WriteByte(Byte)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Grava um byte para a posição atual no fluxo e avança a posição dentro do fluxo por um byte."
  remarks: "Use o <xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>propriedade para determinar se a instância atual oferece suporte à gravação.</xref:System.Data.SqlTypes.SqlFileStream.CanWrite%2A>"
  syntax:
    content: public override void WriteByte (byte value);
    parameters:
    - id: value
      type: System.Byte
      description: "O byte para gravar no fluxo."
  overload: System.Data.SqlTypes.SqlFileStream.WriteByte*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O objeto não oferece suporte à gravação de dados."
  platform:
  - net462
- uid: System.Data.SqlTypes.SqlFileStream.WriteTimeout
  id: WriteTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  langs:
  - csharp
  name: WriteTimeout
  nameWithType: SqlFileStream.WriteTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.WriteTimeout
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.SqlTypes
  summary: "Obtém ou define um valor, em milissegundos, que determina quanto tempo o fluxo tentará gravar antes do tempo limite."
  syntax:
    content: public override int WriteTimeout { get; set; }
    return:
      type: System.Int32
      description: "Um valor, em milissegundos, que determina quanto tempo o fluxo tentará gravar antes do tempo limite."
  overload: System.Data.SqlTypes.SqlFileStream.WriteTimeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Stream
  isExternal: false
  name: System.IO.Stream
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.IO.FileNotFoundException
  isExternal: true
  name: System.IO.FileNotFoundException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.IO.DirectoryNotFoundException
  isExternal: true
  name: System.IO.DirectoryNotFoundException
- uid: System.UnauthorizedAccessException
  isExternal: true
  name: System.UnauthorizedAccessException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SqlFileStream(String,Byte[],FileAccess)
  nameWithType: SqlFileStream.SqlFileStream(String,Byte[],FileAccess)
  fullName: System.Data.SqlTypes.SqlFileStream.SqlFileStream(String,Byte[],FileAccess)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Byte[]
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte[]
  spec.csharp:
  - uid: System.Byte
    name: Byte
    nameWithType: Byte
    fullName: Byte[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.IO.FileAccess
  parent: System.IO
  isExternal: false
  name: FileAccess
  nameWithType: FileAccess
  fullName: System.IO.FileAccess
- uid: System.Data.SqlTypes.SqlFileStream.#ctor(System.String,System.Byte[],System.IO.FileAccess,System.IO.FileOptions,System.Int64)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  nameWithType: SqlFileStream.SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
  fullName: System.Data.SqlTypes.SqlFileStream.SqlFileStream(String,Byte[],FileAccess,FileOptions,Int64)
- uid: System.IO.FileOptions
  parent: System.IO
  isExternal: false
  name: FileOptions
  nameWithType: FileOptions
  fullName: System.IO.FileOptions
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Data.SqlTypes.SqlFileStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SqlFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Data.SqlTypes.SqlFileStream.BeginRead(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Data.SqlTypes.SqlFileStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  nameWithType: SqlFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
  fullName: System.Data.SqlTypes.SqlFileStream.BeginWrite(Byte[],Int32,Int32,AsyncCallback,Object)
- uid: System.Data.SqlTypes.SqlFileStream.CanRead
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanRead
  nameWithType: SqlFileStream.CanRead
  fullName: System.Data.SqlTypes.SqlFileStream.CanRead
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.SqlTypes.SqlFileStream.CanSeek
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanSeek
  nameWithType: SqlFileStream.CanSeek
  fullName: System.Data.SqlTypes.SqlFileStream.CanSeek
- uid: System.Data.SqlTypes.SqlFileStream.CanTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanTimeout
  nameWithType: SqlFileStream.CanTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.CanTimeout
- uid: System.Data.SqlTypes.SqlFileStream.CanWrite
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanWrite
  nameWithType: SqlFileStream.CanWrite
  fullName: System.Data.SqlTypes.SqlFileStream.CanWrite
- uid: System.Data.SqlTypes.SqlFileStream.Dispose(System.Boolean)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: SqlFileStream.Dispose(Boolean)
  fullName: System.Data.SqlTypes.SqlFileStream.Dispose(Boolean)
- uid: System.Data.SqlTypes.SqlFileStream.EndRead(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndRead(IAsyncResult)
  nameWithType: SqlFileStream.EndRead(IAsyncResult)
  fullName: System.Data.SqlTypes.SqlFileStream.EndRead(IAsyncResult)
- uid: System.Data.SqlTypes.SqlFileStream.EndWrite(System.IAsyncResult)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndWrite(IAsyncResult)
  nameWithType: SqlFileStream.EndWrite(IAsyncResult)
  fullName: System.Data.SqlTypes.SqlFileStream.EndWrite(IAsyncResult)
- uid: System.Data.SqlTypes.SqlFileStream.Finalize
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Finalize()
  nameWithType: SqlFileStream.Finalize()
  fullName: System.Data.SqlTypes.SqlFileStream.Finalize()
- uid: System.Data.SqlTypes.SqlFileStream.Flush
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Flush()
  nameWithType: SqlFileStream.Flush()
  fullName: System.Data.SqlTypes.SqlFileStream.Flush()
- uid: System.Data.SqlTypes.SqlFileStream.Length
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Length
  nameWithType: SqlFileStream.Length
  fullName: System.Data.SqlTypes.SqlFileStream.Length
- uid: System.Data.SqlTypes.SqlFileStream.Name
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Name
  nameWithType: SqlFileStream.Name
  fullName: System.Data.SqlTypes.SqlFileStream.Name
- uid: System.Data.SqlTypes.SqlFileStream.Position
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Position
  nameWithType: SqlFileStream.Position
  fullName: System.Data.SqlTypes.SqlFileStream.Position
- uid: System.Data.SqlTypes.SqlFileStream.Read(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Read(Byte[],Int32,Int32)
  nameWithType: SqlFileStream.Read(Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlFileStream.Read(Byte[],Int32,Int32)
- uid: System.Data.SqlTypes.SqlFileStream.ReadByte
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadByte()
  nameWithType: SqlFileStream.ReadByte()
  fullName: System.Data.SqlTypes.SqlFileStream.ReadByte()
- uid: System.Data.SqlTypes.SqlFileStream.ReadTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SqlFileStream.ReadTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.ReadTimeout
- uid: System.Data.SqlTypes.SqlFileStream.Seek(System.Int64,System.IO.SeekOrigin)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Seek(Int64,SeekOrigin)
  nameWithType: SqlFileStream.Seek(Int64,SeekOrigin)
  fullName: System.Data.SqlTypes.SqlFileStream.Seek(Int64,SeekOrigin)
- uid: System.IO.SeekOrigin
  parent: System.IO
  isExternal: true
  name: SeekOrigin
  nameWithType: SeekOrigin
  fullName: System.IO.SeekOrigin
- uid: System.Data.SqlTypes.SqlFileStream.SetLength(System.Int64)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SetLength(Int64)
  nameWithType: SqlFileStream.SetLength(Int64)
  fullName: System.Data.SqlTypes.SqlFileStream.SetLength(Int64)
- uid: System.Data.SqlTypes.SqlFileStream.TransactionContext
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: TransactionContext
  nameWithType: SqlFileStream.TransactionContext
  fullName: System.Data.SqlTypes.SqlFileStream.TransactionContext
- uid: System.Data.SqlTypes.SqlFileStream.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Write(Byte[],Int32,Int32)
  nameWithType: SqlFileStream.Write(Byte[],Int32,Int32)
  fullName: System.Data.SqlTypes.SqlFileStream.Write(Byte[],Int32,Int32)
- uid: System.Data.SqlTypes.SqlFileStream.WriteByte(System.Byte)
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteByte(Byte)
  nameWithType: SqlFileStream.WriteByte(Byte)
  fullName: System.Data.SqlTypes.SqlFileStream.WriteByte(Byte)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Data.SqlTypes.SqlFileStream.WriteTimeout
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SqlFileStream.WriteTimeout
  fullName: System.Data.SqlTypes.SqlFileStream.WriteTimeout
- uid: System.Data.SqlTypes.SqlFileStream.#ctor*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SqlFileStream
  nameWithType: SqlFileStream.SqlFileStream
- uid: System.Data.SqlTypes.SqlFileStream.BeginRead*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginRead
  nameWithType: SqlFileStream.BeginRead
- uid: System.Data.SqlTypes.SqlFileStream.BeginWrite*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: BeginWrite
  nameWithType: SqlFileStream.BeginWrite
- uid: System.Data.SqlTypes.SqlFileStream.CanRead*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanRead
  nameWithType: SqlFileStream.CanRead
- uid: System.Data.SqlTypes.SqlFileStream.CanSeek*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanSeek
  nameWithType: SqlFileStream.CanSeek
- uid: System.Data.SqlTypes.SqlFileStream.CanTimeout*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanTimeout
  nameWithType: SqlFileStream.CanTimeout
- uid: System.Data.SqlTypes.SqlFileStream.CanWrite*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: CanWrite
  nameWithType: SqlFileStream.CanWrite
- uid: System.Data.SqlTypes.SqlFileStream.Dispose*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Dispose
  nameWithType: SqlFileStream.Dispose
- uid: System.Data.SqlTypes.SqlFileStream.EndRead*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndRead
  nameWithType: SqlFileStream.EndRead
- uid: System.Data.SqlTypes.SqlFileStream.EndWrite*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: EndWrite
  nameWithType: SqlFileStream.EndWrite
- uid: System.Data.SqlTypes.SqlFileStream.Finalize*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Finalize
  nameWithType: SqlFileStream.Finalize
- uid: System.Data.SqlTypes.SqlFileStream.Flush*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Flush
  nameWithType: SqlFileStream.Flush
- uid: System.Data.SqlTypes.SqlFileStream.Length*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Length
  nameWithType: SqlFileStream.Length
- uid: System.Data.SqlTypes.SqlFileStream.Name*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Name
  nameWithType: SqlFileStream.Name
- uid: System.Data.SqlTypes.SqlFileStream.Position*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Position
  nameWithType: SqlFileStream.Position
- uid: System.Data.SqlTypes.SqlFileStream.Read*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Read
  nameWithType: SqlFileStream.Read
- uid: System.Data.SqlTypes.SqlFileStream.ReadByte*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadByte
  nameWithType: SqlFileStream.ReadByte
- uid: System.Data.SqlTypes.SqlFileStream.ReadTimeout*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: ReadTimeout
  nameWithType: SqlFileStream.ReadTimeout
- uid: System.Data.SqlTypes.SqlFileStream.Seek*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Seek
  nameWithType: SqlFileStream.Seek
- uid: System.Data.SqlTypes.SqlFileStream.SetLength*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: SetLength
  nameWithType: SqlFileStream.SetLength
- uid: System.Data.SqlTypes.SqlFileStream.TransactionContext*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: TransactionContext
  nameWithType: SqlFileStream.TransactionContext
- uid: System.Data.SqlTypes.SqlFileStream.Write*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: Write
  nameWithType: SqlFileStream.Write
- uid: System.Data.SqlTypes.SqlFileStream.WriteByte*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteByte
  nameWithType: SqlFileStream.WriteByte
- uid: System.Data.SqlTypes.SqlFileStream.WriteTimeout*
  parent: System.Data.SqlTypes.SqlFileStream
  isExternal: false
  name: WriteTimeout
  nameWithType: SqlFileStream.WriteTimeout
