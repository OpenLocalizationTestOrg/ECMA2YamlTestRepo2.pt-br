### YamlMime:ManagedReference
items:
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  id: X509CertificateValidator
  children:
  - System.IdentityModel.Selectors.X509CertificateValidator.#ctor
  - System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust
  - System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  - System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  - System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(System.Xml.XmlNodeList)
  - System.IdentityModel.Selectors.X509CertificateValidator.None
  - System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust
  - System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust
  - System.IdentityModel.Selectors.X509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  langs:
  - csharp
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
  type: Class
  summary: "Valida um certificado x.&509;."
  remarks: "Use a classe X509CertificateValidator para especificar como um certificado x.&509; é considerado válido. Isso pode ser feito usando derivando uma classe de X509CertificateValidator e substituindo o <xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%2A>método.</xref:System.IdentityModel.Selectors.X509CertificateValidator.Validate%2A>"
  example:
  - >-
    [!code-cs[c_X509CertificateValidator#1](~/add/codesnippet/csharp/t-system.identitymodel.s_10_1.cs)]
     [!code-vb[c_X509CertificateValidator#1](~/add/codesnippet/visualbasic/t-system.identitymodel.s_10_1.vb)]
  syntax:
    content: 'public abstract class X509CertificateValidator : System.IdentityModel.Configuration.ICustomIdentityConfiguration'
  inheritance:
  - System.Object
  implements:
  - System.IdentityModel.Configuration.ICustomIdentityConfiguration
  inheritedMembers: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.#ctor
  id: '#ctor'
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: X509CertificateValidator()
  nameWithType: X509CertificateValidator.X509CertificateValidator()
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.X509CertificateValidator()
  type: Constructor
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> classe."
  remarks: "Por padrão, este construtor não inicializa as propriedades."
  example:
  - >-
    [!code-cs[c_X509CertificateValidator#3](~/add/codesnippet/csharp/m-system.identitymodel.s_0_1.cs)]
     [!code-vb[c_X509CertificateValidator#3](~/add/codesnippet/visualbasic/m-system.identitymodel.s_0_1.vb)]
  syntax:
    content: protected X509CertificateValidator ();
    parameters: []
  overload: System.IdentityModel.Selectors.X509CertificateValidator.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust
  id: ChainTrust
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: ChainTrust
  nameWithType: X509CertificateValidator.ChainTrust
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém o validador valida o certificado x.&509; usando uma cadeia de confiança."
  remarks: "Este validador verifica se o certificado x.&509; é emitido por um emissor confiável usando uma cadeia de certificados e válido.       O valor dessa propriedade estático pode ser fornecido como um parâmetro para um dos construtores para a <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>classe.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>"
  syntax:
    content: public static System.IdentityModel.Selectors.X509CertificateValidator ChainTrust { get; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> que valida o certificado x.&509; usando uma cadeia de confiança."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  id: CreateChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: CreateChainTrustValidator(Boolean,X509ChainPolicy)
  nameWithType: X509CertificateValidator.CreateChainTrustValidator(Boolean,X509ChainPolicy)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(Boolean,X509ChainPolicy)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém uma validação que verifica o certificado x.&509; especificando o contexto e a política de cadeia que é usada para criar e verificar uma cadeia de confiança."
  remarks: "Use o método CreateChainTrustValidator em vez do <xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A>propriedade para especificar o contexto de ou para definir a política de cadeia.</xref:System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust%2A> Política de cadeia pode ser usada para especificar a chave EKU (uso avançado) para o qual a cadeia deve ser validado ou especificar a verificação de revogação.       O valor de retorno deste método estático pode ser fornecido como um parâmetro para os construtores de <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>classe que levam um validador.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>"
  syntax:
    content: public static System.IdentityModel.Selectors.X509CertificateValidator CreateChainTrustValidator (bool useMachineContext, System.Security.Cryptography.X509Certificates.X509ChainPolicy chainPolicy);
    parameters:
    - id: useMachineContext
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para usar o contexto do computador; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para usar o contexto do usuário atual."
    - id: chainPolicy
      type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ChainPolicy&quot;> </xref> que especifica a política usada para criar e verificar a cadeia de confiança."
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> que valida o certificado x.&509; usando uma cadeia de confiança."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  id: CreatePeerOrChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: CreatePeerOrChainTrustValidator(Boolean,X509ChainPolicy)
  nameWithType: X509CertificateValidator.CreatePeerOrChainTrustValidator(Boolean,X509ChainPolicy)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(Boolean,X509ChainPolicy)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém um validador que verifica o certificado está no <xref uid=&quot;langword_csharp_TrustedPeople&quot; name=&quot;TrustedPeople&quot; href=&quot;&quot;> </xref> repositório de certificados ou especificando a diretiva de contexto e a cadeia que é usada para construir uma cadeia de certificados confiáveis. O certificado é confiável se ele passa um método de verificação."
  remarks: "Use o método CreatePeerOrChainTrustValidator em vez do <xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A>propriedade para especificar o contexto de ou para definir a política de cadeia.</xref:System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust%2A> Política de cadeia pode ser usada para especificar a chave EKU (uso avançado) para o qual a cadeia deve ser validado ou especificar a verificação de revogação.       O valor dessa propriedade estático pode ser fornecido como um parâmetro para um dos construtores para a <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>classe.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>"
  syntax:
    content: public static System.IdentityModel.Selectors.X509CertificateValidator CreatePeerOrChainTrustValidator (bool useMachineContext, System.Security.Cryptography.X509Certificates.X509ChainPolicy chainPolicy);
    parameters:
    - id: useMachineContext
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para usar o contexto do computador; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para usar o contexto do usuário atual."
    - id: chainPolicy
      type: System.Security.Cryptography.X509Certificates.X509ChainPolicy
      description: "Um <xref href=&quot;System.Security.Cryptography.X509Certificates.X509ChainPolicy&quot;> </xref> que especifica a política usada para criar a cadeia de confiança."
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> que verifica o certificado está no <xref uid=&quot;langword_csharp_TrustedPeople&quot; name=&quot;TrustedPeople&quot; href=&quot;&quot;> </xref> repositório de certificados ou criando uma cadeia de certificados confiáveis."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(System.Xml.XmlNodeList)
  id: LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: X509CertificateValidator.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(XmlNodeList)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Quando substituído em uma classe derivada, carrega a configuração personalizada do XML."
  remarks: "Por padrão, gera um <xref:System.NotImplementedException>.</xref:System.NotImplementedException> Você pode substituir esse método para fornecer a funcionalidade em uma classe derivada."
  syntax:
    content: public virtual void LoadCustomConfiguration (System.Xml.XmlNodeList nodelist);
    parameters:
    - id: nodelist
      type: System.Xml.XmlNodeList
      description: "Os elementos de configuração personalizada."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.None
  id: None
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: None
  nameWithType: X509CertificateValidator.None
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.None
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém um validador que não executa nenhuma validação em um certificado x.&509;. Como resultado, um certificado x.&509; sempre é considerado válido."
  remarks: "Este validador pode ser útil ao trabalhar com um certificado x.&509; de teste ou desenvolvimento, como aquele gerado pelo utilitário Makecert.exe.       O valor dessa propriedade estático pode ser fornecido como um parâmetro para um dos construtores para a <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>classe.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>"
  syntax:
    content: public static System.IdentityModel.Selectors.X509CertificateValidator None { get; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> que não executa nenhuma validação do certificado x.&509;."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.None*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust
  id: PeerOrChainTrust
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: PeerOrChainTrust
  nameWithType: X509CertificateValidator.PeerOrChainTrust
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém um validador que verifica o certificado está no <xref uid=&quot;langword_csharp_TrustedPeople&quot; name=&quot;TrustedPeople&quot; href=&quot;&quot;> </xref> repositório de certificados ou criando uma cadeia de certificados confiáveis. O certificado é confiável se ele passa um método de verificação."
  remarks: "O valor dessa propriedade estático pode ser fornecido como um parâmetro para um dos construtores para a <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>classe.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>"
  syntax:
    content: public static System.IdentityModel.Selectors.X509CertificateValidator PeerOrChainTrust { get; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> que verifica o certificado está no <xref uid=&quot;langword_csharp_TrustedPeople&quot; name=&quot;TrustedPeople&quot; href=&quot;&quot;> </xref> repositório de certificados ou criando uma cadeia de certificados confiáveis."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust
  id: PeerTrust
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: PeerTrust
  nameWithType: X509CertificateValidator.PeerTrust
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust
  type: Property
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Obtém um validador que verifica o certificado está no <xref uid=&quot;langword_csharp_TrustedPeople&quot; name=&quot;TrustedPeople&quot; href=&quot;&quot;> </xref> repositório de certificados"
  remarks: "O valor dessa propriedade estático pode ser fornecido como um parâmetro para um dos construtores para a <xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>classe.</xref:System.IdentityModel.Selectors.X509SecurityTokenAuthenticator>"
  syntax:
    content: public static System.IdentityModel.Selectors.X509CertificateValidator PeerTrust { get; }
    return:
      type: System.IdentityModel.Selectors.X509CertificateValidator
      description: "Um <xref href=&quot;System.IdentityModel.Selectors.X509CertificateValidator&quot;> </xref> que verifica o certificado está no <xref uid=&quot;langword_csharp_TrustedPeople&quot; name=&quot;TrustedPeople&quot; href=&quot;&quot;> </xref> repositório de certificados."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust*
  exceptions: []
  platform:
  - net462
- uid: System.IdentityModel.Selectors.X509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  id: Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  langs:
  - csharp
  name: Validate(X509Certificate2)
  nameWithType: X509CertificateValidator.Validate(X509Certificate2)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.Validate(X509Certificate2)
  type: Method
  assemblies:
  - System.IdentityModel
  namespace: System.IdentityModel.Selectors
  summary: "Quando substituído em uma classe derivada, valida o certificado x.&509;."
  remarks: "Substitua o método Validate para especificar como o certificado x.&509; é validado.       Quando a x.&509; do certificado que é passado para o `certificate` parâmetro não passou na validação, throw <xref:System.IdentityModel.Tokens.SecurityTokenvalidationException>.</xref:System.IdentityModel.Tokens.SecurityTokenvalidationException>"
  example:
  - >-
    [!code-cs[c_X509CertificateValidator#2](~/add/codesnippet/csharp/1487f60d-20b2-4959-899d-_1.cs)]
     [!code-vb[c_X509CertificateValidator#2](~/add/codesnippet/visualbasic/1487f60d-20b2-4959-899d-_1.vb)]
  syntax:
    content: public abstract void Validate (System.Security.Cryptography.X509Certificates.X509Certificate2 certificate);
    parameters:
    - id: certificate
      type: System.Security.Cryptography.X509Certificates.X509Certificate2
      description: "O <xref href=&quot;System.Security.Cryptography.X509Certificates.X509Certificate2&quot;> </xref> que representa o certificado x.&509; para validar."
  overload: System.IdentityModel.Selectors.X509CertificateValidator.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.IdentityModel.Selectors.X509CertificateValidator.#ctor
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: X509CertificateValidator()
  nameWithType: X509CertificateValidator.X509CertificateValidator()
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.X509CertificateValidator()
- uid: System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: ChainTrust
  nameWithType: X509CertificateValidator.ChainTrust
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust
- uid: System.IdentityModel.Selectors.X509CertificateValidator
  parent: System.IdentityModel.Selectors
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator
  fullName: System.IdentityModel.Selectors.X509CertificateValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: CreateChainTrustValidator(Boolean,X509ChainPolicy)
  nameWithType: X509CertificateValidator.CreateChainTrustValidator(Boolean,X509ChainPolicy)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator(Boolean,X509ChainPolicy)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Cryptography.X509Certificates.X509ChainPolicy
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509ChainPolicy
  nameWithType: X509ChainPolicy
  fullName: System.Security.Cryptography.X509Certificates.X509ChainPolicy
- uid: System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(System.Boolean,System.Security.Cryptography.X509Certificates.X509ChainPolicy)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: CreatePeerOrChainTrustValidator(Boolean,X509ChainPolicy)
  nameWithType: X509CertificateValidator.CreatePeerOrChainTrustValidator(Boolean,X509ChainPolicy)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator(Boolean,X509ChainPolicy)
- uid: System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(System.Xml.XmlNodeList)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: LoadCustomConfiguration(XmlNodeList)
  nameWithType: X509CertificateValidator.LoadCustomConfiguration(XmlNodeList)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration(XmlNodeList)
- uid: System.Xml.XmlNodeList
  parent: System.Xml
  isExternal: false
  name: XmlNodeList
  nameWithType: XmlNodeList
  fullName: System.Xml.XmlNodeList
- uid: System.IdentityModel.Selectors.X509CertificateValidator.None
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: None
  nameWithType: X509CertificateValidator.None
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.None
- uid: System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: PeerOrChainTrust
  nameWithType: X509CertificateValidator.PeerOrChainTrust
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust
- uid: System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: PeerTrust
  nameWithType: X509CertificateValidator.PeerTrust
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust
- uid: System.IdentityModel.Selectors.X509CertificateValidator.Validate(System.Security.Cryptography.X509Certificates.X509Certificate2)
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: Validate(X509Certificate2)
  nameWithType: X509CertificateValidator.Validate(X509Certificate2)
  fullName: System.IdentityModel.Selectors.X509CertificateValidator.Validate(X509Certificate2)
- uid: System.Security.Cryptography.X509Certificates.X509Certificate2
  parent: System.Security.Cryptography.X509Certificates
  isExternal: false
  name: X509Certificate2
  nameWithType: X509Certificate2
  fullName: System.Security.Cryptography.X509Certificates.X509Certificate2
- uid: System.IdentityModel.Selectors.X509CertificateValidator.#ctor*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: X509CertificateValidator
  nameWithType: X509CertificateValidator.X509CertificateValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator.ChainTrust*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: ChainTrust
  nameWithType: X509CertificateValidator.ChainTrust
- uid: System.IdentityModel.Selectors.X509CertificateValidator.CreateChainTrustValidator*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: CreateChainTrustValidator
  nameWithType: X509CertificateValidator.CreateChainTrustValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator.CreatePeerOrChainTrustValidator*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: CreatePeerOrChainTrustValidator
  nameWithType: X509CertificateValidator.CreatePeerOrChainTrustValidator
- uid: System.IdentityModel.Selectors.X509CertificateValidator.LoadCustomConfiguration*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: LoadCustomConfiguration
  nameWithType: X509CertificateValidator.LoadCustomConfiguration
- uid: System.IdentityModel.Selectors.X509CertificateValidator.None*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: None
  nameWithType: X509CertificateValidator.None
- uid: System.IdentityModel.Selectors.X509CertificateValidator.PeerOrChainTrust*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: PeerOrChainTrust
  nameWithType: X509CertificateValidator.PeerOrChainTrust
- uid: System.IdentityModel.Selectors.X509CertificateValidator.PeerTrust*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: PeerTrust
  nameWithType: X509CertificateValidator.PeerTrust
- uid: System.IdentityModel.Selectors.X509CertificateValidator.Validate*
  parent: System.IdentityModel.Selectors.X509CertificateValidator
  isExternal: false
  name: Validate
  nameWithType: X509CertificateValidator.Validate
