### YamlMime:ManagedReference
items:
- uid: System.Xaml.XamlObjectWriter
  id: XamlObjectWriter
  children:
  - System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)
  - System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)
  - System.Xaml.XamlObjectWriter.Clear
  - System.Xaml.XamlObjectWriter.Dispose(System.Boolean)
  - System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)
  - System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)
  - System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)
  - System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)
  - System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  - System.Xaml.XamlObjectWriter.Result
  - System.Xaml.XamlObjectWriter.RootNameScope
  - System.Xaml.XamlObjectWriter.SchemaContext
  - System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)
  - System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  - System.Xaml.XamlObjectWriter.WriteEndMember
  - System.Xaml.XamlObjectWriter.WriteEndObject
  - System.Xaml.XamlObjectWriter.WriteGetObject
  - System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)
  - System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)
  - System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)
  - System.Xaml.XamlObjectWriter.WriteValue(System.Object)
  langs:
  - csharp
  name: XamlObjectWriter
  nameWithType: XamlObjectWriter
  fullName: System.Xaml.XamlObjectWriter
  type: Class
  summary: "Cria um gráfico de objeto de um fluxo de nó XAML de origem."
  remarks: "O `Write` métodos de XamlObjectWriter implementam um padrão de modo que usa o XamlObjectWriter o <xref:System.Xaml.XamlWriter>que é definido pelo <xref:System.Xaml.XamlWriter.WriteNode%2A>método.</xref:System.Xaml.XamlWriter.WriteNode%2A> </xref:System.Xaml.XamlWriter> <xref:System.Xaml.XamlWriter.WriteNode%2A>Alterna entre a lógica de `Write` métodos, dependendo de qual nó tipo está na posição atual do leitor.</xref:System.Xaml.XamlWriter.WriteNode%2A>      ## XamlObjectWriter de um escopo tem um conceito do escopo. ou seja, o XamlObjectWriter mantém um ponto conceitual de referência em seu gráfico de objeto de saída. Para um determinado escopo, determinadas operações podem ser válido ou inválido ou produzir um resultado de operação não. Por exemplo, se você chamar <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>para gravar as diretivas de inicialização em um objeto que já existe como uma instância, a implementação padrão gera uma exceção.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>       Uma técnica possíveis para controlar o escopo em um XamlObjectWriter personalizado é para alinhar as ações de nó com uma classe ou quadro de pilha. A pilha ou um quadro pode manter controle de push e pop para cada nível de profundidade do modelo de objeto que é inserida ou encerrada enquanto o XamlObjectWriter grava o gráfico de objeto.      ## Retornos de chamada para intermediários e avançados XamlObjectWriter cenários de suporte, o mecanismo de gravação de um gráfico de objeto fornece a retorno de chamada de pontos de entrada que ocorrem quando um XamlObjectWriter confirma ou está prestes a confirmar determinadas ações. Alguns retornos de chamada estão habilitados nas configurações e não são específicos para o tipo de objeto ou o membro que está sendo gravado; No entanto, as informações de retorno de chamada geralmente estarão disponíveis no contexto ou de eventos são dados que são enviados por meio do retorno de chamada. A seguir está uma lista de retornos:-o retorno de chamada que é declarado pelo <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A>é invocado quando o escopo vai para um novo objeto e no <xref:System.ComponentModel.ISupportInitialize.BeginInit%2A>fase do tempo de vida de objeto para cada objeto criado.</xref:System.ComponentModel.ISupportInitialize.BeginInit%2A> </xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler%2A>      -O retorno de chamada que é declarado pelo <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A>é invocado quando o escopo vai para um novo objeto e no <xref:System.ComponentModel.ISupportInitialize.EndInit%2A>fase do tempo de vida de objeto para cada objeto criado.</xref:System.ComponentModel.ISupportInitialize.EndInit%2A> </xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler%2A>      -O retorno de chamada que é declarado pelo <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A>é invocado quando o escopo é iniciado em um objeto e ocorre quando o primeiro <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>chamada para esse escopo de objeto é feita, mas ainda não foram confirmada.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> </xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler%2A>      -O retorno de chamada que é declarado pelo <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A>é invocado quando o escopo é iniciado em um objeto e acontece quando o <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>chamada para esse escopo de objeto é feita, mas ainda não foram confirmada.</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> </xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler%2A>      -O retorno de chamada que é declarado pelo <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A>é invocado quando <xref:System.Xaml.XamlObjectWriter.OnSetValue%2A>é chamado.</xref:System.Xaml.XamlObjectWriter.OnSetValue%2A> </xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A>      ## Gravando as chaves de dicionário a implementação padrão de XamlObjectWriter oferece suporte à conversão de tipo em restrições de um <xref:System.Collections.Generic.Dictionary%602>antes do dicionário de conteúdo é adicionado ao gráfico de objeto.</xref:System.Collections.Generic.Dictionary%602> Dessa maneira, um dicionário genérico pode ser configurado em tempo de execução por objetos e pode corresponder a genérica relevante `Add` e o comportamento do indexador. No entanto, conforme implementado para o XamlObjectWriter base, esse recurso existe somente para a criação do gráfico de objeto da base de <xref:System.Collections.Generic.Dictionary%602>classe e não para classes derivadas de <xref:System.Collections.Generic.Dictionary%602>.</xref:System.Collections.Generic.Dictionary%602> </xref:System.Collections.Generic.Dictionary%602>      ## Procura gravadores descartado XAML potencialmente é usadas para operações adiadas ou onde é feita uma chamada em uma instância do gravador XAML que foi descartada durante o processo. Várias APIs de XamlObjectWriter poderá gerar <xref:System.ObjectDisposedException>nesses casos.</xref:System.ObjectDisposedException>"
  syntax:
    content: 'public class XamlObjectWriter : System.Xaml.XamlWriter, System.Xaml.IXamlLineInfoConsumer'
  inheritance:
  - System.Object
  - System.Xaml.XamlWriter
  implements:
  - System.Xaml.IXamlLineInfoConsumer
  inheritedMembers:
  - System.Xaml.XamlWriter.Close
  - System.Xaml.XamlWriter.IsDisposed
  - System.Xaml.XamlWriter.System#IDisposable#Dispose
  - System.Xaml.XamlWriter.WriteNode(System.Xaml.XamlReader)
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)
  id: '#ctor(System.Xaml.XamlSchemaContext)'
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: XamlObjectWriter(XamlSchemaContext)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref> classe usando o contexto do esquema XAML que é usado por um <xref href=&quot;System.Xaml.XamlReader&quot;> </xref>."
  syntax:
    content: public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext);
    parameters:
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Um contexto de esquema XAML que é compartilhado com o leitor XAML que fornece mais nós para gravação."
  overload: System.Xaml.XamlObjectWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>schemaContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)
  id: '#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)'
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  type: Constructor
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref> classe usando o contexto que é usado por um <xref href=&quot;System.Xaml.XamlReader&quot;> </xref> e suas configurações."
  syntax:
    content: public XamlObjectWriter (System.Xaml.XamlSchemaContext schemaContext, System.Xaml.XamlObjectWriterSettings settings);
    parameters:
    - id: schemaContext
      type: System.Xaml.XamlSchemaContext
      description: "Um contexto de esquema XAML que é compartilhado com o leitor XAML que fornece mais nós para gravação."
    - id: settings
      type: System.Xaml.XamlObjectWriterSettings
      description: "Um objeto de configurações especificadas determinadas opções para <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref> comportamento e saída."
  overload: System.Xaml.XamlObjectWriter.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>schemaContext</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.Clear
  id: Clear
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: Clear()
  nameWithType: XamlObjectWriter.Clear()
  fullName: System.Xaml.XamlObjectWriter.Clear()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Redefine todos os quadros possíveis e limpa o gráfico de objeto."
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: XamlObjectWriter.Dispose(Boolean)
  fullName: System.Xaml.XamlObjectWriter.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Libera os recursos não gerenciados usados pelo <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>e, opcionalmente, libera os recursos gerenciados."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar os recursos gerenciados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlObjectWriter.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)
  id: OnAfterBeginInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnAfterBeginInit(Object)
  nameWithType: XamlObjectWriter.OnAfterBeginInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterBeginInit(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Invoca a qualquer <xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler*>método que está associado com <xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;> </xref> para este <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>.</xref:System.Xaml.XamlObjectWriterSettings.AfterBeginInitHandler*>"
  syntax:
    content: protected virtual void OnAfterBeginInit (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto para o relatório. O objeto é empacotado em <xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;> </xref> quando o manipulador é invocado."
  overload: System.Xaml.XamlObjectWriter.OnAfterBeginInit*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)
  id: OnAfterEndInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnAfterEndInit(Object)
  nameWithType: XamlObjectWriter.OnAfterEndInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterEndInit(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Invoca a qualquer <xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler*>método que está associado com <xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;> </xref> para este <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>.</xref:System.Xaml.XamlObjectWriterSettings.AfterEndInitHandler*>"
  syntax:
    content: protected virtual void OnAfterEndInit (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto para o relatório. O valor é empacotado em <xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;> </xref> quando o manipulador é invocado."
  overload: System.Xaml.XamlObjectWriter.OnAfterEndInit*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)
  id: OnAfterProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnAfterProperties(Object)
  nameWithType: XamlObjectWriter.OnAfterProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterProperties(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Invoca a qualquer <xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler*>referenciado que está associado ao método <xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;> </xref> para este <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>.</xref:System.Xaml.XamlObjectWriterSettings.AfterPropertiesHandler*>"
  syntax:
    content: protected virtual void OnAfterProperties (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O objeto para o relatório. Isso é empacotado em <xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;> </xref> quando o manipulador é invocado."
  overload: System.Xaml.XamlObjectWriter.OnAfterProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)
  id: OnBeforeProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnBeforeProperties(Object)
  nameWithType: XamlObjectWriter.OnBeforeProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnBeforeProperties(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Invoca a qualquer <xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler*>referenciado que está associado ao método <xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;> </xref> para este <xref href=&quot;System.Xaml.XamlObjectWriter&quot;> </xref>.</xref:System.Xaml.XamlObjectWriterSettings.BeforePropertiesHandler*>"
  syntax:
    content: protected virtual void OnBeforeProperties (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O valor para passar pelo <xref href=&quot;System.Xaml.XamlObjectEventArgs&quot;> </xref> quando o manipulador é invocado."
  overload: System.Xaml.XamlObjectWriter.OnBeforeProperties*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  id: OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: OnSetValue(Object,XamlMember,Object)
  nameWithType: XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
  fullName: System.Xaml.XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Invoca a qualquer <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler*>referenciado que está associado ao método <xref href=&quot;System.Xaml.XamlObjectWriterSettings&quot;> </xref> para este gravador, contanto que <code> handled </code> na <xref href=&quot;System.Windows.Markup.XamlSetValueEventArgs&quot;> </xref> dados de evento não são <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.</xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler*>"
  remarks: "Se o `SetValue` operação para este gravador XAML tem um manipulador associado (um <xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A>declarado em <xref:System.Xaml.XamlObjectWriterSettings>), esse método cria novos <xref:System.Windows.Markup.XamlSetValueEventArgs>e os passa para o manipulador.</xref:System.Windows.Markup.XamlSetValueEventArgs> </xref:System.Xaml.XamlObjectWriterSettings> </xref:System.Xaml.XamlObjectWriterSettings.XamlSetValueHandler%2A> O valor de retorno é definido pela leitura de <xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A>valor que é passado por meio de dados do evento.</xref:System.Windows.Markup.XamlSetValueEventArgs.Handled%2A> Se nenhum manipulador existe e esse método é chamado, a chamada retornará `false`."
  syntax:
    content: protected virtual bool OnSetValue (object eventSender, System.Xaml.XamlMember member, object value);
    parameters:
    - id: eventSender
      type: System.Object
      description: "O objeto como a fonte para o manipulador de relatório."
    - id: member
      type: System.Xaml.XamlMember
      description: "O nome da propriedade a ser definida, que é passado para o manipulador como parte do <xref href=&quot;System.Windows.Markup.XamlSetValueEventArgs&quot;> </xref>."
    - id: value
      type: System.Object
      description: "O valor para fornecer para a propriedade que é chamada por `property`. O valor é passado para o manipulador como parte do <xref href=&quot;System.Windows.Markup.XamlSetValueEventArgs&quot;> </xref>."
    return:
      type: System.Boolean
      description: "Um valor booliano que é definido por qualquer manipulador associado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Consulte comentários."
  overload: System.Xaml.XamlObjectWriter.OnSetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.Result
  id: Result
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: Result
  nameWithType: XamlObjectWriter.Result
  fullName: System.Xaml.XamlObjectWriter.Result
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Obtém o último objeto que foi gravado. Normalmente chamado apenas quando o fluxo do nó é o final e o gráfico de objeto é concluído."
  remarks: "O uso mais comum de resultado é para chamá-lo somente quando o fluxo do nó é conhecido para ser seu final e o gráfico de objeto for concluído. Caso contrário, o gráfico de objeto poderá ser incompleto e não é útil para a maioria dos cenários de plataforma.       Resultado normalmente contém apenas um valor não nulo se ele é chamado imediatamente após uma chamada para <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>, e se o escopo atual é no membro onde o objeto fornece um valor.</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>"
  syntax:
    content: public virtual object Result { get; }
    return:
      type: System.Object
      description: "O último objeto gravado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. Consulte comentários."
  overload: System.Xaml.XamlObjectWriter.Result*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.RootNameScope
  id: RootNameScope
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: RootNameScope
  nameWithType: XamlObjectWriter.RootNameScope
  fullName: System.Xaml.XamlObjectWriter.RootNameScope
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Obtém o <xref:System.Windows.Markup.INameScope>serviço que mantém o namescope XAML para a raiz do nó absoluto do gravador de objeto XAML.</xref:System.Windows.Markup.INameScope>"
  remarks: "O valor dessa propriedade pode vir de contexto de gravador do objeto."
  syntax:
    content: public System.Windows.Markup.INameScope RootNameScope { get; }
    return:
      type: System.Windows.Markup.INameScope
      description: "O <xref:System.Windows.Markup.INameScope>serviço que mantém o namescope XAML para a raiz atual do gravador de objeto.</xref:System.Windows.Markup.INameScope>"
  overload: System.Xaml.XamlObjectWriter.RootNameScope*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.SchemaContext
  id: SchemaContext
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: SchemaContext
  nameWithType: XamlObjectWriter.SchemaContext
  fullName: System.Xaml.XamlObjectWriter.SchemaContext
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Obtém o contexto do esquema XAML ativo."
  remarks: "Contexto do esquema XAML é uma fonte de informações necessárias para cenários de gravação do objeto mais práticos. O contexto do esquema XAML influencia a pesquisa de tipo para tipos de backup e contém informações sobre os assemblies onde existem tipos de backup. O contexto do esquema XAML padrão baseia-se em regras de mapeamento de tipo CLR. Estruturas normalmente fornecem seu próprio contexto de esquema XAML para assegurar que os mecanismos de carregamento de assembly correspondem modelos de aplicativo amd programação do framework."
  syntax:
    content: public override System.Xaml.XamlSchemaContext SchemaContext { get; }
    return:
      type: System.Xaml.XamlSchemaContext
      description: "O contexto do esquema XAML."
  overload: System.Xaml.XamlObjectWriter.SchemaContext*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)
  id: SetLineInfo(System.Int32,System.Int32)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: SetLineInfo(Int32,Int32)
  nameWithType: XamlObjectWriter.SetLineInfo(Int32,Int32)
  fullName: System.Xaml.XamlObjectWriter.SetLineInfo(Int32,Int32)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Implementa &lt;xref:System.Xaml.IXamlLineInfoConsumer.SetLineInfo%2A?displayProperty=fullName&gt; e fornece informações de linha para exceções."
  remarks: "Esse método de serviço não se destina a ser chamado diretamente no seu código. No entanto, se você estiver criando uma classe derivada de <xref:System.Xaml.XamlObjectWriter>e esperar relatar um contexto em que os números de linha estão disponíveis ou não são úteis, esse método pode ser chamado.</xref:System.Xaml.XamlObjectWriter>"
  syntax:
    content: public void SetLineInfo (int lineNumber, int linePosition);
    parameters:
    - id: lineNumber
      type: System.Int32
      description: "O número da linha do leitor."
    - id: linePosition
      type: System.Int32
      description: "A posição da linha do leitor."
  overload: System.Xaml.XamlObjectWriter.SetLineInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  id: ShouldProvideLineInfo
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: ShouldProvideLineInfo
  nameWithType: XamlObjectWriter.ShouldProvideLineInfo
  fullName: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  type: Property
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Obtém um valor que informa se um serviço de informações de linha deve fornecer valores e, portanto, também deve chamar o <xref:System.Xaml.IXamlLineInfoConsumer.SetLineInfo*>método quando ele é relevante.</xref:System.Xaml.IXamlLineInfoConsumer.SetLineInfo*>"
  remarks: "Essa implementação sempre retorna `true`."
  syntax:
    content: public bool ShouldProvideLineInfo { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as informações de linha são usadas pelo gravador; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteEndMember
  id: WriteEndMember
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteEndMember()
  nameWithType: XamlObjectWriter.WriteEndMember()
  fullName: System.Xaml.XamlObjectWriter.WriteEndMember()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Fecha o escopo do membro atual e pode gravar o valor de escopo do membro enquanto ela será fechada. O novo escopo torna-se o escopo do objeto pai do membro."
  syntax:
    content: public override void WriteEndMember ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.WriteEndMember*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "Falha ao criar o valor do membro de um nó de valor é encontrado entre essa chamada e anterior <xref uid=&quot;langword_csharp_StartMember&quot; name=&quot;StartMember&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteEndObject
  id: WriteEndObject
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteEndObject()
  nameWithType: XamlObjectWriter.WriteEndObject()
  fullName: System.Xaml.XamlObjectWriter.WriteEndObject()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Fecha o escopo do objeto atual em que o gravador. O novo escopo de objeto se torna o escopo do membro pai."
  remarks: "Se este `EndObject` posição escopo está fechando o objeto raiz, o novo escopo de objeto se torna o escopo raiz.       A chamada para <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>talvez ainda não tiver criado o objeto como um membro de objeto pode ser um caminho de inicialização necessária, como texto de inicialização ou parâmetros de inicialização.</xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> Para esses casos, a chamada para WriteEndObject realmente grava o objeto."
  syntax:
    content: public override void WriteEndObject ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.WriteEndObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteGetObject
  id: WriteGetObject
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteGetObject()
  nameWithType: XamlObjectWriter.WriteGetObject()
  fullName: System.Xaml.XamlObjectWriter.WriteGetObject()
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Grava conceitual <xref uid=&quot;langword_csharp_StartObject&quot; name=&quot;StartObject&quot; href=&quot;&quot;> </xref> para o gráfico de objeto quando o objeto especificado é um valor padrão ou implícito da propriedade pai. O valor implícita vem de informações que são obtidas a partir do contexto do esquema XAML e informações de tipo de backup, em vez de ser especificada como um valor de objeto no conjunto de nós XAML entrado."
  remarks: "A diferença entre a escrever com WriteGetObject e gravar com <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>pode ser visto no gráfico de objeto resultante.</xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> WriteGetObject não construir uma instância de um tipo porque a API WriteGetObject não tem informações para informar o gráfico de objeto do que construir. Em vez disso, o objeto foi criado quando a propriedade pai foi inicializada; para um <xref:System.Xaml.XamlObjectWriter>não precisa construí-la.</xref:System.Xaml.XamlObjectWriter> Por outro lado, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>Especifica que uma instância desse tipo deve ser criada e inserida no gráfico do objeto.</xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>       Se você considerar o fluxo do nó XAML como uma série de quadros, um WriteGetObject é equilibrada para um <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>chame.</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> Portanto, o número de adição de WriteGetObject <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>chamadas devem ser igual ao número de <xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A>chamadas como parte de uma avaliação completa da gravação do objeto de fluxo do nó XAML.</xref:System.Xaml.XamlObjectWriter.WriteEndObject%2A> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>       Conceitual `StartObject` posição de um objeto implícita no gráfico de objeto é necessário porque, embora o valor do objeto é um padrão implícito, esse objeto ainda pode ter membros que precisam ser gravados com base no fluxo do nó XAML. Um cenário típico em que isso ocorre é que quando <xref:System.Xaml.XamlObjectWriter>gravações nós de membro para uma propriedade de coleção e a inicialização de coleção é implícita para criar o objeto que possui a propriedade de coleção.</xref:System.Xaml.XamlObjectWriter>"
  syntax:
    content: public override void WriteGetObject ();
    parameters: []
  overload: System.Xaml.XamlObjectWriter.WriteGetObject*
  exceptions: []
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)
  id: WriteNamespace(System.Xaml.NamespaceDeclaration)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteNamespace(NamespaceDeclaration)
  nameWithType: XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
  fullName: System.Xaml.XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Define uma declaração de namespace que se aplica ao seguinte escopo de objeto ou escopo do membro."
  remarks: "Uma declaração de namespace pode ser gravada se o escopo atual é um escopo raiz, o escopo do objeto ou o escopo do membro. No entanto, WriteNamespace só pode ser chamado imediatamente antes de uma chamada para um dos seguintes: WriteNamespace, <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>, ou <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A> O caso de WriteNamespace consecutivo é para gravar várias declarações de namespace ao mesmo nó. Por fim, o <xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>ou <xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A>deve ser chamado.</xref:System.Xaml.XamlObjectWriter.WriteStartMember%2A> </xref:System.Xaml.XamlObjectWriter.WriteStartObject%2A>       WriteNamespace não usa um `Start` / `End` metáfora. Embora um namespace XAML tem membros no sentido de representação do CLR, os membros são conhecidos e não precisa ser representado como um tipo especial de <xref:System.Xaml.XamlMember>para extensibilidade.</xref:System.Xaml.XamlMember> Para acessar os valores de um <xref:System.Xaml.NamespaceDeclaration>, você acessa seu <xref:System.Xaml.NamespaceDeclaration.Namespace%2A>e <xref:System.Xaml.NamespaceDeclaration.Prefix%2A>Propriedades.</xref:System.Xaml.NamespaceDeclaration.Prefix%2A> </xref:System.Xaml.NamespaceDeclaration.Namespace%2A> </xref:System.Xaml.NamespaceDeclaration>       Uma declaração de namespace pode ter um <xref:System.String.Empty?displayProperty=fullName>valor para o prefixo.</xref:System.String.Empty?displayProperty=fullName> Um <xref:System.String.Empty?displayProperty=fullName>prefixo representa uma declaração de namespace XAML padrão.</xref:System.String.Empty?displayProperty=fullName> Não tente usar null para representar o prefixo padrão.  ele gera uma exceção nessa API. Para obter mais informações, consulte <xref:System.Xaml.NamespaceDeclaration>.</xref:System.Xaml.NamespaceDeclaration>"
  syntax:
    content: public override void WriteNamespace (System.Xaml.NamespaceDeclaration namespaceDeclaration);
    parameters:
    - id: namespaceDeclaration
      type: System.Xaml.NamespaceDeclaration
      description: "A declaração de namespace para gravação."
  overload: System.Xaml.XamlObjectWriter.WriteNamespace*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>namespaceDeclaration</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A component of <code>namespaceDeclaration</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.Xaml.XamlObjectReaderException
    commentId: T:System.Xaml.XamlObjectReaderException
    description: "Tentativa de gravar um nó de namespace XAML em um escopo inválido."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)
  id: WriteStartMember(System.Xaml.XamlMember)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteStartMember(XamlMember)
  nameWithType: XamlObjectWriter.WriteStartMember(XamlMember)
  fullName: System.Xaml.XamlObjectWriter.WriteStartMember(XamlMember)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Grava um novo nó de membro para o escopo atual do objeto, e o escopo se torna um novo escopo do membro."
  remarks: >-
    > [!TIP]

    >  Watch for a <xref:System.Xaml.XamlDuplicateMemberException>, which occurs when the same XAML property is set twice in the XAML input. In simple cases, such as when the same property is set in both attribute syntax and property element syntax, you can easily see this exception in the input markup. However, more subtle cases can occur that are more difficult to spot. For example, this exception might occur if you set a XAML content property, if you involve XAML ambient properties, and if a property enables both an attachable usage and an instance usage. In the debugging phases of development, you can often locate this exception by viewing the intermediate XAML node representation that connects the markup read and the object graph write.
  syntax:
    content: public override void WriteStartMember (System.Xaml.XamlMember property);
    parameters:
    - id: property
      type: System.Xaml.XamlMember
      description: "A propriedade XAML para gravação. Normalmente você obter esse valor de um leitor XAML por meio de fluxo do nó XAML intermediário."
  overload: System.Xaml.XamlObjectWriter.WriteStartMember*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "<code>property</code>has <xref:System.Xaml.XamlMember.IsUnknown*> set to <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.       - ou - <xref:System.Xaml.XamlLanguage.UnknownContent*> passado, que indica que o fluxo do nó XAML continha conteúdo de um objeto que não oferece suporte a conteúdo.       - ou - tentou gravar um membro de início em um escopo inválido."
  - type: System.Xaml.XamlDuplicateMemberException
    commentId: T:System.Xaml.XamlDuplicateMemberException
    description: "<code>property</code>Especifica uma propriedade que já explicitamente é definida no escopo do objeto pai."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>property</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)
  id: WriteStartObject(System.Xaml.XamlType)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteStartObject(XamlType)
  nameWithType: XamlObjectWriter.WriteStartObject(XamlType)
  fullName: System.Xaml.XamlObjectWriter.WriteStartObject(XamlType)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Grava um nó de objeto no escopo atual e define o escopo para um novo escopo de objeto."
  syntax:
    content: public override void WriteStartObject (System.Xaml.XamlType xamlType);
    parameters:
    - id: xamlType
      type: System.Xaml.XamlType
      description: "O tipo para gravação. Normalmente você obter esse valor de um leitor XAML."
  overload: System.Xaml.XamlObjectWriter.WriteStartObject*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "Processando uma <xref:System.Xaml.XamlType.IsUnknown*>de tipo e não é possível criar um objeto.</xref:System.Xaml.XamlType.IsUnknown*>       - ou - tentou gravar um objeto de início em um escopo inválido."
  - type: System.Xaml.XamlParseException
    commentId: T:System.Xaml.XamlParseException
    description: "Tentativa de gravar um objeto raiz quando o objeto raiz já foi fornecido nas configurações."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>xamlType</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Xaml.XamlObjectWriter.WriteValue(System.Object)
  id: WriteValue(System.Object)
  parent: System.Xaml.XamlObjectWriter
  langs:
  - csharp
  name: WriteValue(Object)
  nameWithType: XamlObjectWriter.WriteValue(Object)
  fullName: System.Xaml.XamlObjectWriter.WriteValue(Object)
  type: Method
  assemblies:
  - System.Xaml
  namespace: System.Xaml
  summary: "Grava um valor para o escopo do membro atual. Se o escopo atual está dentro de uma coleção, um dicionário ou um objeto de matriz, o valor deve ser adicionado à coleção, dicionário ou matriz."
  syntax:
    content: public override void WriteValue (object value);
    parameters:
    - id: value
      type: System.Object
      description: "O valor a ser gravado."
  overload: System.Xaml.XamlObjectWriter.WriteValue*
  exceptions:
  - type: System.Xaml.XamlObjectWriterException
    commentId: T:System.Xaml.XamlObjectWriterException
    description: "Tentativa de gravar um valor em um escopo inválido."
  platform:
  - net462
references:
- uid: System.Xaml.XamlWriter
  isExternal: false
  name: System.Xaml.XamlWriter
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Xaml.XamlObjectWriterException
  parent: System.Xaml
  isExternal: false
  name: XamlObjectWriterException
  nameWithType: XamlObjectWriterException
  fullName: System.Xaml.XamlObjectWriterException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.Xaml.XamlObjectReaderException
  parent: System.Xaml
  isExternal: false
  name: XamlObjectReaderException
  nameWithType: XamlObjectReaderException
  fullName: System.Xaml.XamlObjectReaderException
- uid: System.Xaml.XamlDuplicateMemberException
  parent: System.Xaml
  isExternal: false
  name: XamlDuplicateMemberException
  nameWithType: XamlDuplicateMemberException
  fullName: System.Xaml.XamlDuplicateMemberException
- uid: System.Xaml.XamlParseException
  parent: System.Xaml
  isExternal: false
  name: XamlParseException
  nameWithType: XamlParseException
  fullName: System.Xaml.XamlParseException
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: XamlObjectWriter(XamlSchemaContext)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext)
- uid: System.Xaml.XamlSchemaContext
  parent: System.Xaml
  isExternal: false
  name: XamlSchemaContext
  nameWithType: XamlSchemaContext
  fullName: System.Xaml.XamlSchemaContext
- uid: System.Xaml.XamlObjectWriter.#ctor(System.Xaml.XamlSchemaContext,System.Xaml.XamlObjectWriterSettings)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  nameWithType: XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
  fullName: System.Xaml.XamlObjectWriter.XamlObjectWriter(XamlSchemaContext,XamlObjectWriterSettings)
- uid: System.Xaml.XamlObjectWriterSettings
  parent: System.Xaml
  isExternal: false
  name: XamlObjectWriterSettings
  nameWithType: XamlObjectWriterSettings
  fullName: System.Xaml.XamlObjectWriterSettings
- uid: System.Xaml.XamlObjectWriter.Clear
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Clear()
  nameWithType: XamlObjectWriter.Clear()
  fullName: System.Xaml.XamlObjectWriter.Clear()
- uid: System.Xaml.XamlObjectWriter.Dispose(System.Boolean)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: XamlObjectWriter.Dispose(Boolean)
  fullName: System.Xaml.XamlObjectWriter.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterBeginInit(Object)
  nameWithType: XamlObjectWriter.OnAfterBeginInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterBeginInit(Object)
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterEndInit(Object)
  nameWithType: XamlObjectWriter.OnAfterEndInit(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterEndInit(Object)
- uid: System.Xaml.XamlObjectWriter.OnAfterProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterProperties(Object)
  nameWithType: XamlObjectWriter.OnAfterProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnAfterProperties(Object)
- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnBeforeProperties(Object)
  nameWithType: XamlObjectWriter.OnBeforeProperties(Object)
  fullName: System.Xaml.XamlObjectWriter.OnBeforeProperties(Object)
- uid: System.Xaml.XamlObjectWriter.OnSetValue(System.Object,System.Xaml.XamlMember,System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnSetValue(Object,XamlMember,Object)
  nameWithType: XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
  fullName: System.Xaml.XamlObjectWriter.OnSetValue(Object,XamlMember,Object)
- uid: System.Xaml.XamlMember
  parent: System.Xaml
  isExternal: false
  name: XamlMember
  nameWithType: XamlMember
  fullName: System.Xaml.XamlMember
- uid: System.Xaml.XamlObjectWriter.Result
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Result
  nameWithType: XamlObjectWriter.Result
  fullName: System.Xaml.XamlObjectWriter.Result
- uid: System.Xaml.XamlObjectWriter.RootNameScope
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: RootNameScope
  nameWithType: XamlObjectWriter.RootNameScope
  fullName: System.Xaml.XamlObjectWriter.RootNameScope
- uid: System.Windows.Markup.INameScope
  parent: System.Windows.Markup
  isExternal: true
  name: INameScope
  nameWithType: INameScope
  fullName: System.Windows.Markup.INameScope
- uid: System.Xaml.XamlObjectWriter.SchemaContext
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SchemaContext
  nameWithType: XamlObjectWriter.SchemaContext
  fullName: System.Xaml.XamlObjectWriter.SchemaContext
- uid: System.Xaml.XamlObjectWriter.SetLineInfo(System.Int32,System.Int32)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SetLineInfo(Int32,Int32)
  nameWithType: XamlObjectWriter.SetLineInfo(Int32,Int32)
  fullName: System.Xaml.XamlObjectWriter.SetLineInfo(Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: ShouldProvideLineInfo
  nameWithType: XamlObjectWriter.ShouldProvideLineInfo
  fullName: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo
- uid: System.Xaml.XamlObjectWriter.WriteEndMember
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndMember()
  nameWithType: XamlObjectWriter.WriteEndMember()
  fullName: System.Xaml.XamlObjectWriter.WriteEndMember()
- uid: System.Xaml.XamlObjectWriter.WriteEndObject
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndObject()
  nameWithType: XamlObjectWriter.WriteEndObject()
  fullName: System.Xaml.XamlObjectWriter.WriteEndObject()
- uid: System.Xaml.XamlObjectWriter.WriteGetObject
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteGetObject()
  nameWithType: XamlObjectWriter.WriteGetObject()
  fullName: System.Xaml.XamlObjectWriter.WriteGetObject()
- uid: System.Xaml.XamlObjectWriter.WriteNamespace(System.Xaml.NamespaceDeclaration)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteNamespace(NamespaceDeclaration)
  nameWithType: XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
  fullName: System.Xaml.XamlObjectWriter.WriteNamespace(NamespaceDeclaration)
- uid: System.Xaml.NamespaceDeclaration
  parent: System.Xaml
  isExternal: false
  name: NamespaceDeclaration
  nameWithType: NamespaceDeclaration
  fullName: System.Xaml.NamespaceDeclaration
- uid: System.Xaml.XamlObjectWriter.WriteStartMember(System.Xaml.XamlMember)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartMember(XamlMember)
  nameWithType: XamlObjectWriter.WriteStartMember(XamlMember)
  fullName: System.Xaml.XamlObjectWriter.WriteStartMember(XamlMember)
- uid: System.Xaml.XamlObjectWriter.WriteStartObject(System.Xaml.XamlType)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartObject(XamlType)
  nameWithType: XamlObjectWriter.WriteStartObject(XamlType)
  fullName: System.Xaml.XamlObjectWriter.WriteStartObject(XamlType)
- uid: System.Xaml.XamlType
  parent: System.Xaml
  isExternal: false
  name: XamlType
  nameWithType: XamlType
  fullName: System.Xaml.XamlType
- uid: System.Xaml.XamlObjectWriter.WriteValue(System.Object)
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteValue(Object)
  nameWithType: XamlObjectWriter.WriteValue(Object)
  fullName: System.Xaml.XamlObjectWriter.WriteValue(Object)
- uid: System.Xaml.XamlObjectWriter.#ctor*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: XamlObjectWriter
  nameWithType: XamlObjectWriter.XamlObjectWriter
- uid: System.Xaml.XamlObjectWriter.Clear*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Clear
  nameWithType: XamlObjectWriter.Clear
- uid: System.Xaml.XamlObjectWriter.Dispose*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Dispose
  nameWithType: XamlObjectWriter.Dispose
- uid: System.Xaml.XamlObjectWriter.OnAfterBeginInit*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterBeginInit
  nameWithType: XamlObjectWriter.OnAfterBeginInit
- uid: System.Xaml.XamlObjectWriter.OnAfterEndInit*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterEndInit
  nameWithType: XamlObjectWriter.OnAfterEndInit
- uid: System.Xaml.XamlObjectWriter.OnAfterProperties*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnAfterProperties
  nameWithType: XamlObjectWriter.OnAfterProperties
- uid: System.Xaml.XamlObjectWriter.OnBeforeProperties*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnBeforeProperties
  nameWithType: XamlObjectWriter.OnBeforeProperties
- uid: System.Xaml.XamlObjectWriter.OnSetValue*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: OnSetValue
  nameWithType: XamlObjectWriter.OnSetValue
- uid: System.Xaml.XamlObjectWriter.Result*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: Result
  nameWithType: XamlObjectWriter.Result
- uid: System.Xaml.XamlObjectWriter.RootNameScope*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: RootNameScope
  nameWithType: XamlObjectWriter.RootNameScope
- uid: System.Xaml.XamlObjectWriter.SchemaContext*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SchemaContext
  nameWithType: XamlObjectWriter.SchemaContext
- uid: System.Xaml.XamlObjectWriter.SetLineInfo*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: SetLineInfo
  nameWithType: XamlObjectWriter.SetLineInfo
- uid: System.Xaml.XamlObjectWriter.ShouldProvideLineInfo*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: ShouldProvideLineInfo
  nameWithType: XamlObjectWriter.ShouldProvideLineInfo
- uid: System.Xaml.XamlObjectWriter.WriteEndMember*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndMember
  nameWithType: XamlObjectWriter.WriteEndMember
- uid: System.Xaml.XamlObjectWriter.WriteEndObject*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteEndObject
  nameWithType: XamlObjectWriter.WriteEndObject
- uid: System.Xaml.XamlObjectWriter.WriteGetObject*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteGetObject
  nameWithType: XamlObjectWriter.WriteGetObject
- uid: System.Xaml.XamlObjectWriter.WriteNamespace*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteNamespace
  nameWithType: XamlObjectWriter.WriteNamespace
- uid: System.Xaml.XamlObjectWriter.WriteStartMember*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartMember
  nameWithType: XamlObjectWriter.WriteStartMember
- uid: System.Xaml.XamlObjectWriter.WriteStartObject*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteStartObject
  nameWithType: XamlObjectWriter.WriteStartObject
- uid: System.Xaml.XamlObjectWriter.WriteValue*
  parent: System.Xaml.XamlObjectWriter
  isExternal: false
  name: WriteValue
  nameWithType: XamlObjectWriter.WriteValue
