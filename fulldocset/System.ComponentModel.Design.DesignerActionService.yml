### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.DesignerActionService
  id: DesignerActionService
  children:
  - System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  - System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  - System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.Clear
  - System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  - System.ComponentModel.Design.DesignerActionService.Dispose
  - System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  - System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  - System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  - System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  langs:
  - csharp
  name: DesignerActionService
  nameWithType: DesignerActionService
  fullName: System.ComponentModel.Design.DesignerActionService
  type: Class
  summary: "Estabelece um serviço de tempo de design que gerencia a coleção de <xref href=&quot;System.ComponentModel.Design.DesignerActionItem&quot;> </xref> objetos para os componentes."
  remarks: "A classe DesignerActionService é responsável por gerenciar a coleção de <xref:System.ComponentModel.Design.DesignerActionItem>objetos para cada instância de um componente que existe em um formulário em tempo de design.</xref:System.ComponentModel.Design.DesignerActionItem> Essa classe permite que um modelo de push direto de criação do item e é usado principalmente para uso por desenvolvedores de ferramentas de tempo de design, embora também possa ser usado pelo componente e desenvolvedores de controle personalizado.       Os desenvolvedores da ferramenta de tempo de design serão necessário determinar a lista de itens a serem exibidos para um componente e determinar quando essa lista muda. Eles também podem criar suplementos que operam em conjunto com objetos do painel de marca inteligente.       Avançado desenvolvedores talvez precise controlar dinamicamente os itens associados a um componente, assim, substituir ou que complementam o modelo de pull padrão do componente. Por exemplo, os comandos de painel podem ser alterados dependendo do contexto de seu uso e o estado de tempo de design do componente.      > [!NOTE] > DesignerActionService o é, na verdade, o um serviço por trás de modelos de push e pull; no entanto, no último caso ele opera implicitamente.       DesignerActionService fornece uma interface simples para acessar e manipular os itens para cada componente, incluindo os seguintes métodos e eventos: - o <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>método determina se o DesignerActionService está atualmente Gerenciando um determinado componente.</xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>      -O <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>método dá suporte à enumeração de listas de itens.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>      -O <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>método permite adicionar um <xref:System.ComponentModel.Design.DesignerActionList>ou <xref:System.ComponentModel.Design.DesignerActionListCollection>ao conjunto de itens existentes para uma instância do componente.</xref:System.ComponentModel.Design.DesignerActionListCollection> </xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Em contraste, o <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>método Remove uma ou todas as listas de item associadas ao componente.</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>          > [!NOTE] > O <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>método representa o modelo de push direto de associar os itens do painel um componente.</xref:System.ComponentModel.Design.DesignerActionService.Add%2A> Por outro lado, o modelo de pull depende substituindo o <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>propriedade da classe do designer para esse componente.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> O ambiente de design é responsável por adicionar esses itens para o DesignerActionService atual quando um componente é criado na superfície de design.          > [!IMPORTANT] > O <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>, <xref:System.ComponentModel.Design.DesignerActionService.Contains%2A>, e <xref:System.ComponentModel.Design.DesignerActionService.Clear%2A>métodos só considere ou afetam itens de modelo de push.</xref:System.ComponentModel.Design.DesignerActionService.Clear%2A> </xref:System.ComponentModel.Design.DesignerActionService.Contains%2A> </xref:System.ComponentModel.Design.DesignerActionService.Remove%2A> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A>      -O <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento indica quando a coleção de itens é alterado para um componente.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>       Como geralmente é desejável usar alguns dos mesmos itens de painel no menu de atalho de tempo de design do componente e seu painel, um alto grau de interoperabilidade existe entre <xref:System.ComponentModel.Design.DesignerActionItem>objetos e verbos do designer.</xref:System.ComponentModel.Design.DesignerActionItem>       Se um designer de componentes não especificar explicitamente um <xref:System.ComponentModel.Design.DesignerActionList>(ou seja, ele não contém um substituído <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>propriedade), em seguida, será criada uma lista de verbos do designer existentes.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> </xref:System.ComponentModel.Design.DesignerActionList> Esses verbos são especificados pelo <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>propriedade.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> Nesse caso, uma classe de lista verbo interno é usada para conter a coleção de entradas de painel de item do verbo.       Se você quiser um <xref:System.ComponentModel.Design.DesignerActionMethodItem>a ser usado como uma entrada no painel e como uma entrada de menu de atalho de tempo de design, você poderá definir o `includeAsDesignerVerb` parâmetro no construtor do item.</xref:System.ComponentModel.Design.DesignerActionMethodItem>       Usar o <xref:System.ComponentModel.Design.DesignerActionUIService>para controlar a exibição de seu designer <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A> </xref:System.ComponentModel.Design.DesignerActionUIService>"
  syntax:
    content: 'public class DesignerActionService : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  id: '#ctor(System.IServiceProvider)'
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: DesignerActionService(IServiceProvider)
  nameWithType: DesignerActionService.DesignerActionService(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionService(IServiceProvider)
  type: Constructor
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> classe."
  remarks: "Um provedor de serviço é necessário para a seleção e alterações de componente de monitoramento. Espera-se para dar suporte a <xref:System.ComponentModel.Design.IDesignerHost>e <xref:System.ComponentModel.Design.IComponentChangeService>tipos.</xref:System.ComponentModel.Design.IComponentChangeService> </xref:System.ComponentModel.Design.IDesignerHost> O <xref:System.ComponentModel.Design.DesignerActionService>classe usa uma tabela interna para gerenciar componentes e seus respectivos <xref:System.ComponentModel.Design.DesignerActionList>marcas inteligentes.</xref:System.ComponentModel.Design.DesignerActionList> </xref:System.ComponentModel.Design.DesignerActionService>       Normalmente, os desenvolvedores de componentes não serão necessário criar uma instância dessa classe; em vez disso, eles podem adquirir uma instância existente por meio de uma chamada para o <xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName>método.</xref:System.ComponentModel.Component.GetService%2A?displayProperty=fullName>"
  syntax:
    content: public DesignerActionService (IServiceProvider serviceProvider);
    parameters:
    - id: serviceProvider
      type: System.IServiceProvider
      description: "O provedor de serviço para o ambiente de tempo de design atual."
  overload: System.ComponentModel.Design.DesignerActionService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  id: Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Add(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Adiciona um <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> à coleção atual de marcas inteligentes gerenciadas."
  remarks: "O método Add representa o modelo de push de adição de itens de marcas inteligentes. O modelo de pull alternativo depende substituindo o <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>propriedade no designer do componente correspondente.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>       Quando este método é chamado, a lista a serem adicionados é verificada para qualquer <xref:System.ComponentModel.Design.DesignerActionMethodItem>com o <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>propriedade definida como `true`.</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> </xref:System.ComponentModel.Design.DesignerActionMethodItem> Esses itens são adicionados à lista de verbos do designer para este componente, por meio de uma chamada para o <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>método.</xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>       Marcas inteligentes são gerenciadas em uma base de instância do componente. A coleção gerenciada pode conter entradas duplicadas.       Este método gera o <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "O <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> para associar as marcas inteligentes com."
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "O <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> que contém os novos itens de marca inteligente a ser adicionado."
  overload: System.ComponentModel.Design.DesignerActionService.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou ambos os parâmetros são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Add(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Adiciona um <xref href=&quot;System.ComponentModel.Design.DesignerActionListCollection&quot;> </xref> à coleção atual de marcas inteligentes gerenciadas."
  remarks: "O método Add representa o modelo de push de adição de itens de marcas inteligentes. O modelo de pull alternativo depende substituindo o <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>propriedade no designer do componente correspondente.</xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>       Quando este método é chamado, a lista a serem adicionados é verificada para qualquer <xref:System.ComponentModel.Design.DesignerActionMethodItem>com o <xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A>propriedade definida como `true`.</xref:System.ComponentModel.Design.DesignerActionMethodItem.IncludeAsDesignerVerb%2A> </xref:System.ComponentModel.Design.DesignerActionMethodItem> Esses itens são adicionados à lista de verbos do designer para este componente, por meio de uma chamada para o <xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>método.</xref:System.ComponentModel.Design.MenuCommandService.AddVerb%2A?displayProperty=fullName>       Marcas inteligentes são gerenciadas em uma base de instância do componente. A coleção gerenciada pode conter entradas duplicadas.       Este método gera o <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Add (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionListCollection designerActionListCollection);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "O <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> para associar as marcas inteligentes com."
    - id: designerActionListCollection
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "O <xref href=&quot;System.ComponentModel.Design.DesignerActionListCollection&quot;> </xref> que contém os novos itens de marca inteligente a ser adicionado."
  overload: System.ComponentModel.Design.DesignerActionService.Add*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou ambos os parâmetros são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Clear
  id: Clear
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Clear()
  nameWithType: DesignerActionService.Clear()
  fullName: System.ComponentModel.Design.DesignerActionService.Clear()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Libera todos os componentes de gerenciamento e limpa todas as listas de marca inteligente do modelo de push."
  remarks: "O método Clear esvazia a tabela interna usada para armazenar informações sobre componentes e suas listas de marca inteligente do modelo de push.      > [!CAUTION] > Porque esse método afeta todos os componentes gerenciados pelo serviço atual e não apenas o componente atual, esse método deve ser usado criteriosamente. Normalmente, o desenvolvedor da ferramenta de design usa quando redefinir uma superfície de design. Os desenvolvedores de componentes devem usar um do <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>métodos em vez disso, para remover a marca inteligente individual de itens ou lista.</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>       Um <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>é gerado para cada componente que foi anteriormente gerenciado pelo serviço atual.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Clear ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerActionService.Clear*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  id: Contains(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Contains(IComponent)
  nameWithType: DesignerActionService.Contains(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Contains(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Determina se o serviço de marca inteligente atual gerencia as listas de ação para o componente especificado."
  remarks: "O método contém reconhece apenas marcas inteligentes do modelo de push, que são associadas a um componente com o <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>método.</xref:System.ComponentModel.Design.DesignerActionService.Add%2A>       Embora não haja nenhuma limitação estrutural no número de unidades simultâneas <xref:System.ComponentModel.Design.DesignerActionService>instâncias criadas por uma ferramenta de tempo de design, normalmente apenas uma única instância do serviço é criada por superfície de design.</xref:System.ComponentModel.Design.DesignerActionService>"
  syntax:
    content: public bool Contains (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "O <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> para pesquisar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o componente é gerenciado pelo serviço atual; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.DesignerActionService.Contains*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  id: DesignerActionListsChanged
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: DesignerActionListsChanged
  nameWithType: DesignerActionService.DesignerActionListsChanged
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  type: Event
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Ocorre quando um <xref href=&quot;System.ComponentModel.Design.DesignerActionList&quot;> </xref> foi removido ou adicionado para qualquer componente."
  remarks: "A tabela a seguir mostra o conjunto de classes especializadas associado ao evento DesignerActionListsChanged.      | Especializado tipo | Descrição |   |----------------------|-----------------|   | <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>| Adiciona informações específicas para o gerenciamento da lista de marcas inteligentes.</xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> Essa classe é especializada do <xref:System.EventArgs>. |   | <xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler>| Conecta-se a <xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs>com seu manipulador. |   | <xref:System.ComponentModel.Design.DesignerActionListsChangedType>| Indica se uma lista foi adicionada ou removida. |       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67).</xref:System.ComponentModel.Design.DesignerActionListsChangedType> </xref:System.ComponentModel.Design.DesignerActionListsChangedEventArgs> </xref:System.ComponentModel.Design.DesignerActionListsChangedEventHandler> </xref:System.EventArgs>"
  syntax:
    content: public event System.ComponentModel.Design.DesignerActionListsChangedEventHandler DesignerActionListsChanged;
    return:
      type: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Dispose
  id: Dispose
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Dispose()
  nameWithType: DesignerActionService.Dispose()
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose()
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Libera todos os recursos usados pelo <xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> classe."
  remarks: "O método Dispose é a implementação do método somente exigida pelo <xref:System.IDisposable>interface.</xref:System.IDisposable> Chame este método quando tiver terminado de usar o <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> Ele executa duas ações principais:-remove o serviço atual da lista de serviços disponíveis no ambiente de design através de uma chamada para o <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>método.</xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>      -Cancela a inscrição para eventos de alteração de componente de associado <xref:System.ComponentModel.Design.IComponentChangeService>interface.</xref:System.ComponentModel.Design.IComponentChangeService>       Chamar Dispose quando terminar de usar o <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> O método Dispose deixa a <xref:System.ComponentModel.Design.DesignerActionService>em um estado inutilizável.</xref:System.ComponentModel.Design.DesignerActionService> Depois de chamar Dispose, você deve liberar todas as referências para o <xref:System.ComponentModel.Design.DesignerActionService>para o coletor de lixo possa recuperar a memória que o <xref:System.ComponentModel.Design.DesignerActionService>estava ocupando.</xref:System.ComponentModel.Design.DesignerActionService> </xref:System.ComponentModel.Design.DesignerActionService> Para obter mais informações, consulte [limpeza de recursos não gerenciados](~/add/includes/ajax-current-ext-md.md) e [implementar um método Dispose](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Sempre chamada Dispose antes de liberar sua última referência a <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> Caso contrário, os recursos que está usando não serão liberados até que o coletor de lixo chame o <xref:System.ComponentModel.Design.DesignerActionService>do objeto `Finalize` método.</xref:System.ComponentModel.Design.DesignerActionService>"
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.ComponentModel.Design.DesignerActionService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DesignerActionService.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Libera os recursos não gerenciados usados pelo <xref href=&quot;System.ComponentModel.Design.DesignerActionService&quot;> </xref> e, opcionalmente, libera os recursos gerenciados."
  remarks: "O <xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A>método é a implementação do método somente exigida pelo <xref:System.IDisposable>interface.</xref:System.IDisposable> </xref:System.ComponentModel.Design.DesignerActionService.Dispose%2A> Chame este método quando tiver terminado de usar o <xref:System.ComponentModel.Design.DesignerActionService>.</xref:System.ComponentModel.Design.DesignerActionService> Ele executa duas ações principais:-remove o serviço atual da lista de serviços disponíveis no ambiente de design através de uma chamada para o <xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>método.</xref:System.ComponentModel.Design.IServiceContainer.RemoveService%2A>      -Cancela a inscrição para eventos de alteração de componente de associado <xref:System.ComponentModel.Design.IComponentChangeService>interface.</xref:System.ComponentModel.Design.IComponentChangeService>       Este método é chamado pelo público `Dispose()` método e o <xref:System.Object.Finalize%2A>método.</xref:System.Object.Finalize%2A> `Dispose()`invoca o protegido `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.ComponentModel.Design.DesignerActionService>referências.</xref:System.ComponentModel.Design.DesignerActionService> Este método chama o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para liberar apenas recursos não gerenciados."
  overload: System.ComponentModel.Design.DesignerActionService.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  id: GetComponentActions(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentActions(IComponent)
  nameWithType: DesignerActionService.GetComponentActions(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Retorna a coleção de listas de itens de marcas inteligentes associadas a um componente."
  remarks: "O método GetComponentActions é equivalente a uma chamada para o <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29>usando o método um `type` parâmetro de <xref:System.ComponentModel.Design.ComponentActionsType>.</xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%28System.ComponentModel.IComponent%2CSystem.ComponentModel.Design.ComponentActionsType%29> Portanto, a coleção retornada conterá as listas por push e pull de marcas inteligentes.       Retornado <xref:System.ComponentModel.Design.DesignerActionListCollection>é a união das listas de itens adicionados por meio de <xref:System.ComponentModel.Design.DesignerActionService.Add%2A>métodos e também as listas obtido a partir o <xref:System.ComponentModel.Design.DesignerCommandSet>instância obtido do site do componente.</xref:System.ComponentModel.Design.DesignerCommandSet> </xref:System.ComponentModel.Design.DesignerActionService.Add%2A> </xref:System.ComponentModel.Design.DesignerActionListCollection>"
  syntax:
    content: public System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "O componente que as marcas inteligentes associadas."
    return:
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "A coleção de marcas inteligentes para o componente especificado."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  id: GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentActions(IComponent,ComponentActionsType)
  nameWithType: DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Retorna a coleção de marcas inteligentes listas de itens do tipo especificado associado ao componente."
  remarks: "Esta versão do sobrecarregados <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>método filtra o `type` parâmetro, que pode ter um dos valores a seguir.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>      | Valor | Descrição |   |-----------|-----------------|   | <xref:System.ComponentModel.Design.ComponentActionsType>| Todas as marcas inteligentes de associadas. |   | <xref:System.ComponentModel.Design.ComponentActionsType>| Modelo de pull inteligente somente marcas. |   | <xref:System.ComponentModel.Design.ComponentActionsType>| Modelo de push inteligentes somente marcas. |       Se o designer associado para um componente não fornece uma lista de marcas inteligentes do modelo de pull, o método GetComponentActions usará em vez disso, os itens de menu de atalho de tempo de design do designer do <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>propriedade.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> </xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.ComponentActionsType> </xref:System.ComponentModel.Design.ComponentActionsType>"
  syntax:
    content: public virtual System.ComponentModel.Design.DesignerActionListCollection GetComponentActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.ComponentActionsType type);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "O componente que as marcas inteligentes associadas."
    - id: type
      type: System.ComponentModel.Design.ComponentActionsType
      description: "O <xref href=&quot;System.ComponentModel.Design.ComponentActionsType&quot;> </xref> para filtrar as marcas inteligentes associadas com."
    return:
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "A coleção de marcas inteligentes do tipo especificado para o componente especificado."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Recupera as marcas inteligentes do modelo de pull associadas ao componente."
  remarks: "O método GetComponentDesignerActions é um método auxiliar para o <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>métodos.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> Pesquisas de GetComponentDesignerActions para o modelo de pull inteligente marcas do tipo <xref:System.ComponentModel.Design.ComponentActionsType>e, em seguida, adiciona esses para fornecido `actionLists` coleção.</xref:System.ComponentModel.Design.ComponentActionsType>       Se o desenvolvedor do componente não fornecer explicitamente uma coleção de marcas inteligentes por meio de <xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>propriedade de seu designer, esse método reutilizará as entradas de menu de atalho de tempo de design, que são obtidas por meio de <xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A>propriedade do designer de.</xref:System.ComponentModel.Design.ComponentDesigner.Verbs%2A> </xref:System.ComponentModel.Design.ComponentDesigner.ActionLists%2A>"
  syntax:
    content: protected virtual void GetComponentDesignerActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "O componente que as marcas inteligentes associadas."
    - id: actionLists
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "A coleção para adicionar as marcas inteligentes associadas ao."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou ambos os parâmetros são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  id: GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: GetComponentServiceActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Recupera as marcas inteligentes do modelo de push associadas ao componente."
  remarks: "O método GetComponentServiceActions é um método auxiliar para o <xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A>métodos.</xref:System.ComponentModel.Design.DesignerActionService.GetComponentActions%2A> Ele procura as marcas inteligentes do tipo de modelo de push <xref:System.ComponentModel.Design.ComponentActionsType>e, em seguida, adiciona esses para fornecido `actionLists` coleção.</xref:System.ComponentModel.Design.ComponentActionsType>"
  syntax:
    content: protected virtual void GetComponentServiceActions (System.ComponentModel.IComponent component, System.ComponentModel.Design.DesignerActionListCollection actionLists);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "O componente que as marcas inteligentes associadas."
    - id: actionLists
      type: System.ComponentModel.Design.DesignerActionListCollection
      description: "A coleção para adicionar as marcas inteligentes associadas ao."
  overload: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou ambos os parâmetros são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  id: Remove(System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(DesignerActionList)
  nameWithType: DesignerActionService.Remove(DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Remove a lista de marca inteligente de todos os componentes gerenciados pelo serviço atual."
  remarks: "Esta versão do <xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>método normalmente é usado por desenvolvedores de ferramentas de design, porque os desenvolvedores de componentes normalmente não sabe que outros componentes existem no espaço de design atual.</xref:System.ComponentModel.Design.DesignerActionService.Remove%2A>       Se for bem-sucedido, esse método gerará o <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "A lista de marcas inteligentes a ser removido."
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>actionList</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  id: Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(IComponent)
  nameWithType: DesignerActionService.Remove(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Remove todas as listas de marcas inteligentes associadas ao componente especificado."
  remarks: "Se for bem-sucedido, o método Remove gera o <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.IComponent comp);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "O componente de desassociar as marcas inteligentes do."
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>comp</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  id: Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  langs:
  - csharp
  name: Remove(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Remove(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent,DesignerActionList)
  type: Method
  assemblies:
  - System.Design
  namespace: System.ComponentModel.Design
  summary: "Remove a lista de marca inteligente especificado do componente especificado."
  remarks: "Se for bem-sucedido, o método Remove gera o <xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>evento.</xref:System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged>"
  syntax:
    content: public void Remove (System.ComponentModel.IComponent comp, System.ComponentModel.Design.DesignerActionList actionList);
    parameters:
    - id: comp
      type: System.ComponentModel.IComponent
      description: "O componente de desassociar as marcas inteligentes do."
    - id: actionList
      type: System.ComponentModel.Design.DesignerActionList
      description: "A lista de marcas inteligentes para remover."
  overload: System.ComponentModel.Design.DesignerActionService.Remove*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "Um ou ambos os parâmetros são <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.ComponentModel.Design.DesignerActionService.#ctor(System.IServiceProvider)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionService(IServiceProvider)
  nameWithType: DesignerActionService.DesignerActionService(IServiceProvider)
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionService(IServiceProvider)
- uid: System.IServiceProvider
  parent: System
  isExternal: true
  name: IServiceProvider
  nameWithType: IServiceProvider
  fullName: System.IServiceProvider
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionList)
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.Design.DesignerActionList
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionList
  nameWithType: DesignerActionList
  fullName: System.ComponentModel.Design.DesignerActionList
- uid: System.ComponentModel.Design.DesignerActionService.Add(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.Add(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.Add(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionListCollection
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionListCollection
  nameWithType: DesignerActionListCollection
  fullName: System.ComponentModel.Design.DesignerActionListCollection
- uid: System.ComponentModel.Design.DesignerActionService.Clear
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Clear()
  nameWithType: DesignerActionService.Clear()
  fullName: System.ComponentModel.Design.DesignerActionService.Clear()
- uid: System.ComponentModel.Design.DesignerActionService.Contains(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Contains(IComponent)
  nameWithType: DesignerActionService.Contains(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Contains(IComponent)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionListsChanged
  nameWithType: DesignerActionService.DesignerActionListsChanged
  fullName: System.ComponentModel.Design.DesignerActionService.DesignerActionListsChanged
- uid: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
  parent: System.ComponentModel.Design
  isExternal: false
  name: DesignerActionListsChangedEventHandler
  nameWithType: DesignerActionListsChangedEventHandler
  fullName: System.ComponentModel.Design.DesignerActionListsChangedEventHandler
- uid: System.ComponentModel.Design.DesignerActionService.Dispose
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose()
  nameWithType: DesignerActionService.Dispose()
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose()
- uid: System.ComponentModel.Design.DesignerActionService.Dispose(System.Boolean)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DesignerActionService.Dispose(Boolean)
  fullName: System.ComponentModel.Design.DesignerActionService.Dispose(Boolean)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions(IComponent)
  nameWithType: DesignerActionService.GetComponentActions(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions(System.ComponentModel.IComponent,System.ComponentModel.Design.ComponentActionsType)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions(IComponent,ComponentActionsType)
  nameWithType: DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentActions(IComponent,ComponentActionsType)
- uid: System.ComponentModel.Design.ComponentActionsType
  parent: System.ComponentModel.Design
  isExternal: false
  name: ComponentActionsType
  nameWithType: ComponentActionsType
  fullName: System.ComponentModel.Design.ComponentActionsType
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionListCollection)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentServiceActions(IComponent,DesignerActionListCollection)
  nameWithType: DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
  fullName: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions(IComponent,DesignerActionListCollection)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(DesignerActionList)
  nameWithType: DesignerActionService.Remove(DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(DesignerActionList)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(IComponent)
  nameWithType: DesignerActionService.Remove(IComponent)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent)
- uid: System.ComponentModel.Design.DesignerActionService.Remove(System.ComponentModel.IComponent,System.ComponentModel.Design.DesignerActionList)
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove(IComponent,DesignerActionList)
  nameWithType: DesignerActionService.Remove(IComponent,DesignerActionList)
  fullName: System.ComponentModel.Design.DesignerActionService.Remove(IComponent,DesignerActionList)
- uid: System.ComponentModel.Design.DesignerActionService.#ctor*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: DesignerActionService
  nameWithType: DesignerActionService.DesignerActionService
- uid: System.ComponentModel.Design.DesignerActionService.Add*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Add
  nameWithType: DesignerActionService.Add
- uid: System.ComponentModel.Design.DesignerActionService.Clear*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Clear
  nameWithType: DesignerActionService.Clear
- uid: System.ComponentModel.Design.DesignerActionService.Contains*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Contains
  nameWithType: DesignerActionService.Contains
- uid: System.ComponentModel.Design.DesignerActionService.Dispose*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Dispose
  nameWithType: DesignerActionService.Dispose
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentActions
  nameWithType: DesignerActionService.GetComponentActions
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentDesignerActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentDesignerActions
  nameWithType: DesignerActionService.GetComponentDesignerActions
- uid: System.ComponentModel.Design.DesignerActionService.GetComponentServiceActions*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: GetComponentServiceActions
  nameWithType: DesignerActionService.GetComponentServiceActions
- uid: System.ComponentModel.Design.DesignerActionService.Remove*
  parent: System.ComponentModel.Design.DesignerActionService
  isExternal: false
  name: Remove
  nameWithType: DesignerActionService.Remove
