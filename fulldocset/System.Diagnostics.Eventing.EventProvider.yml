### YamlMime:ManagedReference
items:
- uid: System.Diagnostics.Eventing.EventProvider
  id: EventProvider
  children:
  - System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)
  - System.Diagnostics.Eventing.EventProvider.Close
  - System.Diagnostics.Eventing.EventProvider.CreateActivityId
  - System.Diagnostics.Eventing.EventProvider.Dispose
  - System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)
  - System.Diagnostics.Eventing.EventProvider.Finalize
  - System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError
  - System.Diagnostics.Eventing.EventProvider.IsEnabled
  - System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)
  - System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)
  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  - System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  - System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)
  - System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)
  - System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  - System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  langs:
  - csharp
  name: EventProvider
  nameWithType: EventProvider
  fullName: System.Diagnostics.Eventing.EventProvider
  type: Class
  summary: "Use esta classe para gravar eventos."
  remarks: "Para consumir eventos gravados usando o <xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>e <xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A>métodos, os eventos devem ser definidos em um manifesto; eventos gravados usando o <xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A>método não exigem um manifesto.</xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>       Eventos podem conter os seguintes tipos de dados gerenciados: - bool - Boolean - byte - char - decimal - duplo usa - float - cadeia de caracteres do Guid - int - IntPtr - longo - sbyte - curta - - uint - UInt64 se um evento em seu manifesto de `Boolean` em tipo, você não pode gravar o elemento de dados usando um `Boolean` tipo de dados no seu código gerenciado. O `Boolean` no tipo em seu manifesto espera um valor de 4 bytes e um `Boolean` tipo de dados em código gerenciado é de 1 byte. Em vez disso, você deve usar um `int` tipo de dados para gravar o valor. Se você desejar fazer uma `Boolean` valor, use o UInt8 no tipo em seu manifesto."
  syntax:
    content: 'public class EventProvider : IDisposable'
  inheritance:
  - System.Object
  implements:
  - System.IDisposable
  inheritedMembers: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)
  id: '#ctor(System.Guid)'
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: EventProvider(Guid)
  nameWithType: EventProvider.EventProvider(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.EventProvider(Guid)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Diagnostics.Eventing.EventProvider&quot;> </xref> classe."
  remarks: "Registra o provedor. Para remover o registro quando terminar, chame o <xref:System.Diagnostics.Eventing.EventProvider.Close%2A>método.</xref:System.Diagnostics.Eventing.EventProvider.Close%2A>"
  syntax:
    content: public EventProvider (Guid providerGuid);
    parameters:
    - id: providerGuid
      type: System.Guid
      description: "GUID que identifica exclusivamente o provedor."
  overload: System.Diagnostics.Eventing.EventProvider.#ctor*
  exceptions:
  - type: System.InsufficientMemoryException
    commentId: T:System.InsufficientMemoryException
    description: "Não há memória suficiente para concluir a operação."
  - type: System.PlatformNotSupportedException
    commentId: T:System.PlatformNotSupportedException
    description: "As classes de <xref href=&quot;System.Diagnostics.Eventing&quot;> </xref> trabalho namespace somente no Windows Vista."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> providerGuid </code> parâmetro não pode ser nulo."
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Um erro retornado pelo subsistema ETW."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Close
  id: Close
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Close()
  nameWithType: EventProvider.Close()
  fullName: System.Diagnostics.Eventing.EventProvider.Close()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Remove o registro do provedor do subsistema de ETW e libera todos os recursos não gerenciados."
  remarks: "Você deve chamar este método quando terminar em vez de esperar o sistema descartar os recursos."
  syntax:
    content: public virtual void Close ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProvider.Close*
  exceptions:
  - type: System.ComponentModel.Win32Exception
    commentId: T:System.ComponentModel.Win32Exception
    description: "Um erro retornado pelo subsistema ETW."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId
  id: CreateActivityId
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: CreateActivityId()
  nameWithType: EventProvider.CreateActivityId()
  fullName: System.Diagnostics.Eventing.EventProvider.CreateActivityId()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Cria um identificador de atividade exclusivo para o provedor."
  remarks: "Este é um método estático."
  syntax:
    content: public static Guid CreateActivityId ();
    parameters: []
    return:
      type: System.Guid
      description: "Um Guid exclusivo que você usa ao chamar o <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId*>método para definir o identificador da atividade para o provedor.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId*>"
  overload: System.Diagnostics.Eventing.EventProvider.CreateActivityId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Dispose
  id: Dispose
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Dispose()
  nameWithType: EventProvider.Dispose()
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Libera os recursos usados por este <xref href=&quot;System.Diagnostics.Eventing.EventProvider&quot;> </xref> objeto."
  syntax:
    content: public void Dispose ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: EventProvider.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Libera os recursos usados por este <xref href=&quot;System.Diagnostics.Eventing.EventProvider&quot;> </xref> objeto."
  syntax:
    content: protected virtual void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "Esse parâmetro é ignorado por esse método, já que não existem recursos não gerenciados."
  overload: System.Diagnostics.Eventing.EventProvider.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.Finalize
  id: Finalize
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: Finalize()
  nameWithType: EventProvider.Finalize()
  fullName: System.Diagnostics.Eventing.EventProvider.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Libera recursos e realiza a limpeza interna antes da instância é recuperada pela coleta de lixo."
  syntax:
    content: ~EventProvider ();
    parameters: []
  overload: System.Diagnostics.Eventing.EventProvider.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError
  id: GetLastWriteEventError
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: GetLastWriteEventError()
  nameWithType: EventProvider.GetLastWriteEventError()
  fullName: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Obtém o último erro associado a uma falha de gravação do evento."
  remarks: "O <xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>, <xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A>, e <xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A>métodos para definir esse valor se houver falha na gravação do evento.</xref:System.Diagnostics.Eventing.EventProvider.WriteTransferEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteMessageEvent%2A> </xref:System.Diagnostics.Eventing.EventProvider.WriteEvent%2A>       Este é um método estático."
  syntax:
    content: public static System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode GetLastWriteEventError ();
    parameters: []
    return:
      type: System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode
      description: "Use o valor para determinar a causa de uma falha de gravação do evento."
  overload: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled
  id: IsEnabled
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: IsEnabled()
  nameWithType: EventProvider.IsEnabled()
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled()
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Determina se qualquer sessão habilitado o provedor, independentemente dos valores de nível e a palavra-chave usada para habilitar o provedor."
  remarks: "Normalmente, um provedor não chama esse método para determinar se o provedor foi habilitado por uma sessão; o provedor simplesmente grava o evento e ETW determina se o evento é registrado para a sessão. Um provedor pode querer chamar essa função se o provedor precisa para executar o trabalho extra para gerar o evento. Nesse caso, chamar essa função primeiro pode salvar tempo e recursos."
  syntax:
    content: public bool IsEnabled ();
    parameters: []
    return:
      type: System.Boolean
      description: "É <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o provedor estiver habilitada para qualquer sessão; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.Eventing.EventProvider.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)
  id: IsEnabled(System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: IsEnabled(Byte,Int64)
  nameWithType: EventProvider.IsEnabled(Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled(Byte,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Determina se qualquer sessão está solicitando o evento especificado do provedor."
  remarks: "Normalmente, um provedor não chama esse método para determinar se uma sessão solicitado o evento especificado; o provedor simplesmente grava o evento e ETW determina se o evento é registrado para uma sessão. Um provedor pode querer chamar essa função se o provedor precisa para executar o trabalho extra para gerar o evento. Nesse caso, a chamar essa função primeiro para determinar se uma sessão solicitada o evento ou não, pode salvar a tempo e recursos."
  syntax:
    content: public bool IsEnabled (byte level, long keywords);
    parameters:
    - id: level
      type: System.Byte
      description: "Nível de detalhe incluído no evento."
    - id: keywords
      type: System.Int64
      description: "Máscara de bits que especifica a categoria de evento. Essa máscara deve ser a mesma máscara de palavra-chave que é definida no manifesto para o evento."
    return:
      type: System.Boolean
      description: "É <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se qualquer sessão está solicitando o evento especificado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Diagnostics.Eventing.EventProvider.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)
  id: SetActivityId(System.Guid@)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: SetActivityId(Guid)
  nameWithType: EventProvider.SetActivityId(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.SetActivityId(Guid)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Define o identificador da atividade atual usado pelo <xref:System.Diagnostics.Eventing.EventProvider.WriteEvent*>métodos.</xref:System.Diagnostics.Eventing.EventProvider.WriteEvent*>"
  remarks: "O identificador é armazenado no contexto de thread.       Observe que, na versão 3.5 do .NET framework, você precisava definir a `id` parâmetro deste método e o <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>valor da propriedade com o mesmo valor de identificador.</xref:System.Diagnostics.CorrelationManager.ActivityId%2A> No entanto, na versão 4.0 do framework, o método SetActivityId automaticamente define o identificador de correlação da atividade para você.       Este é um método estático."
  syntax:
    content: public static void SetActivityId (ref Guid id);
    parameters:
    - id: id
      type: System.Guid
      description: "Um identificador de atividade exclusivo que o <xref:System.Diagnostics.Eventing.EventProvider.CreateActivityId*>retorn.</xref:System.Diagnostics.Eventing.EventProvider.CreateActivityId*>"
  overload: System.Diagnostics.Eventing.EventProvider.SetActivityId*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteEvent(EventDescriptor,Object[])
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Grava um evento. Os dados de evento são especificados como uma matriz de objetos."
  remarks: "Se você chamar o <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>método para especificar um identificador de atividade para o evento, esse método recupera o identificador do contexto de thread e inclui-lo com o evento.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>       Se não há suporte para o tipo de objeto, o método grava o valor do objeto <xref:System.Object.ToString%2A?displayProperty=fullName>método na carga.</xref:System.Object.ToString%2A?displayProperty=fullName> Para obter uma lista de tipos de objetos com suporte, consulte os comentários para a <xref:System.Diagnostics.Eventing.EventProvider>classe.</xref:System.Diagnostics.Eventing.EventProvider>"
  example:
  - "```  \nprivate static Guid providerId = new Guid(\"{FB33FDA8-45FB-4df0-8A55-EEB4BA88E7E7}\");  \n  \nenum Keyword  \n{  \n    Read = 0x1,  \n    Write = 0x2,  \n    Local = 0x4,  \n    Remote = 0x8  \n}  \n  \nenum Level  \n{  \n    Critical = 1,  \n    Error,  \n    Warning,  \n    Information,  \n    Verbose  \n}  \n  \n    EventProvider provider = new EventProvider(providerId);  \n    EventDescriptor readEvent;  \n    string path = @\"<PATHGOESHERE>\";  \n    UInt64 bytesRead = <ASSIGNVALUE>;  \n  \n    if (provider.IsEnabled(Level.Information, (long)Keyword.Read))  \n    {  \n        unchecked  \n        {  \n            readEvent = new EventDescriptor(0x1, 0x0, 0x10, 0x4, 0x0, 0x0, (long)0x8000000000000005);  \n        }  \n  \n        if (!provider.WriteEvent(ref readEvent, new object[] { path, bytesRead }))  \n            Console.WriteLine(EventProvider.GetLastWriteEventError());  \n    }  \n  \n    provider.Close();  \n```"
  syntax:
    content: public bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, object[] eventPayload);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Uma instância de <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> que identifica o evento para gravação."
    - id: eventPayload
      type: System.Object[]
      description: "Uma matriz de objetos que contêm os dados de evento para gravação. O objeto deve ser na ordem especificada no manifesto. A matriz é limitada a 32 objetos, dos quais somente oito podem ser cadeias de caracteres. O tamanho máximo de dados para o evento é limitado a 64 KB, menos o tamanho dos cabeçalhos de eventos. O tamanho do evento é menor, se o tamanho do buffer da sessão é menor e a sessão inclui itens de dados estendidos com o evento.       Esse parâmetro pode ser nulo."
    return:
      type: System.Boolean
      description: "É <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o evento é escrito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se for false, chame o &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; método para determinar a causa da falha."
  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> eventPayload </code> parâmetro contém muitos objetos ou cadeias de caracteres."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteEvent(EventDescriptor,String)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Grava um evento. Os dados de evento são especificados como uma cadeia de caracteres."
  remarks: "Se você chamar o <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>método para especificar um identificador de atividade para o evento, esse método recupera o identificador do contexto de thread e inclui-lo com o evento.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>       O comprimento máximo da cadeia de caracteres é limitado a 64 KB, menos o tamanho dos cabeçalhos de eventos. O tamanho do evento é menor, se o tamanho do buffer da sessão é menor e a sessão inclui itens de dados estendidos com o evento."
  example:
  - "```  \nprivate static Guid providerId = new Guid(\"{FB33FDA8-45FB-4df0-8A55-EEB4BA88E7E7}\");  \n  \nEventProvider provider = new EventProvider(providerId);  \nEventDescriptor writeEvent;  \n  \nif (provider.IsEnabled())  \n{  \n     unchecked  \n     {  \n          writeEvent = new EventDescriptor(0x2, 0x0, 0x10, 0x3, 0x0, 0x0, (long)0x8000000000000006);  \n     }  \n  \n     if (!provider.WriteEvent(ref writeEvent, \"Write event.\"))  \n          Console.WriteLine(EventProvider.GetLastWriteEventError());  \n}  \n  \nprovider.Close();  \n```"
  syntax:
    content: public bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, string data);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Uma instância de <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> que identifica o evento para gravação."
    - id: data
      type: System.String
      description: "A cadeia de caracteres para gravar como os dados do evento."
    return:
      type: System.Boolean
      description: "É <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o evento é escrito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se for false, chame o &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; método para determinar a causa da falha."
  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If <code>data</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  id: WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteEvent(EventDescriptor,Int32,IntPtr)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Grava um evento. Os dados de evento são especificados como um bloco de memória."
  remarks: "Se você chamar o <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>método para especificar um identificador de atividade para o evento, esse método recupera o identificador do contexto de thread e inclui-lo com o evento.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>"
  syntax:
    content: protected bool WriteEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, int dataCount, IntPtr data);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Uma instância de <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> que identifica o evento para gravação."
    - id: dataCount
      type: System.Int32
      description: "Tamanho dos dados do evento ao qual o `data` pontos de parâmetro. O tamanho de dados de evento máximo é limitado a 64 KB, menos o tamanho dos cabeçalhos de eventos. O tamanho do evento é menor, se o tamanho do buffer da sessão é menor e a sessão inclui itens de dados estendidos com o evento."
    - id: data
      type: System.IntPtr
      description: "Ponteiro para os dados de evento para gravação."
    return:
      type: System.Boolean
      description: "É <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o evento é escrito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se for false, chame o &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; método para determinar a causa da falha."
  overload: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)
  id: WriteMessageEvent(System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteMessageEvent(String)
  nameWithType: EventProvider.WriteMessageEvent(String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Grava um evento que contém uma cadeia de caracteres como seus dados."
  remarks: "O comprimento máximo da cadeia de caracteres é limitado a 64 KB, menos o tamanho dos cabeçalhos de eventos. O tamanho do evento é menor, se o tamanho do buffer da sessão é menor e a sessão inclui itens de dados estendidos com o evento."
  example:
  - "```  \nif (!provider.WriteMessageEvent(\"Event string.\"))  \n    Console.WriteLine(EventProvider.GetLastWriteEventError());  \n```"
  syntax:
    content: public bool WriteMessageEvent (string eventMessage);
    parameters:
    - id: eventMessage
      type: System.String
      description: "Cadeia de caracteres para gravar como os dados do evento."
    return:
      type: System.Boolean
      description: "É <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o evento é escrito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se for false, chame o &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; método para determinar a causa da falha."
  overload: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If <code>eventMessage</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)
  id: WriteMessageEvent(System.String,System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteMessageEvent(String,Byte,Int64)
  nameWithType: EventProvider.WriteMessageEvent(String,Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String,Byte,Int64)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Grava um evento que contém uma cadeia de caracteres como seus dados, se o valor de nível e a palavra-chave corresponde os eventos solicitados pela sessão."
  remarks: "O comprimento máximo da cadeia de caracteres é limitado a 64 KB, menos o tamanho dos cabeçalhos de eventos. O tamanho do evento é menor, se o tamanho do buffer da sessão é menor e a sessão inclui itens de dados estendidos com o evento."
  example:
  - "```  \n// Calling this method with level and keyword set to zero is the same  \n// as calling WriteMessageEvent(string); the event is always written.  \nif (!provider.WriteMessageEvent(\"Event string.\", 0, 0))  \n    Console.WriteLine(EventProvider.GetLastWriteEventError());  \n  \n// Event is written if the level value of the session is less than or equal to 3, and bit 1 of the session  \n// keyword bit-mask is set.  \nif (!provider.WriteMessageEvent(\"Event string.\", 3, 2))  \n    Console.WriteLine(EventProvider.GetLastWriteEventError());  \n```"
  syntax:
    content: public bool WriteMessageEvent (string eventMessage, byte eventLevel, long eventKeywords);
    parameters:
    - id: eventMessage
      type: System.String
      description: "Cadeia de caracteres para gravar como os dados do evento."
    - id: eventLevel
      type: System.Byte
      description: "Nível de detalhe incluído no evento. Se o provedor usa um manifesto para definir o evento, defina esse valor para o mesmo nível definido no manifesto."
    - id: eventKeywords
      type: System.Int64
      description: "Máscara de bits que especifica a categoria de evento. Se o provedor usa um manifesto para definir o evento, defina esse valor para a mesma máscara de palavra-chave definida no manifesto."
    return:
      type: System.Boolean
      description: "É <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o evento é escrito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se for false, chame o &lt;xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError%2A?displayProperty=fullName&gt; método para determinar a causa da falha."
  overload: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "If <code>eventMessage</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  id: WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteTransferEvent(EventDescriptor,Guid,Object[])
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Vincula eventos durante o rastreamento de eventos em um cenário de ponta a ponta. Os dados de evento são especificados como uma matriz de objetos."
  remarks: "O método usa a ID de atividade definida no contexto de thread para identificar esse componente. Para definir a ID de atividade, chame o <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>método.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>       Se você usar o <xref:System.Diagnostics.Trace>classe, você não usar o <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>método para especificar a ID de atividade</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A> </xref:System.Diagnostics.Trace> Em vez disso, acessar o <xref:System.Diagnostics.Trace.CorrelationManager%2A>propriedade para obter o <xref:System.Diagnostics.CorrelationManager>objeto.</xref:System.Diagnostics.CorrelationManager> </xref:System.Diagnostics.Trace.CorrelationManager%2A> Em seguida, defina a <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>propriedade para a ID de atividade</xref:System.Diagnostics.CorrelationManager.ActivityId%2A> Você também deve definir o `relatedActivityId` para um <xref:System.Diagnostics.CorrelationManager.ActivityId%2A>valor.</xref:System.Diagnostics.CorrelationManager.ActivityId%2A>"
  syntax:
    content: public bool WriteTransferEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, Guid relatedActivityId, object[] eventPayload);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Uma instância de <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> que identifica o evento para gravação."
    - id: relatedActivityId
      type: System.Guid
      description: "Identificador de atividade do componente anterior. Use esse parâmetro para vincular os eventos do componente para eventos do componente anterior."
    - id: eventPayload
      type: System.Object[]
      description: "Uma matriz de objetos que contêm os dados de evento para gravação. Os dados devem estar na ordem especificada no manifesto. A matriz é limitada a 32 objetos, dos quais somente oito podem ser cadeias de caracteres. O tamanho máximo de dados para o evento é limitado a 64 KB, menos o tamanho dos cabeçalhos de eventos. O tamanho do evento é menor, se o tamanho do buffer da sessão é menor e a sessão inclui itens de dados estendidos com o evento."
    return:
      type: System.Boolean
      description: "É <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o evento é escrito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se for false, chame o <xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>método para determinar a causa da falha.</xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>"
  overload: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "Se <code> eventPayload </code> contém muitos objetos ou cadeias de caracteres."
  platform:
  - net462
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  id: WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  langs:
  - csharp
  name: WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  type: Method
  assemblies:
  - System.Core
  namespace: System.Diagnostics.Eventing
  summary: "Vincula eventos durante o rastreamento de eventos em um cenário de ponta a ponta. Os dados de evento são especificados como um bloco de memória."
  remarks: "O método usa a ID de atividade definida no contexto de thread para identificar esse componente. Para definir a ID de atividade, chame o <xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>método.</xref:System.Diagnostics.Eventing.EventProvider.SetActivityId%2A>"
  syntax:
    content: protected bool WriteTransferEvent (ref System.Diagnostics.Eventing.EventDescriptor eventDescriptor, Guid relatedActivityId, int dataCount, IntPtr data);
    parameters:
    - id: eventDescriptor
      type: System.Diagnostics.Eventing.EventDescriptor
      description: "Uma instância de <xref href=&quot;System.Diagnostics.Eventing.EventDescriptor&quot;> </xref> que identifica o evento para gravação."
    - id: relatedActivityId
      type: System.Guid
      description: "Identificador de atividade do componente anterior. Use esse parâmetro para vincular os eventos do componente para eventos do componente anterior."
    - id: dataCount
      type: System.Int32
      description: "Tamanho dos dados do evento ao qual o `data` pontos de parâmetro. O tamanho de dados de evento máximo é limitado a 64 KB, menos o tamanho dos cabeçalhos de eventos. O tamanho do evento é menor, se o tamanho do buffer da sessão é menor e a sessão inclui itens de dados estendidos com o evento."
    - id: data
      type: System.IntPtr
      description: "Ponteiro para os dados de evento para gravação."
    return:
      type: System.Boolean
      description: "É <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o evento é escrito; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Se for false, chame o <xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>método para determinar a causa da falha.</xref:System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*>"
  overload: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.InsufficientMemoryException
  parent: System
  isExternal: false
  name: InsufficientMemoryException
  nameWithType: InsufficientMemoryException
  fullName: System.InsufficientMemoryException
- uid: System.PlatformNotSupportedException
  isExternal: true
  name: System.PlatformNotSupportedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ComponentModel.Win32Exception
  parent: System.ComponentModel
  isExternal: false
  name: Win32Exception
  nameWithType: Win32Exception
  fullName: System.ComponentModel.Win32Exception
- uid: System.Diagnostics.Eventing.EventProvider.#ctor(System.Guid)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: EventProvider(Guid)
  nameWithType: EventProvider.EventProvider(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.EventProvider(Guid)
- uid: System.Guid
  parent: System
  isExternal: true
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: System.Diagnostics.Eventing.EventProvider.Close
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Close()
  nameWithType: EventProvider.Close()
  fullName: System.Diagnostics.Eventing.EventProvider.Close()
- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: CreateActivityId()
  nameWithType: EventProvider.CreateActivityId()
  fullName: System.Diagnostics.Eventing.EventProvider.CreateActivityId()
- uid: System.Diagnostics.Eventing.EventProvider.Dispose
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Dispose()
  nameWithType: EventProvider.Dispose()
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose()
- uid: System.Diagnostics.Eventing.EventProvider.Dispose(System.Boolean)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: EventProvider.Dispose(Boolean)
  fullName: System.Diagnostics.Eventing.EventProvider.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Diagnostics.Eventing.EventProvider.Finalize
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Finalize()
  nameWithType: EventProvider.Finalize()
  fullName: System.Diagnostics.Eventing.EventProvider.Finalize()
- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: GetLastWriteEventError()
  nameWithType: EventProvider.GetLastWriteEventError()
  fullName: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError()
- uid: System.Diagnostics.Eventing.EventProvider.WriteEventErrorCode
  parent: System.Diagnostics.Eventing
  isExternal: false
  name: EventProvider+WriteEventErrorCode
  nameWithType: EventProvider+WriteEventErrorCode
  fullName: System.Diagnostics.Eventing.EventProvider+WriteEventErrorCode
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: IsEnabled()
  nameWithType: EventProvider.IsEnabled()
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled()
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled(System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: IsEnabled(Byte,Int64)
  nameWithType: EventProvider.IsEnabled(Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.IsEnabled(Byte,Int64)
- uid: System.Byte
  parent: System
  isExternal: true
  name: Byte
  nameWithType: Byte
  fullName: System.Byte
- uid: System.Int64
  parent: System
  isExternal: true
  name: Int64
  nameWithType: Int64
  fullName: System.Int64
- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId(System.Guid@)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: SetActivityId(Guid)
  nameWithType: EventProvider.SetActivityId(Guid)
  fullName: System.Diagnostics.Eventing.EventProvider.SetActivityId(Guid)
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent(EventDescriptor,Object[])
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Object[])
- uid: System.Diagnostics.Eventing.EventDescriptor
  parent: System.Diagnostics.Eventing
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.Diagnostics.Eventing.EventDescriptor
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent(EventDescriptor,String)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent(EventDescriptor,Int32,IntPtr)
  nameWithType: EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteEvent(EventDescriptor,Int32,IntPtr)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteMessageEvent(String)
  nameWithType: EventProvider.WriteMessageEvent(String)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String)
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(System.String,System.Byte,System.Int64)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteMessageEvent(String,Byte,Int64)
  nameWithType: EventProvider.WriteMessageEvent(String,Byte,Int64)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent(String,Byte,Int64)
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Object[])
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteTransferEvent(EventDescriptor,Guid,Object[])
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Object[])
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(System.Diagnostics.Eventing.EventDescriptor@,System.Guid,System.Int32,System.IntPtr)
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  nameWithType: EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
  fullName: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent(EventDescriptor,Guid,Int32,IntPtr)
- uid: System.Diagnostics.Eventing.EventProvider.#ctor*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: EventProvider
  nameWithType: EventProvider.EventProvider
- uid: System.Diagnostics.Eventing.EventProvider.Close*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Close
  nameWithType: EventProvider.Close
- uid: System.Diagnostics.Eventing.EventProvider.CreateActivityId*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: CreateActivityId
  nameWithType: EventProvider.CreateActivityId
- uid: System.Diagnostics.Eventing.EventProvider.Dispose*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Dispose
  nameWithType: EventProvider.Dispose
- uid: System.Diagnostics.Eventing.EventProvider.Finalize*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: Finalize
  nameWithType: EventProvider.Finalize
- uid: System.Diagnostics.Eventing.EventProvider.GetLastWriteEventError*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: GetLastWriteEventError
  nameWithType: EventProvider.GetLastWriteEventError
- uid: System.Diagnostics.Eventing.EventProvider.IsEnabled*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: IsEnabled
  nameWithType: EventProvider.IsEnabled
- uid: System.Diagnostics.Eventing.EventProvider.SetActivityId*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: SetActivityId
  nameWithType: EventProvider.SetActivityId
- uid: System.Diagnostics.Eventing.EventProvider.WriteEvent*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteEvent
  nameWithType: EventProvider.WriteEvent
- uid: System.Diagnostics.Eventing.EventProvider.WriteMessageEvent*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteMessageEvent
  nameWithType: EventProvider.WriteMessageEvent
- uid: System.Diagnostics.Eventing.EventProvider.WriteTransferEvent*
  parent: System.Diagnostics.Eventing.EventProvider
  isExternal: false
  name: WriteTransferEvent
  nameWithType: EventProvider.WriteTransferEvent
