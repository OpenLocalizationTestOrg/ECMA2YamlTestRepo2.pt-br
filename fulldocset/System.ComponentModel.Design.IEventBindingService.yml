### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.IEventBindingService
  id: IEventBindingService
  children:
  - System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)
  - System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)
  - System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)
  - System.ComponentModel.Design.IEventBindingService.ShowCode
  - System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)
  - System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  langs:
  - csharp
  name: IEventBindingService
  nameWithType: IEventBindingService
  fullName: System.ComponentModel.Design.IEventBindingService
  type: Interface
  summary: "Fornece um serviço para o registro de manipuladores de eventos para eventos do componente."
  remarks: "O serviço de associação de evento fornece uma maneira para vincular um manipulador de eventos com um evento de componente de código de designer.       Para vincular um manipulador de eventos com um evento de componente usando o IEventBindingService, você deve primeiro obter um <xref:System.ComponentModel.EventDescriptor>para o evento do componente que deseja vincular.</xref:System.ComponentModel.EventDescriptor> O IEventBindingService fornece métodos que podem converter um <xref:System.ComponentModel.EventDescriptor>para um <xref:System.ComponentModel.PropertyDescriptor>que você pode usar para configurar o evento com um nome de método do manipulador de eventos.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.EventDescriptor>       O <xref:System.ComponentModel.TypeDescriptor>objeto fornece um <xref:System.ComponentModel.TypeDescriptor.GetEvents%2A>método que você pode usar para obter um <xref:System.ComponentModel.EventDescriptorCollection>contendo <xref:System.ComponentModel.EventDescriptor>objetos para cada evento de um componente.</xref:System.ComponentModel.EventDescriptor> </xref:System.ComponentModel.EventDescriptorCollection> </xref:System.ComponentModel.TypeDescriptor.GetEvents%2A> </xref:System.ComponentModel.TypeDescriptor> O <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A>e <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A>métodos de retorno de IEventBindingService um <xref:System.ComponentModel.PropertyDescriptor>para cada <xref:System.ComponentModel.EventDescriptor>passado para o método.</xref:System.ComponentModel.EventDescriptor> </xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> </xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> Cada <xref:System.ComponentModel.PropertyDescriptor>retornado de <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A>ou <xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A>tem um tipo de propriedade de cadeia de caracteres.</xref:System.ComponentModel.Design.IEventBindingService.GetEventProperties%2A> </xref:System.ComponentModel.Design.IEventBindingService.GetEventProperty%2A> </xref:System.ComponentModel.PropertyDescriptor> Você pode definir essa cadeia de caracteres para um valor que indica o nome do método manipulador de eventos para vincular o evento com o uso do <xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>método de <xref:System.ComponentModel.PropertyDescriptor>.</xref:System.ComponentModel.PropertyDescriptor> </xref:System.ComponentModel.PropertyDescriptor.SetValue%2A>"
  example:
  - "The following example demonstrates a designer that uses the IEventBindingService to link a component's event with an event handler at design time when the custom shortcut menu command that the designer adds for the component is invoked. To use the example, compile it to a class library, add a reference from a Windows Forms project, add the component in the class library to the Toolbox by right-clicking the Toolbox and selecting Customize Toolbox..., then choosing the class library and clicking OK, and add an instance of the EventControl to a Form. Then right-click the EventControl and click the Connect testEvent shortcut menu command. An empty event handler method is created and the EventControl's testEvent method is initialized to this event handler in the initialization code for the Form.  \n  \n [!code-cpp[IEventBindingServiceExample#1](~/add/codesnippet/cpp/t-system.componentmodel._102_1.cpp)]\n [!code-vb[IEventBindingServiceExample#1](~/add/codesnippet/visualbasic/t-system.componentmodel._102_1.vb)]\n [!code-cs[IEventBindingServiceExample#1](~/add/codesnippet/csharp/t-system.componentmodel._102_1.cs)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IEventBindingService
  implements: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  id: CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: CreateUniqueMethodName(IComponent,EventDescriptor)
  nameWithType: IEventBindingService.CreateUniqueMethodName(IComponent,EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(IComponent,EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Cria um nome exclusivo para um método de manipulador de eventos para o componente especificado e o evento."
  remarks: "Esse método retorna um nome exclusivo de qualquer outro nome de método no código-fonte do usuário."
  syntax:
    content: public string CreateUniqueMethodName (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "O evento da instância do componente está conectada a."
    - id: e
      type: System.ComponentModel.EventDescriptor
      description: "O evento para criar um nome para."
    return:
      type: System.String
      description: "O nome recomendado para o método de manipulador de eventos para esse evento."
  overload: System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)
  id: GetCompatibleMethods(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: GetCompatibleMethods(EventDescriptor)
  nameWithType: IEventBindingService.GetCompatibleMethods(EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém uma coleção de métodos de manipulador de eventos que têm uma assinatura de método compatível com o evento especificado."
  remarks: "Cada cadeia de caracteres na coleção é o nome de um método que tem uma assinatura de método compatível com o evento especificado."
  syntax:
    content: public System.Collections.ICollection GetCompatibleMethods (System.ComponentModel.EventDescriptor e);
    parameters:
    - id: e
      type: System.ComponentModel.EventDescriptor
      description: "O evento para obter os métodos do manipulador de eventos compatível para."
    return:
      type: System.Collections.ICollection
      description: "Uma coleção de cadeias de caracteres."
  overload: System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)
  id: GetEvent(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: GetEvent(PropertyDescriptor)
  nameWithType: IEventBindingService.GetEvent(PropertyDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.GetEvent(PropertyDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Obtém um <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> para o evento que representa o descritor de propriedade especificado, se ele representa um evento."
  syntax:
    content: public System.ComponentModel.EventDescriptor GetEvent (System.ComponentModel.PropertyDescriptor property);
    parameters:
    - id: property
      type: System.ComponentModel.PropertyDescriptor
      description: "A propriedade que representa um evento."
    return:
      type: System.ComponentModel.EventDescriptor
      description: "Um <xref href=&quot;System.ComponentModel.EventDescriptor&quot;> </xref> para o evento que representa a propriedade, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se a propriedade não representa um evento."
  overload: System.ComponentModel.Design.IEventBindingService.GetEvent*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)
  id: GetEventProperties(System.ComponentModel.EventDescriptorCollection)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: GetEventProperties(EventDescriptorCollection)
  nameWithType: IEventBindingService.GetEventProperties(EventDescriptorCollection)
  fullName: System.ComponentModel.Design.IEventBindingService.GetEventProperties(EventDescriptorCollection)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Converte um conjunto de descritores de eventos em um conjunto de descritores de propriedade."
  remarks: "Cada retornado <xref:System.ComponentModel.PropertyDescriptor>tem um <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A>de cadeia de caracteres.</xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> </xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptorCollection GetEventProperties (System.ComponentModel.EventDescriptorCollection events);
    parameters:
    - id: events
      type: System.ComponentModel.EventDescriptorCollection
      description: "Os eventos para converter em Propriedades."
    return:
      type: System.ComponentModel.PropertyDescriptorCollection
      description: "Uma matriz de <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> objetos que descrevem o conjunto de eventos."
  overload: System.ComponentModel.Design.IEventBindingService.GetEventProperties*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)
  id: GetEventProperty(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: GetEventProperty(EventDescriptor)
  nameWithType: IEventBindingService.GetEventProperty(EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.GetEventProperty(EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Converte um descritor de evento único em um descritor de propriedade."
  remarks: "Retornado <xref:System.ComponentModel.PropertyDescriptor>tem um <xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A>de cadeia de caracteres.</xref:System.ComponentModel.PropertyDescriptor.PropertyType%2A> </xref:System.ComponentModel.PropertyDescriptor>"
  syntax:
    content: public System.ComponentModel.PropertyDescriptor GetEventProperty (System.ComponentModel.EventDescriptor e);
    parameters:
    - id: e
      type: System.ComponentModel.EventDescriptor
      description: "O evento para converter."
    return:
      type: System.ComponentModel.PropertyDescriptor
      description: "Um <xref href=&quot;System.ComponentModel.PropertyDescriptor&quot;> </xref> que descreve o evento."
  overload: System.ComponentModel.Design.IEventBindingService.GetEventProperty*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode
  id: ShowCode
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: ShowCode()
  nameWithType: IEventBindingService.ShowCode()
  fullName: System.ComponentModel.Design.IEventBindingService.ShowCode()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Exibe o código de usuário para o designer."
  remarks: "Esse método exibe o editor de código."
  syntax:
    content: public bool ShowCode ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o código é exibido; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IEventBindingService.ShowCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)
  id: ShowCode(System.Int32)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: ShowCode(Int32)
  nameWithType: IEventBindingService.ShowCode(Int32)
  fullName: System.ComponentModel.Design.IEventBindingService.ShowCode(Int32)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Exibe o código de usuário para o designer na linha especificada."
  remarks: "Esse método exibe o editor de códigos e posiciona o cursor na linha especificada."
  syntax:
    content: public bool ShowCode (int lineNumber);
    parameters:
    - id: lineNumber
      type: System.Int32
      description: "O número de linha para colocar o cursor sobre."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o código é exibido; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IEventBindingService.ShowCode*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  id: ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  langs:
  - csharp
  name: ShowCode(IComponent,EventDescriptor)
  nameWithType: IEventBindingService.ShowCode(IComponent,EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.ShowCode(IComponent,EventDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design
  summary: "Exibe o código de usuário para o evento especificado."
  remarks: "Esse método exibe o editor de códigos e posiciona o cursor na linha que o evento especificado é declarado."
  syntax:
    content: public bool ShowCode (System.ComponentModel.IComponent component, System.ComponentModel.EventDescriptor e);
    parameters:
    - id: component
      type: System.ComponentModel.IComponent
      description: "O componente que o evento está conectado."
    - id: e
      type: System.ComponentModel.EventDescriptor
      description: "O evento para exibir."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o código é exibido; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.ComponentModel.Design.IEventBindingService.ShowCode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: CreateUniqueMethodName(IComponent,EventDescriptor)
  nameWithType: IEventBindingService.CreateUniqueMethodName(IComponent,EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName(IComponent,EventDescriptor)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.ComponentModel.IComponent
  parent: System.ComponentModel
  isExternal: false
  name: IComponent
  nameWithType: IComponent
  fullName: System.ComponentModel.IComponent
- uid: System.ComponentModel.EventDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptor
  nameWithType: EventDescriptor
  fullName: System.ComponentModel.EventDescriptor
- uid: System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetCompatibleMethods(EventDescriptor)
  nameWithType: IEventBindingService.GetCompatibleMethods(EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods(EventDescriptor)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.IEventBindingService.GetEvent(System.ComponentModel.PropertyDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetEvent(PropertyDescriptor)
  nameWithType: IEventBindingService.GetEvent(PropertyDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.GetEvent(PropertyDescriptor)
- uid: System.ComponentModel.PropertyDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptor
  nameWithType: PropertyDescriptor
  fullName: System.ComponentModel.PropertyDescriptor
- uid: System.ComponentModel.Design.IEventBindingService.GetEventProperties(System.ComponentModel.EventDescriptorCollection)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetEventProperties(EventDescriptorCollection)
  nameWithType: IEventBindingService.GetEventProperties(EventDescriptorCollection)
  fullName: System.ComponentModel.Design.IEventBindingService.GetEventProperties(EventDescriptorCollection)
- uid: System.ComponentModel.PropertyDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: PropertyDescriptorCollection
  nameWithType: PropertyDescriptorCollection
  fullName: System.ComponentModel.PropertyDescriptorCollection
- uid: System.ComponentModel.EventDescriptorCollection
  parent: System.ComponentModel
  isExternal: false
  name: EventDescriptorCollection
  nameWithType: EventDescriptorCollection
  fullName: System.ComponentModel.EventDescriptorCollection
- uid: System.ComponentModel.Design.IEventBindingService.GetEventProperty(System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetEventProperty(EventDescriptor)
  nameWithType: IEventBindingService.GetEventProperty(EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.GetEventProperty(EventDescriptor)
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: ShowCode()
  nameWithType: IEventBindingService.ShowCode()
  fullName: System.ComponentModel.Design.IEventBindingService.ShowCode()
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode(System.Int32)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: ShowCode(Int32)
  nameWithType: IEventBindingService.ShowCode(Int32)
  fullName: System.ComponentModel.Design.IEventBindingService.ShowCode(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode(System.ComponentModel.IComponent,System.ComponentModel.EventDescriptor)
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: ShowCode(IComponent,EventDescriptor)
  nameWithType: IEventBindingService.ShowCode(IComponent,EventDescriptor)
  fullName: System.ComponentModel.Design.IEventBindingService.ShowCode(IComponent,EventDescriptor)
- uid: System.ComponentModel.Design.IEventBindingService.CreateUniqueMethodName*
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: CreateUniqueMethodName
  nameWithType: IEventBindingService.CreateUniqueMethodName
- uid: System.ComponentModel.Design.IEventBindingService.GetCompatibleMethods*
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetCompatibleMethods
  nameWithType: IEventBindingService.GetCompatibleMethods
- uid: System.ComponentModel.Design.IEventBindingService.GetEvent*
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetEvent
  nameWithType: IEventBindingService.GetEvent
- uid: System.ComponentModel.Design.IEventBindingService.GetEventProperties*
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetEventProperties
  nameWithType: IEventBindingService.GetEventProperties
- uid: System.ComponentModel.Design.IEventBindingService.GetEventProperty*
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: GetEventProperty
  nameWithType: IEventBindingService.GetEventProperty
- uid: System.ComponentModel.Design.IEventBindingService.ShowCode*
  parent: System.ComponentModel.Design.IEventBindingService
  isExternal: false
  name: ShowCode
  nameWithType: IEventBindingService.ShowCode
