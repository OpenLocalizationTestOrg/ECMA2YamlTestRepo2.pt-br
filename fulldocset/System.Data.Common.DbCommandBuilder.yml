### YamlMime:ManagedReference
items:
- uid: System.Data.Common.DbCommandBuilder
  id: DbCommandBuilder
  children:
  - System.Data.Common.DbCommandBuilder.#ctor
  - System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  - System.Data.Common.DbCommandBuilder.CatalogLocation
  - System.Data.Common.DbCommandBuilder.CatalogSeparator
  - System.Data.Common.DbCommandBuilder.ConflictOption
  - System.Data.Common.DbCommandBuilder.DataAdapter
  - System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetDeleteCommand
  - System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetInsertCommand
  - System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)
  - System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)
  - System.Data.Common.DbCommandBuilder.GetParameterName(System.String)
  - System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)
  - System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.GetUpdateCommand
  - System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)
  - System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  - System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)
  - System.Data.Common.DbCommandBuilder.QuotePrefix
  - System.Data.Common.DbCommandBuilder.QuoteSuffix
  - System.Data.Common.DbCommandBuilder.RefreshSchema
  - System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  - System.Data.Common.DbCommandBuilder.SchemaSeparator
  - System.Data.Common.DbCommandBuilder.SetAllValues
  - System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  - System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)
  langs:
  - csharp
  name: DbCommandBuilder
  nameWithType: DbCommandBuilder
  fullName: System.Data.Common.DbCommandBuilder
  type: Class
  summary: "Gera automaticamente os comandos de tabela única usados para reconciliar as alterações feitas em um <xref href=&quot;System.Data.DataSet&quot;> </xref> com o banco de dados associado. Esta é uma classe abstrata que só pode ser herdada."
  remarks: "A classe DbCommandBuilder é fornecida para a conveniência de gravadores de provedor criando suas próprias construtores de comando. Ao herdar desta classe, os desenvolvedores podem implementar o comportamento específico do provedor em seu próprio código.       O <xref:System.Data.Common.DbDataAdapter>não gera automaticamente as instruções SQL necessárias para reconciliar as alterações feitas em um <xref:System.Data.DataSet>com a fonte de dados associado.</xref:System.Data.DataSet> </xref:System.Data.Common.DbDataAdapter> No entanto, você pode criar um objeto DbCommandBuilder para gerar automaticamente instruções SQL para atualizações de tabela única se você definir a <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>propriedade de <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> Em seguida, qualquer instrução SQL adicional que você não defina é geradas pelo DbCommandBuilder.       O DbCommandBuilder se registra como um ouvinte para <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>eventos sempre que você definir o <xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A>propriedade.</xref:System.Data.Common.DbCommandBuilder.DataAdapter%2A> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> Você só pode associar um <xref:System.Data.Common.DbDataAdapter>ou ao objeto DbCommandBuilder entre si de uma só vez.</xref:System.Data.Common.DbDataAdapter>       Para gerar instruções INSERT, UPDATE ou DELETE, o DbCommandBuilder usa o <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>propriedade para recuperar um conjunto necessário de metadados automaticamente.</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> Se você alterar o <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>após recuperar os metadados (por exemplo, após a primeira atualização), você deve chamar o <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>método para atualizar os metadados.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> </xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>       O `SelectCommand` também deve retornar pelo menos uma chave primária ou coluna exclusiva. Se não houver nenhum, um <xref:System.InvalidOperationException>exceção é gerada e os comandos não são gerados.</xref:System.InvalidOperationException>       O DbCommandBuilder também usa o <xref:System.Data.Common.DbCommand.Connection%2A>, <xref:System.Data.Common.DbCommand.CommandTimeout%2A>e as <xref:System.Data.Common.DbCommand.Transaction%2A>Propriedades referenciadas por <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>.</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommand.Transaction%2A> </xref:System.Data.Common.DbCommand.CommandTimeout%2A> </xref:System.Data.Common.DbCommand.Connection%2A> O usuário deve chamar <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se qualquer uma dessas propriedades são modificadas, ou se o <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>será substituído.</xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, e <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>Propriedades retêm os valores anteriores.</xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>       Se você chamar <xref:System.ComponentModel.Component.Dispose%2A>, o DbCommandBuilder seja desassociado do <xref:System.Data.Common.DbDataAdapter>, e os comandos gerados não são mais usados.</xref:System.Data.Common.DbDataAdapter> </xref:System.ComponentModel.Component.Dispose%2A>"
  syntax:
    content: 'public abstract class DbCommandBuilder : System.ComponentModel.Component'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements: []
  inheritedMembers:
  - System.ComponentModel.Component.CanRaiseEvents
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.Site
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.#ctor
  id: '#ctor'
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: DbCommandBuilder()
  nameWithType: DbCommandBuilder.DbCommandBuilder()
  fullName: System.Data.Common.DbCommandBuilder.DbCommandBuilder()
  type: Constructor
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Inicializa uma nova instância de uma classe que herda de <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> classe."
  syntax:
    content: protected DbCommandBuilder ();
    parameters: []
  overload: System.Data.Common.DbCommandBuilder.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  id: ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Permite a implementação de provedor do <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> classe para manipular propriedades de parâmetro adicionais."
  remarks: "Esse método permite que uma implementação de <xref:System.Data.Common.DbCommandBuilder>classe para manipular propriedades de parâmetro específicos do provedor.</xref:System.Data.Common.DbCommandBuilder>"
  syntax:
    content: protected abstract void ApplyParameterInfo (System.Data.Common.DbParameter parameter, System.Data.DataRow row, System.Data.StatementType statementType, bool whereClause);
    parameters:
    - id: parameter
      type: System.Data.Common.DbParameter
      description: "Um <xref href=&quot;System.Data.Common.DbParameter&quot;> </xref> para que as modificações adicionais são aplicadas."
    - id: row
      type: System.Data.DataRow
      description: "O <xref href=&quot;System.Data.DataRow&quot;> </xref> da tabela de esquema fornecida por <xref:System.Data.Common.DbDataReader.GetSchemaTable*>.</xref:System.Data.Common.DbDataReader.GetSchemaTable*>"
    - id: statementType
      type: System.Data.StatementType
      description: "O tipo de comando que está sendo gerado; Inserir, atualizar ou excluir."
    - id: whereClause
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o parâmetro faz parte da atualização ou exclusão de cláusula WHERE, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se faz parte dos valores de inserção ou atualização."
  overload: System.Data.Common.DbCommandBuilder.ApplyParameterInfo*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.CatalogLocation
  id: CatalogLocation
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: CatalogLocation
  nameWithType: DbCommandBuilder.CatalogLocation
  fullName: System.Data.Common.DbCommandBuilder.CatalogLocation
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Define ou obtém o <xref href=&quot;System.Data.Common.CatalogLocation&quot;> </xref> para uma instância do <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> classe."
  syntax:
    content: public virtual System.Data.Common.CatalogLocation CatalogLocation { get; set; }
    return:
      type: System.Data.Common.CatalogLocation
      description: "A <xref href=&quot;System.Data.Common.CatalogLocation&quot;></xref> object."
  overload: System.Data.Common.DbCommandBuilder.CatalogLocation*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.CatalogSeparator
  id: CatalogSeparator
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: CatalogSeparator
  nameWithType: DbCommandBuilder.CatalogSeparator
  fullName: System.Data.Common.DbCommandBuilder.CatalogSeparator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Define ou obtém uma cadeia de caracteres usada como o separador de catálogo para uma instância do <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> classe."
  syntax:
    content: public virtual string CatalogSeparator { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que indica o separador de catálogo para uso com uma instância do <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> classe."
  overload: System.Data.Common.DbCommandBuilder.CatalogSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.ConflictOption
  id: ConflictOption
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: ConflictOption
  nameWithType: DbCommandBuilder.ConflictOption
  fullName: System.Data.Common.DbCommandBuilder.ConflictOption
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Especifica qual <xref href=&quot;System.Data.ConflictOption&quot;> </xref> deve ser usado pelo <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>."
  syntax:
    content: public virtual System.Data.ConflictOption ConflictOption { get; set; }
    return:
      type: System.Data.ConflictOption
      description: "Retorna um do <xref href=&quot;System.Data.ConflictOption&quot;> </xref> valores que descrevem o comportamento desse <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>."
  overload: System.Data.Common.DbCommandBuilder.ConflictOption*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.DataAdapter
  id: DataAdapter
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: DataAdapter
  nameWithType: DbCommandBuilder.DataAdapter
  fullName: System.Data.Common.DbCommandBuilder.DataAdapter
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define um <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref> objeto para o qual Transact-SQL instruções são geradas automaticamente."
  remarks: "O <xref:System.Data.Common.DbCommandBuilder>se registra como um ouvinte para <xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating>eventos gerados pelo <xref:System.Data.Common.DbDataAdapter>especificado nesta propriedade.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.OleDb.OleDbDataAdapter.RowUpdating> </xref:System.Data.Common.DbCommandBuilder>       Quando você cria uma nova instância da <xref:System.Data.Common.DbCommandBuilder>, qualquer existente <xref:System.Data.Common.DbCommandBuilder>associado a esta <xref:System.Data.Common.DbDataAdapter>é liberado.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbCommandBuilder>"
  syntax:
    content: public System.Data.Common.DbDataAdapter DataAdapter { get; set; }
    return:
      type: System.Data.Common.DbDataAdapter
      description: "A <xref href=&quot;System.Data.Common.DbDataAdapter&quot;></xref> object."
  overload: System.Data.Common.DbCommandBuilder.DataAdapter*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: DbCommandBuilder.Dispose(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Libera os recursos não gerenciados usados pelo <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> e, opcionalmente, libera os recursos gerenciados."
  remarks: "Este método é chamado pelo público <xref:System.Data.Common.DbCommandBuilder.Dispose%2A>método e o `Finalize` método.</xref:System.Data.Common.DbCommandBuilder.Dispose%2A> <xref:System.Data.Common.DbCommandBuilder.Dispose%2A>invoca o método Dispose protegido com o parâmetro descartando definido como `true`.</xref:System.Data.Common.DbCommandBuilder.Dispose%2A> `Finalize`invoca `Dispose` com `disposing` definido como `false`.       Quando o `disposing` parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Data.Common.DbCommandBuilder>referências.</xref:System.Data.Common.DbCommandBuilder> Este método chama o <xref:System.Data.Common.DbCommandBuilder.Dispose%2A>método de cada objeto referenciado.</xref:System.Data.Common.DbCommandBuilder.Dispose%2A>"
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para liberar apenas recursos não gerenciados."
  overload: System.Data.Common.DbCommandBuilder.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand
  id: GetDeleteCommand
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand()
  nameWithType: DbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> devem fazer exclusões na fonte de dados de objeto."
  remarks: "Um aplicativo pode usar o método GetDeleteCommand para fins de informação ou solução de problemas, porque retorna a <xref:System.Data.Common.DbCommand>objeto a ser executado.</xref:System.Data.Common.DbCommand>       Você também pode usar GetDeleteCommand como a base de um comando modificado. Por exemplo, você pode chamar GetDeleteCommand modificar o texto de comando e, em seguida, definir explicitamente que <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>       Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se altera a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o GetDeleteCommand ainda será usando informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A>ou GetDeleteCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Common.DbCommand GetDeleteCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> devem fazer exclusões de objeto."
  overload: System.Data.Common.DbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)
  id: GetDeleteCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetDeleteCommand(Boolean)
  nameWithType: DbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> devem fazer exclusões na fonte de dados, opcionalmente usando colunas para nomes de parâmetro de objeto."
  remarks: "Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>fins de método de informação ou solução de problemas, porque retorna a <xref:System.Data.Common.DbCommand>objeto a ser executado.</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>       Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>como a base de um comando modificado.</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>e modificar o texto do comando e, em seguida, defina explicitamente que em <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>       Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se altera a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>ainda estar usando informações da instrução anterior, que pode não estar correta.</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A>ou <xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A>.</xref:System.Data.Common.DbCommandBuilder.GetDeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       O comportamento padrão, ao gerar nomes de parâmetro, é usar @p1, @p2, e assim por diante para os vários parâmetros. Passando `true` para o `useColumnsForParameterNames` parâmetro permite forçar o <xref:System.Data.Common.DbCommandBuilder>ao gerar parâmetros com base nos nomes de coluna em vez disso.</xref:System.Data.Common.DbCommandBuilder> Isso é realizada somente se as seguintes condições forem atendidas: - o <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>foi especificado e seu comprimento é igual ou maior que o nome de parâmetro gerado.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -O nome de parâmetro gerado atende aos critérios especificados a <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>expressão regular.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>for especificado.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Common.DbCommand GetDeleteCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, gerar nomes de parâmetro de correspondência de nomes de coluna, se possível. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, gerar @p1, @p2e assim por diante."
    return:
      type: System.Data.Common.DbCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> devem fazer exclusões de objeto."
  overload: System.Data.Common.DbCommandBuilder.GetDeleteCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand
  id: GetInsertCommand
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand()
  nameWithType: DbCommandBuilder.GetInsertCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> objeto necessário para executar as inserções na fonte de dados."
  remarks: "Um aplicativo pode usar o método GetInsertCommand para fins de informação ou solução de problemas, porque ele retorna o texto do <xref:System.Data.Common.DbCommand>objeto a ser executado.</xref:System.Data.Common.DbCommand>       Você também pode usar GetInsertCommand como a base de um comando modificado. Por exemplo, você pode chamar GetInsertCommand modificar o texto de comando e, em seguida, definir explicitamente que <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>       Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se altera a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o GetInsertCommand ainda será usando informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A>ou GetInsertCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Common.DbCommand GetInsertCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> necessário para executar as inserções de objeto."
  overload: System.Data.Common.DbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)
  id: GetInsertCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetInsertCommand(Boolean)
  nameWithType: DbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> necessário para executar as inserções na fonte de dados, opcionalmente usando colunas para nomes de parâmetro de objeto."
  remarks: "Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>método para solução de problemas ou informativas fins porque retorna o texto do <xref:System.Data.Common.DbCommand>objeto a ser executado.</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>       Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>como a base de um comando modificado.</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>e modificar o texto do comando e, em seguida, defina explicitamente que em <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>       Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se altera a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>ainda estar usando informações da instrução anterior, que pode não estar correta.</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A>ou <xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A>.</xref:System.Data.Common.DbCommandBuilder.GetInsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       O comportamento padrão, ao gerar nomes de parâmetro, é usar @p1, @p2, e assim por diante para os vários parâmetros. Passando `true` para o `useColumnsForParameterNames` parâmetro permite forçar o <xref:System.Data.Common.DbCommandBuilder>ao gerar parâmetros com base nos nomes de coluna em vez disso.</xref:System.Data.Common.DbCommandBuilder> A geração dos parâmetros com base nos nomes de coluna terá êxito apenas se as seguintes condições forem atendidas: - o <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>foi especificado e seu comprimento é igual ou maior que o nome de parâmetro gerado.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -O nome de parâmetro gerado atende aos critérios especificados a <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>expressão regular.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>for especificado.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Common.DbCommand GetInsertCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, gerar nomes de parâmetro de correspondência de nomes de coluna, se possível. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, gerar @p1, @p2e assim por diante."
    return:
      type: System.Data.Common.DbCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> necessário para executar as inserções de objeto."
  overload: System.Data.Common.DbCommandBuilder.GetInsertCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)
  id: GetParameterName(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(Int32)
  nameWithType: DbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Retorna o nome do parâmetro especificado no formato de @p * # *. Use quando estiver criando um construtor de comando personalizado."
  syntax:
    content: protected abstract string GetParameterName (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "O número a ser incluído como parte do nome do parâmetro."
    return:
      type: System.String
      description: "O nome do parâmetro com o número especificado anexado como parte do nome do parâmetro."
  overload: System.Data.Common.DbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.String)
  id: GetParameterName(System.String)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetParameterName(String)
  nameWithType: DbCommandBuilder.GetParameterName(String)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Retorna o nome completo do parâmetro, considerando o nome de parâmetro parciais."
  syntax:
    content: protected abstract string GetParameterName (string parameterName);
    parameters:
    - id: parameterName
      type: System.String
      description: "O nome parcial do parâmetro."
    return:
      type: System.String
      description: "O nome completo do parâmetro correspondente ao nome de parâmetro parciais solicitado."
  overload: System.Data.Common.DbCommandBuilder.GetParameterName*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)
  id: GetParameterPlaceholder(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetParameterPlaceholder(Int32)
  nameWithType: DbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(Int32)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Retorna o espaço reservado para o parâmetro na instrução SQL associada."
  remarks: "Este método destina-se ao uso por gravadores de provedor de criação de um construtor de comando personalizado."
  syntax:
    content: protected abstract string GetParameterPlaceholder (int parameterOrdinal);
    parameters:
    - id: parameterOrdinal
      type: System.Int32
      description: "O número a ser incluído como parte do nome do parâmetro."
    return:
      type: System.String
      description: "O nome do parâmetro com o número especificado anexado."
  overload: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  id: GetSchemaTable(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetSchemaTable(DbCommand)
  nameWithType: DbCommandBuilder.GetSchemaTable(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.GetSchemaTable(DbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Retorna a tabela de esquema para o <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>."
  remarks: "Este método destina-se ao uso por gravadores de provedor de criação de um construtor de comando personalizado."
  syntax:
    content: protected virtual System.Data.DataTable GetSchemaTable (System.Data.Common.DbCommand sourceCommand);
    parameters:
    - id: sourceCommand
      type: System.Data.Common.DbCommand
      description: "O <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> para o qual recuperar a tabela de esquema correspondente."
    return:
      type: System.Data.DataTable
      description: "Um <xref href=&quot;System.Data.DataTable&quot;> </xref> que representa o esquema para o determinado <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref>."
  overload: System.Data.Common.DbCommandBuilder.GetSchemaTable*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand
  id: GetUpdateCommand
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand()
  nameWithType: DbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> necessário para executar atualizações na fonte de dados de objeto."
  remarks: "Um aplicativo pode usar o método GetUpdateCommand para fins de informação ou solução de problemas, porque retorna a <xref:System.Data.Common.DbCommand>objeto a ser executado.</xref:System.Data.Common.DbCommand>       Você também pode usar GetUpdateCommand como a base de um comando modificado. Por exemplo, você pode chamar GetUpdateCommand modificar o texto de comando e, em seguida, definir explicitamente que <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter>       Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se altera a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o GetUpdateCommand ainda será usando informações da instrução anterior, que pode não estar correta. As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A>ou GetUpdateCommand.</xref:System.Data.Common.DbDataAdapter.Update%2A>"
  syntax:
    content: public System.Data.Common.DbCommand GetUpdateCommand ();
    parameters: []
    return:
      type: System.Data.Common.DbCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> objeto necessário para executar atualizações."
  overload: System.Data.Common.DbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)
  id: GetUpdateCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: GetUpdateCommand(Boolean)
  nameWithType: DbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand(Boolean)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém automaticamente gerado <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> necessário para executar atualizações na fonte de dados, opcionalmente usando colunas para nomes de parâmetro de objeto."
  remarks: "Um aplicativo pode usar o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>fins de método de informação ou solução de problemas, porque retorna a <xref:System.Data.Common.DbCommand>objeto a ser executado.</xref:System.Data.Common.DbCommand> </xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>       Você também pode usar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>como a base de um comando modificado.</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> Por exemplo, você pode chamar <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>e modificar o texto de comando e, em seguida, defina explicitamente que em <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>       Depois que a instrução SQL é gerada pela primeira vez, o aplicativo deve chamar explicitamente <xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A>se altera a instrução de qualquer forma.</xref:System.Data.Common.DbCommandBuilder.RefreshSchema%2A> Caso contrário, o <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>ainda estar usando informações da instrução anterior, que pode não estar correta.</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> As instruções SQL são geradas quando o aplicativo chama <xref:System.Data.Common.DbDataAdapter.Update%2A>ou <xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A>.</xref:System.Data.Common.DbCommandBuilder.GetUpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.Update%2A>       O comportamento padrão, ao gerar nomes de parâmetro, é usar @p1, @p2, e assim por diante para os vários parâmetros. Passando `true` para o `useColumnsForParameterNames` parâmetro permite forçar o <xref:System.Data.Common.DbCommandBuilder>ao gerar parâmetros com base nos nomes de coluna em vez disso.</xref:System.Data.Common.DbCommandBuilder> A geração dos parâmetros com base nos nomes de coluna terá êxito apenas se as seguintes condições forem atendidas: - o <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>foi especificado e seu comprimento é igual ou maior que o nome de parâmetro gerado.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNameMaxLength>      -O nome de parâmetro gerado atende aos critérios especificados a <xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>expressão regular.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterNamePattern>      -A <xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>for especificado.</xref:System.Data.Common.DbMetaDataColumnNames.ParameterMarkerFormat>"
  syntax:
    content: public System.Data.Common.DbCommand GetUpdateCommand (bool useColumnsForParameterNames);
    parameters:
    - id: useColumnsForParameterNames
      type: System.Boolean
      description: "Se <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>, gerar nomes de parâmetro de correspondência de nomes de coluna, se possível. Se <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>, gerar @p1, @p2e assim por diante."
    return:
      type: System.Data.Common.DbCommand
      description: "Gerado automaticamente <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> objeto necessário para executar atualizações."
  overload: System.Data.Common.DbCommandBuilder.GetUpdateCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  id: InitializeCommand(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: InitializeCommand(DbCommand)
  nameWithType: DbCommandBuilder.InitializeCommand(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.InitializeCommand(DbCommand)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Resets the <>*>, <>*>, <xref:System.Data.Common.DbCommand.CommandType*>, and <xref href=&quot;System.Data.UpdateRowSource&quot;></xref> properties on the <xref href=&quot;System.Data.Common.DbCommand&quot;></xref>.</xref:System.Data.Common.DbCommand.CommandType*>"
  remarks: "Este método destina-se ao uso por gravadores de provedor de criação de um construtor de comando personalizado."
  syntax:
    content: protected virtual System.Data.Common.DbCommand InitializeCommand (System.Data.Common.DbCommand command);
    parameters:
    - id: command
      type: System.Data.Common.DbCommand
      description: "O <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> para ser usado pelo construtor de comando para a inserção correspondente, atualização ou exclusão de comando."
    return:
      type: System.Data.Common.DbCommand
      description: "Um <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> instância a ser usado para cada inserção, atualização ou operação de exclusão. Passar um valor nulo permite que o método InitializeCommand para criar um <xref href=&quot;System.Data.Common.DbCommand&quot;> </xref> objeto baseado no comando Select associado a <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>."
  overload: System.Data.Common.DbCommandBuilder.InitializeCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)
  id: QuoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: QuoteIdentifier(String)
  nameWithType: DbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.QuoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Fornecido um identificador sem aspas no caso de catálogo correto, retorna corretas entre aspas a forma de identificador, incluindo corretamente escape quaisquer aspas inseridas no identificador."
  syntax:
    content: public virtual string QuoteIdentifier (string unquotedIdentifier);
    parameters:
    - id: unquotedIdentifier
      type: System.String
      description: "O identificador sem aspas original."
    return:
      type: System.String
      description: "A versão entre aspas do identificador. As aspas inseridas dentro do identificador são caracteres de escape."
  overload: System.Data.Common.DbCommandBuilder.QuoteIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.QuotePrefix
  id: QuotePrefix
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: QuotePrefix
  nameWithType: DbCommandBuilder.QuotePrefix
  fullName: System.Data.Common.DbCommandBuilder.QuotePrefix
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define o caractere inicial ou caracteres a ser usado ao especificar os objetos de banco de dados (por exemplo, tabelas ou colunas) cujos nomes contêm caracteres como espaços ou símbolos reservados."
  remarks: "Algumas fontes de dados podem ter objetos que podem conter caracteres como espaços, vírgulas e ponto e vírgula. Para acomodar esse recurso, use o QuotePrefix e <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>Propriedades para especificar delimitadores como um colchete esquerdo e um colchete direito para encapsular o nome do objeto.</xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>      > [!NOTE] > Embora você não pode alterar o QuotePrefix ou <xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>Propriedades após uma inserção, atualização ou exclusão comando tiver sido gerado, você pode alterar suas configurações após a chamada a `Update` método <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.QuoteSuffix%2A>"
  syntax:
    content: public virtual string QuotePrefix { get; set; }
    return:
      type: System.String
      description: "O caractere inicial ou caracteres a ser usado. O padrão é uma cadeia de caracteres vazia."
  overload: System.Data.Common.DbCommandBuilder.QuotePrefix*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Essa propriedade não pode ser alterada depois que um insert, update ou delete comando tiver sido gerado."
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.QuoteSuffix
  id: QuoteSuffix
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: QuoteSuffix
  nameWithType: DbCommandBuilder.QuoteSuffix
  fullName: System.Data.Common.DbCommandBuilder.QuoteSuffix
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define o caractere de final ou caracteres a ser usado ao especificar os objetos de banco de dados (por exemplo, tabelas ou colunas) cujos nomes contêm caracteres como espaços ou símbolos reservados."
  remarks: "Algumas fontes de dados podem ter objetos que podem conter caracteres como espaços, vírgulas e ponto e vírgula. Para acomodar esse recurso, use o <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>e QuoteSuffix propriedades para especificar delimitadores como um colchete esquerdo e um colchete direito para encapsular o nome do objeto.</xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>      > [!NOTE] > Embora você não pode alterar o <xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>ou propriedades QuoteSuffix após uma inserção, atualização ou exclusão comando tiver sido gerado, você pode alterar suas configurações após a chamada a `Update` método <xref:System.Data.Common.DbDataAdapter>.</xref:System.Data.Common.DbDataAdapter> </xref:System.Data.Common.DbCommandBuilder.QuotePrefix%2A>"
  syntax:
    content: public virtual string QuoteSuffix { get; set; }
    return:
      type: System.String
      description: "O caractere ou caracteres usar final. O padrão é uma cadeia de caracteres vazia."
  overload: System.Data.Common.DbCommandBuilder.QuoteSuffix*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.RefreshSchema
  id: RefreshSchema
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: RefreshSchema()
  nameWithType: DbCommandBuilder.RefreshSchema()
  fullName: System.Data.Common.DbCommandBuilder.RefreshSchema()
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Limpa os comandos associados a este <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref>."
  remarks: "Chamar o método RefreshSchema efetivamente remove todos os <xref:System.Data.Common.DbCommand>objetos referenciado pelo <xref:System.Data.Common.DbDataAdapter.SelectCommand%2A>, <xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A>, <xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A>, e <xref:System.Data.Common.DbDataAdapter.InsertCommand%2A>Propriedades.</xref:System.Data.Common.DbDataAdapter.InsertCommand%2A> </xref:System.Data.Common.DbDataAdapter.DeleteCommand%2A> </xref:System.Data.Common.DbDataAdapter.UpdateCommand%2A> </xref:System.Data.Common.DbDataAdapter.SelectCommand%2A> </xref:System.Data.Common.DbCommand>"
  syntax:
    content: public virtual void RefreshSchema ();
    parameters: []
  overload: System.Data.Common.DbCommandBuilder.RefreshSchema*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  id: RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: RowUpdatingHandler(RowUpdatingEventArgs)
  nameWithType: DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
  fullName: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Adiciona um manipulador de eventos para o <xref href=&quot;System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot;> </xref> eventos."
  syntax:
    content: protected void RowUpdatingHandler (System.Data.Common.RowUpdatingEventArgs rowUpdatingEvent);
    parameters:
    - id: rowUpdatingEvent
      type: System.Data.Common.RowUpdatingEventArgs
      description: "Um <xref href=&quot;System.Data.Common.RowUpdatingEventArgs&quot;> </xref> instância que contém informações sobre o evento."
  overload: System.Data.Common.DbCommandBuilder.RowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.SchemaSeparator
  id: SchemaSeparator
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: SchemaSeparator
  nameWithType: DbCommandBuilder.SchemaSeparator
  fullName: System.Data.Common.DbCommandBuilder.SchemaSeparator
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Obtém ou define o caractere a ser usado para o separador entre o identificador do esquema e de quaisquer outros identificadores."
  remarks: "Geralmente, servidores de banco de dados indicam que o esquema para um identificador, separando o nome do esquema de identificador com alguns caracteres. Por exemplo, o SQL Server usa um vírgula, criando identificadores completos como **pessoa: CustomerName**, onde &quot;Pessoa&quot; é o nome do esquema, e &quot;CustomerName&quot; é o identificador. Definir esta propriedade permite que desenvolvedores modificar esse comportamento."
  syntax:
    content: public virtual string SchemaSeparator { get; set; }
    return:
      type: System.String
      description: "O caractere a ser usado como separador de esquema."
  overload: System.Data.Common.DbCommandBuilder.SchemaSeparator*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.SetAllValues
  id: SetAllValues
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: SetAllValues
  nameWithType: DbCommandBuilder.SetAllValues
  fullName: System.Data.Common.DbCommandBuilder.SetAllValues
  type: Property
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Especifica se todos os valores de coluna em uma instrução update são incluídos ou apenas aqueles alterado."
  remarks: "A instrução de atualização gerada por um <xref:System.Data.Common.DbCommandBuilder>pode incluir informações de atualização sobre todas as colunas, ou você pode incluir informações somente sobre as colunas cujos valores foram alterados.</xref:System.Data.Common.DbCommandBuilder> Definindo a propriedade SetAllValues como `true` faz com que a instrução UPDATE gerada incluir todas as colunas, se seus valores foram alterados ou não."
  syntax:
    content: public bool SetAllValues { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a instrução UPDATE é gerado pelo <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> inclui todas as colunas; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se ele inclui somente alterada colunas."
  overload: System.Data.Common.DbCommandBuilder.SetAllValues*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  id: SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Registra o <xref href=&quot;System.Data.Common.DbCommandBuilder&quot;> </xref> para lidar com o <xref href=&quot;System.Data.OleDb.OleDbDataAdapter.RowUpdating&quot;> </xref> evento para um <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref>."
  remarks: "Este método destina-se ao uso por gravadores de provedor de criação de um construtor de comando personalizado. Quando um novo <xref:System.Data.Common.DbDataAdapter>é adicionada para o <xref:System.Data.Common.DbCommandBuilder>, está registrado para o DbDataAdapter **RowUpdating** evento.</xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbDataAdapter> Se esse método é chamado novamente com o mesmo <xref:System.Data.Common.DbDataAdapter>, o <xref:System.Data.Common.DbCommandBuilder>não está registrado para esse DbDataAdapter **RowUpdating** evento.</xref:System.Data.Common.DbCommandBuilder> </xref:System.Data.Common.DbDataAdapter>"
  syntax:
    content: protected abstract void SetRowUpdatingHandler (System.Data.Common.DbDataAdapter adapter);
    parameters:
    - id: adapter
      type: System.Data.Common.DbDataAdapter
      description: "O <xref href=&quot;System.Data.Common.DbDataAdapter&quot;> </xref> a ser usado para a atualização."
  overload: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)
  id: UnquoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  langs:
  - csharp
  name: UnquoteIdentifier(String)
  nameWithType: DbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(String)
  type: Method
  assemblies:
  - System.Data
  namespace: System.Data.Common
  summary: "Fornecido um identificador entre aspas, retorna a forma sem aspas correta de identificador, incluindo corretamente sem escape quaisquer aspas inseridas no identificador de."
  syntax:
    content: public virtual string UnquoteIdentifier (string quotedIdentifier);
    parameters:
    - id: quotedIdentifier
      type: System.String
      description: "O identificador que terá seus removidas as aspas inseridas."
    return:
      type: System.String
      description: "O identificador sem aspas, com aspas inseridas corretamente sem escape."
  overload: System.Data.Common.DbCommandBuilder.UnquoteIdentifier*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Data.Common.DbCommandBuilder.#ctor
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DbCommandBuilder()
  nameWithType: DbCommandBuilder.DbCommandBuilder()
  fullName: System.Data.Common.DbCommandBuilder.DbCommandBuilder()
- uid: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(System.Data.Common.DbParameter,System.Data.DataRow,System.Data.StatementType,System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  nameWithType: DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
  fullName: System.Data.Common.DbCommandBuilder.ApplyParameterInfo(DbParameter,DataRow,StatementType,Boolean)
- uid: System.Data.Common.DbParameter
  parent: System.Data.Common
  isExternal: false
  name: DbParameter
  nameWithType: DbParameter
  fullName: System.Data.Common.DbParameter
- uid: System.Data.DataRow
  parent: System.Data
  isExternal: false
  name: DataRow
  nameWithType: DataRow
  fullName: System.Data.DataRow
- uid: System.Data.StatementType
  parent: System.Data
  isExternal: false
  name: StatementType
  nameWithType: StatementType
  fullName: System.Data.StatementType
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Data.Common.DbCommandBuilder.CatalogLocation
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: DbCommandBuilder.CatalogLocation
  fullName: System.Data.Common.DbCommandBuilder.CatalogLocation
- uid: System.Data.Common.CatalogLocation
  parent: System.Data.Common
  isExternal: false
  name: CatalogLocation
  nameWithType: CatalogLocation
  fullName: System.Data.Common.CatalogLocation
- uid: System.Data.Common.DbCommandBuilder.CatalogSeparator
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: DbCommandBuilder.CatalogSeparator
  fullName: System.Data.Common.DbCommandBuilder.CatalogSeparator
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Data.Common.DbCommandBuilder.ConflictOption
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ConflictOption
  nameWithType: DbCommandBuilder.ConflictOption
  fullName: System.Data.Common.DbCommandBuilder.ConflictOption
- uid: System.Data.ConflictOption
  parent: System.Data
  isExternal: false
  name: ConflictOption
  nameWithType: ConflictOption
  fullName: System.Data.ConflictOption
- uid: System.Data.Common.DbCommandBuilder.DataAdapter
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: DbCommandBuilder.DataAdapter
  fullName: System.Data.Common.DbCommandBuilder.DataAdapter
- uid: System.Data.Common.DbDataAdapter
  parent: System.Data.Common
  isExternal: false
  name: DbDataAdapter
  nameWithType: DbDataAdapter
  fullName: System.Data.Common.DbDataAdapter
- uid: System.Data.Common.DbCommandBuilder.Dispose(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: DbCommandBuilder.Dispose(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.Dispose(Boolean)
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetDeleteCommand()
  nameWithType: DbCommandBuilder.GetDeleteCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand()
- uid: System.Data.Common.DbCommand
  parent: System.Data.Common
  isExternal: false
  name: DbCommand
  nameWithType: DbCommand
  fullName: System.Data.Common.DbCommand
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetDeleteCommand(Boolean)
  nameWithType: DbCommandBuilder.GetDeleteCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetDeleteCommand(Boolean)
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetInsertCommand()
  nameWithType: DbCommandBuilder.GetInsertCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand()
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetInsertCommand(Boolean)
  nameWithType: DbCommandBuilder.GetInsertCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetInsertCommand(Boolean)
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterName(Int32)
  nameWithType: DbCommandBuilder.GetParameterName(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Data.Common.DbCommandBuilder.GetParameterName(System.String)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterName(String)
  nameWithType: DbCommandBuilder.GetParameterName(String)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterName(String)
- uid: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(System.Int32)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder(Int32)
  nameWithType: DbCommandBuilder.GetParameterPlaceholder(Int32)
  fullName: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder(Int32)
- uid: System.Data.Common.DbCommandBuilder.GetSchemaTable(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetSchemaTable(DbCommand)
  nameWithType: DbCommandBuilder.GetSchemaTable(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.GetSchemaTable(DbCommand)
- uid: System.Data.DataTable
  parent: System.Data
  isExternal: false
  name: DataTable
  nameWithType: DataTable
  fullName: System.Data.DataTable
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetUpdateCommand()
  nameWithType: DbCommandBuilder.GetUpdateCommand()
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand()
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand(System.Boolean)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetUpdateCommand(Boolean)
  nameWithType: DbCommandBuilder.GetUpdateCommand(Boolean)
  fullName: System.Data.Common.DbCommandBuilder.GetUpdateCommand(Boolean)
- uid: System.Data.Common.DbCommandBuilder.InitializeCommand(System.Data.Common.DbCommand)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: InitializeCommand(DbCommand)
  nameWithType: DbCommandBuilder.InitializeCommand(DbCommand)
  fullName: System.Data.Common.DbCommandBuilder.InitializeCommand(DbCommand)
- uid: System.Data.Common.DbCommandBuilder.QuoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteIdentifier(String)
  nameWithType: DbCommandBuilder.QuoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.QuoteIdentifier(String)
- uid: System.Data.Common.DbCommandBuilder.QuotePrefix
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuotePrefix
  nameWithType: DbCommandBuilder.QuotePrefix
  fullName: System.Data.Common.DbCommandBuilder.QuotePrefix
- uid: System.Data.Common.DbCommandBuilder.QuoteSuffix
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteSuffix
  nameWithType: DbCommandBuilder.QuoteSuffix
  fullName: System.Data.Common.DbCommandBuilder.QuoteSuffix
- uid: System.Data.Common.DbCommandBuilder.RefreshSchema
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RefreshSchema()
  nameWithType: DbCommandBuilder.RefreshSchema()
  fullName: System.Data.Common.DbCommandBuilder.RefreshSchema()
- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(System.Data.Common.RowUpdatingEventArgs)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RowUpdatingHandler(RowUpdatingEventArgs)
  nameWithType: DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
  fullName: System.Data.Common.DbCommandBuilder.RowUpdatingHandler(RowUpdatingEventArgs)
- uid: System.Data.Common.RowUpdatingEventArgs
  parent: System.Data.Common
  isExternal: false
  name: RowUpdatingEventArgs
  nameWithType: RowUpdatingEventArgs
  fullName: System.Data.Common.RowUpdatingEventArgs
- uid: System.Data.Common.DbCommandBuilder.SchemaSeparator
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: DbCommandBuilder.SchemaSeparator
  fullName: System.Data.Common.DbCommandBuilder.SchemaSeparator
- uid: System.Data.Common.DbCommandBuilder.SetAllValues
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetAllValues
  nameWithType: DbCommandBuilder.SetAllValues
  fullName: System.Data.Common.DbCommandBuilder.SetAllValues
- uid: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(System.Data.Common.DbDataAdapter)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler(DbDataAdapter)
  nameWithType: DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
  fullName: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler(DbDataAdapter)
- uid: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(System.String)
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier(String)
  nameWithType: DbCommandBuilder.UnquoteIdentifier(String)
  fullName: System.Data.Common.DbCommandBuilder.UnquoteIdentifier(String)
- uid: System.Data.Common.DbCommandBuilder.#ctor*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DbCommandBuilder
  nameWithType: DbCommandBuilder.DbCommandBuilder
- uid: System.Data.Common.DbCommandBuilder.ApplyParameterInfo*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ApplyParameterInfo
  nameWithType: DbCommandBuilder.ApplyParameterInfo
- uid: System.Data.Common.DbCommandBuilder.CatalogLocation*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogLocation
  nameWithType: DbCommandBuilder.CatalogLocation
- uid: System.Data.Common.DbCommandBuilder.CatalogSeparator*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: CatalogSeparator
  nameWithType: DbCommandBuilder.CatalogSeparator
- uid: System.Data.Common.DbCommandBuilder.ConflictOption*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: ConflictOption
  nameWithType: DbCommandBuilder.ConflictOption
- uid: System.Data.Common.DbCommandBuilder.DataAdapter*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: DataAdapter
  nameWithType: DbCommandBuilder.DataAdapter
- uid: System.Data.Common.DbCommandBuilder.Dispose*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: Dispose
  nameWithType: DbCommandBuilder.Dispose
- uid: System.Data.Common.DbCommandBuilder.GetDeleteCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetDeleteCommand
  nameWithType: DbCommandBuilder.GetDeleteCommand
- uid: System.Data.Common.DbCommandBuilder.GetInsertCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetInsertCommand
  nameWithType: DbCommandBuilder.GetInsertCommand
- uid: System.Data.Common.DbCommandBuilder.GetParameterName*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterName
  nameWithType: DbCommandBuilder.GetParameterName
- uid: System.Data.Common.DbCommandBuilder.GetParameterPlaceholder*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetParameterPlaceholder
  nameWithType: DbCommandBuilder.GetParameterPlaceholder
- uid: System.Data.Common.DbCommandBuilder.GetSchemaTable*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetSchemaTable
  nameWithType: DbCommandBuilder.GetSchemaTable
- uid: System.Data.Common.DbCommandBuilder.GetUpdateCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: GetUpdateCommand
  nameWithType: DbCommandBuilder.GetUpdateCommand
- uid: System.Data.Common.DbCommandBuilder.InitializeCommand*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: InitializeCommand
  nameWithType: DbCommandBuilder.InitializeCommand
- uid: System.Data.Common.DbCommandBuilder.QuoteIdentifier*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteIdentifier
  nameWithType: DbCommandBuilder.QuoteIdentifier
- uid: System.Data.Common.DbCommandBuilder.QuotePrefix*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuotePrefix
  nameWithType: DbCommandBuilder.QuotePrefix
- uid: System.Data.Common.DbCommandBuilder.QuoteSuffix*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: QuoteSuffix
  nameWithType: DbCommandBuilder.QuoteSuffix
- uid: System.Data.Common.DbCommandBuilder.RefreshSchema*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RefreshSchema
  nameWithType: DbCommandBuilder.RefreshSchema
- uid: System.Data.Common.DbCommandBuilder.RowUpdatingHandler*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: RowUpdatingHandler
  nameWithType: DbCommandBuilder.RowUpdatingHandler
- uid: System.Data.Common.DbCommandBuilder.SchemaSeparator*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SchemaSeparator
  nameWithType: DbCommandBuilder.SchemaSeparator
- uid: System.Data.Common.DbCommandBuilder.SetAllValues*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetAllValues
  nameWithType: DbCommandBuilder.SetAllValues
- uid: System.Data.Common.DbCommandBuilder.SetRowUpdatingHandler*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: SetRowUpdatingHandler
  nameWithType: DbCommandBuilder.SetRowUpdatingHandler
- uid: System.Data.Common.DbCommandBuilder.UnquoteIdentifier*
  parent: System.Data.Common.DbCommandBuilder
  isExternal: false
  name: UnquoteIdentifier
  nameWithType: DbCommandBuilder.UnquoteIdentifier
