### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.TreeNode
  id: TreeNode
  children:
  - System.Web.UI.WebControls.TreeNode.#ctor
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.TreeNode.Checked
  - System.Web.UI.WebControls.TreeNode.ChildNodes
  - System.Web.UI.WebControls.TreeNode.Clone
  - System.Web.UI.WebControls.TreeNode.Collapse
  - System.Web.UI.WebControls.TreeNode.CollapseAll
  - System.Web.UI.WebControls.TreeNode.DataBound
  - System.Web.UI.WebControls.TreeNode.DataItem
  - System.Web.UI.WebControls.TreeNode.DataPath
  - System.Web.UI.WebControls.TreeNode.Depth
  - System.Web.UI.WebControls.TreeNode.Expand
  - System.Web.UI.WebControls.TreeNode.ExpandAll
  - System.Web.UI.WebControls.TreeNode.Expanded
  - System.Web.UI.WebControls.TreeNode.ImageToolTip
  - System.Web.UI.WebControls.TreeNode.ImageUrl
  - System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  - System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNode.NavigateUrl
  - System.Web.UI.WebControls.TreeNode.Parent
  - System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  - System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.TreeNode.SaveViewState
  - System.Web.UI.WebControls.TreeNode.Select
  - System.Web.UI.WebControls.TreeNode.SelectAction
  - System.Web.UI.WebControls.TreeNode.Selected
  - System.Web.UI.WebControls.TreeNode.ShowCheckBox
  - System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  - System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  - System.Web.UI.WebControls.TreeNode.Target
  - System.Web.UI.WebControls.TreeNode.Text
  - System.Web.UI.WebControls.TreeNode.ToggleExpandState
  - System.Web.UI.WebControls.TreeNode.ToolTip
  - System.Web.UI.WebControls.TreeNode.TrackViewState
  - System.Web.UI.WebControls.TreeNode.Value
  - System.Web.UI.WebControls.TreeNode.ValuePath
  langs:
  - csharp
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
  type: Class
  summary: "Representa um nó no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controle."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView>controle é composto por nós.</xref:System.Web.UI.WebControls.TreeView> Cada entrada de árvore é chamada de nó e é representada por um objeto TreeNode. Um nó que contém outros nós é chamado um *nó pai*. Um nó que está contido em outro nó é chamado um *nó filho*. Um nó que não tem nós filhos é chamado um *nó folha*. Um nó que não está contido em qualquer outro nó, mas é o ancestral para todos os outros nós é o *nó raiz*. Um nó pode ser um pai e filho, mas raiz, pai e nós folha são mutuamente exclusivos. Várias propriedades visuais e comportamentos de nós são determinadas pelo se um nó é um *raiz*, *pai*, ou *folha* nó.       Embora uma árvore típica tenha apenas um nó raiz, o <xref:System.Web.UI.WebControls.TreeView>controle permite que você adicione vários nós raiz à sua estrutura de árvore.</xref:System.Web.UI.WebControls.TreeView> Isso é útil quando você deseja exibir listagens de itens sem exibir um único nó raiz principal, como em uma lista de categorias de produto.       Um nó principalmente armazena dados em duas propriedades, o <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade e o <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> O valor da <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade é exibida no <xref:System.Web.UI.WebControls.TreeView>controle e o <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade é usada para armazenar quaisquer dados adicionais sobre o nó, como dados usados para tratar eventos de postback.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.Text%2A> Um nó também armazena o caminho do nó para o nó raiz do <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> O <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>propriedade indica a posição do nó em relação ao nó raiz.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>      > [!NOTE] > Cada nós no mesmo nível devem ter um valor exclusivo para o <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade; o <xref:System.Web.UI.WebControls.TreeView>controle não pode distinguir entre nós diferentes no mesmo nível que têm o mesmo valor.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> Nesse cenário, se o usuário clica em um nó que possui um valor duplicado, o nó que aparece primeiro no <xref:System.Web.UI.WebControls.TreeView>controle está selecionado.</xref:System.Web.UI.WebControls.TreeView>       Um objeto TreeNode é composto dos elementos de interface do usuário do quatro usuário seguintes, que podem ser personalizados ou ocultos:-um ícone de indicador de nó de expansão usado para mostrar se o nó é expandido, recolhido ou não é expansível.      -Uma caixa de seleção opcional associada ao nó.      -Uma imagem do nó opcional.      -O texto do nó.       Você pode especificar uma imagem personalizada para os indicadores de nó não expansível expansíveis e recolhíveis definindo o <xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A>, <xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A>e as <xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A>Propriedades da <xref:System.Web.UI.WebControls.TreeView>classe</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.NoExpandImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.CollapseImageUrl%2A> </xref:System.Web.UI.WebControls.TreeView.ExpandImageUrl%2A> Os ícones de indicador de nó de expansão ainda podem ser ocultados inteiramente definindo o <xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>propriedade o <xref:System.Web.UI.WebControls.TreeView>de classe para `false`.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowExpandCollapse%2A>       Para exibir uma caixa de seleção ao lado de um nó, defina a <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>propriedade de <xref:System.Web.UI.WebControls.TreeView>classe.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Quando o <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A>propriedade é definida como um valor diferente de `TreeNodeType.Node`, caixas de seleção são exibidas ao lado do tipo de nó especificado.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A> Você pode substituir seletivamente a caixa de seleção de um nó individual, definindo o nó <xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ShowCheckBox%2A> Quando uma caixa de seleção é exibida, use o <xref:System.Web.UI.WebControls.TreeNode.Checked%2A>propriedade para determinar se a caixa de seleção está marcada.</xref:System.Web.UI.WebControls.TreeNode.Checked%2A>       Você pode exibir uma imagem em um nó, definindo o <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> Esta imagem é exibida ao lado do texto do nó.       O texto de um nó no <xref:System.Web.UI.WebControls.TreeView>controle pode estar em um dos dois modos: modo de navegação ou modo de seleção.</xref:System.Web.UI.WebControls.TreeView> Por padrão, um nó estiver no modo de seleção. Para colocar um nó no modo de navegação, definir o nó <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>propriedade com um valor diferente de uma cadeia de caracteres vazia (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> Para colocar um nó no modo de seleção, definir o nó <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>propriedade como uma cadeia de caracteres vazia.</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > Alguns navegadores têm um limite que pode afetar o desempenho do <xref:System.Web.UI.WebControls.TreeView>controle.</xref:System.Web.UI.WebControls.TreeView> Por exemplo, o Microsoft Internet Explorer 6.0 tem um limite de caracteres de URL de caracteres 2067 que ele envia. Se o número de caracteres em uma URL de um nó é maior do que esse número, expansão desse nó irá falhar e nenhuma exceção é lançada.       Por padrão, clicando em um nó que está no modo de seleção envia a página de volta para o servidor e gera o <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>evento.</xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> Opcionalmente, você pode especificar um evento diferente para gerar, definindo o nó `SelectAction` propriedade. Para obter mais informações, consulte <xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A>.</xref:System.Web.UI.WebControls.TreeNode.SelectAction%2A> Para determinar qual nó foi clicado em modo de seleção, use o <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>propriedade o <xref:System.Web.UI.WebControls.TreeView>controle.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>       Quando um nó está no modo de navegação, todos os eventos de seleção estão desabilitados para esse nó. Clique no nó no modo de navegação direciona o usuário para a URL especificada. Você pode definir opcionalmente o <xref:System.Web.UI.WebControls.TreeNode.Target%2A>propriedade para especificar a janela ou quadro no qual exibir o conteúdo vinculado.</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       A classe TreeNode contém várias propriedades que são usadas para armazenar o estado do nó. Use o <xref:System.Web.UI.WebControls.TreeNode.Selected%2A>propriedade para determinar se um nó é selecionado.</xref:System.Web.UI.WebControls.TreeNode.Selected%2A> Para determinar se o nó é expandido, use o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> O <xref:System.Web.UI.WebControls.TreeNode.DataBound%2A>propriedade é usada para determinar se um nó está associado aos dados.</xref:System.Web.UI.WebControls.TreeNode.DataBound%2A> Quando um nó está associado aos dados, você pode acessar o item de dados subjacente usando a <xref:System.Web.UI.WebControls.TreeNode.DataItem%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.DataItem%2A>       A classe fornece várias propriedades que ajudam a determinar a posição de um nó em relação a outros nós da árvore. Use o <xref:System.Web.UI.WebControls.TreeNode.Depth%2A>propriedade para determinar a profundidade do nó.</xref:System.Web.UI.WebControls.TreeNode.Depth%2A> Você pode obter a lista delimitada de nós do nó atual para o nó raiz usando o <xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ValuePath%2A> Para determinar o nó pai do nó, use o <xref:System.Web.UI.WebControls.TreeNode.Parent%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Parent%2A> Nós filho são acessados usando o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>coleção.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>       Às vezes, não é prático estaticamente predefinir a estrutura de árvore devido ao tamanho dos dados ou conteúdo personalizado que depende de entrada do usuário. Por isso, o <xref:System.Web.UI.WebControls.TreeView>controle oferece suporte ao preenchimento dinâmico de nós.</xref:System.Web.UI.WebControls.TreeView> Um nó pode ser preenchido em tempo de execução quando ele é expandido. Observe que você pode obter um comportamento inesperado se você mantiver nós criados de forma assíncrona. Por exemplo, se você usar um thread de trabalho do plano de fundo para preencher nós de modo assíncrono, a árvore de nós pode não ser preenchido imediatamente que o controle continua com o restante do ciclo de vida da página. Em um postback, a criação atrasada de nós pode causar problemas quando o estado de exibição do controle está carregado, mas a árvore de nós não é totalmente preenchida.  Para obter mais informações sobre preenchimento dinâmico de nós, consulte o <xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.PopulateOnDemand%2A>       Para obter uma lista de valores de propriedade inicial para uma instância do TreeNode, consulte o <xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A>construtor.</xref:System.Web.UI.WebControls.TreeNode.%23ctor%2A>"
  example:
  - "The following code example demonstrates how to set up the frames for the next code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_106_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_106_1.aspx)]  \n  \n The following code example demonstrates how to use declarative syntax to create TreeNode objects in the <xref:System.Web.UI.WebControls.TreeView> control. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_106_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_106_2.aspx)]"
  syntax:
    content: >-
      [System.Web.UI.ParseChildren(true, "ChildNodes")]

      public class TreeNode : ICloneable, System.Web.UI.IStateManager
  inheritance:
  - System.Object
  implements:
  - System.ICloneable
  - System.Web.UI.IStateManager
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe sem um valor ou texto."
  remarks: "Use este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeNode>usando os valores padrão de classe.</xref:System.Web.UI.WebControls.TreeNode>      > [!NOTE] > Quando este construtor é usado, todas as propriedades de <xref:System.Web.UI.WebControls.TreeNode>objeto são definidos para seus valores padrão.</xref:System.Web.UI.WebControls.TreeNode> Certifique-se de definir as propriedades, conforme necessário, depois de criar o objeto."
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_241_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_241_1.aspx)]"
  syntax:
    content: public TreeNode ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe usando o texto especificado."
  remarks: "Usar este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeNode>classe usando o texto especificado o `text` parâmetro.</xref:System.Web.UI.WebControls.TreeNode>       A tabela a seguir mostra o valor da propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TreeNode.Text%2A>| O valor de `text` parâmetro. |</xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_234_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_234_1.aspx)]"
  syntax:
    content: public TreeNode (string text);
    parameters:
    - id: text
      type: System.String
      description: "O texto que é exibido no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controle para o nó."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  id: '#ctor(System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String)
  nameWithType: TreeNode.TreeNode(String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> usando o texto especificado e o valor de classe."
  remarks: "Use este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeNode>classe usando o texto e o valor especificado pelo `text` e `value` parâmetros, respectivamente.</xref:System.Web.UI.WebControls.TreeNode>       A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TreeNode.Text%2A>| O valor de `text` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.Value%2A>| O valor de `value` parâmetro. |</xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_51_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_51_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value);
    parameters:
    - id: text
      type: System.String
      description: "O texto que é exibido no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controle para o nó."
    - id: value
      type: System.String
      description: "Os dados complementares associados ao nó, como dados usados para tratar eventos de postback."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  id: '#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(TreeView,Boolean)
  nameWithType: TreeNode.TreeNode(TreeView,Boolean)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(TreeView,Boolean)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe usando o proprietário especificado."
  syntax:
    content: protected TreeNode (System.Web.UI.WebControls.TreeView owner, bool isRoot);
    parameters:
    - id: owner
      type: System.Web.UI.WebControls.TreeView
      description: "O <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> que conterá o novo <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref>."
    - id: isRoot
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> é um nó raiz; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe usando o texto especificado, o valor e a URL da imagem."
  remarks: "Use este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeNode>classe usando o texto, o valor e a imagem da URL especificada pelo `text`, `value`, e `imageUrl` parâmetros, respectivamente.</xref:System.Web.UI.WebControls.TreeNode>       A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TreeNode.Text%2A>| O valor de `text` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.Value%2A>| O valor de `value` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>| O valor de `imageUrl` parâmetro. |</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/3795fa87-8785-4a78-ab89-_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/3795fa87-8785-4a78-ab89-_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value, string imageUrl);
    parameters:
    - id: text
      type: System.String
      description: "O texto que é exibido no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controle para o nó."
    - id: value
      type: System.String
      description: "Os dados complementares associados ao nó, como dados usados para tratar eventos de postback."
    - id: imageUrl
      type: System.String
      description: "A URL para uma imagem que é exibida ao lado do nó."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TreeNode(String,String,String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe usando o texto especificado, o valor, a URL da imagem, a URL de navegação e o destino."
  remarks: "Use este construtor para inicializar uma nova instância do <xref:System.Web.UI.WebControls.TreeNode>classe usando as URLs de texto, valor, imagem e navegação e exibição de destino especificado pelo `text`, `value`, `imageUrl`, `navigateUrl`, e `target` parâmetros, respectivamente.</xref:System.Web.UI.WebControls.TreeNode>       A tabela a seguir mostra os valores de propriedade inicial para uma instância de <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode>      | Propriedade | Valor inicial |   |--------------|-------------------|   | <xref:System.Web.UI.WebControls.TreeNode.Text%2A>| O valor de `text` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.Value%2A>| O valor de `value` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>| O valor de `imageUrl` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>| O valor de `navigateUrl` parâmetro. |   | <xref:System.Web.UI.WebControls.TreeNode.Target%2A>| O valor de `target` parâmetro. |</xref:System.Web.UI.WebControls.TreeNode.Target%2A> </xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>"
  example:
  - "The following code example demonstrates how to use this constructor to dynamically add a node to the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeCtor#1](~/add/codesnippet/visualbasic/731d6a74-0b18-423b-841c-_1.aspx)]\n [!code-cs[TreeNodeCtor#1](~/add/codesnippet/csharp/731d6a74-0b18-423b-841c-_1.aspx)]"
  syntax:
    content: public TreeNode (string text, string value, string imageUrl, string navigateUrl, string target);
    parameters:
    - id: text
      type: System.String
      description: "O texto que é exibido no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controle para o nó."
    - id: value
      type: System.String
      description: "Os dados complementares associados ao nó, como dados usados para tratar eventos de postback."
    - id: imageUrl
      type: System.String
      description: "A URL para uma imagem que é exibida ao lado do nó."
    - id: navigateUrl
      type: System.String
      description: "A URL para vincular a quando o nó é clicado."
    - id: target
      type: System.String
      description: "A janela de destino ou o quadro no qual exibir o conteúdo da página da Web vinculada quando o nó é clicado."
  overload: System.Web.UI.WebControls.TreeNode.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Checked
  id: Checked
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Web.UI.WebControls.TreeNode.Checked
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se a caixa de seleção do nó é selecionada."
  remarks: "Quando um nó exibe uma caixa de seleção, a propriedade Checked é comumente usada para especificar se a caixa de seleção está marcada. Quando a caixa de seleção associada a um nó é selecionada, o nó for adicionado automaticamente para o <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>coleção do <xref:System.Web.UI.WebControls.TreeView>controle.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> A propriedade Checked também pode ser usada para determinar se a caixa de seleção está marcada.      > [!NOTE] > É mais comum para determinar quais nós o <xref:System.Web.UI.WebControls.TreeView>controle ter suas caixas de seleção selecionadas pela iteração a <xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A>coleção.</xref:System.Web.UI.WebControls.TreeView.CheckedNodes%2A> </xref:System.Web.UI.WebControls.TreeView>       O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to use the Checked property to specify whether a node's check box is selected. It initializes the check boxes of nodes with a depth of one to a selected state. For this example to work correctly, you must copy the sample XML data below to a file named Newsgroup.xml.  \n  \n [!code-cs[TreeNodeChecked#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_280_1.aspx)]\n [!code-vb[TreeNodeChecked#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_280_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<category name=\"news.microsoft.com\">  \n    <group name=\"microsoft.public.dotnet.framework.aspnet\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.mobile\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.webservices\"/>  \n</category>  \n```"
  syntax:
    content: public bool Checked { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a caixa de seleção do nó está selecionada. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.Checked*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes
  id: ChildNodes
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
  fullName: System.Web.UI.WebControls.TreeNode.ChildNodes
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> coleção que contém os nós de primeiro nível filho do nó atual."
  remarks: "Use a propriedade ChildNodes para obter um <xref:System.Web.UI.WebControls.TreeNodeCollection>coleção que contém os nós de primeiro nível filho do nó atual.</xref:System.Web.UI.WebControls.TreeNodeCollection> Esta coleção normalmente é usada para iterar por todos os nós filho de primeiro nível, ou para acessar um nó filho específicos de primeiro nível do nó atual.       A propriedade ChildNodes também pode ser usada para gerenciar programaticamente os nós filho de primeiro nível no nó atual. Você pode adicionar, inserir, remover e recuperar <xref:System.Web.UI.WebControls.TreeNode>objetos da coleção.</xref:System.Web.UI.WebControls.TreeNode> Todas as atualizações para a coleção serão refletidas automaticamente no <xref:System.Web.UI.WebControls.TreeView>controlar na próxima vez que a página for atualizada.</xref:System.Web.UI.WebControls.TreeView>       Para acessar nós filho ainda mais abaixo na árvore, use a propriedade ChildNodes do nó filho do próximo nível para navegar para baixo nos níveis de nó."
  example:
  - "The following code example demonstrates how to use the ChildNodes property to traverse the tree.  \n  \n [!code-cs[TreeNodeCollectionCount#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_95_1.aspx)]\n [!code-vb[TreeNodeCollectionCount#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_95_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeCollection ChildNodes { get; }
    return:
      type: System.Web.UI.WebControls.TreeNodeCollection
      description: "Um <xref href=&quot;System.Web.UI.WebControls.TreeNodeCollection&quot;> </xref> que contém os nós de primeiro nível filho do nó atual."
  overload: System.Web.UI.WebControls.TreeNode.ChildNodes*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Clone
  id: Clone
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria uma nova instância do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> classe com as propriedades da atual <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> instância."
  remarks: "Este é um método auxiliar que oferece suporte a <xref:System.ICloneable>interface implementada pelo <xref:System.Web.UI.WebControls.TreeNode>.</xref:System.Web.UI.WebControls.TreeNode> </xref:System.ICloneable>"
  syntax:
    content: protected virtual object Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Uma nova instância da <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> com as propriedades da atual <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> instância."
  overload: System.Web.UI.WebControls.TreeNode.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Collapse
  id: Collapse
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Web.UI.WebControls.TreeNode.Collapse()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recolhe o nó de árvore atual."
  remarks: "Use o método Collapse convenientemente recolher o nó atual.      > [!NOTE] > Como alternativa, você também pode definir o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade `false`.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Para recolher o nó atual e todos os seus nós filho, considere o uso de <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>método.</xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>       <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>recolherá todos os nós em toda a árvore.</xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>"
  example:
  - "The following code example demonstrates how to use the Collapse method to programmatically collapse a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpand#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_20_1.aspx)]\n [!code-vb[TreeNodeExpand#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_20_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Collapse ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Collapse*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll
  id: CollapseAll
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: CollapseAll()
  nameWithType: TreeNode.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeNode.CollapseAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recolhe o nó atual e todos os seus nós filho."
  remarks: "Use o método de recolher toda convenientemente recolher o nó atual e todos os seus nós filho.      > [!NOTE] > Como alternativa, você também pode definir o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade do nó atual e cada um de seus nós filho para `false`.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Para recolher somente o nó atual, considere o uso de <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>método.</xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>       <xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>recolherá todos os nós em toda a árvore.</xref:System.Web.UI.WebControls.TreeView.CollapseAll%2A>"
  example:
  - "The following code example demonstrates how to use the CollapseAll method to programmatically collapse a node and all its child nodes in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_121_1.aspx)]\n [!code-vb[TreeNodeExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_121_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void CollapseAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.CollapseAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataBound
  id: DataBound
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataBound
  nameWithType: TreeNode.DataBound
  fullName: System.Web.UI.WebControls.TreeNode.DataBound
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o nó foi criado por meio de associação de dados."
  remarks: "A propriedade de ligação de dados é usada para determinar programaticamente se o nó foi criado por meio de associação de dados. Porque o conteúdo dinâmico e estático não pode ser misturado no mesmo nó, essa propriedade normalmente é usada ao popular um <xref:System.Web.UI.WebControls.TreeView>controle dinamicamente para determinar se o nó contém conteúdo estático.</xref:System.Web.UI.WebControls.TreeView>       O valor dessa propriedade é armazenado em estado de exibição."
  syntax:
    content: public bool DataBound { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nó foi criado por meio de associação de dados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.DataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataItem
  nameWithType: TreeNode.DataItem
  fullName: System.Web.UI.WebControls.TreeNode.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o item de dados que está associado ao controle."
  remarks: "Quando o <xref:System.Web.UI.WebControls.TreeView>controle está associado a uma fonte de dados, como um <xref:System.Web.UI.WebControls.XmlDataSource>de objeto, essa propriedade é definida para o item de dados que está associado a este nó específico.</xref:System.Web.UI.WebControls.XmlDataSource> </xref:System.Web.UI.WebControls.TreeView> Essa propriedade normalmente é usada para acessar os valores do item de dados.      > [!NOTE] > Essa propriedade está disponível apenas após a associação de dados."
  syntax:
    content: public object DataItem { get; }
    return:
      type: System.Object
      description: "Um &lt;xref:System.Object?displayProperty=fullName&gt; que representa o item de dados que está associado ao controle. O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que indica que o nó não está associado a qualquer item de dados."
  overload: System.Web.UI.WebControls.TreeNode.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.DataPath
  id: DataPath
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: DataPath
  nameWithType: TreeNode.DataPath
  fullName: System.Web.UI.WebControls.TreeNode.DataPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o caminho para os dados associados ao nó."
  remarks: "O valor de propriedade do caminho de dados geralmente é usado ao chamar o <xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=fullName>método para fornecer o caminho para os dados associados ao nó atual.</xref:System.Web.UI.IHierarchicalDataSource.GetHierarchicalView%2A?displayProperty=fullName> Esse método retorna um <xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=fullName>objeto que contém os dados no caminho especificado.</xref:System.Web.UI.HierarchicalDataSourceView?displayProperty=fullName>       O valor dessa propriedade é armazenado em estado de exibição."
  syntax:
    content: public string DataPath { get; }
    return:
      type: System.String
      description: "O caminho para os dados associados ao nó. Esse valor vem do controle de fonte de dados hierárquicos ao qual o <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controle está associado. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNode.DataPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Depth
  id: Depth
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Depth
  nameWithType: TreeNode.Depth
  fullName: System.Web.UI.WebControls.TreeNode.Depth
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém a profundidade do nó."
  remarks: "Use a propriedade de profundidade para determinar a profundidade do nó. A profundidade representa o número de níveis de hierarquia entre um nó e o nó raiz. Por exemplo, um nó raiz tem uma profundidade de zero. Um filho do nó raiz tem uma profundidade de uma e assim por diante."
  example:
  - "The following code example demonstrates how use the Depth property to determine the depth of a node. It initializes all nodes with a depth of one to a selected state. For this example to work correctly, you must copy the sample XML data below to a file named Newsgroup.xml.  \n  \n [!code-cs[TreeNodeChecked#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1355_1.aspx)]\n [!code-vb[TreeNodeChecked#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1355_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<category name=\"news.microsoft.com\">  \n    <group name=\"microsoft.public.dotnet.framework.aspnet\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.mobile\"/>  \n    <group name=\"microsoft.public.dotnet.framework.aspnet.webservices\"/>  \n</category>  \n```"
  syntax:
    content: public int Depth { get; }
    return:
      type: System.Int32
      description: "A profundidade do nó."
  overload: System.Web.UI.WebControls.TreeNode.Depth*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Expand
  id: Expand
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Web.UI.WebControls.TreeNode.Expand()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Expande o nó de árvore atual."
  remarks: "Use o método de expansão para conveniência, expanda o nó atual.      > [!NOTE] > Como alternativa, você também pode definir o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade `true`.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Para expandir o nó atual e todos os seus nós filho, considere o uso de <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>método.</xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>       <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>vai expandir todos os nós em toda a árvore.</xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>       O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to use the Expand method to programmatically expand a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpand#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_91_1.aspx)]\n [!code-vb[TreeNodeExpand#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_91_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void Expand ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Expand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll
  id: ExpandAll
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeNode.ExpandAll()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Expande o nó atual e todos os seus nós filho."
  remarks: "Use o método de expandir toda convenientemente expandir o nó atual e todos os seus nós filho.      > [!NOTE] > Como alternativa, você também pode definir o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade do nó atual e cada um de seus nós filho para `true`.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       Para expandir apenas o nó atual, considere o uso de <xref:System.Web.UI.WebControls.TreeNode.Expand%2A>método.</xref:System.Web.UI.WebControls.TreeNode.Expand%2A>       <xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>vai expandir todos os nós em toda a árvore.</xref:System.Web.UI.WebControls.TreeView.ExpandAll%2A>"
  example:
  - "The following code example demonstrates how to use the ExpandAll method to programmatically expand a node and all its child nodes in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeNodeExpandAll#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_213_1.aspx)]\n [!code-vb[TreeNodeExpandAll#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_213_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public void ExpandAll ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.ExpandAll*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Expanded
  id: Expanded
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Expanded
  nameWithType: TreeNode.Expanded
  fullName: System.Web.UI.WebControls.TreeNode.Expanded
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o nó é expandido."
  remarks: "Use a propriedade expandido para especificar ou determinar se o nó é expandido.       Você pode expandir e recolher um nó chamando o <xref:System.Web.UI.WebControls.TreeNode.Expand%2A>e <xref:System.Web.UI.WebControls.TreeNode.Collapse%2A>métodos, respectivamente.</xref:System.Web.UI.WebControls.TreeNode.Collapse%2A> </xref:System.Web.UI.WebControls.TreeNode.Expand%2A> Você também pode expandir e recolher um nó e todos os seus nós filho chamando o <xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>e <xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A>métodos, respectivamente.</xref:System.Web.UI.WebControls.TreeNode.CollapseAll%2A> </xref:System.Web.UI.WebControls.TreeNode.ExpandAll%2A>       Como a propriedade expandido é uma propriedade de três estados, o seguinte trecho de código em c# faz com que um erro de compilação: ```   protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)   {   if (TreeView1.Nodes[0].Expanded)   {   // some work here    }   }   ``` VB.Net enquanto converte implicitamente a `Boolean` valor para um `NullableBoolean`, c# não. Portanto, é uma prática recomendada verificar explicitamente o estado da propriedade. Por exemplo, os seguintes exemplos de código no Visual Basic e c# explicitamente testar o valor da propriedade expandido.       O seguinte exemplo de código do Visual Basic explicitamente testa o valor da propriedade expandido. Este exemplo testa se a propriedade expandido é definida como `True`; portanto `Nothing` e `False` passar o `If` instrução.      ```   If TreeView1.Nodes(0).Expanded = True Then &quot;some work hereEnd IF   ```Este exemplo de código c# explicitamente testa o valor da propriedade expandido. Este exemplo testa se a propriedade expandido é definida como `True`; portanto `Null` e `False` passar o `If` instrução.      ```   if( TreeView1.Nodes[0].Expanded == true ) { //some work here}   ```"
  example:
  - "The following code example demonstrates how to use the Expanded property to programmatically expand a node. It initializes all nodes with a depth of one to an expanded state. Notice that when the root node is expanded, its child nodes are already expanded. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-vb[TreeNodeExpanded#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_746_1.aspx)]\n [!code-cs[TreeNodeExpanded#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_746_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> Expanded { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nó é expandido, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> se o nó não é expandido, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.Expanded*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip
  id: ImageToolTip
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ImageToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto de dica de ferramenta para a imagem exibida ao lado de um nó."
  remarks: "Quando uma imagem é exibida ao lado de um nó (quando o <xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A>estiver definida), use a propriedade ImageToolTip para especificar a dica de ferramenta exibida quando o usuário posiciona o ponteiro do mouse sobre a imagem.</xref:System.Web.UI.WebControls.TreeNode.ImageUrl%2A> O texto que você especificar fornece dispositivos de tecnologia assistencial com uma descrição da imagem que pode ser usada para tornar o controle mais acessíveis.       O valor dessa propriedade é armazenado em estado de exibição.       O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ImageToolTip property to specify the ToolTip text for an image displayed next to a node. For this example to work correctly, you must provide your own images.  \n  \n [!code-vb[TreeNodeImageToolTip#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_911_1.aspx)]\n [!code-cs[TreeNodeImageToolTip#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_911_1.aspx)]"
  syntax:
    content: public string ImageToolTip { get; set; }
    return:
      type: System.String
      description: "O texto de dica de ferramenta para a imagem exibida ao lado de um nó. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.TreeNode.ImageToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl
  id: ImageUrl
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNode.ImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a URL para uma imagem que é exibida ao lado do nó."
  remarks: "Use a propriedade ImageUrl para especificar uma imagem personalizada para o nó atual no <xref:System.Web.UI.WebControls.TreeView>controle.</xref:System.Web.UI.WebControls.TreeView> Esta imagem é exibida ao lado do nó e pode estar em qualquer formato de arquivo (. jpg,. gif,. bmp e assim por diante), desde que o navegador do cliente oferece suporte a esse formato.       O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to use the ImageUrl property to provide a custom image for a node. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-cs[TreeViewTreeNodeDataBound#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1020_1.aspx)]\n [!code-vb[TreeViewTreeNodeDataBound#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1020_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public string ImageUrl { get; set; }
    return:
      type: System.String
      description: "A URL para uma imagem personalizada que é exibida ao lado do nó. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.TreeNode.ImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  id: IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um valor que indica se o nó está salvando alterações ao seu estado de exibição."
  syntax:
    content: protected bool IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle está marcado para salvar seu estado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: TreeNode.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carrega o estado de exibição salvo anteriormente do nó."
  remarks: "LoadViewState é um método auxiliar usado para carregar o estado de exibição salvo anteriormente do nó"
  syntax:
    content: protected virtual void LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Um <xref:System.Object>que representa o estado do nó.</xref:System.Object>"
  overload: System.Web.UI.WebControls.TreeNode.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl
  id: NavigateUrl
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNode.NavigateUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a URL para navegar quando o nó é clicado."
  remarks: "O texto de um nó pode estar em um dos dois modos: modo de navegação ou modo de seleção. Por padrão, um nó estiver no modo de seleção. Para colocar um nó no modo de navegação, definido na propriedade NavigateUrl do nó como um valor diferente de uma cadeia de caracteres vazia.       Quando um nó está no modo de navegação, todos os eventos de seleção estão desabilitados para esse nó. Clique no nó no modo de navegação vincula o usuário para a URL especificada. Você pode definir opcionalmente o <xref:System.Web.UI.WebControls.TreeNode.Target%2A>propriedade para especificar a janela ou quadro no qual exibir o conteúdo vinculado.</xref:System.Web.UI.WebControls.TreeNode.Target%2A>       O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to set up the frames for the next code example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1054_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1054_1.aspx)]  \n  \n The following code example demonstrates how to use the NavigateUrl property to specify the URL to link to when the node is clicked. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1054_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1054_2.aspx)]"
  syntax:
    content: public string NavigateUrl { get; set; }
    return:
      type: System.String
      description: "A URL para navegar quando o nó é clicado. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.TreeNode.NavigateUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Parent
  id: Parent
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Web.UI.WebControls.TreeNode.Parent
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o nó pai do nó atual."
  remarks: "A propriedade pai para retornar um <xref:System.Web.UI.WebControls.TreeNode>objeto que representa o nó pai do nó atual.</xref:System.Web.UI.WebControls.TreeNode> Ele costuma ser usado para determinar o nó pai ou para acessar as propriedades do nó pai.      > [!NOTE] > Um nó raiz não tem um nó pai.       Para acessar os nós filho do nó atual, use o <xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.ChildNodes%2A>"
  example:
  - "The following code example demonstrates how to use the Parent property to access the <xref:System.Web.UI.WebControls.TreeNode.Text%2A> property of the current node's parent node.  \n  \n [!code-vb[TreeNodeParent#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_132_1.aspx)]\n [!code-cs[TreeNodeParent#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_132_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNode Parent { get; }
    return:
      type: System.Web.UI.WebControls.TreeNode
      description: "Um <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> que representa o nó pai do nó atual."
  overload: System.Web.UI.WebControls.TreeNode.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  id: PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o nó é populado dinamicamente."
  remarks: "Às vezes, não é prático estaticamente predefinir a estrutura de árvore devido ao tamanho dos dados ou conteúdo personalizado que depende de entrada do usuário. Por isso, o <xref:System.Web.UI.WebControls.TreeView>controle oferece suporte ao preenchimento dinâmico de nós.</xref:System.Web.UI.WebControls.TreeView> Quando a propriedade PopulateOnDemand de um nó é definida como `true`, esse nó é populado em tempo de execução por meio de um evento de postback quando o nó é expandido. Para popular um nó dinamicamente, um método de manipulação de eventos que preenche o nó deve ser definido para o <xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>evento.</xref:System.Web.UI.WebControls.TreeView.TreeNodePopulate>       Navegadores com suporte também podem tirar proveito de preenchimento de nós do lado do cliente. Quando habilitado, isso permite que o <xref:System.Web.UI.WebControls.TreeView>controle preencher dinamicamente um nó no cliente quando o nó é expandido, o que evita a necessidade de volta para o servidor.</xref:System.Web.UI.WebControls.TreeView> Para obter mais informações sobre o preenchimento de nós do lado do cliente, consulte <xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>.</xref:System.Web.UI.WebControls.TreeView.PopulateNodesFromClient%2A>       O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to use the PopulateOnDemand property to indicate that a node is populated dynamically.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_774_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_774_1.aspx)]"
  syntax:
    content: public bool PopulateOnDemand { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para preencher o nó dinamicamente; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.PopulateOnDemand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  id: RenderPostText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: RenderPostText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPostText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPostText(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Permite que os desenvolvedores de controle Adicionar processamento adicional para o nó."
  remarks: "Esse método pode ser substituído por desenvolvedores de controle para adicionar processamento adicional depois que o nó é renderizado."
  syntax:
    content: protected virtual void RenderPostText (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída usado para gravar o conteúdo de uma página da Web."
  overload: System.Web.UI.WebControls.TreeNode.RenderPostText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  id: RenderPreText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: RenderPreText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPreText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPreText(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Permite que os desenvolvedores de controle Adicionar processamento adicional para o nó."
  remarks: "Esse método pode ser substituído por desenvolvedores de controle para adicionar processamento adicional antes que o nó seja processado."
  syntax:
    content: protected virtual void RenderPreText (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que representa o fluxo de saída usado para gravar o conteúdo de uma página da Web."
  overload: System.Web.UI.WebControls.TreeNode.RenderPreText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: TreeNode.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva o estado de exibição atual do nó."
  remarks: "O método SaveViewState é um método auxiliar chamado pelo nó para salvar seu estado."
  syntax:
    content: protected virtual object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém o estado salvo do nó.</xref:System.Object>"
  overload: System.Web.UI.WebControls.TreeNode.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Select
  id: Select
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Select()
  nameWithType: TreeNode.Select()
  fullName: System.Web.UI.WebControls.TreeNode.Select()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Seleciona o nó atual no <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controle."
  remarks: "Use o método de seleção para selecionar o nó atual no <xref:System.Web.UI.WebControls.TreeView>controle.</xref:System.Web.UI.WebControls.TreeView>       **Observação** como alternativa, você também pode selecionar o nó atual, definindo o <xref:System.Web.UI.WebControls.TreeNode.Selected%2A>propriedade `true`.</xref:System.Web.UI.WebControls.TreeNode.Selected%2A>"
  example:
  - "The following code example demonstrates how to use the Select method to select a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeSelected2#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_189_1.aspx)]\n [!code-cs[TreeNodeSelected2#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_189_1.aspx)]"
  syntax:
    content: public void Select ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.SelectAction
  id: SelectAction
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: SelectAction
  nameWithType: TreeNode.SelectAction
  fullName: System.Web.UI.WebControls.TreeNode.SelectAction
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o evento ou eventos a serem gerados quando um nó é selecionado."
  remarks: "O texto de um nó no <xref:System.Web.UI.WebControls.TreeView>controle pode estar em um dos dois modos: modo de navegação ou modo de seleção.</xref:System.Web.UI.WebControls.TreeView> Por padrão, um nó estiver no modo de seleção. Para colocar um nó no modo de navegação, definir o nó <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>propriedade com um valor diferente de uma cadeia de caracteres vazia (&quot;&quot;).</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A> Para colocar um nó no modo de seleção, definir o nó <xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>propriedade como uma cadeia de caracteres vazia.</xref:System.Web.UI.WebControls.TreeNode.NavigateUrl%2A>      > [!NOTE] > Quando um nó está no modo de navegação, eventos de seleção estão desabilitados para esse nó. Clicar em um nó direcionará o usuário para a URL especificada, em vez de postar a página de volta para o servidor e gerar um evento.       Quando um nó está em modo de seleção, use a propriedade SelectAction para especificar qual evento ou os eventos são gerados quando um nó é selecionado. A tabela a seguir lista as opções disponíveis.      | Ação de seleção | Descrição |   |----------------------|-----------------|   | `TreeNodeSelectAction.Expand`| Alterna entre expandidos e recolhidos no nó. Gera o evento <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>ou o evento <xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed>conforme apropriado. |   | `TreeNodeSelectAction.None`| Não eleva nenhum evento quando um nó é selecionado. |   | `TreeNodeSelectAction.Select`| Gera o evento <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>quando um nó é selecionado. |   | `TreeNodeSelectAction.SelectExpand`| Gera ambos o <xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged>e o <xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded>eventos quando um nó é selecionado.</xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.SelectedNodeChanged> </xref:System.Web.UI.WebControls.TreeView.TreeNodeCollapsed> </xref:System.Web.UI.WebControls.TreeView.TreeNodeExpanded> Nós só são expandidos, nunca recolhido. |      > [!NOTE] > O <xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>propriedade não é processada para um nó com a propriedade SelectAction definida como `TreeNodeSelectAction.None`.</xref:System.Web.UI.WebControls.TreeView.HoverNodeStyle%2A>       O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to use the SelectAction property to specify which event is raised when a node is clicked.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1227_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1227_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TreeNodeSelectAction SelectAction { get; set; }
    return:
      type: System.Web.UI.WebControls.TreeNodeSelectAction
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.TreeNodeSelectAction&quot;> </xref> valores. O padrão é <xref uid=&quot;langword_csharp_TreeNodeSelectAction.Select&quot; name=&quot;TreeNodeSelectAction.Select&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.SelectAction*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Selected
  id: Selected
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Selected
  nameWithType: TreeNode.Selected
  fullName: System.Web.UI.WebControls.TreeNode.Selected
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o nó é selecionado."
  remarks: "Use a propriedade Selected para especificar ou determinar se o nó é selecionado.      > [!NOTE] > Embora a propriedade pode ser usada para determinar se o nó é selecionado, é mais comum para usar o <xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>propriedade.</xref:System.Web.UI.WebControls.TreeView.SelectedNode%2A>       Apenas um nó pode ser selecionado por vez no <xref:System.Web.UI.WebControls.TreeView>controle ao usar essa propriedade.</xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > Como alternativa, você também pode selecionar o nó usando o <xref:System.Web.UI.WebControls.TreeNode.Select%2A>método.</xref:System.Web.UI.WebControls.TreeNode.Select%2A>       O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to use the Selected property to select a node in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeSelected2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_559_1.aspx)]\n [!code-cs[TreeNodeSelected2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_559_1.aspx)]"
  syntax:
    content: public bool Selected { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nó está selecionado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.Selected*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  id: ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se uma caixa de seleção é exibida ao lado do nó."
  remarks: "O <xref:System.Web.UI.WebControls.TreeView>controle permite que você exiba uma caixa de seleção ao lado da imagem do nó.</xref:System.Web.UI.WebControls.TreeView> Use a propriedade ShowCheckBox para mostrar ou ocultar a caixa de seleção para o nó atual.       Embora a propriedade ShowCheckBox pode ser usada para exibir caixas de seleção, é mais comum para usar o <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>propriedade o <xref:System.Web.UI.WebControls.TreeView>controle.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName> O <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>propriedade, no entanto, afetará todos os tipos de nó especificado pela propriedade; portanto, a propriedade ShowCheckBox geralmente é usada para substituir essa configuração para um nó individual.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>       Desde que o <xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName>é uma propriedade de três estados, o seguinte trecho de código em c# causa um erro de compilação: ```   protected void TreeView1_SelectedNodeChanged(object sender, EventArgs e)   {   if (TreeView1.Nodes[0].Expanded)   {   // some work here    }   }   ``` VB.Net enquanto converte implicitamente a `Boolean` valor para um `NullableBoolean`, c# não.</xref:System.Web.UI.WebControls.TreeView.ShowCheckBoxes%2A?displayProperty=fullName> Portanto, é uma prática recomendada verificar explicitamente o estado da propriedade. Por exemplo, os seguintes exemplos de código no Visual Basic e c# explicitamente testar o valor da <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>       O seguinte exemplo de código do Visual Basic explicitamente testa o valor da <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> Este exemplo testa se o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>está definida como `True`; portanto `Nothing` e `False` passar o `If` instrução.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>      ```   If TreeView1.Nodes(0).Expanded = True Then &quot;some work hereEnd IF   ```Este exemplo de código c# explicitamente testa o valor da <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A> Este exemplo testa se o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>está definida como `True`; portanto `Null` e `False` passar o `If` instrução.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>      ```   if( TreeView1.Nodes[0].Expanded == true ) { //some work here}   ```O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to use the ShowCheckBox property to programmatically show and hide the check box for a node in the <xref:System.Web.UI.WebControls.TreeView> control. For this example to work correctly, you must copy the sample XML data below to a file named Book.xml.  \n  \n [!code-vb[TreeNodeShowCheckBox#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_833_1.aspx)]\n [!code-cs[TreeNodeShowCheckBox#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_833_1.aspx)]  \n  \n The following code is sample XML data for the previous example.  \n  \n```  \n<Book Title=\"Book Title\">  \n    <Chapter Heading=\"Chapter 1\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n        <Section Heading=\"Section 2\">  \n        </Section>  \n    </Chapter>  \n    <Chapter Heading=\"Chapter 2\">  \n        <Section Heading=\"Section 1\">  \n        </Section>  \n    </Chapter>  \n</Book>  \n```"
  syntax:
    content: public Nullable<bool> ShowCheckBox { get; set; }
    return:
      type: System.Nullable{System.Boolean}
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para exibir a caixa de seleção. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.TreeNode.ShowCheckBox*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  id: System#ICloneable#Clone
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.ICloneable.Clone()
  nameWithType: TreeNode.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.System.ICloneable.Clone()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria uma cópia do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto."
  remarks: "O método ICloneable.Clone é usado pelo <xref:System.Web.UI.WebControls.TreeNode>classe para fazer uma cópia de si mesma.</xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: object ICloneable.Clone ();
    parameters: []
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa uma cópia do <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto.</xref:System.Object>"
  overload: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  id: System#Web#UI#IStateManager#IsTrackingViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte <xref:System.Web.UI.IStateManager.IsTrackingViewState*>.</xref:System.Web.UI.IStateManager.IsTrackingViewState*>"
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.TreeNode>instância é convertida para o <xref:System.Web.UI.IStateManager>interface.</xref:System.Web.UI.IStateManager> </xref:System.Web.UI.WebControls.TreeNode>"
  syntax:
    content: bool System.Web.UI.IStateManager.IsTrackingViewState { get; }
    return:
      type: System.Boolean
      description: "Um valor que indica se o nó está salvando alterações ao seu estado de exibição."
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  id: System#Web#UI#IStateManager#LoadViewState(System.Object)
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carrega o nó salvo anteriormente o estado de exibição."
  syntax:
    content: void IStateManager.LoadViewState (object state);
    parameters:
    - id: state
      type: System.Object
      description: "Um &lt;xref:System.Object?displayProperty=fullName&gt; que contém os valores de estado de exibição salvo."
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  id: System#Web#UI#IStateManager#SaveViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva a exibição de estado é alterado para um &lt;xref:System.Object?displayProperty=fullName&gt;."
  syntax:
    content: object IStateManager.SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "O &lt;xref:System.Object?displayProperty=fullName&gt; que contém as alterações de estado de exibição."
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  id: System#Web#UI#IStateManager#TrackViewState
  isEii: true
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Instrui o <xref href=&quot;System.Web.UI.WebControls.TreeNode&quot;> </xref> objeto para controlar alterações em seu estado de exibição."
  remarks: "Depois que esse método é chamado em um controle de servidor, o <xref:System.Web.UI.Control.IsTrackingViewState%2A>retorna propriedade `true`.</xref:System.Web.UI.Control.IsTrackingViewState%2A>"
  syntax:
    content: void IStateManager.TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Target
  id: Target
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Target
  nameWithType: TreeNode.Target
  fullName: System.Web.UI.WebControls.TreeNode.Target
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a janela de destino ou o quadro no qual exibir o conteúdo da página da Web associado a um nó."
  remarks: "Use a propriedade de destino para especificar a janela ou quadro no qual exibir o conteúdo da Web vinculada a um nó quando esse nó é clicado.      > [!NOTE] > Configurar essa propriedade substitui a <xref:System.Web.UI.WebControls.TreeView.Target%2A>propriedade o <xref:System.Web.UI.WebControls.TreeView>controle.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.Target%2A>      > [!NOTE] > Propriedade de destino a renderiza como um `target` atributo. O `target` atributo no `anchor` elementos não é permitido na definição do tipo de documento XHTML 1.1. Não defina a propriedade de destino se a saída renderizada para o <xref:System.Web.UI.WebControls.TreeNode>objeto deve ser compatível com 1.1 XHTML.</xref:System.Web.UI.WebControls.TreeNode> Para obter mais informações, consulte [padrões XHTML no Visual Studio e ASP.NET](~/add/includes/ajax-current-ext-md.md).   >> Durante a criação de páginas da Web acessíveis, é altamente recomendável que evitar a usar a propriedade de destino para outra janela de destino. Para obter mais informações, consulte [NIB: acessibilidade ASP.NET](http://msdn.microsoft.com/en-us/9b5f3e05-e88d-4248-a5f4-9e64850fa0ae).       O valor dessa propriedade é armazenado em estado de exibição."
  example:
  - "The following code example demonstrates how to set up the frames for the next example.  \n  \n [!code-vb[TreeViewFrameSet#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_971_1.aspx)]\n [!code-cs[TreeViewFrameSet#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_971_1.aspx)]  \n  \n The following code example demonstrates how to use the Target property to specify the frame in which to display the linked content. This example is used within the frameset of the previous example to display a table of contents.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_971_2.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_971_2.aspx)]"
  syntax:
    content: public string Target { get; set; }
    return:
      type: System.String
      description: "A janela de destino ou o quadro no qual exibir o conteúdo da página da Web vinculada. Os valores devem começar com uma letra no intervalo À Z (maiusculas de minúsculas), com exceção de determinados valores especiais que começam com um sublinhado, conforme mostrado na tabela a seguir.       <table><thead><tr><th> Valor de destino       </th><th> Descrição       </th></tr></thead><tbody><tr><td><xref uid=&quot;langword_csharp__blank&quot; name=&quot;_blank&quot; href=&quot;&quot;></xref></td><td> Renderiza o conteúdo em uma nova janela sem quadros.       </td></tr><tr><td><xref uid=&quot;langword_csharp__parent&quot; name=&quot;_parent&quot; href=&quot;&quot;></xref></td><td> Renderiza o conteúdo no conjunto de quadros pai.       </td></tr><tr><td><xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;></xref></td><td> Renderiza o conteúdo no painel de pesquisa.       </td></tr><tr><td><xref uid=&quot;langword_csharp__self&quot; name=&quot;_self&quot; href=&quot;&quot;></xref></td><td> Renderiza o conteúdo do quadro com foco.       </td></tr><tr><td><xref uid=&quot;langword_csharp__top&quot; name=&quot;_top&quot; href=&quot;&quot;></xref></td><td> Renderiza o conteúdo na janela inteira sem quadros.       </td></tr></tbody></table><div class=&quot;alert NOTE&quot;>    Verifique a documentação do navegador para determinar se o <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref> valor tem suporte. Por exemplo, Microsoft Internet Explorer 5.0 e posteriores dão suporte ao <xref uid=&quot;langword_csharp__search&quot; name=&quot;_search&quot; href=&quot;&quot;> </xref> valor de destino.      </div>       O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;), que atualiza a janela ou quadro com foco."
  overload: System.Web.UI.WebControls.TreeNode.Target*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Text
  id: Text
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Web.UI.WebControls.TreeNode.Text
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto exibido para o nó de <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controle."
  remarks: "Use a propriedade de texto para especificar ou determinar o texto que é exibido para o nó de <xref:System.Web.UI.WebControls.TreeView>controle.</xref:System.Web.UI.WebControls.TreeView>      > [!NOTE] > Se a propriedade de texto contém `null`, o `get` acessador retorna o valor da <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Value%2A> Se o <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade, por sua vez, contém `null`, <xref:System.String.Empty>será retornado.</xref:System.String.Empty> </xref:System.Web.UI.WebControls.TreeNode.Value%2A>       O valor dessa propriedade é armazenado em estado de exibição.       O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Text property to specify the text for a node.  \n  \n [!code-vb[TreeViewFrameExample#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_843_1.aspx)]\n [!code-cs[TreeViewFrameExample#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_843_1.aspx)]"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "O texto exibido para o nó de <xref href=&quot;System.Web.UI.WebControls.TreeView&quot;> </xref> controle. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNode.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState
  id: ToggleExpandState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ToggleExpandState()
  nameWithType: TreeNode.ToggleExpandState()
  fullName: System.Web.UI.WebControls.TreeNode.ToggleExpandState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Alterna entre o estado do nó de expandidos e recolhido."
  remarks: "Use o método ToggleExpandState para alternar entre um expandida e recolhida para o nó. Por exemplo, se o nó é recolhido, chamando o método ToggleExpandState expande o nó e vice-versa.      > [!NOTE] > Como alternativa, você pode definir o <xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>propriedade diretamente.</xref:System.Web.UI.WebControls.TreeNode.Expanded%2A>"
  example:
  - "The following code example demonstrates how to use the ToggleExpandState method to alternate between an expanded and a collapsed state for the root node of a <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-vb[TreeNodeToggleExpandState#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_18_1.aspx)]\n [!code-cs[TreeNodeToggleExpandState#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_18_1.aspx)]"
  syntax:
    content: public void ToggleExpandState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.ToggleExpandState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ToolTip
  id: ToolTip
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ToolTip
  nameWithType: TreeNode.ToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ToolTip
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto de dica de ferramenta para o nó."
  remarks: "Use a propriedade de dica de ferramenta para especificar o texto de dica de ferramenta para o nó. O texto de dica de ferramenta é exibido quando o ponteiro do mouse é posicionado sobre o nó.       O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the ToolTip property to provide ToolTips for the nodes in the <xref:System.Web.UI.WebControls.TreeView> control.  \n  \n [!code-cs[TreeNodeToolTip#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_69_1.aspx)]\n [!code-vb[TreeNodeToolTip#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_69_1.aspx)]"
  syntax:
    content: public string ToolTip { get; set; }
    return:
      type: System.String
      description: "O texto de dica de ferramenta para o nó. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNode.ToolTip*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: TreeNode.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Marca o ponto de partida no qual começar a controlar e salvar o estado de exibição altera para o nó."
  syntax:
    content: protected void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.TreeNode.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.Value
  id: Value
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: Value
  nameWithType: TreeNode.Value
  fullName: System.Web.UI.WebControls.TreeNode.Value
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor não exibido usado para armazenar dados adicionais sobre o nó, como dados usados para tratar eventos de postback."
  remarks: "A propriedade de valor é usada para complementar o <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade armazenando dados adicionais associados ao nó.</xref:System.Web.UI.WebControls.TreeNode.Text%2A> Esse valor não é exibido no controle e é comumente usado para armazenar dados para tratar eventos de postback.      > [!NOTE] > Se a propriedade de valor contém `null`, o `get` acessador retorna o valor da <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade.</xref:System.Web.UI.WebControls.TreeNode.Text%2A> Se o <xref:System.Web.UI.WebControls.TreeNode.Text%2A>propriedade, por sua vez, contém `null`, <xref:System.String.Empty>será retornado.</xref:System.String.Empty> </xref:System.Web.UI.WebControls.TreeNode.Text%2A>      > [!NOTE] > Cada nós no mesmo nível devem ter um valor exclusivo para a propriedade de valor; o <xref:System.Web.UI.WebControls.TreeView>controle não pode distinguir entre nós diferentes no mesmo nível que têm o mesmo valor.</xref:System.Web.UI.WebControls.TreeView> Nesse cenário, se o usuário clica em um nó que possui um valor duplicado, o nó que aparece primeiro no <xref:System.Web.UI.WebControls.TreeView>controle está selecionado.</xref:System.Web.UI.WebControls.TreeView>       O valor dessa propriedade é armazenado em estado de exibição.       O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following code example demonstrates how to use the Value property to store the key field.  \n  \n [!code-cs[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1316_1.aspx)]\n [!code-vb[TreeViewPopulateNodesFromClient#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1316_1.aspx)]"
  syntax:
    content: public string Value { get; set; }
    return:
      type: System.String
      description: "Dados complementares sobre o nó que não é exibido. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.TreeNode.Value*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.TreeNode.ValuePath
  id: ValuePath
  parent: System.Web.UI.WebControls.TreeNode
  langs:
  - csharp
  name: ValuePath
  nameWithType: TreeNode.ValuePath
  fullName: System.Web.UI.WebControls.TreeNode.ValuePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o caminho do nó raiz para o nó atual."
  remarks: "A propriedade ValuePath contém uma lista separada por delimitador de valores de nó que formam um caminho de nó raiz para o nó atual. Use o <xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A>propriedade para especificar o caractere delimitador usado para separar os valores de nó.</xref:System.Web.UI.WebControls.TreeView.PathSeparator%2A> Esse valor normalmente é usado durante a análise da lista de valores individuais ou para passar como um argumento para o <xref:System.Web.UI.WebControls.TreeView.FindNode%2A>método de <xref:System.Web.UI.WebControls.TreeView>classe.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeView.FindNode%2A>       Dependendo do valor exibido no <xref:System.Web.UI.WebControls.TreeView>controle, o caractere delimitador talvez precise ser alterada para evitar qualquer conflito.</xref:System.Web.UI.WebControls.TreeView> Por exemplo, se você definir o caractere delimitador de vírgula, o valor exibido deve não conter qualquer vírgulas. Caso contrário, você não pode analisar com precisão a propriedade ValuePath.      > [!NOTE] > Cada nós no mesmo nível devem ter um valor exclusivo para o <xref:System.Web.UI.WebControls.TreeNode.Value%2A>propriedade; o <xref:System.Web.UI.WebControls.TreeView>controle não pode distinguir entre nós diferentes no mesmo nível que têm o mesmo valor.</xref:System.Web.UI.WebControls.TreeView> </xref:System.Web.UI.WebControls.TreeNode.Value%2A> Nesse cenário, se o usuário clica em um nó que possui um valor duplicado, o nó que aparece primeiro no <xref:System.Web.UI.WebControls.TreeView>controle está selecionado.</xref:System.Web.UI.WebControls.TreeView>"
  example:
  - "The following code example demonstrates how to parse the ValuePath property.  \n  \n [!code-cs[TreeViewPathSeparator2#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_230_1.aspx)]\n [!code-vb[TreeViewPathSeparator2#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_230_1.aspx)]"
  syntax:
    content: public string ValuePath { get; }
    return:
      type: System.String
      description: "Uma lista separada por delimitador de valores de nó que formam um caminho de nó raiz para o nó atual."
  overload: System.Web.UI.WebControls.TreeNode.ValuePath*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Web.UI.WebControls.TreeNode.#ctor
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode()
  nameWithType: TreeNode.TreeNode()
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode()
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String)
  nameWithType: TreeNode.TreeNode(String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String)
  nameWithType: TreeNode.TreeNode(String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String)
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.Web.UI.WebControls.TreeView,System.Boolean)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(TreeView,Boolean)
  nameWithType: TreeNode.TreeNode(TreeView,Boolean)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(TreeView,Boolean)
- uid: System.Web.UI.WebControls.TreeView
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeView
  nameWithType: TreeView
  fullName: System.Web.UI.WebControls.TreeView
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String)
- uid: System.Web.UI.WebControls.TreeNode.#ctor(System.String,System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode(String,String,String,String,String)
  nameWithType: TreeNode.TreeNode(String,String,String,String,String)
  fullName: System.Web.UI.WebControls.TreeNode.TreeNode(String,String,String,String,String)
- uid: System.Web.UI.WebControls.TreeNode.Checked
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
  fullName: System.Web.UI.WebControls.TreeNode.Checked
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
  fullName: System.Web.UI.WebControls.TreeNode.ChildNodes
- uid: System.Web.UI.WebControls.TreeNodeCollection
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeCollection
  nameWithType: TreeNodeCollection
  fullName: System.Web.UI.WebControls.TreeNodeCollection
- uid: System.Web.UI.WebControls.TreeNode.Clone
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Clone()
  nameWithType: TreeNode.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.Clone()
- uid: System.Web.UI.WebControls.TreeNode.Collapse
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Collapse()
  nameWithType: TreeNode.Collapse()
  fullName: System.Web.UI.WebControls.TreeNode.Collapse()
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: CollapseAll()
  nameWithType: TreeNode.CollapseAll()
  fullName: System.Web.UI.WebControls.TreeNode.CollapseAll()
- uid: System.Web.UI.WebControls.TreeNode.DataBound
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataBound
  nameWithType: TreeNode.DataBound
  fullName: System.Web.UI.WebControls.TreeNode.DataBound
- uid: System.Web.UI.WebControls.TreeNode.DataItem
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataItem
  nameWithType: TreeNode.DataItem
  fullName: System.Web.UI.WebControls.TreeNode.DataItem
- uid: System.Web.UI.WebControls.TreeNode.DataPath
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataPath
  nameWithType: TreeNode.DataPath
  fullName: System.Web.UI.WebControls.TreeNode.DataPath
- uid: System.Web.UI.WebControls.TreeNode.Depth
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Depth
  nameWithType: TreeNode.Depth
  fullName: System.Web.UI.WebControls.TreeNode.Depth
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.TreeNode.Expand
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expand()
  nameWithType: TreeNode.Expand()
  fullName: System.Web.UI.WebControls.TreeNode.Expand()
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ExpandAll()
  nameWithType: TreeNode.ExpandAll()
  fullName: System.Web.UI.WebControls.TreeNode.ExpandAll()
- uid: System.Web.UI.WebControls.TreeNode.Expanded
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expanded
  nameWithType: TreeNode.Expanded
  fullName: System.Web.UI.WebControls.TreeNode.Expanded
- uid: System.Nullable{System.Boolean}
  parent: System
  isExternal: true
  name: Nullable<Boolean>
  nameWithType: Nullable<Boolean>
  fullName: System.Nullable<System.Boolean>
  spec.csharp:
  - uid: System.Nullable`1
    name: Nullable
    nameWithType: Nullable
    fullName: Nullable<System.Boolean>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Boolean
    name: Boolean
    nameWithType: Boolean
    fullName: Boolean
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
  fullName: System.Web.UI.WebControls.TreeNode.ImageUrl
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: TreeNode.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
  fullName: System.Web.UI.WebControls.TreeNode.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNode.Parent
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
  fullName: System.Web.UI.WebControls.TreeNode.Parent
- uid: System.Web.UI.WebControls.TreeNode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode
  fullName: System.Web.UI.WebControls.TreeNode
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
  fullName: System.Web.UI.WebControls.TreeNode.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPostText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPostText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPostText(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPreText(HtmlTextWriter)
  nameWithType: TreeNode.RenderPreText(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.TreeNode.RenderPreText(HtmlTextWriter)
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SaveViewState()
  nameWithType: TreeNode.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNode.Select
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Select()
  nameWithType: TreeNode.Select()
  fullName: System.Web.UI.WebControls.TreeNode.Select()
- uid: System.Web.UI.WebControls.TreeNode.SelectAction
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SelectAction
  nameWithType: TreeNode.SelectAction
  fullName: System.Web.UI.WebControls.TreeNode.SelectAction
- uid: System.Web.UI.WebControls.TreeNodeSelectAction
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TreeNodeSelectAction
  nameWithType: TreeNodeSelectAction
  fullName: System.Web.UI.WebControls.TreeNodeSelectAction
- uid: System.Web.UI.WebControls.TreeNode.Selected
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Selected
  nameWithType: TreeNode.Selected
  fullName: System.Web.UI.WebControls.TreeNode.Selected
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
  fullName: System.Web.UI.WebControls.TreeNode.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.ICloneable.Clone()
  nameWithType: TreeNode.System.ICloneable.Clone()
  fullName: System.Web.UI.WebControls.TreeNode.System.ICloneable.Clone()
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState(Object)
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.LoadViewState(Object)
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.SaveViewState()
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState()
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.System.Web.UI.IStateManager.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNode.Target
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Target
  nameWithType: TreeNode.Target
  fullName: System.Web.UI.WebControls.TreeNode.Target
- uid: System.Web.UI.WebControls.TreeNode.Text
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
  fullName: System.Web.UI.WebControls.TreeNode.Text
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToggleExpandState()
  nameWithType: TreeNode.ToggleExpandState()
  fullName: System.Web.UI.WebControls.TreeNode.ToggleExpandState()
- uid: System.Web.UI.WebControls.TreeNode.ToolTip
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToolTip
  nameWithType: TreeNode.ToolTip
  fullName: System.Web.UI.WebControls.TreeNode.ToolTip
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TrackViewState()
  nameWithType: TreeNode.TrackViewState()
  fullName: System.Web.UI.WebControls.TreeNode.TrackViewState()
- uid: System.Web.UI.WebControls.TreeNode.Value
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Value
  nameWithType: TreeNode.Value
  fullName: System.Web.UI.WebControls.TreeNode.Value
- uid: System.Web.UI.WebControls.TreeNode.ValuePath
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ValuePath
  nameWithType: TreeNode.ValuePath
  fullName: System.Web.UI.WebControls.TreeNode.ValuePath
- uid: System.Web.UI.WebControls.TreeNode.#ctor*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TreeNode
  nameWithType: TreeNode.TreeNode
- uid: System.Web.UI.WebControls.TreeNode.Checked*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Checked
  nameWithType: TreeNode.Checked
- uid: System.Web.UI.WebControls.TreeNode.ChildNodes*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ChildNodes
  nameWithType: TreeNode.ChildNodes
- uid: System.Web.UI.WebControls.TreeNode.Clone*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Clone
  nameWithType: TreeNode.Clone
- uid: System.Web.UI.WebControls.TreeNode.Collapse*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Collapse
  nameWithType: TreeNode.Collapse
- uid: System.Web.UI.WebControls.TreeNode.CollapseAll*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: CollapseAll
  nameWithType: TreeNode.CollapseAll
- uid: System.Web.UI.WebControls.TreeNode.DataBound*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataBound
  nameWithType: TreeNode.DataBound
- uid: System.Web.UI.WebControls.TreeNode.DataItem*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataItem
  nameWithType: TreeNode.DataItem
- uid: System.Web.UI.WebControls.TreeNode.DataPath*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: DataPath
  nameWithType: TreeNode.DataPath
- uid: System.Web.UI.WebControls.TreeNode.Depth*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Depth
  nameWithType: TreeNode.Depth
- uid: System.Web.UI.WebControls.TreeNode.Expand*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expand
  nameWithType: TreeNode.Expand
- uid: System.Web.UI.WebControls.TreeNode.ExpandAll*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ExpandAll
  nameWithType: TreeNode.ExpandAll
- uid: System.Web.UI.WebControls.TreeNode.Expanded*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Expanded
  nameWithType: TreeNode.Expanded
- uid: System.Web.UI.WebControls.TreeNode.ImageToolTip*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageToolTip
  nameWithType: TreeNode.ImageToolTip
- uid: System.Web.UI.WebControls.TreeNode.ImageUrl*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ImageUrl
  nameWithType: TreeNode.ImageUrl
- uid: System.Web.UI.WebControls.TreeNode.IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: IsTrackingViewState
  nameWithType: TreeNode.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.LoadViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: LoadViewState
  nameWithType: TreeNode.LoadViewState
- uid: System.Web.UI.WebControls.TreeNode.NavigateUrl*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: NavigateUrl
  nameWithType: TreeNode.NavigateUrl
- uid: System.Web.UI.WebControls.TreeNode.Parent*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Parent
  nameWithType: TreeNode.Parent
- uid: System.Web.UI.WebControls.TreeNode.PopulateOnDemand*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: PopulateOnDemand
  nameWithType: TreeNode.PopulateOnDemand
- uid: System.Web.UI.WebControls.TreeNode.RenderPostText*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPostText
  nameWithType: TreeNode.RenderPostText
- uid: System.Web.UI.WebControls.TreeNode.RenderPreText*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: RenderPreText
  nameWithType: TreeNode.RenderPreText
- uid: System.Web.UI.WebControls.TreeNode.SaveViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SaveViewState
  nameWithType: TreeNode.SaveViewState
- uid: System.Web.UI.WebControls.TreeNode.Select*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Select
  nameWithType: TreeNode.Select
- uid: System.Web.UI.WebControls.TreeNode.SelectAction*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: SelectAction
  nameWithType: TreeNode.SelectAction
- uid: System.Web.UI.WebControls.TreeNode.Selected*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Selected
  nameWithType: TreeNode.Selected
- uid: System.Web.UI.WebControls.TreeNode.ShowCheckBox*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ShowCheckBox
  nameWithType: TreeNode.ShowCheckBox
- uid: System.Web.UI.WebControls.TreeNode.System#ICloneable#Clone*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.ICloneable.Clone
  nameWithType: TreeNode.System.ICloneable.Clone
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#IsTrackingViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.IsTrackingViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.IsTrackingViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#LoadViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.LoadViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.LoadViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#SaveViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.SaveViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.SaveViewState
- uid: System.Web.UI.WebControls.TreeNode.System#Web#UI#IStateManager#TrackViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: System.Web.UI.IStateManager.TrackViewState
  nameWithType: TreeNode.System.Web.UI.IStateManager.TrackViewState
- uid: System.Web.UI.WebControls.TreeNode.Target*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Target
  nameWithType: TreeNode.Target
- uid: System.Web.UI.WebControls.TreeNode.Text*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Text
  nameWithType: TreeNode.Text
- uid: System.Web.UI.WebControls.TreeNode.ToggleExpandState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToggleExpandState
  nameWithType: TreeNode.ToggleExpandState
- uid: System.Web.UI.WebControls.TreeNode.ToolTip*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ToolTip
  nameWithType: TreeNode.ToolTip
- uid: System.Web.UI.WebControls.TreeNode.TrackViewState*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: TrackViewState
  nameWithType: TreeNode.TrackViewState
- uid: System.Web.UI.WebControls.TreeNode.Value*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: Value
  nameWithType: TreeNode.Value
- uid: System.Web.UI.WebControls.TreeNode.ValuePath*
  parent: System.Web.UI.WebControls.TreeNode
  isExternal: false
  name: ValuePath
  nameWithType: TreeNode.ValuePath
