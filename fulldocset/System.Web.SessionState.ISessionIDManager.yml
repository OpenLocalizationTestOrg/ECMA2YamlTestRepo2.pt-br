### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.ISessionIDManager
  id: ISessionIDManager
  children:
  - System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.Initialize
  - System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  - System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  - System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  - System.Web.SessionState.ISessionIDManager.Validate(System.String)
  langs:
  - csharp
  name: ISessionIDManager
  nameWithType: ISessionIDManager
  fullName: System.Web.SessionState.ISessionIDManager
  type: Interface
  summary: "Define o contrato que um Gerenciador de identificador de estado de sessão personalizado deve implementar."
  remarks: "A interface ISessionIDManager identifica os métodos que você deve implementar para criar um Gerenciador de personalizado para valores de identificador de sessão. Uma implementação de interface ISessionIDManager cria e valida valores de identificador de sessão e gerencia o armazenamento de um identificador de sessão na resposta HTTP, bem como a recuperação de um valor de identificador de sessão da solicitação de HTTP. Habilitar o Gerenciador de identificação de sessão personalizada usando o `sessionIDManagerType` atributo o [sessionState Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/bda6fb8c-0076-43e3-9ce2-8cf1f8bdaa7d) elemento de configuração.       Se sua implementação de interface ISessionIDManager oferecerão suporte a identificadores de sessão sem cookies, você precisará implementar uma solução para enviar e recuperar identificadores de sessão na URL, como um filtro ISAPI.       Se você quiser fornecer valores de identificador de sessão personalizado a ser usado por estado de sessão do ASP.NET, você pode criar uma classe que herda de <xref:System.Web.SessionState.SessionIDManager>classe e substituir apenas a <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>e <xref:System.Web.SessionState.SessionIDManager.Validate%2A>métodos com sua própria implementação personalizada.</xref:System.Web.SessionState.SessionIDManager.Validate%2A> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager> Isso permite que você forneça seus próprios valores de identificador de sessão, ao confiar na base de <xref:System.Web.SessionState.SessionIDManager>classe para armazenar valores para a resposta HTTP e recuperar valores de solicitação HTTP.</xref:System.Web.SessionState.SessionIDManager> Para obter um exemplo de substituição de <xref:System.Web.SessionState.SessionIDManager>classe e a implementação desses métodos, consulte o exemplo fornecido para o <xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A>método de <xref:System.Web.SessionState.SessionIDManager>classe.</xref:System.Web.SessionState.SessionIDManager> </xref:System.Web.SessionState.SessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionIDManager>"
  example:
  - "The following code example shows a class that implements a cookie-based session-ID manager.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/visualbasic/t-system.web.sessionstat_1_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#1](~/add/codesnippet/csharp/t-system.web.sessionstat_1_1.cs)]"
  syntax:
    content: public interface ISessionIDManager
  implements: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  id: CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: CreateSessionID(HttpContext)
  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Cria um identificador de sessão exclusiva."
  remarks: "O método CreateSessionID é usado para gerar um identificador de sessão exclusiva que o <xref:System.Web.SessionState.SessionStateModule>objeto será usado para identificar uma sessão nova.</xref:System.Web.SessionState.SessionStateModule> O valor retornado por CreateSessionID deve ser exclusivo e deve conter caracteres válidos que podem ser armazenados em uma solicitação e resposta HTTP. Se for possível que o valor retornado pela sua implementação CreateSessionID contém caracteres que não são válidos em uma resposta HTTP ou a solicitação, você deve usar o <xref:System.Web.HttpUtility.UrlEncode%2A>método para codificar o valor do identificador de sessão no seu <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>implementação de método e o <xref:System.Web.HttpUtility.UrlDecode%2A>método para decodificar o valor de identificador de sessão em seu <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>implementação do método.</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> </xref:System.Web.HttpUtility.UrlEncode%2A>"
  example:
  - "The following code example implements the CreateSessionID method. The method creates a new <xref:System.Guid> to be used as a session identifier.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/visualbasic/873b6fcc-0b1f-453f-806c-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#3](~/add/codesnippet/csharp/873b6fcc-0b1f-453f-806c-_1.cs)]"
  syntax:
    content: public string CreateSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Atual <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto que faz referência a objetos de servidor usado para processar solicitações HTTP (por exemplo, o <> </> *> e <> </> *> propriedades)."
    return:
      type: System.String
      description: "Um identificador de sessão exclusiva."
  overload: System.Web.SessionState.ISessionIDManager.CreateSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  id: GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: GetSessionID(HttpContext)
  nameWithType: ISessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Obtém o identificador de sessão do contexto da solicitação HTTP atual."
  remarks: "O método GetSessionID é chamado pelo <xref:System.Web.SessionState.SessionStateModule>durante o <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>e <xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName>eventos.</xref:System.Web.HttpApplication.EndRequest?displayProperty=fullName> </xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionStateModule> Se você não pode recuperar um identificador de sessão válido da solicitação de HTTP, retornar `null`. Se o <xref:System.Web.SessionState.SessionStateModule>recebe `null` do método GetSessionID, ele chamará o <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>método para obter um identificador de nova sessão para uma nova sessão.</xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A> </xref:System.Web.SessionState.SessionStateModule>       Se for possível que o valor retornado pela sua <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>implementação contém caracteres que não são válidos em uma resposta HTTP ou a solicitação, você deve usar o <xref:System.Web.HttpUtility.UrlEncode%2A>método para codificar o valor do identificador de sessão no seu <xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A>implementação de método e o <xref:System.Web.HttpUtility.UrlDecode%2A>método para decodificar o valor de identificador de sessão em sua implementação do método GetSessionID.</xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.SessionState.ISessionIDManager.SaveSessionID%2A> </xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>"
  example:
  - "The following code example shows a partially implemented GetSessionID method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/visualbasic/m-system.web.sessionstat_10_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#2](~/add/codesnippet/csharp/m-system.web.sessionstat_10_1.cs)]"
  syntax:
    content: public string GetSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Atual <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto que faz referência a objetos de servidor usado para processar solicitações HTTP (por exemplo, o <> </> *> e <> </> *> propriedades)."
    return:
      type: System.String
      description: "O identificador de sessão atual enviado com a solicitação HTTP."
  overload: System.Web.SessionState.ISessionIDManager.GetSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.Initialize
  id: Initialize
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: Initialize()
  nameWithType: ISessionIDManager.Initialize()
  fullName: System.Web.SessionState.ISessionIDManager.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Inicializa o <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> objeto."
  remarks: "Use o método de inicialização para inicializar o <xref:System.Web.SessionState.ISessionIDManager>objeto.</xref:System.Web.SessionState.ISessionIDManager>"
  syntax:
    content: public void Initialize ();
    parameters: []
  overload: System.Web.SessionState.ISessionIDManager.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  id: InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Executa a inicialização por solicitação do <xref href=&quot;System.Web.SessionState.SessionIDManager&quot;> </xref> objeto."
  remarks: "O método InitializeRequest é chamado para cada solicitação tratada pelo <xref:System.Web.SessionState.ISessionIDManager>objeto.</xref:System.Web.SessionState.ISessionIDManager> Use o método InitializeRequest para inicializar dados por solicitação para o <xref:System.Web.SessionState.SessionIDManager>objeto.</xref:System.Web.SessionState.SessionIDManager>       Quando o `suppressAutoDetectRedirect` parâmetro é `true`, o <xref:System.Web.SessionState.ISessionIDManager>objeto não deve usar o redirecionamento para determinar se o navegador oferece suporte a cookies.</xref:System.Web.SessionState.ISessionIDManager>       O `supportSessionIDReissue` parâmetro deve ser retornado `false` se os cookies são usados para a identificação de sessão; caso contrário, retornará `true` se seu <xref:System.Web.SessionState.ISessionIDManager>implementação oferece suporte a IDs de sessão novamente emissora.</xref:System.Web.SessionState.ISessionIDManager>"
  syntax:
    content: public bool InitializeRequest (System.Web.HttpContext context, bool suppressAutoDetectRedirect, out bool supportSessionIDReissue);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto que contém informações sobre a solicitação atual."
    - id: suppressAutoDetectRedirect
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o Gerenciador de ID de sessão deve redirecionar para determinar o suporte a cookie; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para suprimir o redirecionamento automático para determinar o suporte a cookie."
    - id: supportSessionIDReissue
      type: System.Boolean
      description: "Quando este método retorna, contém um valor booleano que indica se o <xref href=&quot;System.Web.SessionState.ISessionIDManager&quot;> </xref> objeto dá suporte à emissão de nova sessão IDs quando a ID original está desatualizada. Esse parâmetro é passado não inicializado.       Reutilização de ID de sessão é apropriada quando a ID de estado de sessão é codificada em uma URL e existe a possibilidade da URL a ser compartilhado ou enviado por email.       Se os cookies de partições uma implementação personalizada de estado de sessão por caminho virtual, o estado de sessão também deve ter suporte."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar que a inicialização executada um redirecionamento; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.ISessionIDManager.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  id: RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: RemoveSessionID(HttpContext)
  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Exclui o identificador de sessão do cookie ou na URL."
  remarks: "O <xref:System.Web.SessionState.SessionStateModule>chamadas de <xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A>método durante o <xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName>evento remova o identificador da sessão do <xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName>coleção se foi criada uma nova sessão, mas não foi usada.</xref:System.Web.HttpResponse.Cookies%2A?displayProperty=fullName> </xref:System.Web.HttpApplication.ReleaseRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionIDManager.RemoveSessionID%2A> </xref:System.Web.SessionState.SessionStateModule>"
  example:
  - "The following code example implements the RemoveSessionID method.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/visualbasic/ee24c797-ce26-45a5-8119-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#4](~/add/codesnippet/csharp/ee24c797-ce26-45a5-8119-_1.cs)]"
  syntax:
    content: public void RemoveSessionID (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Atual <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto que faz referência a objetos de servidor usado para processar solicitações HTTP (por exemplo, o <> </> *> e <> </> *> propriedades)."
  overload: System.Web.SessionState.ISessionIDManager.RemoveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  id: SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Salva um identificador de sessão recém-criado à resposta HTTP."
  remarks: "O método SaveSessionID é chamado pelo <xref:System.Web.SessionState.SessionStateModule>do objeto durante a <xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName>evento.</xref:System.Web.HttpApplication.AcquireRequestState?displayProperty=fullName> </xref:System.Web.SessionState.SessionStateModule> O método SaveSessionID armazena o identificador de sessão na URL (quando o estado de sessão sem cookie é usado) ou em um cookie de sessão que não expira.       Se for possível que o valor retornado de sua <xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>implementação contém caracteres que não são válidos em uma resposta HTTP ou a solicitação, você deve usar o <xref:System.Web.HttpUtility.UrlEncode%2A>método para codificar o valor do identificador de sessão em sua implementação do método SaveSessionID e o <xref:System.Web.HttpUtility.UrlDecode%2A>método para decodificar o valor de identificador de sessão em seu <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>implementação do método.</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.HttpUtility.UrlDecode%2A> </xref:System.Web.HttpUtility.UrlEncode%2A> </xref:System.Web.SessionState.ISessionIDManager.CreateSessionID%2A>"
  example:
  - "The following code example shows a partially implemented <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> method. If your custom session-ID manager supports cookieless session identifiers, you will need to implement a solution for sending and retrieving session identifiers in the URL, such as an ISAPI filter.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/visualbasic/c9e7b38d-d963-4c81-9ebb-_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#5](~/add/codesnippet/csharp/c9e7b38d-d963-4c81-9ebb-_1.cs)]"
  syntax:
    content: public void SaveSessionID (System.Web.HttpContext context, string id, out bool redirected, out bool cookieAdded);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Atual <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto que faz referência a objetos de servidor usado para processar solicitações HTTP (por exemplo, o <> </> *> e <> </> *> propriedades)."
    - id: id
      type: System.String
      description: "O identificador de sessão."
    - id: redirected
      type: System.Boolean
      description: "Quando este método retorna, contém um valor booliano que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se a resposta é redirecionado para a URL atual com o identificador de sessão adicionado para a URL; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: cookieAdded
      type: System.Boolean
      description: "Quando este método retorna, contém um valor booliano que é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se um cookie tiver sido adicionado à resposta HTTP; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.ISessionIDManager.SaveSessionID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)
  id: Validate(System.String)
  parent: System.Web.SessionState.ISessionIDManager
  langs:
  - csharp
  name: Validate(String)
  nameWithType: ISessionIDManager.Validate(String)
  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Confirma que o identificador de sessão fornecido é válido."
  remarks: "O método Validate verifica se fornecido `id` é um identificador de sessão válido.       O <xref:System.Web.SessionState.ISessionIDManager>implementação deve chamar o método Validate do <xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A>método ao recuperar um identificador de sessão de uma solicitação HTTP para garantir que o identificador de sessão fornecido está formatado corretamente.</xref:System.Web.SessionState.ISessionIDManager.GetSessionID%2A> </xref:System.Web.SessionState.ISessionIDManager>"
  example:
  - "The following code example implements the Validate method and ensures the session-identifier value is a valid <xref:System.Guid>.  \n  \n [!code-vb[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/visualbasic/m-system.web.sessionstat_0_1.vb)]\n [!code-cs[System.Web.SessionState.ISessionIDModule#6](~/add/codesnippet/csharp/m-system.web.sessionstat_0_1.cs)]"
  syntax:
    content: public bool Validate (string id);
    parameters:
    - id: id
      type: System.String
      description: "O identificador de sessão para validar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o identificador de sessão é válido. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.ISessionIDManager.Validate*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: CreateSessionID(HttpContext)
  nameWithType: ISessionIDManager.CreateSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.CreateSessionID(HttpContext)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: GetSessionID(HttpContext)
  nameWithType: ISessionIDManager.GetSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.GetSessionID(HttpContext)
- uid: System.Web.SessionState.ISessionIDManager.Initialize
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Initialize()
  nameWithType: ISessionIDManager.Initialize()
  fullName: System.Web.SessionState.ISessionIDManager.Initialize()
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest(System.Web.HttpContext,System.Boolean,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: InitializeRequest(HttpContext,Boolean,Boolean)
  nameWithType: ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.InitializeRequest(HttpContext,Boolean,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID(System.Web.HttpContext)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: RemoveSessionID(HttpContext)
  nameWithType: ISessionIDManager.RemoveSessionID(HttpContext)
  fullName: System.Web.SessionState.ISessionIDManager.RemoveSessionID(HttpContext)
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID(System.Web.HttpContext,System.String,System.Boolean@,System.Boolean@)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: SaveSessionID(HttpContext,String,Boolean,Boolean)
  nameWithType: ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
  fullName: System.Web.SessionState.ISessionIDManager.SaveSessionID(HttpContext,String,Boolean,Boolean)
- uid: System.Web.SessionState.ISessionIDManager.Validate(System.String)
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Validate(String)
  nameWithType: ISessionIDManager.Validate(String)
  fullName: System.Web.SessionState.ISessionIDManager.Validate(String)
- uid: System.Web.SessionState.ISessionIDManager.CreateSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: CreateSessionID
  nameWithType: ISessionIDManager.CreateSessionID
- uid: System.Web.SessionState.ISessionIDManager.GetSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: GetSessionID
  nameWithType: ISessionIDManager.GetSessionID
- uid: System.Web.SessionState.ISessionIDManager.Initialize*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Initialize
  nameWithType: ISessionIDManager.Initialize
- uid: System.Web.SessionState.ISessionIDManager.InitializeRequest*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: InitializeRequest
  nameWithType: ISessionIDManager.InitializeRequest
- uid: System.Web.SessionState.ISessionIDManager.RemoveSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: RemoveSessionID
  nameWithType: ISessionIDManager.RemoveSessionID
- uid: System.Web.SessionState.ISessionIDManager.SaveSessionID*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: SaveSessionID
  nameWithType: ISessionIDManager.SaveSessionID
- uid: System.Web.SessionState.ISessionIDManager.Validate*
  parent: System.Web.SessionState.ISessionIDManager
  isExternal: false
  name: Validate
  nameWithType: ISessionIDManager.Validate
