### YamlMime:ManagedReference
items:
- uid: System.Web.DynamicData.DynamicControl
  id: DynamicControl
  children:
  - System.Web.DynamicData.DynamicControl.#ctor
  - System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)
  - System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  - System.Web.DynamicData.DynamicControl.Column
  - System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  - System.Web.DynamicData.DynamicControl.CssClass
  - System.Web.DynamicData.DynamicControl.DataField
  - System.Web.DynamicData.DynamicControl.DataFormatString
  - System.Web.DynamicData.DynamicControl.FieldTemplate
  - System.Web.DynamicData.DynamicControl.GetAttribute(System.String)
  - System.Web.DynamicData.DynamicControl.HtmlEncode
  - System.Web.DynamicData.DynamicControl.Mode
  - System.Web.DynamicData.DynamicControl.NullDisplayText
  - System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)
  - System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)
  - System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  - System.Web.DynamicData.DynamicControl.Table
  - System.Web.DynamicData.DynamicControl.UIHint
  - System.Web.DynamicData.DynamicControl.ValidationGroup
  langs:
  - csharp
  name: DynamicControl
  nameWithType: DynamicControl
  fullName: System.Web.DynamicData.DynamicControl
  type: Class
  summary: "Exibe o conteúdo que é definido para o campo em controles associados a dados modelo, usando os recursos do Dynamic Data do ASP.NET."
  remarks: "Neste tópico:- [Introdução](#introduction)      -   [sintaxe declarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # controle DynamicControl a introdução é usado por controles de associação de dados modelo, como <xref:System.Web.UI.WebControls.FormView>ou <xref:System.Web.UI.WebControls.ListView>para exibir um campo de dados que usa recursos do Dynamic Data do ASP.NET em uma página personalizada.</xref:System.Web.UI.WebControls.ListView> </xref:System.Web.UI.WebControls.FormView>       Você também pode usar um controle DynamicControl em um <xref:System.Web.UI.WebControls.TemplateField>campo de um <xref:System.Web.UI.WebControls.GridView>ou um <xref:System.Web.UI.WebControls.DetailsView>controle.</xref:System.Web.UI.WebControls.DetailsView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.TemplateField>       O controle DynamicControl fornece funcionalidade semelhante do <xref:System.Web.DynamicData.DynamicField>campo.</xref:System.Web.DynamicData.DynamicField> No entanto, porque o controle DynamicControl é usado somente dentro de modelos, ele fornece mais flexibilidade para controlar como os dados são exibidos como você pode adicionar outros elementos HTML ao redor do campo. Quando você usa um controle DynamicControl, você pode aproveitar os seguintes recursos de dados dinâmicos: - automaticamente renderizar o controle apropriado para um campo usando modelos de campo, com base no tipo de dados. Os modelos de campo podem ser modificados globalmente para o aplicativo inteiro.      -Fornecer a validação de dados interna com base no esquema de banco de dados. Você também pode adicionar tipos de validação ao personalizar o modelo de dados.      -Personalizar a renderização de dados para campos individuais por meio de atributos no modelo de dados ou usando o <xref:System.Web.DynamicData.DynamicField.UIHint%2A>propriedade.</xref:System.Web.DynamicData.DynamicField.UIHint%2A>       Para especificar o campo a ser exibido em um controle DynamicControl, defina o <xref:System.Web.DynamicData.DynamicControl.DataField%2A>propriedade para o nome do campo.</xref:System.Web.DynamicData.DynamicControl.DataField%2A> Você pode aplicar uma cadeia de caracteres de formatação personalizada para o valor do campo, definindo a <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>propriedade.</xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> Por padrão, a cadeia de caracteres de formatação é aplicada aos valores do campo somente quando o controle associado a dados está no modo somente leitura. Para aplicar a cadeia de caracteres de formatação para os valores exibidos enquanto o controle associado a dados está no modo de edição, defina a <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A>propriedade `true`.</xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A> Se um valor do campo for `null`, você pode exibir uma legenda personalizada, definindo o <xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A>propriedade.</xref:System.Web.DynamicData.DynamicControl.NullDisplayText%2A> O controle DynamicControl automaticamente pode converter a cadeia de caracteres vazia (&quot;&quot;) campo valores para valores nulos definindo o <xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A>propriedade `true`.</xref:System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull%2A>       O controle DynamicControl dá suporte a diferentes modos de exibição. Para especificar o modo de exibição do controle DynamicControl, defina o <xref:System.Web.DynamicData.DynamicControl.Mode%2A>propriedade.</xref:System.Web.DynamicData.DynamicControl.Mode%2A> A tabela a seguir mostra os modos diferentes.       <xref:System.Web.UI.WebControls.DataBoundControlMode>para o modo de exibição.</xref:System.Web.UI.WebControls.DataBoundControlMode> Isso impede que o usuário modificando os valores de um registro ou um campo de dados. Ele pode ser usado em qualquer um dos modelos.       <xref:System.Web.UI.WebControls.DataBoundControlMode>modo de edição.</xref:System.Web.UI.WebControls.DataBoundControlMode> Isso permite que os usuários atualizar os valores de um registro existente. Ele é usado no modelo de edição (geralmente denominado `EditItemTemplate`).       <xref:System.Web.UI.WebControls.DataBoundControlMode>modo de inserção.</xref:System.Web.UI.WebControls.DataBoundControlMode> Isso permite que os usuários insiram valores para um novo registro. Ele é usado no modelo de inserção (geralmente denominado `InsertItemTemplate`).       Você pode ocultar um controle DynamicControl em um controle associado a dados, definindo o <xref:System.Web.UI.Control.Visible%2A>propriedade `false`.</xref:System.Web.UI.Control.Visible%2A>      <a name=&quot;declarative_syntax&quot;></a># # Sintaxe de declarativa```   <asp:DynamicControl       ApplyFormatInEditMode=&quot;True|False&quot;       ConvertEmptyStringToNull=&quot;True|False&quot;       CssClass=&quot;string&quot;       DataField=&quot;string&quot;       DataFormatString=&quot;string&quot;       EnableViewState=&quot;True|False&quot;       HtmlEncode=&quot;True|False&quot;       ID=&quot;string&quot;       Mode=&quot;Edit|Insert|ReadOnly&quot;       NullDisplayText=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       runat=&quot;server&quot;       UIHint=&quot;string&quot;       ValidationGroup=&quot;string&quot;       Visible=&quot;True|False&quot;   >   </asp:DynamicControl>   ```"
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl).  \n  \n The following example demonstrates how to use the DynamicControl control in a <xref:System.Web.UI.WebControls.ListView> control to display, insert, delete and edit values from a database table. It is important to notice that in order to make the insert operation to work, the <xref:System.Data.Linq.Mapping.ColumnAttribute.IsDbGenerated%2A> property of the `rowguid` and `ModifiedDate` columns are set to `true`.  \n  \n [!code-vb[System.Web.DynamicData.DynamicControl#1](~/add/codesnippet/visualbasic/t-system.web.dynamicdata_0_1.aspx)]\n [!code-cs[System.Web.DynamicData.DynamicControl#1](~/add/codesnippet/csharp/t-system.web.dynamicdata_0_1.aspx)]"
  syntax:
    content: >-
      [System.Drawing.ToolboxBitmap(typeof(System.Web.DynamicData.DynamicControl), "DynamicControl.bmp")]

      public class DynamicControl : System.Web.UI.Control, System.Web.DynamicData.IFieldFormattingOptions, System.Web.DynamicData.IFieldTemplateHost, System.Web.UI.IAttributeAccessor
  inheritance:
  - System.Object
  - System.Web.UI.Control
  implements:
  - System.Web.DynamicData.IFieldFormattingOptions
  - System.Web.DynamicData.IFieldTemplateHost
  - System.Web.UI.IAttributeAccessor
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.Controls
  - System.Web.UI.Control.CreateChildControls
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableTheming
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadControlState(System.Object)
  - System.Web.UI.Control.LoadViewState(System.Object)
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnLoad(System.EventArgs)
  - System.Web.UI.Control.OnPreRender(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SaveControlState
  - System.Web.UI.Control.SaveViewState
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.SkinID
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.TrackViewState
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.#ctor
  id: '#ctor'
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DynamicControl()
  nameWithType: DynamicControl.DynamicControl()
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl()
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> classe."
  syntax:
    content: public DynamicControl ();
    parameters: []
  overload: System.Web.DynamicData.DynamicControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)
  id: '#ctor(System.Web.UI.WebControls.DataBoundControlMode)'
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DynamicControl(DataBoundControlMode)
  nameWithType: DynamicControl.DynamicControl(DataBoundControlMode)
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl(DataBoundControlMode)
  type: Constructor
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> classe com o modo especificado."
  syntax:
    content: public DynamicControl (System.Web.UI.WebControls.DataBoundControlMode mode);
    parameters:
    - id: mode
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "Um dos valores de enumeração que especifica o modo do controle."
  overload: System.Web.DynamicData.DynamicControl.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  id: ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: ApplyFormatInEditMode
  nameWithType: DynamicControl.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define um valor que indica se a cadeia de caracteres de formatação especificado com o <xref:System.Web.DynamicData.DynamicControl.DataFormatString*>propriedade é aplicada aos valores do campo quando o campo estiver em modo de edição.</xref:System.Web.DynamicData.DynamicControl.DataFormatString*>"
  remarks: "O <xref:System.Web.DynamicData.DynamicControl>controle tem diferentes modos de exibição que permitem ao usuário ler, editar ou inserir um campo.</xref:System.Web.DynamicData.DynamicControl> Por padrão, a cadeia de caracteres de formatação especificados pelo <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>propriedade é aplicada ao valor de um campo somente quando o <xref:System.Web.DynamicData.DynamicControl>controle está no modo somente leitura.</xref:System.Web.DynamicData.DynamicControl> </xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A> Para aplicar a cadeia de caracteres de formatação para os valores exibidos enquanto o controle associado a dados está no modo de edição, defina a propriedade ApplyFormatInEditMode `true`.      > [!NOTE] > O <xref:System.Web.DynamicData.DynamicControl>controle não remove automaticamente quando o campo é atualizado na fonte de dados de formatação.</xref:System.Web.DynamicData.DynamicControl> Se você não quiser que a formatação como parte do valor armazenado, você precisará remover a formatação de forma programática."
  syntax:
    content: public bool ApplyFormatInEditMode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a cadeia de caracteres de formatação foi aplicada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Column
  id: Column
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Column
  nameWithType: DynamicControl.Column
  fullName: System.Web.DynamicData.DynamicControl.Column
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define o objeto de coluna que está associado com o controle."
  remarks: "Você pode usar a propriedade da coluna para obter informações de metadados sobre uma coluna específica. A propriedade da coluna é definida automaticamente pelo <xref:System.Web.DynamicData.DynamicControl>controle com base no nome do campo fornecido para o <xref:System.Web.DynamicData.DynamicControl.DataField%2A>propriedade.</xref:System.Web.DynamicData.DynamicControl.DataField%2A> </xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: public System.Web.DynamicData.MetaColumn Column { get; set; }
    return:
      type: System.Web.DynamicData.MetaColumn
      description: "O objeto de coluna que está associado com o controle."
  overload: System.Web.DynamicData.DynamicControl.Column*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  id: ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: ConvertEmptyStringToNull
  nameWithType: DynamicControl.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define um valor que indica se vazia valores de cadeia de caracteres (&quot;&quot;) são automaticamente convertidos em valores nulos quando o campo de dados é atualizado na fonte de dados."
  remarks: "O <xref:System.Web.UI.WebControls.Parameter>objeto do controle de fonte de dados também tem uma propriedade chamada <xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName>.</xref:System.Web.UI.WebControls.Parameter.ConvertEmptyStringToNull%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.Parameter> Essa propriedade executa a mesma função. Certifique-se de que ambas as propriedades são definidas corretamente."
  syntax:
    content: public bool ConvertEmptyStringToNull { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os valores de cadeia de caracteres vazia são automaticamente convertidos em valores nulos; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.CssClass
  id: CssClass
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: CssClass
  nameWithType: DynamicControl.CssClass
  fullName: System.Web.DynamicData.DynamicControl.CssClass
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define a classe de folha de estilo em cascata (CSS) que especifica os estilos de exibição para o <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> controlar o conteúdo."
  syntax:
    content: public virtual string CssClass { get; set; }
    return:
      type: System.String
      description: "O nome da classe CSS."
  overload: System.Web.DynamicData.DynamicControl.CssClass*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.DataField
  id: DataField
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DataField
  nameWithType: DynamicControl.DataField
  fullName: System.Web.DynamicData.DynamicControl.DataField
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define o nome do campo de dados que o <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> controle está vinculado."
  remarks: "Use a propriedade DataField para especificar o campo de dados para associar o <xref:System.Web.DynamicData.DynamicControl>controle.</xref:System.Web.DynamicData.DynamicControl> O campo de dados pode ser a coluna de nome ou, para colunas de chave estrangeira, o nome da relação.       Por padrão, o campo de dados especificado é exibido pelo <xref:System.Web.DynamicData.DynamicControl>controlar usando o modelo de campo que está associado com o tipo de dados do campo.</xref:System.Web.DynamicData.DynamicControl> Você pode alterar o modelo de campo que é renderizado para o campo de dados, definindo o <xref:System.Web.DynamicData.DynamicControl.UIHint%2A>propriedade.</xref:System.Web.DynamicData.DynamicControl.UIHint%2A> Você também pode formatar o texto exibido, definindo a <xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>propriedade.</xref:System.Web.DynamicData.DynamicControl.DataFormatString%2A>       **Observação** se você quiser alterar a exibição e o comportamento de um campo de dados global, você deve aplicar atributos ao seu modelo de dados, em vez de configurá-lo em uma instância específica da <xref:System.Web.DynamicData.DynamicControl>controle.</xref:System.Web.DynamicData.DynamicControl> Para obter mais informações, consulte [Dynamic Data do ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following example demonstrates how to use the DataField property to specify which field to display in a <xref:System.Web.DynamicData.DynamicControl> control.  \n  \n [!code-cs[System.Web.DynamicData.DynamicControl.DataField#1](~/add/codesnippet/csharp/p-system.web.dynamicdata_4_1.aspx)]\n [!code-vb[System.Web.DynamicData.DynamicControl.DataField#1](~/add/codesnippet/visualbasic/p-system.web.dynamicdata_4_1.aspx)]"
  syntax:
    content: public string DataField { get; set; }
    return:
      type: System.String
      description: "O nome do campo de dados para associar o <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> controle. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica se esta propriedade não está definida."
  overload: System.Web.DynamicData.DynamicControl.DataField*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.DataFormatString
  id: DataFormatString
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: DataFormatString
  nameWithType: DynamicControl.DataFormatString
  fullName: System.Web.DynamicData.DynamicControl.DataFormatString
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define uma cadeia de caracteres que especifica o formato de exibição para o valor do campo."
  remarks: "Use a propriedade DataFormatString para especificar um formato de exibição personalizado para os valores exibidos na <xref:System.Web.DynamicData.DynamicControl>controle.</xref:System.Web.DynamicData.DynamicControl> Se a propriedade DataFormatString não está definida, o valor do campo será exibido sem qualquer formatação especial.       Por padrão, a cadeia de caracteres de formatação é aplicada para o valor do campo somente quando a <xref:System.Web.DynamicData.DynamicControl.Mode%2A>propriedade é definida como <xref:System.Web.UI.WebControls.DataBoundControlMode>.</xref:System.Web.UI.WebControls.DataBoundControlMode> </xref:System.Web.DynamicData.DynamicControl.Mode%2A> Para aplicar a cadeia de caracteres de formatação para o valor do campo no modo de edição, defina a <xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A>propriedade `true`.</xref:System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode%2A>       O formato de exibição que você especificar usando a propriedade DataFormatString é específico para esta instância do <xref:System.Web.DynamicData.DynamicControl>controle.</xref:System.Web.DynamicData.DynamicControl> Você também pode alterar o formato de exibição para um campo de dados em todo o aplicativo aplicando o <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute>ao seu modelo de dados e configurar o <xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName>parâmetro no construtor nomeado.</xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute.DataFormatString%2A?displayProperty=fullName> </xref:System.ComponentModel.DataAnnotations.DisplayFormatAttribute> Para obter mais informações, consulte [Dynamic Data do ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public string DataFormatString { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de formatação que especifica o formato de exibição para o valor do campo. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica que nenhuma formatação especial é aplicado para o valor do campo."
  overload: System.Web.DynamicData.DynamicControl.DataFormatString*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.FieldTemplate
  id: FieldTemplate
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: FieldTemplate
  nameWithType: DynamicControl.FieldTemplate
  fullName: System.Web.DynamicData.DynamicControl.FieldTemplate
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém o modelo de campo que é criado para o <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> controle."
  syntax:
    content: public System.Web.UI.Control FieldTemplate { get; }
    return:
      type: System.Web.UI.Control
      description: "O modelo de campo que é criado para o <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> controle."
  overload: System.Web.DynamicData.DynamicControl.FieldTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.GetAttribute(System.String)
  id: GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: GetAttribute(String)
  nameWithType: DynamicControl.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicControl.GetAttribute(String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Recupera o valor de atributo usando a chave especificada."
  remarks: "Se a coleção de atributos é `null`, esse método retorna uma cadeia de caracteres vazia."
  syntax:
    content: public string GetAttribute (string key);
    parameters:
    - id: key
      type: System.String
      description: "O nome do atributo."
    return:
      type: System.String
      description: "O valor do atributo."
  overload: System.Web.DynamicData.DynamicControl.GetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.HtmlEncode
  id: HtmlEncode
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: HtmlEncode
  nameWithType: DynamicControl.HtmlEncode
  fullName: System.Web.DynamicData.DynamicControl.HtmlEncode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define um valor que indica se os dados para o controle são codificada em HTML antes do processamento."
  remarks: "Use a propriedade HtmlEncode para especificar se os valores de campo são codificada em HTML em suas representações de cadeia de caracteres respectivo antes de eles serem exibidos.      > [!NOTE] > Valores dos campos de codificação HTML ajuda a impedir ataques de script entre sites e conteúdo malicioso de ser exibida. Essa propriedade deve ser habilitada sempre que possível. Para obter mais informações, consulte [visão geral sobre scripts maliciosos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool HtmlEncode { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dados para o controle são codificada em HTML antes do processamento; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicControl.HtmlEncode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Mode
  id: Mode
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Mode
  nameWithType: DynamicControl.Mode
  fullName: System.Web.DynamicData.DynamicControl.Mode
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define o modo de renderização."
  remarks: "Use a propriedade Mode para especificar qual modo de processamento a ser usado para exibir o <xref:System.Web.DynamicData.DynamicControl>controle.</xref:System.Web.DynamicData.DynamicControl> A tabela a seguir mostra os modos diferentes.      | Modo | Descrição |   |----------|-----------------|   | <xref:System.Web.UI.WebControls.DataBoundControlMode>| para modo de exibição.</xref:System.Web.UI.WebControls.DataBoundControlMode> Isso impede que o usuário modificando os valores de um registro ou um campo de dados. Ele pode ser usado em qualquer um dos modelos. Esse é o valor padrão. |   | <xref:System.Web.UI.WebControls.DataBoundControlMode>| modo de edição.</xref:System.Web.UI.WebControls.DataBoundControlMode> Isso permite que os usuários atualizar os valores de um registro existente. Ele é usado no `EditItemTemplate` modelo. |   | <xref:System.Web.UI.WebControls.DataBoundControlMode>| modo de inserção.</xref:System.Web.UI.WebControls.DataBoundControlMode> Isso permite que os usuários insiram valores para um novo registro. Ele é usado no `InsertItemTemplate` modelo. |"
  syntax:
    content: public System.Web.UI.WebControls.DataBoundControlMode Mode { get; set; }
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "Um dos valores de enumeração que especifica o modo de renderização do controle. O padrão é <xref href=&quot;System.Web.UI.WebControls.DataBoundControlMode&quot;> </xref>."
  overload: System.Web.DynamicData.DynamicControl.Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.NullDisplayText
  id: NullDisplayText
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: NullDisplayText
  nameWithType: DynamicControl.NullDisplayText
  fullName: System.Web.DynamicData.DynamicControl.NullDisplayText
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define a legenda que é exibida para um campo de dados quando o valor do campo é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  remarks: "Às vezes, um valor de campo é armazenado como nulo na fonte de dados. Você pode especificar uma legenda personalizada a ser exibida para os campos que têm um valor nulo, definindo a propriedade NullDisplayText. Se essa propriedade não está definida, os valores de campo nulo são exibidos como cadeias de caracteres vazias (&quot;&quot;)."
  syntax:
    content: public string NullDisplayText { get; set; }
    return:
      type: System.String
      description: "A legenda é exibida para um campo de dados quando o valor do campo é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica se esta propriedade não está definida."
  overload: System.Web.DynamicData.DynamicControl.NullDisplayText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: DynamicControl.OnInit(EventArgs)
  fullName: System.Web.DynamicData.DynamicControl.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnInit também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Os dados do evento."
  overload: System.Web.DynamicData.DynamicControl.OnInit*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <xref:System.Web.DynamicData.DynamicControl.DataField*>propriedade não está definida.</xref:System.Web.DynamicData.DynamicControl.DataField*>"
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: DynamicControl.Render(HtmlTextWriter)
  fullName: System.Web.DynamicData.DynamicControl.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Renderiza o <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> controlar o conteúdo para o navegador do cliente usando especificado <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> objeto."
  remarks: "O método de renderização é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.DynamicData.DynamicControl>controle.</xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "O objeto que é usado para renderizar o <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> controlar o conteúdo no navegador do cliente."
  overload: System.Web.DynamicData.DynamicControl.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)
  id: SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: SetAttribute(String,String)
  nameWithType: DynamicControl.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicControl.SetAttribute(String,String)
  type: Method
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Define o atributo especificado para o valor especificado."
  syntax:
    content: public void SetAttribute (string key, string value);
    parameters:
    - id: key
      type: System.String
      description: "O nome do atributo a ser definido."
    - id: value
      type: System.String
      description: "O valor a ser atribuído ao atributo."
  overload: System.Web.DynamicData.DynamicControl.SetAttribute*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  id: System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  isEii: true
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  nameWithType: DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  fullName: System.Web.DynamicData.DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Para obter uma descrição desse membro, consulte <xref:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions*>.</xref:System.Web.DynamicData.IFieldTemplateHost.FormattingOptions*>"
  syntax:
    content: System.Web.DynamicData.IFieldFormattingOptions System.Web.DynamicData.IFieldTemplateHost.FormattingOptions { get; }
    return:
      type: System.Web.DynamicData.IFieldFormattingOptions
      description: "As opções de formatação a ser aplicada ao modelo de campo."
  overload: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.Table
  id: Table
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: Table
  nameWithType: DynamicControl.Table
  fullName: System.Web.DynamicData.DynamicControl.Table
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém o objeto de tabela que está associado com o controle."
  remarks: "Use a propriedade de tabela para acessar as informações de metadados sobre a tabela que está associada com o controle de associação de dados que contém o <xref:System.Web.DynamicData.DynamicControl>controle.</xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: public virtual System.Web.DynamicData.MetaTable Table { get; }
    return:
      type: System.Web.DynamicData.MetaTable
      description: "O objeto de tabela que está associado com o controle."
  overload: System.Web.DynamicData.DynamicControl.Table*
  exceptions:
  - type: System.Exception
    commentId: T:System.Exception
    description: "O <xref href=&quot;System.Web.DynamicData.DynamicControl&quot;> </xref> controle está dentro de um controle associado a dados que não esteja associado a um controle de fonte de dados que implementa o <xref href=&quot;System.Web.DynamicData.IDynamicDataSource&quot;> </xref> interface."
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.UIHint
  id: UIHint
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: UIHint
  nameWithType: DynamicControl.UIHint
  fullName: System.Web.DynamicData.DynamicControl.UIHint
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define o nome do modelo do campo que é usado para renderizar o campo de dados."
  remarks: "Use a propriedade UIHint para especificar o modelo de campo a ser usado para exibir a interface do usuário para um campo de dados. Modelos de campo por padrão são controles de usuário e seus nomes contêm um sufixo para identificar modelos do campo que são usados para operações de edição e operações de inserção. Os sufixos são editar e inserir, respectivamente. Quando você define um valor para a propriedade UIHint, você pode definir o nome sem os sufixos. Dados dinâmicos identificará o modo correto avaliando o <xref:System.Web.DynamicData.DynamicControl.Mode%2A>propriedade de valor e processará o modelo de campo correto.</xref:System.Web.DynamicData.DynamicControl.Mode%2A>       Se a propriedade UIHint não está definida, por padrão de dados dinâmicos processará o modelo de campo com base no tipo de campo. Para obter mais informações, consulte [Scaffolding de dados dinâmicos do ASP.NET](~/add/includes/ajax-current-ext-md.md).       O modelo de campo que você especificar usando a propriedade UIHint é específico para esta instância do <xref:System.Web.DynamicData.DynamicControl>controle.</xref:System.Web.DynamicData.DynamicControl> Você também pode alterar o modelo de campo usado por um campo de dados em todo o aplicativo aplicando o <xref:System.ComponentModel.DataAnnotations.UIHintAttribute>para o modelo de dados.</xref:System.ComponentModel.DataAnnotations.UIHintAttribute> Definindo a propriedade UIHint substitui os metadados aplicados ao modelo de dados. Para obter mais informações sobre atributos de metadados, consulte [Dynamic Data do ASP.NET](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "See a run-time code example of this feature: [Run](http://go.microsoft.com/fwlink/?LinkId=120736&sref=System.Web.DynamicData.DynamicControl.UIHint).  \n  \n The following example shows how you can specify a data field to use a different field template to render its contents. The second example shows the custom field template specified by the UIHint property.  \n  \n [!code-cs[System.Web.DynamicData.DynamicControl.UIHint#1](~/add/codesnippet/csharp/p-system.web.dynamicdata_2_1.aspx)]\n [!code-vb[System.Web.DynamicData.DynamicControl.UIHint#1](~/add/codesnippet/visualbasic/p-system.web.dynamicdata_2_1.aspx)]  \n  \n [!code-vb[System.Web.DynamicData.DynamicControl.UIHint#2](~/add/codesnippet/visualbasic/p-system.web.dynamicdata_2_2.ascx)]\n [!code-cs[System.Web.DynamicData.DynamicControl.UIHint#2](~/add/codesnippet/csharp/p-system.web.dynamicdata_2_2.ascx)]"
  syntax:
    content: public virtual string UIHint { get; set; }
    return:
      type: System.String
      description: "O nome do modelo do campo que é usado para renderizar o campo de dados. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica que o modelo do campo será renderizado com base no tipo de campo de dados ou informações de metadados aplicadas ao modelo de dados."
  overload: System.Web.DynamicData.DynamicControl.UIHint*
  exceptions: []
  platform:
  - net462
- uid: System.Web.DynamicData.DynamicControl.ValidationGroup
  id: ValidationGroup
  parent: System.Web.DynamicData.DynamicControl
  langs:
  - csharp
  name: ValidationGroup
  nameWithType: DynamicControl.ValidationGroup
  fullName: System.Web.DynamicData.DynamicControl.ValidationGroup
  type: Property
  assemblies:
  - System.Web.DynamicData
  namespace: System.Web.DynamicData
  summary: "Obtém ou define o nome do grupo de validação para o controle."
  remarks: "Grupos de validação permitem atribuir controles de validação em uma página a uma categoria específica. Cada grupo de validação pode ser validado independentemente de outros grupos de validação na página. Use a propriedade ValidationGroup para especificar o nome do grupo de validação para o qual o <xref:System.Web.DynamicData.DynamicControl>controle aciona a validação quando a página envia de volta para o servidor.</xref:System.Web.DynamicData.DynamicControl>"
  syntax:
    content: public virtual string ValidationGroup { get; set; }
    return:
      type: System.String
      description: "O nome do grupo de validação para o controle."
  overload: System.Web.DynamicData.DynamicControl.ValidationGroup*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.Control
  isExternal: false
  name: System.Web.UI.Control
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Web.DynamicData.DynamicControl.#ctor
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DynamicControl()
  nameWithType: DynamicControl.DynamicControl()
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl()
- uid: System.Web.DynamicData.DynamicControl.#ctor(System.Web.UI.WebControls.DataBoundControlMode)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DynamicControl(DataBoundControlMode)
  nameWithType: DynamicControl.DynamicControl(DataBoundControlMode)
  fullName: System.Web.DynamicData.DynamicControl.DynamicControl(DataBoundControlMode)
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicControl.ApplyFormatInEditMode
  fullName: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.DynamicData.DynamicControl.Column
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Column
  nameWithType: DynamicControl.Column
  fullName: System.Web.DynamicData.DynamicControl.Column
- uid: System.Web.DynamicData.MetaColumn
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaColumn
  nameWithType: MetaColumn
  fullName: System.Web.DynamicData.MetaColumn
- uid: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicControl.ConvertEmptyStringToNull
  fullName: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicControl.CssClass
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: CssClass
  nameWithType: DynamicControl.CssClass
  fullName: System.Web.DynamicData.DynamicControl.CssClass
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.DynamicData.DynamicControl.DataField
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataField
  nameWithType: DynamicControl.DataField
  fullName: System.Web.DynamicData.DynamicControl.DataField
- uid: System.Web.DynamicData.DynamicControl.DataFormatString
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicControl.DataFormatString
  fullName: System.Web.DynamicData.DynamicControl.DataFormatString
- uid: System.Web.DynamicData.DynamicControl.FieldTemplate
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: FieldTemplate
  nameWithType: DynamicControl.FieldTemplate
  fullName: System.Web.DynamicData.DynamicControl.FieldTemplate
- uid: System.Web.DynamicData.DynamicControl.GetAttribute(System.String)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: GetAttribute(String)
  nameWithType: DynamicControl.GetAttribute(String)
  fullName: System.Web.DynamicData.DynamicControl.GetAttribute(String)
- uid: System.Web.DynamicData.DynamicControl.HtmlEncode
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicControl.HtmlEncode
  fullName: System.Web.DynamicData.DynamicControl.HtmlEncode
- uid: System.Web.DynamicData.DynamicControl.Mode
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Mode
  nameWithType: DynamicControl.Mode
  fullName: System.Web.DynamicData.DynamicControl.Mode
- uid: System.Web.DynamicData.DynamicControl.NullDisplayText
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicControl.NullDisplayText
  fullName: System.Web.DynamicData.DynamicControl.NullDisplayText
- uid: System.Web.DynamicData.DynamicControl.OnInit(System.EventArgs)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: DynamicControl.OnInit(EventArgs)
  fullName: System.Web.DynamicData.DynamicControl.OnInit(EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.DynamicData.DynamicControl.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: DynamicControl.Render(HtmlTextWriter)
  fullName: System.Web.DynamicData.DynamicControl.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.DynamicData.DynamicControl.SetAttribute(System.String,System.String)
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: SetAttribute(String,String)
  nameWithType: DynamicControl.SetAttribute(String,String)
  fullName: System.Web.DynamicData.DynamicControl.SetAttribute(String,String)
- uid: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  nameWithType: DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  fullName: System.Web.DynamicData.DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
- uid: System.Web.DynamicData.IFieldFormattingOptions
  parent: System.Web.DynamicData
  isExternal: false
  name: IFieldFormattingOptions
  nameWithType: IFieldFormattingOptions
  fullName: System.Web.DynamicData.IFieldFormattingOptions
- uid: System.Web.DynamicData.DynamicControl.Table
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Table
  nameWithType: DynamicControl.Table
  fullName: System.Web.DynamicData.DynamicControl.Table
- uid: System.Web.DynamicData.MetaTable
  parent: System.Web.DynamicData
  isExternal: false
  name: MetaTable
  nameWithType: MetaTable
  fullName: System.Web.DynamicData.MetaTable
- uid: System.Web.DynamicData.DynamicControl.UIHint
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: UIHint
  nameWithType: DynamicControl.UIHint
  fullName: System.Web.DynamicData.DynamicControl.UIHint
- uid: System.Web.DynamicData.DynamicControl.ValidationGroup
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicControl.ValidationGroup
  fullName: System.Web.DynamicData.DynamicControl.ValidationGroup
- uid: System.Web.DynamicData.DynamicControl.#ctor*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DynamicControl
  nameWithType: DynamicControl.DynamicControl
- uid: System.Web.DynamicData.DynamicControl.ApplyFormatInEditMode*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ApplyFormatInEditMode
  nameWithType: DynamicControl.ApplyFormatInEditMode
- uid: System.Web.DynamicData.DynamicControl.Column*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Column
  nameWithType: DynamicControl.Column
- uid: System.Web.DynamicData.DynamicControl.ConvertEmptyStringToNull*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ConvertEmptyStringToNull
  nameWithType: DynamicControl.ConvertEmptyStringToNull
- uid: System.Web.DynamicData.DynamicControl.CssClass*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: CssClass
  nameWithType: DynamicControl.CssClass
- uid: System.Web.DynamicData.DynamicControl.DataField*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataField
  nameWithType: DynamicControl.DataField
- uid: System.Web.DynamicData.DynamicControl.DataFormatString*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: DataFormatString
  nameWithType: DynamicControl.DataFormatString
- uid: System.Web.DynamicData.DynamicControl.FieldTemplate*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: FieldTemplate
  nameWithType: DynamicControl.FieldTemplate
- uid: System.Web.DynamicData.DynamicControl.GetAttribute*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: GetAttribute
  nameWithType: DynamicControl.GetAttribute
- uid: System.Web.DynamicData.DynamicControl.HtmlEncode*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: HtmlEncode
  nameWithType: DynamicControl.HtmlEncode
- uid: System.Web.DynamicData.DynamicControl.Mode*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Mode
  nameWithType: DynamicControl.Mode
- uid: System.Web.DynamicData.DynamicControl.NullDisplayText*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: NullDisplayText
  nameWithType: DynamicControl.NullDisplayText
- uid: System.Web.DynamicData.DynamicControl.OnInit*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: OnInit
  nameWithType: DynamicControl.OnInit
- uid: System.Web.DynamicData.DynamicControl.Render*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Render
  nameWithType: DynamicControl.Render
- uid: System.Web.DynamicData.DynamicControl.SetAttribute*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: SetAttribute
  nameWithType: DynamicControl.SetAttribute
- uid: System.Web.DynamicData.DynamicControl.System#Web#DynamicData#IFieldTemplateHost#FormattingOptions*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
  nameWithType: DynamicControl.System.Web.DynamicData.IFieldTemplateHost.FormattingOptions
- uid: System.Web.DynamicData.DynamicControl.Table*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: Table
  nameWithType: DynamicControl.Table
- uid: System.Web.DynamicData.DynamicControl.UIHint*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: UIHint
  nameWithType: DynamicControl.UIHint
- uid: System.Web.DynamicData.DynamicControl.ValidationGroup*
  parent: System.Web.DynamicData.DynamicControl
  isExternal: false
  name: ValidationGroup
  nameWithType: DynamicControl.ValidationGroup
