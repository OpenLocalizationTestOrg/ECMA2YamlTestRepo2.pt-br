### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription
  id: WebPartDescription
  children:
  - System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  - System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  - System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  - System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  - System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  - System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  langs:
  - csharp
  name: WebPartDescription
  nameWithType: WebPartDescription
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription
  type: Class
  summary: "Fornece informações sobre um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controle que você pode exibir em um catálogo de controles de Web Parts sem a necessidade de criar uma instância do controle."
  remarks: "Quando <xref:System.Web.UI.WebControls.WebParts.WebPart>controles são exibidos em um catálogo de controles que os usuários podem adicionar a uma página, algumas informações básicas sobre cada controle são necessárias.</xref:System.Web.UI.WebControls.WebParts.WebPart> Por exemplo, é útil ter um título para o controle e uma descrição para que, conforme os usuários exibem um catálogo têm informações suficientes para decidir se deseja adicionar um controle para a página. No entanto, um catálogo de <xref:System.Web.UI.WebControls.WebParts.WebPart>potencialmente podem conter muitos controles e ele pode afetar o desempenho de um aplicativo se uma instância de cada <xref:System.Web.UI.WebControls.WebParts.WebPart>controle deve ser criado para extrair as informações a serem exibidas no catálogo.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPart>       A classe WebPartDescription existe para que não é necessário criar uma instância de um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle para recuperar as informações sobre o controle que é exibido em um catálogo de controles.</xref:System.Web.UI.WebControls.WebParts.WebPart> O conjunto de controles de Web Parts, um objeto WebPartDescription também é usado em conjunto com os vários <xref:System.Web.UI.WebControls.WebParts.CatalogPart>modo de exibição de controles quando uma página está no catálogo.</xref:System.Web.UI.WebControls.WebParts.CatalogPart>       A classe WebPartDescription tem duas sobrecargas do construtor, que leva um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle como um parâmetro quando uma instância está disponível (o <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>construtor), e uma que usa várias cadeias de caracteres com informações sobre o controle como parâmetros (o <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A>construtor).</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       A classe WebPartDescription também tem várias propriedades criadas para conter as informações de descrição de <xref:System.Web.UI.WebControls.WebParts.WebPart>controles.</xref:System.Web.UI.WebControls.WebParts.WebPart> A tabela a seguir resume as propriedades de WebPartDescription, e que cada propriedade que um corresponde em um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle.</xref:System.Web.UI.WebControls.WebParts.WebPart>      | Propriedade de descrição | A propriedade de controle de parte relacionada à |   |--------------------------|-----------------------------------|   | <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>| <xref:System.Web.UI.Control.ID%2A>|   | <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A>| <xref:System.Web.UI.WebControls.WebParts.Part.Title%2A>|   | <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A>| <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A>|   | <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A>| <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A>|</xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl%2A></xref:System.Web.UI.WebControls.WebParts.Part.Description%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description%2A></xref:System.Web.UI.WebControls.WebParts.Part.Title%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title%2A></xref:System.Web.UI.Control.ID%2A></xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID%2A>"
  example:
  - "The following code example demonstrates programmatic use of the WebPartDescription class. Ordinarily, this type is used primarily by the Web Parts control set, but this code example is simply showing basic programmatic usage of the main description properties.  \n  \n The code example has four parts:  \n  \n-   A user control that enables users to change display modes on a Web page.  \n  \n-   A custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control.  \n  \n-   A Web page to host the other controls.  \n  \n-   An explanation of how the code example works.  \n  \n The first part of the code example is the user control. The source code for the user control comes from another topic. For more details about the user control, see the topic [Walkthrough: Changing Display Modes on a Web Parts Page](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#7](~/add/codesnippet/csharp/t-system.web.ui.webcontr_125_1.ascx)]\n [!code-vb[WebParts_WebPartDescription_Overview#7](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_125_1.ascx)]  \n  \n The second part of the code example is a custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control. For the code example to run, you must compile this source code. You can compile it explicitly and put the resulting assembly in your Web site's Bin folder or the global assembly cache. Alternatively, you can put the source code in your site's App_Code folder, where it will be dynamically compiled at run time. This code example uses the approach of dynamic compilation. For a walkthrough that demonstrates how to compile, see [Walkthrough: Developing and Using a Custom Web Server Control](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#3](~/add/codesnippet/csharp/t-system.web.ui.webcontr_125_2.cs)]\n [!code-vb[WebParts_WebPartDescription_Overview#3](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_125_2.vb)]  \n  \n The third part of the code example is the Web page. Near the top are two `Register` directives: one that registers the user control, and the other to register the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control whose source file is located in the App_Code folder of your site. The page contains an `<asp:catalogzone>` element, which in turn contains declarative references to two controls: the custom <xref:System.Web.UI.WebControls.WebParts.WebPart> control named `TextDisplayWebPart`, and a <xref:System.Web.UI.WebControls.BulletedList> Web server control that will be treated as a <xref:System.Web.UI.WebControls.WebParts.WebPart> control at run time because the <xref:System.Web.UI.WebControls.WebParts.WebPartManager> control will wrap it with a <xref:System.Web.UI.WebControls.WebParts.GenericWebPart> object. Note that in the code for the `Button1_Click` method, the available WebPartDescription objects for the <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in the catalog are retrieved using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then the description details are all written out to the page.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_125_3.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_125_3.aspx)]  \n  \n After you load the page in a browser, use the **Display Mode** drop-down list control and select **Catalog** to change the page to catalog display mode. In the catalog, you should see the two controls that are available to be added to the page. Click the **List WebPartDescription Information** button, and the code writes out the values of all available WebPartDescription objects to the page. This demonstrates that you can retrieve description details for <xref:System.Web.UI.WebControls.WebParts.WebPart> controls in a catalog without having to create instances of the controls themselves."
  syntax:
    content: public class WebPartDescription
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  id: '#ctor(System.Web.UI.WebControls.WebParts.WebPart)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: WebPartDescription(WebPart)
  nameWithType: WebPartDescription.WebPartDescription(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(WebPart)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicializa uma nova instância da classe quando um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> instância do controle está disponível."
  remarks: "O construtor WebPartDescription é usado para criar um novo <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>objeto com base em uma <xref:System.Web.UI.WebControls.WebParts.WebPart>controle.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription> Esse construtor simplesmente chama a sobrecarga, o <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29>construtor, obtendo valores de parâmetro obrigatório de propriedades sobre o `part` parâmetro.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.%23ctor%28System.String%2CSystem.String%2CSystem.String%2CSystem.String%29>"
  syntax:
    content: public WebPartDescription (System.Web.UI.WebControls.WebParts.WebPart part);
    parameters:
    - id: part
      type: System.Web.UI.WebControls.WebParts.WebPart
      description: "Um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controle cujas informações estão contidas em um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPartDescription&quot;> </xref>."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <xref:System.Web.UI.Control.ID*>propriedade <code> part </code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia (&quot;&quot;).</xref:System.Web.UI.Control.ID*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  id: '#ctor(System.String,System.String,System.String,System.String)'
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: WebPartDescription(String,String,String,String)
  nameWithType: WebPartDescription.WebPartDescription(String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(String,String,String,String)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Inicializa uma nova instância da classe usando várias cadeias de caracteres que contêm informações de descrição de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controle."
  remarks: "O construtor WebPartDescription é usado para criar uma nova instância do <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>quando um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle não está disponível.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription> Por exemplo, isso ocorre no caso de um <xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart>controlar quando importa um arquivo de descrição de um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.ImportCatalogPart> Obtém as informações necessárias para criar um <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>objeto diretamente do arquivo de descrição e um <xref:System.Web.UI.WebControls.WebParts.WebPart>instância não está presente.</xref:System.Web.UI.WebControls.WebParts.WebPart> </xref:System.Web.UI.WebControls.WebParts.WebPartDescription>"
  syntax:
    content: public WebPartDescription (string id, string title, string description, string imageUrl);
    parameters:
    - id: id
      type: System.String
      description: "O valor a ser atribuído a <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID*>.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.ID*>"
    - id: title
      type: System.String
      description: "O valor a ser atribuído a <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title*>.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Title*>"
    - id: description
      type: System.String
      description: "O valor a ser atribuído a <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description*>.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.Description*>"
    - id: imageUrl
      type: System.String
      description: "O valor a ser atribuído a <xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*>.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*>"
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>id</code>ou <code>title</code> é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> ou uma cadeia de caracteres vazia (&quot;&quot;)."
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  id: CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém uma URL que contém o caminho para uma imagem usada como um ícone para um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controle."
  remarks: "A propriedade CatalogIconImageUrl corresponde diretamente para o <xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A?displayProperty=fullName>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPart.CatalogIconImageUrl%2A?displayProperty=fullName> Se essa propriedade for definida em um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle, em seguida, a propriedade no correspondente <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>objeto também tem um valor.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.WebPart>       A propriedade CatalogIconImageUrl se aplica somente quando uma página está em modo de exibição de catálogo e um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle está sendo exibido em um catálogo de controles.</xref:System.Web.UI.WebControls.WebParts.WebPart> Se o controle tiver um ícone com o valor da propriedade, o ícone é exibido no catálogo próximas ao controle."
  example:
  - "The following code example demonstrates programmatic use of the CatalogIconImageUrl property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the CatalogIconImageUrl property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1296_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1296_1.aspx)]"
  syntax:
    content: public string CatalogIconImageUrl { get; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém uma URL. o valor padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  id: Description
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: Description
  nameWithType: WebPartDescription.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém o texto de uma descrição para um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controle."
  remarks: "A propriedade Description corresponde diretamente para o <xref:System.Web.UI.WebControls.WebParts.Part.Description%2A?displayProperty=fullName>propriedade.</xref:System.Web.UI.WebControls.WebParts.Part.Description%2A?displayProperty=fullName> Se essa propriedade for definida em um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle, em seguida, a propriedade no correspondente <xref:System.Web.UI.WebControls.WebParts.WebPartDescription>objeto também tem um valor.</xref:System.Web.UI.WebControls.WebParts.WebPartDescription> </xref:System.Web.UI.WebControls.WebParts.WebPart>       A propriedade de descrição se aplica somente quando uma página está em modo de exibição de catálogo e um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle está sendo exibido em um catálogo de controles.</xref:System.Web.UI.WebControls.WebParts.WebPart> Se o controle tiver uma descrição atribuída a ele, a descrição aparece no catálogo como uma dica de ferramenta no controle."
  example:
  - "The following code example demonstrates programmatic use of the Description property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the Description property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_697_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_697_1.aspx)]"
  syntax:
    content: public string Description { get; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém a descrição de um <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controle; o padrão valor é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.Description*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  id: ID
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: ID
  nameWithType: WebPartDescription.ID
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém a ID do correspondente <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controle."
  remarks: "O valor da propriedade ID não pode ser `null`; ele sempre deve ter um valor. A propriedade ID corresponde diretamente para o <xref:System.Web.UI.Control.ID%2A?displayProperty=fullName>propriedade.</xref:System.Web.UI.Control.ID%2A?displayProperty=fullName>       A propriedade de ID se aplica somente quando uma página está em modo de exibição de catálogo e um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle está sendo exibido em um catálogo de controles.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates programmatic use of the ID property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the ID property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_441_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_441_1.aspx)]"
  syntax:
    content: public string ID { get; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém a ID do controle."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.ID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  id: Title
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  langs:
  - csharp
  name: Title
  nameWithType: WebPartDescription.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls.WebParts
  summary: "Obtém o texto do título do correspondente <xref href=&quot;System.Web.UI.WebControls.WebParts.WebPart&quot;> </xref> controle."
  remarks: "O valor da propriedade Title corresponde diretamente para o <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A?displayProperty=fullName>propriedade.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A?displayProperty=fullName> Qualquer correspondente <xref:System.Web.UI.WebControls.WebParts.WebPart>controle tem de seu <xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A>propriedade, que se tornará o valor da propriedade Title; caso contrário, o título é um valor calculado.</xref:System.Web.UI.WebControls.WebParts.WebPart.DisplayTitle%2A> </xref:System.Web.UI.WebControls.WebParts.WebPart>       A propriedade de título se aplica somente quando uma página está em modo de exibição de catálogo e um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle está sendo exibido em um catálogo de controles.</xref:System.Web.UI.WebControls.WebParts.WebPart> O título é atribuído a um <xref:System.Web.UI.WebControls.WebParts.WebPart>controle aparece ao lado de controle no catálogo.</xref:System.Web.UI.WebControls.WebParts.WebPart>"
  example:
  - "The following code example demonstrates programmatic use of the Title property. For the full code required to run this code example, see the Example section of the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> class overview topic.  \n  \n The following code in the `Button1_Click` method of a Web page demonstrates how to get the collection of <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects in a catalog using the <xref:System.Web.UI.WebControls.WebParts.CatalogPart.GetAvailableWebPartDescriptions%2A> method, and then to display the details of each <xref:System.Web.UI.WebControls.WebParts.WebPart> control in the catalog by looping through the <xref:System.Web.UI.WebControls.WebParts.WebPartDescription> objects. Note that the Title property value is retrieved in the following code.  \n  \n [!code-cs[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/csharp/p-system.web.ui.webcontr_732_1.aspx)]\n [!code-vb[WebParts_WebPartDescription_Overview#2](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_732_1.aspx)]"
  syntax:
    content: public string Title { get; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o título do controle correspondente. O valor padrão é uma cadeia de caracteres calculada fornecida pelo .NET Framework."
  overload: System.Web.UI.WebControls.WebParts.WebPartDescription.Title*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.Web.UI.WebControls.WebParts.WebPart)
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription(WebPart)
  nameWithType: WebPartDescription.WebPartDescription(WebPart)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(WebPart)
- uid: System.Web.UI.WebControls.WebParts.WebPart
  parent: System.Web.UI.WebControls.WebParts
  isExternal: false
  name: WebPart
  nameWithType: WebPart
  fullName: System.Web.UI.WebControls.WebParts.WebPart
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor(System.String,System.String,System.String,System.String)
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription(String,String,String,String)
  nameWithType: WebPartDescription.WebPartDescription(String,String,String,String)
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.WebPartDescription(String,String,String,String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Description
  nameWithType: WebPartDescription.Description
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Description
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: ID
  nameWithType: WebPartDescription.ID
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.ID
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Title
  nameWithType: WebPartDescription.Title
  fullName: System.Web.UI.WebControls.WebParts.WebPartDescription.Title
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.#ctor*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: WebPartDescription
  nameWithType: WebPartDescription.WebPartDescription
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.CatalogIconImageUrl*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: CatalogIconImageUrl
  nameWithType: WebPartDescription.CatalogIconImageUrl
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Description*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Description
  nameWithType: WebPartDescription.Description
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.ID*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: ID
  nameWithType: WebPartDescription.ID
- uid: System.Web.UI.WebControls.WebParts.WebPartDescription.Title*
  parent: System.Web.UI.WebControls.WebParts.WebPartDescription
  isExternal: false
  name: Title
  nameWithType: WebPartDescription.Title
