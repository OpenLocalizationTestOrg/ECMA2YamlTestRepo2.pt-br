### YamlMime:ManagedReference
items:
- uid: System.CodeDom.Compiler.ICodeGenerator
  id: ICodeGenerator
  children:
  - System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  - System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  - System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  - System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  - System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  langs:
  - csharp
  name: ICodeGenerator
  nameWithType: ICodeGenerator
  fullName: System.CodeDom.Compiler.ICodeGenerator
  type: Interface
  summary: "Define uma interface para a geração de código."
  remarks: "> [!NOTE]> Nas versões do .NET Framework 1.0 e 1.1, provedores de código consistem em implementações de <xref:System.CodeDom.Compiler.CodeDomProvider>, ICodeGenerator, <xref:System.CodeDom.Compiler.ICodeParser>e <xref:System.CodeDom.Compiler.ICodeCompiler>.</xref:System.CodeDom.Compiler.ICodeCompiler> </xref:System.CodeDom.Compiler.ICodeParser> </xref:System.CodeDom.Compiler.CodeDomProvider> No [!INCLUDE[dnprdnlong](~/add/includes/dnprdnlong-md.md)], o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>, <xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A>, e <xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A>métodos são obsoletos e os métodos de ICodeGenerator e <xref:System.CodeDom.Compiler.ICodeCompiler>diretamente disponíveis na <xref:System.CodeDom.Compiler.CodeDomProvider>classe</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.CodeDom.Compiler.ICodeCompiler> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateCompiler%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateParser%2A> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A> Você deve substituir esses métodos em sua implementação de provedor de código e não chama os métodos de base.       Os desenvolvedores de compiladores podem implementar essa interface para permitir que pessoas gerar código dinamicamente em um determinado idioma. Isso pode ser usado para uma variedade de propósitos, como criação de assistentes de geração de código, criando assemblies dinâmicos com conteúdo que pode ser depurado e para documentos de modelo com o código inserido, como o ASP.NET.       Uma implementação de ICodeGenerator normalmente é obtida por meio de uma chamada para o <xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>método de <xref:System.CodeDom.Compiler.CodeDomProvider>.</xref:System.CodeDom.Compiler.CodeDomProvider> </xref:System.CodeDom.Compiler.CodeDomProvider.CreateGenerator%2A>"
  syntax:
    content: public interface ICodeGenerator
  implements: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  id: CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: CreateEscapedIdentifier(String)
  nameWithType: ICodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Cria um identificador com caracteres de escape para o valor especificado."
  remarks: "CreateEscapedIdentifier testa se o identificador está em conflito com reservadas ou palavras-chave e nesse caso, retorna um nome equivalente com formatação de código de escape de idioma específico. Isso é conhecido como um identificador com caracteres de escape. O identificador com escape conterá o mesmo `value` , mas terá a formatação de código de escape adicionados para diferenciar o identificador da palavra-chave. Dois exemplos de implementação são precede o `value` com &quot;@&quot; ou colchetes a `value` com &quot;[&quot; e &quot;]&quot;."
  syntax:
    content: public string CreateEscapedIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "A cadeia de caracteres para criar um identificador com caracteres de escape."
    return:
      type: System.String
      description: "O identificador com caracteres de escape para o valor."
  overload: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  id: CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: CreateValidIdentifier(String)
  nameWithType: ICodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Cria um identificador válido para o valor especificado."
  remarks: "Testes de CreateValidIdentifier se o identificador está em conflito com reservado ou palavras-chave e retorna um identificador válido de nome que não está em conflito. O identificador retornado conterá o mesmo `value` , mas, se ele está em conflito com reservadas ou palavras-chave, terá a formatação de código de escape adicionados para diferenciar o identificador da palavra-chave. Normalmente, se o valor precisa de modificação, o valor será retornado precedida por um sublinhado &quot;_&quot;."
  syntax:
    content: public string CreateValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "A cadeia de caracteres para gerar um identificador válido."
    return:
      type: System.String
      description: "Um identificador válido para o valor especificado."
  overload: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gera código para a unidade de compilação especificada do modelo de objeto de documento de código (CodeDOM) e o envia para o gravador de texto especificado usando as opções especificadas."
  syntax:
    content: public void GenerateCodeFromCompileUnit (System.CodeDom.CodeCompileUnit e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeCompileUnit
      description: "Um <xref href=&quot;System.CodeDom.CodeCompileUnit&quot;> </xref> para gerar código para."
    - id: w
      type: System.IO.TextWriter
      description: "O <xref:System.IO.TextWriter>no código de saída para.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "Um <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> que indica as opções para usar para a geração de código."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gera código para a expressão de modelo de objeto de documento de código (CodeDOM) especificado e o envia para o gravador de texto especificado."
  syntax:
    content: public void GenerateCodeFromExpression (System.CodeDom.CodeExpression e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeExpression
      description: "Um <xref href=&quot;System.CodeDom.CodeExpression&quot;> </xref> que indica a expressão para gerar código para."
    - id: w
      type: System.IO.TextWriter
      description: "O <xref:System.IO.TextWriter>no código de saída para.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "Um <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> que indica as opções para usar para a geração de código."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gera código para o namespace do modelo de objeto de documento de código (CodeDOM) especificado e o envia para o gravador de texto especificado usando as opções especificadas."
  syntax:
    content: public void GenerateCodeFromNamespace (System.CodeDom.CodeNamespace e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeNamespace
      description: "Um <xref href=&quot;System.CodeDom.CodeNamespace&quot;> </xref> que indica o namespace para gerar código para."
    - id: w
      type: System.IO.TextWriter
      description: "O <xref:System.IO.TextWriter>no código de saída para.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "Um <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> que indica as opções para usar para a geração de código."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gera código para a instrução do modelo de objeto de documento de código (CodeDOM) e o envia para o gravador de texto especificado usando as opções especificadas."
  syntax:
    content: public void GenerateCodeFromStatement (System.CodeDom.CodeStatement e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeStatement
      description: "Um <xref href=&quot;System.CodeDom.CodeStatement&quot;> </xref> que contém os elementos de CodeDOM traduzir."
    - id: w
      type: System.IO.TextWriter
      description: "O <xref:System.IO.TextWriter>no código de saída para.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "Um <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> que indica as opções para usar para a geração de código."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  id: GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gera código para a declaração de tipo de modelo de objeto de documento de código (CodeDOM) especificado e o envia para o gravador de texto especificado usando as opções especificadas."
  syntax:
    content: public void GenerateCodeFromType (System.CodeDom.CodeTypeDeclaration e, System.IO.TextWriter w, System.CodeDom.Compiler.CodeGeneratorOptions o);
    parameters:
    - id: e
      type: System.CodeDom.CodeTypeDeclaration
      description: "Um <xref href=&quot;System.CodeDom.CodeTypeDeclaration&quot;> </xref> que indica o tipo para gerar código para."
    - id: w
      type: System.IO.TextWriter
      description: "O <xref:System.IO.TextWriter>no código de saída para.</xref:System.IO.TextWriter>"
    - id: o
      type: System.CodeDom.Compiler.CodeGeneratorOptions
      description: "Um <xref href=&quot;System.CodeDom.Compiler.CodeGeneratorOptions&quot;> </xref> que indica as opções para usar para a geração de código."
  overload: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  id: GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: GetTypeOutput(CodeTypeReference)
  nameWithType: ICodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém o tipo indicado pelo especificado <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref>."
  syntax:
    content: public string GetTypeOutput (System.CodeDom.CodeTypeReference type);
    parameters:
    - id: type
      type: System.CodeDom.CodeTypeReference
      description: "Um <xref href=&quot;System.CodeDom.CodeTypeReference&quot;> </xref> que indica o tipo de retorno."
    return:
      type: System.String
      description: "Uma representação de texto do tipo especificado para o idioma que deste gerador de código é projetado para gerar código. Por exemplo, no Visual Basic, passando o tipo System. Int32 retornará &quot;Integer&quot;."
  overload: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  id: IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: IsValidIdentifier(String)
  nameWithType: ICodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém um valor que indica se o valor especificado é um identificador válido para o idioma atual."
  remarks: "Este método testa se um identificador é válido. Ao implementar IsValidIdentifier em uma classe derivada, cria o método para testar o valor passado para ele e retornar `true` somente se o valor se ajusta as regras do idioma e não está em conflito com uma palavra-chave."
  syntax:
    content: public bool IsValidIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "O valor a ser testado por ser um identificador válido."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <code> value </code> parâmetro é um identificador válido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  id: Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: Supports(GeneratorSupport)
  nameWithType: ICodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Obtém um valor que indica se o gerador fornece suporte para os recursos de idioma representados pelo <xref href=&quot;System.CodeDom.Compiler.GeneratorSupport&quot;> </xref> objeto."
  remarks: "Esse método pode ser chamado com um número de <xref:System.CodeDom.Compiler.GeneratorSupport>sinalizadores de uma vez para testar para um conjunto de recursos ao ingressar em um conjunto de sinalizadores de recurso apropriado junto com um binário &quot;Ou&quot; operador (|).</xref:System.CodeDom.Compiler.GeneratorSupport>"
  syntax:
    content: public bool Supports (System.CodeDom.Compiler.GeneratorSupport supports);
    parameters:
    - id: supports
      type: System.CodeDom.Compiler.GeneratorSupport
      description: "Os recursos para o gerador de teste."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os recursos especificados forem compatíveis; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.CodeDom.Compiler.ICodeGenerator.Supports*
  exceptions: []
  platform:
  - net462
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  id: ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  langs:
  - csharp
  name: ValidateIdentifier(String)
  nameWithType: ICodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
  type: Method
  assemblies:
  - System
  namespace: System.CodeDom.Compiler
  summary: "Gera uma exceção se o valor especificado não é um identificador válido."
  remarks: "Em vez de retornar um valor, esse método lançará uma exceção se o identificador especificado não é válido de acordo com a implementação do método. Normalmente, a exceção é um <xref:System.ArgumentException>.</xref:System.ArgumentException> Esse método permite que um gerador de código que implementa este método para produzir uma mensagem de erro informativa com base no valor de um identificador inválido."
  syntax:
    content: public void ValidateIdentifier (string value);
    parameters:
    - id: value
      type: System.String
      description: "O identificador a ser validado."
  overload: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O identificador não é válido."
  platform:
  - net462
references:
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateEscapedIdentifier(String)
  nameWithType: ICodeGenerator.CreateEscapedIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateValidIdentifier(String)
  nameWithType: ICodeGenerator.CreateValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier(String)
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(System.CodeDom.CodeCompileUnit,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit(CodeCompileUnit,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeCompileUnit
  parent: System.CodeDom
  isExternal: false
  name: CodeCompileUnit
  nameWithType: CodeCompileUnit
  fullName: System.CodeDom.CodeCompileUnit
- uid: System.IO.TextWriter
  parent: System.IO
  isExternal: true
  name: TextWriter
  nameWithType: TextWriter
  fullName: System.IO.TextWriter
- uid: System.CodeDom.Compiler.CodeGeneratorOptions
  parent: System.CodeDom.Compiler
  isExternal: false
  name: CodeGeneratorOptions
  nameWithType: CodeGeneratorOptions
  fullName: System.CodeDom.Compiler.CodeGeneratorOptions
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(System.CodeDom.CodeExpression,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression(CodeExpression,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeExpression
  parent: System.CodeDom
  isExternal: false
  name: CodeExpression
  nameWithType: CodeExpression
  fullName: System.CodeDom.CodeExpression
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(System.CodeDom.CodeNamespace,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace(CodeNamespace,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeNamespace
  parent: System.CodeDom
  isExternal: false
  name: CodeNamespace
  nameWithType: CodeNamespace
  fullName: System.CodeDom.CodeNamespace
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(System.CodeDom.CodeStatement,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement(CodeStatement,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeStatement
  parent: System.CodeDom
  isExternal: false
  name: CodeStatement
  nameWithType: CodeStatement
  fullName: System.CodeDom.CodeStatement
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(System.CodeDom.CodeTypeDeclaration,System.IO.TextWriter,System.CodeDom.Compiler.CodeGeneratorOptions)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  nameWithType: ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType(CodeTypeDeclaration,TextWriter,CodeGeneratorOptions)
- uid: System.CodeDom.CodeTypeDeclaration
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeDeclaration
  nameWithType: CodeTypeDeclaration
  fullName: System.CodeDom.CodeTypeDeclaration
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(System.CodeDom.CodeTypeReference)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GetTypeOutput(CodeTypeReference)
  nameWithType: ICodeGenerator.GetTypeOutput(CodeTypeReference)
  fullName: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput(CodeTypeReference)
- uid: System.CodeDom.CodeTypeReference
  parent: System.CodeDom
  isExternal: false
  name: CodeTypeReference
  nameWithType: CodeTypeReference
  fullName: System.CodeDom.CodeTypeReference
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: IsValidIdentifier(String)
  nameWithType: ICodeGenerator.IsValidIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier(String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports(System.CodeDom.Compiler.GeneratorSupport)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: Supports(GeneratorSupport)
  nameWithType: ICodeGenerator.Supports(GeneratorSupport)
  fullName: System.CodeDom.Compiler.ICodeGenerator.Supports(GeneratorSupport)
- uid: System.CodeDom.Compiler.GeneratorSupport
  parent: System.CodeDom.Compiler
  isExternal: false
  name: GeneratorSupport
  nameWithType: GeneratorSupport
  fullName: System.CodeDom.Compiler.GeneratorSupport
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(System.String)
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: ValidateIdentifier(String)
  nameWithType: ICodeGenerator.ValidateIdentifier(String)
  fullName: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier(String)
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateEscapedIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateEscapedIdentifier
  nameWithType: ICodeGenerator.CreateEscapedIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.CreateValidIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: CreateValidIdentifier
  nameWithType: ICodeGenerator.CreateValidIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromCompileUnit*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromCompileUnit
  nameWithType: ICodeGenerator.GenerateCodeFromCompileUnit
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromExpression*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromExpression
  nameWithType: ICodeGenerator.GenerateCodeFromExpression
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromNamespace*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromNamespace
  nameWithType: ICodeGenerator.GenerateCodeFromNamespace
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromStatement*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromStatement
  nameWithType: ICodeGenerator.GenerateCodeFromStatement
- uid: System.CodeDom.Compiler.ICodeGenerator.GenerateCodeFromType*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GenerateCodeFromType
  nameWithType: ICodeGenerator.GenerateCodeFromType
- uid: System.CodeDom.Compiler.ICodeGenerator.GetTypeOutput*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: GetTypeOutput
  nameWithType: ICodeGenerator.GetTypeOutput
- uid: System.CodeDom.Compiler.ICodeGenerator.IsValidIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: IsValidIdentifier
  nameWithType: ICodeGenerator.IsValidIdentifier
- uid: System.CodeDom.Compiler.ICodeGenerator.Supports*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: Supports
  nameWithType: ICodeGenerator.Supports
- uid: System.CodeDom.Compiler.ICodeGenerator.ValidateIdentifier*
  parent: System.CodeDom.Compiler.ICodeGenerator
  isExternal: false
  name: ValidateIdentifier
  nameWithType: ICodeGenerator.ValidateIdentifier
