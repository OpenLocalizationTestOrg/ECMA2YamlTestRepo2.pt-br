### YamlMime:ManagedReference
items:
- uid: System.Printing.ValidationResult
  id: ValidationResult
  children:
  - System.Printing.ValidationResult.ConflictStatus
  - System.Printing.ValidationResult.Equals(System.Object)
  - System.Printing.ValidationResult.GetHashCode
  - System.Printing.ValidationResult.op_Equality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  - System.Printing.ValidationResult.op_Inequality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  - System.Printing.ValidationResult.ValidatedPrintTicket
  langs:
  - csharp
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Printing.ValidationResult
  type: Struct
  summary: "Representa um mesclada <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> que é garantido para ser viável, com um relatório de quaisquer configurações que foram alteradas para torná-lo viável."
  remarks: "Se o inicial <xref:System.Printing.PrintTicket>pede para imprimir a funcionalidade que não dão suporte a impressora, o driver de impressora resolve todos os conflitos para produzir um tíquete viável.</xref:System.Printing.PrintTicket>"
  example:
  - "The following example shows how to use the values of this type while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(false)]

      public struct ValidationResult
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Printing.ValidationResult.ConflictStatus
  id: ConflictStatus
  parent: System.Printing.ValidationResult
  langs:
  - csharp
  name: ConflictStatus
  nameWithType: ValidationResult.ConflictStatus
  fullName: System.Printing.ValidationResult.ConflictStatus
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Obtém um valor que indica se ocorreu um conflito entre a funcionalidade com suporte a impressora e a funcionalidade solicitada na fusão inicial de origem dois <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>s."
  syntax:
    content: public System.Printing.ConflictStatus ConflictStatus { get; }
    return:
      type: System.Printing.ConflictStatus
      description: "Uma da <xref href=&quot;System.Printing.ConflictStatus&quot;> </xref> valores que indica que nenhum conflito ocorreu ou que pelo menos um conflito ocorreu, mas foi resolvido. O padrão é <xref href=&quot;System.Printing.ConflictStatus&quot;> </xref>."
  overload: System.Printing.ValidationResult.ConflictStatus*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.ValidationResult.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Printing.ValidationResult
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ValidationResult.Equals(Object)
  fullName: System.Printing.ValidationResult.Equals(Object)
  type: Method
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Determina se o especificado <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> é igual à atual <xref href=&quot;System.Printing.ValidationResult&quot;> </xref>."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "O <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> objetos forem iguais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>também é retornado se o objeto passado não é um <xref href=&quot;System.Printing.ValidationResult&quot;> </xref>."
  overload: System.Printing.ValidationResult.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.ValidationResult.GetHashCode
  id: GetHashCode
  parent: System.Printing.ValidationResult
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ValidationResult.GetHashCode()
  fullName: System.Printing.ValidationResult.GetHashCode()
  type: Method
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Obtém o código hash associado com o <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> e sua <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> e fluxo de impressão."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código hash para a atual <xref href=&quot;System.Printing.ValidationResult&quot;> </xref>."
  overload: System.Printing.ValidationResult.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.ValidationResult.op_Equality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  id: op_Equality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  parent: System.Printing.ValidationResult
  langs:
  - csharp
  name: op_Equality(ValidationResult,ValidationResult)
  nameWithType: ValidationResult.op_Equality(ValidationResult,ValidationResult)
  fullName: System.Printing.ValidationResult.op_Equality(ValidationResult,ValidationResult)
  type: Operator
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Determina se o especificado <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> objetos são iguais."
  syntax:
    content: public static bool op_Equality (System.Printing.ValidationResult a, System.Printing.ValidationResult b);
    parameters:
    - id: a
      type: System.Printing.ValidationResult
      description: "A primeira <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> para comparar."
    - id: b
      type: System.Printing.ValidationResult
      description: "A segunda <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> objetos forem iguais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.ValidationResult.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.ValidationResult.op_Inequality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  id: op_Inequality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  parent: System.Printing.ValidationResult
  langs:
  - csharp
  name: op_Inequality(ValidationResult,ValidationResult)
  nameWithType: ValidationResult.op_Inequality(ValidationResult,ValidationResult)
  fullName: System.Printing.ValidationResult.op_Inequality(ValidationResult,ValidationResult)
  type: Operator
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Determina se o especificado <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> objetos não são iguais."
  syntax:
    content: public static bool op_Inequality (System.Printing.ValidationResult a, System.Printing.ValidationResult b);
    parameters:
    - id: a
      type: System.Printing.ValidationResult
      description: "A primeira <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> para comparar."
    - id: b
      type: System.Printing.ValidationResult
      description: "A segunda <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <xref href=&quot;System.Printing.ValidationResult&quot;> </xref> objetos não forem iguais; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.ValidationResult.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Printing.ValidationResult.ValidatedPrintTicket
  id: ValidatedPrintTicket
  parent: System.Printing.ValidationResult
  langs:
  - csharp
  name: ValidatedPrintTicket
  nameWithType: ValidationResult.ValidatedPrintTicket
  fullName: System.Printing.ValidationResult.ValidatedPrintTicket
  type: Property
  assemblies:
  - ReachFramework
  namespace: System.Printing
  summary: "Obtém um <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> objeto resultante a mesclagem de dois <xref href=&quot;System.Printing.PrintTicket&quot;> </xref> objetos, que podem ter sido ajustados para garantir sua viabilidade."
  remarks: ''
  example:
  - "The following example shows how to use this property while merging two print tickets.  \n  \n [!code-vb[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/visualbasic/management_printticket/printticket.vb#usingmergeandvalidate)]\n [!code-cs[PrintTicketManagment#UsingMergeAndValidate](~/add/codesnippet/csharp/Management_PrintTicket/printticket.cs#usingmergeandvalidate)]"
  syntax:
    content: public System.Printing.PrintTicket ValidatedPrintTicket { get; }
    return:
      type: System.Printing.PrintTicket
      description: "Um válido e viável <xref href=&quot;System.Printing.PrintTicket&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Printing.ValidationResult.ValidatedPrintTicket*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Printing.ValidationResult.ConflictStatus
  parent: System.Printing.ValidationResult
  isExternal: false
  name: ConflictStatus
  nameWithType: ValidationResult.ConflictStatus
  fullName: System.Printing.ValidationResult.ConflictStatus
- uid: System.Printing.ConflictStatus
  parent: System.Printing
  isExternal: false
  name: ConflictStatus
  nameWithType: ConflictStatus
  fullName: System.Printing.ConflictStatus
- uid: System.Printing.ValidationResult.Equals(System.Object)
  parent: System.Printing.ValidationResult
  isExternal: false
  name: Equals(Object)
  nameWithType: ValidationResult.Equals(Object)
  fullName: System.Printing.ValidationResult.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Printing.ValidationResult.GetHashCode
  parent: System.Printing.ValidationResult
  isExternal: false
  name: GetHashCode()
  nameWithType: ValidationResult.GetHashCode()
  fullName: System.Printing.ValidationResult.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Printing.ValidationResult.op_Equality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  parent: System.Printing.ValidationResult
  isExternal: false
  name: op_Equality(ValidationResult,ValidationResult)
  nameWithType: ValidationResult.op_Equality(ValidationResult,ValidationResult)
  fullName: System.Printing.ValidationResult.op_Equality(ValidationResult,ValidationResult)
- uid: System.Printing.ValidationResult
  parent: System.Printing
  isExternal: false
  name: ValidationResult
  nameWithType: ValidationResult
  fullName: System.Printing.ValidationResult
- uid: System.Printing.ValidationResult.op_Inequality(System.Printing.ValidationResult,System.Printing.ValidationResult)
  parent: System.Printing.ValidationResult
  isExternal: false
  name: op_Inequality(ValidationResult,ValidationResult)
  nameWithType: ValidationResult.op_Inequality(ValidationResult,ValidationResult)
  fullName: System.Printing.ValidationResult.op_Inequality(ValidationResult,ValidationResult)
- uid: System.Printing.ValidationResult.ValidatedPrintTicket
  parent: System.Printing.ValidationResult
  isExternal: false
  name: ValidatedPrintTicket
  nameWithType: ValidationResult.ValidatedPrintTicket
  fullName: System.Printing.ValidationResult.ValidatedPrintTicket
- uid: System.Printing.PrintTicket
  parent: System.Printing
  isExternal: false
  name: PrintTicket
  nameWithType: PrintTicket
  fullName: System.Printing.PrintTicket
- uid: System.Printing.ValidationResult.ConflictStatus*
  parent: System.Printing.ValidationResult
  isExternal: false
  name: ConflictStatus
  nameWithType: ValidationResult.ConflictStatus
- uid: System.Printing.ValidationResult.Equals*
  parent: System.Printing.ValidationResult
  isExternal: false
  name: Equals
  nameWithType: ValidationResult.Equals
- uid: System.Printing.ValidationResult.GetHashCode*
  parent: System.Printing.ValidationResult
  isExternal: false
  name: GetHashCode
  nameWithType: ValidationResult.GetHashCode
- uid: System.Printing.ValidationResult.op_Equality*
  parent: System.Printing.ValidationResult
  isExternal: false
  name: op_Equality
  nameWithType: ValidationResult.op_Equality
- uid: System.Printing.ValidationResult.op_Inequality*
  parent: System.Printing.ValidationResult
  isExternal: false
  name: op_Inequality
  nameWithType: ValidationResult.op_Inequality
- uid: System.Printing.ValidationResult.ValidatedPrintTicket*
  parent: System.Printing.ValidationResult
  isExternal: false
  name: ValidatedPrintTicket
  nameWithType: ValidationResult.ValidatedPrintTicket
