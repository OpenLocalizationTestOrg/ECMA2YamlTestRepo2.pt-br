### YamlMime:ManagedReference
items:
- uid: System.Web.UI.WebControls.FormView
  id: FormView
  children:
  - System.Web.UI.WebControls.FormView.#ctor
  - System.Web.UI.WebControls.FormView.AllowPaging
  - System.Web.UI.WebControls.FormView.BackImageUrl
  - System.Web.UI.WebControls.FormView.BottomPagerRow
  - System.Web.UI.WebControls.FormView.Caption
  - System.Web.UI.WebControls.FormView.CaptionAlign
  - System.Web.UI.WebControls.FormView.CellPadding
  - System.Web.UI.WebControls.FormView.CellSpacing
  - System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)
  - System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  - System.Web.UI.WebControls.FormView.CreateControlStyle
  - System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments
  - System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  - System.Web.UI.WebControls.FormView.CreateTable
  - System.Web.UI.WebControls.FormView.CurrentMode
  - System.Web.UI.WebControls.FormView.DataBind
  - System.Web.UI.WebControls.FormView.DataItem
  - System.Web.UI.WebControls.FormView.DataItemCount
  - System.Web.UI.WebControls.FormView.DataItemIndex
  - System.Web.UI.WebControls.FormView.DataKey
  - System.Web.UI.WebControls.FormView.DataKeyNames
  - System.Web.UI.WebControls.FormView.DefaultMode
  - System.Web.UI.WebControls.FormView.DeleteItem
  - System.Web.UI.WebControls.FormView.DeleteMethod
  - System.Web.UI.WebControls.FormView.EditItemTemplate
  - System.Web.UI.WebControls.FormView.EditRowStyle
  - System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  - System.Web.UI.WebControls.FormView.EmptyDataTemplate
  - System.Web.UI.WebControls.FormView.EmptyDataText
  - System.Web.UI.WebControls.FormView.EnableModelValidation
  - System.Web.UI.WebControls.FormView.EnsureDataBound
  - System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  - System.Web.UI.WebControls.FormView.FooterRow
  - System.Web.UI.WebControls.FormView.FooterStyle
  - System.Web.UI.WebControls.FormView.FooterTemplate
  - System.Web.UI.WebControls.FormView.FooterText
  - System.Web.UI.WebControls.FormView.GridLines
  - System.Web.UI.WebControls.FormView.HeaderRow
  - System.Web.UI.WebControls.FormView.HeaderStyle
  - System.Web.UI.WebControls.FormView.HeaderTemplate
  - System.Web.UI.WebControls.FormView.HeaderText
  - System.Web.UI.WebControls.FormView.HorizontalAlign
  - System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  - System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)
  - System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)
  - System.Web.UI.WebControls.FormView.InsertItemTemplate
  - System.Web.UI.WebControls.FormView.InsertMethod
  - System.Web.UI.WebControls.FormView.InsertRowStyle
  - System.Web.UI.WebControls.FormView.IsBindableType(System.Type)
  - System.Web.UI.WebControls.FormView.ItemCommand
  - System.Web.UI.WebControls.FormView.ItemCreated
  - System.Web.UI.WebControls.FormView.ItemDeleted
  - System.Web.UI.WebControls.FormView.ItemDeleting
  - System.Web.UI.WebControls.FormView.ItemInserted
  - System.Web.UI.WebControls.FormView.ItemInserting
  - System.Web.UI.WebControls.FormView.ItemTemplate
  - System.Web.UI.WebControls.FormView.ItemUpdated
  - System.Web.UI.WebControls.FormView.ItemUpdating
  - System.Web.UI.WebControls.FormView.LoadControlState(System.Object)
  - System.Web.UI.WebControls.FormView.LoadViewState(System.Object)
  - System.Web.UI.WebControls.FormView.ModeChanged
  - System.Web.UI.WebControls.FormView.ModeChanging
  - System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName
  - System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  - System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  - System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  - System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)
  - System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  - System.Web.UI.WebControls.FormView.PageCount
  - System.Web.UI.WebControls.FormView.PageIndex
  - System.Web.UI.WebControls.FormView.PageIndexChanged
  - System.Web.UI.WebControls.FormView.PageIndexChanging
  - System.Web.UI.WebControls.FormView.PagerSettings
  - System.Web.UI.WebControls.FormView.PagerStyle
  - System.Web.UI.WebControls.FormView.PagerTemplate
  - System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)
  - System.Web.UI.WebControls.FormView.PrepareControlHierarchy
  - System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.FormView.RenderOuterTable
  - System.Web.UI.WebControls.FormView.Row
  - System.Web.UI.WebControls.FormView.RowStyle
  - System.Web.UI.WebControls.FormView.SaveControlState
  - System.Web.UI.WebControls.FormView.SaveViewState
  - System.Web.UI.WebControls.FormView.SelectedValue
  - System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)
  - System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex
  - System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex
  - System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  - System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  - System.Web.UI.WebControls.FormView.TagKey
  - System.Web.UI.WebControls.FormView.TopPagerRow
  - System.Web.UI.WebControls.FormView.TrackViewState
  - System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)
  - System.Web.UI.WebControls.FormView.UpdateMethod
  langs:
  - csharp
  name: FormView
  nameWithType: FormView
  fullName: System.Web.UI.WebControls.FormView
  type: Class
  summary: "Exibe os valores de um único registro de uma fonte de dados usando modelos definidos pelo usuário. O controle FormView permite editar, excluir e inserir registros."
  remarks: "Neste tópico:- [Introdução](#introduction)      -   [modelos](#templates)      -   [associando a dados](#binding_to_data)      -   [operações de dados](#data_operations)      -   [Personalizando a Interface do usuário](#customizing_the_user_interface)      -   [eventos](#events)      -   [acessibilidade](#accessibility)      -   [aplicar estilos de CSS](#applying_styles)      -   [sintaxe declarativa](#declarative_syntax) <a name=&quot;introduction&quot;> </a> # # controle FormView a introdução é usado para exibir um registro individual de uma fonte de dados.       Ele é semelhante ao <xref:System.Web.UI.WebControls.DetailsView>controlar, exceto que ele exibe os modelos definidos pelo usuário em vez de campos de linha.</xref:System.Web.UI.WebControls.DetailsView> Criar seus próprios modelos fornece maior flexibilidade para controlar como os dados são exibidos. O controle FormView suporta os seguintes recursos: - a associação para controles de fonte de dados, como <xref:System.Web.UI.WebControls.SqlDataSource>e <xref:System.Web.UI.WebControls.ObjectDataSource>.</xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource>      -Recursos inserindo internos.      -Internas atualização e exclusão de recursos.      -Recursos de paginação internos.      -Acesso programático para o modelo de objeto de FormView dinamicamente definir propriedades, manipular eventos e assim por diante.      -Aparência personalizável através de modelos definidos pelo usuário, temas e estilos.      <a name=&quot;templates&quot;></a># # Controle de modelos de FormView para exibir o conteúdo, você precisa criar modelos para as diferentes partes do controle. A maioria dos modelos são opcionais. No entanto, você deve criar um modelo para o modo no qual o controle está configurado. Por exemplo, um controle de FormView que dá suporte à inserção de registros deve ter um modelo de item de inserção definido. A tabela a seguir lista os modelos diferentes que você pode criar.      | O tipo de modelo | Descrição |   |-------------------|-----------------|   | <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>| Define o conteúdo para a linha de dados quando o controle de FormView está no modo de edição.</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Este modelo geralmente contém controles de entrada e registram os botões de comando com a qual o usuário pode editar um existente. |   | <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>| Define o conteúdo da linha de dados vazios exibida quando o controle de FormView está vinculado a uma fonte de dados que não contém quaisquer registros.</xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Este modelo geralmente contém conteúdo para alertar o usuário que a fonte de dados não contém quaisquer registros. |   | <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>| Define o conteúdo da linha de rodapé.</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Este modelo geralmente contém qualquer conteúdo adicional que você deseja exibir na linha de rodapé. **Observação:** como alternativa, você pode simplesmente especificar texto a ser exibido na linha de rodapé, definindo a propriedade <xref:System.Web.UI.WebControls.FormView.FooterText%2A>. |   | <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>| Define o conteúdo para a linha de cabeçalho.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> Este modelo geralmente contém qualquer conteúdo adicional que você deseja exibir na linha de cabeçalho. **Observação:** como alternativa, você pode simplesmente especificar texto a ser exibido na linha de cabeçalho, definindo a propriedade <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>. |   | <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>| Define o conteúdo para a linha de dados quando o controle de FormView está no modo somente leitura.</xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> Este modelo geralmente contém conteúdo para exibir os valores de um registro existente. |   | <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>| Define o conteúdo para a linha de dados quando o controle de FormView está no modo de inserção.</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Este modelo geralmente contém controles de entrada e botões de comando com a qual o usuário pode adicionar um novo registro. |   | <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>| Define o conteúdo da linha de pager exibida quando o recurso de paginação está habilitado (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>estiver definida como `true`).</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> </xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A> Este modelo geralmente contém controles com o qual o usuário pode navegar para outro registro. **Observação:** o controle FormView tem uma interface de usuário de linha de pager internos (IU). Você precisa criar um modelo de paginação somente se você deseja criar sua própria linha pager personalizada. |       Para exibir o valor de um campo em um modelo de item, use uma expressão de associação de dados. Para obter mais informações sobre expressões de associação de dados, consulte [sintaxe de expressão de associação de dados](http://msdn.microsoft.com/en-us/676beb1d-ddfa-4153-bba8-3c86dcb7ceca).       Controles de entrada no modelo de item de inserção e editar o modelo de item podem ser associados aos campos de uma fonte de dados usando uma expressão de associação bidirecional. Isso permite que o controle FormView extrair os valores de controle de entrada para uma atualização ou operação de inserção automaticamente. Expressões de associação bidirecional também permitem que os controles de entrada em um modelo de item de edição para exibir automaticamente os valores do campo original. Para obter mais informações sobre expressões de associação bidirecional, consulte [para bancos de dados de associação](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742).      <a name=&quot;binding_to_data&quot;></a># # Associação ao controle FormView os dados pode ser associada a um controle de fonte de dados (como <xref:System.Web.UI.WebControls.SqlDataSource>, <xref:System.Web.UI.WebControls.ObjectDataSource>, ou <xref:System.Web.UI.WebControls.AccessDataSource>) ou para qualquer coleção de fonte de dados que implementa o <xref:System.Collections.IEnumerable?displayProperty=fullName>interface, como <xref:System.Data.DataView?displayProperty=fullName>, <xref:System.Collections.ArrayList?displayProperty=fullName>, <xref:System.Collections.Generic.List%601?displayProperty=fullName>, ou outros tipos de coleção.</xref:System.Collections.Generic.List%601?displayProperty=fullName> </xref:System.Collections.ArrayList?displayProperty=fullName> </xref:System.Data.DataView?displayProperty=fullName> </xref:System.Collections.IEnumerable?displayProperty=fullName> </xref:System.Web.UI.WebControls.AccessDataSource> </xref:System.Web.UI.WebControls.ObjectDataSource> </xref:System.Web.UI.WebControls.SqlDataSource> Use um dos seguintes métodos para associar o controle FormView para o tipo de fonte de dados apropriado: - para associar a um controle de fonte de dados, defina o <xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A>propriedade do controle FormView para o <xref:System.Web.UI.Control.ID%2A>valor do controle de fonte de dados.</xref:System.Web.UI.Control.ID%2A> </xref:System.Web.UI.WebControls.DataBoundControl.DataSourceID%2A> O controle FormView automaticamente associa ao controle de fonte de dados especificado e pode tirar proveito da fonte de dados com recursos de controle para executar a inserir, atualizar, excluir e funcionalidade de paginação. Esse é o método preferencial para associar aos dados.      -Para associar a uma fonte de dados que implementa o <xref:System.Collections.IEnumerable?displayProperty=fullName>interface, definir programaticamente o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A>propriedade de FormView controle à fonte de dados e, em seguida, chamar o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A>método.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBind%2A> </xref:System.Web.UI.WebControls.BaseDataBoundControl.DataSource%2A> </xref:System.Collections.IEnumerable?displayProperty=fullName> Ao usar esse método, o controle FormView não fornece inserindo internas, atualizar, excluir e funcionalidade de paginação. Você precisa fornecer essa funcionalidade por meio do evento apropriado.       Para obter mais informações sobre associação de dados, consulte [ASP.NET mapa de conteúdo de acesso de dados](http://msdn.microsoft.com/en-us/f9219396-a0fa-481f-894d-e3d9c67d64f2).      > [!NOTE] > Este controle pode ser usado para exibir a entrada do usuário, que pode incluir um script de cliente mal-intencionado. Verifique todas as informações que são enviadas de um cliente para o script executável, instruções SQL ou outro código antes de exibi-lo em seu aplicativo. Sempre que possível, é altamente recomendável que os valores são codificada em HTML antes de eles serem exibidos neste controle. O ASP.NET fornece um recurso de validação de solicitação de entrada para o bloco de script e HTML na entrada do usuário. Controles de servidor de validação também são fornecidos para avaliar a entrada do usuário. Para obter mais informações, consulte [Introdução aos controles de validação](http://msdn.microsoft.com/en-us/3c0e7514-cff2-4bed-936d-ee3f7b740190).      <a name=&quot;data_operations&quot;></a># # Operações de dados no controle FormView fornece muitos recursos internos que permitem ao usuário atualizar, excluir, inserir e percorrer os itens no controle. Quando o controle FormView é vinculado a um controle de fonte de dados, o controle FormView pode tirar proveito da fonte de dados de recursos do controle e fornecer atualizar, excluir, inserir e funcionalidade de paginação automática.      > [!NOTE] > FormView o controle pode oferecer suporte para atualização, exclusão, inserção e operações de paginação com outros tipos de fontes de dados; no entanto, você deve fornecer um manipulador de eventos apropriado com a implementação para essas operações.       Como o controle FormView usa modelos, não fornece uma maneira de gerar automaticamente os botões de comando para executar a atualização, exclusão ou operações de inserção. Você deve incluir manualmente esses botões de comando no modelo apropriado. O controle FormView reconhece determinados botões que têm suas `CommandName` propriedades definidas como valores específicos. A tabela a seguir lista os botões de comando que reconhece o controle FormView.      | Botão | Valor CommandName | Descrição |   |------------|-----------------------|-----------------|   | Cancelar | &quot; Cancelar &quot;| Usado na atualização ou inserção de operações para cancelar a operação e descartar os valores inseridos pelo usuário. O controle FormView, em seguida, retorna ao modo especificado pela propriedade <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>. |   | Excluir | &quot; Excluir &quot;| Usado em operações de exclusão para excluir o registro exibido da fonte de dados.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> Gera o <xref:System.Web.UI.WebControls.FormView.ItemDeleting>e eventos <xref:System.Web.UI.WebControls.FormView.ItemDeleted>. |   | Editar | &quot; Editar &quot;| Usado em operações de atualização para colocar o controle de FormView no modo de edição.</xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> O conteúdo especificado na propriedade <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>é exibido para a linha de dados. |   | Inserir | &quot; Inserir &quot;| Usado em operações de inserção para a tentativa de inserir um novo registro na fonte de dados usando os valores fornecidos pelo usuário.</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Gera o <xref:System.Web.UI.WebControls.FormView.ItemInserting>e eventos <xref:System.Web.UI.WebControls.FormView.ItemInserted>. |   | Novo | &quot; Novo &quot;| Usado em operações de inserção para colocar o controle de FormView no modo de inserção.</xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView.ItemInserting> O conteúdo especificado na propriedade <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>é exibido para a linha de dados. |   | Página | &quot; Página &quot;| Usada em operações de paginação para representar um botão na linha de pager que realiza a paginação.</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Para especificar a operação de paginação, defina a `CommandArgument` propriedade do botão &quot;Avançar&quot;, &quot;Anterior&quot;, &quot;First&quot;, &quot;Último&quot; ou o índice da página para o qual navegar. Gera o <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>e <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>eventos.</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> </xref:System.Web.UI.WebControls.FormView.PageIndexChanging> **Observação:** esse tipo de botão normalmente é usado apenas no modelo de pager. |   | Atualização | &quot; Atualização &quot;| Usado em operações de atualização para tentar atualizar o registro exibido na fonte de dados com os valores fornecidos pelo usuário. Gera o <xref:System.Web.UI.WebControls.FormView.ItemUpdating>e eventos <xref:System.Web.UI.WebControls.FormView.ItemUpdated>. |       Diferentemente de quando a exclusão de botão (que exclui o registro exibido imediatamente), quando o botão de edição ou novo é clicado, o FormView controle entra em Editar ou modo de inserção, respectivamente.</xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView.ItemUpdating> No modo de edição, o conteúdo dentro do <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>propriedade é exibida para o item de dados atual.</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Normalmente, o modelo de item de edição é definido, de modo que o botão de edição é substituído por uma atualização e um botão de cancelamento. Controles que são apropriados para o tipo de dados do campo de entrada (como um <xref:System.Web.UI.WebControls.TextBox>ou um <xref:System.Web.UI.WebControls.CheckBox>controle) também geralmente são exibidos com um valor de campo para o usuário modifique.</xref:System.Web.UI.WebControls.CheckBox> </xref:System.Web.UI.WebControls.TextBox> Clique no botão de atualização atualiza o registro na fonte de dados, ao clicar no botão Cancelar abandona quaisquer alterações.       Da mesma forma, o conteúdo de <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>propriedade é exibida para o item de dados quando o controle está no modo de inserção.</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> O modelo de item de inserção geralmente é definido para que o novo botão é substituído por uma inserção e um botão de cancelamento e controles de entrada vazios são exibidos para o usuário insira os valores para o novo registro. Clicar no botão de inserção insere o registro na fonte de dados, ao clicar no botão Cancelar abandona quaisquer alterações.       O controle FormView fornece um recurso de paginação, o que permite ao usuário navegar para outros registros na fonte de dados. Quando habilitada, uma linha de pager é exibida no controle FormView que contém os controles de navegação de página. Para habilitar a paginação, defina a <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>propriedade `true`.</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> Você pode personalizar a linha de pager, definindo as propriedades dos objetos contidos no <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>e o <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> </xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> Em vez de usar a linha de pager internos da interface do usuário, você pode criar sua própria interface do usuário usando o <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>      <a name=&quot;customizing_the_user_interface&quot;></a># # Personalizando a Interface do usuário você pode personalizar a aparência do controle FormView, definindo as propriedades de estilo para as diferentes partes do controle. A tabela a seguir lista as propriedades de estilo diferente.      | Propriedade de estilo | Descrição |   |--------------------|-----------------|   | <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>| As configurações de estilo para a linha de dados quando o controle de FormView está no modo de edição. |   | <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>| As configurações de estilo para a linha de dados vazios exibido no controle FormView quando a fonte de dados não contém quaisquer registros. |   | <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>| As configurações de estilo para a linha de rodapé do controle FormView. |   | <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>| As configurações de estilo para a linha de cabeçalho do controle FormView. |   | <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>| As configurações de estilo para a linha de dados quando o controle de FormView está no modo de inserção. |   | <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>| As configurações de estilo para a linha de pager exibido no controle FormView quando o recurso de paginação está habilitado. |   | <xref:System.Web.UI.WebControls.FormView.RowStyle%2A>| As configurações de estilo para a linha de dados quando o controle de FormView está no modo somente leitura. |      <a name=&quot;events&quot;> </a> # # Controle FormView a eventos fornece vários eventos que você pode programar.</xref:System.Web.UI.WebControls.FormView.RowStyle%2A> </xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> </xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A> </xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> </xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> </xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A> Isso permite que você execute uma rotina personalizada sempre que um evento ocorre. A tabela a seguir lista os eventos com suporte pelo controle FormView.      | Evento | Descrição |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.FormView.ItemCommand>| Ocorre quando um botão em um controle de FormView é clicado.</xref:System.Web.UI.WebControls.FormView.ItemCommand> Esse evento geralmente é usado para executar uma tarefa quando um botão é clicado no controle. |   | <xref:System.Web.UI.WebControls.FormView.ItemCreated>| Ocorre depois que todos os <xref:System.Web.UI.WebControls.FormViewRow>objetos são criados no controle FormView.</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.ItemCreated> Esse evento geralmente é usado para modificar os valores de um registro antes de ser exibido. |   | <xref:System.Web.UI.WebControls.FormView.ItemDeleted>| Ocorre quando um botão de exclusão (um botão com sua `CommandName` propriedade definida como &quot;Excluir&quot;) é clicado, mas após o controle FormView exclui o registro da fonte de dados.</xref:System.Web.UI.WebControls.FormView.ItemDeleted> Esse evento geralmente é usado para verificar os resultados da operação de exclusão. |   | <xref:System.Web.UI.WebControls.FormView.ItemDeleting>| Ocorre quando um botão de exclusão é clicado, mas antes do FormView controle excluir o registro da fonte de dados.</xref:System.Web.UI.WebControls.FormView.ItemDeleting> Esse evento geralmente é usado para cancelar a operação de exclusão. |   | <xref:System.Web.UI.WebControls.FormView.ItemInserted>| Ocorre quando um botão de inserção (um botão com sua `CommandName` propriedade definida como &quot;Insert&quot;) é clicado, mas após o controle FormView insere o registro.</xref:System.Web.UI.WebControls.FormView.ItemInserted> Esse evento geralmente é usado para verificar os resultados da operação de inserção. |   | <xref:System.Web.UI.WebControls.FormView.ItemInserting>| Ocorre quando um botão de inserção é clicado, mas antes do FormView controle inserir o registro.</xref:System.Web.UI.WebControls.FormView.ItemInserting> Esse evento geralmente é usado para cancelar a operação de inserção. |   | <xref:System.Web.UI.WebControls.FormView.ItemUpdated>| Ocorre quando um botão de atualização (um botão com sua `CommandName` propriedade definida como &quot;Update&quot;) é clicado, mas após o controle FormView atualiza a linha.</xref:System.Web.UI.WebControls.FormView.ItemUpdated> Esse evento geralmente é usado para verificar os resultados da operação de atualização. |   | <xref:System.Web.UI.WebControls.FormView.ItemUpdating>| Ocorre quando um botão de atualização é clicado, mas antes do FormView controle atualiza o registro.</xref:System.Web.UI.WebControls.FormView.ItemUpdating> Esse evento geralmente é usado para cancelar a operação de atualização. |   | <xref:System.Web.UI.WebControls.FormView.ModeChanged>| Ocorre após o controle FormView altera modos (para edição, inserção ou modo somente leitura).</xref:System.Web.UI.WebControls.FormView.ModeChanged> Esse evento geralmente é usado para executar uma tarefa quando o controle FormView altera os modos. |   | <xref:System.Web.UI.WebControls.FormView.ModeChanging>| Ocorre antes do controle FormView altera modos (para edição, inserção ou modo somente leitura).</xref:System.Web.UI.WebControls.FormView.ModeChanging> Esse evento geralmente é usado para cancelar uma alteração de modo. |   | <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>| Ocorre quando um dos botões de paginação é clicado, mas após o controle FormView lida com a operação de paginação.</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Esse evento é geralmente usado quando você precisa executar uma tarefa depois que o usuário navega para um registro diferente no controle. |   | <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>| Ocorre quando um dos botões de paginação é clicado, mas antes do FormView controle manipula a operação de paginação.</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> Esse evento geralmente é usado para cancelar a operação de paginação. |      <a name=&quot;accessibility&quot;> </a> # # Acessibilidade para obter informações sobre como configurar este controle para que ele gera marcação que está de acordo com os padrões de acessibilidade, consulte [acessibilidade no Visual Studio e ASP.NET](~/add/includes/ajax-current-ext-md.md) e [controles ASP.NET e acessibilidade](~/add/includes/ajax-current-ext-md.md).      <a name=&quot;applying_styles&quot;></a># # Aplicar controle FormView o de estilos de CSS permite que você especifique regras de estilo CSS na marcação. Se você usar modelos para personalizar a aparência do controle FormView, você pode especificar os estilos CSS na marcação nos modelos. Nesse caso, nenhuma tabela externa adicional é necessária. Você pode impedir que a tabela está sendo processado, definindo o <xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A>propriedade `false`.</xref:System.Web.UI.WebControls.FormView.RenderOuterTable%2A>      <a name=&quot;declarative_syntax&quot;></a># # Sintaxe de declarativa```   <asp:FormView       AccessKey=&quot;string&quot;       AllowPaging=&quot;True|False&quot;       BackColor=&quot;color name|#dddddd&quot;       BackImageUrl=&quot;uri&quot;       BorderColor=&quot;color name|#dddddd&quot;       BorderStyle=&quot;NotSet|None|Dotted|Dashed|Solid|Double|Groove|Ridge|           Inset|Outset&quot;       BorderWidth=&quot;size&quot;       Caption=&quot;string&quot;       CaptionAlign=&quot;NotSet|Top|Bottom|Left|Right&quot;       CellPadding=&quot;integer&quot;       CellSpacing=&quot;integer&quot;       CssClass=&quot;string&quot;       DataKeyNames=&quot;string&quot;       DataMember=&quot;string&quot;       DataSource=&quot;string&quot;       DataSourceID=&quot;string&quot;       DefaultMode=&quot;ReadOnly|Edit|Insert&quot;       EmptyDataText=&quot;string&quot;       Enabled=&quot;True|False&quot;       EnableTheming=&quot;True|False&quot;       EnableViewState=&quot;True|False&quot;       Font-Bold=&quot;True|False&quot;       Font-Italic=&quot;True|False&quot;       Font-Names=&quot;string&quot;       Font-Overline=&quot;True|False&quot;       Font-Size=&quot;string|Smaller|Larger|XX-Small|X-Small|Small|Medium|           Large|X-Large|XX-Large&quot;       Font-Strikeout=&quot;True|False&quot;       Font-Underline=&quot;True|False&quot;       FooterText=&quot;string&quot;       ForeColor=&quot;color name|#dddddd&quot;       GridLines=&quot;None|Horizontal|Vertical|Both&quot;       HeaderText=&quot;string&quot;       Height=&quot;size&quot;       HorizontalAlign=&quot;NotSet|Left|Center|Right|Justify&quot;       ID=&quot;string&quot;       OnDataBinding=&quot;DataBinding event handler&quot;       OnDataBound=&quot;DataBound event handler&quot;       OnDisposed=&quot;Disposed event handler&quot;       OnInit=&quot;Init event handler&quot;       OnItemCommand=&quot;ItemCommand event handler&quot;       OnItemCreated=&quot;ItemCreated event handler&quot;       OnItemDeleted=&quot;ItemDeleted event handler&quot;       OnItemDeleting=&quot;ItemDeleting event handler&quot;       OnItemInserted=&quot;ItemInserted event handler&quot;       OnItemInserting=&quot;ItemInserting event handler&quot;       OnItemUpdated=&quot;ItemUpdated event handler&quot;       OnItemUpdating=&quot;ItemUpdating event handler&quot;       OnLoad=&quot;Load event handler&quot;       OnModeChanged=&quot;ModeChanged event handler&quot;       OnModeChanging=&quot;ModeChanging event handler&quot;       OnPageIndexChanged=&quot;PageIndexChanged event handler&quot;       OnPageIndexChanging=&quot;PageIndexChanging event handler&quot;       OnPreRender=&quot;PreRender event handler&quot;       OnUnload=&quot;Unload event handler&quot;       PageIndex=&quot;integer&quot;       PagerSettings-FirstPageImageUrl=&quot;uri&quot;       PagerSettings-FirstPageText=&quot;string&quot;       PagerSettings-LastPageImageUrl=&quot;uri&quot;       PagerSettings-LastPageText=&quot;string&quot;       PagerSettings-Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|           NumericFirstLast&quot;       PagerSettings-NextPageImageUrl=&quot;uri&quot;       PagerSettings-NextPageText=&quot;string&quot;       PagerSettings-PageButtonCount=&quot;integer&quot;       PagerSettings-Position=&quot;Bottom|Top|TopAndBottom&quot;       PagerSettings-PreviousPageImageUrl=&quot;uri&quot;       PagerSettings-PreviousPageText=&quot;string&quot;       PagerSettings-Visible=&quot;True|False&quot;       RenderTable=&quot;True|False&quot;       runat=&quot;server&quot;       SkinID=&quot;string&quot;       Style=&quot;string&quot;       TabIndex=&quot;integer&quot;       ToolTip=&quot;string&quot;       Visible=&quot;True|False&quot;       Width=&quot;size&quot;   >           <EditItemTemplate>               <!-- child controls -->           </EditItemTemplate>           <EditRowStyle />           <EmptyDataRowStyle />           <EmptyDataTemplate>               <!-- child controls -->           </EmptyDataTemplate>           <FooterStyle />           <FooterTemplate>               <!-- child controls -->           </FooterTemplate>           <HeaderStyle />           <HeaderTemplate>               <!-- child controls -->           </HeaderTemplate>           <InsertItemTemplate>               <!-- child controls -->           </InsertItemTemplate>           <InsertRowStyle />           <ItemTemplate>               <!-- child controls -->           </ItemTemplate>           <PagerSettings               FirstPageImageUrl=&quot;uri&quot;               FirstPageText=&quot;string&quot;               LastPageImageUrl=&quot;uri&quot;               LastPageText=&quot;string&quot;               Mode=&quot;NextPrevious|Numeric|NextPreviousFirstLast|                   NumericFirstLast&quot;               NextPageImageUrl=&quot;uri&quot;               NextPageText=&quot;string&quot;               OnPropertyChanged=&quot;PropertyChanged event handler&quot;               PageButtonCount=&quot;integer&quot;               Position=&quot;Bottom|Top|TopAndBottom&quot;               PreviousPageImageUrl=&quot;uri&quot;               PreviousPageText=&quot;string&quot;               Visible=&quot;True|False&quot;           />           <PagerStyle />           <PagerTemplate>               <!-- child controls -->           </PagerTemplate>           <RowStyle />   </asp:FormView>   ```"
  example:
  - "The following example demonstrates how to use a FormView control to display the values from a <xref:System.Web.UI.WebControls.SqlDataSource> control.  \n  \n [!code-vb[FormViewSimple#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_276_1.aspx)]\n [!code-cs[FormViewSimple#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_276_1.aspx)]  \n  \n The following example demonstrates how to use a FormView control to edit existing records.  \n  \n> [!IMPORTANT]\n>  The control in this example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormView#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_276_2.aspx)]\n [!code-cs[FormView#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_276_2.aspx)]  \n  \n The following example demonstrates how to use a FormView control to insert new records.  \n  \n> [!IMPORTANT]\n>  The control in this example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](../Topic/Script%20Exploits%20Overview.md).  \n  \n [!code-vb[FormViewInsertItemTemplate#1](~/add/codesnippet/visualbasic/t-system.web.ui.webcontr_276_3.aspx)]\n [!code-cs[FormViewInsertItemTemplate#1](~/add/codesnippet/csharp/t-system.web.ui.webcontr_276_3.aspx)]"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("PageIndexChanging")]

      [System.ComponentModel.Designer("System.Web.UI.Design.WebControls.FormViewDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.Web.UI.ControlValueProperty("SelectedValue")]

      [System.Web.UI.DataKeyProperty("DataKey")]

      [System.Web.UI.SupportsEventValidation]

      public class FormView : System.Web.UI.WebControls.CompositeDataBoundControl, System.Web.UI.IDataItemContainer, System.Web.UI.IPostBackEventHandler, System.Web.UI.WebControls.IDataBoundItemControl, System.Web.UI.WebControls.IPostBackContainer
  inheritance:
  - System.Object
  - System.Web.UI.Control
  - System.Web.UI.WebControls.WebControl
  - System.Web.UI.WebControls.BaseDataBoundControl
  - System.Web.UI.WebControls.DataBoundControl
  - System.Web.UI.WebControls.CompositeDataBoundControl
  implements:
  - System.Web.UI.IDataItemContainer
  - System.Web.UI.IPostBackEventHandler
  - System.Web.UI.WebControls.IDataBoundItemControl
  - System.Web.UI.WebControls.IPostBackContainer
  inheritedMembers:
  - System.Web.UI.Control.Adapter
  - System.Web.UI.Control.AddedControl(System.Web.UI.Control,System.Int32)
  - System.Web.UI.Control.AddParsedSubObject(System.Object)
  - System.Web.UI.Control.ApplyStyleSheetSkin(System.Web.UI.Page)
  - System.Web.UI.Control.AppRelativeTemplateSourceDirectory
  - System.Web.UI.Control.BeginRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.BindingContainer
  - System.Web.UI.Control.BuildProfileTree(System.String,System.Boolean)
  - System.Web.UI.Control.ChildControlsCreated
  - System.Web.UI.Control.ClearCachedClientID
  - System.Web.UI.Control.ClearChildControlState
  - System.Web.UI.Control.ClearChildState
  - System.Web.UI.Control.ClearChildViewState
  - System.Web.UI.Control.ClearEffectiveClientIDMode
  - System.Web.UI.Control.ClientID
  - System.Web.UI.Control.ClientIDMode
  - System.Web.UI.Control.ClientIDSeparator
  - System.Web.UI.Control.Context
  - System.Web.UI.Control.CreateControlCollection
  - System.Web.UI.Control.DataBind(System.Boolean)
  - System.Web.UI.Control.DataBindChildren
  - System.Web.UI.Control.DataBinding
  - System.Web.UI.Control.DataItemContainer
  - System.Web.UI.Control.DataKeysContainer
  - System.Web.UI.Control.DesignMode
  - System.Web.UI.Control.Dispose
  - System.Web.UI.Control.Disposed
  - System.Web.UI.Control.EnableViewState
  - System.Web.UI.Control.EndRenderTracing(System.IO.TextWriter,System.Object)
  - System.Web.UI.Control.EnsureChildControls
  - System.Web.UI.Control.EnsureID
  - System.Web.UI.Control.Events
  - System.Web.UI.Control.FindControl(System.String)
  - System.Web.UI.Control.FindControl(System.String,System.Int32)
  - System.Web.UI.Control.Focus
  - System.Web.UI.Control.GetDesignModeState
  - System.Web.UI.Control.GetRouteUrl(System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Object)
  - System.Web.UI.Control.GetRouteUrl(System.String,System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetRouteUrl(System.Web.Routing.RouteValueDictionary)
  - System.Web.UI.Control.GetUniqueIDRelativeTo(System.Web.UI.Control)
  - System.Web.UI.Control.HasChildViewState
  - System.Web.UI.Control.HasControls
  - System.Web.UI.Control.HasEvents
  - System.Web.UI.Control.ID
  - System.Web.UI.Control.IdSeparator
  - System.Web.UI.Control.Init
  - System.Web.UI.Control.IsChildControlStateCleared
  - System.Web.UI.Control.IsLiteralContent
  - System.Web.UI.Control.IsTrackingViewState
  - System.Web.UI.Control.IsViewStateEnabled
  - System.Web.UI.Control.Load
  - System.Web.UI.Control.LoadViewStateByID
  - System.Web.UI.Control.MapPathSecure(System.String)
  - System.Web.UI.Control.NamingContainer
  - System.Web.UI.Control.OnDataBinding(System.EventArgs)
  - System.Web.UI.Control.OnUnload(System.EventArgs)
  - System.Web.UI.Control.OpenFile(System.String)
  - System.Web.UI.Control.Page
  - System.Web.UI.Control.Parent
  - System.Web.UI.Control.PreRender
  - System.Web.UI.Control.RaiseBubbleEvent(System.Object,System.EventArgs)
  - System.Web.UI.Control.RemovedControl(System.Web.UI.Control)
  - System.Web.UI.Control.RenderChildren(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.Control.RenderControl(System.Web.UI.HtmlTextWriter,System.Web.UI.Adapters.ControlAdapter)
  - System.Web.UI.Control.RenderingCompatibility
  - System.Web.UI.Control.ResolveAdapter
  - System.Web.UI.Control.ResolveClientUrl(System.String)
  - System.Web.UI.Control.ResolveUrl(System.String)
  - System.Web.UI.Control.SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.SetRenderMethodDelegate(System.Web.UI.RenderMethod)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object)
  - System.Web.UI.Control.SetTraceData(System.Object,System.Object,System.Object)
  - System.Web.UI.Control.Site
  - System.Web.UI.Control.System#Web#UI#IControlBuilderAccessor#ControlBuilder
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#GetDesignModeState
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetDesignModeState(System.Collections.IDictionary)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#SetOwnerControl(System.Web.UI.Control)
  - System.Web.UI.Control.System#Web#UI#IControlDesignerAccessor#UserData
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#DataBindings
  - System.Web.UI.Control.System#Web#UI#IDataBindingsAccessor#HasDataBindings
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#Expressions
  - System.Web.UI.Control.System#Web#UI#IExpressionsAccessor#HasExpressions
  - System.Web.UI.Control.System#Web#UI#IParserAccessor#AddParsedSubObject(System.Object)
  - System.Web.UI.Control.TemplateControl
  - System.Web.UI.Control.TemplateSourceDirectory
  - System.Web.UI.Control.UniqueID
  - System.Web.UI.Control.Unload
  - System.Web.UI.Control.ValidateRequestMode
  - System.Web.UI.Control.ViewState
  - System.Web.UI.Control.ViewStateIgnoresCase
  - System.Web.UI.Control.ViewStateMode
  - System.Web.UI.Control.Visible
  - System.Web.UI.WebControls.BaseDataBoundControl.ConfirmInitState
  - System.Web.UI.WebControls.BaseDataBoundControl.DataBound
  - System.Web.UI.WebControls.BaseDataBoundControl.DataSource
  - System.Web.UI.WebControls.BaseDataBoundControl.Initialized
  - System.Web.UI.WebControls.BaseDataBoundControl.IsBoundUsingDataSourceID
  - System.Web.UI.WebControls.BaseDataBoundControl.IsDataBindingAutomatic
  - System.Web.UI.WebControls.BaseDataBoundControl.OnDataBound(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender(System.EventArgs)
  - System.Web.UI.WebControls.BaseDataBoundControl.RequiresDataBinding
  - System.Web.UI.WebControls.BaseDataBoundControl.SupportsDisabledAttribute
  - System.Web.UI.WebControls.CompositeDataBoundControl.Controls
  - System.Web.UI.WebControls.CompositeDataBoundControl.CreateChildControls
  - System.Web.UI.WebControls.CompositeDataBoundControl.IsUsingModelBinders
  - System.Web.UI.WebControls.DataBoundControl.CallingDataMethods
  - System.Web.UI.WebControls.DataBoundControl.CreatingModelDataSource
  - System.Web.UI.WebControls.DataBoundControl.DataMember
  - System.Web.UI.WebControls.DataBoundControl.DataSourceID
  - System.Web.UI.WebControls.DataBoundControl.DataSourceObject
  - System.Web.UI.WebControls.DataBoundControl.GetData
  - System.Web.UI.WebControls.DataBoundControl.GetDataSource
  - System.Web.UI.WebControls.DataBoundControl.ItemType
  - System.Web.UI.WebControls.DataBoundControl.MarkAsDataBound
  - System.Web.UI.WebControls.DataBoundControl.OnCreatingModelDataSource(System.Web.UI.WebControls.CreatingModelDataSourceEventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnDataPropertyChanged
  - System.Web.UI.WebControls.DataBoundControl.OnDataSourceViewChanged(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnLoad(System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.OnPagePreLoad(System.Object,System.EventArgs)
  - System.Web.UI.WebControls.DataBoundControl.PerformSelect
  - System.Web.UI.WebControls.DataBoundControl.SelectArguments
  - System.Web.UI.WebControls.DataBoundControl.SelectMethod
  - System.Web.UI.WebControls.DataBoundControl.ValidateDataSource(System.Object)
  - System.Web.UI.WebControls.WebControl.AccessKey
  - System.Web.UI.WebControls.WebControl.AddAttributesToRender(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.ApplyStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.Attributes
  - System.Web.UI.WebControls.WebControl.BackColor
  - System.Web.UI.WebControls.WebControl.BorderColor
  - System.Web.UI.WebControls.WebControl.BorderStyle
  - System.Web.UI.WebControls.WebControl.BorderWidth
  - System.Web.UI.WebControls.WebControl.ControlStyle
  - System.Web.UI.WebControls.WebControl.ControlStyleCreated
  - System.Web.UI.WebControls.WebControl.CopyBaseAttributes(System.Web.UI.WebControls.WebControl)
  - System.Web.UI.WebControls.WebControl.CssClass
  - System.Web.UI.WebControls.WebControl.DisabledCssClass
  - System.Web.UI.WebControls.WebControl.Enabled
  - System.Web.UI.WebControls.WebControl.EnableTheming
  - System.Web.UI.WebControls.WebControl.Font
  - System.Web.UI.WebControls.WebControl.ForeColor
  - System.Web.UI.WebControls.WebControl.HasAttributes
  - System.Web.UI.WebControls.WebControl.Height
  - System.Web.UI.WebControls.WebControl.IsEnabled
  - System.Web.UI.WebControls.WebControl.MergeStyle(System.Web.UI.WebControls.Style)
  - System.Web.UI.WebControls.WebControl.RenderBeginTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderContents(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.RenderEndTag(System.Web.UI.HtmlTextWriter)
  - System.Web.UI.WebControls.WebControl.SkinID
  - System.Web.UI.WebControls.WebControl.Style
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#GetAttribute(System.String)
  - System.Web.UI.WebControls.WebControl.System#Web#UI#IAttributeAccessor#SetAttribute(System.String,System.String)
  - System.Web.UI.WebControls.WebControl.TabIndex
  - System.Web.UI.WebControls.WebControl.TagName
  - System.Web.UI.WebControls.WebControl.ToolTip
  - System.Web.UI.WebControls.WebControl.Width
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.#ctor
  id: '#ctor'
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FormView()
  nameWithType: FormView.FormView()
  fullName: System.Web.UI.WebControls.FormView.FormView()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> classe."
  remarks: "Use este construtor para inicializar uma nova instância de <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView> Para adicionar dinamicamente um <xref:System.Web.UI.WebControls.FormView>controle a uma página, crie um novo <xref:System.Web.UI.WebControls.FormView>objeto, defina suas propriedades e, em seguida, adicioná-lo à <xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName>coleção de um controle de contêiner, como <xref:System.Web.UI.WebControls.PlaceHolder>.</xref:System.Web.UI.WebControls.PlaceHolder> </xref:System.Web.UI.Control.Controls%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to dynamically add a <xref:System.Web.UI.WebControls.FormView> control to a page.  \n  \n [!code-vb[FormViewCtor#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_130_1.aspx)]\n [!code-cs[FormViewCtor#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_130_1.aspx)]"
  syntax:
    content: public FormView ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.AllowPaging
  id: AllowPaging
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: AllowPaging
  nameWithType: FormView.AllowPaging
  fullName: System.Web.UI.WebControls.FormView.AllowPaging
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o recurso de paginação está habilitado."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controle tem recursos internos de paginação, o que permite que um usuário navegar para um registro diferente na fonte de dados.</xref:System.Web.UI.WebControls.FormView> O recurso de paginação pode ser usado com qualquer objeto de fonte de dados que oferece suporte a <xref:System.Collections.ICollection?displayProperty=fullName>interface ou uma fonte de dados que oferece suporte à capacidade de paginação.</xref:System.Collections.ICollection?displayProperty=fullName>       Para habilitar o recurso de paginação, defina a propriedade AllowPaging `true`. Você pode determinar o número total de itens na fonte de dados subjacente usando a <xref:System.Web.UI.WebControls.FormView.PageCount%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PageCount%2A> Para determinar o índice do item exibido no momento, use o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>       Quando a paginação estiver habilitada, uma linha adicional chamada de linha de pager é exibida automaticamente no <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> A linha de pager contém os controles de navegação de página e pode ser exibida na parte superior, inferior, ou tanto a parte superior e inferior do controle. A linha de pager tem pager internos quatro modos de exibição. A tabela a seguir descreve os quatro modos.      | Modo | Descrição |   |----------|-----------------|   | `PagerButton.NextPrevious`| Um conjunto de controles de paginação consiste em botões anterior e próximo. |   | `PagerButton.NextPreviousFirstLast`| Um conjunto de controles de paginação consiste em anteriores, em seguida, botões primeiro e último. |   | `PagerButton.Numeric`| Um conjunto de controles de paginação consiste em numeradas botões de link para acessar páginas diretamente. Este é o modo padrão. |   | `PagerButton.NumericFirstLast`| Um conjunto de controles de paginação consiste em botões numerados e primeiro e último link. |      > [!NOTE] > O <xref:System.Web.UI.WebControls.FormView>controle oculta automaticamente a linha de pager quando a fonte de dados contém menos de dois registros.</xref:System.Web.UI.WebControls.FormView>       Você pode controlar as configurações da linha de pager (como o modo de exibição pager, o número de links da página para exibir em uma hora e o rótulo de texto do controle de pager) usando o <xref:System.Web.UI.WebControls.FormView.PagerSettings%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PagerSettings%2A> Para controlar a aparência da linha pager (incluindo sua cor de plano de fundo e a cor da fonte), use o <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PagerStyle%2A> O <xref:System.Web.UI.WebControls.FormView>controle também permite que você defina um modelo personalizado para a linha de pager.</xref:System.Web.UI.WebControls.FormView> Para obter mais informações sobre como criar um modelo de linha de paginação personalizada, consulte <xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>.</xref:System.Web.UI.WebControls.FormView.PagerTemplate%2A>       O <xref:System.Web.UI.WebControls.FormView>controle fornece vários eventos que você pode usar para executar uma ação personalizada quando ocorre paginação.</xref:System.Web.UI.WebControls.FormView> A tabela a seguir lista os eventos disponíveis.      | Evento | Descrição |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>| Ocorre quando um dos botões de paginação é clicado, mas após o <xref:System.Web.UI.WebControls.FormView>controle manipula a operação de paginação.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Esse evento é geralmente usado quando você precisa executar uma tarefa depois que o usuário navega para um registro diferente no controle. |   | <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>| Ocorre quando um dos botões de paginação é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView>controle manipula a operação de paginação.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.PageIndexChanging> Esse evento geralmente é usado para cancelar a operação de paginação. |      > [!NOTE] > Esses eventos não são gerados quando você altera o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>propriedade programaticamente.</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>"
  example:
  - "The following example demonstrates how to use the AllowPaging property to enable the paging feature in a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-cs[FormViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_367_1.aspx)]\n [!code-vb[FormViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_367_1.aspx)]"
  syntax:
    content: public virtual bool AllowPaging { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para habilitar o recurso de paginação; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.AllowPaging*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.BackImageUrl
  id: BackImageUrl
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: BackImageUrl
  nameWithType: FormView.BackImageUrl
  fullName: System.Web.UI.WebControls.FormView.BackImageUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a URL para uma imagem a ser exibida no plano de fundo de um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Use a propriedade BackImageUrl para especificar a URL para uma imagem para exibir no plano de fundo de um <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > Se a imagem especificada é menor do que o <xref:System.Web.UI.WebControls.FormView>controle, a imagem é colocada lado a lado para preencher o plano de fundo.</xref:System.Web.UI.WebControls.FormView> Se a imagem for maior do que o controle, a imagem é recortada."
  example:
  - "The following example demonstrates how to use the BackImageUrl property to display a custom image in the background of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-cs[FormViewBackImageUrl#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_554_1.aspx)]\n [!code-vb[FormViewBackImageUrl#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_554_1.aspx)]"
  syntax:
    content: public virtual string BackImageUrl { get; set; }
    return:
      type: System.String
      description: "A URL para uma imagem para exibir no plano de fundo do <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.FormView.BackImageUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.BottomPagerRow
  id: BottomPagerRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: BottomPagerRow
  nameWithType: FormView.BottomPagerRow
  fullName: System.Web.UI.WebControls.FormView.BottomPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> objeto que representa a linha de pager exibida na parte inferior do <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Quando a paginação está habilitada (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>estiver definida como `true`), uma linha adicional chamada de linha de pager será exibida automaticamente o <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> A linha de pager contém controles que permitem ao usuário navegar para outros registros e podem ser exibidos na parte superior, inferior, ou tanto a parte superior e inferior do controle. Use a propriedade BottomPagerRow para acessar programaticamente o <xref:System.Web.UI.WebControls.FormViewRow>objeto que representa a linha pager inferior a <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewRow>      > [!NOTE] > BottomPagerRow a propriedade está disponível somente depois de <xref:System.Web.UI.WebControls.FormView>controle cria a linha de pager inferior no <xref:System.Web.UI.WebControls.FormView.ItemCreated>evento.</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       Essa propriedade normalmente é usada quando você precisa manipular programaticamente linha inferior pager, por exemplo, ao adicionar conteúdo personalizado. Qualquer modificação para a propriedade BottomPagerRow deve ser executada após o <xref:System.Web.UI.WebControls.FormViewRow>objeto que representa a linha de pager inferior foi criado; caso contrário, o <xref:System.Web.UI.WebControls.FormView>controle substitui quaisquer alterações.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewRow>"
  example:
  - "The following example demonstrates how to use the BottomPagerRow property to access the pager row displayed at the bottom of a <xref:System.Web.UI.WebControls.FormView> control. The pager row is then updated with additional content.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_102_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_102_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow BottomPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> objeto que representa a linha de pager inferior de um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.BottomPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.Caption
  id: Caption
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: Caption
  nameWithType: FormView.Caption
  fullName: System.Web.UI.WebControls.FormView.Caption
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto em um elemento de legenda HTML em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle. Esta propriedade é fornecida para tornar o controle mais acessível para usuários de dispositivos de tecnologia assistencial."
  remarks: "Use a propriedade de legenda para especificar o texto em um elemento de legenda HTML em um <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> O texto que você especificar fornece dispositivos de tecnologia assistencial com uma descrição da tabela que pode ser usada para tornar o controle mais acessíveis.       Suporte de acessibilidade adicionais para o <xref:System.Web.UI.WebControls.FormView>o controle é fornecido pelo <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A> </xref:System.Web.UI.WebControls.FormView> Use o <xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>propriedade para especificar o alinhamento do elemento HTML de legenda em uma <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.CaptionAlign%2A>       O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the Caption property to specify the text for the HTML caption element rendered in a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1078_1.aspx)]\n [!code-cs[FormViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1078_1.aspx)]"
  syntax:
    content: public virtual string Caption { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o texto em um elemento de legenda HTML em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle. O valor padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.UI.WebControls.FormView.Caption*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CaptionAlign
  id: CaptionAlign
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CaptionAlign
  nameWithType: FormView.CaptionAlign
  fullName: System.Web.UI.WebControls.FormView.CaptionAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a posição horizontal ou vertical de um elemento HTML de legenda em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle. Esta propriedade é fornecida para tornar o controle mais acessível para usuários de dispositivos de tecnologia assistencial."
  remarks: "Use a propriedade CaptionAlign para especificar a posição horizontal ou vertical de um elemento HTML de legenda em uma <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Esta propriedade é fornecida para tornar o controle mais acessível para usuários de dispositivos de tecnologia assistencial.       Essa propriedade é definida usando um do <xref:System.Web.UI.WebControls.TableCaptionAlign>valores de enumeração.</xref:System.Web.UI.WebControls.TableCaptionAlign> A tabela a seguir lista os valores possíveis.      | Valor | Descrição |   |-----------|-----------------|   | `TableCaptionAlign.Bottom`| O elemento de legenda é alinhado com a parte inferior da tabela. |   | `TableCaptionAlign.Left`| O elemento caption é alinhado à esquerda da tabela. |   | `TableCaptionAlign.NotSet`| Alinhamento do elemento de legenda não está definido. |   | `TableCaptionAlign.Right`| O elemento caption é alinhado à direita da tabela. |   | `TableCaptionAlign.Top`| O elemento de legenda é alinhado com a parte superior da tabela. |      > [!NOTE] > Quando essa propriedade é definida como `TableCaptionAlign.NotSet`, o valor padrão do navegador é usado.       Suporte de acessibilidade adicionais para o <xref:System.Web.UI.WebControls.FormView>o controle é fornecido pelo <xref:System.Web.UI.WebControls.FormView.Caption%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.Caption%2A> </xref:System.Web.UI.WebControls.FormView> Use o <xref:System.Web.UI.WebControls.FormView.Caption%2A>propriedade para especificar o texto em um elemento de legenda HTML em um <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.Caption%2A>"
  example:
  - "The following example demonstrates how to use the CaptionAlign property to specify that the HTML caption element in a <xref:System.Web.UI.WebControls.FormView> control should be rendered on the left side of the control.  \n  \n [!code-vb[FormViewCaption#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_449_1.aspx)]\n [!code-cs[FormViewCaption#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_449_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.TableCaptionAlign CaptionAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.TableCaptionAlign
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;> </xref> valores. O padrão é <xref uid=&quot;langword_csharp_TableCaptionAlign.NotSet&quot; name=&quot;TableCaptionAlign.NotSet&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.CaptionAlign*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado não é um do <xref href=&quot;System.Web.UI.WebControls.TableCaptionAlign&quot;> </xref> valores de enumeração."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CellPadding
  id: CellPadding
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CellPadding
  nameWithType: FormView.CellPadding
  fullName: System.Web.UI.WebControls.FormView.CellPadding
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a quantidade de espaço entre o conteúdo de uma célula e a borda da célula."
  remarks: "Use a propriedade CellPadding para controlar o espaçamento entre o conteúdo de uma célula e a borda da célula. A quantidade de preenchimento especificada é adicionada a todos os quatro lados da célula.       Todas as células na mesma coluna de uma <xref:System.Web.UI.WebControls.FormView>controle têm a mesma largura.</xref:System.Web.UI.WebControls.FormView> A quantidade de preenchimento é aplicada à célula mais ampla e todas as outras células na coluna serão ajustadas para que a largura da célula. Da mesma forma, todas as células na mesma linha têm a mesma altura. A quantidade de preenchimento é aplicada para a célula mais alta da linha e todas as outras células na linha são ajustadas para que a altura da célula. Tamanhos de célula individual não podem ser especificados.       Para ajustar o espaçamento entre as células, use o <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>      > [!NOTE] > Quando esta propriedade não for definida, o valor padrão do navegador é usado."
  example:
  - "The following example demonstrates how to use the CellPadding property to specify the amount of spacing between the contents of a cell and the cell's border.  \n  \n [!code-cs[FormViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_693_1.aspx)]\n [!code-vb[FormViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_693_1.aspx)]"
  syntax:
    content: public virtual int CellPadding { get; set; }
    return:
      type: System.Int32
      description: "A quantidade de espaço, em pixels, entre a borda da célula e o conteúdo de uma célula. O valor padrão é -1, que indica que essa propriedade não está definida."
  overload: System.Web.UI.WebControls.FormView.CellPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CellSpacing
  id: CellSpacing
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CellSpacing
  nameWithType: FormView.CellSpacing
  fullName: System.Web.UI.WebControls.FormView.CellSpacing
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a quantidade de espaço entre as células."
  remarks: "Use a propriedade CellSpacing para controlar o espaçamento entre as células adjacentes no <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> É aplicado a este espaçamento vertical e horizontalmente. O espaçamento da célula é uniforme para todo o controle. Espaçamento da célula individuais entre linhas ou colunas não pode ser especificado.      > [!NOTE] > Se você definir essa propriedade como um valor maior que 0 e, em seguida, defina o <xref:System.Web.UI.WebControls.FormView.GridLines%2A>propriedade para um valor que exibe as bordas da célula, um espaço é exibido entre as bordas das células adjacentes.</xref:System.Web.UI.WebControls.FormView.GridLines%2A> Nessa situação, a propriedade CellSpacing controla o tamanho do espaço.       Para ajustar o espaçamento entre a borda da célula e o conteúdo de uma célula, use o <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.CellPadding%2A>"
  example:
  - "The following example demonstrates how to use the CellSpacing property to specify the amount of spacing between adjacent cells.  \n  \n [!code-cs[FormViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_130_1.aspx)]\n [!code-vb[FormViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_130_1.aspx)]"
  syntax:
    content: public virtual int CellSpacing { get; set; }
    return:
      type: System.Int32
      description: "A quantidade de espaço, em pixels, entre as células. O valor padrão é 0."
  overload: System.Web.UI.WebControls.FormView.CellSpacing*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)
  id: ChangeMode(System.Web.UI.WebControls.FormViewMode)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ChangeMode(FormViewMode)
  nameWithType: FormView.ChangeMode(FormViewMode)
  fullName: System.Web.UI.WebControls.FormView.ChangeMode(FormViewMode)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Opções de <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle para o modo de entrada de dados especificado."
  remarks: "Use o método ChangeMode para alternar programaticamente o <xref:System.Web.UI.WebControls.FormView>controle entre os modos de somente leitura, inserir e editar.</xref:System.Web.UI.WebControls.FormView> Esse método também atualiza o <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>propriedade com o modo especificado.</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> A tabela a seguir lista os valores de modo diferente.      | Modo | Descrição |   |----------|-----------------|   | `FormViewMode.Edit`| O controle de <xref:System.Web.UI.WebControls.FormView>está no modo de edição, o que permite ao usuário atualizar os valores de um registro. |   | `FormViewMode.Insert`| O controle de <xref:System.Web.UI.WebControls.FormView>está no modo de inserção, o que permite que o usuário adicione um novo registro para a fonte de dados. |   | `FormView.ReadOnly`| O controle de <xref:System.Web.UI.WebControls.FormView>está no modo somente leitura, que é o modo de exibição normal. |      > [!NOTE] > O <xref:System.Web.UI.WebControls.FormView.ModeChanged>e <xref:System.Web.UI.WebControls.FormView.ModeChanging>eventos não são disparados quando este método é chamado.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the ChangeMode method to return the <xref:System.Web.UI.WebControls.FormView> control to read-only mode whenever the user navigates to another record.  \n  \n [!code-cs[FormViewChangeMode#1](~/add/codesnippet/csharp/662370c4-5409-4672-aaf8-_1.aspx)]\n [!code-vb[FormViewChangeMode#1](~/add/codesnippet/visualbasic/662370c4-5409-4672-aaf8-_1.aspx)]"
  syntax:
    content: public void ChangeMode (System.Web.UI.WebControls.FormViewMode newMode);
    parameters:
    - id: newMode
      type: System.Web.UI.WebControls.FormViewMode
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;> </xref> valores de enumeração."
  overload: System.Web.UI.WebControls.FormView.ChangeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  id: CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: FormView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.FormView.CreateChildControls(IEnumerable,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria a hierarquia de controle usada para renderizar o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle com a fonte de dados especificado."
  remarks: "O método CreateChildControls é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para criar a hierarquia de controle para o <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> Quando o `dataBinding` parâmetro é `true`, associação de dados é executada antes que a hierarquia de controle é criada."
  syntax:
    content: protected override int CreateChildControls (System.Collections.IEnumerable dataSource, bool dataBinding);
    parameters:
    - id: dataSource
      type: System.Collections.IEnumerable
      description: "Um <xref:System.Collections.IEnumerable>que representa a fonte de dados usada para criar a hierarquia de controle.</xref:System.Collections.IEnumerable>"
    - id: dataBinding
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar que a hierarquia de controle é criada diretamente da fonte de dados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para indicar o controle de hierarquia é criada a partir do estado de exibição."
    return:
      type: System.Int32
      description: "O número de itens criados da fonte de dados."
  overload: System.Web.UI.WebControls.FormView.CreateChildControls*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> do <xref href=&quot;System.Web.UI.IDataSource&quot;> </xref> ao qual o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle está associado é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateControlStyle
  id: CreateControlStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateControlStyle()
  nameWithType: FormView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.FormView.CreateControlStyle()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria um objeto de estilo de tabela padrão para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "O método CreateControlStyle é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para criar o objeto de estilo de tabela padrão.</xref:System.Web.UI.WebControls.FormView> Além de definir o estilo padrão de um <xref:System.Web.UI.WebControls.TableStyle>do objeto, esse método também define o <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>propriedade como 0.</xref:System.Web.UI.WebControls.FormView.CellPadding%2A> </xref:System.Web.UI.WebControls.TableStyle>"
  syntax:
    content: protected override System.Web.UI.WebControls.Style CreateControlStyle ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Style
      description: "Um <xref href=&quot;System.Web.UI.WebControls.Style&quot;> </xref> que contém o estilo de tabela padrão para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.CreateControlStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments
  id: CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateDataSourceSelectArguments()
  nameWithType: FormView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria o <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> objeto que contém os argumentos que são passados para a fonte de dados para processamento."
  remarks: "O método CreateDataSourceSelectArguments é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para criar o <xref:System.Web.UI.DataSourceSelectArguments>objeto que contém os argumentos passados para a fonte de dados.</xref:System.Web.UI.DataSourceSelectArguments> </xref:System.Web.UI.WebControls.FormView> Nessa implementação, o <xref:System.Web.UI.DataSourceSelectArguments>objeto contém os argumentos para operações de paginação.</xref:System.Web.UI.DataSourceSelectArguments>"
  syntax:
    content: protected override System.Web.UI.DataSourceSelectArguments CreateDataSourceSelectArguments ();
    parameters: []
    return:
      type: System.Web.UI.DataSourceSelectArguments
      description: "Um <xref href=&quot;System.Web.UI.DataSourceSelectArguments&quot;> </xref> que contém os argumentos que são passados para a fonte de dados."
  overload: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  id: CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria um <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> usando o índice do item especificado, o tipo de linha e o estado de linha do objeto."
  remarks: "O método CreateRow é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para criar um <xref:System.Web.UI.WebControls.FormViewRow>objeto usado para representar uma linha dentro do controle.</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.FormViewRow CreateRow (int itemIndex, System.Web.UI.WebControls.DataControlRowType rowType, System.Web.UI.WebControls.DataControlRowState rowState);
    parameters:
    - id: itemIndex
      type: System.Int32
      description: "O índice de base zero do item de dados para exibir."
    - id: rowType
      type: System.Web.UI.WebControls.DataControlRowType
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.DataControlRowType&quot;> </xref> valores de enumeração."
    - id: rowState
      type: System.Web.UI.WebControls.DataControlRowState
      description: "Uma combinação bit a bit do <xref href=&quot;System.Web.UI.WebControls.DataControlRowState&quot;> </xref> valores de enumeração."
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> com o índice do item especificado, o tipo de linha e o estado de linha."
  overload: System.Web.UI.WebControls.FormView.CreateRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CreateTable
  id: CreateTable
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CreateTable()
  nameWithType: FormView.CreateTable()
  fullName: System.Web.UI.WebControls.FormView.CreateTable()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria a tabela contém para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "O método CreateTable é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para criar uma tabela que atua como contêiner para o controle.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual System.Web.UI.WebControls.Table CreateTable ();
    parameters: []
    return:
      type: System.Web.UI.WebControls.Table
      description: "Um <xref href=&quot;System.Web.UI.WebControls.Table&quot;> </xref> que representa a tabela contém para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.CreateTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.CurrentMode
  id: CurrentMode
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: CurrentMode
  nameWithType: FormView.CurrentMode
  fullName: System.Web.UI.WebControls.FormView.CurrentMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o modo de entrada de dados atual do <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Use a propriedade CurrentMode para determinar se o <xref:System.Web.UI.WebControls.FormView>controle está no modo somente leitura, inserção ou edição.</xref:System.Web.UI.WebControls.FormView> A tabela a seguir lista os valores de modo diferente.      | Modo | Descrição |   |----------|-----------------|   | `FormViewMode.Edit`| O controle de <xref:System.Web.UI.WebControls.FormView>está no modo de edição, o que permite ao usuário atualizar os valores de um registro. |   | `FormViewMode.Insert`| O controle de <xref:System.Web.UI.WebControls.FormView>está no modo de inserção, o que permite que o usuário adicione um novo registro para a fonte de dados. |   | `FormView.ReadOnly`| O controle de <xref:System.Web.UI.WebControls.FormView>está no modo somente leitura, que é o modo de exibição normal. |       Esse valor normalmente é definido automaticamente pelo <xref:System.Web.UI.WebControls.FormView>controlar quando o botão de comando de novo, Update, Insert, Delete ou Cancelar é clicado.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> Quando o <xref:System.Web.UI.WebControls.FormView>controle alterar modos em resposta a uma ação, os eventos na tabela a seguir são gerados.</xref:System.Web.UI.WebControls.FormView> Isso permite que você crie um manipulador de eventos personalizados que executa a rotina apropriada quando o evento ocorre.      | Evento | Descrição |   |-----------|-----------------|   | <xref:System.Web.UI.WebControls.FormView.ModeChanged>| Ocorre quando o <xref:System.Web.UI.WebControls.FormView>controle altera os modos, mas após a alteração do modo.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanged> Esse evento geralmente é usado para executar uma tarefa sempre que o controle <xref:System.Web.UI.WebControls.FormView>altera modos. |   | <xref:System.Web.UI.WebControls.FormView.ModeChanging>| Ocorre quando o <xref:System.Web.UI.WebControls.FormView>controle altera os modos, mas antes das alterações de modo.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView> Esse evento geralmente é usado para cancelar a alteração do modo. |       **Observação** esses eventos não são disparados quando você alterar o modo de forma programática usando o <xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>método.</xref:System.Web.UI.WebControls.FormView.ChangeMode%2A>"
  example:
  - "The following example demonstrates how to use the CurrentMode property to determine whether the <xref:System.Web.UI.WebControls.FormView> control is in edit, insert, or read-only mode. If the user attempts to navigate to another record while the <xref:System.Web.UI.WebControls.FormView> control is in edit more, the paging operation is canceled.  \n  \n [!code-cs[FormViewCurrentMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_817_1.aspx)]\n [!code-vb[FormViewCurrentMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_817_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.FormViewMode CurrentMode { get; }
    return:
      type: System.Web.UI.WebControls.FormViewMode
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;> </xref> valores."
  overload: System.Web.UI.WebControls.FormView.CurrentMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataBind
  id: DataBind
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataBind()
  nameWithType: FormView.DataBind()
  fullName: System.Web.UI.WebControls.FormView.DataBind()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Associa a fonte de dados para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Use o método de associação de dados para associar dados de uma fonte de dados para o <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Este método resolve todas as expressões de associação de dados no modelo ativo do controle."
  syntax:
    content: public override sealed void DataBind ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.DataBind*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataItem
  id: DataItem
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataItem
  nameWithType: FormView.DataItem
  fullName: System.Web.UI.WebControls.FormView.DataItem
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o item de dados associado para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Use a propriedade de item de dados para acessar o item de dados associada ao <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> O item de dados geralmente é usado para acessar os valores de campo do registro atual diretamente. O tipo do <xref:System.Object>retornados por essa propriedade varia dependendo da fonte de dados.</xref:System.Object> Por exemplo, quando um <xref:System.Web.UI.WebControls.SqlDataSource>controle está vinculado a <xref:System.Web.UI.WebControls.FormView>controle, um <xref:System.Data.DataRowView>objeto é retornado.</xref:System.Data.DataRowView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.SqlDataSource>      > [!NOTE] > Essa propriedade está disponível apenas após a associação de dados. Antes de dados de associação ocorre, essa propriedade retornará `null`. Essa propriedade também não é aplicável quando o <xref:System.Web.UI.WebControls.FormView>controle está no modo de inserção e retorna `null`.</xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the DataItem property to determine the value of a field in the data item.  \n  \n [!code-vb[FormViewCtor#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_191_1.aspx)]\n [!code-cs[FormViewCtor#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_191_1.aspx)]"
  syntax:
    content: public virtual object DataItem { get; }
    return:
      type: System.Object
      description: "Um <xref:System.Object>que representa o item de dados associado para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle.</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.DataItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataItemCount
  id: DataItemCount
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataItemCount
  nameWithType: FormView.DataItemCount
  fullName: System.Web.UI.WebControls.FormView.DataItemCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o número de itens de dados na fonte de dados."
  remarks: "Use a propriedade DataItemCount para determinar o número de itens de dados contidos na fonte de dados. Esta propriedade contém o mesmo valor que o <xref:System.Web.UI.WebControls.FormView.PageCount%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PageCount%2A>"
  syntax:
    content: public int DataItemCount { get; }
    return:
      type: System.Int32
      description: "O número de itens de dados na fonte de dados."
  overload: System.Web.UI.WebControls.FormView.DataItemCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataItemIndex
  id: DataItemIndex
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataItemIndex
  nameWithType: FormView.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o índice do item de dados associado para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle da fonte de dados."
  remarks: "Use a propriedade DataItemIndex para determinar o índice do item de dados associada ao <xref:System.Web.UI.WebControls.FormView>controle da fonte de dados.</xref:System.Web.UI.WebControls.FormView> Esta propriedade contém o mesmo valor que o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>      > [!NOTE] > Essa propriedade não é aplicável quando o <xref:System.Web.UI.WebControls.FormView>controle está no modo de inserção.</xref:System.Web.UI.WebControls.FormView> Quando o controle está no modo de inserção, a propriedade DataItemIndex retorna -1."
  syntax:
    content: public virtual int DataItemIndex { get; }
    return:
      type: System.Int32
      description: "O índice do item de dados associado para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle da fonte de dados."
  overload: System.Web.UI.WebControls.FormView.DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataKey
  id: DataKey
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataKey
  nameWithType: FormView.DataKey
  fullName: System.Web.UI.WebControls.FormView.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém um <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref> objeto que representa a chave primária do registro exibido."
  remarks: "Quando o <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>propriedade for definida, o <xref:System.Web.UI.WebControls.FormView>controle cria automaticamente um <xref:System.Web.UI.WebControls.DataKey>objeto que contém os pares chave/valor do campo ou campos listados no <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>propriedade para o registro atual.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> Use a propriedade DataKey para começar a <xref:System.Web.UI.WebControls.DataKey>objeto.</xref:System.Web.UI.WebControls.DataKey> Essa propriedade normalmente é usada para obter as chaves e seus valores correspondentes para os campos especificados no <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>      > [!NOTE] > Como um atalho, você também pode usar o <xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>propriedade para determinar o valor do primeiro campo de chave listado no <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.FormView.SelectedValue%2A>"
  example:
  - "The following example demonstrates how to use the DataKey property to determine the value of the key field.  \n  \n [!code-cs[FormViewDataKey#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1171_1.aspx)]\n [!code-vb[FormViewDataKey#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1171_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.DataKey DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "Um <xref href=&quot;System.Web.UI.WebControls.DataKey&quot;> </xref> objeto que representa a chave primária do registro exibido."
  overload: System.Web.UI.WebControls.FormView.DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DataKeyNames
  id: DataKeyNames
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DataKeyNames
  nameWithType: FormView.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma matriz que contém os nomes dos campos de chave para a fonte de dados."
  remarks: "Use a propriedade DataKeyNames para especificar uma lista separada por vírgulas de nomes de campos que representam a chave primária da fonte de dados. Quando a propriedade DataKeyNames está definida, o <xref:System.Web.UI.WebControls.FormView>controle cria automaticamente um <xref:System.Web.UI.WebControls.DataKey>objeto que contém os pares chave/valor do campo ou campos listados na propriedade DataKeyNames para o registro atual.</xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.FormView> O <xref:System.Web.UI.WebControls.DataKey>objeto é armazenado no <xref:System.Web.UI.WebControls.FormView.DataKey%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.DataKey%2A> </xref:System.Web.UI.WebControls.DataKey>      > [!NOTE] > Você deve definir a propriedade DataKeyNames para a atualização interna, excluir e inserir recursos da <xref:System.Web.UI.WebControls.FormView>controle funcione.</xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the DataKeyNames property to specify the key field for the data source bound to the <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_97_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_97_1.aspx)]"
  syntax:
    content: public virtual string[] DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "Uma matriz que contém os nomes dos campos de chave para a fonte de dados."
  overload: System.Web.UI.WebControls.FormView.DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DefaultMode
  id: DefaultMode
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DefaultMode
  nameWithType: FormView.DefaultMode
  fullName: System.Web.UI.WebControls.FormView.DefaultMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o modo de entrada de dados ao qual o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> após uma atualização, o controle retorna inserir ou cancelar a operação."
  remarks: "Use a propriedade DefaultMode para especificar se o <xref:System.Web.UI.WebControls.FormView>controle retorna para o modo somente leitura, inserção ou edição após uma atualização, inserção ou operação de cancelamento é executada.</xref:System.Web.UI.WebControls.FormView> Por padrão, o <xref:System.Web.UI.WebControls.FormView>o controle retorna para o modo somente leitura; no entanto, você pode manter o <xref:System.Web.UI.WebControls.FormView>controlar em edição ou modo de inserção definindo essa propriedade para o valor apropriado.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> A tabela a seguir lista os valores de modo diferente.      | Modo | Descrição |   |----------|-----------------|   | `FormViewMode.Edit`| O controle de <xref:System.Web.UI.WebControls.FormView>está no modo de edição, o que permite ao usuário atualizar os valores de um registro. |   | `FormViewMode.Insert`| O controle de <xref:System.Web.UI.WebControls.FormView>está no modo de inserção, o que permite que o usuário adicione um novo registro para a fonte de dados. |   | `FormViewMode.ReadOnly`| O controle de <xref:System.Web.UI.WebControls.FormView>está no modo somente leitura, que é o modo de exibição normal. |       Essa propriedade é geralmente usado quando o <xref:System.Web.UI.WebControls.FormView>controle tem um único objetivo, como somente para inserir ou editar registros.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the DefaultMode property to keep a <xref:System.Web.UI.WebControls.FormView> control in edit mode after an update operation.  \n  \n [!code-vb[FormViewDefaultMode#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_229_1.aspx)]\n [!code-cs[FormViewDefaultMode#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_229_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewMode DefaultMode { get; set; }
    return:
      type: System.Web.UI.WebControls.FormViewMode
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;> </xref> valores. O padrão é <xref uid=&quot;langword_csharp_FormViewMode.ReadOnly&quot; name=&quot;FormViewMode.ReadOnly&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.DefaultMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor especificado não é um do <xref href=&quot;System.Web.UI.WebControls.FormViewMode&quot;> </xref> valores de enumeração."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DeleteItem
  id: DeleteItem
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DeleteItem()
  nameWithType: FormView.DeleteItem()
  fullName: System.Web.UI.WebControls.FormView.DeleteItem()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Exclui o registro atual no <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle da fonte de dados."
  remarks: "Use o método DeleteItem para excluir programaticamente o registro atual no <xref:System.Web.UI.WebControls.FormView>controle da fonte de dados.</xref:System.Web.UI.WebControls.FormView> Esse método é geralmente usado quando você precisa excluir o registro atual fora do <xref:System.Web.UI.WebControls.FormView>controlar, tais como um controle diferente na página.</xref:System.Web.UI.WebControls.FormView> Chamar esse método também gera o <xref:System.Web.UI.WebControls.FormView.ItemDeleted>e <xref:System.Web.UI.WebControls.FormView.ItemDeleting>eventos.</xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView.ItemDeleted>"
  example:
  - "The following example demonstrates how to use the DeleteItem method to programmatically delete the current record in a <xref:System.Web.UI.WebControls.FormView> control from the data source.  \n  \n [!code-vb[FormViewDeleteItem#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_190_1.aspx)]\n [!code-cs[FormViewDeleteItem#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_190_1.aspx)]"
  syntax:
    content: public virtual void DeleteItem ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.DeleteItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.DeleteMethod
  id: DeleteMethod
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: DeleteMethod
  nameWithType: FormView.DeleteMethod
  fullName: System.Web.UI.WebControls.FormView.DeleteMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do método na página que é chamada quando o controle executa uma operação de exclusão."
  remarks: "Para uma série de tutoriais sobre como usar a associação de modelo com formulários da Web, consulte [modelo de associação e formulários da Web](http://go.microsoft.com/fwlink/?LinkId=286117)."
  syntax:
    content: public virtual string DeleteMethod { get; set; }
    return:
      type: System.String
      description: "O nome do método na página que é chamado quando o controle executa uma operação de exclusão."
  overload: System.Web.UI.WebControls.FormView.DeleteMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EditItemTemplate
  id: EditItemTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EditItemTemplate
  nameWithType: FormView.EditItemTemplate
  fullName: System.Web.UI.WebControls.FormView.EditItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o conteúdo personalizado para um item no modo de edição."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controle processa um modelo diferente para a linha de dados com base no modo atual do controle (especificado pelo <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>propriedade).</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> </xref:System.Web.UI.WebControls.FormView> A tabela a seguir mostra o modelo é usado para cada modo.      | Modo | Modelo processado |   |----------|-----------------------|   | Editar | EditItemTemplate |   | Inserir | <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|   | Somente leitura | <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|       Use a propriedade EditItemTemplate para definir sua própria interface de usuário (UI) para os dados de linha quando o <xref:System.Web.UI.WebControls.FormView>controle está no modo de edição.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> O modelo de item de edição geralmente contém os controles de entrada do usuário atualizar os valores de um registro existente, bem como os botões de comando para atualizar o registro e cancelar a operação de atualização.       Para especificar o modelo personalizado, o primeiro lugar `<EditItemTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<EditItemTemplate>` marcas. Usando uma expressão de associação bidirecional, você pode associar um campo com um controle de entrada. Isso permite que o <xref:System.Web.UI.WebControls.FormView>controle para exibir automaticamente o valor do campo original no controle de entrada associado no modo de edição.</xref:System.Web.UI.WebControls.FormView> Quando um registro é atualizado, o <xref:System.Web.UI.WebControls.FormView>controle automaticamente extrai o valor do campo atualizado do controle de entrada associado.</xref:System.Web.UI.WebControls.FormView> Para obter mais informações sobre expressões de associação bidirecional, consulte [para bancos de dados de associação](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742). Para criar botões de comando que executam o cancelamento interno e operações de atualização, adicione um controle de botão de comando para o modelo com seu `CommandName` propriedade definida como um dos valores listados na tabela a seguir.      | Tipo de botão de comando | Valor CommandName |   |-------------------------|-----------------------|   | Cancelar | &quot; Cancelar &quot;|   | Atualização | &quot; Atualização &quot;|       Você pode controlar a aparência do modelo de item usando o <xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.EditRowStyle%2A>"
  example:
  - "The following example demonstrates how to define a custom template for a data row in edit mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_886_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_886_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EditItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> que contém o conteúdo personalizado para os dados de linha quando o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle está no modo de edição. O valor padrão é null, o que indica que essa propriedade não está definida."
  overload: System.Web.UI.WebControls.FormView.EditItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EditRowStyle
  id: EditRowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EditRowStyle
  nameWithType: FormView.EditRowStyle
  fullName: System.Web.UI.WebControls.FormView.EditRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> objeto que permite definir a aparência dos dados de linha quando uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle está no modo de edição."
  remarks: "Use a propriedade EditRowStyle para controlar a aparência dos dados de linha quando um <xref:System.Web.UI.WebControls.FormView>controle está no modo de edição.</xref:System.Web.UI.WebControls.FormView> Quando o <xref:System.Web.UI.WebControls.FormView>controle está no modo de edição, a linha de dados exibe o conteúdo definido pelo usuário especificado pelo <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle>objeto retorna.</xref:System.Web.UI.WebControls.TableItemStyle> As propriedades podem ser definidas usando um dos métodos a seguir:-colocar um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView>controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle>objeto (por exemplo, `EditRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -Aninhar uma `<EditRowStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>       As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `EditRowStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado."
  example:
  - "The following example demonstrates how to use the EditRowStyle property to specify a custom style for a data row when a <xref:System.Web.UI.WebControls.FormView> control is in edit mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1022_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1022_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EditRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> que representa o estilo dos dados de linha quando uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle está no modo de edição."
  overload: System.Web.UI.WebControls.FormView.EditRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  id: EmptyDataRowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EmptyDataRowStyle
  nameWithType: FormView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> objeto que permite definir a aparência da linha de dados vazio exibida quando a fonte de dados associado a um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle não contém quaisquer registros."
  remarks: "Use a propriedade EmptyDataRowStyle para controlar a aparência da linha de dados vazio em um <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> A linha de dados vazio é exibida quando a fonte de dados que está associada ao controle não contém quaisquer registros. Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle>objeto retorna.</xref:System.Web.UI.WebControls.TableItemStyle> As propriedades podem ser definidas usando um dos métodos a seguir:-colocar um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView>controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle>objeto (por exemplo, `EmptyDataRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -Aninhar uma `<EmptyDataRowStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>       As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `EmptyDataRowStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado."
  example:
  - "The following example demonstrates how to use the EmptyDataRowStyle property to specify a custom style for the empty data row displayed when a <xref:System.Web.UI.WebControls.FormView> control is bound to a data source that does not contain any records.  \n  \n [!code-cs[FormViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1010_1.aspx)]\n [!code-vb[FormViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1010_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle EmptyDataRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> que permite que você definir a aparência da linha de dados vazio."
  overload: System.Web.UI.WebControls.FormView.EmptyDataRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EmptyDataTemplate
  id: EmptyDataTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EmptyDataTemplate
  nameWithType: FormView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.FormView.EmptyDataTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o conteúdo definido pelo usuário para a linha de dados vazia processado quando um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle está associado a uma fonte de dados que não contém quaisquer registros."
  remarks: "A linha de dados vazio é exibida em uma <xref:System.Web.UI.WebControls.FormView>quando a fonte de dados que está associada ao controle não contém todos os registros de controle.</xref:System.Web.UI.WebControls.FormView> Você pode definir sua própria interface de usuário personalizada (UI) para a linha de dados vazio usando a propriedade EmptyDataTemplate. Para especificar um modelo personalizado para a linha de dados vazio, primeiro coloque `<EmptyDataTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<EmptyDataTemplate>` marcas. Para controlar o estilo da linha de dados vazio, use o <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> Como alternativa, você pode usar a interface do usuário interna para a linha de dados vazio, definindo o <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>propriedade em vez desta propriedade.</xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>      > [!NOTE] > Se ambos os <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>e EmptyDataTemplate propriedades forem definidas, a propriedade EmptyDataTemplate prevalece.</xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>"
  example:
  - "The following example demonstrates how to define a custom template for the empty data row displayed when a <xref:System.Web.UI.WebControls.FormView> control is bound to a data source that does not contain any records.  \n  \n [!code-cs[FormViewEmptyDataTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1213_1.aspx)]\n [!code-vb[FormViewEmptyDataTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1213_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate EmptyDataTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> que contém o conteúdo personalizado para a linha de dados vazio. O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.FormView.EmptyDataTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EmptyDataText
  id: EmptyDataText
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EmptyDataText
  nameWithType: FormView.EmptyDataText
  fullName: System.Web.UI.WebControls.FormView.EmptyDataText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto a ser exibido na linha de dados vazia processado quando um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle está associado a uma fonte de dados que não contém quaisquer registros."
  remarks: "A linha de dados vazio é exibida em uma <xref:System.Web.UI.WebControls.FormView>quando a fonte de dados que está associada ao controle não contém todos os registros de controle.</xref:System.Web.UI.WebControls.FormView> Use a propriedade EmptyDataText para especificar o texto a ser exibido na linha de dados vazio. Para controlar o estilo da linha de dados vazio, use o <xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.EmptyDataRowStyle%2A> Como alternativa, você pode definir sua própria interface de usuário personalizada (UI) para a linha de dados vazio, definindo o <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>propriedade em vez desta propriedade.</xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>      > [!NOTE] > Se ambos o EmptyDataText e <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>propriedades forem definidas, o <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>propriedade prevalece.</xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>       O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the EmptyDataText property to specify the text to display in the empty data row.  \n  \n [!code-cs[FormViewEmptyDataText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1210_1.aspx)]\n [!code-vb[FormViewEmptyDataText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1210_1.aspx)]"
  syntax:
    content: public virtual string EmptyDataText { get; set; }
    return:
      type: System.String
      description: "O texto a ser exibido na linha de dados vazio. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.FormView.EmptyDataText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EnableModelValidation
  id: EnableModelValidation
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EnableModelValidation
  nameWithType: FormView.EnableModelValidation
  fullName: System.Web.UI.WebControls.FormView.EnableModelValidation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se um controle de validador tratará exceções que ocorrem durante a inserção ou operações de atualização."
  syntax:
    content: public virtual bool EnableModelValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um controle de validador manipulará as exceções que ocorrem durante a inserção ou atualização operações; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.EnableModelValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.EnsureDataBound
  id: EnsureDataBound
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: EnsureDataBound()
  nameWithType: FormView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.FormView.EnsureDataBound()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Faz a determinado que o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle está associado aos dados quando apropriado."
  remarks: "O método EnsureDataBound é um método auxiliar usado pelo <xref:System.Web.UI.WebControls.FormView>classe para certificar-se de que o <xref:System.Web.UI.WebControls.FormView>controle está associado aos dados quando apropriado.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> O método EnsureDataBound geralmente é chamado durante a <xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A>método para associar o controle à fonte de dados quando o controle associado a dados ainda não está associado, mas requer a associação de dados.</xref:System.Web.UI.WebControls.BaseDataBoundControl.OnPreRender%2A> Esta versão do método foi substituído para impedir que a associação de dados ocorram quando o <xref:System.Web.UI.WebControls.FormView>controle está no modo de inserção.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void EnsureDataBound ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.EnsureDataBound*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  id: ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ExtractRowValues(IOrderedDictionary,Boolean)
  nameWithType: FormView.ExtractRowValues(IOrderedDictionary,Boolean)
  fullName: System.Web.UI.WebControls.FormView.ExtractRowValues(IOrderedDictionary,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Recupera os valores de cada campo declarado dentro da linha de dados e as armazena no especificado <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> objeto."
  remarks: "O método ExtractRowValues é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para recuperar os valores de cada campo declarado dentro da linha de dados.</xref:System.Web.UI.WebControls.FormView> Como a linha de dados exibe um modelo diferente com base no modo atual, esse método recupera somente os valores de campo declarados no modelo que corresponde ao modo atual. A tabela a seguir mostra os modos disponíveis e os modelos correspondentes.      | Modo | Modelo |   |----------|--------------|   | Inserir | <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|   | Editar | <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|   | Somente leitura | <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|       Você pode especificar se os valores extraídos incluem o campo de chave ou campos usando a `includeKeys` parâmetro.</xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>"
  syntax:
    content: protected virtual void ExtractRowValues (System.Collections.Specialized.IOrderedDictionary fieldValues, bool includeKeys);
    parameters:
    - id: fieldValues
      type: System.Collections.Specialized.IOrderedDictionary
      description: "Um <xref href=&quot;System.Collections.Specialized.IOrderedDictionary&quot;> </xref> usado para armazenar os valores de campo do item de dados atual."
    - id: includeKeys
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para incluir campos de chave; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.ExtractRowValues*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterRow
  id: FooterRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterRow
  nameWithType: FormView.FooterRow
  fullName: System.Web.UI.WebControls.FormView.FooterRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> objeto que representa a linha de rodapé em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "A linha de rodapé de página é exibida na parte inferior do <xref:System.Web.UI.WebControls.FormView>controlar quando o <xref:System.Web.UI.WebControls.FormView.FooterText%2A>ou <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>está definida.</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView> Use a propriedade FooterRow para acessar programaticamente o <xref:System.Web.UI.WebControls.FormViewRow>objeto que representa a linha de rodapé.</xref:System.Web.UI.WebControls.FormViewRow>      > [!NOTE] > FooterRow a propriedade está disponível somente depois de <xref:System.Web.UI.WebControls.FormView>controle cria a linha de rodapé no <xref:System.Web.UI.WebControls.FormView.ItemCreated>evento.</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       Essa propriedade normalmente é usada quando você precisa manipular programaticamente a linha de rodapé, por exemplo, ao adicionar conteúdo personalizado. Qualquer modificação para a propriedade FooterRow deve ser executada após o <xref:System.Web.UI.WebControls.FormView>controle foi processado; caso contrário, o <xref:System.Web.UI.WebControls.FormView>controle substitui quaisquer alterações.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>       Para controlar o estilo da linha de rodapé, use o <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>"
  example:
  - "The following example demonstrates how to use the FooterRow property to programmatically modify the properties of the footer row during the <xref:System.Web.UI.WebControls.FormView.ItemCreated> event.  \n  \n [!code-vb[FormViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_364_1.aspx)]\n [!code-cs[FormViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_364_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow FooterRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> que representa a linha de rodapé em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.FooterRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterStyle
  id: FooterStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterStyle
  nameWithType: FormView.FooterStyle
  fullName: System.Web.UI.WebControls.FormView.FooterStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> objeto que permite definir a aparência da linha de rodapé em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "A linha de rodapé de página é exibida na parte inferior do <xref:System.Web.UI.WebControls.FormView>controlar quando o <xref:System.Web.UI.WebControls.FormView.FooterText%2A>ou <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>está definida.</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView> Use a propriedade FooterStyle para controlar a aparência da linha de rodapé em um <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle>objeto retorna.</xref:System.Web.UI.WebControls.TableItemStyle> As propriedades podem ser definidas usando um dos métodos a seguir:-colocar um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView>controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle>objeto (por exemplo, `FooterStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -Aninhar uma `<FooterStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>       As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `FooterStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado."
  example:
  - "The following example demonstrates how to use the FooterStyle property to specify a custom style for the footer row.  \n  \n [!code-cs[FormViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1350_1.aspx)]\n [!code-vb[FormViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1350_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle FooterStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> que representa o estilo da linha de rodapé em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.FooterStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterTemplate
  id: FooterTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterTemplate
  nameWithType: FormView.FooterTemplate
  fullName: System.Web.UI.WebControls.FormView.FooterTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o conteúdo definido pelo usuário para a linha de rodapé em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "A linha de rodapé de página é exibida na parte inferior do <xref:System.Web.UI.WebControls.FormView>controlar quando o <xref:System.Web.UI.WebControls.FormView.FooterText%2A>ou FooterTemplate propriedade está definida.</xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView> Você pode definir sua própria interface de usuário personalizada (UI) para a linha de rodapé de página usando a propriedade FooterTemplate. Para especificar um modelo personalizado para a linha de rodapé de página, primeiro coloque `<FooterTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<FooterTemplate>` marcas. Para controlar o estilo da linha de rodapé, use o <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> Como alternativa, você pode simplesmente exibir texto na linha de rodapé, definindo o <xref:System.Web.UI.WebControls.FormView.FooterText%2A>propriedade em vez desta propriedade.</xref:System.Web.UI.WebControls.FormView.FooterText%2A>      > [!NOTE] > Se ambos os <xref:System.Web.UI.WebControls.FormView.FooterText%2A>e FooterTemplate propriedades forem definidas, a propriedade FooterTemplate prevalece.</xref:System.Web.UI.WebControls.FormView.FooterText%2A>"
  example:
  - "The following example demonstrates how to use the FooterTemplate property to define a custom template to render for the footer row.  \n  \n [!code-vb[FormViewFooterTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1258_1.aspx)]\n [!code-cs[FormViewFooterTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1258_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate FooterTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> que contém o conteúdo personalizado para a linha de rodapé. O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.FormView.FooterTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.FooterText
  id: FooterText
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: FooterText
  nameWithType: FormView.FooterText
  fullName: System.Web.UI.WebControls.FormView.FooterText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto a ser exibido na linha de rodapé de um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "A linha de rodapé de página é exibida na parte inferior do <xref:System.Web.UI.WebControls.FormView>controlar quando o FooterText ou <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>está definida.</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView> Use a propriedade FooterText para especificar o texto a ser exibido na linha de rodapé. Para controlar o estilo da linha de rodapé, use o <xref:System.Web.UI.WebControls.FormView.FooterStyle%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.FooterStyle%2A> Como alternativa, você pode definir sua própria interface de usuário personalizada (UI) para a linha de rodapé, definindo o <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>propriedade em vez desta propriedade.</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>      > [!NOTE] > Se ambos o FooterText e <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>propriedades forem definidas, o <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>propriedade prevalece.</xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>       O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the FooterText property to specify the text to display in the footer row.  \n  \n [!code-cs[FormViewFooterText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_904_1.aspx)]\n [!code-vb[FormViewFooterText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_904_1.aspx)]"
  syntax:
    content: public virtual string FooterText { get; set; }
    return:
      type: System.String
      description: "O texto a ser exibido na linha de rodapé. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.FormView.FooterText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.GridLines
  id: GridLines
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: GridLines
  nameWithType: FormView.GridLines
  fullName: System.Web.UI.WebControls.FormView.GridLines
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o estilo das linhas de grade para um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Use a propriedade de linhas de grade para especificar o estilo das linhas de grade para um <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> A tabela a seguir lista os estilos disponíveis.      | Estilo | Descrição |   |-----------|-----------------|   | `GridLines.None`| Nenhuma linha de grade é exibidas. |   | `GridLines.Horizontal`| Exibe as linhas de grade horizontais apenas. |   | `GridLines.Vertical`| Exibe as linhas de grade verticais apenas. |   | `GridLines.Both`| Exibe a grade horizontais e verticais. |"
  example:
  - "The following example demonstrates how to use the GridLines property to display both the vertical and horizontal gridlines.  \n  \n [!code-cs[FormViewCellPadding#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_236_1.aspx)]\n [!code-vb[FormViewCellPadding#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_236_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.GridLines GridLines { get; set; }
    return:
      type: System.Web.UI.WebControls.GridLines
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.GridLines&quot;> </xref> valores. O padrão é <xref uid=&quot;langword_csharp_GridLines.None&quot; name=&quot;GridLines.None&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.GridLines*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderRow
  id: HeaderRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderRow
  nameWithType: FormView.HeaderRow
  fullName: System.Web.UI.WebControls.FormView.HeaderRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> objeto que representa a linha de cabeçalho em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "A linha de cabeçalho é exibida na parte superior do <xref:System.Web.UI.WebControls.FormView>controlar quando o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>ou <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>está definida.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView> Use a propriedade HeaderRow para acessar programaticamente o <xref:System.Web.UI.WebControls.FormViewRow>objeto que representa a linha de cabeçalho.</xref:System.Web.UI.WebControls.FormViewRow>      > [!NOTE] > HeaderRow a propriedade está disponível somente depois de <xref:System.Web.UI.WebControls.FormView>controle cria a linha de cabeçalho no <xref:System.Web.UI.WebControls.FormView.ItemCreated>evento.</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       Essa propriedade normalmente é usada quando você precisa manipular programaticamente a linha de cabeçalho, por exemplo, ao adicionar conteúdo personalizado. Qualquer modificação para a propriedade HeaderRow deve ser executada após o <xref:System.Web.UI.WebControls.FormView>controle foi processado; caso contrário, o <xref:System.Web.UI.WebControls.FormView>controle substitui quaisquer alterações.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the HeaderRow property to programmatically modify the properties of the header row during the <xref:System.Web.UI.WebControls.FormView.ItemCreated> event.  \n  \n [!code-vb[FormViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_518_1.aspx)]\n [!code-cs[FormViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_518_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow HeaderRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> que representa a linha de cabeçalho em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.HeaderRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderStyle
  id: HeaderStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderStyle
  nameWithType: FormView.HeaderStyle
  fullName: System.Web.UI.WebControls.FormView.HeaderStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> objeto que permite definir a aparência da linha de cabeçalho em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "A linha de cabeçalho é exibida na parte superior do <xref:System.Web.UI.WebControls.FormView>controlar quando o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>ou <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>está definida.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView> Use a propriedade HeaderStyle para controlar a aparência da linha de cabeçalho em uma <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle>objeto retorna.</xref:System.Web.UI.WebControls.TableItemStyle> As propriedades podem ser definidas usando um dos métodos a seguir:-colocar um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView>controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle>objeto (por exemplo, `HeaderStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -Aninhar uma `<HeaderStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>       As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `HeaderStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado."
  example:
  - "The following example demonstrates how to use the HeaderStyle property to specify a custom style for the header row.  \n  \n [!code-vb[FormViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1059_1.aspx)]\n [!code-cs[FormViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1059_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle HeaderStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> que representa o estilo da linha de cabeçalho em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.HeaderStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderTemplate
  id: HeaderTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderTemplate
  nameWithType: FormView.HeaderTemplate
  fullName: System.Web.UI.WebControls.FormView.HeaderTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o conteúdo definido pelo usuário para a linha de cabeçalho em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "A linha de cabeçalho é exibida na parte superior do <xref:System.Web.UI.WebControls.FormView>controlar quando o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>ou propriedade HeaderTemplate for definida.</xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView> Você pode definir sua própria interface de usuário personalizada (UI) para a linha de cabeçalho usando a propriedade HeaderTemplate. Para especificar um modelo personalizado para a linha de cabeçalho, primeiro coloque `<HeaderTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<HeaderTemplate>` marcas. Para controlar o estilo da linha de cabeçalho, use o <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> Como alternativa, você pode simplesmente exibir texto na linha de cabeçalho, definindo o <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>propriedade em vez desta propriedade.</xref:System.Web.UI.WebControls.FormView.HeaderText%2A>      > [!NOTE] > Se ambos os <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>e HeaderTemplate propriedades forem definidas, a propriedade HeaderTemplate prevalece.</xref:System.Web.UI.WebControls.FormView.HeaderText%2A>"
  example:
  - "The following example demonstrates how to use the HeaderTemplate property to define a custom template to render for the header row.  \n  \n [!code-vb[FormViewHeaderTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1060_1.aspx)]\n [!code-cs[FormViewHeaderTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1060_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate HeaderTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> que contém o conteúdo personalizado para a linha de cabeçalho. O valor padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.FormView.HeaderTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HeaderText
  id: HeaderText
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HeaderText
  nameWithType: FormView.HeaderText
  fullName: System.Web.UI.WebControls.FormView.HeaderText
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o texto a ser exibido na linha de cabeçalho de um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "A linha de cabeçalho é exibida na parte superior do <xref:System.Web.UI.WebControls.FormView>controlar quando o HeaderText ou <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>está definida.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView> Use a propriedade HeaderText para especificar o texto a ser exibido na linha de cabeçalho. Para controlar o estilo da linha de cabeçalho, use o <xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.HeaderStyle%2A> Como alternativa, você pode definir sua própria interface de usuário personalizada (UI) para a linha de cabeçalho, definindo o <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>propriedade em vez desta propriedade.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>      > [!NOTE] > Se ambos o HeaderText e <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>propriedades forem definidas, o <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>propriedade prevalece.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>       O valor dessa propriedade, quando definido, podem ser salvos automaticamente em um arquivo de recurso usando uma ferramenta de designer. Para obter mais informações, consulte <xref:System.ComponentModel.LocalizableAttribute>e [globalização e localização](~/add/includes/ajax-current-ext-md.md).</xref:System.ComponentModel.LocalizableAttribute>"
  example:
  - "The following example demonstrates how to use the HeaderText property to specify the text to display in the header row.  \n  \n [!code-vb[FormViewHeaderText#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1225_1.aspx)]\n [!code-cs[FormViewHeaderText#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1225_1.aspx)]"
  syntax:
    content: public virtual string HeaderText { get; set; }
    return:
      type: System.String
      description: "O texto a ser exibido na linha de cabeçalho. O padrão é uma cadeia de caracteres vazia (&quot;&quot;), que indica se esta propriedade não está definida."
  overload: System.Web.UI.WebControls.FormView.HeaderText*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.HorizontalAlign
  id: HorizontalAlign
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: HorizontalAlign
  nameWithType: FormView.HorizontalAlign
  fullName: System.Web.UI.WebControls.FormView.HorizontalAlign
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o alinhamento horizontal de um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle na página."
  remarks: "Use a propriedade HorizontalAlign para especificar o alinhamento horizontal de um <xref:System.Web.UI.WebControls.FormView>controle dentro da página.</xref:System.Web.UI.WebControls.FormView> A tabela a seguir lista os estilos diferentes de alinhamento horizontal.      | O valor de HorizontalAlign | Descrição |   |---------------------------|-----------------|   | `HorizontalAlign.NotSet`| O alinhamento horizontal do controle <xref:System.Web.UI.WebControls.FormView>não foi definido. |   | `HorizontalAlign.Left`| O controle de <xref:System.Web.UI.WebControls.FormView>é alinhado à esquerda na página. |   | `HorizontalAlign.Center`| O controle de <xref:System.Web.UI.WebControls.FormView>é centralizado na página. |   | `HorizontalAlign.Right`| O controle de <xref:System.Web.UI.WebControls.FormView>é alinhado à direita na página. |   | `HorizontalAlign.Justify`| O <xref:System.Web.UI.WebControls.FormView>controle está alinhado com as margens esquerdas e direita da página. |</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the HorizontalAlign property to specify that a <xref:System.Web.UI.WebControls.FormView> control should be centered on the page.  \n  \n [!code-vb[FormViewHorizontalAlign#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1047_1.aspx)]\n [!code-cs[FormViewHorizontalAlign#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1047_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.HorizontalAlign HorizontalAlign { get; set; }
    return:
      type: System.Web.UI.WebControls.HorizontalAlign
      description: "Uma da <xref href=&quot;System.Web.UI.WebControls.HorizontalAlign&quot;> </xref> valores. O padrão é <xref uid=&quot;langword_csharp_HorizontalAlign.NotSet&quot; name=&quot;HorizontalAlign.NotSet&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.HorizontalAlign*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  id: InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InitializePager(FormViewRow,PagedDataSource)
  nameWithType: FormView.InitializePager(FormViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.FormView.InitializePager(FormViewRow,PagedDataSource)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Cria a linha de pager para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "O método InitializePager é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para criar a linha de pager.</xref:System.Web.UI.WebControls.FormView> Cria um <xref:System.Web.UI.WebControls.TableCell>que contém os controles de navegação usando as propriedades de objeto a <xref:System.Web.UI.WebControls.PagedDataSource>objeto contido no `pagedDataSource` parâmetro.</xref:System.Web.UI.WebControls.PagedDataSource> </xref:System.Web.UI.WebControls.TableCell> A célula é adicionada para a linha especificada pelo `row` parâmetro."
  syntax:
    content: protected virtual void InitializePager (System.Web.UI.WebControls.FormViewRow row, System.Web.UI.WebControls.PagedDataSource pagedDataSource);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.FormViewRow
      description: "O <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> que contém a linha de pager."
    - id: pagedDataSource
      type: System.Web.UI.WebControls.PagedDataSource
      description: "Um <xref href=&quot;System.Web.UI.WebControls.PagedDataSource&quot;> </xref> que contém os dados para a página atual."
  overload: System.Web.UI.WebControls.FormView.InitializePager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)
  id: InitializeRow(System.Web.UI.WebControls.FormViewRow)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InitializeRow(FormViewRow)
  nameWithType: FormView.InitializeRow(FormViewRow)
  fullName: System.Web.UI.WebControls.FormView.InitializeRow(FormViewRow)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Inicializa especificado <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> objeto."
  remarks: "O método InitializeRow é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView>Controle Inicializar especificado <xref:System.Web.UI.WebControls.FormViewRow>objeto.</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView> O <xref:System.Web.UI.WebControls.FormViewRow>objeto é inicializado com base no tipo de linha e no estado de linha especificado por seu <xref:System.Web.UI.WebControls.FormViewRow.RowType%2A>e <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A>Propriedades, respectivamente.</xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> </xref:System.Web.UI.WebControls.FormViewRow.RowType%2A> </xref:System.Web.UI.WebControls.FormViewRow> O conteúdo apropriado é adicionado para o <xref:System.Web.UI.WebControls.FormViewRow>objeto.</xref:System.Web.UI.WebControls.FormViewRow> A tabela a seguir descreve como cada tipo de linha é inicializado.      | Tipo de linha | Descrição |   |--------------|-----------------|   | Linha de dados | O conteúdo de <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>, <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>, ou a propriedade <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>são adicionadas ao objeto <xref:System.Web.UI.WebControls.FormViewRow>, dependendo do valor da propriedade <xref:System.Web.UI.WebControls.FormViewRow.RowState%2A>. |   | Linha de dados vazia | O valor da <xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A>propriedade ou o conteúdo do <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>propriedade é adicionada ao <xref:System.Web.UI.WebControls.FormViewRow>objeto, dependendo de qual propriedade está definida.</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataText%2A> </xref:System.Web.UI.WebControls.FormViewRow.RowState%2A> </xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> Se ambas as propriedades são definidas, a propriedade <xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A>terá precedência. |   | Linha de rodapé | O valor da <xref:System.Web.UI.WebControls.FormView.FooterText%2A>propriedade ou o conteúdo do <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>propriedade é adicionada ao <xref:System.Web.UI.WebControls.FormViewRow>objeto, dependendo de qual propriedade está definida.</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> </xref:System.Web.UI.WebControls.FormView.FooterText%2A> </xref:System.Web.UI.WebControls.FormView.EmptyDataTemplate%2A> Se ambas as propriedades são definidas, a propriedade <xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A>terá precedência. |   | Linha de cabeçalho | O valor da <xref:System.Web.UI.WebControls.FormView.HeaderText%2A>propriedade ou o conteúdo do <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>propriedade é adicionada ao <xref:System.Web.UI.WebControls.FormViewRow>objeto, dependendo de qual propriedade está definida.</xref:System.Web.UI.WebControls.FormViewRow> </xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> </xref:System.Web.UI.WebControls.FormView.HeaderText%2A> </xref:System.Web.UI.WebControls.FormView.FooterTemplate%2A> Se ambas as propriedades são definidas, a propriedade <xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A>terá precedência. |      > [!NOTE] > Esse método não inicializar a linha de pager.</xref:System.Web.UI.WebControls.FormView.HeaderTemplate%2A> Para criar a linha de pager, use o <xref:System.Web.UI.WebControls.FormView.InitializePager%2A>método.</xref:System.Web.UI.WebControls.FormView.InitializePager%2A>"
  syntax:
    content: protected virtual void InitializeRow (System.Web.UI.WebControls.FormViewRow row);
    parameters:
    - id: row
      type: System.Web.UI.WebControls.FormViewRow
      description: "O <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> ao inicializar."
  overload: System.Web.UI.WebControls.FormView.InitializeRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)
  id: InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertItem(Boolean)
  nameWithType: FormView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.InsertItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Insere o registro atual na fonte de dados."
  remarks: "Quando o <xref:System.Web.UI.WebControls.FormView>controle está no modo de inserção, use o método InsertItem programaticamente inserir o registro atual na fonte de dados.</xref:System.Web.UI.WebControls.FormView> Esse método é geralmente usado quando você precisa inserir o registro atual da fora do <xref:System.Web.UI.WebControls.FormView>controlar, tais como um controle diferente na página.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > O <xref:System.Web.UI.WebControls.FormView>controle deve estar no modo de inserção quando esse método é chamado; caso contrário, um <xref:System.Web.HttpException>é gerada.</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.FormView>       Para especificar se a validação de página será executada antes da operação de inserção, use o `causesValidation` parâmetro. Chamar esse método também gera o <xref:System.Web.UI.WebControls.FormView.ItemInserted>e <xref:System.Web.UI.WebControls.FormView.ItemInserting>eventos.</xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView.ItemInserted>"
  example:
  - "The following example demonstrates how to use the InsertItem method to programmatically insert the current record in a <xref:System.Web.UI.WebControls.FormView> control in the data source.  \n  \n [!code-cs[FormViewInsertItem#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_157_1.aspx)]\n [!code-vb[FormViewInsertItem#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_157_1.aspx)]"
  syntax:
    content: public virtual void InsertItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para executar a validação de página quando o método é chamado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.InsertItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Este método é chamado quando o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle não está no modo de inserção.       - ou - <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> objeto associado a <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle é nulo."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertItemTemplate
  id: InsertItemTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertItemTemplate
  nameWithType: FormView.InsertItemTemplate
  fullName: System.Web.UI.WebControls.FormView.InsertItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o conteúdo personalizado para um item no modo de inserção."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controle processa um modelo diferente para a linha de dados com base no modo atual do controle (especificado pelo <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>propriedade).</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> </xref:System.Web.UI.WebControls.FormView> A tabela a seguir mostra o modelo é usado para cada modo.      | Modo | Modelo processado |   |----------|-----------------------|   | Editar | <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|   | Inserir | InsertItemTemplate |   | Somente leitura | <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|       Use a propriedade InsertItemTemplate para definir sua própria interface de usuário (UI) para os dados de linha quando o <xref:System.Web.UI.WebControls.FormView>controle está no modo de inserção.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> O modelo de item de inserção geralmente contém os controles de entrada para o usuário digite os valores para o novo registro, bem como para inserir o registro e cancelar a operação de inserção de botões de comando.       Para especificar o modelo personalizado, o primeiro lugar `<InsertItemTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<InsertItemTemplate>` marcas. Usando uma expressão de associação bidirecional, você pode associar um campo com um controle de entrada. Quando um registro é inserido, o <xref:System.Web.UI.WebControls.FormView>controle automaticamente extrai o valor do campo de controle de entrada associado.</xref:System.Web.UI.WebControls.FormView> Para obter mais informações sobre expressões de associação bidirecional, consulte [para bancos de dados de associação](http://msdn.microsoft.com/en-us/ab7b2846-975b-4057-a948-45527497c742). Para criar botões de comando que executam o cancelamento interno e operações de inserção, adicione um controle de botão de comando para o modelo com seu `CommandName` propriedade definida como um dos valores listados na tabela a seguir.      | Tipo de botão de comando | Valor CommandName |   |-------------------------|-----------------------|   | Cancelar | &quot; Cancelar &quot;|   | Inserir | &quot; Inserir &quot;|       Você pode controlar a aparência do modelo de item usando o <xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.InsertRowStyle%2A>"
  example:
  - "The following example demonstrates how to define a custom template for a data row in insert mode.  \n  \n [!code-vb[FormViewInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_158_1.aspx)]\n [!code-cs[FormViewInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_158_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate InsertItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> que contém o conteúdo personalizado para os dados de linha quando o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle está no modo de inserção. O valor padrão é null, o que indica que essa propriedade não está definida."
  overload: System.Web.UI.WebControls.FormView.InsertItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertMethod
  id: InsertMethod
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertMethod
  nameWithType: FormView.InsertMethod
  fullName: System.Web.UI.WebControls.FormView.InsertMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do método na página que é chamada quando o controle executa uma operação de inserção."
  remarks: "Para uma série de tutoriais sobre como usar a associação de modelo com formulários da Web, consulte [modelo de associação e formulários da Web](http://go.microsoft.com/fwlink/?LinkId=286117)."
  syntax:
    content: public virtual string InsertMethod { get; set; }
    return:
      type: System.String
      description: "O nome do método na página que é chamado quando o controle executa uma operação de inserção."
  overload: System.Web.UI.WebControls.FormView.InsertMethod*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.InsertRowStyle
  id: InsertRowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: InsertRowStyle
  nameWithType: FormView.InsertRowStyle
  fullName: System.Web.UI.WebControls.FormView.InsertRowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> objeto que permite definir a aparência da linha de dados em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar quando o controle está no modo de inserção."
  remarks: "Use a propriedade InsertRowStyle para controlar a aparência dos dados de linha quando um <xref:System.Web.UI.WebControls.FormView>controle está no modo de inserção.</xref:System.Web.UI.WebControls.FormView> Quando o <xref:System.Web.UI.WebControls.FormView>controle está no modo de inserção, a linha de dados exibe o conteúdo definido pelo usuário especificado pelo <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle>objeto retorna.</xref:System.Web.UI.WebControls.TableItemStyle>       As propriedades podem ser definidas usando um dos métodos a seguir:-colocar um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView>controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle>objeto (por exemplo, `InsertRowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -Aninhar uma `<InsertRowStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>       As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `InsertRowStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado."
  example:
  - "The following example demonstrates how to use the InsertRowStyle property to specify a custom style for a data row when a <xref:System.Web.UI.WebControls.FormView> control is in insert mode.  \n  \n [!code-vb[FormViewInsertItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1317_1.aspx)]\n [!code-cs[FormViewInsertItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1317_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle InsertRowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> que representa o estilo da linha de dados em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar quando o controle está no modo de inserção."
  overload: System.Web.UI.WebControls.FormView.InsertRowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.IsBindableType(System.Type)
  id: IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: IsBindableType(Type)
  nameWithType: FormView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.FormView.IsBindableType(Type)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se o tipo de dados especificado pode ser associado a um campo no <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "O método IsBindableType é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para determinar se o tipo de dados especificado pode ser associado a um campo no controle.</xref:System.Web.UI.WebControls.FormView> O <xref:System.Web.UI.WebControls.FormView>controle suporta os seguintes tipos de dados: - primitivo todos os tipos de dados, como <xref:System.Boolean>, <xref:System.Byte>, <xref:System.Int32>e assim por diante.</xref:System.Int32> </xref:System.Byte> </xref:System.Boolean> </xref:System.Web.UI.WebControls.FormView>      -   <xref:System.DateTime>      -   <xref:System.Decimal>      -   <xref:System.Guid>      -   <xref:System.String></xref:System.String></xref:System.Guid></xref:System.Decimal></xref:System.DateTime>"
  syntax:
    content: public virtual bool IsBindableType (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "Um <xref:System.Type>que representa o tipo de dados para verificar.</xref:System.Type>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o tipo de dados especificado pode ser associado a um campo no <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.IsBindableType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemCommand
  id: ItemCommand
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemCommand
  nameWithType: FormView.ItemCommand
  fullName: System.Web.UI.WebControls.FormView.ItemCommand
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um botão dentro de um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle é clicado."
  remarks: "O evento ItemCommand é gerado quando um botão dentro de <xref:System.Web.UI.WebControls.FormView>controle é clicado.</xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada sempre que esse evento ocorre.       Botões dentro de um <xref:System.Web.UI.WebControls.FormView>controle também pode invocar alguns dos recursos internos do controle.</xref:System.Web.UI.WebControls.FormView> Para executar uma dessas operações, defina o `CommandName` propriedade de um botão para um dos valores na tabela a seguir.      | Valor CommandName | Descrição |   |-----------------------|-----------------|   |&quot; Cancelar &quot;| Cancela uma operação de edição ou de inserção e retorna o <xref:System.Web.UI.WebControls.FormView>controle para o modo especificado pelo <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Gera o <xref:System.Web.UI.WebControls.FormView.ModeChanged>e eventos <xref:System.Web.UI.WebControls.FormView.ModeChanging>. |   |&quot; Excluir &quot;| Exclui o registro atual.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> Gera o <xref:System.Web.UI.WebControls.FormView.ItemDeleted>e eventos <xref:System.Web.UI.WebControls.FormView.ItemDeleting>. |   |&quot; Editar &quot;| Coloca o <xref:System.Web.UI.WebControls.FormView>controle no modo de edição.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView.ItemDeleted> Gera o <xref:System.Web.UI.WebControls.FormView.ModeChanged>e eventos <xref:System.Web.UI.WebControls.FormView.ModeChanging>. |   |&quot; Inserir &quot;| Insere o registro atual na fonte de dados.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> Gera o <xref:System.Web.UI.WebControls.FormView.ItemInserted>e eventos <xref:System.Web.UI.WebControls.FormView.ItemInserting>. |   |&quot; Novo &quot;| Coloca o <xref:System.Web.UI.WebControls.FormView>controle no modo de inserção.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView.ItemInserted> Gera o <xref:System.Web.UI.WebControls.FormView.ModeChanged>e eventos <xref:System.Web.UI.WebControls.FormView.ModeChanging>. |   |&quot; Página &quot;| Executa uma operação de paginação.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView.ModeChanged> Definir o `CommandArgument` propriedade do botão para &quot;Primeira&quot;, &quot;último&quot;, &quot;Próximo&quot;, &quot;Anterior&quot; ou um número de página para especificar o tipo de operação de paginação para executar. Gera o <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>e eventos <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>. |   |&quot; Atualização &quot;| Atualiza o registro atual na fonte de dados.</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> </xref:System.Web.UI.WebControls.FormView.PageIndexChanged> Gera o <xref:System.Web.UI.WebControls.FormView.ItemUpdated>e eventos <xref:System.Web.UI.WebControls.FormView.ItemUpdating>. |       Embora o evento ItemCommand é gerado quando um botão listado na tabela anterior é clicado, é recomendável que você use os eventos listados na tabela para a operação.</xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView.ItemUpdated>       Um <xref:System.Web.UI.WebControls.FormViewCommandEventArgs>objeto é passado para o método de manipulação de eventos, que permite que você determine o nome do comando e o argumento de comando do botão clicado.</xref:System.Web.UI.WebControls.FormViewCommandEventArgs> Para determinar o nome do comando e o argumento de comando, use o <xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A>e <xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A>Propriedades, respectivamente.</xref:System.Web.UI.WebControls.CommandEventArgs.CommandArgument%2A> </xref:System.Web.UI.WebControls.CommandEventArgs.CommandName%2A> Você também pode acessar o controle que disparou o evento usando o <xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>propriedade.</xref:System.Web.UI.WebControls.DetailsViewCommandEventArgs.CommandSource%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use the ItemCommand event to handle a button click in a <xref:System.Web.UI.WebControls.FormView> control. When the user clicks the Add button, the currently displayed item is added to a <xref:System.Web.UI.WebControls.ListBox> control.  \n  \n [!code-cs[FormViewItemCommandEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_135_1.aspx)]\n [!code-vb[FormViewItemCommandEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_135_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewCommandEventHandler ItemCommand;
    return:
      type: System.Web.UI.WebControls.FormViewCommandEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemCreated
  id: ItemCreated
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemCreated
  nameWithType: FormView.ItemCreated
  fullName: System.Web.UI.WebControls.FormView.ItemCreated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre depois que todas as linhas são criadas em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "O evento ItemCreated é gerado depois que todas as linhas são criadas em um <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Isso pode ocorrer quando o controle é renderizado primeiro, ou quando o usuário navega para outro registro. Você pode usar esse evento para fornecer um método de manipulação de eventos que executa uma rotina personalizada, como adicionar à ou modificar o conteúdo de uma linha, sempre que esse evento ocorre.      > [!NOTE] > ItemCreated o evento ocorre antes do <xref:System.Web.UI.WebControls.FormView>controle está associado aos dados.</xref:System.Web.UI.WebControls.FormView> Para modificar o valor de um campo associado, use o <xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>evento.</xref:System.Web.UI.WebControls.BaseDataBoundControl.DataBound>       Você pode acessar as linhas de cabeçalho, rodapé e pager no <xref:System.Web.UI.WebControls.FormView>controle usando o <xref:System.Web.UI.WebControls.FormView.HeaderRow%2A>, <xref:System.Web.UI.WebControls.FormView.FooterRow%2A>, <xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A>, ou <xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A>Propriedades, respectivamente.</xref:System.Web.UI.WebControls.FormView.BottomPagerRow%2A> </xref:System.Web.UI.WebControls.FormView.TopPagerRow%2A> </xref:System.Web.UI.WebControls.FormView.FooterRow%2A> </xref:System.Web.UI.WebControls.FormView.HeaderRow%2A> </xref:System.Web.UI.WebControls.FormView> Para acessar a linha de dados, use o <xref:System.Web.UI.WebControls.FormView.Row%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.Row%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use the ItemCreated event to update the text of a <xref:System.Web.UI.WebControls.Label> control contained in the pager row.  \n  \n [!code-vb[FormViewItemCreated#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_13_1.aspx)]\n [!code-cs[FormViewItemCreated#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_13_1.aspx)]"
  syntax:
    content: public event EventHandler ItemCreated;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemDeleted
  id: ItemDeleted
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemDeleted
  nameWithType: FormView.ItemDeleted
  fullName: System.Web.UI.WebControls.FormView.ItemDeleted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um botão de exclusão em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle é clicado, mas após a operação de exclusão."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controle gera o evento ItemDeleted quando um botão de exclusão (um botão com sua `CommandName` propriedade definida como &quot;Excluir&quot;) dentro do controle é clicado, mas após o <xref:System.Web.UI.WebControls.FormView>controle exclui o registro.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como verificar os resultados de uma operação de exclusão, sempre que esse evento ocorre.       Um <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs>objeto é passado para o método de manipulação de eventos, que permite que você determine o número de registros afetados e todas as exceções que possam ter ocorrido.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs> Para determinar o número de registros afetados pela operação de exclusão, use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.AffectedRows%2A> Use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A>propriedade para determinar se todas as exceções ocorreram.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Exception%2A> Você também pode indicar se a exceção foi tratada no método de manipulação de eventos, definindo o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.ExceptionHandled%2A> Se você quiser acessar os pares de nome/valor dos campos de chave e campos de não-chave do registro excluído, use o <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>e <xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A>Propriedades, respectivamente.</xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Values%2A> </xref:System.Web.UI.WebControls.FormViewDeletedEventArgs.Keys%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use the ItemDeleted event to determine whether an exception occurred during a delete operation.  \n  \n [!code-vb[FormViewDeletedEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_35_1.aspx)]\n [!code-cs[FormViewDeletedEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_35_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewDeletedEventHandler ItemDeleted;
    return:
      type: System.Web.UI.WebControls.FormViewDeletedEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemDeleting
  id: ItemDeleting
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemDeleting
  nameWithType: FormView.ItemDeleting
  fullName: System.Web.UI.WebControls.FormView.ItemDeleting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um botão de exclusão em uma <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle é clicado, mas antes da operação de exclusão."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controle gera o evento ItemDeleting quando um botão de exclusão (um botão com sua `CommandName` propriedade definida como &quot;Excluir&quot;) dentro do controle é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView>controle exclui o registro.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como verificar um registro antes de excluí-lo, sempre que esse evento ocorre.       Um <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs>objeto é passado para o método de manipulação de eventos, que permite que você determine o índice do registro que está sendo excluído e para indicar que a operação de exclusão deve ser cancelada.</xref:System.Web.UI.WebControls.FormViewDeleteEventArgs> Para determinar o índice de um registro, use o <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.RowIndex%2A> Para cancelar a operação de exclusão, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Você também pode acessar os campos de não-chave e os campos de chave usando o <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A>e <xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A>Propriedades, respectivamente.</xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Values%2A> </xref:System.Web.UI.WebControls.FormViewDeleteEventArgs.Keys%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use the ItemDeleting event to cancel a delete operation.  \n  \n [!code-cs[FormViewDeleteEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_33_1.aspx)]\n [!code-vb[FormViewDeleteEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_33_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewDeleteEventHandler ItemDeleting;
    return:
      type: System.Web.UI.WebControls.FormViewDeleteEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemInserted
  id: ItemInserted
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemInserted
  nameWithType: FormView.ItemInserted
  fullName: System.Web.UI.WebControls.FormView.ItemInserted
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um botão de inserção dentro de um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle é clicado, mas após a operação de inserção."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controle gera o evento ItemInserted quando um botão de inserção (um botão com sua `CommandName` propriedade definida como &quot;Inserir&quot;) dentro do controle é clicado, mas após o <xref:System.Web.UI.WebControls.FormView>controle inserir o registro.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como verificar os resultados de uma operação de inserção, sempre que esse evento ocorre.       Um <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs>objeto é passado para o método de manipulação de eventos, que permite que você determine o número de registros afetados e todas as exceções que possam ter ocorrido.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs> Para determinar o número de registros afetados pela operação de inserção, use o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.AffectedRows%2A> Use o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A>propriedade para determinar se todas as exceções ocorreram.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Exception%2A> Você também pode indicar se a exceção foi tratada no método de manipulação de eventos, definindo o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.ExceptionHandled%2A> Se você precisar acessar os valores do registro inserido, use o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.Values%2A>       Por padrão, o <xref:System.Web.UI.WebControls.FormView>o controle retorna ao modo especificado pelo <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>propriedade após uma operação de inserção.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Para manter o <xref:System.Web.UI.WebControls.FormView>controlar no modo de inserção, defina o <xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A>propriedade `true`.</xref:System.Web.UI.WebControls.FormViewInsertedEventArgs.KeepInInsertMode%2A> </xref:System.Web.UI.WebControls.FormView>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use the ItemInserted event to determine whether an exception occurred during an insert operation.  \n  \n [!code-cs[FormViewInsertedEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_91_1.aspx)]\n [!code-vb[FormViewInsertedEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_91_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewInsertedEventHandler ItemInserted;
    return:
      type: System.Web.UI.WebControls.FormViewInsertedEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemInserting
  id: ItemInserting
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemInserting
  nameWithType: FormView.ItemInserting
  fullName: System.Web.UI.WebControls.FormView.ItemInserting
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um botão de inserção dentro de um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle é clicado, mas antes da operação de inserção."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controle gera o evento ItemInserting quando um botão de inserção (um botão com sua `CommandName` propriedade definida como &quot;Inserir&quot;) dentro do controle é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView>controle inserir o registro.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como os valores de um registro antes de inseri-la na fonte de dados, sempre que esse evento ocorre de codificação HTML.       Um <xref:System.Web.UI.WebControls.FormViewInsertEventArgs>objeto é passado para o método de manipulação de eventos, que permite que você determine o valor de um argumento opcional comando enviado para o <xref:System.Web.UI.WebControls.FormView>controle e indicar que a operação de inserção deve ser cancelada.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewInsertEventArgs> O valor do argumento de comando corresponde do `CommandArgument` propriedade do botão de inserção. Quando o `CommandArgument` propriedade do botão de inserção é definida, use o <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A>propriedade para determinar o valor do argumento de comando.</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.CommandArgument%2A> Para cancelar a operação de inserção, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Você também pode ler ou modificar os valores de campo para o novo registro usando o <xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewInsertEventArgs.Values%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use the ItemInserting event to cancel an insert operation.  \n  \n [!code-vb[FormViewInsertEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_61_1.aspx)]\n [!code-cs[FormViewInsertEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_61_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewInsertEventHandler ItemInserting;
    return:
      type: System.Web.UI.WebControls.FormViewInsertEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemTemplate
  id: ItemTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemTemplate
  nameWithType: FormView.ItemTemplate
  fullName: System.Web.UI.WebControls.FormView.ItemTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o conteúdo personalizado para a linha de dados em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar quando o controle está no modo somente leitura."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controle processa um modelo diferente para a linha de dados com base no modo atual do controle (especificado pelo <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>propriedade).</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> </xref:System.Web.UI.WebControls.FormView> A tabela a seguir mostra o modelo é usado para cada modo.      | Modo | Modelo processado |   |----------|-----------------------|   | Editar | <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|   | Inserir | <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|   | Somente leitura | ItemTemplate |       Use a propriedade ItemTemplate para definir sua própria interface de usuário (UI) para os dados de linha quando o <xref:System.Web.UI.WebControls.FormView>controle está no modo somente leitura.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Normalmente, o modelo de item contém controles para exibir os valores de campo de um registro, bem como botões Editar, inserir e excluir um registro de comando.       Para especificar o modelo personalizado, o primeiro lugar `<ItemTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<ItemTemplate>` marcas. Para exibir os valores de campo da fonte de dados associada ao controle, use uma expressão de associação de dados. Para obter mais informações sobre expressões de associação de dados, consulte [sintaxe de expressão de associação de dados](http://msdn.microsoft.com/en-us/676beb1d-ddfa-4153-bba8-3c86dcb7ceca). Para criar botões de comando que executam o interno excluir, editar e novas operações de registro, adicione um controle de botão de comando para o modelo com seu `CommandName` propriedade definida como um dos valores listados na tabela a seguir.      | Tipo de botão de comando | Valor CommandName |   |-------------------------|-----------------------|   | Excluir | &quot; Excluir &quot;|   | Editar | &quot; Editar &quot;|   | Novo | &quot; Novo &quot;|       Você pode controlar a aparência do modelo de item usando o <xref:System.Web.UI.WebControls.FormView.RowStyle%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.RowStyle%2A>"
  example:
  - "The following example demonstrates how to define a custom template for a data row in read-only mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_192_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_192_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate ItemTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> que contém o conteúdo personalizado para os dados de linha quando o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle está no modo somente leitura. O valor padrão é null, o que indica que essa propriedade não está definida."
  overload: System.Web.UI.WebControls.FormView.ItemTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemUpdated
  id: ItemUpdated
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemUpdated
  nameWithType: FormView.ItemUpdated
  fullName: System.Web.UI.WebControls.FormView.ItemUpdated
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um botão de atualização em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle é clicado, mas após a operação de atualização."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controle gera o evento ItemUpdated quando um botão de atualização (um botão com sua `CommandName` propriedade definida como &quot;Atualização&quot;) dentro do controle é clicado, mas após o <xref:System.Web.UI.WebControls.FormView>controle atualiza o registro.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como verificar os resultados de uma operação de atualização, sempre que esse evento ocorre.       Um <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs>objeto é passado para o método de manipulação de eventos, que permite que você determine o número de registros afetados e todas as exceções que possam ter ocorrido.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs> Para determinar o número de registros afetados pela operação de atualização, use o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.AffectedRows%2A> Use o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A>propriedade para determinar se todas as exceções ocorreram.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Exception%2A> Você também pode indicar se a exceção foi tratada no método de manipulação de eventos, definindo o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.ExceptionHandled%2A> Se você precisar acessar os valores de campo de chave de registro atualizado, use o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> Os valores de campo de não-chave originais e atualizados podem ser acessados usando o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>e <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A>Propriedades, respectivamente.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>       Por padrão, o <xref:System.Web.UI.WebControls.FormView>o controle retorna ao modo especificado pelo <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>propriedade após uma operação de atualização.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Para manter o <xref:System.Web.UI.WebControls.FormView>controlar no modo de edição, defina a <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A>propriedade `true`.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.KeepInEditMode%2A> </xref:System.Web.UI.WebControls.FormView>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use the ItemUpdated event to determine whether an exception occurred during an update operation.  \n  \n [!code-vb[FormViewUpdatedEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_100_1.aspx)]\n [!code-cs[FormViewUpdatedEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_100_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewUpdatedEventHandler ItemUpdated;
    return:
      type: System.Web.UI.WebControls.FormViewUpdatedEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ItemUpdating
  id: ItemUpdating
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ItemUpdating
  nameWithType: FormView.ItemUpdating
  fullName: System.Web.UI.WebControls.FormView.ItemUpdating
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando um botão de atualização em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle é clicado, mas antes da operação de atualização."
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controle gera o evento ItemUpdating quando um botão de atualização (um botão com seu `CommandName` propriedade definida como &quot;Atualização&quot;) dentro do controle é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView>controle atualiza o registro.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como os valores de um registro antes de atualizá-lo na fonte de dados, sempre que esse evento ocorre de codificação HTML.       Um <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs>objeto é passado para o método de manipulação de eventos, que permite que você determine o valor de um argumento opcional comando enviado para o <xref:System.Web.UI.WebControls.FormView>controle e indicar que a operação de atualização deve ser cancelada.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewUpdateEventArgs> O valor do argumento de comando corresponde do `CommandArgument` propriedade do botão de atualização. Quando o `CommandArgument` é definir a propriedade do botão de atualização, use o <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A>propriedade para determinar o valor do argumento de comando.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.CommandArgument%2A> Para cancelar a operação de atualização, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A> Você também pode ler ou modificar os novos valores inseridos pelo usuário usando o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A>e <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>Propriedades.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.Keys%2A> O <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A>propriedade contém os campos de chave, enquanto o <xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A>propriedade contém os campos de não chave.</xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.NewValues%2A> </xref:System.Web.UI.WebControls.FormViewUpdateEventArgs.Keys%2A> Se você precisar acessar os valores de campo de chave não original, use o <xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewUpdatedEventArgs.OldValues%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use the ItemUpdating event to cancel an update operation.  \n  \n [!code-cs[FormViewUpdateEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_124_1.aspx)]\n [!code-vb[FormViewUpdateEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_124_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewUpdateEventHandler ItemUpdating;
    return:
      type: System.Web.UI.WebControls.FormViewUpdateEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.LoadControlState(System.Object)
  id: LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: LoadControlState(Object)
  nameWithType: FormView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadControlState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carrega o estado do <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> propriedades de controle que precisam ser mantidos, mesmo quando o <xref:System.Web.UI.Control.EnableViewState*>estiver definida como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Web.UI.Control.EnableViewState*>"
  remarks: "O método LoadControlState é usado para carregar o estado do <xref:System.Web.UI.WebControls.FormView>Propriedades de controle que precisam ser mantidos, mesmo quando o <xref:System.Web.UI.Control.EnableViewState%2A>estiver definida como `false`.</xref:System.Web.UI.Control.EnableViewState%2A> </xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > Esse método é usado principalmente por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void LoadControlState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um <xref:System.Object>que representa o estado de <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle.</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.LoadControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.LoadViewState(System.Object)
  id: LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: LoadViewState(Object)
  nameWithType: FormView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadViewState(Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Carrega o estado de exibição salvo anteriormente do <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "O método LoadViewState é usado para carregar o estado de exibição salvo anteriormente do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > Esse método é usado principalmente por desenvolvedores de controle ao estender o <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void LoadViewState (object savedState);
    parameters:
    - id: savedState
      type: System.Object
      description: "Um <xref:System.Object>que representa o estado de <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle.</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.LoadViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ModeChanged
  id: ModeChanged
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ModeChanged
  nameWithType: FormView.ModeChanged
  fullName: System.Web.UI.WebControls.FormView.ModeChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar comutadores entre o modo somente leitura, inserir e editar, mas depois que o modo é alterado."
  remarks: "O evento ModeChanged é gerado quando um <xref:System.Web.UI.WebControls.FormView>tentativas de controle alternar entre o modo somente leitura, inserir e editar, mas depois que o modo for alterado.</xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como a sincronização de <xref:System.Web.UI.WebControls.FormView>controle com outro controle, sempre que esse evento ocorre.</xref:System.Web.UI.WebControls.FormView>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use the ModeChanged event to display the current mode in the header row of a <xref:System.Web.UI.WebControls.FormView> control.  \n  \n [!code-vb[FormViewModeChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_127_1.aspx)]\n [!code-cs[FormViewModeChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_127_1.aspx)]"
  syntax:
    content: public event EventHandler ModeChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ModeChanging
  id: ModeChanging
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ModeChanging
  nameWithType: FormView.ModeChanging
  fullName: System.Web.UI.WebControls.FormView.ModeChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> comutadores entre o modo somente leitura, inserir e editar, mas antes das alterações de modo de controle."
  remarks: "O evento ModeChanging é gerado quando um <xref:System.Web.UI.WebControls.FormView>tentativas de controle alternar entre o modo somente leitura, inserir e editar, mas antes que o modo for alterado.</xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como configurar o <xref:System.Web.UI.WebControls.FormView>de controle para um modo específico ou cancelar a alteração do modo, sempre que esse evento ocorre.</xref:System.Web.UI.WebControls.FormView>       Um <xref:System.Web.UI.WebControls.FormViewModeEventArgs>objeto é passado para o método de manipulação de eventos, que permite que você determine o modo no qual o <xref:System.Web.UI.WebControls.FormView>controle está alternando para determinar se o evento de ModeChanging foi gerado como resultado do usuário cancelar uma operação de edição ou para indicar que uma operação de inserção deve ser cancelada.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewModeEventArgs> Para determinar o novo modo, use o <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> Você também pode usar o <xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A>propriedade para alternar para um modo alternativo definindo-a como uma da <xref:System.Web.UI.WebControls.FormViewMode>valores de enumeração.</xref:System.Web.UI.WebControls.FormViewMode> </xref:System.Web.UI.WebControls.FormViewModeEventArgs.NewMode%2A> Use o <xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A>propriedade para determinar se o usuário cancelou uma operação de edição.</xref:System.Web.UI.WebControls.FormViewModeEventArgs.CancelingEdit%2A> Para cancelar uma operação de inserção, defina o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade `true`.</xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use the ModeChanging event to hide the pager row when the <xref:System.Web.UI.WebControls.FormView> control transitions to edit mode.  \n  \n [!code-vb[FormViewModeEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_111_1.aspx)]\n [!code-cs[FormViewModeEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_111_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewModeEventHandler ModeChanging;
    return:
      type: System.Web.UI.WebControls.FormViewModeEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName
  id: ModifiedOuterTableStylePropertyName
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: ModifiedOuterTableStylePropertyName()
  nameWithType: FormView.ModifiedOuterTableStylePropertyName()
  fullName: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina se as regras de estilo CSS específica da tabela que estão associados a <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle são definidos para seus valores padrão."
  remarks: "As regras de estilo CSS específica da tabela são definidas para seus valores padrão usando o <xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>, <xref:System.Web.UI.WebControls.FormView.CellPadding%2A>, <xref:System.Web.UI.WebControls.FormView.CellSpacing%2A>, <xref:System.Web.UI.WebControls.FormView.GridLines%2A>, <xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A>e <xref:System.Web.UI.WebControls.Style.Font%2A>Propriedades.</xref:System.Web.UI.WebControls.Style.Font%2A> </xref:System.Web.UI.WebControls.FormView.HorizontalAlign%2A> </xref:System.Web.UI.WebControls.FormView.GridLines%2A> </xref:System.Web.UI.WebControls.FormView.CellSpacing%2A> </xref:System.Web.UI.WebControls.FormView.CellPadding%2A> </xref:System.Web.UI.WebControls.FormView.BackImageUrl%2A>"
  syntax:
    content: protected virtual string ModifiedOuterTableStylePropertyName ();
    parameters: []
    return:
      type: System.String
      description: "As regras de estilo CSS padrão que estão associadas a <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)
  id: OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: FormView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnBubbleEvent(Object,EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Manipula um evento passado a hierarquia de controle."
  remarks: "O <xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName>método é usado pelo controle opcionalmente manipular eventos passados a hierarquia de controle, o <xref:System.Web.UI.Control.RaiseBubbleEvent%2A>método.</xref:System.Web.UI.Control.RaiseBubbleEvent%2A> </xref:System.Web.UI.Control.OnBubbleEvent%2A?displayProperty=fullName> Determina se é manipular um evento examinando as propriedades do <xref:System.EventArgs>objeto contido no `e` parâmetro.</xref:System.EventArgs> Quando um evento precisa ser tratada, o método executa a ação apropriada. Outros eventos são ignorados e passados a hierarquia de controle. Este método indica se deve transmitir o evento até a hierarquia de controle por meio de seu valor de retorno.       O <xref:System.Web.UI.WebControls.FormView>controle substitui a implementação base desse método para executar a ação apropriada quando um dos botões reconhecidos pelo controle é clicado.</xref:System.Web.UI.WebControls.FormView> A seguinte tabela lista os botões de comando que o <xref:System.Web.UI.WebControls.FormView>controle reconhece.</xref:System.Web.UI.WebControls.FormView>      | Botão | Valor CommandName | Descrição |   |------------|-----------------------|-----------------|   | Cancelar | &quot; Cancelar &quot;| Usado na atualização ou inserção de operações para cancelar a operação e descartar os valores inseridos pelo usuário. O <xref:System.Web.UI.WebControls.FormView>controlar retorna ao modo especificado pela propriedade <xref:System.Web.UI.WebControls.FormView.DefaultMode%2A>. |   | Excluir | &quot; Excluir &quot;| Usado em operações de exclusão para excluir o registro exibido da fonte de dados.</xref:System.Web.UI.WebControls.FormView.DefaultMode%2A> </xref:System.Web.UI.WebControls.FormView> Gera o <xref:System.Web.UI.WebControls.FormView.ItemDeleting>e eventos <xref:System.Web.UI.WebControls.FormView.ItemDeleted>. |   | Editar | &quot; Editar &quot;| Usado em operações de atualização colocar o <xref:System.Web.UI.WebControls.FormView>controle no modo de edição.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView.ItemDeleting> O conteúdo especificado na propriedade <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>é exibido para a linha de dados. |   | Inserir | &quot; Inserir &quot;| Usado em operações de inserção para a tentativa de inserir um novo registro na fonte de dados com os valores fornecidos pelo usuário.</xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A> Gera o <xref:System.Web.UI.WebControls.FormView.ItemInserting>e eventos <xref:System.Web.UI.WebControls.FormView.ItemInserted>. |   | Novo | &quot; Novo &quot;| Usado em operações de inserção para colocar o <xref:System.Web.UI.WebControls.FormView>controle no modo de inserção.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView.ItemInserting> O conteúdo especificado na propriedade <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>é exibido para a linha de dados. |   | Página | &quot; Página &quot;| Usada em operações de paginação para representar um botão na linha de pager que realiza a paginação.</xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> Para especificar a operação de paginação, defina a `CommandArgument` propriedade do botão &quot;Avançar&quot;, &quot;Anterior&quot;, &quot;First&quot;, &quot;Último&quot; ou o índice da página para o qual navegar. Gera o <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>e <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>eventos.</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> </xref:System.Web.UI.WebControls.FormView.PageIndexChanging> **Observação:** esse tipo de botão normalmente é usado apenas no modelo de pager. |   | Atualização | &quot; Atualização &quot;| Usado em operações de atualização para tentar atualizar o registro exibido na fonte de dados com os valores fornecidos pelo usuário. Gera o <xref:System.Web.UI.WebControls.FormView.ItemUpdating>e eventos <xref:System.Web.UI.WebControls.FormView.ItemUpdated>. |       Esta versão do método retorna `true` quando um desses botões é tratado.</xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView.ItemUpdating> Para obter mais informações sobre a propagação de eventos, consulte [NIB: eventos e delegados](http://msdn.microsoft.com/en-us/d98fd58b-fa4f-4598-8378-addf4355a115)."
  syntax:
    content: protected override bool OnBubbleEvent (object source, EventArgs e);
    parameters:
    - id: source
      type: System.Object
      description: "A origem do evento."
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar que o evento deve ser passado adicional da hierarquia de controle; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.OnBubbleEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)
  id: OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnInit(EventArgs)
  nameWithType: FormView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnInit(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.Control.Init&quot;> </xref> eventos."
  remarks: "O método OnInit é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.Control.Init>evento.</xref:System.Web.UI.Control.Init> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnInit também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected override void OnInit (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnInit*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  id: OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemCommand(FormViewCommandEventArgs)
  nameWithType: FormView.OnItemCommand(FormViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCommand(FormViewCommandEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.FormView.ItemCommand&quot;> </xref> eventos."
  remarks: "O método OnItemCommand é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemCommand>evento.</xref:System.Web.UI.WebControls.FormView.ItemCommand> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnItemCommand também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnItemCommand (System.Web.UI.WebControls.FormViewCommandEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewCommandEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewCommandEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.FormView.OnItemCommand*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)
  id: OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemCreated(EventArgs)
  nameWithType: FormView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCreated(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.FormView.ItemCreated&quot;> </xref> eventos."
  remarks: "O método OnItemCreated é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemCreated>evento.</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnItemCreated também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnItemCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnItemCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  id: OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemDeleted(FormViewDeletedEventArgs)
  nameWithType: FormView.OnItemDeleted(FormViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleted(FormViewDeletedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.FormView.ItemDeleted&quot;> </xref> eventos."
  remarks: "O método OnItemDeleted é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemDeleted>evento.</xref:System.Web.UI.WebControls.FormView.ItemDeleted> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnItemDeleted também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnItemDeleted (System.Web.UI.WebControls.FormViewDeletedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewDeletedEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewDeletedEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.FormView.OnItemDeleted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  id: OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemDeleting(FormViewDeleteEventArgs)
  nameWithType: FormView.OnItemDeleting(FormViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleting(FormViewDeleteEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.FormView.ItemDeleting&quot;> </xref> eventos."
  remarks: "O método OnItemDeleting é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemDeleting>evento.</xref:System.Web.UI.WebControls.FormView.ItemDeleting> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnItemDeleting também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnItemDeleting (System.Web.UI.WebControls.FormViewDeleteEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewDeleteEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewDeleteEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.FormView.OnItemDeleting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Este método é chamado quando o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle não está associado a um controle de fonte de dados, o usuário não cancelar a operação de exclusão e um manipulador de eventos não está registrado para o evento."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  id: OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemInserted(FormViewInsertedEventArgs)
  nameWithType: FormView.OnItemInserted(FormViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserted(FormViewInsertedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserted&quot;> </xref> eventos."
  remarks: "O método OnItemInserted é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemInserted>evento.</xref:System.Web.UI.WebControls.FormView.ItemInserted> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnItemInserted também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnItemInserted (System.Web.UI.WebControls.FormViewInsertedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewInsertedEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewInsertedEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.FormView.OnItemInserted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  id: OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemInserting(FormViewInsertEventArgs)
  nameWithType: FormView.OnItemInserting(FormViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserting(FormViewInsertEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.FormView.ItemInserting&quot;> </xref> eventos."
  remarks: "O método OnItemInserting é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemInserting>evento.</xref:System.Web.UI.WebControls.FormView.ItemInserting> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnItemInserting também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnItemInserting (System.Web.UI.WebControls.FormViewInsertEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewInsertEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewInsertEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.FormView.OnItemInserting*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Este método é chamado quando o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle não está associado a um controle de fonte de dados, o usuário não cancelar a operação de inserção e um manipulador de eventos não está registrado para o evento."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  id: OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemUpdated(FormViewUpdatedEventArgs)
  nameWithType: FormView.OnItemUpdated(FormViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdated(FormViewUpdatedEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdated&quot;> </xref> eventos."
  remarks: "O método OnItemUpdated é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemUpdated>evento.</xref:System.Web.UI.WebControls.FormView.ItemUpdated> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnItemUpdated também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnItemUpdated (System.Web.UI.WebControls.FormViewUpdatedEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewUpdatedEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewUpdatedEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.FormView.OnItemUpdated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  id: OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnItemUpdating(FormViewUpdateEventArgs)
  nameWithType: FormView.OnItemUpdating(FormViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdating(FormViewUpdateEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.FormView.ItemUpdating&quot;> </xref> eventos."
  remarks: "O método OnItemUpdating é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.WebControls.FormView.ItemUpdating>evento.</xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnItemUpdating também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnItemUpdating (System.Web.UI.WebControls.FormViewUpdateEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewUpdateEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewUpdateEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.FormView.OnItemUpdating*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Este método é chamado quando o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle não está associado a um controle de fonte de dados, o usuário não cancelar a operação de atualização e um manipulador de eventos não está registrado para o evento."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)
  id: OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnModeChanged(EventArgs)
  nameWithType: FormView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanged&quot;> </xref> eventos."
  remarks: "O método OnModeChanged é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.WebControls.FormView.ModeChanged>evento.</xref:System.Web.UI.WebControls.FormView.ModeChanged> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnModeChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  id: OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnModeChanging(FormViewModeEventArgs)
  nameWithType: FormView.OnModeChanging(FormViewModeEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanging(FormViewModeEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.FormView.ModeChanging&quot;> </xref> eventos."
  remarks: "O método OnModeChanging é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.WebControls.FormView.ModeChanging>evento.</xref:System.Web.UI.WebControls.FormView.ModeChanging> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnModeChanging também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnModeChanging (System.Web.UI.WebControls.FormViewModeEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewModeEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewModeEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.FormView.OnModeChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Este método é chamado quando o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle não está associado a um controle de fonte de dados, a alteração do modo não foi cancelada e um manipulador de eventos não está registrado para o evento."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)
  id: OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnPageIndexChanged(EventArgs)
  nameWithType: FormView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.FormView.PageIndexChanged&quot;> </xref> eventos."
  remarks: "O método OnPageIndexChanged é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.WebControls.FormView.PageIndexChanged>evento.</xref:System.Web.UI.WebControls.FormView.PageIndexChanged> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnPageIndexChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnPageIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Web.UI.WebControls.FormView.OnPageIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  id: OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: OnPageIndexChanging(FormViewPageEventArgs)
  nameWithType: FormView.OnPageIndexChanging(FormViewPageEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanging(FormViewPageEventArgs)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera o <xref href=&quot;System.Web.UI.WebControls.FormView.PageIndexChanging&quot;> </xref> eventos."
  remarks: "O método OnPageIndexChanging é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para gerar o <xref:System.Web.UI.WebControls.FormView.PageIndexChanging>evento.</xref:System.Web.UI.WebControls.FormView.PageIndexChanging> </xref:System.Web.UI.WebControls.FormView> Ele é normalmente usado por desenvolvedores de controle ao estender a <xref:System.Web.UI.WebControls.FormView>classe.</xref:System.Web.UI.WebControls.FormView>       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [NIB: gerar um evento](http://msdn.microsoft.com/en-us/f2adaf01-1ed1-42e1-8c31-8d467e7e0ee2).       O método OnPageIndexChanging também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnPageIndexChanging (System.Web.UI.WebControls.FormViewPageEventArgs e);
    parameters:
    - id: e
      type: System.Web.UI.WebControls.FormViewPageEventArgs
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewPageEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Web.UI.WebControls.FormView.OnPageIndexChanging*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Este método é chamado quando o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle não está associado a um controle de fonte de dados, a operação de paginação não foi cancelada e um manipulador de eventos não está registrado para o evento."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageCount
  id: PageCount
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageCount
  nameWithType: FormView.PageCount
  fullName: System.Web.UI.WebControls.FormView.PageCount
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o número total de páginas necessário para exibir todos os registros na fonte de dados."
  remarks: "Quando o recurso de paginação está habilitado (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>estiver definida como `true`), use a propriedade PageCount para determinar o número total de registros na fonte de dados subjacente.</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>      > [!NOTE] > Porque o <xref:System.Web.UI.WebControls.FormView>controle exibe apenas um registro de cada vez, esse valor corresponde ao número total de páginas necessário para exibir todos os registros na fonte de dados.</xref:System.Web.UI.WebControls.FormView> Esse valor não é preciso até após a associação de dados.       Para determinar o índice do registro atual da fonte de dados subjacente, use o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>"
  example:
  - "The following example demonstrates how to use the PageCount property to determine the total number of records displayed in the control.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_653_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_653_1.aspx)]"
  syntax:
    content: public virtual int PageCount { get; }
    return:
      type: System.Int32
      description: "O número de itens na fonte de dados subjacente."
  overload: System.Web.UI.WebControls.FormView.PageCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageIndex
  id: PageIndex
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageIndex
  nameWithType: FormView.PageIndex
  fullName: System.Web.UI.WebControls.FormView.PageIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o índice da página exibida."
  remarks: "Quando o recurso de paginação está habilitado (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>estiver definida como `true`), use a propriedade de índice para determinar o índice do registro exibido no momento.</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> Você também pode usar essa propriedade para alterar programaticamente o registro exibido.      > [!NOTE] > Quando o recurso de paginação está habilitado, você também pode usar essa propriedade para determinar o número do registro exibido; no entanto, lembre-se de que esta propriedade é baseada em zero.       Para determinar o número total de itens na fonte de dados, use o <xref:System.Web.UI.WebControls.FormView.PageCount%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PageCount%2A>"
  example:
  - "The following example demonstrates how to use the PageIndex property to determine the page index of the displayed record.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_319_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_319_1.aspx)]"
  syntax:
    content: public virtual int PageIndex { get; set; }
    return:
      type: System.Int32
      description: "O índice de base zero do item de dados que está sendo exibido em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle da fonte de dados subjacente."
  overload: System.Web.UI.WebControls.FormView.PageIndex*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O valor selecionado é menor que -1."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageIndexChanged
  id: PageIndexChanged
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageIndexChanged
  nameWithType: FormView.PageIndexChanged
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanged
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando o valor de <xref:System.Web.UI.WebControls.FormView.PageIndex*>alterações de propriedade após uma operação de paginação.</xref:System.Web.UI.WebControls.FormView.PageIndex*>"
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controle gera o evento PageIndexChanged quando um botão de paginação (um botão com sua `CommandName` propriedade definida como &quot;Página&quot;) dentro do controle é clicado, mas após o <xref:System.Web.UI.WebControls.FormView>controle manipula a operação de paginação.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada sempre que esse evento ocorre.      > [!NOTE] > Esse evento não é gerado quando você define o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>       Botões de pager geralmente estão localizados na linha de pager de um <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Esse evento é geralmente usado para sincronizar um <xref:System.Web.UI.WebControls.FormView>controlar com um <xref:System.Web.UI.WebControls.GridView>controle ou para definir o comportamento do <xref:System.Web.UI.WebControls.FormView>controle após uma operação de paginação.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.GridView> </xref:System.Web.UI.WebControls.FormView>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use the PageIndexChanged event to return the <xref:System.Web.UI.WebControls.FormView> to read-only mode when the user navigates to another record.  \n  \n [!code-vb[FormViewPageIndexChanged#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_142_1.aspx)]\n [!code-cs[FormViewPageIndexChanged#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_142_1.aspx)]"
  syntax:
    content: public event EventHandler PageIndexChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PageIndexChanging
  id: PageIndexChanging
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PageIndexChanging
  nameWithType: FormView.PageIndexChanging
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanging
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Ocorre quando o valor de <xref:System.Web.UI.WebControls.FormView.PageIndex*>alterações de propriedade antes de uma operação de paginação.</xref:System.Web.UI.WebControls.FormView.PageIndex*>"
  remarks: "O <xref:System.Web.UI.WebControls.FormView>controle gera o evento PageIndexChanging quando um botão de paginação (um botão com sua `CommandName` propriedade definida como &quot;Página&quot;) dentro do controle é clicado, mas antes de <xref:System.Web.UI.WebControls.FormView>controle manipula a operação de paginação.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView> Isso permite que você forneça um método de manipulação de eventos que executa uma rotina personalizada, como cancelar a operação de paginação, sempre que esse evento ocorre.      > [!NOTE] > Esse evento não é gerado quando você define o <xref:System.Web.UI.WebControls.FormView.PageIndex%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PageIndex%2A>       Botões de pager geralmente estão localizados na linha de pager de um <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>       Um <xref:System.Web.UI.WebControls.FormViewPageEventArgs>objeto é passado para o método de manipulação de eventos, que permite que você determine o índice da página selecionado pelo usuário e para indicar que a operação de paginação deve ser cancelada.</xref:System.Web.UI.WebControls.FormViewPageEventArgs> Para determinar o índice da página selecionado pelo usuário, use o <xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A>propriedade.</xref:System.Web.UI.WebControls.FormViewPageEventArgs.NewPageIndex%2A> Para cancelar a operação de paginação, defina a <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.Web.UI.WebControls.FormViewPageEventArgs>do objeto para `true`.</xref:System.Web.UI.WebControls.FormViewPageEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [NIB: consumindo eventos](http://msdn.microsoft.com/en-us/01e4f1bc-e55e-413f-98c7-6588493e5f67)."
  example:
  - "The following example demonstrates how to use the PageIndexChanging event to cancel a paging operation.  \n  \n> [!IMPORTANT]\n>  This example has a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormViewPageEventArgs#1](~/add/codesnippet/csharp/e-system.web.ui.webcontr_120_1.aspx)]\n [!code-vb[FormViewPageEventArgs#1](~/add/codesnippet/visualbasic/e-system.web.ui.webcontr_120_1.aspx)]"
  syntax:
    content: public event System.Web.UI.WebControls.FormViewPageEventHandler PageIndexChanging;
    return:
      type: System.Web.UI.WebControls.FormViewPageEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PagerSettings
  id: PagerSettings
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PagerSettings
  nameWithType: FormView.PagerSettings
  fullName: System.Web.UI.WebControls.FormView.PagerSettings
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> objeto que permite que você defina as propriedades dos botões de pager em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Use a propriedade PagerSettings para controlar as configurações da linha de pager em um <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> A linha de pager é exibida quando o recurso de paginação está habilitado (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>estiver definida como `true`) e contém os controles que permitem ao usuário navegar para os registros diferentes no controle.</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.PagerSettings>objeto retorna.</xref:System.Web.UI.WebControls.PagerSettings> As propriedades podem ser definidas declarativamente na forma `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.PagerSettings>objeto (por exemplo, `PagerSettings-Mode`).</xref:System.Web.UI.WebControls.PagerSettings> As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `PagerSettings.Mode`). Configurações comuns geralmente incluem um modo de exibição da linha de pager e texto personalizado ou imagens para os controles de navegação."
  example:
  - "The following example demonstrates how to use the PagerSettings property to specify the properties of the pager row.  \n  \n [!code-cs[FormViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_238_1.aspx)]\n [!code-vb[FormViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_238_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.PagerSettings PagerSettings { get; }
    return:
      type: System.Web.UI.WebControls.PagerSettings
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.PagerSettings&quot;> </xref> que permite que você defina as propriedades dos botões de pager em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.PagerSettings*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PagerStyle
  id: PagerStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PagerStyle
  nameWithType: FormView.PagerStyle
  fullName: System.Web.UI.WebControls.FormView.PagerStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> objeto que permite definir a aparência da linha de pager em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Use a propriedade PagerStyle para controlar a aparência da linha de pager em um <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> A linha de pager é exibida quando o recurso de paginação está habilitado (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>estiver definida como `true`) e contém os controles que permitem ao usuário navegar para as páginas diferentes no controle.</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle>objeto retorna.</xref:System.Web.UI.WebControls.TableItemStyle> As propriedades podem ser definidas usando um dos métodos a seguir:-colocar um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView>controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle>objeto (por exemplo, `PagerStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -Aninhar uma `<PagerRowStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>       As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `PagerStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado."
  example:
  - "The following example demonstrates how to use the PagerStyle property to specify the style settings for the pager row.  \n  \n [!code-cs[FormViewAllowPaging#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_425_1.aspx)]\n [!code-vb[FormViewAllowPaging#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_425_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle PagerStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> que representa o estilo da linha de pager em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.PagerStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PagerTemplate
  id: PagerTemplate
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PagerTemplate
  nameWithType: FormView.PagerTemplate
  fullName: System.Web.UI.WebControls.FormView.PagerTemplate
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o conteúdo personalizado para a linha de pager em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Uma linha de pager é exibida em um <xref:System.Web.UI.WebControls.FormView>controlar quando o recurso de paginação está habilitado (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>estiver definida como true).</xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> </xref:System.Web.UI.WebControls.FormView> A linha de pager contém os controles que permitem ao usuário navegar para as páginas diferentes no controle. Em vez de usar a interface do usuário interna pager linha (IU), você pode definir sua própria interface do usuário usando a propriedade PagerTemplate.      > [!NOTE] > Quando PagerTemplate a propriedade é definida que ele substitui a linha de pager internos da interface do usuário.       Para especificar um modelo personalizado para a linha de pager, primeiro coloque `<PagerTemplate>` marcas entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Em seguida, você pode listar o conteúdo do modelo entre a abertura e fechamento `<PagerTemplate>` marcas. Para controlar a aparência da linha de pager, use o <xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.PagerStyle%2A>       Normalmente, os controles de botão são adicionados ao modelo de pager para executar as operações de paginação. O <xref:System.Web.UI.WebControls.FormView>controle executa uma operação de paginação, quando um controle de botão com seu `CommandName` propriedade definida como &quot;Página&quot; é clicada.</xref:System.Web.UI.WebControls.FormView> O botão `CommandArgument` propriedade determina o tipo de operação de paginação a ser executada. A tabela a seguir lista os valores de argumento de comando com suporte a <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>      | Valor CommandArgument | Descrição |   |---------------------------|-----------------|   |&quot; Próxima &quot;| Navega para a próxima página. |   |&quot; Prev &quot;| Navega para a página anterior. |   |&quot; Primeiro &quot;| Navega para a primeira página. |   |&quot; Última &quot;| Navega para a última página. |   | Valor inteiro | Navega para o número de página especificada. |"
  example:
  - "The following example demonstrates how to define a custom pager template.  \n  \n [!code-cs[FormViewPagerTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_644_1.aspx)]\n [!code-vb[FormViewPagerTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_644_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.ITemplate PagerTemplate { get; set; }
    return:
      type: System.Web.UI.ITemplate
      description: "Um <xref href=&quot;System.Web.UI.ITemplate&quot;> </xref> que contém o conteúdo personalizado para a linha de pager. O valor padrão é null, o que indica que essa propriedade não está definida."
  overload: System.Web.UI.WebControls.FormView.PagerTemplate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)
  id: PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PerformDataBinding(IEnumerable)
  nameWithType: FormView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.FormView.PerformDataBinding(IEnumerable)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Associa a fonte de dados especificado para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "O método PerformDataBinding é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para associar a fonte de dados especificado para o controle.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override void PerformDataBinding (System.Collections.IEnumerable data);
    parameters:
    - id: data
      type: System.Collections.IEnumerable
      description: "Um <xref:System.Collections.IEnumerable>que representa a fonte de dados.</xref:System.Collections.IEnumerable>"
  overload: System.Web.UI.WebControls.FormView.PerformDataBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.PrepareControlHierarchy
  id: PrepareControlHierarchy
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: PrepareControlHierarchy()
  nameWithType: FormView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.FormView.PrepareControlHierarchy()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Define a hierarquia de controle de <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "O método PrepareControlHierarchy é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para configurar a hierarquia de controle no <xref:System.Web.UI.WebControls.FormView>controlar antes do controle é processado.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual void PrepareControlHierarchy ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.PrepareControlHierarchy*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)
  id: RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: RaisePostBackEvent(String)
  nameWithType: FormView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera os eventos adequados para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar quando ele envia de volta para o servidor."
  remarks: "A página chama o RaisePostBackEvent método quando ocorre um evento de postback que gera os eventos adequados para uma <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> Essa chamada ocorre no ciclo de vida da página após a conclusão de carregamento e alterações de notificação, mas antes da ocorrência de pré-processamento. Esse método foi implementado para criar um <xref:System.Web.UI.WebControls.CommandEventArgs>objeto para os eventos que são gerados.</xref:System.Web.UI.WebControls.CommandEventArgs>      > [!NOTE] > Esse método é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected virtual void RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "O argumento do evento do qual criar um <xref href=&quot;System.Web.UI.WebControls.CommandEventArgs&quot;> </xref> para o evento ou eventos que são gerados."
  overload: System.Web.UI.WebControls.FormView.RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)
  id: Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: Render(HtmlTextWriter)
  nameWithType: FormView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.FormView.Render(HtmlTextWriter)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Exibe o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle no cliente."
  remarks: "O método de renderização é usado para renderizar o conteúdo do controle de servidor para o navegador do cliente usando especificado <xref:System.Web.UI.HtmlTextWriter>objeto.</xref:System.Web.UI.HtmlTextWriter>"
  syntax:
    content: protected override void Render (System.Web.UI.HtmlTextWriter writer);
    parameters:
    - id: writer
      type: System.Web.UI.HtmlTextWriter
      description: "Um <xref href=&quot;System.Web.UI.HtmlTextWriter&quot;> </xref> que contém o fluxo de saída para renderizar no cliente."
  overload: System.Web.UI.WebControls.FormView.Render*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.RenderOuterTable
  id: RenderOuterTable
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: RenderOuterTable
  nameWithType: FormView.RenderOuterTable
  fullName: System.Web.UI.WebControls.FormView.RenderOuterTable
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define um valor que indica se o controle engloba HTML renderizado em um <xref uid=&quot;langword_csharp_table&quot; name=&quot;table&quot; href=&quot;&quot;> </xref> elemento para aplicar estilos embutidos."
  remarks: "Para tornar as propriedades de estilo embutido como <xref:System.Web.UI.WebControls.WebControl.ForeColor%2A>Aplicar HTML que é renderizado para o controle, o ASP.NET inclui HTML renderizado em um `table` elemento.</xref:System.Web.UI.WebControls.WebControl.ForeColor%2A> Se você não quiser externa `table` elemento a ser renderizado, defina essa propriedade como `false`. Nesse caso, se você tentar definir propriedades de estilo que se aplicam a todo o controle de embutido, uma exceção será lançada."
  syntax:
    content: public virtual bool RenderOuterTable { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle engloba HTML renderizado em um <xref uid=&quot;langword_csharp_table&quot; name=&quot;table&quot; href=&quot;&quot;> </xref> elemento; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.RenderOuterTable*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.Row
  id: Row
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: Row
  nameWithType: FormView.Row
  fullName: System.Web.UI.WebControls.FormView.Row
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> objeto que representa a linha de dados em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Use a propriedade de linha para acessar programaticamente o <xref:System.Web.UI.WebControls.FormViewRow>objeto que representa a linha de dados.</xref:System.Web.UI.WebControls.FormViewRow> A linha de dados contém conteúdo diferente com base no modelo processado para o modo atual (especificado pelo <xref:System.Web.UI.WebControls.FormView.CurrentMode%2A>propriedade).</xref:System.Web.UI.WebControls.FormView.CurrentMode%2A> Você só pode acessar o conteúdo do modelo para o modo atual. A tabela a seguir mostra o modelo é usado para cada modo.      | Modo | Modelo processado |   |----------|-----------------------|   | Editar | <xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>|   | Inserir | <xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A>|   | Somente leitura | <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>|      > [!NOTE] > Propriedade a linha está disponível somente depois de <xref:System.Web.UI.WebControls.FormView>controle cria a linha de dados a <xref:System.Web.UI.WebControls.FormView.ItemCreated>evento.</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.InsertItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView.EditItemTemplate%2A>       Essa propriedade normalmente é usada quando você precisa manipular programaticamente a linha de dados, por exemplo, ao adicionar conteúdo personalizado. Qualquer modificação para a propriedade de linha deve ser executada após o <xref:System.Web.UI.WebControls.FormView>controle foi associado a dados; caso contrário, o <xref:System.Web.UI.WebControls.FormView>controle substitui quaisquer alterações.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the Row property to access the properties of the data row during the <xref:System.Web.UI.WebControls.FormView.ItemCreated> event.  \n  \n [!code-cs[FormViewRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_1104_1.aspx)]\n [!code-vb[FormViewRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_1104_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow Row { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "O <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> que representa a linha de dados em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.Row*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.RowStyle
  id: RowStyle
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: RowStyle
  nameWithType: FormView.RowStyle
  fullName: System.Web.UI.WebControls.FormView.RowStyle
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> objeto que permite definir a aparência da linha de dados em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar quando o controle está no modo somente leitura."
  remarks: "Use a propriedade RowStyle para controlar a aparência dos dados de linha quando um <xref:System.Web.UI.WebControls.FormView>controle está no modo somente leitura (exibição).</xref:System.Web.UI.WebControls.FormView> Quando o <xref:System.Web.UI.WebControls.FormView>controle está no modo somente leitura, a linha de dados exibe o conteúdo definido pelo usuário especificado pelo <xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.ItemTemplate%2A> </xref:System.Web.UI.WebControls.FormView> Essa propriedade é somente leitura; No entanto, você pode definir as propriedades do <xref:System.Web.UI.WebControls.TableItemStyle>objeto retorna.</xref:System.Web.UI.WebControls.TableItemStyle> As propriedades podem ser definidas usando um dos métodos a seguir:-colocar um atributo na marca de abertura do <xref:System.Web.UI.WebControls.FormView>controle no formulário `Property-Subproperty`, onde `Subproperty` é uma propriedade do <xref:System.Web.UI.WebControls.TableItemStyle>objeto (por exemplo, `RowStyle-ForeColor`).</xref:System.Web.UI.WebControls.TableItemStyle> </xref:System.Web.UI.WebControls.FormView>      -Aninhar uma `<RowStyle>` elemento entre as marcas de abertura e fechamento do <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>       As propriedades podem também ser definidas programaticamente no formulário `Property.Subproperty` (por exemplo, `RowStyle.ForeColor`). Configurações comuns geralmente incluem propriedades de fonte, cor de primeiro plano e uma cor de plano de fundo personalizado."
  example:
  - "The following example demonstrates how to use the RowStyle property to specify a custom style for a data row when a <xref:System.Web.UI.WebControls.FormView> control is in read-only mode.  \n  \n [!code-vb[FormViewEditItemTemplate#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_235_1.aspx)]\n [!code-cs[FormViewEditItemTemplate#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_235_1.aspx)]"
  syntax:
    content: public System.Web.UI.WebControls.TableItemStyle RowStyle { get; }
    return:
      type: System.Web.UI.WebControls.TableItemStyle
      description: "Uma referência para o <xref href=&quot;System.Web.UI.WebControls.TableItemStyle&quot;> </xref> que representa o estilo da linha de dados em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar quando o controle está no modo somente leitura."
  overload: System.Web.UI.WebControls.FormView.RowStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SaveControlState
  id: SaveControlState
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SaveControlState()
  nameWithType: FormView.SaveControlState()
  fullName: System.Web.UI.WebControls.FormView.SaveControlState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva o estado do <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> propriedades de controle que precisam ser mantidos, mesmo quando o &lt;xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName&gt; está definida como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  remarks: "Esse método é usado para salvar o estado do <xref:System.Web.UI.WebControls.FormView>Propriedades de controle que precisam ser mantidos, mesmo quando o <xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName>estiver definida como `false`.</xref:System.Web.UI.Control.EnableViewState%2A?displayProperty=fullName> </xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > Esse método é usado principalmente por desenvolvedores de controle para estender o <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override object SaveControlState ();
    parameters: []
    return:
      type: System.Object
      description: "Retorna o estado de exibição atual do controle de servidor. Se não houver nenhum estado de exibição associado ao controle, esse método retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.SaveControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SaveViewState
  id: SaveViewState
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SaveViewState()
  nameWithType: FormView.SaveViewState()
  fullName: System.Web.UI.WebControls.FormView.SaveViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Salva o estado de exibição atual do <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "O método SaveViewState é um método auxiliar chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para salvar o estado do controle.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override object SaveViewState ();
    parameters: []
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém o estado salvo do <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle.</xref:System.Object>"
  overload: System.Web.UI.WebControls.FormView.SaveViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SelectedValue
  id: SelectedValue
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SelectedValue
  nameWithType: FormView.SelectedValue
  fullName: System.Web.UI.WebControls.FormView.SelectedValue
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o valor de chave de dados do registro atual em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Quando o <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>propriedade for definida, o <xref:System.Web.UI.WebControls.FormView>controle cria automaticamente um <xref:System.Web.UI.WebControls.DataKey>objeto que contém os pares chave/valor do campo ou campos listados no <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>propriedade para o registro atual.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> </xref:System.Web.UI.WebControls.DataKey> </xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A> O <xref:System.Web.UI.WebControls.DataKey>objeto representa o campo de chave primária ou campos para o registro atual e é armazenado no <xref:System.Web.UI.WebControls.FormView.DataKey%2A>propriedade.</xref:System.Web.UI.WebControls.FormView.DataKey%2A> </xref:System.Web.UI.WebControls.DataKey> Em vez de usar o <xref:System.Web.UI.WebControls.FormView.DataKey%2A>propriedade para acessar o valor de chave de dados, você pode usar a propriedade SelectedValue como um atalho.</xref:System.Web.UI.WebControls.FormView.DataKey%2A>      > [!NOTE] > Quando o <xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>listas de propriedades de vários campos, essa propriedade retorna o valor do primeiro campo listado.</xref:System.Web.UI.WebControls.FormView.DataKeyNames%2A>"
  example:
  - "The following example demonstrates how to use the SelectedValue property to determine the value of the key field.  \n  \n [!code-cs[FormViewSelectedValue#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_824_1.aspx)]\n [!code-vb[FormViewSelectedValue#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_824_1.aspx)]"
  syntax:
    content: public object SelectedValue { get; }
    return:
      type: System.Object
      description: "Os dados de valor da chave do registro atual em um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.SelectedValue*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)
  id: SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: SetPageIndex(Int32)
  nameWithType: FormView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.FormView.SetPageIndex(Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Define o índice da página exibida atualmente no <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  syntax:
    content: public void SetPageIndex (int index);
    parameters:
    - id: index
      type: System.Int32
      description: "O índice para definir."
  overload: System.Web.UI.WebControls.FormView.SetPageIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex
  id: System#Web#UI#IDataItemContainer#DataItemIndex
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DataItemIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IDataItemContainer.DataItemIndex%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.FormView>instância é convertida em um <xref:System.Web.UI.IDataItemContainer>interface.</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DataItemIndex { get; }
    return:
      type: System.Int32
      description: "Um objeto que representa o índice de exibição."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex
  id: System#Web#UI#IDataItemContainer#DisplayIndex
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DisplayIndex
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Para obter uma descrição desse membro, consulte &lt;xref:System.Web.UI.IDataItemContainer.DisplayIndex%2A?displayProperty=fullName&gt;."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.FormView>instância é convertida em um <xref:System.Web.UI.IDataItemContainer>interface.</xref:System.Web.UI.IDataItemContainer> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: int System.Web.UI.IDataItemContainer.DisplayIndex { get; }
    return:
      type: System.Int32
      description: "Sempre retorna 0."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  id: System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Gera eventos para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar quando ele envia de volta para o servidor."
  remarks: "A página chama o método de IPostBackEventHandler.RaisePostBackEvent quando ocorre um evento de postback. Essa chamada ocorre no ciclo de vida da página após a conclusão de carregamento e alterações de notificação, mas antes da página é renderizada."
  syntax:
    content: void IPostBackEventHandler.RaisePostBackEvent (string eventArgument);
    parameters:
    - id: eventArgument
      type: System.String
      description: "O argumento para o evento."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  id: System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define uma matriz que contém os nomes dos campos de chave primária dos itens que são exibidos na <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.FormView>instância é convertida em um <xref:System.Web.UI.WebControls.IDataBoundControl>interface.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: string[] System.Web.UI.WebControls.IDataBoundControl.DataKeyNames { get; set; }
    return:
      type: System.String[]
      description: "Uma matriz que contém os nomes dos campos de chave primária dos itens que são exibidos na <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  id: System#Web#UI#WebControls#IDataBoundControl#DataMember
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome da lista de itens de dados que o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle associa a quando a fonte de dados contém mais de uma lista de itens de dados."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.FormView>instância é convertida em um <xref:System.Web.UI.WebControls.IDataBoundControl>interface.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataMember { get; set; }
    return:
      type: System.String
      description: "O nome da lista de dados de itens que o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle associa a."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  id: System#Web#UI#WebControls#IDataBoundControl#DataSource
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o objeto que contém a lista de dados que o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar recupera."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.FormView>instância é convertida em um <xref:System.Web.UI.WebControls.IDataBoundControl>interface.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: object System.Web.UI.WebControls.IDataBoundControl.DataSource { get; set; }
    return:
      type: System.Object
      description: "O objeto que contém a lista de dados que o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar recupera."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define a ID do controle de fonte de dados que contém a lista de dados de itens que o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar recupera."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.FormView>instância é convertida em um <xref:System.Web.UI.WebControls.IDataBoundControl>interface.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: string System.Web.UI.WebControls.IDataBoundControl.DataSourceID { get; set; }
    return:
      type: System.String
      description: "A ID do controle de fonte de dados que contém a lista de dados de itens que o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar recupera."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  id: System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém os dados do objeto de origem que contém a lista de dados de itens que o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar recupera."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.FormView>instância é convertida em um <xref:System.Web.UI.WebControls.IDataBoundControl>interface.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: System.Web.UI.IDataSource System.Web.UI.WebControls.IDataBoundControl.DataSourceObject { get; }
    return:
      type: System.Web.UI.IDataSource
      description: "O objeto de fonte de dados que contém a lista de dados de itens que o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controlar recupera."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  id: System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o objeto que representa o valor de chave de dados da linha de <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.FormView>instância é convertida em um <xref:System.Web.UI.WebControls.IDataBoundControl>interface.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: System.Web.UI.WebControls.DataKey System.Web.UI.WebControls.IDataBoundItemControl.DataKey { get; }
    return:
      type: System.Web.UI.WebControls.DataKey
      description: "O objeto que representa o valor de chave de dados da linha de <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  id: System#Web#UI#WebControls#IDataBoundItemControl#Mode
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o modo atual do <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Esse membro é uma implementação de membro de interface explícita. Ele pode ser usado somente quando o <xref:System.Web.UI.WebControls.FormView>instância é convertida em um <xref:System.Web.UI.WebControls.IDataBoundControl>interface.</xref:System.Web.UI.WebControls.IDataBoundControl> </xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: System.Web.UI.WebControls.DataBoundControlMode System.Web.UI.WebControls.IDataBoundItemControl.Mode { get; }
    return:
      type: System.Web.UI.WebControls.DataBoundControlMode
      description: "O modo atual do <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  id: System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  isEii: true
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Determina as opções de evento de postback para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "O método IPostBackContainer.GetPostBackOptions é um método auxiliar que é chamado pelo <xref:System.Web.UI.WebControls.FormView>controle para criar um <xref:System.Web.UI.PostBackOptions>objeto que contém as opções de evento de postback para o controle.</xref:System.Web.UI.PostBackOptions> </xref:System.Web.UI.WebControls.FormView> O <xref:System.Web.UI.PostBackOptions>objeto normalmente é usado como um parâmetro para o <xref:System.Web.UI.Page.GetPostBackEventReference%2A>método.</xref:System.Web.UI.Page.GetPostBackEventReference%2A> </xref:System.Web.UI.PostBackOptions>"
  syntax:
    content: System.Web.UI.PostBackOptions IPostBackContainer.GetPostBackOptions (System.Web.UI.WebControls.IButtonControl buttonControl);
    parameters:
    - id: buttonControl
      type: System.Web.UI.WebControls.IButtonControl
      description: "O controle de botão postado a página de volta para o servidor."
    return:
      type: System.Web.UI.PostBackOptions
      description: "O evento de postback opções para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "O objeto contido no <code> buttonControl </code> parâmetro é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "The <xref:System.Web.UI.WebControls.IButtonControl.CausesValidation*> property of <code>buttonControl</code> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>.</xref:System.Web.UI.WebControls.IButtonControl.CausesValidation*>"
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.TagKey
  id: TagKey
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: TagKey
  nameWithType: FormView.TagKey
  fullName: System.Web.UI.WebControls.FormView.TagKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o <xref href=&quot;System.Web.UI.HtmlTextWriterTag&quot;> </xref> valor para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "A propriedade TagKey permite que o fluxo de saída gravar a marcação HTML apropriada para o <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView>"
  syntax:
    content: protected override System.Web.UI.HtmlTextWriterTag TagKey { get; }
    return:
      type: System.Web.UI.HtmlTextWriterTag
      description: "Sempre retorna <xref uid=&quot;langword_csharp_HtmlTextWriterTag.Table&quot; name=&quot;HtmlTextWriterTag.Table&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.TagKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.TopPagerRow
  id: TopPagerRow
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: TopPagerRow
  nameWithType: FormView.TopPagerRow
  fullName: System.Web.UI.WebControls.FormView.TopPagerRow
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém o <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> objeto que representa a linha de pager exibida na parte superior de um <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Quando a paginação está habilitada (quando o <xref:System.Web.UI.WebControls.FormView.AllowPaging%2A>estiver definida como `true`), uma linha adicional chamada de linha de pager será exibida automaticamente o <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView.AllowPaging%2A> A linha de pager contém controles que permitem ao usuário navegar para outros registros e podem ser exibidos na parte superior, inferior, ou tanto a parte superior e inferior do controle. Use a propriedade TopPagerRow para acessar programaticamente o <xref:System.Web.UI.WebControls.FormViewRow>objeto que representa a linha superior pager a <xref:System.Web.UI.WebControls.FormView>controle.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormViewRow>      > [!NOTE] > TopPagerRow a propriedade está disponível somente depois de <xref:System.Web.UI.WebControls.FormView>controle cria na linha superior de pager a <xref:System.Web.UI.WebControls.FormView.ItemCreated>evento.</xref:System.Web.UI.WebControls.FormView.ItemCreated> </xref:System.Web.UI.WebControls.FormView>       Essa propriedade normalmente é usada quando você precisa manipular programaticamente a linha superior de pager, por exemplo, ao adicionar conteúdo personalizado. Qualquer modificação para a propriedade TopPagerRow deve ser executada após o <xref:System.Web.UI.WebControls.FormView>controle foi associada a dados; caso contrário, o <xref:System.Web.UI.WebControls.FormView>controle substitui quaisquer alterações.</xref:System.Web.UI.WebControls.FormView> </xref:System.Web.UI.WebControls.FormView>"
  example:
  - "The following example demonstrates how to use the TopPagerRow property to access the pager row displayed at the top of a <xref:System.Web.UI.WebControls.FormView> control. The pager row is then updated with additional content.  \n  \n [!code-vb[FormViewTopPagerRow#1](~/add/codesnippet/visualbasic/p-system.web.ui.webcontr_408_1.aspx)]\n [!code-cs[FormViewTopPagerRow#1](~/add/codesnippet/csharp/p-system.web.ui.webcontr_408_1.aspx)]"
  syntax:
    content: public virtual System.Web.UI.WebControls.FormViewRow TopPagerRow { get; }
    return:
      type: System.Web.UI.WebControls.FormViewRow
      description: "Um <xref href=&quot;System.Web.UI.WebControls.FormViewRow&quot;> </xref> que representa a linha superior pager a <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  overload: System.Web.UI.WebControls.FormView.TopPagerRow*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.TrackViewState
  id: TrackViewState
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: TrackViewState()
  nameWithType: FormView.TrackViewState()
  fullName: System.Web.UI.WebControls.FormView.TrackViewState()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Marca o ponto de partida no qual começar a controlar e salvar o estado de exibição altera para o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle."
  remarks: "Esse método é substituído para marcar o ponto de partida no qual começar a rastreamento e salvar alterações para o controle como parte do estado de exibição do controle."
  syntax:
    content: protected override void TrackViewState ();
    parameters: []
  overload: System.Web.UI.WebControls.FormView.TrackViewState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)
  id: UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: UpdateItem(Boolean)
  nameWithType: FormView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.UpdateItem(Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Atualiza o registro atual na fonte de dados."
  remarks: "Quando o <xref:System.Web.UI.WebControls.FormView>controle está no modo de edição, use o método UpdateItem atualizar programaticamente o registro atual na fonte de dados.</xref:System.Web.UI.WebControls.FormView> Esse método é geralmente usado quando você precisa atualizar o registro atual da fora do <xref:System.Web.UI.WebControls.FormView>controlar, tais como um controle diferente na página.</xref:System.Web.UI.WebControls.FormView>      > [!NOTE] > O <xref:System.Web.UI.WebControls.FormView>controle deve estar no modo de edição quando esse método é chamado; caso contrário, um <xref:System.Web.HttpException>é gerada.</xref:System.Web.HttpException> </xref:System.Web.UI.WebControls.FormView>       Para especificar se a validação de página será executada antes da operação de atualização, use o `causesValidation` parâmetro. Chamar esse método também gera o <xref:System.Web.UI.WebControls.FormView.ItemUpdated>e <xref:System.Web.UI.WebControls.FormView.ItemUpdating>eventos.</xref:System.Web.UI.WebControls.FormView.ItemUpdating> </xref:System.Web.UI.WebControls.FormView.ItemUpdated>"
  example:
  - "The following example demonstrates how to use the UpdateItem method to programmatically update the current record in a <xref:System.Web.UI.WebControls.FormView> control in the data source.  \n  \n [!code-vb[FormViewUpdateItem#1](~/add/codesnippet/visualbasic/m-system.web.ui.webcontr_32_1.aspx)]\n [!code-cs[FormViewUpdateItem#1](~/add/codesnippet/csharp/m-system.web.ui.webcontr_32_1.aspx)]"
  syntax:
    content: public virtual void UpdateItem (bool causesValidation);
    parameters:
    - id: causesValidation
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para executar a validação de página quando o método é chamado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.UI.WebControls.FormView.UpdateItem*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "Este método é chamado quando o <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle não está no modo de edição.       - ou - <xref href=&quot;System.Web.UI.DataSourceView&quot;> </xref> objeto associado a <xref href=&quot;System.Web.UI.WebControls.FormView&quot;> </xref> controle é nulo."
  platform:
  - net462
- uid: System.Web.UI.WebControls.FormView.UpdateMethod
  id: UpdateMethod
  parent: System.Web.UI.WebControls.FormView
  langs:
  - csharp
  name: UpdateMethod
  nameWithType: FormView.UpdateMethod
  fullName: System.Web.UI.WebControls.FormView.UpdateMethod
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI.WebControls
  summary: "Obtém ou define o nome do método na página que é chamada quando o controle executa uma operação de atualização."
  remarks: "Para uma série de tutoriais sobre como usar a associação de modelo com formulários da Web, consulte [modelo de associação e formulários da Web](http://go.microsoft.com/fwlink/?LinkId=286117)."
  syntax:
    content: public virtual string UpdateMethod { get; set; }
    return:
      type: System.String
      description: "O nome do método na página que é chamado quando o controle executa uma operação de atualização."
  overload: System.Web.UI.WebControls.FormView.UpdateMethod*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.UI.WebControls.CompositeDataBoundControl
  isExternal: false
  name: System.Web.UI.WebControls.CompositeDataBoundControl
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.UI.WebControls.FormView.#ctor
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FormView()
  nameWithType: FormView.FormView()
  fullName: System.Web.UI.WebControls.FormView.FormView()
- uid: System.Web.UI.WebControls.FormView.AllowPaging
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: AllowPaging
  nameWithType: FormView.AllowPaging
  fullName: System.Web.UI.WebControls.FormView.AllowPaging
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.UI.WebControls.FormView.BackImageUrl
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BackImageUrl
  nameWithType: FormView.BackImageUrl
  fullName: System.Web.UI.WebControls.FormView.BackImageUrl
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.UI.WebControls.FormView.BottomPagerRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BottomPagerRow
  nameWithType: FormView.BottomPagerRow
  fullName: System.Web.UI.WebControls.FormView.BottomPagerRow
- uid: System.Web.UI.WebControls.FormViewRow
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewRow
  nameWithType: FormViewRow
  fullName: System.Web.UI.WebControls.FormViewRow
- uid: System.Web.UI.WebControls.FormView.Caption
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Caption
  nameWithType: FormView.Caption
  fullName: System.Web.UI.WebControls.FormView.Caption
- uid: System.Web.UI.WebControls.FormView.CaptionAlign
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CaptionAlign
  nameWithType: FormView.CaptionAlign
  fullName: System.Web.UI.WebControls.FormView.CaptionAlign
- uid: System.Web.UI.WebControls.TableCaptionAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableCaptionAlign
  nameWithType: TableCaptionAlign
  fullName: System.Web.UI.WebControls.TableCaptionAlign
- uid: System.Web.UI.WebControls.FormView.CellPadding
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellPadding
  nameWithType: FormView.CellPadding
  fullName: System.Web.UI.WebControls.FormView.CellPadding
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.UI.WebControls.FormView.CellSpacing
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellSpacing
  nameWithType: FormView.CellSpacing
  fullName: System.Web.UI.WebControls.FormView.CellSpacing
- uid: System.Web.UI.WebControls.FormView.ChangeMode(System.Web.UI.WebControls.FormViewMode)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ChangeMode(FormViewMode)
  nameWithType: FormView.ChangeMode(FormViewMode)
  fullName: System.Web.UI.WebControls.FormView.ChangeMode(FormViewMode)
- uid: System.Web.UI.WebControls.FormViewMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewMode
  nameWithType: FormViewMode
  fullName: System.Web.UI.WebControls.FormViewMode
- uid: System.Web.UI.WebControls.FormView.CreateChildControls(System.Collections.IEnumerable,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateChildControls(IEnumerable,Boolean)
  nameWithType: FormView.CreateChildControls(IEnumerable,Boolean)
  fullName: System.Web.UI.WebControls.FormView.CreateChildControls(IEnumerable,Boolean)
- uid: System.Collections.IEnumerable
  parent: System.Collections
  isExternal: true
  name: IEnumerable
  nameWithType: IEnumerable
  fullName: System.Collections.IEnumerable
- uid: System.Web.UI.WebControls.FormView.CreateControlStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateControlStyle()
  nameWithType: FormView.CreateControlStyle()
  fullName: System.Web.UI.WebControls.FormView.CreateControlStyle()
- uid: System.Web.UI.WebControls.Style
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Style
  nameWithType: Style
  fullName: System.Web.UI.WebControls.Style
- uid: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateDataSourceSelectArguments()
  nameWithType: FormView.CreateDataSourceSelectArguments()
  fullName: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments()
- uid: System.Web.UI.DataSourceSelectArguments
  parent: System.Web.UI
  isExternal: false
  name: DataSourceSelectArguments
  nameWithType: DataSourceSelectArguments
  fullName: System.Web.UI.DataSourceSelectArguments
- uid: System.Web.UI.WebControls.FormView.CreateRow(System.Int32,System.Web.UI.WebControls.DataControlRowType,System.Web.UI.WebControls.DataControlRowState)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateRow(Int32,DataControlRowType,DataControlRowState)
  nameWithType: FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
  fullName: System.Web.UI.WebControls.FormView.CreateRow(Int32,DataControlRowType,DataControlRowState)
- uid: System.Web.UI.WebControls.DataControlRowType
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowType
  nameWithType: DataControlRowType
  fullName: System.Web.UI.WebControls.DataControlRowType
- uid: System.Web.UI.WebControls.DataControlRowState
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataControlRowState
  nameWithType: DataControlRowState
  fullName: System.Web.UI.WebControls.DataControlRowState
- uid: System.Web.UI.WebControls.FormView.CreateTable
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateTable()
  nameWithType: FormView.CreateTable()
  fullName: System.Web.UI.WebControls.FormView.CreateTable()
- uid: System.Web.UI.WebControls.Table
  parent: System.Web.UI.WebControls
  isExternal: false
  name: Table
  nameWithType: Table
  fullName: System.Web.UI.WebControls.Table
- uid: System.Web.UI.WebControls.FormView.CurrentMode
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CurrentMode
  nameWithType: FormView.CurrentMode
  fullName: System.Web.UI.WebControls.FormView.CurrentMode
- uid: System.Web.UI.WebControls.FormView.DataBind
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataBind()
  nameWithType: FormView.DataBind()
  fullName: System.Web.UI.WebControls.FormView.DataBind()
- uid: System.Web.UI.WebControls.FormView.DataItem
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItem
  nameWithType: FormView.DataItem
  fullName: System.Web.UI.WebControls.FormView.DataItem
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.UI.WebControls.FormView.DataItemCount
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemCount
  nameWithType: FormView.DataItemCount
  fullName: System.Web.UI.WebControls.FormView.DataItemCount
- uid: System.Web.UI.WebControls.FormView.DataItemIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemIndex
  nameWithType: FormView.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.DataKey
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKey
  nameWithType: FormView.DataKey
  fullName: System.Web.UI.WebControls.FormView.DataKey
- uid: System.Web.UI.WebControls.DataKey
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataKey
  nameWithType: DataKey
  fullName: System.Web.UI.WebControls.DataKey
- uid: System.Web.UI.WebControls.FormView.DataKeyNames
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKeyNames
  nameWithType: FormView.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.DataKeyNames
- uid: System.String[]
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String[]
  spec.csharp:
  - uid: System.String
    name: String
    nameWithType: String
    fullName: String[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Web.UI.WebControls.FormView.DefaultMode
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DefaultMode
  nameWithType: FormView.DefaultMode
  fullName: System.Web.UI.WebControls.FormView.DefaultMode
- uid: System.Web.UI.WebControls.FormView.DeleteItem
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteItem()
  nameWithType: FormView.DeleteItem()
  fullName: System.Web.UI.WebControls.FormView.DeleteItem()
- uid: System.Web.UI.WebControls.FormView.DeleteMethod
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteMethod
  nameWithType: FormView.DeleteMethod
  fullName: System.Web.UI.WebControls.FormView.DeleteMethod
- uid: System.Web.UI.WebControls.FormView.EditItemTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditItemTemplate
  nameWithType: FormView.EditItemTemplate
  fullName: System.Web.UI.WebControls.FormView.EditItemTemplate
- uid: System.Web.UI.ITemplate
  parent: System.Web.UI
  isExternal: false
  name: ITemplate
  nameWithType: ITemplate
  fullName: System.Web.UI.ITemplate
- uid: System.Web.UI.WebControls.FormView.EditRowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditRowStyle
  nameWithType: FormView.EditRowStyle
  fullName: System.Web.UI.WebControls.FormView.EditRowStyle
- uid: System.Web.UI.WebControls.TableItemStyle
  parent: System.Web.UI.WebControls
  isExternal: false
  name: TableItemStyle
  nameWithType: TableItemStyle
  fullName: System.Web.UI.WebControls.TableItemStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: FormView.EmptyDataRowStyle
  fullName: System.Web.UI.WebControls.FormView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: FormView.EmptyDataTemplate
  fullName: System.Web.UI.WebControls.FormView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.FormView.EmptyDataText
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataText
  nameWithType: FormView.EmptyDataText
  fullName: System.Web.UI.WebControls.FormView.EmptyDataText
- uid: System.Web.UI.WebControls.FormView.EnableModelValidation
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnableModelValidation
  nameWithType: FormView.EnableModelValidation
  fullName: System.Web.UI.WebControls.FormView.EnableModelValidation
- uid: System.Web.UI.WebControls.FormView.EnsureDataBound
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnsureDataBound()
  nameWithType: FormView.EnsureDataBound()
  fullName: System.Web.UI.WebControls.FormView.EnsureDataBound()
- uid: System.Web.UI.WebControls.FormView.ExtractRowValues(System.Collections.Specialized.IOrderedDictionary,System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ExtractRowValues(IOrderedDictionary,Boolean)
  nameWithType: FormView.ExtractRowValues(IOrderedDictionary,Boolean)
  fullName: System.Web.UI.WebControls.FormView.ExtractRowValues(IOrderedDictionary,Boolean)
- uid: System.Collections.Specialized.IOrderedDictionary
  parent: System.Collections.Specialized
  isExternal: false
  name: IOrderedDictionary
  nameWithType: IOrderedDictionary
  fullName: System.Collections.Specialized.IOrderedDictionary
- uid: System.Web.UI.WebControls.FormView.FooterRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterRow
  nameWithType: FormView.FooterRow
  fullName: System.Web.UI.WebControls.FormView.FooterRow
- uid: System.Web.UI.WebControls.FormView.FooterStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterStyle
  nameWithType: FormView.FooterStyle
  fullName: System.Web.UI.WebControls.FormView.FooterStyle
- uid: System.Web.UI.WebControls.FormView.FooterTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterTemplate
  nameWithType: FormView.FooterTemplate
  fullName: System.Web.UI.WebControls.FormView.FooterTemplate
- uid: System.Web.UI.WebControls.FormView.FooterText
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterText
  nameWithType: FormView.FooterText
  fullName: System.Web.UI.WebControls.FormView.FooterText
- uid: System.Web.UI.WebControls.FormView.GridLines
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: GridLines
  nameWithType: FormView.GridLines
  fullName: System.Web.UI.WebControls.FormView.GridLines
- uid: System.Web.UI.WebControls.GridLines
  parent: System.Web.UI.WebControls
  isExternal: false
  name: GridLines
  nameWithType: GridLines
  fullName: System.Web.UI.WebControls.GridLines
- uid: System.Web.UI.WebControls.FormView.HeaderRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderRow
  nameWithType: FormView.HeaderRow
  fullName: System.Web.UI.WebControls.FormView.HeaderRow
- uid: System.Web.UI.WebControls.FormView.HeaderStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderStyle
  nameWithType: FormView.HeaderStyle
  fullName: System.Web.UI.WebControls.FormView.HeaderStyle
- uid: System.Web.UI.WebControls.FormView.HeaderTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderTemplate
  nameWithType: FormView.HeaderTemplate
  fullName: System.Web.UI.WebControls.FormView.HeaderTemplate
- uid: System.Web.UI.WebControls.FormView.HeaderText
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderText
  nameWithType: FormView.HeaderText
  fullName: System.Web.UI.WebControls.FormView.HeaderText
- uid: System.Web.UI.WebControls.FormView.HorizontalAlign
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HorizontalAlign
  nameWithType: FormView.HorizontalAlign
  fullName: System.Web.UI.WebControls.FormView.HorizontalAlign
- uid: System.Web.UI.WebControls.HorizontalAlign
  parent: System.Web.UI.WebControls
  isExternal: false
  name: HorizontalAlign
  nameWithType: HorizontalAlign
  fullName: System.Web.UI.WebControls.HorizontalAlign
- uid: System.Web.UI.WebControls.FormView.InitializePager(System.Web.UI.WebControls.FormViewRow,System.Web.UI.WebControls.PagedDataSource)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializePager(FormViewRow,PagedDataSource)
  nameWithType: FormView.InitializePager(FormViewRow,PagedDataSource)
  fullName: System.Web.UI.WebControls.FormView.InitializePager(FormViewRow,PagedDataSource)
- uid: System.Web.UI.WebControls.PagedDataSource
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagedDataSource
  nameWithType: PagedDataSource
  fullName: System.Web.UI.WebControls.PagedDataSource
- uid: System.Web.UI.WebControls.FormView.InitializeRow(System.Web.UI.WebControls.FormViewRow)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializeRow(FormViewRow)
  nameWithType: FormView.InitializeRow(FormViewRow)
  fullName: System.Web.UI.WebControls.FormView.InitializeRow(FormViewRow)
- uid: System.Web.UI.WebControls.FormView.InsertItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItem(Boolean)
  nameWithType: FormView.InsertItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.InsertItem(Boolean)
- uid: System.Web.UI.WebControls.FormView.InsertItemTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItemTemplate
  nameWithType: FormView.InsertItemTemplate
  fullName: System.Web.UI.WebControls.FormView.InsertItemTemplate
- uid: System.Web.UI.WebControls.FormView.InsertMethod
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertMethod
  nameWithType: FormView.InsertMethod
  fullName: System.Web.UI.WebControls.FormView.InsertMethod
- uid: System.Web.UI.WebControls.FormView.InsertRowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertRowStyle
  nameWithType: FormView.InsertRowStyle
  fullName: System.Web.UI.WebControls.FormView.InsertRowStyle
- uid: System.Web.UI.WebControls.FormView.IsBindableType(System.Type)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: IsBindableType(Type)
  nameWithType: FormView.IsBindableType(Type)
  fullName: System.Web.UI.WebControls.FormView.IsBindableType(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Web.UI.WebControls.FormView.ItemCommand
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemCommand
  nameWithType: FormView.ItemCommand
  fullName: System.Web.UI.WebControls.FormView.ItemCommand
- uid: System.Web.UI.WebControls.FormViewCommandEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewCommandEventHandler
  nameWithType: FormViewCommandEventHandler
  fullName: System.Web.UI.WebControls.FormViewCommandEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemCreated
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemCreated
  nameWithType: FormView.ItemCreated
  fullName: System.Web.UI.WebControls.FormView.ItemCreated
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.UI.WebControls.FormView.ItemDeleted
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemDeleted
  nameWithType: FormView.ItemDeleted
  fullName: System.Web.UI.WebControls.FormView.ItemDeleted
- uid: System.Web.UI.WebControls.FormViewDeletedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeletedEventHandler
  nameWithType: FormViewDeletedEventHandler
  fullName: System.Web.UI.WebControls.FormViewDeletedEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemDeleting
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemDeleting
  nameWithType: FormView.ItemDeleting
  fullName: System.Web.UI.WebControls.FormView.ItemDeleting
- uid: System.Web.UI.WebControls.FormViewDeleteEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeleteEventHandler
  nameWithType: FormViewDeleteEventHandler
  fullName: System.Web.UI.WebControls.FormViewDeleteEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemInserted
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemInserted
  nameWithType: FormView.ItemInserted
  fullName: System.Web.UI.WebControls.FormView.ItemInserted
- uid: System.Web.UI.WebControls.FormViewInsertedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertedEventHandler
  nameWithType: FormViewInsertedEventHandler
  fullName: System.Web.UI.WebControls.FormViewInsertedEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemInserting
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemInserting
  nameWithType: FormView.ItemInserting
  fullName: System.Web.UI.WebControls.FormView.ItemInserting
- uid: System.Web.UI.WebControls.FormViewInsertEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertEventHandler
  nameWithType: FormViewInsertEventHandler
  fullName: System.Web.UI.WebControls.FormViewInsertEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemTemplate
  nameWithType: FormView.ItemTemplate
  fullName: System.Web.UI.WebControls.FormView.ItemTemplate
- uid: System.Web.UI.WebControls.FormView.ItemUpdated
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemUpdated
  nameWithType: FormView.ItemUpdated
  fullName: System.Web.UI.WebControls.FormView.ItemUpdated
- uid: System.Web.UI.WebControls.FormViewUpdatedEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdatedEventHandler
  nameWithType: FormViewUpdatedEventHandler
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventHandler
- uid: System.Web.UI.WebControls.FormView.ItemUpdating
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemUpdating
  nameWithType: FormView.ItemUpdating
  fullName: System.Web.UI.WebControls.FormView.ItemUpdating
- uid: System.Web.UI.WebControls.FormViewUpdateEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdateEventHandler
  nameWithType: FormViewUpdateEventHandler
  fullName: System.Web.UI.WebControls.FormViewUpdateEventHandler
- uid: System.Web.UI.WebControls.FormView.LoadControlState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadControlState(Object)
  nameWithType: FormView.LoadControlState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadControlState(Object)
- uid: System.Web.UI.WebControls.FormView.LoadViewState(System.Object)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadViewState(Object)
  nameWithType: FormView.LoadViewState(Object)
  fullName: System.Web.UI.WebControls.FormView.LoadViewState(Object)
- uid: System.Web.UI.WebControls.FormView.ModeChanged
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModeChanged
  nameWithType: FormView.ModeChanged
  fullName: System.Web.UI.WebControls.FormView.ModeChanged
- uid: System.Web.UI.WebControls.FormView.ModeChanging
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModeChanging
  nameWithType: FormView.ModeChanging
  fullName: System.Web.UI.WebControls.FormView.ModeChanging
- uid: System.Web.UI.WebControls.FormViewModeEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewModeEventHandler
  nameWithType: FormViewModeEventHandler
  fullName: System.Web.UI.WebControls.FormViewModeEventHandler
- uid: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModifiedOuterTableStylePropertyName()
  nameWithType: FormView.ModifiedOuterTableStylePropertyName()
  fullName: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName()
- uid: System.Web.UI.WebControls.FormView.OnBubbleEvent(System.Object,System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnBubbleEvent(Object,EventArgs)
  nameWithType: FormView.OnBubbleEvent(Object,EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnBubbleEvent(Object,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Web.UI.WebControls.FormView.OnInit(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnInit(EventArgs)
  nameWithType: FormView.OnInit(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnInit(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnItemCommand(System.Web.UI.WebControls.FormViewCommandEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCommand(FormViewCommandEventArgs)
  nameWithType: FormView.OnItemCommand(FormViewCommandEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCommand(FormViewCommandEventArgs)
- uid: System.Web.UI.WebControls.FormViewCommandEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewCommandEventArgs
  nameWithType: FormViewCommandEventArgs
  fullName: System.Web.UI.WebControls.FormViewCommandEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemCreated(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCreated(EventArgs)
  nameWithType: FormView.OnItemCreated(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemCreated(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnItemDeleted(System.Web.UI.WebControls.FormViewDeletedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleted(FormViewDeletedEventArgs)
  nameWithType: FormView.OnItemDeleted(FormViewDeletedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleted(FormViewDeletedEventArgs)
- uid: System.Web.UI.WebControls.FormViewDeletedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeletedEventArgs
  nameWithType: FormViewDeletedEventArgs
  fullName: System.Web.UI.WebControls.FormViewDeletedEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemDeleting(System.Web.UI.WebControls.FormViewDeleteEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleting(FormViewDeleteEventArgs)
  nameWithType: FormView.OnItemDeleting(FormViewDeleteEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemDeleting(FormViewDeleteEventArgs)
- uid: System.Web.UI.WebControls.FormViewDeleteEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewDeleteEventArgs
  nameWithType: FormViewDeleteEventArgs
  fullName: System.Web.UI.WebControls.FormViewDeleteEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemInserted(System.Web.UI.WebControls.FormViewInsertedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserted(FormViewInsertedEventArgs)
  nameWithType: FormView.OnItemInserted(FormViewInsertedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserted(FormViewInsertedEventArgs)
- uid: System.Web.UI.WebControls.FormViewInsertedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertedEventArgs
  nameWithType: FormViewInsertedEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertedEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemInserting(System.Web.UI.WebControls.FormViewInsertEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserting(FormViewInsertEventArgs)
  nameWithType: FormView.OnItemInserting(FormViewInsertEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemInserting(FormViewInsertEventArgs)
- uid: System.Web.UI.WebControls.FormViewInsertEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewInsertEventArgs
  nameWithType: FormViewInsertEventArgs
  fullName: System.Web.UI.WebControls.FormViewInsertEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemUpdated(System.Web.UI.WebControls.FormViewUpdatedEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdated(FormViewUpdatedEventArgs)
  nameWithType: FormView.OnItemUpdated(FormViewUpdatedEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdated(FormViewUpdatedEventArgs)
- uid: System.Web.UI.WebControls.FormViewUpdatedEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdatedEventArgs
  nameWithType: FormViewUpdatedEventArgs
  fullName: System.Web.UI.WebControls.FormViewUpdatedEventArgs
- uid: System.Web.UI.WebControls.FormView.OnItemUpdating(System.Web.UI.WebControls.FormViewUpdateEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdating(FormViewUpdateEventArgs)
  nameWithType: FormView.OnItemUpdating(FormViewUpdateEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnItemUpdating(FormViewUpdateEventArgs)
- uid: System.Web.UI.WebControls.FormViewUpdateEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewUpdateEventArgs
  nameWithType: FormViewUpdateEventArgs
  fullName: System.Web.UI.WebControls.FormViewUpdateEventArgs
- uid: System.Web.UI.WebControls.FormView.OnModeChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanged(EventArgs)
  nameWithType: FormView.OnModeChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanged(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnModeChanging(System.Web.UI.WebControls.FormViewModeEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanging(FormViewModeEventArgs)
  nameWithType: FormView.OnModeChanging(FormViewModeEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnModeChanging(FormViewModeEventArgs)
- uid: System.Web.UI.WebControls.FormViewModeEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewModeEventArgs
  nameWithType: FormViewModeEventArgs
  fullName: System.Web.UI.WebControls.FormViewModeEventArgs
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanged(System.EventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanged(EventArgs)
  nameWithType: FormView.OnPageIndexChanged(EventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanged(EventArgs)
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanging(System.Web.UI.WebControls.FormViewPageEventArgs)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanging(FormViewPageEventArgs)
  nameWithType: FormView.OnPageIndexChanging(FormViewPageEventArgs)
  fullName: System.Web.UI.WebControls.FormView.OnPageIndexChanging(FormViewPageEventArgs)
- uid: System.Web.UI.WebControls.FormViewPageEventArgs
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewPageEventArgs
  nameWithType: FormViewPageEventArgs
  fullName: System.Web.UI.WebControls.FormViewPageEventArgs
- uid: System.Web.UI.WebControls.FormView.PageCount
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageCount
  nameWithType: FormView.PageCount
  fullName: System.Web.UI.WebControls.FormView.PageCount
- uid: System.Web.UI.WebControls.FormView.PageIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndex
  nameWithType: FormView.PageIndex
  fullName: System.Web.UI.WebControls.FormView.PageIndex
- uid: System.Web.UI.WebControls.FormView.PageIndexChanged
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndexChanged
  nameWithType: FormView.PageIndexChanged
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanged
- uid: System.Web.UI.WebControls.FormView.PageIndexChanging
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndexChanging
  nameWithType: FormView.PageIndexChanging
  fullName: System.Web.UI.WebControls.FormView.PageIndexChanging
- uid: System.Web.UI.WebControls.FormViewPageEventHandler
  parent: System.Web.UI.WebControls
  isExternal: false
  name: FormViewPageEventHandler
  nameWithType: FormViewPageEventHandler
  fullName: System.Web.UI.WebControls.FormViewPageEventHandler
- uid: System.Web.UI.WebControls.FormView.PagerSettings
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerSettings
  nameWithType: FormView.PagerSettings
  fullName: System.Web.UI.WebControls.FormView.PagerSettings
- uid: System.Web.UI.WebControls.PagerSettings
  parent: System.Web.UI.WebControls
  isExternal: false
  name: PagerSettings
  nameWithType: PagerSettings
  fullName: System.Web.UI.WebControls.PagerSettings
- uid: System.Web.UI.WebControls.FormView.PagerStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerStyle
  nameWithType: FormView.PagerStyle
  fullName: System.Web.UI.WebControls.FormView.PagerStyle
- uid: System.Web.UI.WebControls.FormView.PagerTemplate
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerTemplate
  nameWithType: FormView.PagerTemplate
  fullName: System.Web.UI.WebControls.FormView.PagerTemplate
- uid: System.Web.UI.WebControls.FormView.PerformDataBinding(System.Collections.IEnumerable)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PerformDataBinding(IEnumerable)
  nameWithType: FormView.PerformDataBinding(IEnumerable)
  fullName: System.Web.UI.WebControls.FormView.PerformDataBinding(IEnumerable)
- uid: System.Web.UI.WebControls.FormView.PrepareControlHierarchy
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PrepareControlHierarchy()
  nameWithType: FormView.PrepareControlHierarchy()
  fullName: System.Web.UI.WebControls.FormView.PrepareControlHierarchy()
- uid: System.Web.UI.WebControls.FormView.RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RaisePostBackEvent(String)
  nameWithType: FormView.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.FormView.Render(System.Web.UI.HtmlTextWriter)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Render(HtmlTextWriter)
  nameWithType: FormView.Render(HtmlTextWriter)
  fullName: System.Web.UI.WebControls.FormView.Render(HtmlTextWriter)
- uid: System.Web.UI.HtmlTextWriter
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriter
  nameWithType: HtmlTextWriter
  fullName: System.Web.UI.HtmlTextWriter
- uid: System.Web.UI.WebControls.FormView.RenderOuterTable
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RenderOuterTable
  nameWithType: FormView.RenderOuterTable
  fullName: System.Web.UI.WebControls.FormView.RenderOuterTable
- uid: System.Web.UI.WebControls.FormView.Row
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Row
  nameWithType: FormView.Row
  fullName: System.Web.UI.WebControls.FormView.Row
- uid: System.Web.UI.WebControls.FormView.RowStyle
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RowStyle
  nameWithType: FormView.RowStyle
  fullName: System.Web.UI.WebControls.FormView.RowStyle
- uid: System.Web.UI.WebControls.FormView.SaveControlState
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveControlState()
  nameWithType: FormView.SaveControlState()
  fullName: System.Web.UI.WebControls.FormView.SaveControlState()
- uid: System.Web.UI.WebControls.FormView.SaveViewState
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveViewState()
  nameWithType: FormView.SaveViewState()
  fullName: System.Web.UI.WebControls.FormView.SaveViewState()
- uid: System.Web.UI.WebControls.FormView.SelectedValue
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SelectedValue
  nameWithType: FormView.SelectedValue
  fullName: System.Web.UI.WebControls.FormView.SelectedValue
- uid: System.Web.UI.WebControls.FormView.SetPageIndex(System.Int32)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SetPageIndex(Int32)
  nameWithType: FormView.SetPageIndex(Int32)
  fullName: System.Web.UI.WebControls.FormView.SetPageIndex(Int32)
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DataItemIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DisplayIndex
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent(System.String)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  nameWithType: FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent(String)
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.IDataSource
  parent: System.Web.UI
  isExternal: false
  name: IDataSource
  nameWithType: IDataSource
  fullName: System.Web.UI.IDataSource
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.DataBoundControlMode
  parent: System.Web.UI.WebControls
  isExternal: false
  name: DataBoundControlMode
  nameWithType: DataBoundControlMode
  fullName: System.Web.UI.WebControls.DataBoundControlMode
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions(System.Web.UI.WebControls.IButtonControl)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  nameWithType: FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
  fullName: System.Web.UI.WebControls.FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions(IButtonControl)
- uid: System.Web.UI.PostBackOptions
  parent: System.Web.UI
  isExternal: false
  name: PostBackOptions
  nameWithType: PostBackOptions
  fullName: System.Web.UI.PostBackOptions
- uid: System.Web.UI.WebControls.IButtonControl
  parent: System.Web.UI.WebControls
  isExternal: false
  name: IButtonControl
  nameWithType: IButtonControl
  fullName: System.Web.UI.WebControls.IButtonControl
- uid: System.Web.UI.WebControls.FormView.TagKey
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TagKey
  nameWithType: FormView.TagKey
  fullName: System.Web.UI.WebControls.FormView.TagKey
- uid: System.Web.UI.HtmlTextWriterTag
  parent: System.Web.UI
  isExternal: false
  name: HtmlTextWriterTag
  nameWithType: HtmlTextWriterTag
  fullName: System.Web.UI.HtmlTextWriterTag
- uid: System.Web.UI.WebControls.FormView.TopPagerRow
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TopPagerRow
  nameWithType: FormView.TopPagerRow
  fullName: System.Web.UI.WebControls.FormView.TopPagerRow
- uid: System.Web.UI.WebControls.FormView.TrackViewState
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TrackViewState()
  nameWithType: FormView.TrackViewState()
  fullName: System.Web.UI.WebControls.FormView.TrackViewState()
- uid: System.Web.UI.WebControls.FormView.UpdateItem(System.Boolean)
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateItem(Boolean)
  nameWithType: FormView.UpdateItem(Boolean)
  fullName: System.Web.UI.WebControls.FormView.UpdateItem(Boolean)
- uid: System.Web.UI.WebControls.FormView.UpdateMethod
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateMethod
  nameWithType: FormView.UpdateMethod
  fullName: System.Web.UI.WebControls.FormView.UpdateMethod
- uid: System.Web.UI.WebControls.FormView.#ctor*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FormView
  nameWithType: FormView.FormView
- uid: System.Web.UI.WebControls.FormView.AllowPaging*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: AllowPaging
  nameWithType: FormView.AllowPaging
- uid: System.Web.UI.WebControls.FormView.BackImageUrl*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BackImageUrl
  nameWithType: FormView.BackImageUrl
- uid: System.Web.UI.WebControls.FormView.BottomPagerRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: BottomPagerRow
  nameWithType: FormView.BottomPagerRow
- uid: System.Web.UI.WebControls.FormView.Caption*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Caption
  nameWithType: FormView.Caption
- uid: System.Web.UI.WebControls.FormView.CaptionAlign*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CaptionAlign
  nameWithType: FormView.CaptionAlign
- uid: System.Web.UI.WebControls.FormView.CellPadding*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellPadding
  nameWithType: FormView.CellPadding
- uid: System.Web.UI.WebControls.FormView.CellSpacing*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CellSpacing
  nameWithType: FormView.CellSpacing
- uid: System.Web.UI.WebControls.FormView.ChangeMode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ChangeMode
  nameWithType: FormView.ChangeMode
- uid: System.Web.UI.WebControls.FormView.CreateChildControls*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateChildControls
  nameWithType: FormView.CreateChildControls
- uid: System.Web.UI.WebControls.FormView.CreateControlStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateControlStyle
  nameWithType: FormView.CreateControlStyle
- uid: System.Web.UI.WebControls.FormView.CreateDataSourceSelectArguments*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateDataSourceSelectArguments
  nameWithType: FormView.CreateDataSourceSelectArguments
- uid: System.Web.UI.WebControls.FormView.CreateRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateRow
  nameWithType: FormView.CreateRow
- uid: System.Web.UI.WebControls.FormView.CreateTable*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CreateTable
  nameWithType: FormView.CreateTable
- uid: System.Web.UI.WebControls.FormView.CurrentMode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: CurrentMode
  nameWithType: FormView.CurrentMode
- uid: System.Web.UI.WebControls.FormView.DataBind*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataBind
  nameWithType: FormView.DataBind
- uid: System.Web.UI.WebControls.FormView.DataItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItem
  nameWithType: FormView.DataItem
- uid: System.Web.UI.WebControls.FormView.DataItemCount*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemCount
  nameWithType: FormView.DataItemCount
- uid: System.Web.UI.WebControls.FormView.DataItemIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataItemIndex
  nameWithType: FormView.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.DataKey*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKey
  nameWithType: FormView.DataKey
- uid: System.Web.UI.WebControls.FormView.DataKeyNames*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DataKeyNames
  nameWithType: FormView.DataKeyNames
- uid: System.Web.UI.WebControls.FormView.DefaultMode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DefaultMode
  nameWithType: FormView.DefaultMode
- uid: System.Web.UI.WebControls.FormView.DeleteItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteItem
  nameWithType: FormView.DeleteItem
- uid: System.Web.UI.WebControls.FormView.DeleteMethod*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: DeleteMethod
  nameWithType: FormView.DeleteMethod
- uid: System.Web.UI.WebControls.FormView.EditItemTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditItemTemplate
  nameWithType: FormView.EditItemTemplate
- uid: System.Web.UI.WebControls.FormView.EditRowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EditRowStyle
  nameWithType: FormView.EditRowStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataRowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataRowStyle
  nameWithType: FormView.EmptyDataRowStyle
- uid: System.Web.UI.WebControls.FormView.EmptyDataTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataTemplate
  nameWithType: FormView.EmptyDataTemplate
- uid: System.Web.UI.WebControls.FormView.EmptyDataText*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EmptyDataText
  nameWithType: FormView.EmptyDataText
- uid: System.Web.UI.WebControls.FormView.EnableModelValidation*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnableModelValidation
  nameWithType: FormView.EnableModelValidation
- uid: System.Web.UI.WebControls.FormView.EnsureDataBound*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: EnsureDataBound
  nameWithType: FormView.EnsureDataBound
- uid: System.Web.UI.WebControls.FormView.ExtractRowValues*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ExtractRowValues
  nameWithType: FormView.ExtractRowValues
- uid: System.Web.UI.WebControls.FormView.FooterRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterRow
  nameWithType: FormView.FooterRow
- uid: System.Web.UI.WebControls.FormView.FooterStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterStyle
  nameWithType: FormView.FooterStyle
- uid: System.Web.UI.WebControls.FormView.FooterTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterTemplate
  nameWithType: FormView.FooterTemplate
- uid: System.Web.UI.WebControls.FormView.FooterText*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: FooterText
  nameWithType: FormView.FooterText
- uid: System.Web.UI.WebControls.FormView.GridLines*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: GridLines
  nameWithType: FormView.GridLines
- uid: System.Web.UI.WebControls.FormView.HeaderRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderRow
  nameWithType: FormView.HeaderRow
- uid: System.Web.UI.WebControls.FormView.HeaderStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderStyle
  nameWithType: FormView.HeaderStyle
- uid: System.Web.UI.WebControls.FormView.HeaderTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderTemplate
  nameWithType: FormView.HeaderTemplate
- uid: System.Web.UI.WebControls.FormView.HeaderText*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HeaderText
  nameWithType: FormView.HeaderText
- uid: System.Web.UI.WebControls.FormView.HorizontalAlign*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: HorizontalAlign
  nameWithType: FormView.HorizontalAlign
- uid: System.Web.UI.WebControls.FormView.InitializePager*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializePager
  nameWithType: FormView.InitializePager
- uid: System.Web.UI.WebControls.FormView.InitializeRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InitializeRow
  nameWithType: FormView.InitializeRow
- uid: System.Web.UI.WebControls.FormView.InsertItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItem
  nameWithType: FormView.InsertItem
- uid: System.Web.UI.WebControls.FormView.InsertItemTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertItemTemplate
  nameWithType: FormView.InsertItemTemplate
- uid: System.Web.UI.WebControls.FormView.InsertMethod*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertMethod
  nameWithType: FormView.InsertMethod
- uid: System.Web.UI.WebControls.FormView.InsertRowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: InsertRowStyle
  nameWithType: FormView.InsertRowStyle
- uid: System.Web.UI.WebControls.FormView.IsBindableType*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: IsBindableType
  nameWithType: FormView.IsBindableType
- uid: System.Web.UI.WebControls.FormView.ItemTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ItemTemplate
  nameWithType: FormView.ItemTemplate
- uid: System.Web.UI.WebControls.FormView.LoadControlState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadControlState
  nameWithType: FormView.LoadControlState
- uid: System.Web.UI.WebControls.FormView.LoadViewState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: LoadViewState
  nameWithType: FormView.LoadViewState
- uid: System.Web.UI.WebControls.FormView.ModifiedOuterTableStylePropertyName*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: ModifiedOuterTableStylePropertyName
  nameWithType: FormView.ModifiedOuterTableStylePropertyName
- uid: System.Web.UI.WebControls.FormView.OnBubbleEvent*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnBubbleEvent
  nameWithType: FormView.OnBubbleEvent
- uid: System.Web.UI.WebControls.FormView.OnInit*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnInit
  nameWithType: FormView.OnInit
- uid: System.Web.UI.WebControls.FormView.OnItemCommand*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCommand
  nameWithType: FormView.OnItemCommand
- uid: System.Web.UI.WebControls.FormView.OnItemCreated*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemCreated
  nameWithType: FormView.OnItemCreated
- uid: System.Web.UI.WebControls.FormView.OnItemDeleted*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleted
  nameWithType: FormView.OnItemDeleted
- uid: System.Web.UI.WebControls.FormView.OnItemDeleting*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemDeleting
  nameWithType: FormView.OnItemDeleting
- uid: System.Web.UI.WebControls.FormView.OnItemInserted*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserted
  nameWithType: FormView.OnItemInserted
- uid: System.Web.UI.WebControls.FormView.OnItemInserting*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemInserting
  nameWithType: FormView.OnItemInserting
- uid: System.Web.UI.WebControls.FormView.OnItemUpdated*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdated
  nameWithType: FormView.OnItemUpdated
- uid: System.Web.UI.WebControls.FormView.OnItemUpdating*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnItemUpdating
  nameWithType: FormView.OnItemUpdating
- uid: System.Web.UI.WebControls.FormView.OnModeChanged*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanged
  nameWithType: FormView.OnModeChanged
- uid: System.Web.UI.WebControls.FormView.OnModeChanging*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnModeChanging
  nameWithType: FormView.OnModeChanging
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanged*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanged
  nameWithType: FormView.OnPageIndexChanged
- uid: System.Web.UI.WebControls.FormView.OnPageIndexChanging*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: OnPageIndexChanging
  nameWithType: FormView.OnPageIndexChanging
- uid: System.Web.UI.WebControls.FormView.PageCount*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageCount
  nameWithType: FormView.PageCount
- uid: System.Web.UI.WebControls.FormView.PageIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PageIndex
  nameWithType: FormView.PageIndex
- uid: System.Web.UI.WebControls.FormView.PagerSettings*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerSettings
  nameWithType: FormView.PagerSettings
- uid: System.Web.UI.WebControls.FormView.PagerStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerStyle
  nameWithType: FormView.PagerStyle
- uid: System.Web.UI.WebControls.FormView.PagerTemplate*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PagerTemplate
  nameWithType: FormView.PagerTemplate
- uid: System.Web.UI.WebControls.FormView.PerformDataBinding*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PerformDataBinding
  nameWithType: FormView.PerformDataBinding
- uid: System.Web.UI.WebControls.FormView.PrepareControlHierarchy*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: PrepareControlHierarchy
  nameWithType: FormView.PrepareControlHierarchy
- uid: System.Web.UI.WebControls.FormView.RaisePostBackEvent*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RaisePostBackEvent
  nameWithType: FormView.RaisePostBackEvent
- uid: System.Web.UI.WebControls.FormView.Render*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Render
  nameWithType: FormView.Render
- uid: System.Web.UI.WebControls.FormView.RenderOuterTable*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RenderOuterTable
  nameWithType: FormView.RenderOuterTable
- uid: System.Web.UI.WebControls.FormView.Row*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: Row
  nameWithType: FormView.Row
- uid: System.Web.UI.WebControls.FormView.RowStyle*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: RowStyle
  nameWithType: FormView.RowStyle
- uid: System.Web.UI.WebControls.FormView.SaveControlState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveControlState
  nameWithType: FormView.SaveControlState
- uid: System.Web.UI.WebControls.FormView.SaveViewState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SaveViewState
  nameWithType: FormView.SaveViewState
- uid: System.Web.UI.WebControls.FormView.SelectedValue*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SelectedValue
  nameWithType: FormView.SelectedValue
- uid: System.Web.UI.WebControls.FormView.SetPageIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: SetPageIndex
  nameWithType: FormView.SetPageIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DataItemIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DataItemIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DataItemIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IDataItemContainer#DisplayIndex*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IDataItemContainer.DisplayIndex
  nameWithType: FormView.System.Web.UI.IDataItemContainer.DisplayIndex
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#IPostBackEventHandler#RaisePostBackEvent*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
  nameWithType: FormView.System.Web.UI.IPostBackEventHandler.RaisePostBackEvent
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataKeyNames*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataKeyNames
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataMember*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataMember
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataMember
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSource*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSource
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSource
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceID*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceID
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceID
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundControl#DataSourceObject*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundControl.DataSourceObject
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#DataKey*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.DataKey
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.DataKey
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IDataBoundItemControl#Mode*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IDataBoundItemControl.Mode
  nameWithType: FormView.System.Web.UI.WebControls.IDataBoundItemControl.Mode
- uid: System.Web.UI.WebControls.FormView.System#Web#UI#WebControls#IPostBackContainer#GetPostBackOptions*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
  nameWithType: FormView.System.Web.UI.WebControls.IPostBackContainer.GetPostBackOptions
- uid: System.Web.UI.WebControls.FormView.TagKey*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TagKey
  nameWithType: FormView.TagKey
- uid: System.Web.UI.WebControls.FormView.TopPagerRow*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TopPagerRow
  nameWithType: FormView.TopPagerRow
- uid: System.Web.UI.WebControls.FormView.TrackViewState*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: TrackViewState
  nameWithType: FormView.TrackViewState
- uid: System.Web.UI.WebControls.FormView.UpdateItem*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateItem
  nameWithType: FormView.UpdateItem
- uid: System.Web.UI.WebControls.FormView.UpdateMethod*
  parent: System.Web.UI.WebControls.FormView
  isExternal: false
  name: UpdateMethod
  nameWithType: FormView.UpdateMethod
