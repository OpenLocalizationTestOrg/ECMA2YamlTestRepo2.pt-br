### YamlMime:ManagedReference
items:
- uid: System.Windows.Forms.Control
  id: Control
  children:
  - System.Windows.Forms.Control.#ctor
  - System.Windows.Forms.Control.#ctor(System.String)
  - System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  - System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  - System.Windows.Forms.Control.AccessibilityObject
  - System.Windows.Forms.Control.AccessibleDefaultActionDescription
  - System.Windows.Forms.Control.AccessibleDescription
  - System.Windows.Forms.Control.AccessibleName
  - System.Windows.Forms.Control.AccessibleRole
  - System.Windows.Forms.Control.AllowDrop
  - System.Windows.Forms.Control.Anchor
  - System.Windows.Forms.Control.AutoScrollOffset
  - System.Windows.Forms.Control.AutoSize
  - System.Windows.Forms.Control.AutoSizeChanged
  - System.Windows.Forms.Control.BackColor
  - System.Windows.Forms.Control.BackColorChanged
  - System.Windows.Forms.Control.BackgroundImage
  - System.Windows.Forms.Control.BackgroundImageChanged
  - System.Windows.Forms.Control.BackgroundImageLayout
  - System.Windows.Forms.Control.BackgroundImageLayoutChanged
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  - System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.BindingContext
  - System.Windows.Forms.Control.BindingContextChanged
  - System.Windows.Forms.Control.Bottom
  - System.Windows.Forms.Control.Bounds
  - System.Windows.Forms.Control.BringToFront
  - System.Windows.Forms.Control.CanEnableIme
  - System.Windows.Forms.Control.CanFocus
  - System.Windows.Forms.Control.CanRaiseEvents
  - System.Windows.Forms.Control.CanSelect
  - System.Windows.Forms.Control.Capture
  - System.Windows.Forms.Control.CausesValidation
  - System.Windows.Forms.Control.CausesValidationChanged
  - System.Windows.Forms.Control.ChangeUICues
  - System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  - System.Windows.Forms.Control.Click
  - System.Windows.Forms.Control.ClientRectangle
  - System.Windows.Forms.Control.ClientSize
  - System.Windows.Forms.Control.ClientSizeChanged
  - System.Windows.Forms.Control.CompanyName
  - System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  - System.Windows.Forms.Control.ContainsFocus
  - System.Windows.Forms.Control.ContextMenu
  - System.Windows.Forms.Control.ContextMenuChanged
  - System.Windows.Forms.Control.ContextMenuStrip
  - System.Windows.Forms.Control.ContextMenuStripChanged
  - System.Windows.Forms.Control.ControlAdded
  - System.Windows.Forms.Control.ControlRemoved
  - System.Windows.Forms.Control.Controls
  - System.Windows.Forms.Control.CreateAccessibilityInstance
  - System.Windows.Forms.Control.CreateControl
  - System.Windows.Forms.Control.CreateControlsInstance
  - System.Windows.Forms.Control.Created
  - System.Windows.Forms.Control.CreateGraphics
  - System.Windows.Forms.Control.CreateHandle
  - System.Windows.Forms.Control.CreateParams
  - System.Windows.Forms.Control.Cursor
  - System.Windows.Forms.Control.CursorChanged
  - System.Windows.Forms.Control.DataBindings
  - System.Windows.Forms.Control.DefaultBackColor
  - System.Windows.Forms.Control.DefaultCursor
  - System.Windows.Forms.Control.DefaultFont
  - System.Windows.Forms.Control.DefaultForeColor
  - System.Windows.Forms.Control.DefaultImeMode
  - System.Windows.Forms.Control.DefaultMargin
  - System.Windows.Forms.Control.DefaultMaximumSize
  - System.Windows.Forms.Control.DefaultMinimumSize
  - System.Windows.Forms.Control.DefaultPadding
  - System.Windows.Forms.Control.DefaultSize
  - System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.DestroyHandle
  - System.Windows.Forms.Control.DisplayRectangle
  - System.Windows.Forms.Control.Dispose(System.Boolean)
  - System.Windows.Forms.Control.Disposing
  - System.Windows.Forms.Control.Dock
  - System.Windows.Forms.Control.DockChanged
  - System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  - System.Windows.Forms.Control.DoubleBuffered
  - System.Windows.Forms.Control.DoubleClick
  - System.Windows.Forms.Control.DragDrop
  - System.Windows.Forms.Control.DragEnter
  - System.Windows.Forms.Control.DragLeave
  - System.Windows.Forms.Control.DragOver
  - System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Enabled
  - System.Windows.Forms.Control.EnabledChanged
  - System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  - System.Windows.Forms.Control.Enter
  - System.Windows.Forms.Control.FindForm
  - System.Windows.Forms.Control.Focus
  - System.Windows.Forms.Control.Focused
  - System.Windows.Forms.Control.Font
  - System.Windows.Forms.Control.FontChanged
  - System.Windows.Forms.Control.FontHeight
  - System.Windows.Forms.Control.ForeColor
  - System.Windows.Forms.Control.ForeColorChanged
  - System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  - System.Windows.Forms.Control.FromHandle(System.IntPtr)
  - System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  - System.Windows.Forms.Control.GetAutoSizeMode
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  - System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  - System.Windows.Forms.Control.GetContainerControl
  - System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  - System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  - System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  - System.Windows.Forms.Control.GetTopLevel
  - System.Windows.Forms.Control.GiveFeedback
  - System.Windows.Forms.Control.GotFocus
  - System.Windows.Forms.Control.Handle
  - System.Windows.Forms.Control.HandleCreated
  - System.Windows.Forms.Control.HandleDestroyed
  - System.Windows.Forms.Control.HasChildren
  - System.Windows.Forms.Control.Height
  - System.Windows.Forms.Control.HelpRequested
  - System.Windows.Forms.Control.Hide
  - System.Windows.Forms.Control.ImeMode
  - System.Windows.Forms.Control.ImeModeBase
  - System.Windows.Forms.Control.ImeModeChanged
  - System.Windows.Forms.Control.InitLayout
  - System.Windows.Forms.Control.Invalidate
  - System.Windows.Forms.Control.Invalidate(System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  - System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  - System.Windows.Forms.Control.Invalidated
  - System.Windows.Forms.Control.Invoke(System.Delegate)
  - System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  - System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  - System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.InvokeRequired
  - System.Windows.Forms.Control.IsAccessible
  - System.Windows.Forms.Control.IsDisposed
  - System.Windows.Forms.Control.IsHandleCreated
  - System.Windows.Forms.Control.IsInputChar(System.Char)
  - System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.IsMirrored
  - System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  - System.Windows.Forms.Control.KeyDown
  - System.Windows.Forms.Control.KeyPress
  - System.Windows.Forms.Control.KeyUp
  - System.Windows.Forms.Control.Layout
  - System.Windows.Forms.Control.LayoutEngine
  - System.Windows.Forms.Control.Leave
  - System.Windows.Forms.Control.Left
  - System.Windows.Forms.Control.Location
  - System.Windows.Forms.Control.LocationChanged
  - System.Windows.Forms.Control.LostFocus
  - System.Windows.Forms.Control.Margin
  - System.Windows.Forms.Control.MarginChanged
  - System.Windows.Forms.Control.MaximumSize
  - System.Windows.Forms.Control.MinimumSize
  - System.Windows.Forms.Control.ModifierKeys
  - System.Windows.Forms.Control.MouseButtons
  - System.Windows.Forms.Control.MouseCaptureChanged
  - System.Windows.Forms.Control.MouseClick
  - System.Windows.Forms.Control.MouseDoubleClick
  - System.Windows.Forms.Control.MouseDown
  - System.Windows.Forms.Control.MouseEnter
  - System.Windows.Forms.Control.MouseHover
  - System.Windows.Forms.Control.MouseLeave
  - System.Windows.Forms.Control.MouseMove
  - System.Windows.Forms.Control.MousePosition
  - System.Windows.Forms.Control.MouseUp
  - System.Windows.Forms.Control.MouseWheel
  - System.Windows.Forms.Control.Move
  - System.Windows.Forms.Control.Name
  - System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  - System.Windows.Forms.Control.OnClick(System.EventArgs)
  - System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  - System.Windows.Forms.Control.OnCreateControl
  - System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  - System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  - System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)
  - System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)
  - System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  - System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  - System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  - System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  - System.Windows.Forms.Control.OnLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  - System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  - System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.OnMove(System.EventArgs)
  - System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  - System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  - System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  - System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnResize(System.EventArgs)
  - System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnTextChanged(System.EventArgs)
  - System.Windows.Forms.Control.OnValidated(System.EventArgs)
  - System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  - System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)
  - System.Windows.Forms.Control.Padding
  - System.Windows.Forms.Control.PaddingChanged
  - System.Windows.Forms.Control.Paint
  - System.Windows.Forms.Control.Parent
  - System.Windows.Forms.Control.ParentChanged
  - System.Windows.Forms.Control.PerformLayout
  - System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  - System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  - System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  - System.Windows.Forms.Control.PreferredSize
  - System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.PreviewKeyDown
  - System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  - System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)
  - System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  - System.Windows.Forms.Control.ProductName
  - System.Windows.Forms.Control.ProductVersion
  - System.Windows.Forms.Control.PropagatingImeMode
  - System.Windows.Forms.Control.QueryAccessibilityHelp
  - System.Windows.Forms.Control.QueryContinueDrag
  - System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  - System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  - System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  - System.Windows.Forms.Control.RecreateHandle
  - System.Windows.Forms.Control.RecreatingHandle
  - System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  - System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  - System.Windows.Forms.Control.Refresh
  - System.Windows.Forms.Control.Region
  - System.Windows.Forms.Control.RegionChanged
  - System.Windows.Forms.Control.RenderRightToLeft
  - System.Windows.Forms.Control.ResetBackColor
  - System.Windows.Forms.Control.ResetBindings
  - System.Windows.Forms.Control.ResetCursor
  - System.Windows.Forms.Control.ResetFont
  - System.Windows.Forms.Control.ResetForeColor
  - System.Windows.Forms.Control.ResetImeMode
  - System.Windows.Forms.Control.ResetMouseEventArgs
  - System.Windows.Forms.Control.ResetRightToLeft
  - System.Windows.Forms.Control.ResetText
  - System.Windows.Forms.Control.Resize
  - System.Windows.Forms.Control.ResizeRedraw
  - System.Windows.Forms.Control.ResumeLayout
  - System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  - System.Windows.Forms.Control.Right
  - System.Windows.Forms.Control.RightToLeft
  - System.Windows.Forms.Control.RightToLeftChanged
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  - System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  - System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  - System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  - System.Windows.Forms.Control.Scale(System.Single)
  - System.Windows.Forms.Control.Scale(System.Single,System.Single)
  - System.Windows.Forms.Control.ScaleChildren
  - System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  - System.Windows.Forms.Control.Select
  - System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - System.Windows.Forms.Control.SendToBack
  - System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  - System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  - System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  - System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  - System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  - System.Windows.Forms.Control.Show
  - System.Windows.Forms.Control.ShowFocusCues
  - System.Windows.Forms.Control.ShowKeyboardCues
  - System.Windows.Forms.Control.Site
  - System.Windows.Forms.Control.Size
  - System.Windows.Forms.Control.SizeChanged
  - System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  - System.Windows.Forms.Control.StyleChanged
  - System.Windows.Forms.Control.SuspendLayout
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  - System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  - System.Windows.Forms.Control.SystemColorsChanged
  - System.Windows.Forms.Control.TabIndex
  - System.Windows.Forms.Control.TabIndexChanged
  - System.Windows.Forms.Control.TabStop
  - System.Windows.Forms.Control.TabStopChanged
  - System.Windows.Forms.Control.Tag
  - System.Windows.Forms.Control.Text
  - System.Windows.Forms.Control.TextChanged
  - System.Windows.Forms.Control.Top
  - System.Windows.Forms.Control.TopLevelControl
  - System.Windows.Forms.Control.Update
  - System.Windows.Forms.Control.UpdateBounds
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  - System.Windows.Forms.Control.UpdateStyles
  - System.Windows.Forms.Control.UpdateZOrder
  - System.Windows.Forms.Control.UseWaitCursor
  - System.Windows.Forms.Control.Validated
  - System.Windows.Forms.Control.Validating
  - System.Windows.Forms.Control.Visible
  - System.Windows.Forms.Control.VisibleChanged
  - System.Windows.Forms.Control.Width
  - System.Windows.Forms.Control.WindowTarget
  - System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)
  langs:
  - csharp
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
  type: Class
  summary: "Define a classe base para controles, que são componentes com representação visual."
  remarks: "Para criar sua própria classe de controle, herdam o <xref:System.Windows.Forms.UserControl>, classes de controle ou de outros formulários do Windows fornecido controles.</xref:System.Windows.Forms.UserControl> Para obter mais informações sobre a criação de controles personalizados, consulte [desenvolvimento personalizado controles dos Windows Forms com o .NET Framework](~/add/includes/ajax-current-ext-md.md).       A classe de controle implementa funcionalidade muito básica necessária por classes que exibem informações ao usuário. Ele trata a entrada do usuário por meio do teclado e dispositivos apontadores. Gerencia o roteamento de mensagens e segurança. Define o limite de um controle (sua posição e tamanho), embora ele não implementa a pintura. Ele fornece um identificador de janela (`hWnd`).       Controles de formulários do Windows usam propriedades de ambiente para que controles filho podem aparecer como o seu ambiente. Um *propriedade de ambiente* é uma propriedade de controle que, se não for definido, será recuperado do controle pai. Se o controle não tem um <xref:System.Windows.Forms.Control.Parent%2A>e a propriedade não for definida, o controle tenta determinar o valor da propriedade de ambiente por meio de <xref:System.Windows.Forms.Control.Site%2A>propriedade.</xref:System.Windows.Forms.Control.Site%2A> </xref:System.Windows.Forms.Control.Parent%2A> Se o controle não é localizado, se o site não oferece suporte a propriedades de ambiente, ou se a propriedade não está definida no <xref:System.Windows.Forms.AmbientProperties>, o controle usa seus próprios valores padrão.</xref:System.Windows.Forms.AmbientProperties> Normalmente, uma propriedade de ambiente representa uma característica de um controle, como <xref:System.Windows.Forms.Control.BackColor%2A>, que é comunicado para um controle filho.</xref:System.Windows.Forms.Control.BackColor%2A> Por exemplo, um <xref:System.Windows.Forms.Button>terão o mesmo <xref:System.Windows.Forms.Control.BackColor%2A>como seu pai <xref:System.Windows.Forms.Form>por padrão.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Button> Propriedades de ambiente fornecidas pelo Controlclass incluem: <xref:System.Windows.Forms.Control.Cursor%2A>, <xref:System.Windows.Forms.Control.Font%2A>, <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.ForeColor%2A>e <xref:System.Windows.Forms.Control.RightToLeft%2A>.</xref:System.Windows.Forms.Control.RightToLeft%2A> </xref:System.Windows.Forms.Control.ForeColor%2A> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Control.Font%2A> </xref:System.Windows.Forms.Control.Cursor%2A>      > [!NOTE] > Para tornar seu aplicativo de formulários do Windows oferecem suporte a estilos visuais, certifique-se de definir o <xref:System.Windows.Forms.FlatStyle>propriedade `System` e incluir um manifesto com o executável.</xref:System.Windows.Forms.FlatStyle> Um manifesto é um arquivo XML que está incluído como um recurso no executável do aplicativo ou como um arquivo separado que reside no mesmo diretório que o arquivo executável. Para obter um exemplo de um manifesto, consulte a seção exemplo de <xref:System.Windows.Forms.FlatStyle>enumeração.</xref:System.Windows.Forms.FlatStyle> Para obter mais informações sobre como usar os estilos visuais, consulte[estilos visuais](http://msdn.microsoft.com/library/windows/desktop/bb773187.aspx).       Windows Forms tem suporte de acessibilidade interno e fornece informações sobre o aplicativo que permite trabalhar com aplicativos cliente de acessibilidade como ampliador de tela e revisor utilitários, voz entrada utilitários, na tela teclados, dispositivos de entrada alternativos e os utilitários de aprimoramento de teclado. Às vezes, você deve fornecer informações adicionais para aplicativos cliente de acessibilidade. Há duas maneiras de fornecer essas informações adicionais. Você pode definir o <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleDescription%2A>, <xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A>, e <xref:System.Windows.Forms.Control.AccessibleRole%2A>valores de propriedade, que serão relatados para aplicativos cliente de acessibilidade.</xref:System.Windows.Forms.Control.AccessibleRole%2A> </xref:System.Windows.Forms.Control.AccessibleDefaultActionDescription%2A> </xref:System.Windows.Forms.Control.AccessibleDescription%2A> </xref:System.Windows.Forms.Control.AccessibleName%2A> Normalmente, esse método é usado para fornecer informações de acessibilidade limitada para controles existentes. Como alternativa, você pode escrever sua própria classe derivando de <xref:System.Windows.Forms.AccessibleObject>ou <xref:System.Windows.Forms.Control.ControlAccessibleObject>classes, fornecendo tanta informação de acessibilidade, conforme necessário.</xref:System.Windows.Forms.Control.ControlAccessibleObject> </xref:System.Windows.Forms.AccessibleObject>      > [!NOTE] > Para manter o melhor desempenho, não defina o tamanho de um controle em seu construtor. É o método preferido substituir o <xref:System.Windows.Forms.Control.DefaultSize%2A>propriedade.</xref:System.Windows.Forms.Control.DefaultSize%2A>      > [!NOTE] > Não adicionar associações de dados para um controle em seu construtor. Isso fará com que erros de geração de código e pode causar um comportamento indesejado.       A maioria dos controles de <xref:System.Windows.Forms>namespace usar o controle comum do Windows subjacente como base para construir.</xref:System.Windows.Forms> Para obter mais informações sobre os controles comuns do Windows, consulte[referência de controle geral](http://msdn.microsoft.com/library/windows/desktop/bb775497.aspx).       Para identificar os controles de formulários do Windows de um processo separado, use um padrão de `SendMessage` chamada para passar a mensagem WM_GETCONTROLNAME. WM_GETCONTROLNAME é independente do idioma e a hierarquia do Windows. Para obter mais informações, consulte o tópico &quot;Recomendado solução para formulários do Windows&quot; nos[automatização de Windows Forms](http://msdn.microsoft.com/library/ms996405.aspx).       Use o <xref:System.Windows.Forms.Control.InvokeRequired%2A>propriedade para sincronizar o acesso para o controle de vários threads.</xref:System.Windows.Forms.Control.InvokeRequired%2A> Para obter mais informações sobre os controles de Windows Forms com multithread, consulte [como: fazer chamadas Thread-Safe para controles dos Windows Forms](~/add/includes/ajax-current-ext-md.md)"
  syntax:
    content: >-
      [System.ComponentModel.DefaultEvent("Click")]

      [System.ComponentModel.DefaultProperty("Text")]

      [System.ComponentModel.Design.Serialization.DesignerSerializer("System.Windows.Forms.Design.ControlCodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.ComponentModel.Design.Serialization.CodeDomSerializer, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.Designer("System.Windows.Forms.Design.ControlDesigner, System.Design, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a")]

      [System.ComponentModel.ToolboxItemFilter("System.Windows.Forms")]

      [System.Runtime.InteropServices.ClassInterface(System.Runtime.InteropServices.ClassInterfaceType.AutoDispatch)]

      [System.Runtime.InteropServices.ComVisible(true)]

      public class Control : System.ComponentModel.Component, IDisposable, System.ComponentModel.ISynchronizeInvoke, System.Windows.Forms.IBindableComponent, System.Windows.Forms.IDropTarget, System.Windows.Forms.IWin32Window
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - System.ComponentModel.Component
  implements:
  - System.ComponentModel.ISynchronizeInvoke
  - System.IDisposable
  - System.Windows.Forms.IBindableComponent
  - System.Windows.Forms.IDropTarget
  - System.Windows.Forms.IWin32Window
  inheritedMembers:
  - System.ComponentModel.Component.Container
  - System.ComponentModel.Component.DesignMode
  - System.ComponentModel.Component.Dispose
  - System.ComponentModel.Component.Disposed
  - System.ComponentModel.Component.Events
  - System.ComponentModel.Component.GetService(System.Type)
  - System.ComponentModel.Component.ToString
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Windows.Forms.Control.#ctor
  id: '#ctor'
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Control()
  nameWithType: Control.Control()
  fullName: System.Windows.Forms.Control.Control()
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> classe com as configurações padrão."
  remarks: "O <xref:System.Windows.Forms.Control>classe é a classe base para todos os controles usados em um aplicativo do Windows Forms.</xref:System.Windows.Forms.Control> Como essa classe não é normalmente usada para criar uma instância da classe, este construtor não normalmente é chamado diretamente, mas em vez disso, é chamado por uma classe derivada."
  syntax:
    content: public Control ();
    parameters: []
  overload: System.Windows.Forms.Control.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Control(String)
  nameWithType: Control.Control(String)
  fullName: System.Windows.Forms.Control.Control(String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> classe com um texto específico."
  remarks: "O <xref:System.Windows.Forms.Control>classe é a classe base para todos os controles usados em um aplicativo do Windows Forms.</xref:System.Windows.Forms.Control> Como essa classe não é normalmente usada para criar uma instância da classe, este construtor não normalmente é chamado diretamente, mas em vez disso, é chamado por uma classe derivada.       Esta versão do <xref:System.Windows.Forms.Control.%23ctor%2A>construtor define inicial <xref:System.Windows.Forms.Control.Text%2A>valor da propriedade para o `text` o valor do parâmetro.</xref:System.Windows.Forms.Control.Text%2A> </xref:System.Windows.Forms.Control.%23ctor%2A>"
  syntax:
    content: public Control (string text);
    parameters:
    - id: text
      type: System.String
      description: "O texto exibido pelo controle."
  overload: System.Windows.Forms.Control.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)
  id: '#ctor(System.Windows.Forms.Control,System.String)'
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Control(Control,String)
  nameWithType: Control.Control(Control,String)
  fullName: System.Windows.Forms.Control.Control(Control,String)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> classe como um controle filho, com um texto específico."
  remarks: "O <xref:System.Windows.Forms.Control>classe é a classe base para todos os controles usados em um aplicativo do Windows Forms.</xref:System.Windows.Forms.Control> Como essa classe não é normalmente usada para criar uma instância da classe, este construtor não normalmente é chamado diretamente, mas em vez disso, é chamado por uma classe derivada.       Esta versão do <xref:System.Windows.Forms.Control.%23ctor%2A>construtor define inicial <xref:System.Windows.Forms.Control.Text%2A>valor da propriedade para o `text` o valor do parâmetro.</xref:System.Windows.Forms.Control.Text%2A> </xref:System.Windows.Forms.Control.%23ctor%2A> O construtor também adiciona o controle para o pai do controle <xref:System.Windows.Forms.Control.ControlCollection>.</xref:System.Windows.Forms.Control.ControlCollection>"
  syntax:
    content: public Control (System.Windows.Forms.Control parent, string text);
    parameters:
    - id: parent
      type: System.Windows.Forms.Control
      description: "O <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> para ser o pai do controle."
    - id: text
      type: System.String
      description: "O texto exibido pelo controle."
  overload: System.Windows.Forms.Control.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Control(String,Int32,Int32,Int32,Int32)
  nameWithType: Control.Control(String,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.Control(String,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> classe com um texto específico, tamanho e local."
  remarks: "O <xref:System.Windows.Forms.Control>classe é a classe base para todos os controles usados em um aplicativo do Windows Forms.</xref:System.Windows.Forms.Control> Como essa classe não é normalmente usada para criar uma instância da classe, este construtor não normalmente é chamado diretamente, mas em vez disso, é chamado por uma classe derivada.       Esta versão do <xref:System.Windows.Forms.Control.%23ctor%2A>construtor define inicial <xref:System.Windows.Forms.Control.Text%2A>valor da propriedade para o `text` o valor do parâmetro.</xref:System.Windows.Forms.Control.Text%2A> </xref:System.Windows.Forms.Control.%23ctor%2A> Inicial <xref:System.Windows.Forms.Control.Size%2A>e <xref:System.Windows.Forms.Control.Location%2A>do controle são determinados pelo `left`, `top`, `width` e `height` valores de parâmetro.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Control.Size%2A>      > [!NOTE] > Para manter o melhor desempenho, não defina o tamanho de um controle em seu construtor. É o método preferido substituir o <xref:System.Windows.Forms.Control.DefaultSize%2A>propriedade.</xref:System.Windows.Forms.Control.DefaultSize%2A>"
  syntax:
    content: public Control (string text, int left, int top, int width, int height);
    parameters:
    - id: text
      type: System.String
      description: "O texto exibido pelo controle."
    - id: left
      type: System.Int32
      description: "O <> </> *> posição do controle, em pixels, da borda esquerda do contêiner do controle. O valor é atribuído para o <> </> *> propriedade."
    - id: top
      type: System.Int32
      description: "O <> </> *> posição do controle, em pixels, da borda superior do contêiner do controle. O valor é atribuído para o <> </> *> propriedade."
    - id: width
      type: System.Int32
      description: "A largura do controle, em pixels. O valor é atribuído para o <xref:System.Windows.Forms.Control.Width*>propriedade.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "A altura do controle, em pixels. O valor é atribuído para o <xref:System.Windows.Forms.Control.Height*>propriedade.</xref:System.Windows.Forms.Control.Height*>"
  overload: System.Windows.Forms.Control.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  id: '#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)'
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Control(Control,String,Int32,Int32,Int32,Int32)
  nameWithType: Control.Control(Control,String,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.Control(Control,String,Int32,Int32,Int32,Int32)
  type: Constructor
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> classe como um controle filho, com um texto específico, tamanho e local."
  remarks: "O <xref:System.Windows.Forms.Control>classe é a classe base para todos os controles usados em um aplicativo do Windows Forms.</xref:System.Windows.Forms.Control> Como essa classe não é normalmente usada para criar uma instância da classe, este construtor não normalmente é chamado diretamente, mas em vez disso, é chamado por uma classe derivada.       Esta versão do <xref:System.Windows.Forms.Control.%23ctor%2A>construtor define inicial <xref:System.Windows.Forms.Control.Text%2A>valor da propriedade para o `text` o valor do parâmetro.</xref:System.Windows.Forms.Control.Text%2A> </xref:System.Windows.Forms.Control.%23ctor%2A> O construtor também adiciona o controle para o pai do controle <xref:System.Windows.Forms.Control.ControlCollection>.</xref:System.Windows.Forms.Control.ControlCollection> Inicial <xref:System.Windows.Forms.Control.Size%2A>e <xref:System.Windows.Forms.Control.Location%2A>do controle são determinados pelo `left`, `top`, `width` e `height` valores de parâmetro.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Control.Size%2A>      > [!NOTE] > Para manter o melhor desempenho, não defina o tamanho de um controle em seu construtor. É o método preferido substituir o <xref:System.Windows.Forms.Control.DefaultSize%2A>propriedade.</xref:System.Windows.Forms.Control.DefaultSize%2A>"
  syntax:
    content: public Control (System.Windows.Forms.Control parent, string text, int left, int top, int width, int height);
    parameters:
    - id: parent
      type: System.Windows.Forms.Control
      description: "O <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> para ser o pai do controle."
    - id: text
      type: System.String
      description: "O texto exibido pelo controle."
    - id: left
      type: System.Int32
      description: "O <> </> *> posição do controle, em pixels, da borda esquerda do contêiner do controle. O valor é atribuído para o <> </> *> propriedade."
    - id: top
      type: System.Int32
      description: "O <> </> *> posição do controle, em pixels, da borda superior do contêiner do controle. O valor é atribuído para o <> </> *> propriedade."
    - id: width
      type: System.Int32
      description: "A largura do controle, em pixels. O valor é atribuído para o <xref:System.Windows.Forms.Control.Width*>propriedade.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "A altura do controle, em pixels. O valor é atribuído para o <xref:System.Windows.Forms.Control.Height*>propriedade.</xref:System.Windows.Forms.Control.Height*>"
  overload: System.Windows.Forms.Control.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  id: AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibilityNotifyClients(AccessibleEvents,Int32)
  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents,Int32)
  fullName: System.Windows.Forms.Control.AccessibilityNotifyClients(AccessibleEvents,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Notifica os aplicativos cliente de acessibilidade do <xref href=&quot;System.Windows.Forms.AccessibleEvents&quot;> </xref> para o controle filho especificado."
  remarks: "Você deve chamar o <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=fullName>método para cada <xref:System.Windows.Forms.AccessibleEvents>serão notificados de aplicativos de cliente de acessibilidade.</xref:System.Windows.Forms.AccessibleEvents> </xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A?displayProperty=fullName> O <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A>método normalmente é chamado quando uma propriedade é definida ou de dentro um manipulador de eventos.</xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A> Por exemplo, você pode chamar o <xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A>método e passar um <xref:System.Windows.Forms.AccessibleEvents>valor `Hide` de dentro do manipulador de eventos para o <xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=fullName>evento.</xref:System.Windows.Forms.Control.VisibleChanged?displayProperty=fullName> </xref:System.Windows.Forms.AccessibleEvents> </xref:System.Windows.Forms.Control.ControlAccessibleObject.NotifyClients%2A>"
  example:
  - "The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates calling the AccessibilityNotifyClients method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#5](~/add/codesnippet/visualbasic/af0c391d-8e12-4af6-b124-_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#5](~/add/codesnippet/csharp/af0c391d-8e12-4af6-b124-_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#5](~/add/codesnippet/cpp/af0c391d-8e12-4af6-b124-_1.cpp)]"
  syntax:
    content: protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int childID);
    parameters:
    - id: accEvent
      type: System.Windows.Forms.AccessibleEvents
      description: "O <xref href=&quot;System.Windows.Forms.AccessibleEvents&quot;> </xref> para notificar os aplicativos cliente de acessibilidade do."
    - id: childID
      type: System.Int32
      description: "O filho <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> para notificar o evento acessível."
  overload: System.Windows.Forms.Control.AccessibilityNotifyClients*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  id: AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)
  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)
  fullName: System.Windows.Forms.Control.AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Notifica os aplicativos cliente de acessibilidade do <xref href=&quot;System.Windows.Forms.AccessibleEvents&quot;> </xref> para o controle filho especificado."
  syntax:
    content: protected void AccessibilityNotifyClients (System.Windows.Forms.AccessibleEvents accEvent, int objectID, int childID);
    parameters:
    - id: accEvent
      type: System.Windows.Forms.AccessibleEvents
      description: "O <xref href=&quot;System.Windows.Forms.AccessibleEvents&quot;> </xref> para notificar os aplicativos cliente de acessibilidade do."
    - id: objectID
      type: System.Int32
      description: "O identificador do <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>."
    - id: childID
      type: System.Int32
      description: "O filho <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> para notificar o evento acessível."
  overload: System.Windows.Forms.Control.AccessibilityNotifyClients*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibilityObject
  id: AccessibilityObject
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibilityObject
  nameWithType: Control.AccessibilityObject
  fullName: System.Windows.Forms.Control.AccessibilityObject
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> atribuído ao controle."
  remarks: "Para controlar a instância retornada deste método, substituir o <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>método.</xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A>       Se nenhum <xref:System.Windows.Forms.AccessibleObject>atualmente atribuído ao controle, é criada uma nova instância de um.</xref:System.Windows.Forms.AccessibleObject>      > [!NOTE] > Para obter ou definir a propriedade AccessibilityObject, você deve adicionar uma referência para o `Accessibility` assembly instalado com o[!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)].       Para obter mais informações sobre objetos acessíveis, consulte [acessibilidade ativa](http://msdn.microsoft.com/library/windows/desktop/dd373592.aspx)."
  syntax:
    content: public System.Windows.Forms.AccessibleObject AccessibilityObject { get; }
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "O <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> atribuído ao controle."
  overload: System.Windows.Forms.Control.AccessibilityObject*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibleDefaultActionDescription
  id: AccessibleDefaultActionDescription
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibleDefaultActionDescription
  nameWithType: Control.AccessibleDefaultActionDescription
  fullName: System.Windows.Forms.Control.AccessibleDefaultActionDescription
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a descrição da ação padrão do controle para uso por acessibilidade aplicativos cliente."
  remarks: "AccessibleDefaultActionDescription propriedade de um objeto descreve o método de manipulação de ponto de vista do usuário principal do objeto. Essa propriedade deve ser um verbo ou uma frase curta verbo.      > [!NOTE] > Nem todos os objetos têm ações padrão, e alguns objetos podem ter uma ação padrão que está relacionada ao seu <xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=fullName>propriedade, como os exemplos a seguir:-caixa de seleção marcada tem uma ação padrão de &quot;Desmarque&quot; e um valor de &quot;Checked.&quot;</xref:System.Windows.Forms.AccessibleObject.Value%2A?displayProperty=fullName>      -Uma caixa de seleção desmarcada tem uma ação padrão de &quot;Verificar&quot; e um valor de &quot;Desmarcado&quot;.      -Um botão rotulado &quot;Print&quot; tem uma ação padrão de &quot;Pressione&quot;, sem nenhum valor.      -Um rótulo ou um controle de caixa de texto que mostra &quot;Printer&quot; não tem nenhuma ação padrão, mas teria um valor de &quot;Printer&quot;.       Para obter mais informações sobre as propriedades de objetos acessíveis, consulte [conteúdo descritivo propriedades de](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)."
  syntax:
    content: public string AccessibleDefaultActionDescription { get; set; }
    return:
      type: System.String
      description: "A descrição da ação padrão do controle para uso por aplicativos cliente de acessibilidade."
  overload: System.Windows.Forms.Control.AccessibleDefaultActionDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibleDescription
  id: AccessibleDescription
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibleDescription
  nameWithType: Control.AccessibleDescription
  fullName: System.Windows.Forms.Control.AccessibleDescription
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a descrição do controle usado por aplicativos cliente de acessibilidade."
  remarks: "AccessibleDescription propriedade de um objeto fornece uma descrição textual sobre a aparência visual do objeto. A descrição é usada principalmente para fornecer contexto maior para usuários cegos ou de alguma deficiência visual, mas também pode ser usada para pesquisa de contexto ou outros aplicativos.       A propriedade AccessibleDescription é necessária se a descrição não é óbvia, ou se ela é redundante com base no objeto de <xref:System.Windows.Forms.Control.AccessibleName%2A>, <xref:System.Windows.Forms.Control.AccessibleRole%2A>, <xref:System.Windows.Forms.AccessibleObject.State%2A>, e <xref:System.Windows.Forms.AccessibleObject.Value%2A>Propriedades.</xref:System.Windows.Forms.AccessibleObject.Value%2A> </xref:System.Windows.Forms.AccessibleObject.State%2A> </xref:System.Windows.Forms.Control.AccessibleRole%2A> </xref:System.Windows.Forms.Control.AccessibleName%2A> Por exemplo, um botão com &quot;Okey&quot; não será necessário para obter informações adicionais, mas seria um botão que mostra uma imagem de um cacto. O <xref:System.Windows.Forms.Control.AccessibleName%2A>, e <xref:System.Windows.Forms.Control.AccessibleRole%2A>(e talvez <xref:System.Windows.Forms.AccessibleObject.Help%2A>) propriedades para o botão cacto descrever o seu objetivo, mas a propriedade AccessibleDescription seria transmitem informações que são menos tangíveis, como &quot;Um botão que mostra uma imagem de um cacto.&quot;</xref:System.Windows.Forms.AccessibleObject.Help%2A> </xref:System.Windows.Forms.Control.AccessibleRole%2A> </xref:System.Windows.Forms.Control.AccessibleName%2A>       Para obter mais informações sobre as propriedades de objetos acessíveis, consulte [conteúdo descritivo propriedades de](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)."
  example:
  - "The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the <xref:System.Windows.Forms.Control.AccessibleName%2A> and AccessibleDescription properties, because the <xref:System.Windows.Forms.Control.Text%2A> property is `null`. This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.  \n  \n [!code-cs[Windows.Forms.Control.ControlAccessibleObject#2](~/add/codesnippet/csharp/p-system.windows.forms.c_91_1.cs)]\n [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/add/codesnippet/cpp/p-system.windows.forms.c_91_1.cpp)]\n [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_91_1.vb)]"
  syntax:
    content: public string AccessibleDescription { get; set; }
    return:
      type: System.String
      description: "A descrição do controle usado por aplicativos cliente de acessibilidade. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.AccessibleDescription*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibleName
  id: AccessibleName
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibleName
  nameWithType: Control.AccessibleName
  fullName: System.Windows.Forms.Control.AccessibleName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o nome do controle usado por aplicativos cliente de acessibilidade."
  remarks: "A propriedade AccessibleName é um rótulo que descreve brevemente e identifica o objeto dentro do respectivo contêiner, como o texto em uma <xref:System.Windows.Forms.Button>, o nome de um <xref:System.Windows.Forms.MenuItem>, ou um rótulo exibido próximo a um <xref:System.Windows.Forms.TextBox>controle.</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.Button>       Para obter mais informações sobre as propriedades de objetos acessíveis, consulte o &quot;[conteúdo das propriedades descritivas](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)."
  example:
  - "The following code example creates an instance of a <xref:System.Windows.Forms.CheckBox> derived class, `MyCheckBox`, assigns it an <xref:System.Drawing.Image> to its <xref:System.Windows.Forms.ButtonBase.Image%2A> property and sets the AccessibleName and <xref:System.Windows.Forms.Control.AccessibleDescription%2A> properties since the <xref:System.Windows.Forms.Control.Text%2A> property is `null`. This example requires that you have a <xref:System.Windows.Forms.Form> named `MyForm`.  \n  \n [!code-cs[Windows.Forms.Control.ControlAccessibleObject#2](~/add/codesnippet/csharp/p-system.windows.forms.c_35_1.cs)]\n [!code-cpp[Windows.Forms.Control.ControlAccessibleObject#2](~/add/codesnippet/cpp/p-system.windows.forms.c_35_1.cpp)]\n [!code-vb[Windows.Forms.Control.ControlAccessibleObject#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_35_1.vb)]"
  syntax:
    content: public string AccessibleName { get; set; }
    return:
      type: System.String
      description: "O nome do controle usado por aplicativos cliente de acessibilidade. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.AccessibleName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AccessibleRole
  id: AccessibleRole
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AccessibleRole
  nameWithType: Control.AccessibleRole
  fullName: System.Windows.Forms.Control.AccessibleRole
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a função acessível do controle"
  remarks: "A propriedade AccessibleRole descreve que tipo de elemento de interface do usuário é de um objeto. Se a função do controle não pode ser determinada, a propriedade AccessibleRole é definida como `Default`.       Para obter mais informações sobre as propriedades de objetos acessíveis, consulte [conteúdo descritivo propriedades de](http://msdn.microsoft.com/library/windows/desktop/dd318025.aspx)."
  syntax:
    content: public System.Windows.Forms.AccessibleRole AccessibleRole { get; set; }
    return:
      type: System.Windows.Forms.AccessibleRole
      description: "Um dos valores de <xref href=&quot;System.Windows.Forms.AccessibleRole&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_Default&quot; name=&quot;Default&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.AccessibleRole*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor atribuído não é um do <xref href=&quot;System.Windows.Forms.AccessibleRole&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Windows.Forms.Control.AllowDrop
  id: AllowDrop
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AllowDrop
  nameWithType: Control.AllowDrop
  fullName: System.Windows.Forms.Control.AllowDrop
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se o controle pode aceitar dados que o usuário arrasta para ele."
  remarks: ''
  example:
  - "The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped. The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting. The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback. The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data. Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=fullName> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.  \n  \n [!code-cs[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/csharp/p-system.windows.forms.c_93_1.cs)]\n [!code-cpp[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/cpp/p-system.windows.forms.c_93_1.cpp)]\n [!code-vb[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_93_1.vb)]"
  syntax:
    content: public virtual bool AllowDrop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se são permitidas operações de arrastar e soltar no controle; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.AllowDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Anchor
  id: Anchor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Anchor
  nameWithType: Control.Anchor
  fullName: System.Windows.Forms.Control.Anchor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define as bordas do recipiente ao qual um controle está associado e determina como um controle é redimensionado com seu pai."
  remarks: "Use a propriedade de âncora para definir como um controle é redimensionado automaticamente porque seu controle pai é redimensionado. Ancoragem de um controle para seu controle pai garante que as bordas ancoradas na mesma posição em relação as bordas do controle pai quando o controle pai é redimensionado.       Você pode ancorar um controle às bordas de um ou mais de seu contêiner. Por exemplo, se você tiver um <xref:System.Windows.Forms.Form>com um <xref:System.Windows.Forms.Button>cujo valor de propriedade de âncora é definido como `Top` e `Bottom`, o <xref:System.Windows.Forms.Button>é esticada para manter a distância ancorada às bordas superior e inferior do <xref:System.Windows.Forms.Form>como o <xref:System.Windows.Forms.Control.Height%2A>do <xref:System.Windows.Forms.Form>é aumentado.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Button> </xref:System.Windows.Forms.Form>      > [!NOTE] > A âncora e <xref:System.Windows.Forms.Control.Dock%2A>propriedades são mutuamente exclusivas.</xref:System.Windows.Forms.Control.Dock%2A> Somente um pode ser definido em um momento e o último conjunto tem precedência."
  example:
  - "The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \n  \n [!code-cs[Windows.Forms.Control Properties#3](~/add/codesnippet/csharp/p-system.windows.forms.c_119_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#3](~/add/codesnippet/cpp/p-system.windows.forms.c_119_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_119_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.AnchorStyles Anchor { get; set; }
    return:
      type: System.Windows.Forms.AnchorStyles
      description: "Uma combinação bit a bit do <xref href=&quot;System.Windows.Forms.AnchorStyles&quot;> </xref> valores. The default is <xref uid=&quot;langword_csharp_Top&quot; name=&quot;Top&quot; href=&quot;&quot;></xref> and <xref uid=&quot;langword_csharp_Left&quot; name=&quot;Left&quot; href=&quot;&quot;></xref>."
  overload: System.Windows.Forms.Control.Anchor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AutoScrollOffset
  id: AutoScrollOffset
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AutoScrollOffset
  nameWithType: Control.AutoScrollOffset
  fullName: System.Windows.Forms.Control.AutoScrollOffset
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define onde este controle é rolado para <xref:System.Windows.Forms.ScrollableControl.ScrollControlIntoView*>.</xref:System.Windows.Forms.ScrollableControl.ScrollControlIntoView*>"
  syntax:
    content: public virtual System.Drawing.Point AutoScrollOffset { get; set; }
    return:
      type: System.Drawing.Point
      description: "Um <xref href=&quot;System.Drawing.Point&quot;> </xref> especificando o local de rolagem. O padrão é o canto superior esquerdo do controle."
  overload: System.Windows.Forms.Control.AutoScrollOffset*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AutoSize
  id: AutoSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AutoSize
  nameWithType: Control.AutoSize
  fullName: System.Windows.Forms.Control.AutoSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Essa propriedade não é relevante para essa classe."
  remarks: "Essa propriedade não é relevante para essa classe."
  syntax:
    content: public virtual bool AutoSize { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se habilitado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.AutoSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.AutoSizeChanged
  id: AutoSizeChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: AutoSizeChanged
  nameWithType: Control.AutoSizeChanged
  fullName: System.Windows.Forms.Control.AutoSizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Esse evento não é relevante para essa classe."
  remarks: "Esse evento não é relevante para essa classe."
  syntax:
    content: public event EventHandler AutoSizeChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BackColor
  id: BackColor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BackColor
  nameWithType: Control.BackColor
  fullName: System.Windows.Forms.Control.BackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a cor de plano de fundo do controle."
  remarks: "A propriedade BackColor não dá suporte a cores transparentes, a menos que o `SupportsTransparentBackColor` valor <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName>é definido como `true`.</xref:System.Windows.Forms.ControlStyles?displayProperty=fullName>       A propriedade BackColor é uma propriedade de ambiente. Uma propriedade de ambiente é uma propriedade de controle que, se não for definido, será recuperado do controle pai. Por exemplo, um <xref:System.Windows.Forms.Button>terá o mesmo BackColor como seu pai <xref:System.Windows.Forms.Form>por padrão.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Button> Para obter mais informações sobre propriedades de ambiente, consulte o <xref:System.Windows.Forms.AmbientProperties>classe ou o <xref:System.Windows.Forms.Control>Visão geral da classe.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.AmbientProperties>"
  example:
  - "The following code example sets the BackColor and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors. The code recursively calls itself if the control has any child controls. This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.  \n  \n [!code-cs[Windows.Forms.Control Properties#1](~/add/codesnippet/csharp/p-system.windows.forms.c_44_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#1](~/add/codesnippet/cpp/p-system.windows.forms.c_44_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_44_1.vb)]"
  syntax:
    content: public virtual System.Drawing.Color BackColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "Um <xref href=&quot;System.Drawing.Color&quot;> </xref> que representa a cor de plano de fundo do controle. O padrão é o valor de <xref:System.Windows.Forms.Control.DefaultBackColor*>propriedade.</xref:System.Windows.Forms.Control.DefaultBackColor*>"
  overload: System.Windows.Forms.Control.BackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BackColorChanged
  id: BackColorChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BackColorChanged
  nameWithType: Control.BackColorChanged
  fullName: System.Windows.Forms.Control.BackColorChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o valor de <xref:System.Windows.Forms.Control.BackColor*>alterações de propriedade.</xref:System.Windows.Forms.Control.BackColor*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.BackColor%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.BackColor%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form>that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_47_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_47_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_47_1.cpp)]"
  syntax:
    content: public event EventHandler BackColorChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BackgroundImage
  id: BackgroundImage
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BackgroundImage
  nameWithType: Control.BackgroundImage
  fullName: System.Windows.Forms.Control.BackgroundImage
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a imagem de plano de fundo exibida no controle."
  remarks: "-Use a propriedade BackgroundImage para colocar uma imagem do gráfica em um controle.      > [!NOTE] > Não há suporte para imagens com cores transparente ou transparentes por controles de formulários do Windows como imagens de plano de fundo.   >> Essa propriedade não tem suporte em controles filho cujo <xref:System.Windows.Forms.Form.RightToLeftLayout%2A>é de propriedade `true`.</xref:System.Windows.Forms.Form.RightToLeftLayout%2A>"
  example:
  - "The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the BackgroundImage and resizes the button to the same size as the <xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \n  \n [!code-cs[Windows.Forms.Control Properties#3](~/add/codesnippet/csharp/p-system.windows.forms.c_34_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#3](~/add/codesnippet/cpp/p-system.windows.forms.c_34_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_34_1.vb)]"
  syntax:
    content: public virtual System.Drawing.Image BackgroundImage { get; set; }
    return:
      type: System.Drawing.Image
      description: "Um <xref href=&quot;System.Drawing.Image&quot;> </xref> que representa a imagem a ser exibida no plano de fundo do controle."
  overload: System.Windows.Forms.Control.BackgroundImage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BackgroundImageChanged
  id: BackgroundImageChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BackgroundImageChanged
  nameWithType: Control.BackgroundImageChanged
  fullName: System.Windows.Forms.Control.BackgroundImageChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o valor de <xref:System.Windows.Forms.Control.BackgroundImage*>alterações de propriedade.</xref:System.Windows.Forms.Control.BackgroundImage*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.BackgroundImage%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.BackgroundImage%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_46_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_46_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_46_1.cpp)]"
  syntax:
    content: public event EventHandler BackgroundImageChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BackgroundImageLayout
  id: BackgroundImageLayout
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BackgroundImageLayout
  nameWithType: Control.BackgroundImageLayout
  fullName: System.Windows.Forms.Control.BackgroundImageLayout
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o layout de imagem de plano de fundo, conforme definido no <xref href=&quot;System.Windows.Forms.ImageLayout&quot;> </xref> enumeração."
  remarks: "Use a propriedade BackgroundImageLayout para especificar a posição e o comportamento de uma imagem que você colocou em um controle. BackgroundImageLayout entra em vigor somente se o <xref:System.Windows.Forms.Control.BackgroundImage%2A>está definida.</xref:System.Windows.Forms.Control.BackgroundImage%2A>       Você pode aumentar o desempenho de imagens grandes se você definir BackgroundImageLayout como algo diferente de <xref:System.Windows.Forms.ImageLayout>.</xref:System.Windows.Forms.ImageLayout>"
  syntax:
    content: public virtual System.Windows.Forms.ImageLayout BackgroundImageLayout { get; set; }
    return:
      type: System.Windows.Forms.ImageLayout
      description: "One of the values of <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref> (<xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref> , <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>, <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>, <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>, or <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>). <xref href=&quot;System.Windows.Forms.ImageLayout&quot;></xref>é o valor padrão."
  overload: System.Windows.Forms.Control.BackgroundImageLayout*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor de enumeração especificado não existe."
  platform:
  - net462
- uid: System.Windows.Forms.Control.BackgroundImageLayoutChanged
  id: BackgroundImageLayoutChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BackgroundImageLayoutChanged
  nameWithType: Control.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.Control.BackgroundImageLayoutChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.BackgroundImageLayout*>alterações de propriedade.</xref:System.Windows.Forms.Control.BackgroundImageLayout*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.BackgroundImageLayout%2A>propriedade alterada programaticamente ou por interação do usuário.</xref:System.Windows.Forms.Control.BackgroundImageLayout%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the BackgroundImageLayoutChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the BackgroundImageLayoutChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#9](~/add/codesnippet/csharp/e-system.windows.forms.c_5_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#9](~/add/codesnippet/visualbasic/e-system.windows.forms.c_5_1.vb)]"
  syntax:
    content: public event EventHandler BackgroundImageLayoutChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  id: BeginInvoke(System.Delegate)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BeginInvoke(Delegate)
  nameWithType: Control.BeginInvoke(Delegate)
  fullName: System.Windows.Forms.Control.BeginInvoke(Delegate)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Executa o delegado especificado de forma assíncrona no thread em que o identificador do controle subjacente foi criado."
  remarks: "O representante é chamado de forma assíncrona, e esse método retorna imediatamente. Você pode chamar esse método de qualquer thread, até mesmo thread que possui o identificador do controle. Se o identificador do controle ainda não existir, este método pesquisa cadeia do pai do controle até encontrar um controle ou formulário que tem um identificador de janela. Se nenhum identificador apropriado pode ser encontrado, BeginInvoke lançará uma exceção. Exceções no método delegado são consideradas não interceptado e será enviado ao manipulador de exceção não interceptado do aplicativo.       Você pode chamar <xref:System.Windows.Forms.Control.EndInvoke%2A>para recuperar o valor de retorno de representante, se necessário, mas isso não é necessário.</xref:System.Windows.Forms.Control.EndInvoke%2A> <xref:System.Windows.Forms.Control.EndInvoke%2A>será bloqueado até que o valor de retorno pode ser recuperado.</xref:System.Windows.Forms.Control.EndInvoke%2A>      > [!NOTE] > A maioria dos métodos em um controle só pode ser chamado do thread em que o controle foi criado. Além de <xref:System.Windows.Forms.Control.InvokeRequired%2A>propriedade, há quatro métodos em um controle que são thread-safe: <xref:System.Windows.Forms.Control.Invoke%2A>, BeginInvoke, <xref:System.Windows.Forms.Control.EndInvoke%2A>, e <xref:System.Windows.Forms.Control.CreateGraphics%2A>se o identificador para o controle já foi criado.</xref:System.Windows.Forms.Control.CreateGraphics%2A> </xref:System.Windows.Forms.Control.EndInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.InvokeRequired%2A> Chamar <xref:System.Windows.Forms.Control.CreateGraphics%2A>antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</xref:System.Windows.Forms.Control.CreateGraphics%2A> Para todas as outras chamadas de método, você deve usar um dos métodos invoke realizar marshaling da chamada para thread do controle. Os métodos invoke sempre chamar seus retornos de chamada no thread do controle.      > [!NOTE] > Uma exceção pode ser gerada se o thread que deve processar a mensagem não está mais ativo."
  example:
  - "The following code example demonstrates a use of the BeginInvoke method.  \n  \n [!code-cpp[Control_BeginInvoke#2](~/add/codesnippet/cpp/m-system.windows.forms.c_68_1.cpp)]\n [!code-vb[Control_BeginInvoke#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_68_1.vb)]\n [!code-cs[Control_BeginInvoke#2](~/add/codesnippet/csharp/m-system.windows.forms.c_68_1.cs)]"
  syntax:
    content: public IAsyncResult BeginInvoke (Delegate method);
    parameters:
    - id: method
      type: System.Delegate
      description: "Um delegado para um método que não usa nenhum parâmetro."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa o resultado da operação BeginInvoke.</xref:System.IAsyncResult>"
  overload: System.Windows.Forms.Control.BeginInvoke*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nenhum identificador de janela apropriado pode ser encontrado."
  platform:
  - net462
- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  id: BeginInvoke(System.Delegate,System.Object[])
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BeginInvoke(Delegate,Object[])
  nameWithType: Control.BeginInvoke(Delegate,Object[])
  fullName: System.Windows.Forms.Control.BeginInvoke(Delegate,Object[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Executa o delegado especificado assincronamente com os argumentos especificados, no thread em que o identificador do controle subjacente foi criado."
  remarks: "O representante é chamado de forma assíncrona, e esse método retorna imediatamente. Você pode chamar esse método de qualquer thread, até mesmo thread que possui o identificador do controle. Se o identificador do controle ainda não existir, este método pesquisa cadeia do pai do controle até encontrar um controle ou formulário que tem um identificador de janela. Se nenhum identificador apropriado pode ser encontrado, <xref:System.Windows.Forms.Control.BeginInvoke%2A>lançará uma exceção.</xref:System.Windows.Forms.Control.BeginInvoke%2A> Exceções no método delegado são consideradas não interceptado e será enviado ao manipulador de exceção não interceptado do aplicativo.       Você pode chamar <xref:System.Windows.Forms.Control.EndInvoke%2A>para recuperar o valor de retorno de representante, se necessário, mas isso não é necessário.</xref:System.Windows.Forms.Control.EndInvoke%2A> <xref:System.Windows.Forms.Control.EndInvoke%2A>será bloqueado até que o valor de retorno pode ser recuperado.</xref:System.Windows.Forms.Control.EndInvoke%2A>      > [!NOTE] > A maioria dos métodos em um controle só pode ser chamado do thread em que o controle foi criado. Além de <xref:System.Windows.Forms.Control.InvokeRequired%2A>propriedade, há quatro métodos em um controle que são thread-safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, e <xref:System.Windows.Forms.Control.CreateGraphics%2A>se o identificador para o controle já foi criado.</xref:System.Windows.Forms.Control.CreateGraphics%2A> </xref:System.Windows.Forms.Control.EndInvoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.InvokeRequired%2A> Chamar <xref:System.Windows.Forms.Control.CreateGraphics%2A>antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</xref:System.Windows.Forms.Control.CreateGraphics%2A> Para todas as outras chamadas de método, você deve usar um dos métodos invoke realizar marshaling da chamada para thread do controle. Os métodos invoke sempre chamar seus retornos de chamada no thread do controle.      > [!NOTE] > Uma exceção pode ser gerada se o thread que deve processar a mensagem não está mais ativo."
  example:
  - "The following code example demonstrates a use of the BeginInvoke method.  \n  \n [!code-cpp[Control_BeginInvoke#1](~/add/codesnippet/cpp/m-system.windows.forms.c_33_1.cpp)]\n [!code-vb[Control_BeginInvoke#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_33_1.vb)]\n [!code-cs[Control_BeginInvoke#1](~/add/codesnippet/csharp/m-system.windows.forms.c_33_1.cs)]"
  syntax:
    content: public IAsyncResult BeginInvoke (Delegate method, object[] args);
    parameters:
    - id: method
      type: System.Delegate
      description: "Um delegado para um método que usa parâmetros do número e do tipo que estão contidas no mesmo o `args` parâmetro."
    - id: args
      type: System.Object[]
      description: "Uma matriz de objetos para passar como argumentos para o método especificado. Isso pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum argumento é necessário."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que representa o resultado da <xref:System.Windows.Forms.Control.BeginInvoke*>operação.</xref:System.Windows.Forms.Control.BeginInvoke*> </xref:System.IAsyncResult>"
  overload: System.Windows.Forms.Control.BeginInvoke*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "Nenhum identificador de janela apropriado pode ser encontrado."
  platform:
  - net462
- uid: System.Windows.Forms.Control.BindingContext
  id: BindingContext
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BindingContext
  nameWithType: Control.BindingContext
  fullName: System.Windows.Forms.Control.BindingContext
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> para o controle."
  remarks: "A <xref:System.Windows.Forms.BindingContext>de um <xref:System.Windows.Forms.Control>é usado para retornar um único<xref:System.Windows.Forms.BindingManagerBase> para todos os controles de associação de dados contidos pelo <xref:System.Windows.Forms.Control>.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.BindingContext> O <xref:System.Windows.Forms.BindingManagerBase>mantém todos os controles que estão associados à mesma fonte de dados sincronizada.</xref:System.Windows.Forms.BindingManagerBase> Por exemplo, se você definir o <xref:System.Windows.Forms.BindingManagerBase.Position%2A>propriedade do <xref:System.Windows.Forms.BindingManagerBase>Especifica o item na lista subjacente que todos os controles associados a dados apontam para.</xref:System.Windows.Forms.BindingManagerBase> </xref:System.Windows.Forms.BindingManagerBase.Position%2A>       Para obter mais informações sobre como criar um novo <xref:System.Windows.Forms.BindingContext>e atribuí-lo para a propriedade BindingContext, consulte <xref:System.Windows.Forms.BindingContext.%23ctor%2A>.</xref:System.Windows.Forms.BindingContext.%23ctor%2A> </xref:System.Windows.Forms.BindingContext>"
  example:
  - "The following code example creates four <xref:System.Windows.Forms.Binding> objects to bind five controls, a <xref:System.Windows.Forms.DateTimePicker> and four <xref:System.Windows.Forms.TextBox> controls, to several data sources. The <xref:System.Windows.Forms.BindingContext> is then used to get the <xref:System.Windows.Forms.BindingManagerBase> for each data source.  \n  \n [!code-cpp[Classic BindingContext Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_109_1.cpp)]\n [!code-cs[Classic BindingContext Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_109_1.cs)]\n [!code-vb[Classic BindingContext Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_109_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.BindingContext BindingContext { get; set; }
    return:
      type: System.Windows.Forms.BindingContext
      description: "Um <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> para o controle."
  overload: System.Windows.Forms.Control.BindingContext*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BindingContextChanged
  id: BindingContextChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BindingContextChanged
  nameWithType: Control.BindingContextChanged
  fullName: System.Windows.Forms.Control.BindingContextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o valor de <xref href=&quot;System.Windows.Forms.BindingContext&quot;> </xref> alterações de propriedade."
  remarks: "Para adicionar um novo <xref:System.Windows.Forms.BindingContext>para o <xref:System.Windows.Forms.Control>por meio de <xref:System.Windows.Forms.Control.BindingContext%2A>propriedade, consulte o <xref:System.Windows.Forms.BindingContext.%23ctor%2A>construtor.</xref:System.Windows.Forms.BindingContext.%23ctor%2A> </xref:System.Windows.Forms.Control.BindingContext%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.BindingContext>       Esse evento é gerado se o <xref:System.Windows.Forms.Control.BindingContext%2A>propriedade é alterada é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.BindingContext%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example adds an <xref:System.EventHandler> delegate to the BindingContextChanged event of a <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-vb[Classic Control.BindingContextChanged Example#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_1_1.vb)]\n [!code-cs[Classic Control.BindingContextChanged Example#1](~/add/codesnippet/csharp/e-system.windows.forms.c_1_1.cs)]\n [!code-cpp[Classic Control.BindingContextChanged Example#1](~/add/codesnippet/cpp/e-system.windows.forms.c_1_1.cpp)]"
  syntax:
    content: public event EventHandler BindingContextChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Bottom
  id: Bottom
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Bottom
  nameWithType: Control.Bottom
  fullName: System.Windows.Forms.Control.Bottom
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém a distância, em pixels, entre a borda inferior do controle e a borda superior da área cliente do seu contêiner."
  remarks: "O valor dessa propriedade é igual à soma do <xref:System.Windows.Forms.Control.Top%2A>valor da propriedade e o <xref:System.Windows.Forms.Control.Height%2A>o valor da propriedade.</xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Control.Top%2A>       A propriedade inferior é uma propriedade somente leitura. Você pode manipular o valor da propriedade alterando o valor da <xref:System.Windows.Forms.Control.Top%2A>ou <xref:System.Windows.Forms.Control.Height%2A>Propriedades ou chamar o <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, ou <xref:System.Windows.Forms.Control.SetClientSizeCore%2A>métodos.</xref:System.Windows.Forms.Control.SetClientSizeCore%2A> </xref:System.Windows.Forms.Control.UpdateBounds%2A> </xref:System.Windows.Forms.Control.SetBoundsCore%2A> </xref:System.Windows.Forms.Control.SetBounds%2A> </xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Control.Top%2A>"
  example:
  - "The following code example uses the Bottom property to define the lower limit of a <xref:System.Windows.Forms.TextBox> control relative to the client area of the container.  \n  \n [!code-cpp[Control.KeyUp#1](~/add/codesnippet/cpp/p-system.windows.forms.c_53_1.cpp)]\n [!code-vb[Control.KeyUp#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_53_1.vb)]\n [!code-cs[Control.KeyUp#1](~/add/codesnippet/csharp/p-system.windows.forms.c_53_1.cs)]"
  syntax:
    content: public int Bottom { get; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>que representa a distância em pixels entre a borda inferior do controle e a borda superior da área cliente do seu contêiner.</xref:System.Int32>"
  overload: System.Windows.Forms.Control.Bottom*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Bounds
  id: Bounds
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Bounds
  nameWithType: Control.Bounds
  fullName: System.Windows.Forms.Control.Bounds
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o tamanho e o local do controle inclusive seus elementos não clientes, em pixels, relativos ao controle pai."
  remarks: "Os limites do controle incluem os elementos não clientes, como barras de rolagem, bordas, barras de título e menus. O <xref:System.Windows.Forms.Control.SetBoundsCore%2A>método é chamado para definir a propriedade de limites.</xref:System.Windows.Forms.Control.SetBoundsCore%2A> O Boundsproperty sempre não é alterada por meio de seu `set` método para que você deve substituir o <xref:System.Windows.Forms.Control.SetBoundsCore%2A>método para garantir que seu código é executado quando a propriedade de limite é definida.</xref:System.Windows.Forms.Control.SetBoundsCore%2A>"
  example:
  - "The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \n  \n [!code-cs[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/csharp/p-system.windows.forms.c_114_1.cs)]\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/cpp/p-system.windows.forms.c_114_1.cpp)]\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_114_1.vb)]"
  syntax:
    content: public System.Drawing.Rectangle Bounds { get; set; }
    return:
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> em pixels, relativos ao controle pai que representa o tamanho e o local do controle inclusive seus elementos não clientes."
  overload: System.Windows.Forms.Control.Bounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.BringToFront
  id: BringToFront
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: BringToFront()
  nameWithType: Control.BringToFront()
  fullName: System.Windows.Forms.Control.BringToFront()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Traz o controle para a frente da ordem z."
  remarks: "O controle é movido para a frente da ordem z. Se o controle é um filho de outro controle, o controle filho é movido para a frente da ordem z. BringToFront não fazer um controle de um controle de nível superior, e ele não gere o <xref:System.Windows.Forms.Control.Paint>evento.</xref:System.Windows.Forms.Control.Paint>"
  example:
  - "The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its BringToFront method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.  \n  \n [!code-cs[Windows.Forms.Control Members4#1](~/add/codesnippet/csharp/m-system.windows.forms.c_59_1.cs)]\n [!code-vb[Windows.Forms.Control Members4#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_59_1.vb)]\n [!code-cpp[Windows.Forms.Control Members4#1](~/add/codesnippet/cpp/m-system.windows.forms.c_59_1.cpp)]"
  syntax:
    content: public void BringToFront ();
    parameters: []
  overload: System.Windows.Forms.Control.BringToFront*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CanEnableIme
  id: CanEnableIme
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CanEnableIme
  nameWithType: Control.CanEnableIme
  fullName: System.Windows.Forms.Control.CanEnableIme
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o <xref:System.Windows.Forms.Control.ImeMode*>propriedade pode ser definida como um valor de ativo, para habilitar o suporte IME.</xref:System.Windows.Forms.Control.ImeMode*>"
  remarks: "Classes derivadas podem substituir essa propriedade para retornar `false` se não há suporte para o IME."
  syntax:
    content: protected virtual bool CanEnableIme { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>em todos os casos."
  overload: System.Windows.Forms.Control.CanEnableIme*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CanFocus
  id: CanFocus
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CanFocus
  nameWithType: Control.CanFocus
  fullName: System.Windows.Forms.Control.CanFocus
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o controle pode receber foco."
  remarks: "Para um controle para receber o foco de entrada, o controle deve ter um identificador atribuído a ele e o <xref:System.Windows.Forms.Control.Visible%2A>e <xref:System.Windows.Forms.Control.Enabled%2A>propriedades devem ser definidas `true` para o controle e todos os seus controles pai e o controle devem ser um formulário ou controle do mais externo pai deve ser um formulário.</xref:System.Windows.Forms.Control.Enabled%2A> </xref:System.Windows.Forms.Control.Visible%2A>"
  example:
  - "The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#1](~/add/codesnippet/cpp/p-system.windows.forms.c_18_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#1](~/add/codesnippet/csharp/p-system.windows.forms.c_18_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_18_1.vb)]"
  syntax:
    content: public bool CanFocus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle pode receber foco. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.CanFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CanRaiseEvents
  id: CanRaiseEvents
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CanRaiseEvents
  nameWithType: Control.CanRaiseEvents
  fullName: System.Windows.Forms.Control.CanRaiseEvents
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina se os eventos podem ser gerados no controle."
  remarks: "Se este controle está sendo hospedado como um controle ActiveX, essa propriedade retornará `false` se o controle ActiveX tiver seus eventos congelados."
  syntax:
    content: protected override bool CanRaiseEvents { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle está hospedado como um controle ActiveX cujos eventos não estão congelados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.CanRaiseEvents*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CanSelect
  id: CanSelect
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CanSelect
  nameWithType: Control.CanSelect
  fullName: System.Windows.Forms.Control.CanSelect
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o controle pode ser selecionado."
  remarks: "Essa propriedade retorna `true` se o `Selectable` valor <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName>é definido como `true`, está contido em outro controle, o próprio controle está visível e habilitado e todos os seus controles pai estão visíveis e habilitados.</xref:System.Windows.Forms.ControlStyles?displayProperty=fullName>       Os controles de formulários do Windows na lista a seguir não são selecionáveis e retornará um valor de `false` para a propriedade CanSelect. Controles derivados desses controles também não são selecionáveis.      - <xref:System.Windows.Forms.Panel>- <xref:System.Windows.Forms.GroupBox>- <xref:System.Windows.Forms.PictureBox>- <xref:System.Windows.Forms.ProgressBar>- <xref:System.Windows.Forms.Splitter>- <xref:System.Windows.Forms.Label>- <xref:System.Windows.Forms.LinkLabel>(quando não houver nenhum presente no controle de link)</xref:System.Windows.Forms.LinkLabel> </xref:System.Windows.Forms.Label> </xref:System.Windows.Forms.Splitter> </xref:System.Windows.Forms.ProgressBar> </xref:System.Windows.Forms.PictureBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.Panel>"
  example:
  - "The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#2](~/add/codesnippet/cpp/p-system.windows.forms.c_67_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#2](~/add/codesnippet/csharp/p-system.windows.forms.c_67_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_67_1.vb)]"
  syntax:
    content: public bool CanSelect { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle pode ser selecionado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.CanSelect*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Capture
  id: Capture
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Capture
  nameWithType: Control.Capture
  fullName: System.Windows.Forms.Control.Capture
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se o controle capturou o mouse."
  remarks: "Quando um controle capturou o mouse, ele recebe entrada do mouse se o cursor estiver em suas bordas ou não. O mouse geralmente só é capturado durante as operações de arrastar.       Somente a janela de primeiro plano pode capturar o mouse. Quando uma janela de plano de fundo tenta fazer isso, a janela recebe mensagens apenas para eventos de mouse que ocorrem quando o cursor do mouse está dentro a parte visível da janela. Além disso, mesmo se a janela de primeiro plano capturou o mouse, o usuário pode ainda clicar outra janela, colocando-a para o primeiro plano.       Quando o mouse é capturado, as teclas de atalho não funcionará."
  example:
  - "The following code example demonstrates the Capture property. To run this example paste the following code in a form containing a <xref:System.Windows.Forms.Label> named label1 and two <xref:System.Windows.Forms.ListBox> controls named listbox1 and listbox2. Ensure the form and controls' <xref:System.Windows.Forms.Control.MouseDown> event is associated with the method in this example.  \n  \n [!code-vb[System.Windows.Forms.ControlCapture#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_104_1.vb)]\n [!code-cpp[System.Windows.Forms.ControlCapture#1](~/add/codesnippet/cpp/p-system.windows.forms.c_104_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlCapture#1](~/add/codesnippet/csharp/p-system.windows.forms.c_104_1.cs)]"
  syntax:
    content: public bool Capture { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle capturou o mouse; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.Capture*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CausesValidation
  id: CausesValidation
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CausesValidation
  nameWithType: Control.CausesValidation
  fullName: System.Windows.Forms.Control.CausesValidation
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se o controle aciona a validação seja executada em todos os controles que exigem validação quando ele recebe o foco."
  remarks: "Se a propriedade CausesValidation é definida como `false`, o <xref:System.Windows.Forms.Control.Validating>e <xref:System.Windows.Forms.Control.Validated>eventos são suprimidos.</xref:System.Windows.Forms.Control.Validated> </xref:System.Windows.Forms.Control.Validating>       Normalmente, o valor da propriedade CausesValidation é definido como `false` para controles, como um botão de Ajuda."
  example:
  - "The following code example uses the derived class<xref:System.Windows.Forms.TextBox> and validates an e-mail address that the user enters. If the e-mail address is not in the standard format (containing \"@\" and \".\"), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled. One of the buttons on the form has its CausesValidation property set to `false`. Clicking or setting focus to this button does not trigger validation. This example requires that a <xref:System.Windows.Forms.TextBox>, an <xref:System.Windows.Forms.ErrorProvider> control, and a <xref:System.Windows.Forms.Button> have been created on a form.  \n  \n [!code-cs[Control.Validating#2](~/add/codesnippet/csharp/p-system.windows.forms.c_66_1.cs)]\n [!code-cpp[Control.Validating#2](~/add/codesnippet/cpp/p-system.windows.forms.c_66_1.cpp)]\n [!code-vb[Control.Validating#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_66_1.vb)]"
  syntax:
    content: public bool CausesValidation { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle aciona a validação a ser executada em todos os controles que exigem validação quando ele recebe o foco. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.CausesValidation*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CausesValidationChanged
  id: CausesValidationChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CausesValidationChanged
  nameWithType: Control.CausesValidationChanged
  fullName: System.Windows.Forms.Control.CausesValidationChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o valor de <xref:System.Windows.Forms.Control.CausesValidation*>alterações de propriedade.</xref:System.Windows.Forms.Control.CausesValidation*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.CausesValidation%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.CausesValidation%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler CausesValidationChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ChangeUICues
  id: ChangeUICues
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ChangeUICues
  nameWithType: Control.ChangeUICues
  fullName: System.Windows.Forms.Control.ChangeUICues
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o foco ou teclado interface do usuário () dicas de alteração."
  remarks: "Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ChangeUICues event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the ChangeUICues event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#67](~/add/codesnippet/csharp/e-system.windows.forms.c_50_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#67](~/add/codesnippet/visualbasic/e-system.windows.forms.c_50_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.UICuesEventHandler ChangeUICues;
    return:
      type: System.Windows.Forms.UICuesEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  id: CheckForIllegalCrossThreadCalls
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CheckForIllegalCrossThreadCalls
  nameWithType: Control.CheckForIllegalCrossThreadCalls
  fullName: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se a capturar chamadas no thread incorreto que um controle de acesso <xref:System.Windows.Forms.Control.Handle*>propriedade quando um aplicativo está sendo depurado.</xref:System.Windows.Forms.Control.Handle*>"
  remarks: "Quando um thread que não seja o thread de criação de um controle tenta acessar uma das propriedades ou métodos que controlam, isso geralmente leva a resultados imprevisíveis. Uma atividade de thread inválidas comum é uma chamada no thread incorreto que acessa o controle <xref:System.Windows.Forms.Control.Handle%2A>propriedade.</xref:System.Windows.Forms.Control.Handle%2A> Defina CheckForIllegalCrossThreadCalls como `true` para localizar e diagnosticar essa atividade de thread mais facilmente durante a depuração."
  syntax:
    content: public static bool CheckForIllegalCrossThreadCalls { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as chamadas no thread errado são capturadas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Click
  id: Click
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Click
  nameWithType: Control.Click
  fullName: System.Windows.Forms.Control.Click
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle é clicado."
  remarks: "O evento de clique passa um <xref:System.EventArgs>para seu manipulador de eventos, portanto apenas indica que ocorreu um clique.</xref:System.EventArgs> Se você precisar obter informações mais específicas mouse (botão, o número de cliques, rotação de roda ou local), use o <xref:System.Windows.Forms.Control.MouseClick>evento.</xref:System.Windows.Forms.Control.MouseClick> No entanto, o <xref:System.Windows.Forms.Control.MouseClick>evento não será gerado se o clique é causado por ação que não seja o do mouse, como o pressionamento da tecla ENTER.</xref:System.Windows.Forms.Control.MouseClick>       Um clique duplo é determinado pelas configurações de mouse do sistema operacional do usuário. O usuário pode definir o tempo entre cliques de um botão do mouse que deve ser considerada um clique duplo em vez de dois cliques. O evento de clique é gerado sempre que um controle é clicado duas vezes. Por exemplo, se você tem manipuladores de eventos para o clique e <xref:System.Windows.Forms.Control.DoubleClick>eventos de um <xref:System.Windows.Forms.Form>, clique em e <xref:System.Windows.Forms.Control.DoubleClick>os eventos são gerados quando o formulário é clicado duas vezes e ambos os métodos são chamados.</xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.DoubleClick> Se um controle é clicado duas vezes e que o controle não oferece suporte a <xref:System.Windows.Forms.Control.DoubleClick>evento, clique em eventos poderão ser gerados duas vezes.</xref:System.Windows.Forms.Control.DoubleClick>       Você deve definir o `StandardClick` valor<xref:System.Windows.Forms.ControlStyles> para `true` para este evento a ser gerado.</xref:System.Windows.Forms.ControlStyles>      > [!NOTE] > Os eventos a seguir não são gerados para o <xref:System.Windows.Forms.TabControl>classe a menos que haja pelo menos um <xref:System.Windows.Forms.TabPage>no <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>coleção: clique em, <xref:System.Windows.Forms.Control.DoubleClick> <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp> <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave>e <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl> Se houver pelo menos um <xref:System.Windows.Forms.TabPage>na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <xref:System.Windows.Forms.TabPage>nomes aparecerão), o <xref:System.Windows.Forms.TabControl>gera o evento apropriado.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <xref:System.Windows.Forms.TabPage>gera o evento apropriado.</xref:System.Windows.Forms.TabPage>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example shows the Click event in an event handler.  \n  \n [!code-cpp[Control.FindForm#1](~/add/codesnippet/cpp/e-system.windows.forms.c_21_1.cpp)]\n [!code-vb[Control.FindForm#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_21_1.vb)]\n [!code-cs[Control.FindForm#1](~/add/codesnippet/csharp/e-system.windows.forms.c_21_1.cs)]"
  syntax:
    content: public event EventHandler Click;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ClientRectangle
  id: ClientRectangle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ClientRectangle
  nameWithType: Control.ClientRectangle
  fullName: System.Windows.Forms.Control.ClientRectangle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o retângulo que representa a área cliente do controle."
  remarks: "A área cliente de um controle é os limites do controle, menos os elementos não clientes, como barras de rolagem, bordas, barras de título e menus.       Como as coordenadas do cliente são relativas ao canto superior esquerdo da área cliente do controle, as coordenadas do canto superior esquerdo do retângulo retornado por essa propriedade são (0,0). Você pode usar essa propriedade para obter o tamanho e as coordenadas da área cliente do controle para tarefas como a superfície do controle de desenho.       Para obter mais informações sobre o desenho de controles, consulte [processamento de um controle de formulários do Windows](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example enables auto-scrolling for a form, resizes the form, and ensures that a button remains visible after the form is resized. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Button> named `button2` on it.  \n  \n [!code-cpp[Windows.Forms.Control Member5#2](~/add/codesnippet/cpp/p-system.windows.forms.c_86_1.cpp)]\n [!code-cs[Windows.Forms.Control Member5#2](~/add/codesnippet/csharp/p-system.windows.forms.c_86_1.cs)]\n [!code-vb[Windows.Forms.Control Member5#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_86_1.vb)]"
  syntax:
    content: public System.Drawing.Rectangle ClientRectangle { get; }
    return:
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa a área cliente do controle."
  overload: System.Windows.Forms.Control.ClientRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ClientSize
  id: ClientSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ClientSize
  nameWithType: Control.ClientSize
  fullName: System.Windows.Forms.Control.ClientSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a altura e largura da área cliente do controle."
  remarks: "A área cliente de um controle é os limites do controle, menos os elementos não clientes, como barras de rolagem, bordas, barras de título e menus. O <xref:System.Windows.Forms.Control.SetClientSizeCore%2A>método é chamado para definir o ClientSizeproperty.</xref:System.Windows.Forms.Control.SetClientSizeCore%2A> A propriedade ClientSize sempre não é alterada por meio de seu `set` método para que você deve substituir o <xref:System.Windows.Forms.Control.SetClientSizeCore%2A>método para garantir que seu código é executado quando a propriedade ClientSize é definida.</xref:System.Windows.Forms.Control.SetClientSizeCore%2A>       O <xref:System.Drawing.Size.Width%2A?displayProperty=fullName>e <xref:System.Drawing.Size.Height%2A?displayProperty=fullName>propriedades representam a largura e altura da área cliente do controle.</xref:System.Drawing.Size.Height%2A?displayProperty=fullName> </xref:System.Drawing.Size.Width%2A?displayProperty=fullName> Você pode usar essa propriedade para obter o tamanho da área cliente do controle para tarefas como a superfície do controle de desenho.       Para obter mais informações sobre o desenho de controles, consulte [processamento de um controle de formulários do Windows](~/add/includes/ajax-current-ext-md.md).      > [!NOTE] > Você não pode associar as configurações do aplicativo para esta propriedade. Para obter mais informações sobre as configurações do aplicativo, consulte [visão geral das configurações de aplicativo](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example resizes the specified control so the control will accommodate its formatted text. The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text. The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control. To make the padding appear equal, align the text with the <xref:System.Drawing.ContentAlignment?displayProperty=fullName> value, if your control supports it.  \n  \n [!code-cpp[Windows.Forms.Control Member5#1](~/add/codesnippet/cpp/p-system.windows.forms.c_30_1.cpp)]\n [!code-cs[Windows.Forms.Control Member5#1](~/add/codesnippet/csharp/p-system.windows.forms.c_30_1.cs)]\n [!code-vb[Windows.Forms.Control Member5#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_30_1.vb)]"
  syntax:
    content: public System.Drawing.Size ClientSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "Um <xref href=&quot;System.Drawing.Size&quot;> </xref> que representa as dimensões da área cliente do controle."
  overload: System.Windows.Forms.Control.ClientSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ClientSizeChanged
  id: ClientSizeChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ClientSizeChanged
  nameWithType: Control.ClientSizeChanged
  fullName: System.Windows.Forms.Control.ClientSizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o valor de <xref:System.Windows.Forms.Control.ClientSize*>alterações de propriedade.</xref:System.Windows.Forms.Control.ClientSize*>"
  remarks: "Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ClientSizeChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the ClientSizeChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#12](~/add/codesnippet/csharp/e-system.windows.forms.c_7_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#12](~/add/codesnippet/visualbasic/e-system.windows.forms.c_7_1.vb)]"
  syntax:
    content: public event EventHandler ClientSizeChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CompanyName
  id: CompanyName
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CompanyName
  nameWithType: Control.CompanyName
  fullName: System.Windows.Forms.Control.CompanyName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o nome da empresa ou o criador do aplicativo que contém o controle."
  remarks: "A propriedade CompanyName é uma propriedade somente leitura. Para alterar o valor dessa propriedade, defina o <xref:System.Reflection.AssemblyCompanyAttribute.Company%2A>valor da propriedade de <xref:System.Reflection.AssemblyCompanyAttribute>.</xref:System.Reflection.AssemblyCompanyAttribute> </xref:System.Reflection.AssemblyCompanyAttribute.Company%2A> A linha de código c# a seguir define a propriedade CompanyName.      ```c#   [assembly: AssemblyCompany(&quot;Microsoft&quot;)]   ```      > [!NOTE]> É altamente recomendável que você forneça o nome da empresa, o nome do produto e a versão do produto para seu aplicativo."
  example:
  - "The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>. This example requires that the CompanyName, <xref:System.Windows.Forms.Control.ProductName%2A> and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.  \n  \n [!code-cs[Windows.Forms.Control Properties3#1](~/add/codesnippet/csharp/p-system.windows.forms.c_12_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties3#1](~/add/codesnippet/cpp/p-system.windows.forms.c_12_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties3#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_12_1.vb)]"
  syntax:
    content: public string CompanyName { get; }
    return:
      type: System.String
      description: "O nome da empresa ou o criador do aplicativo que contém o controle."
  overload: System.Windows.Forms.Control.CompanyName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  id: Contains(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Contains(Control)
  nameWithType: Control.Contains(Control)
  fullName: System.Windows.Forms.Control.Contains(Control)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera um valor que indica se o controle especificado é um filho do controle."
  remarks: ''
  example:
  - "The following code example ensures that a <xref:System.Windows.Forms.Label> is visible by calling its <xref:System.Windows.Forms.Control.BringToFront%2A> method. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.Panel> named `panel1`, and a <xref:System.Windows.Forms.Label> named `label1`.  \n  \n [!code-cs[Windows.Forms.Control Members4#1](~/add/codesnippet/csharp/m-system.windows.forms.c_78_1.cs)]\n [!code-vb[Windows.Forms.Control Members4#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_78_1.vb)]\n [!code-cpp[Windows.Forms.Control Members4#1](~/add/codesnippet/cpp/m-system.windows.forms.c_78_1.cpp)]"
  syntax:
    content: public bool Contains (System.Windows.Forms.Control ctl);
    parameters:
    - id: ctl
      type: System.Windows.Forms.Control
      description: "O <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> para avaliar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle especificado é um filho do controle; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.Contains*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ContainsFocus
  id: ContainsFocus
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ContainsFocus
  nameWithType: Control.ContainsFocus
  fullName: System.Windows.Forms.Control.ContainsFocus
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o controle ou um de seus controles filhos, atualmente tem o foco de entrada."
  remarks: "Você pode usar essa propriedade para determinar se um controle ou qualquer um dos controles contidos nele tem o foco de entrada. Para determinar se o controle tem foco, independentemente de qualquer um dos seus controles filhos terem foco, use o <xref:System.Windows.Forms.Control.Focused%2A>propriedade.</xref:System.Windows.Forms.Control.Focused%2A> Para fornecer um controle com o foco de entrada, use o <xref:System.Windows.Forms.Control.Focus%2A>ou <xref:System.Windows.Forms.Control.Select%2A>métodos.</xref:System.Windows.Forms.Control.Select%2A> </xref:System.Windows.Forms.Control.Focus%2A>"
  syntax:
    content: public bool ContainsFocus { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle ou um de seus filhos controla atualmente tem o foco de entrada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ContainsFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ContextMenu
  id: ContextMenu
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ContextMenu
  nameWithType: Control.ContextMenu
  fullName: System.Windows.Forms.Control.ContextMenu
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o menu de atalho associado ao controle."
  remarks: "Use um menus de atalho para fornecer opções de menu de contexto específico aos usuários quando eles com o botão direito no controle."
  example:
  - "The following code example displays the <xref:System.Windows.Forms.ContextMenu> assigned to a <xref:System.Windows.Forms.TreeView> when the right mouse button is clicked and released. This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TreeView> on it. It is also required that the <xref:System.Windows.Forms.TreeView> has a <xref:System.Windows.Forms.ContextMenu> assigned to its ContextMenu property.  \n  \n [!code-cs[Windows.Forms.Control Properties2#5](~/add/codesnippet/csharp/p-system.windows.forms.c_108_1.cs)]\n [!code-vb[Windows.Forms.Control Properties2#5](~/add/codesnippet/visualbasic/p-system.windows.forms.c_108_1.vb)]\n [!code-cpp[Windows.Forms.Control Properties2#5](~/add/codesnippet/cpp/p-system.windows.forms.c_108_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.ContextMenu ContextMenu { get; set; }
    return:
      type: System.Windows.Forms.ContextMenu
      description: "Um <xref href=&quot;System.Windows.Forms.ContextMenu&quot;> </xref> que representa o menu de atalho associado ao controle."
  overload: System.Windows.Forms.Control.ContextMenu*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ContextMenuChanged
  id: ContextMenuChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ContextMenuChanged
  nameWithType: Control.ContextMenuChanged
  fullName: System.Windows.Forms.Control.ContextMenuChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o valor de <xref:System.Windows.Forms.Control.ContextMenu*>alterações de propriedade.</xref:System.Windows.Forms.Control.ContextMenu*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.ContextMenu%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.ContextMenu%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example displays a message when a change occurs to the shortcut menu.  \n  \n [!code-cpp[Control_ContextMenu_CreateGraphics#2](~/add/codesnippet/cpp/e-system.windows.forms.c_6_1.cpp)]\n [!code-cs[Control_ContextMenu_CreateGraphics#2](~/add/codesnippet/csharp/e-system.windows.forms.c_6_1.cs)]\n [!code-vb[Control_ContextMenu_CreateGraphics#2](~/add/codesnippet/visualbasic/e-system.windows.forms.c_6_1.vb)]"
  syntax:
    content: public event EventHandler ContextMenuChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ContextMenuStrip
  id: ContextMenuStrip
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ContextMenuStrip
  nameWithType: Control.ContextMenuStrip
  fullName: System.Windows.Forms.Control.ContextMenuStrip
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o <xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;> </xref> associada ao controle."
  remarks: "Se um <xref:System.Windows.Forms.ContextMenu>também foi atribuído ao controle, <xref:System.Windows.Forms.ContextMenu>tem precedência sobre <xref:System.Windows.Forms.ContextMenuStrip>.</xref:System.Windows.Forms.ContextMenuStrip> </xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.ContextMenu>"
  example:
  - "The following code example demonstrates how to add three <xref:System.Windows.Forms.ToolStripMenuItem> objects to a <xref:System.Windows.Forms.ContextMenuStrip>. In addition it demonstrates setting the ContextMenuStrip property of the form.  \n  \n [!code-vb[System.Windows.Forms.Control.ContextMenuStrip#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_48_1.vb)]\n [!code-cs[System.Windows.Forms.Control.ContextMenuStrip#1](~/add/codesnippet/csharp/p-system.windows.forms.c_48_1.cs)]"
  syntax:
    content: public virtual System.Windows.Forms.ContextMenuStrip ContextMenuStrip { get; set; }
    return:
      type: System.Windows.Forms.ContextMenuStrip
      description: "O <xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;> </xref> para este controle ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se não houver nenhum <xref href=&quot;System.Windows.Forms.ContextMenuStrip&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ContextMenuStrip*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ContextMenuStripChanged
  id: ContextMenuStripChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ContextMenuStripChanged
  nameWithType: Control.ContextMenuStripChanged
  fullName: System.Windows.Forms.Control.ContextMenuStripChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o valor de <xref:System.Windows.Forms.Control.ContextMenuStrip*>alterações de propriedade.</xref:System.Windows.Forms.Control.ContextMenuStrip*>"
  remarks: "Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the ContextMenuStripChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the ContextMenuStripChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#14](~/add/codesnippet/csharp/e-system.windows.forms.c_61_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#14](~/add/codesnippet/visualbasic/e-system.windows.forms.c_61_1.vb)]"
  syntax:
    content: public event EventHandler ContextMenuStripChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlAdded
  id: ControlAdded
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ControlAdded
  nameWithType: Control.ControlAdded
  fullName: System.Windows.Forms.Control.ControlAdded
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando um novo controle é adicionado a <xref:System.Windows.Forms.Control.ControlCollection>.</xref:System.Windows.Forms.Control.ControlCollection>"
  remarks: "Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses ControlAdded to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/cpp/e-system.windows.forms.c_66_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_66_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/csharp/e-system.windows.forms.c_66_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.ControlEventHandler ControlAdded;
    return:
      type: System.Windows.Forms.ControlEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ControlRemoved
  id: ControlRemoved
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ControlRemoved
  nameWithType: Control.ControlRemoved
  fullName: System.Windows.Forms.Control.ControlRemoved
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando um controle é removido de <xref:System.Windows.Forms.Control.ControlCollection>.</xref:System.Windows.Forms.Control.ControlCollection>"
  remarks: "Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses ControlRemoved to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/cpp/e-system.windows.forms.c_8_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_8_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/csharp/e-system.windows.forms.c_8_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.ControlEventHandler ControlRemoved;
    return:
      type: System.Windows.Forms.ControlEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Controls
  id: Controls
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Controls
  nameWithType: Control.Controls
  fullName: System.Windows.Forms.Control.Controls
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém a coleção de controles contidos dentro do controle."
  remarks: "Um <xref:System.Windows.Forms.Control>pode agir como um pai para uma coleção de controles.</xref:System.Windows.Forms.Control> Por exemplo, quando vários controles são adicionados a <xref:System.Windows.Forms.Form>cada um dos controles é um membro de <xref:System.Windows.Forms.Control.ControlCollection>atribuído à propriedade de controles do formulário, que é derivado da <xref:System.Windows.Forms.Control>classe</xref:System.Windows.Forms.Control> de</xref:System.Windows.Forms.Control.ControlCollection> </xref:System.Windows.Forms.Form>       Você pode manipular os controles <xref:System.Windows.Forms.Control.ControlCollection>atribuído à propriedade controles usando os métodos disponíveis na <xref:System.Windows.Forms.Control.ControlCollection>classe.</xref:System.Windows.Forms.Control.ControlCollection> </xref:System.Windows.Forms.Control.ControlCollection>       Ao adicionar vários controles a um controle pai, é recomendável que você chamar o <xref:System.Windows.Forms.Control.SuspendLayout%2A>método antes de inicializar os controles sejam adicionados.</xref:System.Windows.Forms.Control.SuspendLayout%2A> Depois de adicionar os controles para o controle pai, chame o <xref:System.Windows.Forms.Control.ResumeLayout%2A>método.</xref:System.Windows.Forms.Control.ResumeLayout%2A> Isso aumentará o desempenho de aplicativos com muitos controles.       Use a propriedade de controles para iterar por todos os controles de um formulário, incluindo controles aninhados. Use o <xref:System.Windows.Forms.Control.GetNextControl%2A>método para recuperar o controle filho anterior ou seguinte na ordem de tabulação.</xref:System.Windows.Forms.Control.GetNextControl%2A> Use o <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>propriedade para obter ou definir o controle ativo de um controle de contêiner.</xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>"
  example:
  - "The following code example removes a <xref:System.Windows.Forms.Control> from the <xref:System.Windows.Forms.Control.ControlCollection> of the derived class <xref:System.Windows.Forms.Panel> if it is a member of the collection. The example requires that you have created a <xref:System.Windows.Forms.Panel>, a <xref:System.Windows.Forms.Button>, and at least one <xref:System.Windows.Forms.RadioButton> control on a <xref:System.Windows.Forms.Form>. The <xref:System.Windows.Forms.RadioButton> control(s) are added to the <xref:System.Windows.Forms.Panel> control, and the <xref:System.Windows.Forms.Panel> control added to the <xref:System.Windows.Forms.Form>. When the button is clicked, the radio button named `removeButton` is removed from the <xref:System.Windows.Forms.Control.ControlCollection>.  \n  \n [!code-cs[ControlCollection#4](~/add/codesnippet/csharp/p-system.windows.forms.c_41_1.cs)]\n [!code-vb[ControlCollection#4](~/add/codesnippet/visualbasic/p-system.windows.forms.c_41_1.vb)]\n [!code-cpp[ControlCollection#4](~/add/codesnippet/cpp/p-system.windows.forms.c_41_1.cpp)]"
  syntax:
    content: public System.Windows.Forms.Control.ControlCollection Controls { get; }
    return:
      type: System.Windows.Forms.Control.ControlCollection
      description: "Um <xref:System.Windows.Forms.Control.ControlCollection>que representa a coleção de controles contidos dentro do controle.</xref:System.Windows.Forms.Control.ControlCollection>"
  overload: System.Windows.Forms.Control.Controls*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CreateAccessibilityInstance
  id: CreateAccessibilityInstance
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CreateAccessibilityInstance()
  nameWithType: Control.CreateAccessibilityInstance()
  fullName: System.Windows.Forms.Control.CreateAccessibilityInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Cria um novo objeto de acessibilidade para o controle."
  remarks: "Se você não chamar explicitamente o método CreateAccessibilityInstance, ele será chamado quando o <xref:System.Windows.Forms.Control.AccessibilityObject%2A>propriedade é referenciada.</xref:System.Windows.Forms.Control.AccessibilityObject%2A>      > [!NOTE] > Para obter ou definir o <xref:System.Windows.Forms.Control.AccessibilityObject%2A>propriedade, você deve adicionar uma referência para o `Accessibility` assembly instalado com o [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)].</xref:System.Windows.Forms.Control.AccessibilityObject%2A>"
  example:
  - "The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the CreateAccessibilityInstance method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates overriding the CreateAccessibilityInstance method. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_3_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#2](~/add/codesnippet/csharp/m-system.windows.forms.c_3_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#2](~/add/codesnippet/cpp/m-system.windows.forms.c_3_1.cpp)]"
  syntax:
    content: protected virtual System.Windows.Forms.AccessibleObject CreateAccessibilityInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "Um novo <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> para o controle."
  overload: System.Windows.Forms.Control.CreateAccessibilityInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CreateControl
  id: CreateControl
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CreateControl()
  nameWithType: Control.CreateControl()
  fullName: System.Windows.Forms.Control.CreateControl()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Força a criação do controle visível, incluindo a criação da alça e os controles filho visível."
  remarks: "O método CreateControl força um identificador a ser criado para o controle e seus controles filhos. Esse método é usado quando você precisa de um indicador imediatamente para a manipulação de controle ou seus filhos; Basta chamar o construtor do controle não cria <xref:System.Windows.Forms.Control.Handle%2A>.</xref:System.Windows.Forms.Control.Handle%2A>       CreateControl não cria um identificador de controle se o controle <xref:System.Windows.Forms.Control.Visible%2A>é de propriedade `false`.</xref:System.Windows.Forms.Control.Visible%2A> Você pode chamar o <xref:System.Windows.Forms.Control.CreateHandle%2A>método ou acesso a <xref:System.Windows.Forms.Control.Handle%2A>propriedade ao criar o controle não manipular independentemente da visibilidade do controle, mas nesse caso, nenhuma janela de identificadores são criados para crianças do controle.</xref:System.Windows.Forms.Control.Handle%2A> </xref:System.Windows.Forms.Control.CreateHandle%2A>"
  syntax:
    content: public void CreateControl ();
    parameters: []
  overload: System.Windows.Forms.Control.CreateControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CreateControlsInstance
  id: CreateControlsInstance
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CreateControlsInstance()
  nameWithType: Control.CreateControlsInstance()
  fullName: System.Windows.Forms.Control.CreateControlsInstance()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Cria uma nova instância da coleção de controle para o controle."
  syntax:
    content: protected virtual System.Windows.Forms.Control.ControlCollection CreateControlsInstance ();
    parameters: []
    return:
      type: System.Windows.Forms.Control.ControlCollection
      description: "Uma nova instância da <xref:System.Windows.Forms.Control.ControlCollection>atribuído ao controle.</xref:System.Windows.Forms.Control.ControlCollection>"
  overload: System.Windows.Forms.Control.CreateControlsInstance*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Created
  id: Created
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Created
  nameWithType: Control.Created
  fullName: System.Windows.Forms.Control.Created
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o controle foi criado."
  remarks: "A propriedade retorna criado `true` se o <xref:System.Windows.Forms.Control>foi criado com êxito mesmo que o identificador do controle pode não foram criado ou recriado ainda.</xref:System.Windows.Forms.Control>"
  syntax:
    content: public bool Created { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle é criado. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.Created*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CreateGraphics
  id: CreateGraphics
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CreateGraphics()
  nameWithType: Control.CreateGraphics()
  fullName: System.Windows.Forms.Control.CreateGraphics()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Cria o <xref href=&quot;System.Drawing.Graphics&quot;> </xref> para o controle."
  remarks: "O <xref:System.Drawing.Graphics>objetos que podem ser recuperadas por meio do método CreateGraphics devem não normalmente ser mantidos depois que a mensagem atual do Windows foi processada, porque qualquer coisa pintado com esse objeto será apagada com a próxima mensagem WM_PAINT.</xref:System.Drawing.Graphics> Portanto, você não pode armazenar em cache o <xref:System.Drawing.Graphics>objeto para reutilização, exceto ao usar métodos de não-visual como <xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=fullName>.</xref:System.Drawing.Graphics.MeasureString%2A?displayProperty=fullName> </xref:System.Drawing.Graphics> Em vez disso, você deve chamar CreateGraphics toda vez que você deseja usar o <xref:System.Drawing.Graphics>objeto e, em seguida, chamar <xref:System.Drawing.Graphics.Dispose%2A>Quando terminar de usar o proprietário.</xref:System.Drawing.Graphics.Dispose%2A> </xref:System.Drawing.Graphics> Para obter mais informações sobre mensagens do Windows, consulte <xref:System.Windows.Forms.Control.WndProc%2A>.</xref:System.Windows.Forms.Control.WndProc%2A>       Por design, CreateGraphics define a propriedade para o thread de chamada e falhará se for chamado em outros threads.      > [!NOTE] > Além do <xref:System.Windows.Forms.Control.InvokeRequired%2A>propriedade, há quatro métodos em um controle que são thread-safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>e CreateGraphics se o identificador para o controle já foi criado.</xref:System.Windows.Forms.Control.EndInvoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.InvokeRequired%2A> Chamar CreateGraphics antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread. Para todas as outras chamadas de método, você deve usar um dos métodos invoke realizar marshaling da chamada para thread do controle."
  example:
  - "The following code example resizes the specified control so the control will accommodate its formatted text. The formatted text is the <xref:System.Windows.Forms.Control.Text%2A> property with the control's assigned <xref:System.Windows.Forms.Control.Font%2A> applied to the text. The `AutoSizeControl` method in this example also has a `textPadding` parameter that represents the padding to apply to all edges of the control. To make the padding appear equal, align the text with the `MiddleCenter` value of <xref:System.Drawing.ContentAlignment?displayProperty=fullName> if your control supports it.  \n  \n [!code-cpp[Windows.Forms.Control Member5#1](~/add/codesnippet/cpp/m-system.windows.forms.c_91_1.cpp)]\n [!code-cs[Windows.Forms.Control Member5#1](~/add/codesnippet/csharp/m-system.windows.forms.c_91_1.cs)]\n [!code-vb[Windows.Forms.Control Member5#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_91_1.vb)]"
  syntax:
    content: public System.Drawing.Graphics CreateGraphics ();
    parameters: []
    return:
      type: System.Drawing.Graphics
      description: "O <xref href=&quot;System.Drawing.Graphics&quot;> </xref> para o controle."
  overload: System.Windows.Forms.Control.CreateGraphics*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CreateHandle
  id: CreateHandle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CreateHandle()
  nameWithType: Control.CreateHandle()
  fullName: System.Windows.Forms.Control.CreateHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Cria um identificador para o controle."
  remarks: "Você normalmente não deve chamar o método CreateHandle diretamente. O método preferencial é chamar o <xref:System.Windows.Forms.Control.CreateControl%2A>método, o que força um identificador a ser criado para o controle e seus controles filhos quando o controle é criado.</xref:System.Windows.Forms.Control.CreateControl%2A>"
  syntax:
    content: protected virtual void CreateHandle ();
    parameters: []
  overload: System.Windows.Forms.Control.CreateHandle*
  exceptions:
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "O objeto está em um estado descartado."
  platform:
  - net462
- uid: System.Windows.Forms.Control.CreateParams
  id: CreateParams
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CreateParams
  nameWithType: Control.CreateParams
  fullName: System.Windows.Forms.Control.CreateParams
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém os parâmetros de criação necessária quando a alça de controle é criada."
  remarks: "A propriedade CreateParams não será substituída e usada para ajustar as propriedades de seu controle derivado. Propriedades, como o <xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=fullName>, <xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=fullName>e <xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=fullName>deve ser definido por propriedades correspondentes do seu controle como <xref:System.Windows.Forms.Control.Text%2A?displayProperty=fullName> <xref:System.Windows.Forms.Control.Width%2A?displayProperty=fullName>e <xref:System.Windows.Forms.Control.Height%2A?displayProperty=fullName>.</xref:System.Windows.Forms.Control.Height%2A?displayProperty=fullName> </xref:System.Windows.Forms.Control.Width%2A?displayProperty=fullName> </xref:System.Windows.Forms.Control.Text%2A?displayProperty=fullName> </xref:System.Windows.Forms.CreateParams.Height%2A?displayProperty=fullName> </xref:System.Windows.Forms.CreateParams.Width%2A?displayProperty=fullName> </xref:System.Windows.Forms.CreateParams.Caption%2A?displayProperty=fullName> O <xref:System.Windows.Forms.CreateParams>só deve ser estendido quando são quebra automática de uma classe de controle do Windows padrão ou definir estilos não fornecidos pelo namespace de Windows Forms.</xref:System.Windows.Forms.CreateParams> Para obter mais informações sobre como criar parâmetros de controle, consulte o `CreateWindow` e `CreateWindowEx` funções e o [CREATESTRUCT](http://msdn.microsoft.com/library/windows/desktop/ms632603.aspx)estrutura documentação."
  example:
  - "The following code example extends the CreateParams property of a <xref:System.Windows.Forms.Button> derived class. The <xref:System.Windows.Forms.CreateParams.Style%2A?displayProperty=fullName> property is changed, which causes the button to display an <xref:System.Drawing.Icon> rather than an <xref:System.Drawing.Image>. This example requires that you have a class that inherits from the <xref:System.Windows.Forms.Button> class.  \n  \n [!code-cs[CreateParams#3](~/add/codesnippet/csharp/p-system.windows.forms.c_71_1.cs)]\n [!code-cpp[CreateParams#3](~/add/codesnippet/cpp/p-system.windows.forms.c_71_1.cpp)]\n [!code-vb[CreateParams#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_71_1.vb)]"
  syntax:
    content: protected virtual System.Windows.Forms.CreateParams CreateParams { get; }
    return:
      type: System.Windows.Forms.CreateParams
      description: "Um <xref href=&quot;System.Windows.Forms.CreateParams&quot;> </xref> que contém os parâmetros de criação necessária quando o identificador para o controle é criado."
  overload: System.Windows.Forms.Control.CreateParams*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Cursor
  id: Cursor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Cursor
  nameWithType: Control.Cursor
  fullName: System.Windows.Forms.Control.Cursor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o cursor exibido quando o ponteiro do mouse está sobre o controle."
  remarks: "Atribuir uma <xref:System.Windows.Forms.Cursor>à propriedade Cursor do controle para alterar o cursor exibido quando o ponteiro do mouse está sobre o controle.</xref:System.Windows.Forms.Cursor> Para alterar temporariamente o cursor do mouse para todos os controles no seu conjunto de aplicativos do <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName>propriedade.</xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName> Normalmente você deve definir o <xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName>propriedade para um cursor de espera ao popular um <xref:System.Windows.Forms.ComboBox>ou salvar ou carregar um arquivo.</xref:System.Windows.Forms.ComboBox> </xref:System.Windows.Forms.Cursor.Current%2A?displayProperty=fullName>       A propriedade de Cursor é uma propriedade de ambiente. Uma propriedade de ambiente é uma propriedade de controle que, se não for definido, será recuperado do controle pai. Por exemplo, um <xref:System.Windows.Forms.Button>terão o mesmo <xref:System.Windows.Forms.Control.BackColor%2A>como seu pai <xref:System.Windows.Forms.Form>por padrão.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Button> Para obter mais informações sobre propriedades de ambiente, consulte o <xref:System.Windows.Forms.AmbientProperties>classe ou o <xref:System.Windows.Forms.Control>Visão geral da classe.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.AmbientProperties>"
  example:
  - "The following code example fills a <xref:System.Windows.Forms.ComboBox> with the user's available logical drives. The example also sets the combo box's <xref:System.Windows.Forms.Cursor> property so the <xref:System.Windows.Forms.Cursors.Hand%2A?displayProperty=fullName> cursor is displayed when the mouse pointer is over the drop-down button. This code requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.ComboBox> on it.  \n  \n [!code-cs[Windows.Forms.Control Properties2#1](~/add/codesnippet/csharp/p-system.windows.forms.c_26_1.cs)]\n [!code-vb[Windows.Forms.Control Properties2#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_26_1.vb)]\n [!code-cpp[Windows.Forms.Control Properties2#1](~/add/codesnippet/cpp/p-system.windows.forms.c_26_1.cpp)]"
  syntax:
    content: public virtual System.Windows.Forms.Cursor Cursor { get; set; }
    return:
      type: System.Windows.Forms.Cursor
      description: "Um <xref href=&quot;System.Windows.Forms.Cursor&quot;> </xref> que representa o cursor a ser exibido quando o ponteiro do mouse está sobre o controle."
  overload: System.Windows.Forms.Control.Cursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.CursorChanged
  id: CursorChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: CursorChanged
  nameWithType: Control.CursorChanged
  fullName: System.Windows.Forms.Control.CursorChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o valor de <xref:System.Windows.Forms.Control.Cursor*>alterações de propriedade.</xref:System.Windows.Forms.Control.Cursor*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.Cursor%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.Cursor%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates changing the mouse cursor using the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=fullName> property, the <xref:System.Windows.Forms.Cursor> class, and the <xref:System.Windows.Forms.Cursors> class. The example creates a form that contains a <xref:System.Windows.Forms.ComboBox> control, a <xref:System.Windows.Forms.Panel> control, and a <xref:System.Windows.Forms.ListView> control. The<xref:System.Windows.Forms.ComboBox> contains all cursors provided by the <xref:System.Windows.Forms.Cursors> class. When the user selects a mouse cursor in the <xref:System.Windows.Forms.ComboBox>, the <xref:System.Windows.Forms.Control.Cursor%2A?displayProperty=fullName> property is set to the selected cursor, which updates the cursor for the <xref:System.Windows.Forms.Panel>. The <xref:System.Windows.Forms.ListView> is updated every time the CursorChanged event occurs.  \n  \n [!code-cpp[System.Windows.Forms.Cursors#1](~/add/codesnippet/cpp/e-system.windows.forms.c_56_1.cpp)]\n [!code-vb[System.Windows.Forms.Cursors#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_56_1.vb)]\n [!code-cs[System.Windows.Forms.Cursors#1](~/add/codesnippet/csharp/e-system.windows.forms.c_56_1.cs)]"
  syntax:
    content: public event EventHandler CursorChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DataBindings
  id: DataBindings
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DataBindings
  nameWithType: Control.DataBindings
  fullName: System.Windows.Forms.Control.DataBindings
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém as associações de dados para o controle."
  remarks: "Use a propriedade de ligações de dados para acessar o <xref:System.Windows.Forms.ControlBindingsCollection>.</xref:System.Windows.Forms.ControlBindingsCollection> Adicionando <xref:System.Windows.Forms.Binding>objetos na coleção, você pode vincular qualquer propriedade de um controle para a propriedade de um objeto.</xref:System.Windows.Forms.Binding>"
  example:
  - "The following code example adds <xref:System.Windows.Forms.Binding> objects to the <xref:System.Windows.Forms.ControlBindingsCollection> of five controls: four <xref:System.Windows.Forms.TextBox> controls and a <xref:System.Windows.Forms.DateTimePicker> control. The <xref:System.Windows.Forms.ControlBindingsCollection> is accessed through the DataBindings property of the <xref:System.Windows.Forms.Control> class.  \n  \n [!code-cpp[Classic Control.DataBindings Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_117_1.cpp)]\n [!code-cs[Classic Control.DataBindings Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_117_1.cs)]\n [!code-vb[Classic Control.DataBindings Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_117_1.vb)]"
  syntax:
    content: public System.Windows.Forms.ControlBindingsCollection DataBindings { get; }
    return:
      type: System.Windows.Forms.ControlBindingsCollection
      description: "Um <xref href=&quot;System.Windows.Forms.ControlBindingsCollection&quot;> </xref> que contém o <xref href=&quot;System.Windows.Forms.Binding&quot;> </xref> objetos para o controle."
  overload: System.Windows.Forms.Control.DataBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultBackColor
  id: DefaultBackColor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultBackColor
  nameWithType: Control.DefaultBackColor
  fullName: System.Windows.Forms.Control.DefaultBackColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém a cor de plano de fundo padrão do controle."
  remarks: "Esse é o padrão <xref:System.Windows.Forms.Control.BackColor%2A>valor da propriedade de um controle de nível superior genérico.</xref:System.Windows.Forms.Control.BackColor%2A> Classes derivadas podem ter padrões diferentes."
  example:
  - "The following code example demonstrates how to use the DefaultBackColor, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1. Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/cpp/p-system.windows.forms.c_52_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/csharp/p-system.windows.forms.c_52_1.cs)]\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_52_1.vb)]"
  syntax:
    content: public static System.Drawing.Color DefaultBackColor { get; }
    return:
      type: System.Drawing.Color
      description: "O plano de fundo padrão <xref href=&quot;System.Drawing.Color&quot;> </xref> do controle. O padrão é &lt;xref:System.Drawing.SystemColors.Control%2A?displayProperty=fullName&gt;."
  overload: System.Windows.Forms.Control.DefaultBackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultCursor
  id: DefaultCursor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultCursor
  nameWithType: Control.DefaultCursor
  fullName: System.Windows.Forms.Control.DefaultCursor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o cursor padrão para o controle."
  remarks: "Substitua DefaultCursor para configurar um cursor padrão para o seu controle. Isso é mais eficiente do que a definição do cursor no construtor do controle e dá suporte automático para determinadas funções de designer relacionados ao cursor."
  syntax:
    content: protected virtual System.Windows.Forms.Cursor DefaultCursor { get; }
    return:
      type: System.Windows.Forms.Cursor
      description: "Um objeto do tipo <xref href=&quot;System.Windows.Forms.Cursor&quot;> </xref> que representa o cursor padrão atual."
  overload: System.Windows.Forms.Control.DefaultCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultFont
  id: DefaultFont
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultFont
  nameWithType: Control.DefaultFont
  fullName: System.Windows.Forms.Control.DefaultFont
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém a fonte padrão do controle."
  remarks: "A tabela a seguir descreve o valor retornado por DefaultFont dependendo do sistema operacional e a cultura local.      | Sistema / e ou cultura | Fonte |   |----------------------------|----------|   | X, a versão em japonês do Windows NT 4 | MS UI Gótica, ponto 9. |   | Árabe Windows | Tahoma, 8 pontos. |   | Outra sistema operacional/cultura | fonte lógico MS Shell Dlg, normalmente ponto Microsoft San Serif 8. |       MS Shell Dlg mapeia para uma fonte definida no registro do sistema.       Se as fontes anteriores não estiverem instaladas, a fonte padrão é Tahoma, 8 pontos. Se Tahoma, 8 ponto, não estiver instalado, o valor da <xref:System.Drawing.FontFamily.GenericSansSerif%2A>propriedade</xref:System.Drawing.FontFamily.GenericSansSerif%2A> de DefaultFontreturns"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, DefaultFont, and <xref:System.Windows.Forms.Control.DefaultForeColor%2A> members. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1. Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/cpp/p-system.windows.forms.c_29_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/csharp/p-system.windows.forms.c_29_1.cs)]\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_29_1.vb)]"
  syntax:
    content: public static System.Drawing.Font DefaultFont { get; }
    return:
      type: System.Drawing.Font
      description: "O padrão <xref href=&quot;System.Drawing.Font&quot;> </xref> do controle. O valor retornado variam dependendo do sistema operacional do usuário a configuração de cultura local do seu sistema."
  overload: System.Windows.Forms.Control.DefaultFont*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "A fonte padrão ou as fontes alternativas regionais não estão instaladas no computador cliente."
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultForeColor
  id: DefaultForeColor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultForeColor
  nameWithType: Control.DefaultForeColor
  fullName: System.Windows.Forms.Control.DefaultForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém a cor de primeiro plano do padrão do controle."
  remarks: "Esse é o padrão <xref:System.Windows.Forms.Control.ForeColor%2A>valor da propriedade de um controle nonparented.</xref:System.Windows.Forms.Control.ForeColor%2A> Classes derivadas podem ter padrões diferentes."
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.DefaultBackColor%2A>, <xref:System.Windows.Forms.Control.DefaultFont%2A>, and DefaultForeColor members. To run the example, paste the following code in a form containing a <xref:System.Windows.Forms.ListBox> called ListBox1. Call the `Populate_ListBox` method in the form's constructor or <xref:System.Windows.Forms.Form.Load> event-handling method.  \n  \n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/cpp/p-system.windows.forms.c_49_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/csharp/p-system.windows.forms.c_49_1.cs)]\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_49_1.vb)]"
  syntax:
    content: public static System.Drawing.Color DefaultForeColor { get; }
    return:
      type: System.Drawing.Color
      description: "O padrão de primeiro plano <xref href=&quot;System.Drawing.Color&quot;> </xref> do controle. O padrão é &lt;xref:System.Drawing.SystemColors.ControlText%2A?displayProperty=fullName&gt;."
  overload: System.Windows.Forms.Control.DefaultForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultImeMode
  id: DefaultImeMode
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultImeMode
  nameWithType: Control.DefaultImeMode
  fullName: System.Windows.Forms.Control.DefaultImeMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o modo do Editor de método de entrada (IME) padrão suportado pelo controle."
  remarks: "Um Editor de método de entrada (IME) é um programa que permite que os usuários insiram caracteres complexos e símbolos, como caracteres de Kanji japonês, usando um teclado padrão.       Conforme implementado o <xref:System.Windows.Forms.Control>classe, essa propriedade sempre retorna o <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>valor.</xref:System.Windows.Forms.ImeMode?displayProperty=fullName> </xref:System.Windows.Forms.Control> O <xref:System.Windows.Forms.ImeMode>valor Especifica que o modo IME é herdado do controle pai.</xref:System.Windows.Forms.ImeMode>"
  example:
  - "The following code example overrides the DefaultImeMode property to turn off the Input Method Editor.  \n  \n [!code-cs[Windows.Forms.Control Properties2#4](~/add/codesnippet/csharp/p-system.windows.forms.c_7_1.cs)]\n [!code-vb[Windows.Forms.Control Properties2#4](~/add/codesnippet/visualbasic/p-system.windows.forms.c_7_1.vb)]\n [!code-cpp[Windows.Forms.Control Properties2#4](~/add/codesnippet/cpp/p-system.windows.forms.c_7_1.cpp)]"
  syntax:
    content: protected virtual System.Windows.Forms.ImeMode DefaultImeMode { get; }
    return:
      type: System.Windows.Forms.ImeMode
      description: "Uma da <xref href=&quot;System.Windows.Forms.ImeMode&quot;> </xref> valores."
  overload: System.Windows.Forms.Control.DefaultImeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultMargin
  id: DefaultMargin
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultMargin
  nameWithType: Control.DefaultMargin
  fullName: System.Windows.Forms.Control.DefaultMargin
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o espaço, em pixels, que é especificado pelo padrão entre os controles."
  syntax:
    content: protected virtual System.Windows.Forms.Padding DefaultMargin { get; }
    return:
      type: System.Windows.Forms.Padding
      description: "Um <xref href=&quot;System.Windows.Forms.Padding&quot;> </xref> que representa o espaçamento padrão entre controles."
  overload: System.Windows.Forms.Control.DefaultMargin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultMaximumSize
  id: DefaultMaximumSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultMaximumSize
  nameWithType: Control.DefaultMaximumSize
  fullName: System.Windows.Forms.Control.DefaultMaximumSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o comprimento e a altura, em pixels, que é especificada como o tamanho máximo padrão de um controle."
  syntax:
    content: protected virtual System.Drawing.Size DefaultMaximumSize { get; }
    return:
      type: System.Drawing.Size
      description: "Um &lt;xref:System.Drawing.Point.%23ctor%2A&gt; que representa o tamanho do controle."
  overload: System.Windows.Forms.Control.DefaultMaximumSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultMinimumSize
  id: DefaultMinimumSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultMinimumSize
  nameWithType: Control.DefaultMinimumSize
  fullName: System.Windows.Forms.Control.DefaultMinimumSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o comprimento e a altura, em pixels, que é especificada como o tamanho mínimo padrão de um controle."
  syntax:
    content: protected virtual System.Drawing.Size DefaultMinimumSize { get; }
    return:
      type: System.Drawing.Size
      description: "Um <xref href=&quot;System.Drawing.Size&quot;> </xref> que representa o tamanho do controle."
  overload: System.Windows.Forms.Control.DefaultMinimumSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultPadding
  id: DefaultPadding
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultPadding
  nameWithType: Control.DefaultPadding
  fullName: System.Windows.Forms.Control.DefaultPadding
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o espaçamento interno, em pixels, do conteúdo de um controle."
  syntax:
    content: protected virtual System.Windows.Forms.Padding DefaultPadding { get; }
    return:
      type: System.Windows.Forms.Padding
      description: "Um <xref href=&quot;System.Windows.Forms.Padding&quot;> </xref> que representa o espaçamento interno do conteúdo de um controle."
  overload: System.Windows.Forms.Control.DefaultPadding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefaultSize
  id: DefaultSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefaultSize
  nameWithType: Control.DefaultSize
  fullName: System.Windows.Forms.Control.DefaultSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o tamanho padrão do controle."
  remarks: "DefaultSize propriedade representa o <xref:System.Drawing.Size>do controle quando ele é criado inicialmente.</xref:System.Drawing.Size> Você pode ajustar o tamanho do controle definindo seu <xref:System.Windows.Forms.Control.Size%2A>o valor da propriedade.</xref:System.Windows.Forms.Control.Size%2A>      > [!NOTE] > Para manter o melhor desempenho, não defina o <xref:System.Drawing.Size>de um controle em seu construtor.</xref:System.Drawing.Size> O método preferencial é substituir a propriedade DefaultSize.      > [!NOTE] > Sistemas no Windows Server 2003, o tamanho de um <xref:System.Windows.Forms.Form>é restrito pelo máximo pixels de largura e altura do monitor.</xref:System.Windows.Forms.Form>"
  example:
  - "The following code example overrides the DefaultSize property, and makes the default size of the form 500 pixels square.  \n  \n [!code-cs[Windows.Forms.Control Properties2#3](~/add/codesnippet/csharp/p-system.windows.forms.c_10_1.cs)]\n [!code-vb[Windows.Forms.Control Properties2#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_10_1.vb)]\n [!code-cpp[Windows.Forms.Control Properties2#3](~/add/codesnippet/cpp/p-system.windows.forms.c_10_1.cpp)]"
  syntax:
    content: protected virtual System.Drawing.Size DefaultSize { get; }
    return:
      type: System.Drawing.Size
      description: "O padrão <xref href=&quot;System.Drawing.Size&quot;> </xref> do controle."
  overload: System.Windows.Forms.Control.DefaultSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  id: DefWndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DefWndProc(Message)
  nameWithType: Control.DefWndProc(Message)
  fullName: System.Windows.Forms.Control.DefWndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Envia a mensagem especificada para o procedimento de janela padrão."
  remarks: "Para obter mais informações sobre o processamento de mensagens do Windows, consulte o [WindowProc função](http://go.microsoft.com/fwlink/?LinkId=181565)."
  syntax:
    content: protected virtual void DefWndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "O Windows <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> ao processo."
  overload: System.Windows.Forms.Control.DefWndProc*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DestroyHandle
  id: DestroyHandle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DestroyHandle()
  nameWithType: Control.DestroyHandle()
  fullName: System.Windows.Forms.Control.DestroyHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Destrói o identificador associado ao controle."
  syntax:
    content: protected virtual void DestroyHandle ();
    parameters: []
  overload: System.Windows.Forms.Control.DestroyHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DisplayRectangle
  id: DisplayRectangle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DisplayRectangle
  nameWithType: Control.DisplayRectangle
  fullName: System.Windows.Forms.Control.DisplayRectangle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o retângulo que representa a área de exibição do controle."
  remarks: "A propriedade DisplayRectangle retorna o retângulo de cliente da área de exibição do controle. Para a classe base de controle, isso é igual do retângulo de cliente. No entanto, herdar controles talvez queira alterar isso se suas áreas de cliente for diferente da sua área de exibição. O retângulo de exibição é a menor <xref:System.Drawing.Rectangle>que inclui um controle e é usado para dispor controles.</xref:System.Drawing.Rectangle>"
  syntax:
    content: public virtual System.Drawing.Rectangle DisplayRectangle { get; }
    return:
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa a área de exibição do controle."
  overload: System.Windows.Forms.Control.DisplayRectangle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: Control.Dispose(Boolean)
  fullName: System.Windows.Forms.Control.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Libera os recursos não gerenciados usados pelo <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> e controles de seu filho e, opcionalmente, libera os recursos gerenciados."
  remarks: "Este método é chamado pelo público `Dispose()` método e o <xref:System.Object.Finalize%2A>método.`Dispose()` </xref:System.Object.Finalize%2A> invoca o protegido `Dispose(Boolean)` método com o `disposing` parâmetro definido como `true`. <xref:System.Object.Finalize%2A>invoca `Dispose` com `disposing` definido como `false`.</xref:System.Object.Finalize%2A>       Quando o `disposing`parâmetro é `true`, esse método libera todos os recursos mantidos por qualquer objeto gerenciado que este <xref:System.Windows.Forms.Control>referências.</xref:System.Windows.Forms.Control> Este método chama o `Dispose()` método de cada objeto referenciado."
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para liberar recursos gerenciados e não gerenciados; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para liberar apenas recursos não gerenciados."
  overload: System.Windows.Forms.Control.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Disposing
  id: Disposing
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Disposing
  nameWithType: Control.Disposing
  fullName: System.Windows.Forms.Control.Disposing
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se a base de <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> classe está no processo de descarte."
  remarks: "Quando essa propriedade retorna `true`, a base de<xref:System.Windows.Forms.Control> classe está no processo de descarte.</xref:System.Windows.Forms.Control> Depois que o controle é descartado, não pode ser referenciado como um controle do Windows válido. Mesmo que a instância de um controle é descartada, ainda é mantida na memória até que ele seja removido da memória por meio de coleta de lixo. Quando um controle é descartado, não é possível chamar o <xref:System.Windows.Forms.Control.RecreateHandle%2A>método.</xref:System.Windows.Forms.Control.RecreateHandle%2A>"
  syntax:
    content: public bool Disposing { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a base de <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> classe está no processo de descartar; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.Disposing*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Dock
  id: Dock
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Dock
  nameWithType: Control.Dock
  fullName: System.Windows.Forms.Control.Dock
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define as bordas do controle são encaixadas para seu controle pai e determina como um controle é redimensionado com seu pai."
  remarks: "Use a propriedade Dock para definir como um controle é redimensionado automaticamente porque seu controle pai é redimensionado. Por exemplo, definindo o encaixe <xref:System.Windows.Forms.DockStyle?displayProperty=fullName>faz com que o controle para alinhar-se com as bordas esquerdas do controle pai e são redimensionados à medida que o controle pai for redimensionado.</xref:System.Windows.Forms.DockStyle?displayProperty=fullName> Controles são encaixados em sua ordem Z, que é a camada visual de controles em um formulário ao longo eixo z do formulário (profundidade).       Um controle pode ser ancorado a uma borda de seu contêiner pai, ou pode ser encaixado para todas as bordas e preencher o contêiner pai.       Definindo o <xref:System.Windows.Forms.Control.Margin%2A>propriedade em um controle encaixado não tem nenhum efeito na distância do controle do as bordas de seu contêiner.</xref:System.Windows.Forms.Control.Margin%2A>      > [!NOTE] > O <xref:System.Windows.Forms.Control.Anchor%2A>e propriedades de encaixe são mutuamente exclusivas.</xref:System.Windows.Forms.Control.Anchor%2A> Somente um pode ser definido em um momento e o último conjunto tem precedência."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties. The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box. Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form. Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.  \n  \n [!code-cs[Windows.Forms.Control Properties#2](~/add/codesnippet/csharp/p-system.windows.forms.c_24_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#2](~/add/codesnippet/cpp/p-system.windows.forms.c_24_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_24_1.vb)]"
  syntax:
    content: public virtual System.Windows.Forms.DockStyle Dock { get; set; }
    return:
      type: System.Windows.Forms.DockStyle
      description: "Uma da <xref href=&quot;System.Windows.Forms.DockStyle&quot;> </xref> valores. O padrão é <xref href=&quot;System.Windows.Forms.DockStyle&quot;> </xref>."
  overload: System.Windows.Forms.Control.Dock*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor atribuído não é um do <xref href=&quot;System.Windows.Forms.DockStyle&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Windows.Forms.Control.DockChanged
  id: DockChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DockChanged
  nameWithType: Control.DockChanged
  fullName: System.Windows.Forms.Control.DockChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o valor de <xref:System.Windows.Forms.Control.Dock*>alterações de propriedade.</xref:System.Windows.Forms.Control.Dock*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.Dock%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.Dock%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes(*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_62_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_62_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_62_1.cpp)]"
  syntax:
    content: public event EventHandler DockChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  id: DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DoDragDrop(Object,DragDropEffects)
  nameWithType: Control.DoDragDrop(Object,DragDropEffects)
  fullName: System.Windows.Forms.Control.DoDragDrop(Object,DragDropEffects)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Começa uma operação de arrastar e soltar."
  remarks: "O `allowedEffects` parâmetro determina quais operações podem ocorrer de arrastar. Se a operação de arrastar precisa interoperar com aplicativos em outro processo, dados devem ser uma classe gerenciada base (<xref:System.String>, <xref:System.Drawing.Bitmap>, ou <xref:System.Drawing.Imaging.Metafile>), ou um objeto que implementa <xref:System.Runtime.Serialization.ISerializable>ou <xref:System.Windows.Forms.IDataObject>.</xref:System.Windows.Forms.IDataObject> </xref:System.Runtime.Serialization.ISerializable> </xref:System.Drawing.Imaging.Metafile> </xref:System.Drawing.Bitmap> </xref:System.String>       O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.       O método DoDragDrop determina o controle no local atual do cursor. Em seguida, ele verifica para ver se o controle é um destino válido.       Se o controle é um destino válido, o <xref:System.Windows.Forms.Control.GiveFeedback>é gerado com o efeito de arrastar e soltar especificado.</xref:System.Windows.Forms.Control.GiveFeedback> Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects>enumeração.</xref:System.Windows.Forms.DragDropEffects>       As alterações na posição do cursor do mouse, o estado de teclado e o estado do botão do mouse são rastreadas.      -Se o usuário sai de uma janela, o <xref:System.Windows.Forms.Control.DragLeave>é gerado.</xref:System.Windows.Forms.Control.DragLeave>      -Se o mouse entra em outro controle, o <xref:System.Windows.Forms.Control.DragEnter>para que o controle é gerado.</xref:System.Windows.Forms.Control.DragEnter>      -Se o mouse se move, mas permanece dentro do mesmo controle, o <xref:System.Windows.Forms.Control.DragOver>é gerado.</xref:System.Windows.Forms.Control.DragOver>       Se houver uma alteração no teclado ou mouse botão estado, o <xref:System.Windows.Forms.Control.QueryContinueDrag>evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>propriedade de evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</xref:System.Windows.Forms.QueryContinueDragEventArgs> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.Control.QueryContinueDrag>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Continue`, o <xref:System.Windows.Forms.Control.DragOver>é gerado para continuar a operação e o <xref:System.Windows.Forms.Control.GiveFeedback>é gerado com o efeito de novo para comentários visuais apropriado podem ser definido.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver> </xref:System.Windows.Forms.DragAction> Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects>enumeração.</xref:System.Windows.Forms.DragDropEffects>          > [!NOTE] > O <xref:System.Windows.Forms.Control.DragOver>e <xref:System.Windows.Forms.Control.GiveFeedback>eventos são combinados para dar conforme o mouse se move entre o local de destino, o usuário os comentários mais atualizados sobre a posição do mouse.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem possa executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.</xref:System.Windows.Forms.DragAction>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Cancel`, o <xref:System.Windows.Forms.Control.DragLeave>é gerado.</xref:System.Windows.Forms.Control.DragLeave> </xref:System.Windows.Forms.DragAction>      > [!NOTE] > DoDragDrop o método captura todas as exceções e relança somente o seguinte de segurança ou as exceções críticas: - SecurityException - NullReferenceException - IndexOutOfRangeException StackOverflowException - ExecutionEngineException OutOfMemoryException - ThreadAbortException - - - AccessViolationException"
  example:
  - "The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the DoDragDrop method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck` <xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel` <xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#1](~/add/codesnippet/cpp/47e0feba-eeb5-4e2f-9c6b-_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#1](~/add/codesnippet/visualbasic/47e0feba-eeb5-4e2f-9c6b-_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#1](~/add/codesnippet/csharp/47e0feba-eeb5-4e2f-9c6b-_1.cs)]  \n  \n The following code example shows how to use the <xref:System.Windows.Forms.DragDropEffects> enumeration to specify how data should be transferred between the controls involved in a drag-and-drop operation. This example requires that your form includes a <xref:System.Windows.Forms.RichTextBox> control and a <xref:System.Windows.Forms.ListBox> control and that the <xref:System.Windows.Forms.ListBox> control is populated with a list of valid file names. When the user drags a file name onto the <xref:System.Windows.Forms.RichTextBox> control, the control's <xref:System.Windows.Forms.Control.DragEnter> event is raised. Within the event handler, the <xref:System.Windows.Forms.DragEventArgs.Effect%2A> property of the <xref:System.Windows.Forms.DragEventArgs> is initialized to <xref:System.Windows.Forms.DragDropEffects> to indicate that the data referenced by the file path should be copied to the <xref:System.Windows.Forms.RichTextBox> control.  \n  \n [!code-cs[RichTextDragDrop#1](~/add/codesnippet/csharp/47e0feba-eeb5-4e2f-9c6b-_2.cs)]\n [!code-vb[RichTextDragDrop#1](~/add/codesnippet/visualbasic/47e0feba-eeb5-4e2f-9c6b-_2.vb)]\n [!code-cpp[RichTextDragDrop#1](~/add/codesnippet/cpp/47e0feba-eeb5-4e2f-9c6b-_2.cpp)]"
  syntax:
    content: public System.Windows.Forms.DragDropEffects DoDragDrop (object data, System.Windows.Forms.DragDropEffects allowedEffects);
    parameters:
    - id: data
      type: System.Object
      description: "Os dados para arrastar."
    - id: allowedEffects
      type: System.Windows.Forms.DragDropEffects
      description: "Uma da <xref href=&quot;System.Windows.Forms.DragDropEffects&quot;> </xref> valores."
    return:
      type: System.Windows.Forms.DragDropEffects
      description: "Um valor da <xref href=&quot;System.Windows.Forms.DragDropEffects&quot;> </xref> enumeração que representa o efeito final que foi executado durante a operação de arrastar e soltar."
  overload: System.Windows.Forms.Control.DoDragDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DoubleBuffered
  id: DoubleBuffered
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DoubleBuffered
  nameWithType: Control.DoubleBuffered
  fullName: System.Windows.Forms.Control.DoubleBuffered
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se este controle deve redesenhar sua superfície usando um buffer secundário para reduzir ou evitar tremulação."
  remarks: "Elementos gráficos em buffer podem reduzir ou eliminar a cintilação causado redesenhando progressivo de partes de uma superfície exibida. Elementos gráficos em buffer requerem que os dados do gráfico atualizado primeiro são gravados em um buffer. Os dados no buffer de gráficos são gravados para a memória de superfície exibida rapidamente. O comutador relativamente rápido da memória gráficos exibidos normalmente reduz a tremulação que pode ocorrer.      > [!NOTE] > DoubleBuffered não é uma propriedade ligável."
  syntax:
    content: protected virtual bool DoubleBuffered { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a superfície do controle deve ser desenhada usando buffers duplos; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.DoubleBuffered*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DoubleClick
  id: DoubleClick
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DoubleClick
  nameWithType: Control.DoubleClick
  fullName: System.Windows.Forms.Control.DoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle é clicado duas vezes."
  remarks: "Um clique duplo é determinado pelas configurações de mouse do sistema operacional do usuário. O usuário pode definir o tempo entre cliques de um botão do mouse que deve ser considerada um clique duplo em vez de dois cliques. O <xref:System.Windows.Forms.Control.Click>é gerado sempre que um controle é clicado duas vezes.</xref:System.Windows.Forms.Control.Click> Por exemplo, se você tem manipuladores de eventos para o <xref:System.Windows.Forms.Control.Click>e eventos DoubleClick um <xref:System.Windows.Forms.Form>, o <xref:System.Windows.Forms.Control.Click>e eventos de clique são gerados quando o formulário é clicado duas vezes e ambos os métodos são chamados.</xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.Click> Se um controle é clicado duas vezes e que o controle não oferece suporte para o evento DoubleClick, o <xref:System.Windows.Forms.Control.Click>evento pode ser disparado duas vezes.</xref:System.Windows.Forms.Control.Click>       Você deve definir o `StandardDoubleClick` e `StandardClick` valores de <xref:System.Windows.Forms.ControlStyles>para `true` para este evento a ser gerado.</xref:System.Windows.Forms.ControlStyles> Esses valores já podem ser definidos para `true` se são herdando existente controles de formulários do Windows.      > [!NOTE] > Os eventos a seguir não são gerados para o <xref:System.Windows.Forms.TabControl>classe a menos que haja pelo menos um <xref:System.Windows.Forms.TabPage>no <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>coleção: <xref:System.Windows.Forms.Control.Click>DoubleClick, <xref:System.Windows.Forms.Control.MouseDown> <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover> <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave>e <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl> Se houver pelo menos um <xref:System.Windows.Forms.TabPage>na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <xref:System.Windows.Forms.TabPage>nomes aparecerão), o <xref:System.Windows.Forms.TabControl>gera o evento apropriado.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <xref:System.Windows.Forms.TabPage>gera o evento apropriado.</xref:System.Windows.Forms.TabPage>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the DoubleClick event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cs[Control.DoubleClick#1](~/add/codesnippet/csharp/e-system.windows.forms.c_33_1.cs)]\n [!code-vb[Control.DoubleClick#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_33_1.vb)]\n [!code-cpp[Control.DoubleClick#1](~/add/codesnippet/cpp/e-system.windows.forms.c_33_1.cpp)]"
  syntax:
    content: public event EventHandler DoubleClick;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DragDrop
  id: DragDrop
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DragDrop
  nameWithType: Control.DragDrop
  fullName: System.Windows.Forms.Control.DragDrop
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando uma operação de arrastar e soltar é concluída."
  remarks: "O <xref:System.Windows.Forms.DragEventArgs.X%2A>e <xref:System.Windows.Forms.DragEventArgs.Y%2A>Propriedades do <xref:System.Windows.Forms.DragEventArgs>estão em coordenadas da tela, não em coordenadas do cliente.</xref:System.Windows.Forms.DragEventArgs> </xref:System.Windows.Forms.DragEventArgs.Y%2A> </xref:System.Windows.Forms.DragEventArgs.X%2A> A seguinte linha de [!INCLUDE[csprcs](~/add/includes/csprcs-md.md)] código converte as propriedades para um cliente <xref:System.Drawing.Point>.</xref:System.Drawing.Point>      ```   Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));   ```      > [!NOTE]> Em versões anteriores ao [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], se você colocar um <xref:System.Windows.Forms.UserControl>com <xref:System.Windows.Forms.Control.DragEnter>e DragDrop eventos em um Windows Form e arrastar e soltar algo para o <xref:System.Windows.Forms.UserControl>em tempo de design, o `DropDrop` e `DropEnter` os eventos são gerados.</xref:System.Windows.Forms.UserControl> </xref:System.Windows.Forms.Control.DragEnter> </xref:System.Windows.Forms.UserControl> No entanto, quando você fechar e reabrir a solução, o <xref:System.Windows.Forms.Control.DragEnter>e eventos de DragDrop não são gerados novamente.</xref:System.Windows.Forms.Control.DragEnter>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "This code excerpt demonstrates using the DragDrop event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#5](~/add/codesnippet/cpp/e-system.windows.forms.c_72_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#5](~/add/codesnippet/visualbasic/e-system.windows.forms.c_72_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#5](~/add/codesnippet/csharp/e-system.windows.forms.c_72_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DragEventHandler DragDrop;
    return:
      type: System.Windows.Forms.DragEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DragEnter
  id: DragEnter
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DragEnter
  nameWithType: Control.DragEnter
  fullName: System.Windows.Forms.Control.DragEnter
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando um objeto é arrastado para os limites do controle."
  remarks: "O evento DragEnter é gerado quando o usuário arrasta primeiro o cursor do mouse sobre o controle durante uma operação de arrastar e soltar.      > [!NOTE] > Em versões anteriores ao [!INCLUDE[dnprdnext](~/add/includes/dnprdnext-md.md)], se você colocar um <xref:System.Windows.Forms.UserControl>com DragEnter e <xref:System.Windows.Forms.Control.DragDrop>eventos em um Windows Form e arrastar e soltar algo para o <xref:System.Windows.Forms.UserControl>em tempo de design, o `DropDrop` e `DropEnter` os eventos são gerados.</xref:System.Windows.Forms.UserControl> </xref:System.Windows.Forms.Control.DragDrop> </xref:System.Windows.Forms.UserControl> No entanto, quando você fechar e reabrir a solução, o DragEnter e <xref:System.Windows.Forms.Control.DragDrop>os eventos não são gerados novamente.</xref:System.Windows.Forms.Control.DragDrop>       O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.       O <xref:System.Windows.Forms.Control.DoDragDrop%2A>método determina o controle no local atual do cursor.</xref:System.Windows.Forms.Control.DoDragDrop%2A> Em seguida, ele verifica para ver se o controle é um destino válido.       Se o controle é um destino válido, o <xref:System.Windows.Forms.Control.GiveFeedback>é gerado com o efeito de arrastar e soltar especificado.</xref:System.Windows.Forms.Control.GiveFeedback> Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects>enumeração.</xref:System.Windows.Forms.DragDropEffects>       As alterações na posição do cursor do mouse, o estado de teclado e o estado do botão do mouse são rastreadas.      -Se o usuário sai de uma janela, o <xref:System.Windows.Forms.Control.DragLeave>é gerado.</xref:System.Windows.Forms.Control.DragLeave>      -Se o mouse entra em outro controle, DragEnter para o controle é gerado.      -Se o mouse se move, mas permanece dentro do mesmo controle, o <xref:System.Windows.Forms.Control.DragOver>é gerado.</xref:System.Windows.Forms.Control.DragOver>       Se houver uma alteração no teclado ou mouse botão estado, o<xref:System.Windows.Forms.Control.QueryContinueDrag> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>propriedade de evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</xref:System.Windows.Forms.QueryContinueDragEventArgs> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.Control.QueryContinueDrag>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Continue`, o <xref:System.Windows.Forms.Control.DragOver>é gerado para continuar a operação e o <xref:System.Windows.Forms.Control.GiveFeedback>é gerado com o efeito de novo para comentários visuais apropriado podem ser definido.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver> </xref:System.Windows.Forms.DragAction> Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects>enumeração.</xref:System.Windows.Forms.DragDropEffects>          > [!NOTE] > O <xref:System.Windows.Forms.Control.DragOver>e <xref:System.Windows.Forms.Control.GiveFeedback>eventos são combinados para dar conforme o mouse se move entre o local de destino, o usuário os comentários mais atualizados sobre a posição do mouse.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem possa executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.</xref:System.Windows.Forms.DragAction>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Cancel`, o <xref:System.Windows.Forms.Control.DragLeave>é gerado.</xref:System.Windows.Forms.Control.DragLeave> </xref:System.Windows.Forms.DragAction>          > [!NOTE] > O <xref:System.Windows.Forms.DragEventArgs.X%2A>e <xref:System.Windows.Forms.DragEventArgs.Y%2A>Propriedades do <xref:System.Windows.Forms.DragEventArgs>estão em coordenadas da tela, não em coordenadas do cliente.</xref:System.Windows.Forms.DragEventArgs> </xref:System.Windows.Forms.DragEventArgs.Y%2A> </xref:System.Windows.Forms.DragEventArgs.X%2A> A seguinte linha de [!INCLUDE[csprcs](~/add/includes/csprcs-md.md)] código converte as propriedades para um cliente <xref:System.Drawing.Point>.</xref:System.Drawing.Point>          ```       Point clientPoint = targetControl.PointToClient(new Point(de.X, de.Y));       ```Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n This code excerpt demonstrates using the DragEnter event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#7](~/add/codesnippet/cpp/e-system.windows.forms.c_48_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#7](~/add/codesnippet/visualbasic/e-system.windows.forms.c_48_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#7](~/add/codesnippet/csharp/e-system.windows.forms.c_48_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DragEventHandler DragEnter;
    return:
      type: System.Windows.Forms.DragEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DragLeave
  id: DragLeave
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DragLeave
  nameWithType: Control.DragLeave
  fullName: System.Windows.Forms.Control.DragLeave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando um objeto é arrastado para fora dos limites do controle."
  remarks: "O evento DragLeave é gerado quando o usuário arrasta o cursor fora do controle ou o usuário cancela a operação de arrastar e soltar atual.       O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.       O <xref:System.Windows.Forms.Control.DoDragDrop%2A>método determina o controle no local atual do cursor.</xref:System.Windows.Forms.Control.DoDragDrop%2A> Em seguida, ele verifica para ver se o controle é um destino válido.       Se o controle é um destino válido, o <xref:System.Windows.Forms.Control.GiveFeedback>é gerado com o efeito de arrastar e soltar especificado.</xref:System.Windows.Forms.Control.GiveFeedback> Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects>enumeração.</xref:System.Windows.Forms.DragDropEffects>       As alterações na posição do cursor do mouse, o estado de teclado e o estado do botão do mouse são rastreadas.      -Se o usuário sai de uma janela, o evento DragLeave é gerado.      -Se o mouse entra em outro controle, o <xref:System.Windows.Forms.Control.DragEnter>para que o controle é gerado.</xref:System.Windows.Forms.Control.DragEnter>      -Se o mouse se move, mas permanece dentro do mesmo controle, o <xref:System.Windows.Forms.Control.DragOver>é gerado.</xref:System.Windows.Forms.Control.DragOver>       Se houver uma alteração no teclado ou mouse botão estado, o <xref:System.Windows.Forms.Control.QueryContinueDrag>evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>propriedade de evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</xref:System.Windows.Forms.QueryContinueDragEventArgs> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.Control.QueryContinueDrag>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Continue`, o <xref:System.Windows.Forms.Control.DragOver>é gerado para continuar a operação e o <xref:System.Windows.Forms.Control.GiveFeedback>é gerado com o efeito de novo para comentários visuais apropriado podem ser definido.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver> </xref:System.Windows.Forms.DragAction> Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects>enumeração.</xref:System.Windows.Forms.DragDropEffects>          > [!NOTE] > O <xref:System.Windows.Forms.Control.DragOver>e <xref:System.Windows.Forms.Control.GiveFeedback>eventos são combinados para dar conforme o mouse se move entre o local de destino, o usuário os comentários mais atualizados sobre a posição do mouse.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem possa executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.</xref:System.Windows.Forms.DragAction>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Cancel`, o evento DragLeave é gerado.</xref:System.Windows.Forms.DragAction>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n This code excerpt demonstrates using the DragLeave event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#8](~/add/codesnippet/cpp/e-system.windows.forms.c_10_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#8](~/add/codesnippet/visualbasic/e-system.windows.forms.c_10_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#8](~/add/codesnippet/csharp/e-system.windows.forms.c_10_1.cs)]"
  syntax:
    content: public event EventHandler DragLeave;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DragOver
  id: DragOver
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DragOver
  nameWithType: Control.DragOver
  fullName: System.Windows.Forms.Control.DragOver
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando um objeto é arrastado sobre os limites do controle."
  remarks: "O evento DragOver é gerado quando o cursor do mouse se move dentro dos limites do controle durante uma operação de arrastar e soltar.       O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.       O <xref:System.Windows.Forms.Control.DoDragDrop%2A>método determina o controle no local atual do cursor.</xref:System.Windows.Forms.Control.DoDragDrop%2A> Em seguida, ele verifica para ver se o controle é um destino válido.       Se o controle é um destino válido, o <xref:System.Windows.Forms.Control.GiveFeedback>é gerado com o efeito de arrastar e soltar especificado.</xref:System.Windows.Forms.Control.GiveFeedback> Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects>enumeração.</xref:System.Windows.Forms.DragDropEffects>       As alterações na posição do cursor do mouse, o estado de teclado e o estado do botão do mouse são rastreadas.      -Se o usuário sai de uma janela, o <xref:System.Windows.Forms.Control.DragLeave>é gerado.</xref:System.Windows.Forms.Control.DragLeave>      -Se o mouse entra em outro controle, o <xref:System.Windows.Forms.Control.DragEnter>para que o controle é gerado.</xref:System.Windows.Forms.Control.DragEnter>      -Se o mouse se move, mas permanece dentro do mesmo controle, o evento DragOver é gerado.       Se houver uma alteração no teclado ou mouse botão estado, o<xref:System.Windows.Forms.Control.QueryContinueDrag> evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>propriedade de evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</xref:System.Windows.Forms.QueryContinueDragEventArgs> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.Control.QueryContinueDrag>      -Se o valor de <xref:System.Windows.Forms.DragAction>valor é `Continue`, o evento DragOver é gerado para continuar a operação e o <xref:System.Windows.Forms.Control.GiveFeedback>é gerado com o efeito de novo para comentários visuais apropriado podem ser definido.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.DragAction> Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects>enumeração.</xref:System.Windows.Forms.DragDropEffects>          > [!NOTE] > O DragOver e <xref:System.Windows.Forms.Control.GiveFeedback>eventos são combinados para dar conforme o mouse se move entre o local de destino, o usuário os comentários mais atualizados sobre a posição do mouse.</xref:System.Windows.Forms.Control.GiveFeedback>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem possa executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.</xref:System.Windows.Forms.DragAction>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Cancel`, o <xref:System.Windows.Forms.Control.DragLeave>é gerado.</xref:System.Windows.Forms.Control.DragLeave> </xref:System.Windows.Forms.DragAction>          > [!NOTE] > O <xref:System.Windows.Forms.DragEventArgs.X%2A>e <xref:System.Windows.Forms.DragEventArgs.Y%2A>Propriedades do <xref:System.Windows.Forms.DragEventArgs>estão em coordenadas da tela, não em coordenadas do cliente.</xref:System.Windows.Forms.DragEventArgs> </xref:System.Windows.Forms.DragEventArgs.Y%2A> </xref:System.Windows.Forms.DragEventArgs.X%2A> A seguinte linha de C# código converte as propriedades para um cliente <xref:System.Drawing.Point>: >> ponto clientPoint = targetControl.PointToClient (novo ponto (de. X, de. Y));       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).</xref:System.Drawing.Point>"
  example:
  - "The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the DragOver event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n This code excerpt demonstrates using the DragOver event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#4](~/add/codesnippet/cpp/e-system.windows.forms.c_17_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#4](~/add/codesnippet/visualbasic/e-system.windows.forms.c_17_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#4](~/add/codesnippet/csharp/e-system.windows.forms.c_17_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.DragEventHandler DragOver;
    return:
      type: System.Windows.Forms.DragEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  id: DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: DrawToBitmap(Bitmap,Rectangle)
  nameWithType: Control.DrawToBitmap(Bitmap,Rectangle)
  fullName: System.Windows.Forms.Control.DrawToBitmap(Bitmap,Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Dá suporte à renderização para o bitmap especificado."
  remarks: "Não há suporte para o método DrawToBitmap para controles ActiveX. Você pode substituir o <xref:System.Windows.Forms.Control.OnPrint%2A>evento e fornecer lógica de impressão personalizada, se necessário.</xref:System.Windows.Forms.Control.OnPrint%2A>       O método DrawToBitmap tem as seguintes limitações: - um <xref:System.ArgumentException>pode ser gerado para bitmaps grandes.</xref:System.ArgumentException> O tamanho máximo permitido varia de acordo com a máquina.      -DrawToBitmap não oferece suporte a `Ink` controles para o sistema operacional Windows XP Tablet PC Edition 2005.      -DrawToBitmap não consome um filho <xref:System.Windows.Forms.TextBox>se o <xref:System.Windows.Forms.Control.Visible%2A>propriedade o <xref:System.Windows.Forms.TextBox>é definido como `false`.</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.Control.Visible%2A> </xref:System.Windows.Forms.TextBox>      -Controles dentro de contêineres são processados na ordem inversa.      -DrawToBitmap não é totalmente funcional para o <xref:System.Windows.Forms.RichTextBox>; somente a borda de um bitmap é desenhada.</xref:System.Windows.Forms.RichTextBox>"
  syntax:
    content: public void DrawToBitmap (System.Drawing.Bitmap bitmap, System.Drawing.Rectangle targetBounds);
    parameters:
    - id: bitmap
      type: System.Drawing.Bitmap
      description: "O bitmap a ser desenhada."
    - id: targetBounds
      type: System.Drawing.Rectangle
      description: "Os limites dentro do qual o controle é processado."
  overload: System.Windows.Forms.Control.DrawToBitmap*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Enabled
  id: Enabled
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Enabled
  nameWithType: Control.Enabled
  fullName: System.Windows.Forms.Control.Enabled
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se o controle pode responder à interação do usuário."
  remarks: "Com a propriedade habilitado, você pode habilitar ou desabilitar os controles em tempo de execução. Por exemplo, você pode desabilitar os controles que não se aplicam ao estado atual do aplicativo. Você também pode desabilitar o controle para impedir seu uso. Por exemplo, um botão pode ser desabilitado para impedir que o usuário clicando nele. Se um controle está desativado, não pode ser selecionado.      > [!IMPORTANT] > Definindo a propriedade Enabled `false` não desabilitar a caixa de controle do aplicativo ou impedir que a janela do aplicativo receber o foco.       Quando um controle de contêiner tem sua propriedade enabled definida como `false`, todos os seus controles contidos também são desabilitados. Por exemplo, se o usuário clica em qualquer um dos controles contidos em um desabilitado <xref:System.Windows.Forms.GroupBox>controle, nenhum evento é gerado.</xref:System.Windows.Forms.GroupBox>      > [!NOTE] > Quando um controle rolável estiver desabilitado, as barras de rolagem também são desabilitadas. Por exemplo, uma caixa de texto de várias linhas desabilitada é não é possível rolar para exibir todas as linhas de texto."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties. The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box. Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form. Lastly, it disables the group box by setting the Enabled property to `false`, which causes all controls contained within the group box to be disabled.  \n  \n [!code-cs[Windows.Forms.Control Properties#2](~/add/codesnippet/csharp/p-system.windows.forms.c_68_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#2](~/add/codesnippet/cpp/p-system.windows.forms.c_68_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_68_1.vb)]"
  syntax:
    content: public bool Enabled { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle pode responder à interação do usuário; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.Enabled*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.EnabledChanged
  id: EnabledChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: EnabledChanged
  nameWithType: Control.EnabledChanged
  fullName: System.Windows.Forms.Control.EnabledChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.Enabled*>o valor da propriedade foi alterada.</xref:System.Windows.Forms.Control.Enabled*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.Enabled%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.Enabled%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses two <xref:System.Windows.Forms.RadioButton> controls to demonstrate the EnabledChanged event. Clicking one button changes the value of the <xref:System.Windows.Forms.Control.Enabled%2A> property of the other button to `false` and displays a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-vb[System.Windows.Forms.Control.EnabledChanged#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_32_1.vb)]\n [!code-cs[System.Windows.Forms.Control.EnabledChanged#1](~/add/codesnippet/csharp/e-system.windows.forms.c_32_1.cs)]"
  syntax:
    content: public event EventHandler EnabledChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  id: EndInvoke(System.IAsyncResult)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: EndInvoke(IAsyncResult)
  nameWithType: Control.EndInvoke(IAsyncResult)
  fullName: System.Windows.Forms.Control.EndInvoke(IAsyncResult)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera o valor de retorno da operação assíncrona representado pelo <xref:System.IAsyncResult>passado.</xref:System.IAsyncResult>"
  remarks: "Se a operação assíncrona não tiver sido concluída, essa função será bloqueado até que o resultado estiver disponível.      > [!NOTE] > Além do <xref:System.Windows.Forms.Control.InvokeRequired%2A>propriedade, há quatro métodos em um controle que são thread-safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, EndInvoke, e <xref:System.Windows.Forms.Control.CreateGraphics%2A>se o identificador para o controle já foi criado.</xref:System.Windows.Forms.Control.CreateGraphics%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.InvokeRequired%2A> Chamar <xref:System.Windows.Forms.Control.CreateGraphics%2A>antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</xref:System.Windows.Forms.Control.CreateGraphics%2A> Para todas as outras chamadas de método, você deve usar um dos métodos invoke realizar marshaling da chamada para thread do controle."
  syntax:
    content: public object EndInvoke (IAsyncResult asyncResult);
    parameters:
    - id: asyncResult
      type: System.IAsyncResult
      description: "O <xref:System.IAsyncResult>que representa um determinado invocar uma operação assíncrona, retornada ao chamar <xref:System.Windows.Forms.Control.BeginInvoke*>.</xref:System.Windows.Forms.Control.BeginInvoke*> </xref:System.IAsyncResult>"
    return:
      type: System.Object
      description: "O <xref:System.Object>gerados pela operação assíncrona.</xref:System.Object>"
  overload: System.Windows.Forms.Control.EndInvoke*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>asyncResult</code> parameter value is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "O <code> asyncResult </code> objeto não foi criado por uma chamada anterior do <xref:System.Windows.Forms.Control.BeginInvoke*>método do mesmo controle.</xref:System.Windows.Forms.Control.BeginInvoke*>"
  platform:
  - net462
- uid: System.Windows.Forms.Control.Enter
  id: Enter
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Enter
  nameWithType: Control.Enter
  fullName: System.Windows.Forms.Control.Enter
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle é inserido."
  remarks: "When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  Enter  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  Enter  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n> [!NOTE]\n>  The Enter and <xref:System.Windows.Forms.Control.Leave> events are suppressed by the <xref:System.Windows.Forms.Form> class. The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. The Enter and <xref:System.Windows.Forms.Control.Leave> events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control. When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the <xref:System.Windows.Forms.Control.Leave> event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the Enter event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the Enter, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the `WM_KILLFOCUS` topic in the \"Keyboard Input Reference\" section and the \"Message Deadlocks\" section of the[About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx)topic.  \n  \n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the Enter event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.  \n  \n [!code-cs[Control.Enter#1](~/add/codesnippet/csharp/e-system.windows.forms.c_20_1.cs)]\n [!code-cpp[Control.Enter#1](~/add/codesnippet/cpp/e-system.windows.forms.c_20_1.cpp)]\n [!code-vb[Control.Enter#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_20_1.vb)]"
  syntax:
    content: public event EventHandler Enter;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.FindForm
  id: FindForm
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: FindForm()
  nameWithType: Control.FindForm()
  fullName: System.Windows.Forms.Control.FindForm()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera a forma que o controle está em."
  remarks: "O controle <xref:System.Windows.Forms.Control.Parent%2A>valor da propriedade não pode ser o mesmo que o <xref:System.Windows.Forms.Form>retornado pelo método FindForm.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.Parent%2A> Por exemplo, se um <xref:System.Windows.Forms.RadioButton>controle está dentro de um <xref:System.Windows.Forms.GroupBox>controle e o que <xref:System.Windows.Forms.GroupBox>está em um <xref:System.Windows.Forms.Form>o <xref:System.Windows.Forms.RadioButton> <xref:System.Windows.Forms.Control.Parent%2A>é o <xref:System.Windows.Forms.GroupBox>e o <xref:System.Windows.Forms.GroupBox> <xref:System.Windows.Forms.Control.Parent%2A>é <xref:System.Windows.Forms.Form>.</xref:System.Windows.Forms.Form> controle controle</xref:System.Windows.Forms.Control.Parent%2A> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.Control.Parent%2A> </xref:System.Windows.Forms.RadioButton> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.RadioButton>"
  example:
  - "The following code example finds the form that contains the specified button.  \n  \n [!code-cpp[Control.FindForm#1](~/add/codesnippet/cpp/m-system.windows.forms.c_24_1.cpp)]\n [!code-vb[Control.FindForm#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_24_1.vb)]\n [!code-cs[Control.FindForm#1](~/add/codesnippet/csharp/m-system.windows.forms.c_24_1.cs)]"
  syntax:
    content: public System.Windows.Forms.Form FindForm ();
    parameters: []
    return:
      type: System.Windows.Forms.Form
      description: "O <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> que o controle está em."
  overload: System.Windows.Forms.Control.FindForm*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Focus
  id: Focus
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Focus()
  nameWithType: Control.Focus()
  fullName: System.Windows.Forms.Control.Focus()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Define o foco para o controle de entrada."
  remarks: "O método de foco retorna `true` se o controle recebida com êxito o foco de entrada. O controle pode ter o foco de entrada ao não exibir qualquer indicações visuais de ter o foco. Esse comportamento é observado principalmente pelos controles nonselectable listados abaixo, ou todos os controles derivam-los.       Um controle pode ser selecionado e receber o foco de entrada se todos os itens a seguir forem verdadeiras: o `Selectable` valor <xref:System.Windows.Forms.ControlStyles>é definido como `true`, está contida em outro controle e todos os seus controles pai são visíveis e habilitados.</xref:System.Windows.Forms.ControlStyles>       Os controles de formulários do Windows na lista a seguir não são selecionáveis. Controles derivados desses controles também não são selecionáveis.      - <xref:System.Windows.Forms.Panel>- <xref:System.Windows.Forms.GroupBox>- <xref:System.Windows.Forms.PictureBox>- <xref:System.Windows.Forms.ProgressBar>- <xref:System.Windows.Forms.Splitter>- <xref:System.Windows.Forms.Label>- <xref:System.Windows.Forms.LinkLabel>(quando não houver nenhum presente no controle de link) > [!NOTE] > foco é um método de baixo nível destinado principalmente para autores de controle personalizado.</xref:System.Windows.Forms.LinkLabel> </xref:System.Windows.Forms.Label> </xref:System.Windows.Forms.Splitter> </xref:System.Windows.Forms.ProgressBar> </xref:System.Windows.Forms.PictureBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.Panel> Em vez disso, os programadores de aplicativos devem usar o <xref:System.Windows.Forms.Control.Select%2A>método ou o <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>propriedade para controles filho, ou o <xref:System.Windows.Forms.Form.Activate%2A>método para formulários.</xref:System.Windows.Forms.Form.Activate%2A> </xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> </xref:System.Windows.Forms.Control.Select%2A>"
  example:
  - "The following code example sets focus to the specified <xref:System.Windows.Forms.Control>, if it can receive focus.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#1](~/add/codesnippet/cpp/m-system.windows.forms.c_82_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#1](~/add/codesnippet/csharp/m-system.windows.forms.c_82_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_82_1.vb)]"
  syntax:
    content: public bool Focus ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a solicitação de foco de entrada foi bem-sucedida; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.Focus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Focused
  id: Focused
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Focused
  nameWithType: Control.Focused
  fullName: System.Windows.Forms.Control.Focused
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o controle tem foco de entrada."
  remarks: ''
  example:
  - "The following code example disables a <xref:System.Windows.Forms.MenuItem> if a <xref:System.Windows.Forms.TextBox> does not have focus. This example requires that you have a <xref:System.Windows.Forms.Form> with a <xref:System.Windows.Forms.TextBox> named `textBox1` and two <xref:System.Windows.Forms.MenuItem> objects named `menuItemEdit` and `menuItemEditInsertCustomerInfo`.  \n  \n [!code-cs[Windows.FOrms.Control Members2#4](~/add/codesnippet/csharp/p-system.windows.forms.c_105_1.cs)]\n [!code-cpp[Windows.FOrms.Control Members2#4](~/add/codesnippet/cpp/p-system.windows.forms.c_105_1.cpp)]\n [!code-vb[Windows.FOrms.Control Members2#4](~/add/codesnippet/visualbasic/p-system.windows.forms.c_105_1.vb)]"
  syntax:
    content: public virtual bool Focused { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle tem foco. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.Focused*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Font
  id: Font
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Font
  nameWithType: Control.Font
  fullName: System.Windows.Forms.Control.Font
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a fonte do texto exibido pelo controle."
  remarks: "A propriedade de fonte é uma propriedade de ambiente. Uma propriedade de ambiente é uma propriedade de controle que, se não for definido, será recuperado do controle pai. Por exemplo, um <xref:System.Windows.Forms.Button>terão o mesmo <xref:System.Windows.Forms.Control.BackColor%2A>como seu pai <xref:System.Windows.Forms.Form>por padrão.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Button> Para obter mais informações sobre propriedades de ambiente, consulte o <xref:System.Windows.Forms.AmbientProperties>classe ou o <xref:System.Windows.Forms.Control>Visão geral da classe.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.AmbientProperties>       Porque o <xref:System.Drawing.Font>é imutável (o que significa que você não pode ajustar qualquer uma de suas propriedades), você só pode atribuir a propriedade Font novo <xref:System.Drawing.Font>.</xref:System.Drawing.Font> </xref:System.Drawing.Font> No entanto, você pode basear a nova fonte da fonte existente.       [Visual Basic, c#]       Este é um exemplo de como ajustar a fonte existente para torná-lo em negrito:```c#   myControl.Font = new Font(myControl.Font,        myControl.Font.Style | FontStyle.Bold);   ```      ```vb#   MyControl.Font = New Font(MyControl.Font, _        MyControl.Font.Style Or FontStyle.Bold)   ```"
  example:
  - "The following code example displays a <xref:System.Windows.Forms.FontDialog> to the user and changes the <xref:System.Drawing.Font> of a <xref:System.Windows.Forms.DateTimePicker> control. This example requires that you have a <xref:System.Windows.Forms.Form> with <xref:System.Windows.Forms.Button> and a <xref:System.Windows.Forms.DateTimePicker> on it.  \n  \n [!code-cpp[Control_Font#1](~/add/codesnippet/cpp/p-system.windows.forms.c_116_1.cpp)]\n [!code-cs[Control_Font#1](~/add/codesnippet/csharp/p-system.windows.forms.c_116_1.cs)]\n [!code-vb[Control_Font#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_116_1.vb)]"
  syntax:
    content: public virtual System.Drawing.Font Font { get; set; }
    return:
      type: System.Drawing.Font
      description: "O <xref href=&quot;System.Drawing.Font&quot;> </xref> para aplicar o texto exibido pelo controle. O padrão é o valor de <xref:System.Windows.Forms.Control.DefaultFont*>propriedade.</xref:System.Windows.Forms.Control.DefaultFont*>"
  overload: System.Windows.Forms.Control.Font*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.FontChanged
  id: FontChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: FontChanged
  nameWithType: Control.FontChanged
  fullName: System.Windows.Forms.Control.FontChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.Font*>alterações de valor de propriedade.</xref:System.Windows.Forms.Control.Font*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.Font%2A>propriedade é alterada por uma modificação de programação ou por meio da interação.</xref:System.Windows.Forms.Control.Font%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the FontChanged event.  \n  \n [!code-cs[System.Windows.Forms.Control.FontChanged#1](~/add/codesnippet/csharp/e-system.windows.forms.c_35_1.cs)]\n [!code-vb[System.Windows.Forms.Control.FontChanged#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_35_1.vb)]"
  syntax:
    content: public event EventHandler FontChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.FontHeight
  id: FontHeight
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: FontHeight
  nameWithType: Control.FontHeight
  fullName: System.Windows.Forms.Control.FontHeight
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a altura da fonte do controle."
  remarks: >-
    > [!NOTE]

    >  The FontHeight property should not be set to any value other than the control's <xref:System.Drawing.Font.Height%2A?displayProperty=fullName> value, or -1. Setting FontHeight to -1 has the effect of clearing the cached height value, and the value is recalculated the next time the property is referenced.
  syntax:
    content: protected int FontHeight { get; set; }
    return:
      type: System.Int32
      description: "A altura do <xref href=&quot;System.Drawing.Font&quot;> </xref> do controle em pixels."
  overload: System.Windows.Forms.Control.FontHeight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ForeColor
  id: ForeColor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ForeColor
  nameWithType: Control.ForeColor
  fullName: System.Windows.Forms.Control.ForeColor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a cor de primeiro plano do controle."
  remarks: "A propriedade ForeColor é uma propriedade de ambiente. Uma propriedade de ambiente é uma propriedade de controle que, se não for definido, será recuperado do controle pai. Por exemplo, um <xref:System.Windows.Forms.Button>terão o mesmo <xref:System.Windows.Forms.Control.BackColor%2A>como seu pai <xref:System.Windows.Forms.Form>por padrão.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Button> Para obter mais informações sobre propriedades de ambiente, consulte o <xref:System.Windows.Forms.AmbientProperties>classe ou o <xref:System.Windows.Forms.Control>Visão geral da classe.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.AmbientProperties>"
  example:
  - "The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and ForeColor of the controls to the default system colors. The code recursively calls itself if the control has any child controls. This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.  \n  \n [!code-cs[Windows.Forms.Control Properties#1](~/add/codesnippet/csharp/p-system.windows.forms.c_23_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#1](~/add/codesnippet/cpp/p-system.windows.forms.c_23_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_23_1.vb)]"
  syntax:
    content: public virtual System.Drawing.Color ForeColor { get; set; }
    return:
      type: System.Drawing.Color
      description: "O primeiro plano <xref href=&quot;System.Drawing.Color&quot;> </xref> do controle. O padrão é o valor de <xref:System.Windows.Forms.Control.DefaultForeColor*>propriedade.</xref:System.Windows.Forms.Control.DefaultForeColor*>"
  overload: System.Windows.Forms.Control.ForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ForeColorChanged
  id: ForeColorChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ForeColorChanged
  nameWithType: Control.ForeColorChanged
  fullName: System.Windows.Forms.Control.ForeColorChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.ForeColor*>alterações de valor de propriedade.</xref:System.Windows.Forms.Control.ForeColor*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.ForeColor%2A>propriedade é alterada por uma modificação de programação ou por meio da interação.</xref:System.Windows.Forms.Control.ForeColor%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_43_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_43_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_43_1.cpp)]"
  syntax:
    content: public event EventHandler ForeColorChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  id: FromChildHandle(System.IntPtr)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: FromChildHandle(IntPtr)
  nameWithType: Control.FromChildHandle(IntPtr)
  fullName: System.Windows.Forms.Control.FromChildHandle(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera o controle que contém o identificador especificado."
  remarks: "Este método pesquisa a cadeia de pai do identificador de janela até encontrar um identificador que é associado um controle. Esse método é mais confiável do que o <xref:System.Windows.Forms.Control.FromHandle%2A>método, porque retorna corretamente os controles que possuem mais de um identificador.</xref:System.Windows.Forms.Control.FromHandle%2A>"
  syntax:
    content: public static System.Windows.Forms.Control FromChildHandle (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "O identificador de janela (<xref uid=&quot;langword_csharp_HWND&quot; name=&quot;HWND&quot; href=&quot;&quot;></xref>) para pesquisar."
    return:
      type: System.Windows.Forms.Control
      description: "O <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> que representa o controle associado com o identificador especificado; retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum controle com o identificador especificado for encontrado."
  overload: System.Windows.Forms.Control.FromChildHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.FromHandle(System.IntPtr)
  id: FromHandle(System.IntPtr)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: FromHandle(IntPtr)
  nameWithType: Control.FromHandle(IntPtr)
  fullName: System.Windows.Forms.Control.FromHandle(IntPtr)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retorna o controle que está associado com o identificador especificado."
  remarks: "Use o <xref:System.Windows.Forms.Control.FromChildHandle%2A>método se precisar retornar controles que possuem mais de um identificador.</xref:System.Windows.Forms.Control.FromChildHandle%2A>"
  syntax:
    content: public static System.Windows.Forms.Control FromHandle (IntPtr handle);
    parameters:
    - id: handle
      type: System.IntPtr
      description: "O identificador de janela (<xref uid=&quot;langword_csharp_HWND&quot; name=&quot;HWND&quot; href=&quot;&quot;></xref>) para pesquisar."
    return:
      type: System.Windows.Forms.Control
      description: "Um <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> que representa o controle associado com o identificador especificado; retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se nenhum controle com o identificador especificado for encontrado."
  overload: System.Windows.Forms.Control.FromHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  id: GetAccessibilityObjectById(System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetAccessibilityObjectById(Int32)
  nameWithType: Control.GetAccessibilityObjectById(Int32)
  fullName: System.Windows.Forms.Control.GetAccessibilityObjectById(Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera especificado <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>."
  syntax:
    content: protected virtual System.Windows.Forms.AccessibleObject GetAccessibilityObjectById (int objectId);
    parameters:
    - id: objectId
      type: System.Int32
      description: "Um <xref uid=&quot;langword_csharp_Int32&quot; name=&quot;Int32&quot; href=&quot;&quot;> </xref> que identifica o <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> para recuperar."
    return:
      type: System.Windows.Forms.AccessibleObject
      description: "Especificado <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref>."
  overload: System.Windows.Forms.Control.GetAccessibilityObjectById*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetAutoSizeMode
  id: GetAutoSizeMode
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetAutoSizeMode()
  nameWithType: Control.GetAutoSizeMode()
  fullName: System.Windows.Forms.Control.GetAutoSizeMode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera um valor que indica como um controle se comportará quando seu <xref:System.Windows.Forms.Control.AutoSize*>propriedade está habilitada.</xref:System.Windows.Forms.Control.AutoSize*>"
  syntax:
    content: protected System.Windows.Forms.AutoSizeMode GetAutoSizeMode ();
    parameters: []
    return:
      type: System.Windows.Forms.AutoSizeMode
      description: "Uma da <xref href=&quot;System.Windows.Forms.AutoSizeMode&quot;> </xref> valores."
  overload: System.Windows.Forms.Control.GetAutoSizeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  id: GetChildAtPoint(System.Drawing.Point)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetChildAtPoint(Point)
  nameWithType: Control.GetChildAtPoint(Point)
  fullName: System.Windows.Forms.Control.GetChildAtPoint(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera o controle filho que está localizado em coordenadas especificadas."
  remarks: "Se houver um controle filho não existe no ponto especificado, o método GetChildAtPoint retorna `null`."
  syntax:
    content: public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "Um <xref href=&quot;System.Drawing.Point&quot;> </xref> que contém as coordenadas em que você deseja pesquisar um controle. As coordenadas são expressas em relação ao canto superior esquerdo da área do cliente do controle."
    return:
      type: System.Windows.Forms.Control
      description: "Um <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> que representa o controle que está localizado no ponto especificado."
  overload: System.Windows.Forms.Control.GetChildAtPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  id: GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetChildAtPoint(Point,GetChildAtPointSkip)
  nameWithType: Control.GetChildAtPoint(Point,GetChildAtPointSkip)
  fullName: System.Windows.Forms.Control.GetChildAtPoint(Point,GetChildAtPointSkip)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera o controle filho que está localizado em coordenadas especificadas, especificar se deseja ignorar controles filho de um determinado tipo."
  syntax:
    content: public System.Windows.Forms.Control GetChildAtPoint (System.Drawing.Point pt, System.Windows.Forms.GetChildAtPointSkip skipValue);
    parameters:
    - id: pt
      type: System.Drawing.Point
      description: "Um <xref href=&quot;System.Drawing.Point&quot;> </xref> que contém as coordenadas em que você deseja pesquisar um controle. As coordenadas são expressas em relação ao canto superior esquerdo da área do cliente do controle."
    - id: skipValue
      type: System.Windows.Forms.GetChildAtPointSkip
      description: "Um dos valores de <xref href=&quot;System.Windows.Forms.GetChildAtPointSkip&quot;> </xref>, determinar se irá ignorar os controles filho de um determinado tipo."
    return:
      type: System.Windows.Forms.Control
      description: "O filho <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> em coordenadas especificadas."
  overload: System.Windows.Forms.Control.GetChildAtPoint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetContainerControl
  id: GetContainerControl
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetContainerControl()
  nameWithType: Control.GetContainerControl()
  fullName: System.Windows.Forms.Control.GetContainerControl()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retorna o próximo <xref href=&quot;System.Windows.Forms.ContainerControl&quot;> </xref> backup cadeia do controle de controles pai."
  syntax:
    content: public System.Windows.Forms.IContainerControl GetContainerControl ();
    parameters: []
    return:
      type: System.Windows.Forms.IContainerControl
      description: "Um <xref href=&quot;System.Windows.Forms.IContainerControl&quot;> </xref>, que representa o pai do <xref href=&quot;System.Windows.Forms.Control&quot;> </xref>."
  overload: System.Windows.Forms.Control.GetContainerControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  id: GetNextControl(System.Windows.Forms.Control,System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetNextControl(Control,Boolean)
  nameWithType: Control.GetNextControl(Control,Boolean)
  fullName: System.Windows.Forms.Control.GetNextControl(Control,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera o próximo controle para frente ou para trás na ordem de tabulação de controles filho."
  remarks: "O método GetNextControl é dependente de ordem de tabulação. Para iterar por todos os controles de um formulário, incluindo controles aninhados, use o <xref:System.Windows.Forms.Control.Controls%2A>propriedade.</xref:System.Windows.Forms.Control.Controls%2A> Para obter ou definir o controle ativo de um controle de contêiner, use o <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>propriedade.</xref:System.Windows.Forms.ContainerControl.ActiveControl%2A>"
  syntax:
    content: public System.Windows.Forms.Control GetNextControl (System.Windows.Forms.Control ctl, bool forward);
    parameters:
    - id: ctl
      type: System.Windows.Forms.Control
      description: "O <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> para iniciar a pesquisa."
    - id: forward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Pesquisar para frente na ordem de tabulação; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para pesquisar para trás."
    return:
      type: System.Windows.Forms.Control
      description: "O próximo <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> na ordem de tabulação."
  overload: System.Windows.Forms.Control.GetNextControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  id: GetPreferredSize(System.Drawing.Size)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetPreferredSize(Size)
  nameWithType: Control.GetPreferredSize(Size)
  fullName: System.Windows.Forms.Control.GetPreferredSize(Size)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera o tamanho de uma área retangular na qual um controle pode ser ajustado."
  remarks: "O comportamento de GetPreferredSize difere pelo controle. O <xref:System.Windows.Forms.Control.LayoutEngine%2A>pode ser não é possível atribuir o tamanho retornado para o controle.</xref:System.Windows.Forms.Control.LayoutEngine%2A> Você pode retornar um tamanho maior do que as restrições indicadas no `proposedSize` parâmetro, mas `proposedSize` diminua como diminui a restrição. Por exemplo, `GetPreferredSize(new Size(100, 0))` não deve ser maior do que `GetPreferredSize(new Size(200, 0))`. A exceção é um `proposedSize` 0 ou `Size.Empty`, que é definido como irrestrita."
  syntax:
    content: public virtual System.Drawing.Size GetPreferredSize (System.Drawing.Size proposedSize);
    parameters:
    - id: proposedSize
      type: System.Drawing.Size
      description: "A área tamanho personalizado para um controle."
    return:
      type: System.Drawing.Size
      description: "Um par ordenado de tipo <xref href=&quot;System.Drawing.Size&quot;> </xref> que representa a largura e altura de um retângulo."
  overload: System.Windows.Forms.Control.GetPreferredSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: Control.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Control.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera os limites dentro do qual o controle é dimensionado."
  remarks: "Este é um método auxiliar que é chamado por <xref:System.Windows.Forms.Control.ScaleControl%2A>para recuperar os limites dentro do qual o controle é dimensionado.</xref:System.Windows.Forms.Control.ScaleControl%2A> Você pode substituir este método para reutilizar o <xref:System.Windows.Forms.Control.ScaleControl%2A>dimensionamento lógica, mas você deve fornecer a seus próprios limites.</xref:System.Windows.Forms.Control.ScaleControl%2A> A implementação padrão retorna limites de escala que levam em conta a `specified` limites, se o controle é o nível superior, se o controle é fixo largura ou dimensionamento automático e qualquer ornamentos pode ter o controle."
  syntax:
    content: protected virtual System.Drawing.Rectangle GetScaledBounds (System.Drawing.Rectangle bounds, System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: bounds
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que especifica a área para o qual recuperar os limites de exibição."
    - id: factor
      type: System.Drawing.SizeF
      description: "A altura e a largura dos limites do controle."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "Um dos valores de <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> que especifica os limites do controle a ser usado ao definir seu tamanho e posição."
    return:
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa os limites dentro do qual o controle é dimensionado."
  overload: System.Windows.Forms.Control.GetScaledBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  id: GetStyle(System.Windows.Forms.ControlStyles)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetStyle(ControlStyles)
  nameWithType: Control.GetStyle(ControlStyles)
  fullName: System.Windows.Forms.Control.GetStyle(ControlStyles)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Recupera o valor de bit de estilo do controle especificado para o controle."
  remarks: "Sinalizadores de bit de estilo de controle são usados para categorizar comportamento com suporte. Um controle pode habilitar um estilo chamando o <xref:System.Windows.Forms.Control.SetStyle%2A>método e passando apropriada <xref:System.Windows.Forms.ControlStyles>bit e o valor booliano para definir o bit para.</xref:System.Windows.Forms.ControlStyles> </xref:System.Windows.Forms.Control.SetStyle%2A> Para determinar o valor atribuído a um especificado <xref:System.Windows.Forms.ControlStyles>bits, use o método GetStyle e passe o <xref:System.Windows.Forms.ControlStyles>membro para avaliar.</xref:System.Windows.Forms.ControlStyles> </xref:System.Windows.Forms.ControlStyles>"
  example:
  - "The following code example returns the value of the double-buffering related style bits for a <xref:System.Windows.Forms.Form>. This example returns `true` only if all the style bits are set to `true`.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#4](~/add/codesnippet/cpp/m-system.windows.forms.c_115_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#4](~/add/codesnippet/csharp/m-system.windows.forms.c_115_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#4](~/add/codesnippet/visualbasic/m-system.windows.forms.c_115_1.vb)]"
  syntax:
    content: protected bool GetStyle (System.Windows.Forms.ControlStyles flag);
    parameters:
    - id: flag
      type: System.Windows.Forms.ControlStyles
      description: "O <xref href=&quot;System.Windows.Forms.ControlStyles&quot;> </xref> bit para retornar o valor de."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o bit de estilo do controle especificado é definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.GetStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GetTopLevel
  id: GetTopLevel
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GetTopLevel()
  nameWithType: Control.GetTopLevel()
  fullName: System.Windows.Forms.Control.GetTopLevel()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina se o controle é um controle de nível superior."
  syntax:
    content: protected bool GetTopLevel ();
    parameters: []
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle for um controle de nível superior; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.GetTopLevel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GiveFeedback
  id: GiveFeedback
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GiveFeedback
  nameWithType: Control.GiveFeedback
  fullName: System.Windows.Forms.Control.GiveFeedback
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre durante uma operação de arrastar."
  remarks: "O evento GiveFeedback é gerado quando uma operação de arrastar e soltar é iniciada. Com o evento GiveFeedback, a origem de um evento arrastar pode modificar a aparência do ponteiro do mouse para fornecer os comentários visuais do usuário durante uma operação de arrastar e soltar.       O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.       O <xref:System.Windows.Forms.Control.DoDragDrop%2A>método determina o controle no local atual do cursor.</xref:System.Windows.Forms.Control.DoDragDrop%2A> Em seguida, ele verifica para ver se o controle é um destino válido.       Se o controle é um destino válido, o evento GiveFeedback é gerado com o efeito de arrastar e soltar especificado. Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects>enumeração.</xref:System.Windows.Forms.DragDropEffects>       As alterações na posição do cursor do mouse, o estado de teclado e o estado do botão do mouse são rastreadas.      -Se o usuário sai de uma janela, o <xref:System.Windows.Forms.Control.DragLeave>é gerado.</xref:System.Windows.Forms.Control.DragLeave>      -Se o mouse entra em outro controle, o <xref:System.Windows.Forms.Control.DragEnter>para que o controle é gerado.</xref:System.Windows.Forms.Control.DragEnter>      -Se o mouse se move, mas permanece dentro do mesmo controle, o <xref:System.Windows.Forms.Control.DragOver>é gerado.</xref:System.Windows.Forms.Control.DragOver>       Se houver uma alteração no teclado ou mouse botão estado, o <xref:System.Windows.Forms.Control.QueryContinueDrag>evento é gerado e determina se deseja continuar a operação de arrastar, para remover os dados, ou cancelar a operação com base no valor da <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>propriedade de evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</xref:System.Windows.Forms.QueryContinueDragEventArgs> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.Control.QueryContinueDrag>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Continue`, o <xref:System.Windows.Forms.Control.DragOver>é gerado para continuar a operação e o evento GiveFeedback é gerado com o efeito de novo para comentários visuais apropriado podem ser definido.</xref:System.Windows.Forms.Control.DragOver> </xref:System.Windows.Forms.DragAction> Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects>enumeração.</xref:System.Windows.Forms.DragDropEffects>          > [!NOTE] > O <xref:System.Windows.Forms.Control.DragOver>e GiveFeedback eventos são combinados para dar conforme o mouse se move entre o local de destino, o usuário os comentários mais atualizados sobre a posição do mouse.</xref:System.Windows.Forms.Control.DragOver>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem possa executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.</xref:System.Windows.Forms.DragAction>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Cancel`, o <xref:System.Windows.Forms.Control.DragLeave>é gerado.</xref:System.Windows.Forms.Control.DragLeave> </xref:System.Windows.Forms.DragAction>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files, `3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the GiveFeedback event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox`where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the <xref:System.Windows.Forms.Control.QueryContinueDrag> event handler.  \n  \n This code excerpt demonstrates using the GiveFeedback event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/cpp/e-system.windows.forms.c_55_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/visualbasic/e-system.windows.forms.c_55_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#3](~/add/codesnippet/csharp/e-system.windows.forms.c_55_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.GiveFeedbackEventHandler GiveFeedback;
    return:
      type: System.Windows.Forms.GiveFeedbackEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.GotFocus
  id: GotFocus
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: GotFocus
  nameWithType: Control.GotFocus
  fullName: System.Windows.Forms.Control.GotFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle recebe o foco."
  remarks: "When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  GotFocus  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  GotFocus  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n **Note** The GotFocus and <xref:System.Windows.Forms.Control.LostFocus> events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the GotFocus and <xref:System.Windows.Forms.Control.LostFocus> events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls. Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. For more information about the GotFocus and <xref:System.Windows.Forms.Control.LostFocus> events, see the [WM_SETFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646283\\(v=vs.85\\).aspx)and[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topics.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, GotFocus, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.  \n  \n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the GotFocus event. This report helps you to learn when the event occurs and can assist you in debugging.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the GotFocus event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#47](~/add/codesnippet/csharp/e-system.windows.forms.c_49_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#47](~/add/codesnippet/visualbasic/e-system.windows.forms.c_49_1.vb)]"
  syntax:
    content: public event EventHandler GotFocus;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Handle
  id: Handle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Handle
  nameWithType: Control.Handle
  fullName: System.Windows.Forms.Control.Handle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o identificador de janela que o controle está vinculado."
  remarks: "O valor da propriedade Handle é um Windows `HWND`. Se o identificador ainda não foram criado, fazendo referência a esta propriedade forçará o identificador a ser criado."
  example:
  - "The following code example demonstrates using the <xref:System.Windows.Forms.ControlPaint.DrawFocusRectangle%2A?displayProperty=fullName> and the Handle property. To run the example paste the following code in a form. Add two buttons named `Button1` and `Button2` to the form and ensure all events are connected to their event handlers.  \n  \n [!code-vb[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_25_1.vb)]\n [!code-cpp[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/cpp/p-system.windows.forms.c_25_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlPaint1#2](~/add/codesnippet/csharp/p-system.windows.forms.c_25_1.cs)]"
  syntax:
    content: public IntPtr Handle { get; }
    return:
      type: System.IntPtr
      description: "Um <xref:System.IntPtr>que contém o identificador de janela (<xref uid=&quot;langword_csharp_HWND&quot; name=&quot;HWND&quot; href=&quot;&quot;></xref>) do controle.</xref:System.IntPtr>"
  overload: System.Windows.Forms.Control.Handle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.HandleCreated
  id: HandleCreated
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: HandleCreated
  nameWithType: Control.HandleCreated
  fullName: System.Windows.Forms.Control.HandleCreated
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando um identificador é criado para o controle."
  remarks: "Um identificador é criado quando o <xref:System.Windows.Forms.Control>é exibida pela primeira vez.</xref:System.Windows.Forms.Control> Por exemplo, se um <xref:System.Windows.Forms.Control>é criado e tem <xref:System.Windows.Forms.Control.Visible%2A>definido como `false`, o evento HandleCreated não será gerado até <xref:System.Windows.Forms.Control.Visible%2A>é definido como `true`.</xref:System.Windows.Forms.Control.Visible%2A> </xref:System.Windows.Forms.Control.Visible%2A> </xref:System.Windows.Forms.Control>       Para obter mais informações sobre a manipulação de eventos, consulte[tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the HandleCreated event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button>or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the HandleCreated event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#37](~/add/codesnippet/csharp/e-system.windows.forms.c_70_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#37](~/add/codesnippet/visualbasic/e-system.windows.forms.c_70_1.vb)]"
  syntax:
    content: public event EventHandler HandleCreated;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.HandleDestroyed
  id: HandleDestroyed
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: HandleDestroyed
  nameWithType: Control.HandleDestroyed
  fullName: System.Windows.Forms.Control.HandleDestroyed
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o identificador do controle está sendo destruído."
  remarks: "Durante o evento HandleDestroyed, o controle ainda é um controle válido do Windows e o <xref:System.Windows.Forms.Control.Handle%2A>pode ser recriada chamando o <xref:System.Windows.Forms.Control.RecreateHandle%2A>método.</xref:System.Windows.Forms.Control.RecreateHandle%2A> </xref:System.Windows.Forms.Control.Handle%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the HandleDestroyed event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the HandleDestroyed event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#38](~/add/codesnippet/csharp/e-system.windows.forms.c_52_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#38](~/add/codesnippet/visualbasic/e-system.windows.forms.c_52_1.vb)]"
  syntax:
    content: public event EventHandler HandleDestroyed;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.HasChildren
  id: HasChildren
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: HasChildren
  nameWithType: Control.HasChildren
  fullName: System.Windows.Forms.Control.HasChildren
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o controle contém um ou mais controles filho."
  remarks: "Se o <xref:System.Windows.Forms.Control.Controls%2A>coleção tem um <xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A>maior que zero, o HasChildren propriedade retornará `true`.</xref:System.Windows.Forms.Layout.ArrangedElementCollection.Count%2A> </xref:System.Windows.Forms.Control.Controls%2A> Acessar a propriedade HasChildren não força a criação de um <xref:System.Windows.Forms.Control.ControlCollection>se o controle não tiver nenhum filho, referenciar então essa propriedade pode fornecer um benefício de desempenho ao percorrer uma árvore de controles.</xref:System.Windows.Forms.Control.ControlCollection>"
  example:
  - "The following code example sets the <xref:System.Windows.Forms.Control.BackColor%2A> and <xref:System.Windows.Forms.Control.ForeColor%2A> of the controls to the default system colors. The code recursively calls itself if the control has any child controls. This code example requires that you have a <xref:System.Windows.Forms.Form> with at least one child control; however, a child container control, like a <xref:System.Windows.Forms.Panel> or <xref:System.Windows.Forms.GroupBox>, with its own child control(s) would better demonstrate the recursion.  \n  \n [!code-cs[Windows.Forms.Control Properties#1](~/add/codesnippet/csharp/p-system.windows.forms.c_113_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#1](~/add/codesnippet/cpp/p-system.windows.forms.c_113_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_113_1.vb)]"
  syntax:
    content: public bool HasChildren { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle contém um ou mais controles filho. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.HasChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Height
  id: Height
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Height
  nameWithType: Control.Height
  fullName: System.Windows.Forms.Control.Height
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a altura do controle."
  remarks: "As alterações feitas à altura e <xref:System.Windows.Forms.Control.Top%2A>causa de valores de propriedade de <xref:System.Windows.Forms.Control.Bottom%2A>valor da propriedade do controle para alterar.</xref:System.Windows.Forms.Control.Bottom%2A> </xref:System.Windows.Forms.Control.Top%2A>      > [!NOTE] > A altura mínima para o controle derivada <xref:System.Windows.Forms.Splitter>é um pixel.</xref:System.Windows.Forms.Splitter> A altura padrão para o <xref:System.Windows.Forms.Splitter>controle é três pixels.</xref:System.Windows.Forms.Splitter> Definir a altura do <xref:System.Windows.Forms.Splitter>controlar como um valor menor que um redefinirá o valor da propriedade para a altura padrão.</xref:System.Windows.Forms.Splitter>"
  example:
  - "The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \n  \n [!code-cs[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/csharp/p-system.windows.forms.c_95_1.cs)]\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/cpp/p-system.windows.forms.c_95_1.cpp)]\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_95_1.vb)]"
  syntax:
    content: public int Height { get; set; }
    return:
      type: System.Int32
      description: "A altura do controle em pixels."
  overload: System.Windows.Forms.Control.Height*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.HelpRequested
  id: HelpRequested
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: HelpRequested
  nameWithType: Control.HelpRequested
  fullName: System.Windows.Forms.Control.HelpRequested
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o usuário solicita ajuda para um controle."
  remarks: "O HelpRequested evento normalmente é gerado quando o usuário pressiona a tecla F1 ou um botão de ajuda sensível ao contexto associado é clicado.       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates handling the HelpRequested event to display custom Help content on a form containing four address fields. The HelpRequested event is raised either by pressing the F1 key with the focus in an address field, or by the using the context-sensitive Help button and clicking the Help cursor on an address field. The <xref:System.Windows.Forms.HelpEventArgs.Handled%2A> property is set to true to indicate that the `HelpRequested` event is handled. The example also demonstrates storing the Help text in the <xref:System.Windows.Forms.Control.Tag%2A?displayProperty=fullName> property.  \n  \n [!code-cpp[System.Windows.Forms.HelpEventHandler#1](~/add/codesnippet/cpp/e-system.windows.forms.c_45_1.cpp)]\n [!code-vb[System.Windows.Forms.HelpEventHandler#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_45_1.vb)]\n [!code-cs[System.Windows.Forms.HelpEventHandler#1](~/add/codesnippet/csharp/e-system.windows.forms.c_45_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.HelpEventHandler HelpRequested;
    return:
      type: System.Windows.Forms.HelpEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Hide
  id: Hide
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Hide()
  nameWithType: Control.Hide()
  fullName: System.Windows.Forms.Control.Hide()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Oculta o controle do usuário."
  remarks: "Ocultar o controle é equivalente à configuração de <xref:System.Windows.Forms.Control.Visible%2A>propriedade `false`.</xref:System.Windows.Forms.Control.Visible%2A> Depois que o método ocultar é chamado, o <xref:System.Windows.Forms.Control.Visible%2A>propriedade retorna um valor de `false` até que o <xref:System.Windows.Forms.Control.Show%2A>método é chamado.</xref:System.Windows.Forms.Control.Show%2A> </xref:System.Windows.Forms.Control.Visible%2A>"
  example:
  - "The following code example hides a button if the CTRL key is pressed when the button is clicked. This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cs[Windows.Forms.Control Members4#2](~/add/codesnippet/csharp/m-system.windows.forms.c_42_1.cs)]\n [!code-vb[Windows.Forms.Control Members4#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_42_1.vb)]\n [!code-cpp[Windows.Forms.Control Members4#2](~/add/codesnippet/cpp/m-system.windows.forms.c_42_1.cpp)]"
  syntax:
    content: public void Hide ();
    parameters: []
  overload: System.Windows.Forms.Control.Hide*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ImeMode
  id: ImeMode
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ImeMode
  nameWithType: Control.ImeMode
  fullName: System.Windows.Forms.Control.ImeMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o modo do Editor de método de entrada (IME) do controle."
  remarks: "IME é um programa que permite que os usuários insiram caracteres complexos e símbolos, como caracteres de Kanji japonês, usando o teclado de padrão. A propriedade ImeMode normalmente é definida como <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>para um <xref:System.Windows.Forms.TextBox>controle destina-se inserir somente valores numéricos.</xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.ImeMode?displayProperty=fullName> O valor da propriedade ImeMode é definido como <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>para a <xref:System.Windows.Forms.Form>classe.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.ImeMode?displayProperty=fullName>       A maioria das classes que não diretamente suporte a editores de método de entrada ou permitir a entrada direta de IME, definirá o valor dessa propriedade como <xref:System.Windows.Forms.ImeMode>.</xref:System.Windows.Forms.ImeMode>      > [!IMPORTANT] > O usuário pode alterar interativamente o ImeMode, a menos que ele foi definido por meio de programação para <xref:System.Windows.Forms.ImeMode?displayProperty=fullName>.</xref:System.Windows.Forms.ImeMode?displayProperty=fullName> Nesse caso, o usuário não poderá usar o IME.   >> A propriedade ImeMode é ignorada no Windows 8 quando o modo de entrada global está em vigor. Para obter mais informações, consulte[texto entrada alterado de por Thread para cada usuário](http://go.microsoft.com/fwlink/?LinkID=256509)."
  syntax:
    content: public System.Windows.Forms.ImeMode ImeMode { get; set; }
    return:
      type: System.Windows.Forms.ImeMode
      description: "Uma da <xref href=&quot;System.Windows.Forms.ImeMode&quot;> </xref> valores. O padrão é <xref href=&quot;System.Windows.Forms.ImeMode&quot;> </xref>."
  overload: System.Windows.Forms.Control.ImeMode*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor atribuído não é um do <xref href=&quot;System.Windows.Forms.ImeMode&quot;> </xref> valores de enumeração."
  platform:
  - net462
- uid: System.Windows.Forms.Control.ImeModeBase
  id: ImeModeBase
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ImeModeBase
  nameWithType: Control.ImeModeBase
  fullName: System.Windows.Forms.Control.ImeModeBase
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o modo IME de um controle."
  syntax:
    content: protected virtual System.Windows.Forms.ImeMode ImeModeBase { get; set; }
    return:
      type: System.Windows.Forms.ImeMode
      description: "O modo IME do controle."
  overload: System.Windows.Forms.Control.ImeModeBase*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ImeModeChanged
  id: ImeModeChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ImeModeChanged
  nameWithType: Control.ImeModeChanged
  fullName: System.Windows.Forms.Control.ImeModeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.ImeMode*>propriedade foi alterada.</xref:System.Windows.Forms.Control.ImeMode*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.ImeMode%2A>propriedade é alterada por uma modificação de programação ou por meio da interação.</xref:System.Windows.Forms.Control.ImeMode%2A>       Controles que não oferecem suporte a gerenciadores de método de entrada nunca gera esse evento.       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_3_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_3_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_3_1.cpp)]"
  syntax:
    content: public event EventHandler ImeModeChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InitLayout
  id: InitLayout
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InitLayout()
  nameWithType: Control.InitLayout()
  fullName: System.Windows.Forms.Control.InitLayout()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Chamado depois que o controle foi adicionado para outro contêiner."
  remarks: "O método InitLayout é chamado imediatamente depois de adicionar um controle a um contêiner. O método InitLayout permite um controle inicializar o estado de layout com base em seu contêiner. Por exemplo, você normalmente aplicaria ancoragem e encaixe para o controle no método InitLayout."
  syntax:
    content: protected virtual void InitLayout ();
    parameters: []
  overload: System.Windows.Forms.Control.InitLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidate
  id: Invalidate
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidate()
  nameWithType: Control.Invalidate()
  fullName: System.Windows.Forms.Control.Invalidate()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Invalida a superfície inteira do controle e faz com que o controle seja redesenhado."
  remarks: "Chamar o <xref:System.Windows.Forms.Control.Invalidate%2A>método não força uma pintura síncrona; para forçar uma pintura síncrona, chame o <xref:System.Windows.Forms.Control.Update%2A>método depois de chamar o <xref:System.Windows.Forms.Control.Invalidate%2A>método.</xref:System.Windows.Forms.Control.Invalidate%2A> </xref:System.Windows.Forms.Control.Update%2A> </xref:System.Windows.Forms.Control.Invalidate%2A> Quando esse método é chamado sem parâmetros, toda a área cliente é adicionada à região de atualização."
  example:
  - "The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped. The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting. The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback. The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data. Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=fullName> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.  \n  \n [!code-cs[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/csharp/m-system.windows.forms.c_72_1.cs)]\n [!code-cpp[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/cpp/m-system.windows.forms.c_72_1.cpp)]\n [!code-vb[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_72_1.vb)]"
  syntax:
    content: public void Invalidate ();
    parameters: []
  overload: System.Windows.Forms.Control.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidate(System.Boolean)
  id: Invalidate(System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidate(Boolean)
  nameWithType: Control.Invalidate(Boolean)
  fullName: System.Windows.Forms.Control.Invalidate(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Invalida a uma região específica do controle e faz com que uma mensagem de pintura sejam enviados para o controle. Opcionalmente, invalida os controles filho atribuídos ao controle."
  remarks: "Chamar o <xref:System.Windows.Forms.Control.Invalidate%2A>método não força uma pintura síncrona; para forçar uma pintura síncrona, chame o <xref:System.Windows.Forms.Control.Update%2A>método depois de chamar o <xref:System.Windows.Forms.Control.Invalidate%2A>método.</xref:System.Windows.Forms.Control.Invalidate%2A> </xref:System.Windows.Forms.Control.Update%2A> </xref:System.Windows.Forms.Control.Invalidate%2A> Quando esse método é chamado sem parâmetros, toda a área cliente é adicionada à região de atualização."
  syntax:
    content: public void Invalidate (bool invalidateChildren);
    parameters:
    - id: invalidateChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para invalidar controles do filho do controle. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  id: Invalidate(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidate(Rectangle)
  nameWithType: Control.Invalidate(Rectangle)
  fullName: System.Windows.Forms.Control.Invalidate(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Invalida a região especificada do controle (adiciona à região de atualização do controle, que é a área será pintada novamente na próxima operação de pintura) e faz com que uma mensagem de pintura sejam enviados para o controle."
  remarks: "Chamar o <xref:System.Windows.Forms.Control.Invalidate%2A>método não força uma pintura síncrona; para forçar uma pintura síncrona, chame o <xref:System.Windows.Forms.Control.Update%2A>método depois de chamar o <xref:System.Windows.Forms.Control.Invalidate%2A>método.</xref:System.Windows.Forms.Control.Invalidate%2A> </xref:System.Windows.Forms.Control.Update%2A> </xref:System.Windows.Forms.Control.Invalidate%2A> Quando esse método é chamado sem parâmetros, toda a área cliente é adicionada à região de atualização."
  syntax:
    content: public void Invalidate (System.Drawing.Rectangle rc);
    parameters:
    - id: rc
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa a região para invalidar."
  overload: System.Windows.Forms.Control.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  id: Invalidate(System.Drawing.Region)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidate(Region)
  nameWithType: Control.Invalidate(Region)
  fullName: System.Windows.Forms.Control.Invalidate(Region)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Invalida a região especificada do controle (adiciona à região de atualização do controle, que é a área será pintada novamente na próxima operação de pintura) e faz com que uma mensagem de pintura sejam enviados para o controle."
  remarks: "Chamar o método Invalidate não força uma pintura síncrona; para forçar uma pintura síncrona, chame o <xref:System.Windows.Forms.Control.Update%2A>método depois de chamar o método Invalidate.</xref:System.Windows.Forms.Control.Update%2A> Quando esse método é chamado sem parâmetros, toda a área cliente é adicionada à região de atualização."
  syntax:
    content: public void Invalidate (System.Drawing.Region region);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "O <xref href=&quot;System.Drawing.Region&quot;> </xref> para invalidar."
  overload: System.Windows.Forms.Control.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  id: Invalidate(System.Drawing.Rectangle,System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidate(Rectangle,Boolean)
  nameWithType: Control.Invalidate(Rectangle,Boolean)
  fullName: System.Windows.Forms.Control.Invalidate(Rectangle,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Invalida a região especificada do controle (adiciona à região de atualização do controle, que é a área será pintada novamente na próxima operação de pintura) e faz com que uma mensagem de pintura sejam enviados para o controle. Opcionalmente, invalida os controles filho atribuídos ao controle."
  remarks: "Chamar o <xref:System.Windows.Forms.Control.Invalidate%2A>método não força uma pintura síncrona; para forçar uma pintura síncrona, chame o <xref:System.Windows.Forms.Control.Update%2A>método depois de chamar o <xref:System.Windows.Forms.Control.Invalidate%2A>método.</xref:System.Windows.Forms.Control.Invalidate%2A> </xref:System.Windows.Forms.Control.Update%2A> </xref:System.Windows.Forms.Control.Invalidate%2A> Quando esse método é chamado sem parâmetros, toda a área cliente é adicionada à região de atualização."
  syntax:
    content: public void Invalidate (System.Drawing.Rectangle rc, bool invalidateChildren);
    parameters:
    - id: rc
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa a região para invalidar."
    - id: invalidateChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para invalidar controles do filho do controle. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  id: Invalidate(System.Drawing.Region,System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidate(Region,Boolean)
  nameWithType: Control.Invalidate(Region,Boolean)
  fullName: System.Windows.Forms.Control.Invalidate(Region,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Invalida a região especificada do controle (adiciona à região de atualização do controle, que é a área será pintada novamente na próxima operação de pintura) e faz com que uma mensagem de pintura sejam enviados para o controle. Opcionalmente, invalida os controles filho atribuídos ao controle."
  remarks: "Chamar o <xref:System.Windows.Forms.Control.Invalidate%2A>método não força uma pintura síncrona; para forçar uma pintura síncrona, chame o <xref:System.Windows.Forms.Control.Update%2A>método depois de chamar o <xref:System.Windows.Forms.Control.Invalidate%2A>método.</xref:System.Windows.Forms.Control.Invalidate%2A> </xref:System.Windows.Forms.Control.Update%2A> </xref:System.Windows.Forms.Control.Invalidate%2A> Quando esse método é chamado sem parâmetros, toda a área cliente é adicionada à região de atualização."
  syntax:
    content: public void Invalidate (System.Drawing.Region region, bool invalidateChildren);
    parameters:
    - id: region
      type: System.Drawing.Region
      description: "O <xref href=&quot;System.Drawing.Region&quot;> </xref> para invalidar."
    - id: invalidateChildren
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para invalidar controles do filho do controle. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.Invalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invalidated
  id: Invalidated
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invalidated
  nameWithType: Control.Invalidated
  fullName: System.Windows.Forms.Control.Invalidated
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando a exibição de um controle precisa ser redesenhada."
  remarks: "Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the Invalidated event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the Invalidated event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#40](~/add/codesnippet/csharp/e-system.windows.forms.c_31_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#40](~/add/codesnippet/visualbasic/e-system.windows.forms.c_31_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.InvalidateEventHandler Invalidated;
    return:
      type: System.Windows.Forms.InvalidateEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invoke(System.Delegate)
  id: Invoke(System.Delegate)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invoke(Delegate)
  nameWithType: Control.Invoke(Delegate)
  fullName: System.Windows.Forms.Control.Invoke(Delegate)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Executa o delegado especificado no thread que possui o identificador de janela subjacente do controle."
  remarks: "Delegados são semelhantes a ponteiros de função em linguagens C ou C++. Delegados encapsulam uma referência a um método dentro de um objeto de representante. O objeto do representante pode ser passado para o código que chama o método referenciado e o método a ser invocado pode ser desconhecido no momento da compilação. Ao contrário de ponteiros de função em C ou C++, delegados são orientada a objeto, tipo seguro e mais seguro.       As pesquisas de método Invoke cadeia do pai do controle para cima até encontrar um controle ou formulário que tem um identificador de janela se o identificador de janela subjacente do controle atual ainda não existir. Se nenhum identificador apropriado pode ser encontrado, o método Invoke lançará uma exceção. Exceções geradas durante a chamada serão propagadas de volta para o chamador.      > [!NOTE] > Além do <xref:System.Windows.Forms.Control.InvokeRequired%2A>propriedade, há quatro métodos em um controle que são thread-safe: invocar, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, e <xref:System.Windows.Forms.Control.CreateGraphics%2A>se o identificador para o controle já foi criado.</xref:System.Windows.Forms.Control.CreateGraphics%2A> </xref:System.Windows.Forms.Control.EndInvoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.InvokeRequired%2A> Chamar <xref:System.Windows.Forms.Control.CreateGraphics%2A>antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</xref:System.Windows.Forms.Control.CreateGraphics%2A> Para todas as outras chamadas de método, você deve usar um dos métodos invoke realizar marshaling da chamada para thread do controle.       O representante pode ser uma instância do <xref:System.EventHandler>, caso em que o parâmetro do remetente conterá este controle, e o parâmetro de evento conterá <xref:System.EventArgs.Empty?displayProperty=fullName>.</xref:System.EventArgs.Empty?displayProperty=fullName> </xref:System.EventHandler> O representante também pode ser uma instância de <xref:System.Windows.Forms.MethodInvoker>, ou qualquer outro representante que usa uma lista de parâmetros void.</xref:System.Windows.Forms.MethodInvoker> Uma chamada para um <xref:System.EventHandler>ou <xref:System.Windows.Forms.MethodInvoker>representante será mais rápido do que uma chamada para outro tipo de delegado.</xref:System.Windows.Forms.MethodInvoker> </xref:System.EventHandler>      > [!NOTE] > Uma exceção pode ser gerada se o thread que deve processar a mensagem não está mais ativo."
  example:
  - "The following code example shows controls that contain a delegate. The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form. When the user clicks on the button, `Invoke` runs the delegate.  \n  \n [!code-cpp[Control_Invoke2#1](~/add/codesnippet/cpp/m-system.windows.forms.c_18_1.cpp)]\n [!code-cs[Control_Invoke2#1](~/add/codesnippet/csharp/m-system.windows.forms.c_18_1.cs)]\n [!code-vb[Control_Invoke2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_18_1.vb)]"
  syntax:
    content: public object Invoke (Delegate method);
    parameters:
    - id: method
      type: System.Delegate
      description: "Um delegado que contém um método a ser chamado no contexto do thread do controle."
    return:
      type: System.Object
      description: "O valor de retorno de representante que está sendo invocado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o representante não tem nenhum valor de retorno."
  overload: System.Windows.Forms.Control.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  id: Invoke(System.Delegate,System.Object[])
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Invoke(Delegate,Object[])
  nameWithType: Control.Invoke(Delegate,Object[])
  fullName: System.Windows.Forms.Control.Invoke(Delegate,Object[])
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Executa o delegado especificado no thread que possui o identificador de janela subjacente do controle, com a lista de argumentos especificada."
  remarks: "Delegados são semelhantes a ponteiros de função em linguagens C ou C++. Delegados encapsulam uma referência a um método dentro de um objeto de representante. O objeto do representante pode ser passado para o código que chama o método referenciado e o método a ser invocado pode ser desconhecido no momento da compilação. Ao contrário de ponteiros de função em C ou C++, delegados são orientada a objeto, tipo seguro e mais seguro.       Se o identificador do controle ainda não existir, este método pesquisa cadeia do pai do controle até encontrar um controle ou formulário que tem um identificador de janela. Se nenhum identificador apropriado pode ser encontrado, este método lança uma exceção. Exceções geradas durante a chamada serão propagadas de volta para o chamador.      > [!NOTE] > Além do <xref:System.Windows.Forms.Control.InvokeRequired%2A>propriedade, há quatro métodos em um controle que são thread-safe: <xref:System.Windows.Forms.Control.Invoke%2A>, <xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>, e <xref:System.Windows.Forms.Control.CreateGraphics%2A>se o identificador para o controle já foi criado.</xref:System.Windows.Forms.Control.CreateGraphics%2A> </xref:System.Windows.Forms.Control.EndInvoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> </xref:System.Windows.Forms.Control.InvokeRequired%2A> Chamar <xref:System.Windows.Forms.Control.CreateGraphics%2A>antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</xref:System.Windows.Forms.Control.CreateGraphics%2A> Para todas as outras chamadas de método, você deve usar um dos métodos invoke realizar marshaling da chamada para thread do controle.       O representante pode ser uma instância do <xref:System.EventHandler>, caso em que o parâmetro do remetente conterá este controle, e o parâmetro de evento conterá <xref:System.EventArgs.Empty?displayProperty=fullName>.</xref:System.EventArgs.Empty?displayProperty=fullName> </xref:System.EventHandler> O representante também pode ser uma instância de <xref:System.Windows.Forms.MethodInvoker>, ou qualquer outro representante que usa uma lista de parâmetros void.</xref:System.Windows.Forms.MethodInvoker> Uma chamada para um <xref:System.EventHandler>ou <xref:System.Windows.Forms.MethodInvoker>representante será mais rápido do que uma chamada para outro tipo de delegado.</xref:System.Windows.Forms.MethodInvoker> </xref:System.EventHandler>      > [!NOTE] > Uma exceção pode ser gerada se o thread que deve processar a mensagem não está mais ativo."
  example:
  - "The following code example shows controls that contain a delegate. The delegate encapsulates a method that adds items to the list box, and this method is executed on the thread that owns the underlying handle of the form, using the specified arguments. When the user clicks on the button, `Invoke` runs the delegate.  \n  \n [!code-cs[Control_Invoke1#1](~/add/codesnippet/csharp/m-system.windows.forms.c_114_1.cs)]\n [!code-vb[Control_Invoke1#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_114_1.vb)]\n [!code-cpp[Control_Invoke1#1](~/add/codesnippet/cpp/m-system.windows.forms.c_114_1.cpp)]"
  syntax:
    content: public object Invoke (Delegate method, object[] args);
    parameters:
    - id: method
      type: System.Delegate
      description: "Um delegado para um método que usa parâmetros do número e do tipo que estão contidas no mesmo o `args` parâmetro."
    - id: args
      type: System.Object[]
      description: "Uma matriz de objetos a serem passados como argumentos para o método especificado. Esse parâmetro pode ser <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o método não usa nenhum argumento."
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém o valor de retorno de representante que está sendo invocado, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o representante não tem nenhum valor de retorno.</xref:System.Object>"
  overload: System.Windows.Forms.Control.Invoke*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  id: InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InvokeGotFocus(Control,EventArgs)
  nameWithType: Control.InvokeGotFocus(Control,EventArgs)
  fullName: System.Windows.Forms.Control.InvokeGotFocus(Control,EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.GotFocus&quot;> </xref> eventos para o controle especificado."
  syntax:
    content: protected void InvokeGotFocus (System.Windows.Forms.Control toInvoke, EventArgs e);
    parameters:
    - id: toInvoke
      type: System.Windows.Forms.Control
      description: "O <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> para atribuir o evento."
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.InvokeGotFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  id: InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InvokeLostFocus(Control,EventArgs)
  nameWithType: Control.InvokeLostFocus(Control,EventArgs)
  fullName: System.Windows.Forms.Control.InvokeLostFocus(Control,EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.LostFocus&quot;> </xref> eventos para o controle especificado."
  syntax:
    content: protected void InvokeLostFocus (System.Windows.Forms.Control toInvoke, EventArgs e);
    parameters:
    - id: toInvoke
      type: System.Windows.Forms.Control
      description: "O <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> para atribuir o evento."
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.InvokeLostFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  id: InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InvokeOnClick(Control,EventArgs)
  nameWithType: Control.InvokeOnClick(Control,EventArgs)
  fullName: System.Windows.Forms.Control.InvokeOnClick(Control,EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Click&quot;> </xref> eventos para o controle especificado."
  syntax:
    content: protected void InvokeOnClick (System.Windows.Forms.Control toInvoke, EventArgs e);
    parameters:
    - id: toInvoke
      type: System.Windows.Forms.Control
      description: "O <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> para atribuir o <xref href=&quot;System.Windows.Forms.Control.Click&quot;> </xref> evento."
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.InvokeOnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  id: InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InvokePaint(Control,PaintEventArgs)
  nameWithType: Control.InvokePaint(Control,PaintEventArgs)
  fullName: System.Windows.Forms.Control.InvokePaint(Control,PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Paint&quot;> </xref> eventos para o controle especificado."
  syntax:
    content: protected void InvokePaint (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: c
      type: System.Windows.Forms.Control
      description: "O <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> para atribuir o <xref href=&quot;System.Windows.Forms.Control.Paint&quot;> </xref> evento."
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.InvokePaint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  id: InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InvokePaintBackground(Control,PaintEventArgs)
  nameWithType: Control.InvokePaintBackground(Control,PaintEventArgs)
  fullName: System.Windows.Forms.Control.InvokePaintBackground(Control,PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref uid=&quot;langword_csharp_PaintBackground&quot; name=&quot;PaintBackground&quot; href=&quot;&quot;> </xref> eventos para o controle especificado."
  syntax:
    content: protected void InvokePaintBackground (System.Windows.Forms.Control c, System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: c
      type: System.Windows.Forms.Control
      description: "O <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> para atribuir o <xref href=&quot;System.Windows.Forms.Control.Paint&quot;> </xref> evento."
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.InvokePaintBackground*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.InvokeRequired
  id: InvokeRequired
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: InvokeRequired
  nameWithType: Control.InvokeRequired
  fullName: System.Windows.Forms.Control.InvokeRequired
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o chamador deve chamar um método invoke ao fazer chamadas de método para o controle porque o chamador está em um thread diferente no controle foi criado."
  remarks: "Controles de formulários do Windows são associados a um segmento específico e não são thread-safe. Portanto, se você estiver chamando o método de um controle de um thread diferente, você deve usar um do controle chama os métodos para realizar marshaling da chamada para o thread adequado. Essa propriedade pode ser usada para determinar se você deve chamar um método invoke, que pode ser útil se você não souber qual thread possui um controle.      > [!NOTE] > Além da propriedade InvokeRequired, há quatro métodos em um controle que são thread-safe chamar: <xref:System.Windows.Forms.Control.Invoke%2A>,<xref:System.Windows.Forms.Control.BeginInvoke%2A>, <xref:System.Windows.Forms.Control.EndInvoke%2A>e <xref:System.Windows.Forms.Control.CreateGraphics%2A>se o identificador para o controle já foi criado.</xref:System.Windows.Forms.Control.CreateGraphics%2A> </xref:System.Windows.Forms.Control.EndInvoke%2A> </xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> Chamar <xref:System.Windows.Forms.Control.CreateGraphics%2A>antes que o identificador do controle foi criado em um thread em segundo plano pode causar ilegal entre chamadas de thread.</xref:System.Windows.Forms.Control.CreateGraphics%2A> Para todas as outras chamadas de método, você deve usar uma destas opções invocar métodos ao chamar a partir de um thread diferente.       Se o identificador do controle ainda não existir, pesquisa InvokeRequired cadeia do pai do controle até encontrar um controle ou formulário que tem um identificador de janela. Se nenhum identificador apropriado pode ser encontrado, o método InvokeRequired retorna `false`.       Isso significa que retornam InvokeRequiredcan `false` se <xref:System.Windows.Forms.Control.Invoke%2A>não é necessária (a chamada ocorre no mesmo thread), ou se o controle foi criado em um thread diferente, mas o identificador do controle ainda não foi criado.</xref:System.Windows.Forms.Control.Invoke%2A>       No caso em que o identificador do controle ainda não foi criado, você não deve simplesmente chamar propriedades, métodos ou eventos no controle. Isso pode causar o identificador do controle a ser criado no thread em segundo plano, isolando o controle em um segmento sem uma bomba de mensagem e fazer com que o aplicativo instável.       Você pode se proteger contra neste caso também, verificando o valor de <xref:System.Windows.Forms.Control.IsHandleCreated%2A>quando InvokeRequired retorna `false` em um thread em segundo plano.</xref:System.Windows.Forms.Control.IsHandleCreated%2A> Se o identificador de controle ainda não foi criado, você deve esperar até que ele foi criado antes de chamar <xref:System.Windows.Forms.Control.Invoke%2A>ou <xref:System.Windows.Forms.Control.BeginInvoke%2A>.</xref:System.Windows.Forms.Control.BeginInvoke%2A> </xref:System.Windows.Forms.Control.Invoke%2A> Normalmente, isso ocorre somente se um thread em segundo plano é criado no construtor do formulário principal para o aplicativo (como em `Application.Run(new MainForm())`, antes do formulário ter sido exibido ou `Application.Run` foi chamado.       É uma solução aguardar até que o identificador do formulário foi criado antes de iniciar o thread em segundo plano. O forçar a criação do identificador chamando o <xref:System.Windows.Forms.Control.Handle%2A>propriedade ou esperar até que o <xref:System.Windows.Forms.Form.Load>evento para iniciar o processo em segundo plano.</xref:System.Windows.Forms.Form.Load> </xref:System.Windows.Forms.Control.Handle%2A>       Uma solução ainda melhor é usar o `SynchronizationContext` retornado por <xref:System.Threading.SynchronizationContext>em vez de um controle de marshaling entre threads.</xref:System.Threading.SynchronizationContext>      > [!NOTE] > Uma exceção pode ser gerada se o thread que deve processar a mensagem não está mais ativo.       Para obter mais informações sobre os controles de Windows Forms com multithread, consulte [como: usar um Thread de segundo plano para procurar arquivos](~/add/includes/ajax-current-ext-md.md) e [como: fazer chamadas Thread-Safe para controles dos Windows Forms](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public bool InvokeRequired { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle <xref:System.Windows.Forms.Control.Handle*>foi criado em um thread diferente de thread de chamada (indicando que você deve fazer chamadas para o controle por meio de um método invoke); caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Forms.Control.Handle*>"
  overload: System.Windows.Forms.Control.InvokeRequired*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsAccessible
  id: IsAccessible
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsAccessible
  nameWithType: Control.IsAccessible
  fullName: System.Windows.Forms.Control.IsAccessible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se o controle está visível para aplicativos de acessibilidade."
  syntax:
    content: public bool IsAccessible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle está visível para aplicativos de acessibilidade. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.IsAccessible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsDisposed
  id: IsDisposed
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsDisposed
  nameWithType: Control.IsDisposed
  fullName: System.Windows.Forms.Control.IsDisposed
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o controle foi descartado."
  remarks: "Quando essa propriedade retornará `true`, o controle é descartado e não pode mais ser referenciado como um controle do Windows válido. Mesmo que a instância de um controle é descartada, ainda é mantida na memória até que ele seja removido da memória por meio de coleta de lixo. Quando um controle é descartado, não é possível chamar o <xref:System.Windows.Forms.Control.RecreateHandle%2A>método.</xref:System.Windows.Forms.Control.RecreateHandle%2A>"
  syntax:
    content: public bool IsDisposed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle foi descartado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.IsDisposed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsHandleCreated
  id: IsHandleCreated
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsHandleCreated
  nameWithType: Control.IsHandleCreated
  fullName: System.Windows.Forms.Control.IsHandleCreated
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o controle tem um identificador associado a ele."
  remarks: "Use a propriedade IsHandleCreated para determinar se <xref:System.Windows.Forms.Control.CreateHandle%2A>foi chamado.</xref:System.Windows.Forms.Control.CreateHandle%2A>"
  syntax:
    content: public bool IsHandleCreated { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se tiver sido atribuído um identificador para o controle. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.IsHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsInputChar(System.Char)
  id: IsInputChar(System.Char)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsInputChar(Char)
  nameWithType: Control.IsInputChar(Char)
  fullName: System.Windows.Forms.Control.IsInputChar(Char)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina se um caractere é um caractere de entrada que reconhece o controle."
  remarks: "Chame o método IsInputChar para determinar se o caractere especificado com o `charCode` parâmetro é um caractere de entrada que deseja que o controle. Este método é chamado durante o pré-processamento de mensagem de janela para determinar se o caractere de entrada especificado deve ser pré-processados ou enviado diretamente para o controle. Se retornar IsInputChar `true`, o caractere especificado é enviado diretamente para o controle. Se retornar IsInputChar `false`, o caractere especificado é pré-processados e só é enviado para o controle se ele não é consumido pela fase de pré-processamento. O pré-processamento de um caractere inclui verificar se o caractere é um mnemônico de outro controle."
  syntax:
    content: protected virtual bool IsInputChar (char charCode);
    parameters:
    - id: charCode
      type: System.Char
      description: "O caractere a ser testado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o caractere deve ser enviado diretamente para o controle e não pré-processados; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.IsInputChar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)
  id: IsInputKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsInputKey(Keys)
  nameWithType: Control.IsInputKey(Keys)
  fullName: System.Windows.Forms.Control.IsInputKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina se a chave especificada é uma chave de entrada regular ou uma chave especial que requer pré-processamento."
  remarks: "Chame o método IsInputKey para determinar se a chave especificada o `keyData` parâmetro é uma chave de entrada que deseja que o controle. Este método é chamado durante o pré-processamento de mensagem de janela para determinar se a chave de entrada especificada deve ser pré-processados ou enviada diretamente para o controle. Se retornar IsInputKey `true`, a chave especificada é enviada diretamente para o controle. Se retornar IsInputKey `false`, a chave especificada é pré-processados e só é enviada para o controle se ele não é consumido pela fase de pré-processamento. As chaves que são pré-processados incluem guia, RETURN, ESC e as teclas de seta para cima e seta para a direita, seta para a esquerda e seta para baixo."
  example:
  - "The following code example shows you how to override the IsInputKey method for a <xref:System.Windows.Forms.TextBox> control. In this example, the `TabTextBox` class handles the TAB key. When the `TabTextBox` has the focus and the user presses the TAB key four spaces are added at the text insertion point, replacing any selected text. By default, the <xref:System.Windows.Forms.TextBox> control handles the TAB key by moving the input focus to the next control. In this case, the keypress never reaches the <xref:System.Windows.Forms.Control.OnKeyDown%2A> method override. To prevent this default behavior, the IsInputKey method override returns `true` when the user presses the TAB key. For all other keypresses, the IsInputKey method override returns the result of calling the base-class version of the method.  \n  \n [!code-vb[System.Windows.Forms.Control.IsInputKey#0](~/add/codesnippet/visualbasic/m-system.windows.forms.c_106_1.vb)]\n [!code-cs[System.Windows.Forms.Control.IsInputKey#0](~/add/codesnippet/csharp/m-system.windows.forms.c_106_1.cs)]"
  syntax:
    content: protected virtual bool IsInputKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "Uma da <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> valores."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a chave especificada é uma chave de entrada normal; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.IsInputKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  id: IsKeyLocked(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsKeyLocked(Keys)
  nameWithType: Control.IsKeyLocked(Keys)
  fullName: System.Windows.Forms.Control.IsKeyLocked(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina se a tecla CAPS LOCK, NUM LOCK ou SCROLL LOCK está em vigor."
  remarks: "Use a propriedade IsKeyLocked para determinar se as chaves CAPS LOCK, NUM LOCK ou SCROLL LOCK, se individualmente ou em combinação."
  example:
  - "The following code example displays a message box indicating whether the specified key (the Caps Lock key in this case) is in effect.  \n  \n [!code-vb[ControlIsKeyLocked#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_2_1.vb)]\n [!code-cpp[ControlIsKeyLocked#1](~/add/codesnippet/cpp/m-system.windows.forms.c_2_1.cpp)]\n [!code-cs[ControlIsKeyLocked#1](~/add/codesnippet/csharp/m-system.windows.forms.c_2_1.cs)]"
  syntax:
    content: public static bool IsKeyLocked (System.Windows.Forms.Keys keyVal);
    parameters:
    - id: keyVal
      type: System.Windows.Forms.Keys
      description: "O membro CAPS LOCK, NUM LOCK ou SCROLL LOCK do <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> enumeração."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a chave especificada ou as chaves estão em vigor; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.IsKeyLocked*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "O <code> keyVal </code> parâmetro refere-se a uma chave que não seja a tecla CAPS LOCK, NUM LOCK ou SCROLL LOCK."
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsMirrored
  id: IsMirrored
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsMirrored
  nameWithType: Control.IsMirrored
  fullName: System.Windows.Forms.Control.IsMirrored
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o controle está espelhado."
  remarks: 'Um controle espelhado exibe o layout e o texto da direita para esquerda. Para obter mais informações, consulte [como: criar formulários do Windows espelhado e controles](http://msdn.microsoft.com/en-us/7c5c4ecc-9bfb-4508-8383-753e306719b1).'
  syntax:
    content: public bool IsMirrored { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle está espelhado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.IsMirrored*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  id: IsMnemonic(System.Char,System.String)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: IsMnemonic(Char,String)
  nameWithType: Control.IsMnemonic(Char,String)
  fullName: System.Windows.Forms.Control.IsMnemonic(Char,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina se o caractere especificado é o caractere mnemônico atribuído para o controle na cadeia de caracteres especificada."
  remarks: "O caractere mnemônico é o caractere imediatamente após a primeira instância de &quot;&&quot; em <xref:System.String>.</xref:System.String>"
  example:
  - "The following code example demonstrates an extension of the button class that overrides the <xref:System.Windows.Forms.Control.ProcessMnemonic%2A> method to exhibit custom behavior. The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and IsMnemonic properties. To run this example paste the following code after a form class, in the same file. Add a button of type `MnemonicButton` to the form.  \n  \n [!code-cs[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/csharp/m-system.windows.forms.c_70_1.cs)]\n [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/cpp/m-system.windows.forms.c_70_1.cpp)]\n [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_70_1.vb)]"
  syntax:
    content: public static bool IsMnemonic (char charCode, string text);
    parameters:
    - id: charCode
      type: System.Char
      description: "O caractere a ser testado."
    - id: text
      type: System.String
      description: "A cadeia de caracteres de pesquisa."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o <code> charCode </code> caractere é o caractere mnemônico atribuído ao controle; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.IsMnemonic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.KeyDown
  id: KeyDown
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: KeyDown
  nameWithType: Control.KeyDown
  fullName: System.Windows.Forms.Control.KeyDown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando uma tecla é pressionada enquanto o controle tem foco."
  remarks: "Principais eventos ocorrem na seguinte ordem: 1.  KeyDown 2.  <xref:System.Windows.Forms.Control.KeyPress>3.</xref:System.Windows.Forms.Control.KeyPress>  <xref:System.Windows.Forms.Control.KeyUp>Para manipular eventos de teclado somente no nível do formulário e não habilitar outros controles para receber eventos de teclado, definir o <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName>propriedade ao seu formulário <xref:System.Windows.Forms.Control.KeyPress>método do manipulador de eventos para `true`.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName></xref:System.Windows.Forms.Control.KeyUp> Determinadas chaves, como as teclas TAB, RETURN, ESC e seta são tratadas por controles automaticamente. Para que essas chaves para gerar o evento KeyDown, você deve substituir o <xref:System.Windows.Forms.Control.IsInputKey%2A>método em cada controle no formulário.</xref:System.Windows.Forms.Control.IsInputKey%2A> O código para a substituição do <xref:System.Windows.Forms.Control.IsInputKey%2A>seria necessário determinar se uma das chaves especiais é pressionada e retornar um valor de `true`.</xref:System.Windows.Forms.Control.IsInputKey%2A> Em vez de substituir o <xref:System.Windows.Forms.Control.IsInputKey%2A>método, você pode manipular o <xref:System.Windows.Forms.Control.PreviewKeyDown>evento e defina o <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A>propriedade `true`.</xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> </xref:System.Windows.Forms.Control.PreviewKeyDown> </xref:System.Windows.Forms.Control.IsInputKey%2A> Para obter um exemplo de código, consulte o <xref:System.Windows.Forms.Control.PreviewKeyDown>evento.</xref:System.Windows.Forms.Control.PreviewKeyDown>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the KeyDown event to determine the type of character entered into the control.  \n  \n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_14_1.vb)]\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/e-system.windows.forms.c_14_1.cpp)]\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/e-system.windows.forms.c_14_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.KeyEventHandler KeyDown;
    return:
      type: System.Windows.Forms.KeyEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.KeyPress
  id: KeyPress
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: KeyPress
  nameWithType: Control.KeyPress
  fullName: System.Windows.Forms.Control.KeyPress
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando um caractere. espaço ou backspace é pressionada enquanto o controle tem foco."
  remarks: "Principais eventos ocorrem na seguinte ordem: 1.  <xref:System.Windows.Forms.Control.KeyDown>2.</xref:System.Windows.Forms.Control.KeyDown>  3 de pressionamento de tecla.  <xref:System.Windows.Forms.Control.KeyUp>O evento KeyPress não é gerado por chaves de não caractere diferente de espaço e backspace; No entanto, as chaves de caractere não gerar o <xref:System.Windows.Forms.Control.KeyDown>e <xref:System.Windows.Forms.Control.KeyUp>eventos.</xref:System.Windows.Forms.Control.KeyUp> </xref:System.Windows.Forms.Control.KeyDown></xref:System.Windows.Forms.Control.KeyUp>       Use o <xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>propriedade pressionamentos de tecla de exemplo em tempo de execução para consumir ou modificar um subconjunto de pressionamentos de tecla comuns.</xref:System.Windows.Forms.KeyPressEventArgs.KeyChar%2A>       Para manipular eventos de teclado somente no nível do formulário e não habilitar outros controles para receber eventos de teclado, definir o <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName>propriedade no método de manipulação de evento KeyPress do formulário para `true`.</xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the KeyPress event to prevent characters from entering the control.  \n  \n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_4_1.vb)]\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/e-system.windows.forms.c_4_1.cpp)]\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/e-system.windows.forms.c_4_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.KeyPressEventHandler KeyPress;
    return:
      type: System.Windows.Forms.KeyPressEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.KeyUp
  id: KeyUp
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: KeyUp
  nameWithType: Control.KeyUp
  fullName: System.Windows.Forms.Control.KeyUp
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando uma tecla é liberada enquanto o controle tem foco."
  remarks: "Principais eventos ocorrem na seguinte ordem: 1.  <xref:System.Windows.Forms.Control.KeyDown>2.</xref:System.Windows.Forms.Control.KeyDown>  <xref:System.Windows.Forms.Control.KeyPress>3.</xref:System.Windows.Forms.Control.KeyPress>  KeyUp para manipular eventos de teclado somente no nível do formulário e não habilitar outros controles para receber eventos de teclado, definir o <xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName>propriedade ao seu formulário <xref:System.Windows.Forms.Control.KeyPress>método do manipulador de eventos para `true`.</xref:System.Windows.Forms.Control.KeyPress> </xref:System.Windows.Forms.KeyPressEventArgs.Handled%2A?displayProperty=fullName> Determinadas chaves, como as teclas TAB, RETURN, ESC e seta são tratadas por controles automaticamente. Para que essas chaves para gerar o evento KeyUp, você deve substituir o <xref:System.Windows.Forms.Control.IsInputKey%2A>método em cada controle no formulário.</xref:System.Windows.Forms.Control.IsInputKey%2A> O código para a substituição de <xref:System.Windows.Forms.Control.IsInputKey%2A>seria necessário determinar se uma das chaves especiais é pressionada e retornar um valor de `true`.</xref:System.Windows.Forms.Control.IsInputKey%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the KeyUp event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.  \n  \n [!code-cpp[Control.KeyUp#1](~/add/codesnippet/cpp/e-system.windows.forms.c_40_1.cpp)]\n [!code-vb[Control.KeyUp#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_40_1.vb)]\n [!code-cs[Control.KeyUp#1](~/add/codesnippet/csharp/e-system.windows.forms.c_40_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.KeyEventHandler KeyUp;
    return:
      type: System.Windows.Forms.KeyEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Layout
  id: Layout
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Layout
  nameWithType: Control.Layout
  fullName: System.Windows.Forms.Control.Layout
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando um controle deve reposicionar seus controles filhos."
  remarks: "O evento de Layout ocorre quando controles filhos são adicionados ou removidos, quando os limites do controle será alterado e, quando ocorrerem outras alterações que podem afetar o layout do controle. O evento de layout pode ser suprimido usando o <xref:System.Windows.Forms.Control.SuspendLayout%2A>e <xref:System.Windows.Forms.Control.ResumeLayout%2A>métodos.</xref:System.Windows.Forms.Control.ResumeLayout%2A> </xref:System.Windows.Forms.Control.SuspendLayout%2A> Suspensão de layout permite executar várias ações em um controle sem a necessidade de executar um layout para cada alteração. Por exemplo, se você redimensiona e move um controle, cada operação deve gerar um evento de Layout.       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the Layout event. This will keep the form centered as the user resizes it. This example requires that you have created a <xref:System.Windows.Forms.Form> control.  \n  \n [!code-cs[Control.Layout#1](~/add/codesnippet/csharp/e-system.windows.forms.c_22_1.cs)]\n [!code-vb[Control.Layout#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_22_1.vb)]\n [!code-cpp[Control.Layout#1](~/add/codesnippet/cpp/e-system.windows.forms.c_22_1.cpp)]"
  syntax:
    content: public event System.Windows.Forms.LayoutEventHandler Layout;
    return:
      type: System.Windows.Forms.LayoutEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.LayoutEngine
  id: LayoutEngine
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: LayoutEngine
  nameWithType: Control.LayoutEngine
  fullName: System.Windows.Forms.Control.LayoutEngine
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém uma instância armazenada em cache do mecanismo de layout do controle."
  remarks: "A propriedade LayoutEngine obtém o mecanismo de layout para os filhos do controle em vez de controle em si."
  syntax:
    content: public virtual System.Windows.Forms.Layout.LayoutEngine LayoutEngine { get; }
    return:
      type: System.Windows.Forms.Layout.LayoutEngine
      description: "O <xref href=&quot;System.Windows.Forms.Layout.LayoutEngine&quot;> </xref> para o conteúdo do controle."
  overload: System.Windows.Forms.Control.LayoutEngine*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Leave
  id: Leave
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Leave
  nameWithType: Control.Leave
  fullName: System.Windows.Forms.Control.Leave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o foco de entrada deixa o controle."
  remarks: "When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  Leave  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  Leave  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.Control.Enter> and Leave events are suppressed by the <xref:System.Windows.Forms.Form> class. The equivalent events in the <xref:System.Windows.Forms.Form> class are the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. The <xref:System.Windows.Forms.Control.Enter> and Leave events are hierarchical and will cascade up and down the parent chain until the appropriate control is reached. For example, assume you have a <xref:System.Windows.Forms.Form> with two <xref:System.Windows.Forms.GroupBox> controls, and each <xref:System.Windows.Forms.GroupBox> control has one <xref:System.Windows.Forms.TextBox> control. When the caret is moved from one <xref:System.Windows.Forms.TextBox> to the other, the Leave event is raised for the <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.GroupBox>, and the <xref:System.Windows.Forms.Control.Enter> event is raised for the other <xref:System.Windows.Forms.GroupBox> and <xref:System.Windows.Forms.TextBox>.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, Leave, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.  \n  \n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the Leave event to reset a control to its former state.  \n  \n [!code-cs[Control.Enter#1](~/add/codesnippet/csharp/e-system.windows.forms.c_39_1.cs)]\n [!code-cpp[Control.Enter#1](~/add/codesnippet/cpp/e-system.windows.forms.c_39_1.cpp)]\n [!code-vb[Control.Enter#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_39_1.vb)]"
  syntax:
    content: public event EventHandler Leave;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Left
  id: Left
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Left
  nameWithType: Control.Left
  fullName: System.Windows.Forms.Control.Left
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a distância em pixels entre a borda esquerda do controle e a borda esquerda da área cliente do seu contêiner."
  remarks: "O valor da propriedade esquerdo é equivalente ao <xref:System.Drawing.Point.X%2A?displayProperty=fullName>propriedade o <xref:System.Windows.Forms.Control.Location%2A>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Drawing.Point.X%2A?displayProperty=fullName>       As alterações feitas a <xref:System.Windows.Forms.Control.Width%2A>e valores de propriedade esquerda causa o <xref:System.Windows.Forms.Control.Right%2A>valor da propriedade do controle para alterar.</xref:System.Windows.Forms.Control.Right%2A> </xref:System.Windows.Forms.Control.Width%2A>"
  example:
  - "The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \n  \n [!code-cs[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/csharp/p-system.windows.forms.c_103_1.cs)]\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/cpp/p-system.windows.forms.c_103_1.cpp)]\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_103_1.vb)]"
  syntax:
    content: public int Left { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>que representa a distância em pixels entre a borda esquerda do controle e a borda esquerda da área cliente do seu contêiner.</xref:System.Int32>"
  overload: System.Windows.Forms.Control.Left*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Location
  id: Location
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Location
  nameWithType: Control.Location
  fullName: System.Windows.Forms.Control.Location
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define as coordenadas do canto superior esquerdo do controle em relação ao canto superior esquerdo de seu contêiner."
  remarks: "Porque o <xref:System.Drawing.Point>classe é um tipo de valor (`Structure` na [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], `struct` em [!INCLUDE[csprcs](~/add/includes/csprcs-md.md)]), ele é retornado por valor, o que significa que acessar a propriedade retorna uma cópia do ponto superior esquerdo do controle.</xref:System.Drawing.Point> Assim, ajustando a <xref:System.Drawing.Point.X%2A>ou <xref:System.Drawing.Point.Y%2A>Propriedades do <xref:System.Drawing.Point>retornada desta propriedade não afetará o <xref:System.Windows.Forms.Control.Left%2A>, <xref:System.Windows.Forms.Control.Right%2A>, <xref:System.Windows.Forms.Control.Top%2A>, ou <xref:System.Windows.Forms.Control.Bottom%2A>valores de propriedade do controle.</xref:System.Windows.Forms.Control.Bottom%2A> </xref:System.Windows.Forms.Control.Top%2A> </xref:System.Windows.Forms.Control.Right%2A> </xref:System.Windows.Forms.Control.Left%2A> </xref:System.Drawing.Point> </xref:System.Drawing.Point.Y%2A> </xref:System.Drawing.Point.X%2A> Para ajustar essas propriedades, defina cada valor de propriedade individualmente ou defina a propriedade de local com um novo <xref:System.Drawing.Point>.</xref:System.Drawing.Point>       Se o <xref:System.Windows.Forms.Control>é um <xref:System.Windows.Forms.Form>, o valor da propriedade local representa o canto superior esquerdo do <xref:System.Windows.Forms.Form>em coordenadas de tela.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control>"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties. The example creates a <xref:System.Windows.Forms.TextBox>and sets its Location within the group box. Next, it sets the <xref:System.Windows.Forms.Control.Text%2A> property of the group box, and docks the group box to the top of the form. Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.  \n  \n [!code-cs[Windows.Forms.Control Properties#2](~/add/codesnippet/csharp/p-system.windows.forms.c_94_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#2](~/add/codesnippet/cpp/p-system.windows.forms.c_94_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_94_1.vb)]"
  syntax:
    content: public System.Drawing.Point Location { get; set; }
    return:
      type: System.Drawing.Point
      description: "O <xref href=&quot;System.Drawing.Point&quot;> </xref> que representa o canto superior esquerdo do controle em relação ao canto superior esquerdo de seu contêiner."
  overload: System.Windows.Forms.Control.Location*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.LocationChanged
  id: LocationChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: LocationChanged
  nameWithType: Control.LocationChanged
  fullName: System.Windows.Forms.Control.LocationChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.Location*>o valor da propriedade foi alterada.</xref:System.Windows.Forms.Control.Location*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.Location%2A>propriedade é alterada por uma modificação de programação ou por meio da interação.</xref:System.Windows.Forms.Control.Location%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example raises the LocationChanged event on a <xref:System.Windows.Forms.StatusStrip> when the form is resized.  \n  \n [!code-cs[System.Windows.Forms.LocationChanged#1](~/add/codesnippet/csharp/e-system.windows.forms.c_69_1.cs)]\n [!code-vb[System.Windows.Forms.LocationChanged#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_69_1.vb)]"
  syntax:
    content: public event EventHandler LocationChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.LostFocus
  id: LostFocus
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: LostFocus
  nameWithType: Control.LostFocus
  fullName: System.Windows.Forms.Control.LostFocus
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle perde o foco."
  remarks: "When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  <xref:System.Windows.Forms.Control.Validated>  \n  \n6.  LostFocus  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  LostFocus  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  <xref:System.Windows.Forms.Control.Validated>  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and <xref:System.Windows.Forms.Control.Validated> events are suppressed.  \n  \n If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.  \n  \n> [!NOTE]\n>  The <xref:System.Windows.Forms.Control.GotFocus> and LostFocus events are low-level focus events that are tied to the WM_KILLFOCUS and WM_SETFOCUS Windows messages. Typically, the <xref:System.Windows.Forms.Control.GotFocus> and LostFocus events are only used when updating <xref:System.Windows.Forms.UICues> or when writing custom controls. Instead the <xref:System.Windows.Forms.Control.Enter> and <xref:System.Windows.Forms.Control.Leave> events should be used for all controls except the <xref:System.Windows.Forms.Form> class, which uses the <xref:System.Windows.Forms.Form.Activated> and <xref:System.Windows.Forms.Form.Deactivate> events. For more information about the <xref:System.Windows.Forms.Control.GotFocus> and LostFocus events, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) and [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topics.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, LostFocus, <xref:System.Windows.Forms.Control.Validating>, or <xref:System.Windows.Forms.Control.Validated> event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the [WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms646282\\(v=vs.85\\).aspx) topic.  \n  \n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates validating the text for TextBox1. It also demonstrates handling the LostFocus event by setting the <xref:System.Windows.Forms.FileDialog.InitialDirectory%2A?displayProperty=fullName> property to the text in TextBox1. The code example used the <xref:System.Windows.Forms.ErrorProvider.GetError%2A?displayProperty=fullName> method to check for an error before opening the file dialog box. To run this example, paste the following code into a form containing a <xref:System.Windows.Forms.TextBox> named `TextBox1`, an <xref:System.Windows.Forms.OpenFileDialog> named `OpenFileDialog1`, a <xref:System.Windows.Forms.Button> named `Button1`, and an <xref:System.Windows.Forms.ErrorProvider> named `ErrorProvider1`. Ensure all events are associated with their event handlers.  \n  \n [!code-cs[System.Windows.Forms.FileDialog#2](~/add/codesnippet/csharp/e-system.windows.forms.c_78_1.cs)]\n [!code-cpp[System.Windows.Forms.FileDialog#2](~/add/codesnippet/cpp/e-system.windows.forms.c_78_1.cpp)]\n [!code-vb[System.Windows.Forms.FileDialog#2](~/add/codesnippet/visualbasic/e-system.windows.forms.c_78_1.vb)]"
  syntax:
    content: public event EventHandler LostFocus;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Margin
  id: Margin
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Margin
  nameWithType: Control.Margin
  fullName: System.Windows.Forms.Control.Margin
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o espaçamento entre controles."
  remarks: "Controles de recebem valores padrão para a margem estão razoavelmente próximos diretrizes de interface de usuário do Windows. Alguns ajustes ainda podem ser necessários para aplicativos específicos.      > [!NOTE] > Definindo a propriedade Margin em um controle encaixado não tem nenhum efeito na distância do controle das bordas de seu contêiner."
  syntax:
    content: public System.Windows.Forms.Padding Margin { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "Um <xref href=&quot;System.Windows.Forms.Padding&quot;> </xref> que representa o espaçamento entre controles."
  overload: System.Windows.Forms.Control.Margin*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MarginChanged
  id: MarginChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MarginChanged
  nameWithType: Control.MarginChanged
  fullName: System.Windows.Forms.Control.MarginChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando a margem do controle é alterado."
  remarks: "Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MarginChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the MarginChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#21](~/add/codesnippet/csharp/e-system.windows.forms.c_67_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#21](~/add/codesnippet/visualbasic/e-system.windows.forms.c_67_1.vb)]"
  syntax:
    content: public event EventHandler MarginChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MaximumSize
  id: MaximumSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MaximumSize
  nameWithType: Control.MaximumSize
  fullName: System.Windows.Forms.Control.MaximumSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o tamanho que é o limite superior que <xref:System.Windows.Forms.Control.GetPreferredSize*>pode especificar.</xref:System.Windows.Forms.Control.GetPreferredSize*>"
  syntax:
    content: public virtual System.Drawing.Size MaximumSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "Um par ordenado de tipo <xref href=&quot;System.Drawing.Size&quot;> </xref> que representa a largura e altura de um retângulo."
  overload: System.Windows.Forms.Control.MaximumSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MinimumSize
  id: MinimumSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MinimumSize
  nameWithType: Control.MinimumSize
  fullName: System.Windows.Forms.Control.MinimumSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o tamanho que é o menor limite que <xref:System.Windows.Forms.Control.GetPreferredSize*>pode especificar.</xref:System.Windows.Forms.Control.GetPreferredSize*>"
  syntax:
    content: public virtual System.Drawing.Size MinimumSize { get; set; }
    return:
      type: System.Drawing.Size
      description: "Um par ordenado de tipo <xref href=&quot;System.Drawing.Size&quot;> </xref> que representa a largura e altura de um retângulo."
  overload: System.Windows.Forms.Control.MinimumSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ModifierKeys
  id: ModifierKeys
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ModifierKeys
  nameWithType: Control.ModifierKeys
  fullName: System.Windows.Forms.Control.ModifierKeys
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica qual das teclas modificadoras (SHIFT, CTRL e ALT) está em um estado pressionado."
  remarks: ''
  example:
  - "The following code example hides a button when the CTRL key is pressed while the button is clicked. This example requires that you have a <xref:System.Windows.Forms.Button> named `button1` on a <xref:System.Windows.Forms.Form>.  \n  \n [!code-cs[Windows.Forms.Control Members4#2](~/add/codesnippet/csharp/p-system.windows.forms.c_1_1.cs)]\n [!code-vb[Windows.Forms.Control Members4#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_1_1.vb)]\n [!code-cpp[Windows.Forms.Control Members4#2](~/add/codesnippet/cpp/p-system.windows.forms.c_1_1.cpp)]"
  syntax:
    content: public static System.Windows.Forms.Keys ModifierKeys { get; }
    return:
      type: System.Windows.Forms.Keys
      description: "Uma combinação bit a bit do <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> valores. O padrão é <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref>."
  overload: System.Windows.Forms.Control.ModifierKeys*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseButtons
  id: MouseButtons
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseButtons
  nameWithType: Control.MouseButtons
  fullName: System.Windows.Forms.Control.MouseButtons
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica qual dos botões do mouse em um estado pressionado."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, <xref:System.Windows.Forms.Control.PointToScreen%2A>, MouseButtons, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=fullName>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=fullName> members. To run the example, paste the following code in a form called Form1 containing several controls. This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.  \n  \n [!code-cs[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/csharp/p-system.windows.forms.c_50_1.cs)]\n [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/cpp/p-system.windows.forms.c_50_1.cpp)]\n [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_50_1.vb)]"
  syntax:
    content: public static System.Windows.Forms.MouseButtons MouseButtons { get; }
    return:
      type: System.Windows.Forms.MouseButtons
      description: "Uma combinação bit a bit do <xref href=&quot;System.Windows.Forms.MouseButtons&quot;> </xref> valores de enumeração. O padrão é <xref href=&quot;System.Windows.Forms.MouseButtons&quot;> </xref>."
  overload: System.Windows.Forms.Control.MouseButtons*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseCaptureChanged
  id: MouseCaptureChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseCaptureChanged
  nameWithType: Control.MouseCaptureChanged
  fullName: System.Windows.Forms.Control.MouseCaptureChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle perde a captura do mouse."
  remarks: "Em situações raras, pode ser necessário detectar inesperado de entrada. Por exemplo, considere os cenários a seguir.      -Durante uma operação de mouse, o usuário abre o menu Iniciar, pressionando a tecla do Windows ou CTRL + ESC.      -Durante uma operação de mouse, o usuário alterna para outro programa pressionando ALT + TAB.      -Durante uma operação de mouse, o outro programa exibe uma janela ou uma caixa de mensagem que recebe o foco para fora do aplicativo atual.       As operações de mouse podem incluir clicando e mantendo o mouse em um formulário ou controle ou executando um mouse a operação de arrastar. Se você detectar quando um formulário ou um controle perde a captura do mouse para esses cenários inesperados relacionados e você pode usar o evento MouseCaptureChanged."
  example:
  - "The following code example demonstrates the MouseCaptureChanged event for a <xref:System.Windows.Forms.Button> control.  \n  \n [!code-cs[System.Windows.Forms.Control.MouseCaptureChanged#1](~/add/codesnippet/csharp/mousecapturechanged/form1.cs#1)]\n [!code-vb[System.Windows.Forms.Control.MouseCaptureChanged#1](~/add/codesnippet/visualbasic/mousecapturechanged/form1.vb#1)]  \n  \n To test this example, run it in the debugger by pressing F5. Open the **Output** window in Visual Studio so that you can see when events are raised. Click the <xref:System.Windows.Forms.Button> and notice the following output.  \n  \n `button1_MouseDown`  \n  \n `button1_MouseUp`  \n  \n `button1_MouseCaptureChanged`  \n  \n Now, click and hold the left mouse button on the <xref:System.Windows.Forms.Button> control. While still clicking the mouse, press ALT+TAB to switch to another program. Notice that the MouseCaptureChanged event is raised enabling you to potentially handle this scenario. Depending on your actions, the <xref:System.Windows.Forms.Control.MouseUp> event might not be raised. You can also try this test with the Windows key or CTRL+ESC.  \n  \n `button1_MouseDown`  \n  \n `button1_MouseCaptureChanged`"
  syntax:
    content: public event EventHandler MouseCaptureChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseClick
  id: MouseClick
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseClick
  nameWithType: Control.MouseClick
  fullName: System.Windows.Forms.Control.MouseClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle é clicado com o mouse."
  remarks: "Pressionar um botão do mouse quando o cursor está sobre um controle normalmente gera a seguinte série de eventos do controle: 1.  <xref:System.Windows.Forms.Control.MouseDown>evento.</xref:System.Windows.Forms.Control.MouseDown>      2.  <xref:System.Windows.Forms.Control.Click>evento.</xref:System.Windows.Forms.Control.Click>      3.  Evento MouseClick.      4.  <xref:System.Windows.Forms.Control.MouseUp>evento.</xref:System.Windows.Forms.Control.MouseUp>       Para que isso ocorra, vários eventos não podem ser desabilitados na classe do controle.       Dois cliques ocorridos fechar suficiente no momento, conforme determinado pelas configurações de mouse do sistema operacional do usuário irá gerar um único um <xref:System.Windows.Forms.Control.MouseDoubleClick>eventos em vez do segundo evento MouseClick.</xref:System.Windows.Forms.Control.MouseDoubleClick>      > [!IMPORTANT] > <xref:System.Windows.Forms.Control.Click>eventos são eventos logicamente, o nível mais alto de um controle.</xref:System.Windows.Forms.Control.Click> Geralmente, eles são gerados por outras ações, como pressionar a tecla ENTER quando o controle tem foco.       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the MouseClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#54](~/add/codesnippet/csharp/e-system.windows.forms.c_15_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#54](~/add/codesnippet/visualbasic/e-system.windows.forms.c_15_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseClick;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseDoubleClick
  id: MouseDoubleClick
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseDoubleClick
  nameWithType: Control.MouseDoubleClick
  fullName: System.Windows.Forms.Control.MouseDoubleClick
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle é duplo clique do mouse."
  remarks: "O evento MouseDoubleClick ocorre quando o usuário pressiona um botão do mouse duas vezes em sucessão rápida quando o cursor está sobre o controle. O intervalo de tempo que separa os dois cliques únicas de um clique duplo é determinado pelas configurações de mouse do sistema operacional do usuário.       A seguinte série de eventos é gerada pelo controle quando tal uma ação do usuário: 1.  <xref:System.Windows.Forms.Control.MouseDown>evento.</xref:System.Windows.Forms.Control.MouseDown>      2.  <xref:System.Windows.Forms.Control.Click>evento.</xref:System.Windows.Forms.Control.Click>      3.  <xref:System.Windows.Forms.Control.MouseClick>evento.</xref:System.Windows.Forms.Control.MouseClick>      4.  <xref:System.Windows.Forms.Control.MouseUp>evento.</xref:System.Windows.Forms.Control.MouseUp>      5.  <xref:System.Windows.Forms.Control.MouseDown>evento.</xref:System.Windows.Forms.Control.MouseDown>      6.  <xref:System.Windows.Forms.Control.DoubleClick>evento.</xref:System.Windows.Forms.Control.DoubleClick>      7.  Evento MouseDoubleClick.      8.  <xref:System.Windows.Forms.Control.MouseUp>evento.</xref:System.Windows.Forms.Control.MouseUp>       Para que isso ocorra, vários eventos não podem ser desabilitados na classe do controle.      > [!IMPORTANT] > <xref:System.Windows.Forms.Control.DoubleClick>eventos são eventos logicamente, o nível mais alto de um controle.</xref:System.Windows.Forms.Control.DoubleClick> Eles podem ser gerados por outras ações do usuário, como combinações de teclas de atalho.       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the MouseDoubleClick event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the MouseDoubleClick event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#55](~/add/codesnippet/csharp/e-system.windows.forms.c_0_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#55](~/add/codesnippet/visualbasic/e-system.windows.forms.c_0_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseDoubleClick;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseDown
  id: MouseDown
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseDown
  nameWithType: Control.MouseDown
  fullName: System.Windows.Forms.Control.MouseDown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o ponteiro do mouse está sobre o controle e um botão do mouse é pressionado."
  remarks: "Eventos de mouse ocorrem na seguinte ordem: 1.  <xref:System.Windows.Forms.Control.MouseEnter>2.</xref:System.Windows.Forms.Control.MouseEnter>  <xref:System.Windows.Forms.Control.MouseMove>3.</xref:System.Windows.Forms.Control.MouseMove>  <xref:System.Windows.Forms.Control.MouseHover>/ MouseDown / <xref:System.Windows.Forms.Control.MouseWheel>4.</xref:System.Windows.Forms.Control.MouseWheel></xref:System.Windows.Forms.Control.MouseHover>  <xref:System.Windows.Forms.Control.MouseUp>5.</xref:System.Windows.Forms.Control.MouseUp>  <xref:System.Windows.Forms.Control.MouseLeave>> [!NOTE] > Os eventos a seguir não são gerados para o <xref:System.Windows.Forms.TabControl>classe a menos que haja pelo menos um <xref:System.Windows.Forms.TabPage>no <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>coleção: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>MouseDown, <xref:System.Windows.Forms.Control.MouseUp> <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave>e <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl></xref:System.Windows.Forms.Control.MouseLeave> Se houver pelo menos um <xref:System.Windows.Forms.TabPage>na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <xref:System.Windows.Forms.TabPage>nomes aparecerão), o <xref:System.Windows.Forms.TabControl>gera o evento apropriado.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <xref:System.Windows.Forms.TabPage>gera o evento apropriado.</xref:System.Windows.Forms.TabPage>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and MouseDown events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_13_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_13_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_13_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseDown;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseEnter
  id: MouseEnter
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseEnter
  nameWithType: Control.MouseEnter
  fullName: System.Windows.Forms.Control.MouseEnter
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o ponteiro do mouse entra o controle."
  remarks: "Eventos de mouse ocorrem na seguinte ordem: 1.  MouseEnter 2.  <xref:System.Windows.Forms.Control.MouseMove>3.</xref:System.Windows.Forms.Control.MouseMove>  <xref:System.Windows.Forms.Control.MouseHover>/ <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>      4.</xref:System.Windows.Forms.Control.MouseWheel></xref:System.Windows.Forms.Control.MouseDown></xref:System.Windows.Forms.Control.MouseHover>  <xref:System.Windows.Forms.Control.MouseUp>5.</xref:System.Windows.Forms.Control.MouseUp>  <xref:System.Windows.Forms.Control.MouseLeave>> [!NOTE] > Os eventos a seguir não são gerados para o <xref:System.Windows.Forms.TabControl>classe a menos que haja pelo menos um <xref:System.Windows.Forms.TabPage>no <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>coleção: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick> <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp> <xref:System.Windows.Forms.Control.MouseHover>, MouseEnter <xref:System.Windows.Forms.Control.MouseLeave>e <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl></xref:System.Windows.Forms.Control.MouseLeave> Se houver pelo menos um <xref:System.Windows.Forms.TabPage>na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <xref:System.Windows.Forms.TabPage>nomes aparecerão), o <xref:System.Windows.Forms.TabControl>gera o evento apropriado.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <xref:System.Windows.Forms.TabPage>gera o evento apropriado.</xref:System.Windows.Forms.TabPage>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_2_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_2_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_2_1.vb)]"
  syntax:
    content: public event EventHandler MouseEnter;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseHover
  id: MouseHover
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseHover
  nameWithType: Control.MouseHover
  fullName: System.Windows.Forms.Control.MouseHover
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o ponteiro do mouse permanece sobre o controle."
  remarks: "Um uso típico de MouseHover é para exibir uma dica de ferramenta quando o mouse faz uma pausa em um controle dentro de uma área especificada ao redor do controle (&quot;retângulo de foco&quot;). A pausa necessária para este evento a ser gerado é especificada em milissegundos, o <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A>propriedade.</xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A>       O evento MouseHover é definido e detectado na conexão com o <xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A>e <xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A>Propriedades.</xref:System.Windows.Forms.SystemInformation.MouseHoverTime%2A> </xref:System.Windows.Forms.SystemInformation.MouseHoverSize%2A>       Eventos de mouse ocorrem na seguinte ordem: 1.  <xref:System.Windows.Forms.Control.MouseEnter>2.</xref:System.Windows.Forms.Control.MouseEnter>  <xref:System.Windows.Forms.Control.MouseMove>3.</xref:System.Windows.Forms.Control.MouseMove>  MouseHover / <xref:System.Windows.Forms.Control.MouseDown>/ <xref:System.Windows.Forms.Control.MouseWheel>4.</xref:System.Windows.Forms.Control.MouseWheel> </xref:System.Windows.Forms.Control.MouseDown>  <xref:System.Windows.Forms.Control.MouseUp>5.</xref:System.Windows.Forms.Control.MouseUp>  <xref:System.Windows.Forms.Control.MouseLeave>> [!NOTE] > Os eventos a seguir não são gerados para o <xref:System.Windows.Forms.TabControl>classe a menos que haja pelo menos um <xref:System.Windows.Forms.TabPage>no <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>coleção: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick> <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>MouseHover, <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave>e <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl></xref:System.Windows.Forms.Control.MouseLeave> Se houver pelo menos um <xref:System.Windows.Forms.TabPage>na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <xref:System.Windows.Forms.TabPage>nomes aparecerão), o <xref:System.Windows.Forms.TabControl>gera o evento apropriado.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <xref:System.Windows.Forms.TabPage>gera o evento apropriado.</xref:System.Windows.Forms.TabPage>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like MouseHover, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_53_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_53_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_53_1.vb)]"
  syntax:
    content: public event EventHandler MouseHover;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseLeave
  id: MouseLeave
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseLeave
  nameWithType: Control.MouseLeave
  fullName: System.Windows.Forms.Control.MouseLeave
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o ponteiro do mouse sai do controle."
  remarks: "Eventos de mouse ocorrem na seguinte ordem: 1.  <xref:System.Windows.Forms.Control.MouseEnter>2.</xref:System.Windows.Forms.Control.MouseEnter>  <xref:System.Windows.Forms.Control.MouseMove>3.</xref:System.Windows.Forms.Control.MouseMove>  <xref:System.Windows.Forms.Control.MouseHover>/ <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>      4.</xref:System.Windows.Forms.Control.MouseWheel></xref:System.Windows.Forms.Control.MouseDown></xref:System.Windows.Forms.Control.MouseHover>  <xref:System.Windows.Forms.Control.MouseUp>5.</xref:System.Windows.Forms.Control.MouseUp>  MouseLeave > [!NOTE] > os eventos a seguir não são gerados para o <xref:System.Windows.Forms.TabControl>classe a menos que haja pelo menos um <xref:System.Windows.Forms.TabPage>no <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>coleção: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick> <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp> <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>MouseLeave e <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl> Se houver pelo menos um <xref:System.Windows.Forms.TabPage>na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <xref:System.Windows.Forms.TabPage>nomes aparecerão), o <xref:System.Windows.Forms.TabControl>gera o evento apropriado.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <xref:System.Windows.Forms.TabPage>gera o evento apropriado.</xref:System.Windows.Forms.TabPage>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_27_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_27_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_27_1.vb)]"
  syntax:
    content: public event EventHandler MouseLeave;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseMove
  id: MouseMove
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseMove
  nameWithType: Control.MouseMove
  fullName: System.Windows.Forms.Control.MouseMove
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o ponteiro do mouse é movido sobre o controle."
  remarks: "Usos típicos do MouseMove são para alterar a cor do controle ou para desenhar um retângulo gerado ao redor do controle.       Eventos de mouse ocorrem na seguinte ordem: 1.  <xref:System.Windows.Forms.Control.MouseEnter>2.</xref:System.Windows.Forms.Control.MouseEnter>  MouseMove 3.  <xref:System.Windows.Forms.Control.MouseHover>/ <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>      4.</xref:System.Windows.Forms.Control.MouseWheel></xref:System.Windows.Forms.Control.MouseDown></xref:System.Windows.Forms.Control.MouseHover>  <xref:System.Windows.Forms.Control.MouseUp>5.</xref:System.Windows.Forms.Control.MouseUp>  <xref:System.Windows.Forms.Control.MouseLeave>> [!NOTE] > Os eventos a seguir não são gerados para o <xref:System.Windows.Forms.TabControl>classe a menos que haja pelo menos um <xref:System.Windows.Forms.TabPage>no <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>coleção: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick>, <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseUp>, <xref:System.Windows.Forms.Control.MouseHover>, <xref:System.Windows.Forms.Control.MouseEnter>, <xref:System.Windows.Forms.Control.MouseLeave>e MouseMove.</xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseUp> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl></xref:System.Windows.Forms.Control.MouseLeave> Se houver pelo menos um <xref:System.Windows.Forms.TabPage>na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <xref:System.Windows.Forms.TabPage>nomes aparecerão), o <xref:System.Windows.Forms.TabControl>gera o evento apropriado.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <xref:System.Windows.Forms.TabPage>gera o evento apropriado.</xref:System.Windows.Forms.TabPage>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each MouseMove and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_80_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_80_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_80_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseMove;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MousePosition
  id: MousePosition
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MousePosition
  nameWithType: Control.MousePosition
  fullName: System.Windows.Forms.Control.MousePosition
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém a posição do cursor do mouse em coordenadas da tela."
  remarks: "A propriedade retorna MousePosition um <xref:System.Drawing.Point>que representa a posição do cursor do mouse no momento em que a propriedade foi referenciada.</xref:System.Drawing.Point> As coordenadas indicam a posição na tela, não em relação ao controle e são retornadas, independentemente se o cursor estiver posicionado sobre o controle. As coordenadas do canto superior esquerdo da tela são 0,0.       A propriedade MousePosition é idêntica de <xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=fullName>propriedade.</xref:System.Windows.Forms.Cursor.Position%2A?displayProperty=fullName>"
  example:
  - "The following code example puts a <xref:System.Windows.Forms.TreeNode> label into an editable state when the user presses ALT+E while the mouse cursor is over the tree node. After the user is done editing the label, the labels cannot be edited again until the ALT+E key combination is pressed again. This example requires that you have a <xref:System.Windows.Forms.TreeView> on a <xref:System.Windows.Forms.Form>. The tree view should also have at least one <xref:System.Windows.Forms.TreeNode> in its <xref:System.Windows.Forms.TreeView.Nodes%2A> collection.  \n  \n [!code-cs[Windows.Forms.Control Members4#3](~/add/codesnippet/csharp/p-system.windows.forms.c_64_1.cs)]\n [!code-vb[Windows.Forms.Control Members4#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_64_1.vb)]\n [!code-cpp[Windows.Forms.Control Members4#3](~/add/codesnippet/cpp/p-system.windows.forms.c_64_1.cpp)]"
  syntax:
    content: public static System.Drawing.Point MousePosition { get; }
    return:
      type: System.Drawing.Point
      description: "Um <xref href=&quot;System.Drawing.Point&quot;> </xref> que contém as coordenadas do cursor do mouse em relação ao canto superior esquerdo da tela."
  overload: System.Windows.Forms.Control.MousePosition*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseUp
  id: MouseUp
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseUp
  nameWithType: Control.MouseUp
  fullName: System.Windows.Forms.Control.MouseUp
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o ponteiro do mouse está sobre o controle e um botão do mouse é liberado."
  remarks: "Eventos de mouse ocorrem na seguinte ordem: 1.  <xref:System.Windows.Forms.Control.MouseEnter>2.</xref:System.Windows.Forms.Control.MouseEnter>  <xref:System.Windows.Forms.Control.MouseMove>3.</xref:System.Windows.Forms.Control.MouseMove>  <xref:System.Windows.Forms.Control.MouseHover>/ <xref:System.Windows.Forms.Control.MouseDown> / <xref:System.Windows.Forms.Control.MouseWheel>      4.</xref:System.Windows.Forms.Control.MouseWheel></xref:System.Windows.Forms.Control.MouseDown></xref:System.Windows.Forms.Control.MouseHover>  MouseUp 5.  <xref:System.Windows.Forms.Control.MouseLeave>> [!NOTE] > Os eventos a seguir não são gerados para o <xref:System.Windows.Forms.TabControl>classe a menos que haja pelo menos um <xref:System.Windows.Forms.TabPage>no <xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName>coleção: <xref:System.Windows.Forms.Control.Click>, <xref:System.Windows.Forms.Control.DoubleClick> <xref:System.Windows.Forms.Control.MouseDown>, MouseUp, <xref:System.Windows.Forms.Control.MouseHover> <xref:System.Windows.Forms.Control.MouseEnter> <xref:System.Windows.Forms.Control.MouseLeave>e <xref:System.Windows.Forms.Control.MouseMove>.</xref:System.Windows.Forms.Control.MouseMove> </xref:System.Windows.Forms.Control.MouseLeave> </xref:System.Windows.Forms.Control.MouseEnter> </xref:System.Windows.Forms.Control.MouseHover> </xref:System.Windows.Forms.Control.MouseDown> </xref:System.Windows.Forms.Control.DoubleClick> </xref:System.Windows.Forms.Control.Click> </xref:System.Windows.Forms.TabControl.TabPages%2A?displayProperty=fullName> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabControl></xref:System.Windows.Forms.Control.MouseLeave> Se houver pelo menos um <xref:System.Windows.Forms.TabPage>na coleção, e o usuário interage com o cabeçalho de controle da guia (onde o <xref:System.Windows.Forms.TabPage>nomes aparecerão), o <xref:System.Windows.Forms.TabControl>gera o evento apropriado.</xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.TabPage> </xref:System.Windows.Forms.TabPage> No entanto, se a interação do usuário estiver na área do cliente da página da guia, o <xref:System.Windows.Forms.TabPage>gera o evento apropriado.</xref:System.Windows.Forms.TabPage>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the <xref:System.Windows.Forms.Control.MouseWheel> event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_42_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_42_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_42_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseUp;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.MouseWheel
  id: MouseWheel
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: MouseWheel
  nameWithType: Control.MouseWheel
  fullName: System.Windows.Forms.Control.MouseWheel
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando a roda do mouse se move enquanto o controle tem foco."
  remarks: "When handling the MouseWheel event it is important to follow the user interface (UI) standards associated with the mouse wheel. The <xref:System.Windows.Forms.MouseEventArgs.Delta%2A?displayProperty=fullName> property value indicates the amount the mouse wheel has been moved. The UI should scroll when the accumulated delta is plus or minus 120. The UI should scroll the number of logical lines returned by the <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> property for every delta value reached. You can also scroll more smoothly in smaller that 120 unit increments, however the ratio should remain constant, that is <xref:System.Windows.Forms.SystemInformation.MouseWheelScrollLines%2A?displayProperty=fullName> lines scrolled per 120 delta units of wheel movement.  \n  \n For more information about handling mouse wheel messages, see the[WM_MOUSEWHEEL](http://msdn.microsoft.com/library/windows/desktop/ms645617\\(v=vs.85\\).aspx)topic.  \n  \n Mouse events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.MouseEnter>  \n  \n2.  <xref:System.Windows.Forms.Control.MouseMove>  \n  \n3.  <xref:System.Windows.Forms.Control.MouseHover> / <xref:System.Windows.Forms.Control.MouseDown> / MouseWheel  \n  \n4.  <xref:System.Windows.Forms.Control.MouseUp>  \n  \n5.  <xref:System.Windows.Forms.Control.MouseLeave>  \n  \n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates using different mouse events to draw the path of the mouse on a <xref:System.Windows.Forms.Panel>. A line segment is added to the <xref:System.Drawing.Drawing2D.GraphicsPath> for each <xref:System.Windows.Forms.Control.MouseMove> and <xref:System.Windows.Forms.Control.MouseDown> events that occur. To update the graphics, the <xref:System.Windows.Forms.Control.Invalidate%2A> method is called for the <xref:System.Windows.Forms.Panel> on each `MouseDown` and `MouseUp` event. In addition, the graphic path is scrolled up or down when the MouseWheel event occurs. Additional mouse events, like <xref:System.Windows.Forms.Control.MouseHover>, are identified on screen as well. Also displayed on the screen is additional information about the mouse from the <xref:System.Windows.Forms.SystemInformation> class.  \n  \n [!code-cpp[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/cpp/e-system.windows.forms.c_38_1.cpp)]\n [!code-cs[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/csharp/e-system.windows.forms.c_38_1.cs)]\n [!code-vb[System.Windows.Forms.MouseEvent#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_38_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.MouseEventHandler MouseWheel;
    return:
      type: System.Windows.Forms.MouseEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Move
  id: Move
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Move
  nameWithType: Control.Move
  fullName: System.Windows.Forms.Control.Move
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle é movido."
  remarks: "Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the Move event to display the location of the form in screen coordinates on the caption bar of the form.  \n  \n [!code-cpp[Control.Move#1](~/add/codesnippet/cpp/e-system.windows.forms.c_23_1.cpp)]\n [!code-vb[Control.Move#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_23_1.vb)]\n [!code-cs[Control.Move#1](~/add/codesnippet/csharp/e-system.windows.forms.c_23_1.cs)]"
  syntax:
    content: public event EventHandler Move;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Name
  id: Name
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Name
  nameWithType: Control.Name
  fullName: System.Windows.Forms.Control.Name
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o nome do controle."
  remarks: "A propriedade de nome pode ser usada em tempo de execução para avaliar o objeto pelo nome em vez de tipo e nome programático. Porque a propriedade Name retorna um <xref:System.String>tipo, ele pode ser avaliado em instruções de lógica de estilo de caso (`Select` instrução em [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], `switch` instrução em [!INCLUDE[csprcs](~/add/includes/csprcs-md.md)] e [!INCLUDE[vcprvc](~/add/includes/vcprvc-md.md)]).</xref:System.String>"
  example:
  - "The following code example displays the Name of a control in a <xref:System.Windows.Forms.MessageBox> when the control is added or removed from a form.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/cpp/p-system.windows.forms.c_14_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_14_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/csharp/p-system.windows.forms.c_14_1.cs)]"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "O nome do controle. O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Windows.Forms.Control.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  id: NotifyInvalidate(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: NotifyInvalidate(Rectangle)
  nameWithType: Control.NotifyInvalidate(Rectangle)
  fullName: System.Windows.Forms.Control.NotifyInvalidate(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Invalidated&quot;> </xref> eventos com uma região especificada do controle para invalidar."
  syntax:
    content: protected virtual void NotifyInvalidate (System.Drawing.Rectangle invalidatedArea);
    parameters:
    - id: invalidatedArea
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa a área para invalidar."
  overload: System.Windows.Forms.Control.NotifyInvalidate*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  id: OnAutoSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnAutoSizeChanged(EventArgs)
  nameWithType: Control.OnAutoSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnAutoSizeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.AutoSizeChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnAutoSizeChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnAutoSizeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnAutoSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  id: OnBackColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnBackColorChanged(EventArgs)
  nameWithType: Control.OnBackColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBackColorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.BackColorChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnBackColorChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_30_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_30_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_30_1.vb)]"
  syntax:
    content: protected virtual void OnBackColorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnBackColorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  id: OnBackgroundImageChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnBackgroundImageChanged(EventArgs)
  nameWithType: Control.OnBackgroundImageChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBackgroundImageChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.BackgroundImageChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnBackgroundImageChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_60_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_60_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_60_1.vb)]"
  syntax:
    content: protected virtual void OnBackgroundImageChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnBackgroundImageChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  id: OnBackgroundImageLayoutChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnBackgroundImageLayoutChanged(EventArgs)
  nameWithType: Control.OnBackgroundImageLayoutChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.BackgroundImageLayoutChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnBackgroundImageLayoutChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnBackgroundImageLayoutChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)
  id: OnBindingContextChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnBindingContextChanged(EventArgs)
  nameWithType: Control.OnBindingContextChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBindingContextChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.BindingContextChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnBindingContextChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnBindingContextChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnBindingContextChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  id: OnCausesValidationChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnCausesValidationChanged(EventArgs)
  nameWithType: Control.OnCausesValidationChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnCausesValidationChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.CausesValidationChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnCausesValidationChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_17_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_17_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_17_1.vb)]"
  syntax:
    content: protected virtual void OnCausesValidationChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnCausesValidationChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  id: OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnChangeUICues(UICuesEventArgs)
  nameWithType: Control.OnChangeUICues(UICuesEventArgs)
  fullName: System.Windows.Forms.Control.OnChangeUICues(UICuesEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.ChangeUICues&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnChangeUICues também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnChangeUICues (System.Windows.Forms.UICuesEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.UICuesEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.UICuesEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnChangeUICues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnClick(System.EventArgs)
  id: OnClick(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnClick(EventArgs)
  nameWithType: Control.OnClick(EventArgs)
  fullName: System.Windows.Forms.Control.OnClick(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Click&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnClick também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates overriding the OnClick method in a derived class. To run the example, paste the following code after a form class, in the same file. Add a textbox of type `SingleClickTextBox` to the form.  \n  \n [!code-cs[System.Windows.Forms.ControlOnClick#1](~/add/codesnippet/csharp/m-system.windows.forms.c_15_1.cs)]\n [!code-vb[System.Windows.Forms.ControlOnClick#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_15_1.vb)]\n [!code-cpp[System.Windows.Forms.ControlOnClick#1](~/add/codesnippet/cpp/m-system.windows.forms.c_15_1.cpp)]  \n  \n The following code example shows one of the many uses of the <xref:System.Windows.Forms.Control.Click> event and event handler.  \n  \n [!code-cpp[Control.FindForm#1](~/add/codesnippet/cpp/m-system.windows.forms.c_15_2.cpp)]\n [!code-vb[Control.FindForm#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_15_2.vb)]\n [!code-cs[Control.FindForm#1](~/add/codesnippet/csharp/m-system.windows.forms.c_15_2.cs)]"
  syntax:
    content: protected virtual void OnClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  id: OnClientSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnClientSizeChanged(EventArgs)
  nameWithType: Control.OnClientSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnClientSizeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.ClientSizeChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnClientSizeChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnClientSizeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnClientSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  id: OnContextMenuChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnContextMenuChanged(EventArgs)
  nameWithType: Control.OnContextMenuChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnContextMenuChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.ContextMenuChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnContextMenuChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_6_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_6_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_6_1.vb)]"
  syntax:
    content: protected virtual void OnContextMenuChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnContextMenuChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  id: OnContextMenuStripChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnContextMenuStripChanged(EventArgs)
  nameWithType: Control.OnContextMenuStripChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnContextMenuStripChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.ContextMenuStripChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnContextMenuStripChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnContextMenuStripChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnContextMenuStripChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  id: OnControlAdded(System.Windows.Forms.ControlEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnControlAdded(ControlEventArgs)
  nameWithType: Control.OnControlAdded(ControlEventArgs)
  fullName: System.Windows.Forms.Control.OnControlAdded(ControlEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.ControlAdded&quot;> </xref> eventos."
  remarks: "Chamado quando um controle filho é adicionado ao controle.       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnControlAdded também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example uses <xref:System.Windows.Forms.Control.ControlAdded> to add a control to a form and displays the name of the added control in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/cpp/0fc8c7fb-6974-4f10-8201-_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/visualbasic/0fc8c7fb-6974-4f10-8201-_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/csharp/0fc8c7fb-6974-4f10-8201-_1.cs)]"
  syntax:
    content: protected virtual void OnControlAdded (System.Windows.Forms.ControlEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.ControlEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.ControlEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnControlAdded*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  id: OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnControlRemoved(ControlEventArgs)
  nameWithType: Control.OnControlRemoved(ControlEventArgs)
  fullName: System.Windows.Forms.Control.OnControlRemoved(ControlEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.ControlRemoved&quot;> </xref> eventos."
  remarks: "Chamado quando um controle filho é removido do controle.       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnControlRemoved também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example uses <xref:System.Windows.Forms.Control.ControlRemoved> to remove a control from a form and displays the name of the removed control in a <xref:System.Windows.Forms.MessageBox>.  \n  \n [!code-cpp[Control.ControlRemoved#1](~/add/codesnippet/cpp/ab705c0a-755a-4539-b414-_1.cpp)]\n [!code-vb[Control.ControlRemoved#1](~/add/codesnippet/visualbasic/ab705c0a-755a-4539-b414-_1.vb)]\n [!code-cs[Control.ControlRemoved#1](~/add/codesnippet/csharp/ab705c0a-755a-4539-b414-_1.cs)]"
  syntax:
    content: protected virtual void OnControlRemoved (System.Windows.Forms.ControlEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.ControlEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.ControlEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnControlRemoved*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnCreateControl
  id: OnCreateControl
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnCreateControl()
  nameWithType: Control.OnCreateControl()
  fullName: System.Windows.Forms.Control.OnCreateControl()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref:System.Windows.Forms.Control.CreateControl*>método.</xref:System.Windows.Forms.Control.CreateControl*>"
  remarks: "O método OnCreateControl é chamado quando o controle é criado pela primeira vez.       O método OnCreateControl também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnCreateControl ();
    parameters: []
  overload: System.Windows.Forms.Control.OnCreateControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  id: OnCursorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnCursorChanged(EventArgs)
  nameWithType: Control.OnCursorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnCursorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.CursorChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnCursorChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_103_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_103_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_103_1.vb)]"
  syntax:
    content: protected virtual void OnCursorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnCursorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  id: OnDockChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnDockChanged(EventArgs)
  nameWithType: Control.OnDockChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnDockChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.DockChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnDockChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_25_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_25_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_25_1.vb)]"
  syntax:
    content: protected virtual void OnDockChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnDockChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  id: OnDoubleClick(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnDoubleClick(EventArgs)
  nameWithType: Control.OnDoubleClick(EventArgs)
  fullName: System.Windows.Forms.Control.OnDoubleClick(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.DoubleClick&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnDoubleClick também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.DoubleClick> event of a <xref:System.Windows.Forms.ListBox> to load text files listed in the <xref:System.Windows.Forms.ListBox> into a <xref:System.Windows.Forms.TextBox> control.  \n  \n [!code-cs[Control.DoubleClick#1](~/add/codesnippet/csharp/m-system.windows.forms.c_63_1.cs)]\n [!code-vb[Control.DoubleClick#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_63_1.vb)]\n [!code-cpp[Control.DoubleClick#1](~/add/codesnippet/cpp/m-system.windows.forms.c_63_1.cpp)]"
  syntax:
    content: protected virtual void OnDoubleClick (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  id: OnDragDrop(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnDragDrop(DragEventArgs)
  nameWithType: Control.OnDragDrop(DragEventArgs)
  fullName: System.Windows.Forms.Control.OnDragDrop(DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.DragDrop&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnDragDrop também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnDragDrop (System.Windows.Forms.DragEventArgs drgevent);
    parameters:
    - id: drgevent
      type: System.Windows.Forms.DragEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnDragDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  id: OnDragEnter(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnDragEnter(DragEventArgs)
  nameWithType: Control.OnDragEnter(DragEventArgs)
  fullName: System.Windows.Forms.Control.OnDragEnter(DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.DragEnter&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnDragEnter também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnDragEnter (System.Windows.Forms.DragEventArgs drgevent);
    parameters:
    - id: drgevent
      type: System.Windows.Forms.DragEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnDragEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  id: OnDragLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnDragLeave(EventArgs)
  nameWithType: Control.OnDragLeave(EventArgs)
  fullName: System.Windows.Forms.Control.OnDragLeave(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.DragLeave&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnDragLeave também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnDragLeave (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnDragLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  id: OnDragOver(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnDragOver(DragEventArgs)
  nameWithType: Control.OnDragOver(DragEventArgs)
  fullName: System.Windows.Forms.Control.OnDragOver(DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.DragOver&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnDragOver também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnDragOver (System.Windows.Forms.DragEventArgs drgevent);
    parameters:
    - id: drgevent
      type: System.Windows.Forms.DragEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnDragOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  id: OnEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnEnabledChanged(EventArgs)
  nameWithType: Control.OnEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnEnabledChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.EnabledChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnEnabledChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnEnabledChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnEnabledChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnEnter(System.EventArgs)
  id: OnEnter(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnEnter(EventArgs)
  nameWithType: Control.OnEnter(EventArgs)
  fullName: System.Windows.Forms.Control.OnEnter(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Enter&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método AoEntrar também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.Enter> event to change the foreground and background colors of a <xref:System.Windows.Forms.TextBox> under particular conditions.  \n  \n [!code-cs[Control.Enter#1](~/add/codesnippet/csharp/m-system.windows.forms.c_46_1.cs)]\n [!code-cpp[Control.Enter#1](~/add/codesnippet/cpp/m-system.windows.forms.c_46_1.cpp)]\n [!code-vb[Control.Enter#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_46_1.vb)]"
  syntax:
    content: protected virtual void OnEnter (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnFontChanged(System.EventArgs)
  id: OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnFontChanged(EventArgs)
  nameWithType: Control.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.FontChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnFontChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_104_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_104_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_104_1.vb)]"
  syntax:
    content: protected virtual void OnFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  id: OnForeColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnForeColorChanged(EventArgs)
  nameWithType: Control.OnForeColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnForeColorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.ForeColorChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnForeColorChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_23_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_23_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_23_1.vb)]"
  syntax:
    content: protected virtual void OnForeColorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnForeColorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  id: OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: Control.OnGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.Forms.Control.OnGiveFeedback(GiveFeedbackEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.GiveFeedback&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnGiveFeedback também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnGiveFeedback (System.Windows.Forms.GiveFeedbackEventArgs gfbevent);
    parameters:
    - id: gfbevent
      type: System.Windows.Forms.GiveFeedbackEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.GiveFeedbackEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnGiveFeedback*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  id: OnGotFocus(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnGotFocus(EventArgs)
  nameWithType: Control.OnGotFocus(EventArgs)
  fullName: System.Windows.Forms.Control.OnGotFocus(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.GotFocus&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método AoReceberFoco também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnGotFocus (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnGotFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)
  id: OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnHandleCreated(EventArgs)
  nameWithType: Control.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.Control.OnHandleCreated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.HandleCreated&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnHandleCreated também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnHandleCreated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnHandleCreated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)
  id: OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnHandleDestroyed(EventArgs)
  nameWithType: Control.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.Control.OnHandleDestroyed(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.HandleDestroyed&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnHandleDestroyed também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnHandleDestroyed (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnHandleDestroyed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  id: OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnHelpRequested(HelpEventArgs)
  nameWithType: Control.OnHelpRequested(HelpEventArgs)
  fullName: System.Windows.Forms.Control.OnHelpRequested(HelpEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.HelpRequested&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnHelpRequested também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnHelpRequested (System.Windows.Forms.HelpEventArgs hevent);
    parameters:
    - id: hevent
      type: System.Windows.Forms.HelpEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.HelpEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnHelpRequested*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  id: OnImeModeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnImeModeChanged(EventArgs)
  nameWithType: Control.OnImeModeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnImeModeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.ImeModeChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnImeModeChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_49_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_49_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_49_1.vb)]"
  syntax:
    content: protected virtual void OnImeModeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnImeModeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  id: OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnInvalidated(InvalidateEventArgs)
  nameWithType: Control.OnInvalidated(InvalidateEventArgs)
  fullName: System.Windows.Forms.Control.OnInvalidated(InvalidateEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Invalidated&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnInvalidated também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnInvalidated (System.Windows.Forms.InvalidateEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.InvalidateEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.InvalidateEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnInvalidated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  id: OnKeyDown(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnKeyDown(KeyEventArgs)
  nameWithType: Control.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.Forms.Control.OnKeyDown(KeyEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.KeyDown&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnKeyDown também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.KeyDown> event to determine the type of character entered into the control.  \n  \n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_108_1.vb)]\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/m-system.windows.forms.c_108_1.cpp)]\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/m-system.windows.forms.c_108_1.cs)]"
  syntax:
    content: protected virtual void OnKeyDown (System.Windows.Forms.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  id: OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnKeyPress(KeyPressEventArgs)
  nameWithType: Control.OnKeyPress(KeyPressEventArgs)
  fullName: System.Windows.Forms.Control.OnKeyPress(KeyPressEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.KeyPress&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnKeyPress também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.KeyPress> event to prevent characters from entering the control.  \n  \n [!code-vb[Control.KeyDown#1](~/add/codesnippet/visualbasic/5902b2b7-dc18-40a0-9d7e-_1.vb)]\n [!code-cpp[Control.KeyDown#1](~/add/codesnippet/cpp/5902b2b7-dc18-40a0-9d7e-_1.cpp)]\n [!code-cs[Control.KeyDown#1](~/add/codesnippet/csharp/5902b2b7-dc18-40a0-9d7e-_1.cs)]"
  syntax:
    content: protected virtual void OnKeyPress (System.Windows.Forms.KeyPressEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyPressEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.KeyPressEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnKeyPress*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  id: OnKeyUp(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnKeyUp(KeyEventArgs)
  nameWithType: Control.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.Forms.Control.OnKeyUp(KeyEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.KeyUp&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnKeyUp também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.KeyUp> event with the <xref:System.Windows.Forms.Help> class to display pop-up style help to the user.  \n  \n [!code-cpp[Control.KeyUp#1](~/add/codesnippet/cpp/m-system.windows.forms.c_112_1.cpp)]\n [!code-vb[Control.KeyUp#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_112_1.vb)]\n [!code-cs[Control.KeyUp#1](~/add/codesnippet/csharp/m-system.windows.forms.c_112_1.cs)]"
  syntax:
    content: protected virtual void OnKeyUp (System.Windows.Forms.KeyEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnKeyUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  id: OnLayout(System.Windows.Forms.LayoutEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnLayout(LayoutEventArgs)
  nameWithType: Control.OnLayout(LayoutEventArgs)
  fullName: System.Windows.Forms.Control.OnLayout(LayoutEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Layout&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnLayout também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnLayout (System.Windows.Forms.LayoutEventArgs levent);
    parameters:
    - id: levent
      type: System.Windows.Forms.LayoutEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.LayoutEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnLeave(System.EventArgs)
  id: OnLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnLeave(EventArgs)
  nameWithType: Control.OnLeave(EventArgs)
  fullName: System.Windows.Forms.Control.OnLeave(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Leave&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnLeave também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.Leave> event to reset a control to its former state.  \n  \n [!code-cs[Control.Enter#1](~/add/codesnippet/csharp/m-system.windows.forms.c_21_1.cs)]\n [!code-cpp[Control.Enter#1](~/add/codesnippet/cpp/m-system.windows.forms.c_21_1.cpp)]\n [!code-vb[Control.Enter#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_21_1.vb)]"
  syntax:
    content: protected virtual void OnLeave (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  id: OnLocationChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnLocationChanged(EventArgs)
  nameWithType: Control.OnLocationChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnLocationChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.LocationChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnLocationChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName* `Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_36_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_36_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_36_1.vb)]"
  syntax:
    content: protected virtual void OnLocationChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnLocationChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  id: OnLostFocus(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnLostFocus(EventArgs)
  nameWithType: Control.OnLostFocus(EventArgs)
  fullName: System.Windows.Forms.Control.OnLostFocus(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.LostFocus&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método AoPerderFoco também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnLostFocus (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnLostFocus*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  id: OnMarginChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMarginChanged(EventArgs)
  nameWithType: Control.OnMarginChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnMarginChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.MarginChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnMarginChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnMarginChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnMarginChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  id: OnMouseCaptureChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseCaptureChanged(EventArgs)
  nameWithType: Control.OnMouseCaptureChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseCaptureChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.MouseCaptureChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnMouseCaptureChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnMouseCaptureChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnMouseCaptureChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  id: OnMouseClick(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseClick(MouseEventArgs)
  nameWithType: Control.OnMouseClick(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseClick(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.MouseClick&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnMouseClick também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnMouseClick (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnMouseClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  id: OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseDoubleClick(MouseEventArgs)
  nameWithType: Control.OnMouseDoubleClick(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseDoubleClick(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.MouseDoubleClick&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnMouseDoubleClick também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnMouseDoubleClick (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnMouseDoubleClick*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  id: OnMouseDown(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseDown(MouseEventArgs)
  nameWithType: Control.OnMouseDown(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseDown(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.MouseDown&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnMouseDown também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnMouseDown (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnMouseDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  id: OnMouseEnter(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseEnter(EventArgs)
  nameWithType: Control.OnMouseEnter(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseEnter(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.MouseEnter&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnMouseEnter também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnMouseEnter (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnMouseEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  id: OnMouseHover(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseHover(EventArgs)
  nameWithType: Control.OnMouseHover(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseHover(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.MouseHover&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnMouseHover também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to override the OnMouseHover and <xref:System.Windows.Forms.Control.OnMouseMove%2A> methods in a derived class. To run the example, paste the following code in a new form and paste this class, forming the same file, after the form. Add a button of type `FunButton` to the form.  \n  \n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/add/codesnippet/cpp/m-system.windows.forms.c_74_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlDefaultProperties#2](~/add/codesnippet/csharp/m-system.windows.forms.c_74_1.cs)]\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_74_1.vb)]"
  syntax:
    content: protected virtual void OnMouseHover (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnMouseHover*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  id: OnMouseLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseLeave(EventArgs)
  nameWithType: Control.OnMouseLeave(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseLeave(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.MouseLeave&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnMouseLeave também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnMouseLeave (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnMouseLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  id: OnMouseMove(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseMove(MouseEventArgs)
  nameWithType: Control.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseMove(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.MouseMove&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnMouseMove também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example demonstrates how to override the <xref:System.Windows.Forms.Control.OnMouseHover%2A> and OnMouseMove methods in a derived class. To run the example, paste the following code in a new form and paste this class, forming the same file, after the form. Add a button of type `FunButton` to the form.  \n  \n [!code-cpp[System.Windows.Forms.ControlDefaultProperties#2](~/add/codesnippet/cpp/m-system.windows.forms.c_107_1.cpp)]\n [!code-cs[System.Windows.Forms.ControlDefaultProperties#2](~/add/codesnippet/csharp/m-system.windows.forms.c_107_1.cs)]\n [!code-vb[System.Windows.Forms.ControlDefaultProperties#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_107_1.vb)]"
  syntax:
    content: protected virtual void OnMouseMove (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnMouseMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  id: OnMouseUp(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseUp(MouseEventArgs)
  nameWithType: Control.OnMouseUp(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseUp(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.MouseUp&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnMouseUp também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnMouseUp (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnMouseUp*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  id: OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMouseWheel(MouseEventArgs)
  nameWithType: Control.OnMouseWheel(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseWheel(MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.MouseWheel&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnMouseWheel também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnMouseWheel (System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnMouseWheel*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnMove(System.EventArgs)
  id: OnMove(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnMove(EventArgs)
  nameWithType: Control.OnMove(EventArgs)
  fullName: System.Windows.Forms.Control.OnMove(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Move&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnMove também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example uses the <xref:System.Windows.Forms.Control.Move> event to display the location of the form in screen coordinates on the caption bar of the form.  \n  \n [!code-cpp[Control.Move#1](~/add/codesnippet/cpp/m-system.windows.forms.c_73_1.cpp)]\n [!code-vb[Control.Move#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_73_1.vb)]\n [!code-cs[Control.Move#1](~/add/codesnippet/csharp/m-system.windows.forms.c_73_1.cs)]"
  syntax:
    content: protected virtual void OnMove (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnMove*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  id: OnNotifyMessage(System.Windows.Forms.Message)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnNotifyMessage(Message)
  nameWithType: Control.OnNotifyMessage(Message)
  fullName: System.Windows.Forms.Control.OnNotifyMessage(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Notifica o controle de mensagens do Windows."
  remarks: "O método OnNotifyMessage é chamado se o controle `EnableNotifyMessage` bit de estilo é definido em <xref:System.Windows.Forms.ControlStyles>.</xref:System.Windows.Forms.ControlStyles> O `EnableNotifyMessage` de estilo em <xref:System.Windows.Forms.ControlStyles>permite que o controle a ser notificado quando o <xref:System.Windows.Forms.Control.WndProc%2A>método recebe uma mensagem do Windows.</xref:System.Windows.Forms.Control.WndProc%2A> </xref:System.Windows.Forms.ControlStyles> Com esse método, controles de confiança parcial podem escutar mensagens do Windows sem ativá-las modificar a mensagem."
  syntax:
    content: protected virtual void OnNotifyMessage (System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Um <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> que representa a mensagem do Windows."
  overload: System.Windows.Forms.Control.OnNotifyMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)
  id: OnPaddingChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnPaddingChanged(EventArgs)
  nameWithType: Control.OnPaddingChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnPaddingChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.PaddingChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnPaddingChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnPaddingChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnPaddingChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  id: OnPaint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnPaint(PaintEventArgs)
  nameWithType: Control.OnPaint(PaintEventArgs)
  fullName: System.Windows.Forms.Control.OnPaint(PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Paint&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnPaint também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on which it is dropped. The OnPaint method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting. The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback. The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data. Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=fullName> values are screen coordinates, the example uses the <xref:System.Windows.Forms.Control.PointToClient%2A> method to convert them to client coordinates.  \n  \n [!code-cs[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/csharp/m-system.windows.forms.c_57_1.cs)]\n [!code-cpp[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/cpp/m-system.windows.forms.c_57_1.cpp)]\n [!code-vb[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_57_1.vb)]  \n  \n [!code-cs[Control.Paint#1](~/add/codesnippet/csharp/m-system.windows.forms.c_57_2.cs)]\n [!code-cpp[Control.Paint#1](~/add/codesnippet/cpp/m-system.windows.forms.c_57_2.cpp)]\n [!code-vb[Control.Paint#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_57_2.vb)]"
  syntax:
    content: protected virtual void OnPaint (System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnPaint*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  id: OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnPaintBackground(PaintEventArgs)
  nameWithType: Control.OnPaintBackground(PaintEventArgs)
  fullName: System.Windows.Forms.Control.OnPaintBackground(PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pinta o plano de fundo do controle."
  remarks: "O método OnPaintBackground permite que classes derivadas lidar com solicitações de apagamento de plano de fundo do Windows."
  syntax:
    content: protected virtual void OnPaintBackground (System.Windows.Forms.PaintEventArgs pevent);
    parameters:
    - id: pevent
      type: System.Windows.Forms.PaintEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> que contém informações sobre o controle."
  overload: System.Windows.Forms.Control.OnPaintBackground*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  id: OnParentBackColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentBackColorChanged(EventArgs)
  nameWithType: Control.OnParentBackColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentBackColorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.BackColorChanged&quot;> </xref> eventos quando o <xref:System.Windows.Forms.Control.BackColor*>valor da propriedade de alterações de contêiner do controle.</xref:System.Windows.Forms.Control.BackColor*>"
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnParentBackColorChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_5_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_5_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_5_1.vb)]"
  syntax:
    content: protected virtual void OnParentBackColorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentBackColorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  id: OnParentBackgroundImageChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentBackgroundImageChanged(EventArgs)
  nameWithType: Control.OnParentBackgroundImageChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentBackgroundImageChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.BackgroundImageChanged&quot;> </xref> eventos quando o <xref:System.Windows.Forms.Control.BackgroundImage*>valor da propriedade de alterações de contêiner do controle.</xref:System.Windows.Forms.Control.BackgroundImage*>"
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnParentBackgroundImageChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed`that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_44_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_44_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_44_1.vb)]"
  syntax:
    content: protected virtual void OnParentBackgroundImageChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentBackgroundImageChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  id: OnParentBindingContextChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentBindingContextChanged(EventArgs)
  nameWithType: Control.OnParentBindingContextChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentBindingContextChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.BindingContextChanged&quot;> </xref> eventos quando o <xref:System.Windows.Forms.Control.BindingContext*>valor da propriedade de alterações de contêiner do controle.</xref:System.Windows.Forms.Control.BindingContext*>"
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnParentBindingContextChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed`that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_26_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_26_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_26_1.vb)]"
  syntax:
    content: protected virtual void OnParentBindingContextChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentBindingContextChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentChanged(System.EventArgs)
  id: OnParentChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentChanged(EventArgs)
  nameWithType: Control.OnParentChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.ParentChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnParentChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_38_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_38_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_38_1.vb)]"
  syntax:
    content: protected virtual void OnParentChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  id: OnParentCursorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentCursorChanged(EventArgs)
  nameWithType: Control.OnParentCursorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentCursorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.CursorChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnParentCursorChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnParentCursorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentCursorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  id: OnParentEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentEnabledChanged(EventArgs)
  nameWithType: Control.OnParentEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentEnabledChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.EnabledChanged&quot;> </xref> eventos quando o <xref:System.Windows.Forms.Control.Enabled*>valor da propriedade de alterações de contêiner do controle.</xref:System.Windows.Forms.Control.Enabled*>"
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnParentEnabledChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_93_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_93_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_93_1.vb)]"
  syntax:
    content: protected virtual void OnParentEnabledChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentEnabledChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  id: OnParentFontChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentFontChanged(EventArgs)
  nameWithType: Control.OnParentFontChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentFontChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.FontChanged&quot;> </xref> eventos quando o <xref:System.Windows.Forms.Control.Font*>valor da propriedade de alterações de contêiner do controle.</xref:System.Windows.Forms.Control.Font*>"
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnParentFontChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_48_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_48_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_48_1.vb)]"
  syntax:
    content: protected virtual void OnParentFontChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentFontChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  id: OnParentForeColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentForeColorChanged(EventArgs)
  nameWithType: Control.OnParentForeColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentForeColorChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.ForeColorChanged&quot;> </xref> eventos quando o <xref:System.Windows.Forms.Control.ForeColor*>valor da propriedade de alterações de contêiner do controle.</xref:System.Windows.Forms.Control.ForeColor*>"
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnParentForeColorChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_113_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_113_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_113_1.vb)]"
  syntax:
    content: protected virtual void OnParentForeColorChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentForeColorChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  id: OnParentRightToLeftChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentRightToLeftChanged(EventArgs)
  nameWithType: Control.OnParentRightToLeftChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentRightToLeftChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.RightToLeftChanged&quot;> </xref> eventos quando o <xref:System.Windows.Forms.Control.RightToLeft*>valor da propriedade de alterações de contêiner do controle.</xref:System.Windows.Forms.Control.RightToLeft*>"
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnParentRightToLeftChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_62_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_62_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_62_1.vb)]"
  syntax:
    content: protected virtual void OnParentRightToLeftChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentRightToLeftChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  id: OnParentVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnParentVisibleChanged(EventArgs)
  nameWithType: Control.OnParentVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentVisibleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.VisibleChanged&quot;> </xref> eventos quando o <xref:System.Windows.Forms.Control.Visible*>valor da propriedade de alterações de contêiner do controle.</xref:System.Windows.Forms.Control.Visible*>"
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnParentVisibleChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_41_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_41_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_41_1.vb)]"
  syntax:
    content: protected virtual void OnParentVisibleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnParentVisibleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  id: OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnPreviewKeyDown(PreviewKeyDownEventArgs)
  nameWithType: Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)
  fullName: System.Windows.Forms.Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.PreviewKeyDown&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnPreviewKeyDown também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnPreviewKeyDown (System.Windows.Forms.PreviewKeyDownEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.PreviewKeyDownEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.PreviewKeyDownEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnPreviewKeyDown*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  id: OnPrint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnPrint(PaintEventArgs)
  nameWithType: Control.OnPrint(PaintEventArgs)
  fullName: System.Windows.Forms.Control.OnPrint(PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Paint&quot;> </xref> eventos."
  remarks: "Se o `UserPaint` um pouco do <xref:System.Windows.Forms.ControlStyles>estiver definido, você pode substituir OnPrint para fazer a pintura em camadas.</xref:System.Windows.Forms.ControlStyles> Consulte <xref:System.Windows.Forms.Control.SetStyle%2A>para obter mais informações.</xref:System.Windows.Forms.Control.SetStyle%2A>"
  syntax:
    content: protected virtual void OnPrint (System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnPrint*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>e</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  id: OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: Control.OnQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.Forms.Control.OnQueryContinueDrag(QueryContinueDragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.QueryContinueDrag&quot;> </xref> eventos."
  remarks: "Depois de iniciada arrastando, este método é chamado repetidamente pelo [!INCLUDE[dnprdnshort](~/add/includes/dnprdnshort-md.md)] até que a operação de arrastar seja cancelada ou concluída.      > [!NOTE] > Substituir este método se você quiser alterar o ponto no qual arrastar foi cancelada ou em que ocorre uma queda.       Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnQueryContinueDrag também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnQueryContinueDrag (System.Windows.Forms.QueryContinueDragEventArgs qcdevent);
    parameters:
    - id: qcdevent
      type: System.Windows.Forms.QueryContinueDragEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.QueryContinueDragEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.OnQueryContinueDrag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  id: OnRegionChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnRegionChanged(EventArgs)
  nameWithType: Control.OnRegionChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnRegionChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.RegionChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnRegionChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnRegionChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnRegionChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnResize(System.EventArgs)
  id: OnResize(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnResize(EventArgs)
  nameWithType: Control.OnResize(EventArgs)
  fullName: System.Windows.Forms.Control.OnResize(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Resize&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnResize também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnResize (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnResize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)
  id: OnRightToLeftChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnRightToLeftChanged(EventArgs)
  nameWithType: Control.OnRightToLeftChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnRightToLeftChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.RightToLeftChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnRightToLeftChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_52_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_52_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_52_1.vb)]"
  syntax:
    content: protected virtual void OnRightToLeftChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnRightToLeftChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  id: OnSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnSizeChanged(EventArgs)
  nameWithType: Control.OnSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnSizeChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.SizeChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnSizeChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSizeChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnSizeChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  id: OnStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnStyleChanged(EventArgs)
  nameWithType: Control.OnStyleChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnStyleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.StyleChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnStyleChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnStyleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnStyleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  id: OnSystemColorsChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnSystemColorsChanged(EventArgs)
  nameWithType: Control.OnSystemColorsChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnSystemColorsChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.SystemColorsChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnSystemColorsChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnSystemColorsChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnSystemColorsChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  id: OnTabIndexChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnTabIndexChanged(EventArgs)
  nameWithType: Control.OnTabIndexChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnTabIndexChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.TabIndexChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnTabIndexChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnTabIndexChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnTabIndexChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  id: OnTabStopChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnTabStopChanged(EventArgs)
  nameWithType: Control.OnTabStopChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnTabStopChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.TabStopChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnTabStopChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_13_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_13_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_13_1.vb)]"
  syntax:
    content: protected virtual void OnTabStopChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnTabStopChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnTextChanged(System.EventArgs)
  id: OnTextChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnTextChanged(EventArgs)
  nameWithType: Control.OnTextChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnTextChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.TextChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnTextChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_88_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_88_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_88_1.vb)]"
  syntax:
    content: protected virtual void OnTextChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnTextChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnValidated(System.EventArgs)
  id: OnValidated(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnValidated(EventArgs)
  nameWithType: Control.OnValidated(EventArgs)
  fullName: System.Windows.Forms.Control.OnValidated(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Validated&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnValidated também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnValidated (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnValidated*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  id: OnValidating(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnValidating(CancelEventArgs)
  nameWithType: Control.OnValidating(CancelEventArgs)
  fullName: System.Windows.Forms.Control.OnValidating(CancelEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.Validating&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnValidating também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  syntax:
    content: protected virtual void OnValidating (System.ComponentModel.CancelEventArgs e);
    parameters:
    - id: e
      type: System.ComponentModel.CancelEventArgs
      description: "Um <xref:System.ComponentModel.CancelEventArgs>que contém os dados de evento.</xref:System.ComponentModel.CancelEventArgs>"
  overload: System.Windows.Forms.Control.OnValidating*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)
  id: OnVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: OnVisibleChanged(EventArgs)
  nameWithType: Control.OnVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnVisibleChanged(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.VisibleChanged&quot;> </xref> eventos."
  remarks: "Gerar um evento invoca o manipulador de eventos por meio de um representante. Para obter mais informações, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md).       O método OnVisibleChanged também permite que classes derivadas manipular o evento sem anexar um representante. Isso é a técnica preferida para manipular o evento em uma classe derivada."
  example:
  - "The following code example is an event-raising method that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern `On`*PropertyName*`Changed` that raise the corresponding *PropertyName*`Changed` event when the *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> derived class displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a class that derives from the <xref:System.Windows.Forms.TextBox> class.  \n  \n [!code-cpp[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/cpp/m-system.windows.forms.c_11_1.cpp)]\n [!code-cs[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/csharp/m-system.windows.forms.c_11_1.cs)]\n [!code-vb[Windows.Forms.Control_OnPropertyChangedEvents#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_11_1.vb)]"
  syntax:
    content: protected virtual void OnVisibleChanged (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.OnVisibleChanged*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Padding
  id: Padding
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Padding
  nameWithType: Control.Padding
  fullName: System.Windows.Forms.Control.Padding
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o preenchimento dentro do controle."
  remarks: "Para contêineres, como <xref:System.Windows.Forms.GroupBox>e <xref:System.Windows.Forms.TabControl>, a propriedade Padding obtém ou define suas respectivas <xref:System.Windows.Forms.Control.DisplayRectangle%2A>Propriedades.</xref:System.Windows.Forms.Control.DisplayRectangle%2A> </xref:System.Windows.Forms.TabControl> </xref:System.Windows.Forms.GroupBox> O <xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=fullName>propriedade é igual à sua propriedade de preenchimento.</xref:System.Windows.Forms.ScrollableControl.DockPadding%2A?displayProperty=fullName>       Controles de recebimento padrão, os valores de preenchimento que são razoavelmente próximos diretrizes de interface de usuário do Windows. Alguns ajustes ainda podem ser necessários para aplicativos específicos.       Todos os controles que implementam <xref:System.Windows.Forms.Control.GetPreferredSize%2A>são ampliadas pela quantidade de preenchimento quando <xref:System.Windows.Forms.Control.AutoSize%2A>é `true`.</xref:System.Windows.Forms.Control.AutoSize%2A> </xref:System.Windows.Forms.Control.GetPreferredSize%2A>       Os seguintes controles não usar o preenchimento:-controles que não implementam <xref:System.Windows.Forms.Control.AutoSize%2A>por meio de <xref:System.Windows.Forms.Control.GetPreferredSize%2A>-controles personalizados que herdam diretamente de <xref:System.Windows.Forms.Control>- <xref:System.Windows.Forms.AxHost>- <xref:System.Windows.Forms.ComboBox>- <xref:System.Windows.Forms.DataGridView>- <xref:System.Windows.Forms.DateTimePicker>- <xref:System.Windows.Forms.HScrollBar>- <xref:System.Windows.Forms.ListView>- <xref:System.Windows.Forms.MaskedTextBox>- <xref:System.Windows.Forms.MonthCalendar>- <xref:System.Windows.Forms.ProgressBar>- <xref:System.Windows.Forms.PropertyGrid>- <xref:System.Windows.Forms.RichTextBox>- <xref:System.Windows.Forms.SplitContainer>- <xref:System.Windows.Forms.TextBox>- <xref:System.Windows.Forms.TextBoxBase>- <xref:System.Windows.Forms.TreeView>- <xref:System.Windows.Forms.VScrollBar>- <xref:System.Windows.Forms.WebBrowser></xref:System.Windows.Forms.WebBrowser> </xref:System.Windows.Forms.VScrollBar> </xref:System.Windows.Forms.TreeView> </xref:System.Windows.Forms.TextBoxBase> </xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.SplitContainer> </xref:System.Windows.Forms.RichTextBox> </xref:System.Windows.Forms.PropertyGrid> </xref:System.Windows.Forms.ProgressBar> </xref:System.Windows.Forms.MonthCalendar> </xref:System.Windows.Forms.MaskedTextBox> </xref:System.Windows.Forms.ListView> </xref:System.Windows.Forms.HScrollBar> </xref:System.Windows.Forms.DateTimePicker> </xref:System.Windows.Forms.DataGridView> </xref:System.Windows.Forms.ComboBox> </xref:System.Windows.Forms.AxHost> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control.GetPreferredSize%2A> </xref:System.Windows.Forms.Control.AutoSize%2A>"
  syntax:
    content: public System.Windows.Forms.Padding Padding { get; set; }
    return:
      type: System.Windows.Forms.Padding
      description: "Um <xref href=&quot;System.Windows.Forms.Padding&quot;> </xref> representar características de espaçamento interno do controle."
  overload: System.Windows.Forms.Control.Padding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PaddingChanged
  id: PaddingChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PaddingChanged
  nameWithType: Control.PaddingChanged
  fullName: System.Windows.Forms.Control.PaddingChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle do preenchimento de alterações."
  remarks: "Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the PaddingChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the PaddingChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#41](~/add/codesnippet/csharp/e-system.windows.forms.c_29_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#41](~/add/codesnippet/visualbasic/e-system.windows.forms.c_29_1.vb)]"
  syntax:
    content: public event EventHandler PaddingChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Paint
  id: Paint
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Paint
  nameWithType: Control.Paint
  fullName: System.Windows.Forms.Control.Paint
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle é redesenhado."
  remarks: "O evento de pintura é gerado quando o controle é redesenhado. Ele passa uma instância de <xref:System.Windows.Forms.PaintEventArgs>para o método que manipula o evento de pintura.</xref:System.Windows.Forms.PaintEventArgs>       Ao criar um novo controle personalizado ou um controle herdado com uma aparência diferente, você deve fornecer o código para processar o controle, substituindo o <xref:System.Windows.Forms.Control.OnPaint%2A>método.</xref:System.Windows.Forms.Control.OnPaint%2A> Para obter mais informações, consulte [substituindo o método OnPaint](~/add/includes/ajax-current-ext-md.md) e [personalizado controle pintura e renderização](~/add/includes/ajax-current-ext-md.md).       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example creates a <xref:System.Windows.Forms.PictureBox> control on the form and uses the Paint event to draw to it.  \n  \n [!code-cs[Control.Paint#1](~/add/codesnippet/csharp/e-system.windows.forms.c_26_1.cs)]\n [!code-cpp[Control.Paint#1](~/add/codesnippet/cpp/e-system.windows.forms.c_26_1.cpp)]\n [!code-vb[Control.Paint#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_26_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.PaintEventHandler Paint;
    return:
      type: System.Windows.Forms.PaintEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Parent
  id: Parent
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Parent
  nameWithType: Control.Parent
  fullName: System.Windows.Forms.Control.Parent
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o contêiner pai do controle."
  remarks: "Definindo o valor da propriedade pai como `null` remove o controle a partir de <xref:System.Windows.Forms.Control.ControlCollection>do controle pai atual.</xref:System.Windows.Forms.Control.ControlCollection>"
  example:
  - "The following code example uses the Parent property and the <xref:System.Windows.Forms.Control.FindForm%2A> method to set properties on the parent control of a button and its form.  \n  \n [!code-cpp[Control.FindForm#1](~/add/codesnippet/cpp/p-system.windows.forms.c_75_1.cpp)]\n [!code-vb[Control.FindForm#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_75_1.vb)]\n [!code-cs[Control.FindForm#1](~/add/codesnippet/csharp/p-system.windows.forms.c_75_1.cs)]"
  syntax:
    content: public System.Windows.Forms.Control Parent { get; set; }
    return:
      type: System.Windows.Forms.Control
      description: "Um <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> que representa o controle pai ou o contêiner do controle."
  overload: System.Windows.Forms.Control.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ParentChanged
  id: ParentChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ParentChanged
  nameWithType: Control.ParentChanged
  fullName: System.Windows.Forms.Control.ParentChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.Parent*>alterações de valor de propriedade.</xref:System.Windows.Forms.Control.Parent*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.Parent%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.Parent%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  syntax:
    content: public event EventHandler ParentChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PerformLayout
  id: PerformLayout
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PerformLayout()
  nameWithType: Control.PerformLayout()
  fullName: System.Windows.Forms.Control.PerformLayout()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Força o controle a aplicar lógica de layout para todos os seus controles filhos."
  remarks: "Se o <xref:System.Windows.Forms.Control.SuspendLayout%2A>método foi chamado antes de chamar o método PerformLayout, o <xref:System.Windows.Forms.Control.Layout>evento será suprimido.</xref:System.Windows.Forms.Control.Layout> </xref:System.Windows.Forms.Control.SuspendLayout%2A>       O <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A>e <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>Propriedades do <xref:System.Windows.Forms.LayoutEventArgs>criados são definidos para `null` se nenhum valor foi fornecido quando o método PerformLayout foi chamado.</xref:System.Windows.Forms.LayoutEventArgs> </xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> </xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A>"
  example:
  - "The following code example demonstrates how to use the PerformLayout method. It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised. In this example, the `Click` event handler for `Button1` explicitly calls PerformLayout. The `Click` event handler for `Button2` implicitly calls PerformLayout. PerformLayout is also called when the form is loaded. `Button3` returns the control to the state it was in when loaded. In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.  \n  \n This is a complete example. To run the example, paste the following code in a blank form.  \n  \n [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/add/codesnippet/cpp/m-system.windows.forms.c_101_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_101_1.vb)]\n [!code-cs[System.Windows.Forms.Control.PerformLayout#1](~/add/codesnippet/csharp/m-system.windows.forms.c_101_1.cs)]"
  syntax:
    content: public void PerformLayout ();
    parameters: []
  overload: System.Windows.Forms.Control.PerformLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  id: PerformLayout(System.Windows.Forms.Control,System.String)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PerformLayout(Control,String)
  nameWithType: Control.PerformLayout(Control,String)
  fullName: System.Windows.Forms.Control.PerformLayout(Control,String)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Força o controle a aplicar lógica de layout para todos os seus controles filhos."
  remarks: "Se o <xref:System.Windows.Forms.Control.SuspendLayout%2A>método foi chamado antes de chamar o <xref:System.Windows.Forms.Control.PerformLayout%2A>método, o <xref:System.Windows.Forms.Control.Layout>evento será suprimido.</xref:System.Windows.Forms.Control.Layout> </xref:System.Windows.Forms.Control.PerformLayout%2A> </xref:System.Windows.Forms.Control.SuspendLayout%2A>       O `affectedControl` e `affectedProperty` parâmetros podem ser definidos como `null`. Fazer assim faz com que o <xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A>e <xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A>Propriedades do <xref:System.Windows.Forms.LayoutEventArgs>criado para ser definido como `null`.</xref:System.Windows.Forms.LayoutEventArgs> </xref:System.Windows.Forms.LayoutEventArgs.AffectedProperty%2A> </xref:System.Windows.Forms.LayoutEventArgs.AffectedControl%2A>"
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.PerformLayout%2A> method. It also demonstrates ways in which the <xref:System.Windows.Forms.Control.Layout> event is raised. In this example, the `Click` event handler for `Button1` explicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>. The `Click` event handler for `Button2` implicitly calls <xref:System.Windows.Forms.Control.PerformLayout%2A>. <xref:System.Windows.Forms.Control.PerformLayout%2A> is also called when the form is loaded. `Button3` returns the control to the state it was in when loaded. In each case, the <xref:System.Windows.Forms.Control.Layout> event is raised.  \n  \n This is a complete example. To run the example, paste the following code in a blank form.  \n  \n [!code-cpp[System.Windows.Forms.Control.PerformLayout#1](~/add/codesnippet/cpp/dd503f2e-2328-4789-9d52-_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.PerformLayout#1](~/add/codesnippet/visualbasic/dd503f2e-2328-4789-9d52-_1.vb)]\n [!code-cs[System.Windows.Forms.Control.PerformLayout#1](~/add/codesnippet/csharp/dd503f2e-2328-4789-9d52-_1.cs)]"
  syntax:
    content: public void PerformLayout (System.Windows.Forms.Control affectedControl, string affectedProperty);
    parameters:
    - id: affectedControl
      type: System.Windows.Forms.Control
      description: "Um <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> que representa a última alterado controle."
    - id: affectedProperty
      type: System.String
      description: "O nome da propriedade alterada mais recentemente no controle."
  overload: System.Windows.Forms.Control.PerformLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  id: PointToClient(System.Drawing.Point)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PointToClient(Point)
  nameWithType: Control.PointToClient(Point)
  fullName: System.Windows.Forms.Control.PointToClient(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Calcula o local do ponto de tela especificada nas coordenadas do cliente."
  remarks: ''
  example:
  - "The following code example enables the user to drag an image or image file onto the form, and have it be displayed at the point on it is dropped. The <xref:System.Windows.Forms.Control.OnPaint%2A> method is overridden to repaint the image each time the form is painted; otherwise the image would only persist until the next repainting. The <xref:System.Windows.Forms.Control.DragEnter> event-handling method determines the type of data being dragged into the form and provides the appropriate feedback. The <xref:System.Windows.Forms.Control.DragDrop> event-handling method displays the image on the form, if an <xref:System.Drawing.Image> can be created from the data. Because the <xref:System.Windows.Forms.DragEventArgs.X%2A?displayProperty=fullName> and <xref:System.Windows.Forms.DragEventArgs.Y%2A?displayProperty=fullName> values are screen coordinates, the example uses the PointToClient method to convert them to client coordinates.  \n  \n [!code-cs[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/csharp/m-system.windows.forms.c_84_1.cs)]\n [!code-cpp[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/cpp/m-system.windows.forms.c_84_1.cpp)]\n [!code-vb[Windows.Forms.Control.DragOperations#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_84_1.vb)]"
  syntax:
    content: public System.Drawing.Point PointToClient (System.Drawing.Point p);
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "A coordenada da tela <xref href=&quot;System.Drawing.Point&quot;> </xref> para converter."
    return:
      type: System.Drawing.Point
      description: "Um <xref href=&quot;System.Drawing.Point&quot;> </xref> que representa o objeto <xref href=&quot;System.Drawing.Point&quot;> </xref>, <code> p </code>, nas coordenadas do cliente."
  overload: System.Windows.Forms.Control.PointToClient*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  id: PointToScreen(System.Drawing.Point)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PointToScreen(Point)
  nameWithType: Control.PointToScreen(Point)
  fullName: System.Windows.Forms.Control.PointToScreen(Point)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Calcula o local do ponto de cliente especificado em coordenadas da tela."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, <xref:System.Windows.Forms.Control.RectangleToScreen%2A>, PointToScreen, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=fullName>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=fullName> members. To run the example, paste the following code in a form called Form1 containing several controls. This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.  \n  \n [!code-cs[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/csharp/m-system.windows.forms.c_35_1.cs)]\n [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/cpp/m-system.windows.forms.c_35_1.cpp)]\n [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_35_1.vb)]"
  syntax:
    content: public System.Drawing.Point PointToScreen (System.Drawing.Point p);
    parameters:
    - id: p
      type: System.Drawing.Point
      description: "A coordenada de cliente <xref href=&quot;System.Drawing.Point&quot;> </xref> para converter."
    return:
      type: System.Drawing.Point
      description: "Um <xref href=&quot;System.Drawing.Point&quot;> </xref> que representa o objeto <xref href=&quot;System.Drawing.Point&quot;> </xref>, <code> p </code>, em coordenadas de tela."
  overload: System.Windows.Forms.Control.PointToScreen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PreferredSize
  id: PreferredSize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PreferredSize
  nameWithType: Control.PreferredSize
  fullName: System.Windows.Forms.Control.PreferredSize
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o tamanho de uma área retangular na qual o controle pode conter."
  syntax:
    content: public System.Drawing.Size PreferredSize { get; }
    return:
      type: System.Drawing.Size
      description: "Um <xref href=&quot;System.Drawing.Size&quot;> </xref> que contém a altura e largura em pixels."
  overload: System.Windows.Forms.Control.PreferredSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  id: PreProcessControlMessage(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PreProcessControlMessage(Message)
  nameWithType: Control.PreProcessControlMessage(Message)
  fullName: System.Windows.Forms.Control.PreProcessControlMessage(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pré-processa teclado ou mensagens de entrada dentro do loop de mensagem antes de serem distribuídos."
  syntax:
    content: public System.Windows.Forms.PreProcessControlState PreProcessControlMessage (ref System.Windows.Forms.Message msg);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "Um <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> que representa a mensagem para processar."
    return:
      type: System.Windows.Forms.PreProcessControlState
      description: "One of the <xref href=&quot;System.Windows.Forms.PreProcessControlState&quot;></xref> values, depending on whether <>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref> and whether <>*> or <xref:System.Windows.Forms.Control.IsInputChar*> are <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> or <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>.</xref:System.Windows.Forms.Control.IsInputChar*>"
  overload: System.Windows.Forms.Control.PreProcessControlMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  id: PreProcessMessage(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PreProcessMessage(Message)
  nameWithType: Control.PreProcessMessage(Message)
  fullName: System.Windows.Forms.Control.PreProcessMessage(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Pré-processa teclado ou mensagens de entrada dentro do loop de mensagem antes de serem distribuídos."
  remarks: "PreProcessMessage é chamado pelo loop de mensagens do aplicativo para mensagens de entrada de pré-processamento antes de serem distribuídos. Os valores possíveis para a `msg` parâmetro são WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR e WM_SYSCHAR.       Ao substituir PreProcessMessage, um controle deve retornar `true` para indicar que ele processou a mensagem. Para mensagens que não são processadas pelo controle, o resultado de `base.PreProcessMessage` devem ser retornados. Controles normalmente substituirá um dos métodos mais especializados, como <xref:System.Windows.Forms.Control.IsInputChar%2A>, <xref:System.Windows.Forms.Control.IsInputKey%2A>, <xref:System.Windows.Forms.Control.ProcessCmdKey%2A>, <xref:System.Windows.Forms.Control.ProcessDialogChar%2A>, ou <xref:System.Windows.Forms.Control.ProcessDialogKey%2A>em vez de substituir PreProcessMessage.</xref:System.Windows.Forms.Control.ProcessDialogKey%2A> </xref:System.Windows.Forms.Control.ProcessDialogChar%2A> </xref:System.Windows.Forms.Control.ProcessCmdKey%2A> </xref:System.Windows.Forms.Control.IsInputKey%2A> </xref:System.Windows.Forms.Control.IsInputChar%2A>"
  syntax:
    content: public virtual bool PreProcessMessage (ref System.Windows.Forms.Message msg);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "Um <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, passada por referência, que representa a mensagem para processar. Os valores possíveis são WM_KEYDOWN, WM_SYSKEYDOWN, WM_CHAR e WM_SYSCHAR."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a mensagem foi processada pelo controle; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.PreProcessMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PreviewKeyDown
  id: PreviewKeyDown
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PreviewKeyDown
  nameWithType: Control.PreviewKeyDown
  fullName: System.Windows.Forms.Control.PreviewKeyDown
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre antes do <xref href=&quot;System.Windows.Forms.Control.KeyDown&quot;> </xref> eventos quando uma tecla é pressionada enquanto o foco está neste controle."
  remarks: "Alguns pressionamentos de teclas, como guia, RETURN, ESC e teclas de direção, normalmente são ignorados por alguns controles porque eles não são considerados entrados pressionamentos de teclas. Por exemplo, por padrão, um <xref:System.Windows.Controls.Button>controle ignora as teclas de direção.</xref:System.Windows.Controls.Button> Pressionar as teclas de direção normalmente faz com que o foco seja movido para o próximo ou anterior. As teclas de direção são consideradas teclas de navegação e pressionando essas chaves normalmente dispara o <xref:System.Windows.Forms.Control.KeyDown>evento para<xref:System.Windows.Controls.Button>.</xref:System.Windows.Controls.Button> </xref:System.Windows.Forms.Control.KeyDown> No entanto, a seta chaves para um <xref:System.Windows.Controls.Button>Gerar o evento PreviewKeyDown.</xref:System.Windows.Controls.Button> Ao manipular o evento PreviewKeyDown para um <xref:System.Windows.Controls.Button>e configuração o <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A>propriedade `true`, você pode gerar o <xref:System.Windows.Forms.Control.KeyDown>evento quando pressionadas as teclas de direção.</xref:System.Windows.Forms.Control.KeyDown> </xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> </xref:System.Windows.Controls.Button> No entanto, se você lidar com as teclas de direção, o foco não será movido para o controle anterior ou próximo.       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates a <xref:System.Windows.Forms.Button> that includes a <xref:System.Windows.Forms.ContextMenuStrip>. When the <xref:System.Windows.Forms.Button> has the focus and you press the UP ARROW or DOWN ARROW keys, the <xref:System.Windows.Forms.ContextMenuStrip> appears. The PreviewKeyDown event handler detects when the UP ARROW or DOWN ARROW keys are pressed and sets the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property to `true`. This raises the <xref:System.Windows.Forms.Control.KeyDown> event so that you can display the <xref:System.Windows.Forms.ContextMenuStrip>. You should not put any logic in the PreviewKeyDown event handler, other than to set the <xref:System.Windows.Forms.PreviewKeyDownEventArgs.IsInputKey%2A> property. Instead, you should put your logic in the <xref:System.Windows.Forms.Control.KeyDown> event handler.  \n  \n [!code-cs[System.Windows.Forms.Control.PreviewKeyDown#1](~/add/codesnippet/csharp/e-system.windows.forms.c_64_1.cs)]\n [!code-vb[System.Windows.Forms.Control.PreviewKeyDown#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_64_1.vb)]"
  syntax:
    content: public event System.Windows.Forms.PreviewKeyDownEventHandler PreviewKeyDown;
    return:
      type: System.Windows.Forms.PreviewKeyDownEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  id: ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessCmdKey(Message,Keys)
  nameWithType: Control.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.Control.ProcessCmdKey(Message,Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processa uma chave de comando."
  remarks: "Este método é chamado durante o pré-processamento de mensagem para manipular as teclas de comando. As chaves de comando são chaves que sempre têm precedência sobre as chaves de entrada regulares. Aceleradores e atalhos do menu são exemplos de teclas de comando. O método deve retornar `true` para indicar que ele processou a chave de comando, ou `false` para indicar que a chave não é uma chave de comando. Este método é chamado apenas quando o controle é hospedado em um aplicativo Windows Forms ou como um controle ActiveX.       O método ProcessCmdKey primeiro determina se o controle tem um <xref:System.Windows.Forms.ContextMenu>e nesse caso, permite que o <xref:System.Windows.Forms.ContextMenu>para processar a chave de comando.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.ContextMenu> Se a chave de comando não é um atalho do menu e o controle tem um pai, a chave é passada para o método de ProcessCmdKey do pai. O efeito líquido é comando chaves &quot;transferidas&quot; até a hierarquia de controle. Além da chave que o usuário pressionou, os dados de chave também indicam que, se houver, teclas modificadoras foram pressionadas no mesmo momento que a chave. Teclas modificadoras incluem as teclas SHIFT, CTRL e ALT."
  syntax:
    content: protected virtual bool ProcessCmdKey (ref System.Windows.Forms.Message msg, System.Windows.Forms.Keys keyData);
    parameters:
    - id: msg
      type: System.Windows.Forms.Message
      description: "Um <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, passada por referência, que representa a mensagem de janela para processar."
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "Uma da <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> valores que representa a chave para processar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o caractere foi processado pelo controle; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ProcessCmdKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  id: ProcessDialogChar(System.Char)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessDialogChar(Char)
  nameWithType: Control.ProcessDialogChar(Char)
  fullName: System.Windows.Forms.Control.ProcessDialogChar(Char)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processa um caractere de caixa de diálogo."
  remarks: "Esse método é chamado durante o pré-processamento para lidar com caracteres de caixa de diálogo, como mnemônicos de controle de mensagens. Este método é chamado somente se o <xref:System.Windows.Forms.Control.IsInputChar%2A>método indica que o controle não está processando o caractere.</xref:System.Windows.Forms.Control.IsInputChar%2A> O método ProcessDialogChar simplesmente envia o caractere para o método de ProcessDialogChar do pai ou retorna `false` se o controle não tem nenhum pai. O <xref:System.Windows.Forms.Form>classe substitui esse método para executar o processamento real de caracteres da caixa de diálogo.</xref:System.Windows.Forms.Form> Este método é chamado apenas quando o controle é hospedado em um aplicativo Windows Forms ou como um controle ActiveX."
  syntax:
    content: protected virtual bool ProcessDialogChar (char charCode);
    parameters:
    - id: charCode
      type: System.Char
      description: "O caractere a ser processado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o caractere foi processado pelo controle; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ProcessDialogChar*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)
  id: ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessDialogKey(Keys)
  nameWithType: Control.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.Control.ProcessDialogKey(Keys)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processa uma chave de caixa de diálogo."
  remarks: "Este método é chamado durante o pré-processamento de mensagem para lidar com caracteres de caixa de diálogo, como chaves de tabulação, ESC, seta e retorno. Este método é chamado somente se o <xref:System.Windows.Forms.Control.IsInputKey%2A>método indica que o controle não está processando a chave.</xref:System.Windows.Forms.Control.IsInputKey%2A> O ProcessDialogKey simplesmente envia o caractere para o método de ProcessDialogKey do pai ou retorna `false`se o controle não tem nenhum pai. O <xref:System.Windows.Forms.Form>classe substitui esse método para executar o processamento real das caixas de diálogo.</xref:System.Windows.Forms.Form> Este método é chamado apenas quando o controle é hospedado em um aplicativo Windows Forms ou como um controle ActiveX."
  syntax:
    content: protected virtual bool ProcessDialogKey (System.Windows.Forms.Keys keyData);
    parameters:
    - id: keyData
      type: System.Windows.Forms.Keys
      description: "Uma da <xref href=&quot;System.Windows.Forms.Keys&quot;> </xref> valores que representa a chave para processar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a chave foi processada pelo controle; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ProcessDialogKey*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  id: ProcessKeyEventArgs(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessKeyEventArgs(Message)
  nameWithType: Control.ProcessKeyEventArgs(Message)
  fullName: System.Windows.Forms.Control.ProcessKeyEventArgs(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processa uma mensagem de tecla e gera os eventos de controle apropriado."
  remarks: "Esse método é chamado quando um controle recebe uma mensagem do teclado. O método é responsável por gerar os eventos de chave apropriados para a mensagem chamando o <xref:System.Windows.Forms.Control.OnKeyPress%2A>, <xref:System.Windows.Forms.Control.OnKeyDown%2A>, ou <xref:System.Windows.Forms.Control.OnKeyUp%2A>métodos.</xref:System.Windows.Forms.Control.OnKeyUp%2A> </xref:System.Windows.Forms.Control.OnKeyDown%2A> </xref:System.Windows.Forms.Control.OnKeyPress%2A> O `m` parâmetro contém a mensagem de janela que deve ser processada. Os valores possíveis para a <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>são de propriedade WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP, WM_SYSKEYUP e WM_IME_CHAR.</xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual bool ProcessKeyEventArgs (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Um <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, passada por referência, que representa a mensagem de janela para processar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a mensagem foi processada pelo controle; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ProcessKeyEventArgs*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  id: ProcessKeyMessage(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessKeyMessage(Message)
  nameWithType: Control.ProcessKeyMessage(Message)
  fullName: System.Windows.Forms.Control.ProcessKeyMessage(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processa uma mensagem do teclado."
  remarks: "Esse método é chamado quando um controle recebe uma mensagem do teclado. O método primeiro determina se o controle tem um pai; Se assim, ele chama o pai <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A>método.</xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> Se o pai <xref:System.Windows.Forms.Control.ProcessKeyPreview%2A>método não processa a mensagem a <xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A>método é chamado para gerar os eventos de teclado apropriado.</xref:System.Windows.Forms.Control.ProcessKeyEventArgs%2A> </xref:System.Windows.Forms.Control.ProcessKeyPreview%2A> O `m` parâmetro contém a mensagem de janela que deve ser processada. Os valores possíveis para a <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>são de propriedade WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP e WM_SYSKEYUP.</xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>"
  syntax:
    content: protected virtual bool ProcessKeyMessage (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Um <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, passada por referência, que representa a mensagem de janela para processar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a mensagem foi processada pelo controle; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ProcessKeyMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  id: ProcessKeyPreview(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessKeyPreview(Message)
  nameWithType: Control.ProcessKeyPreview(Message)
  fullName: System.Windows.Forms.Control.ProcessKeyPreview(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Visualiza uma mensagem do teclado."
  remarks: "Esse método é chamado por um controle filho quando o controle filho recebe uma mensagem do teclado. O controle filho chama esse método antes de gerar os eventos de teclado para a mensagem. Se esse método retornar `true`, o controle filho considera a mensagem processada e não gera os eventos de teclado. O `m` parâmetro contém a mensagem da janela de visualização. Os valores possíveis para a <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>são de propriedade WM_CHAR, WM_KEYDOWN, WM_SYSKEYDOWN, WM_KEYUP e WM_SYSKEYUP.</xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName> O método ProcessKeyPreview simplesmente envia o caractere para o método de ProcessKeyPreview do pai ou retorna `false` se o controle não tem nenhum pai. O <xref:System.Windows.Forms.Form>classe substitui esse método para executar o processamento real das caixas de diálogo.</xref:System.Windows.Forms.Form>"
  syntax:
    content: protected virtual bool ProcessKeyPreview (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "Um <xref href=&quot;System.Windows.Forms.Message&quot;> </xref>, passada por referência, que representa a mensagem de janela para processar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a mensagem foi processada pelo controle; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ProcessKeyPreview*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  id: ProcessMnemonic(System.Char)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProcessMnemonic(Char)
  nameWithType: Control.ProcessMnemonic(Char)
  fullName: System.Windows.Forms.Control.ProcessMnemonic(Char)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processa um caractere mnemônico."
  remarks: "Esse método é chamado para fornecer um controle a oportunidade de processar um caractere mnemônico. O método deve determinar se o controle está em estado de mnemônicos de processo e se se o caractere especificado representa um mnemônico. Se assim, o método deve executar a ação associada ao mnemônico e retorno `true`. Se não, o método deve retornar `false`. As implementações desse método geralmente usam o <xref:System.Windows.Forms.Control.IsMnemonic%2A>método para determinar se o caractere especificado corresponde a um mnemônico no texto do controle.</xref:System.Windows.Forms.Control.IsMnemonic%2A>       Por exemplo: ```c#   if (CanSelect && IsMnemonic(charCode, MyControl.Text) {         // Perform action associated with mnemonic.          }   ``` essa implementação padrão do método ProcessMnemonic simplesmente retorna `false` para indicar que o controle não tem nenhum mnemônico."
  example:
  - "The following code example demonstrates an extension of the button class that overrides the ProcessMnemonic method to exhibit custom behavior. The example also demonstrates the use of the <xref:System.Windows.Forms.Control.CanSelect%2A> and <xref:System.Windows.Forms.Control.IsMnemonic%2A> properties. To run this example paste the following code after a form class, in the same file. Add a button of type `MnemonicButton` to the form.  \n  \n [!code-cs[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/csharp/m-system.windows.forms.c_47_1.cs)]\n [!code-cpp[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/cpp/m-system.windows.forms.c_47_1.cpp)]\n [!code-vb[System.Windows.Forms.ProcessMnemonic#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_47_1.vb)]"
  syntax:
    content: protected virtual bool ProcessMnemonic (char charCode);
    parameters:
    - id: charCode
      type: System.Char
      description: "O caractere a ser processado."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o caractere tiver sido processado como um mnemônico pelo controle; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ProcessMnemonic*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProductName
  id: ProductName
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProductName
  nameWithType: Control.ProductName
  fullName: System.Windows.Forms.Control.ProductName
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o nome do produto do assembly que contém o controle."
  remarks: "A propriedade ProductName é uma propriedade somente leitura. Para alterar o valor dessa propriedade, defina o <xref:System.Reflection.AssemblyProductAttribute.Product%2A>valor da propriedade de <xref:System.Reflection.AssemblyProductAttribute>.</xref:System.Reflection.AssemblyProductAttribute> </xref:System.Reflection.AssemblyProductAttribute.Product%2A> A linha de código c# a seguir define a propriedade ProductName.      ```   [assembly: AssemblyProduct(&quot;MyApplication&quot;)]   ```      > [!NOTE]> É altamente recomendável que você forneça o nome da empresa, o nome do produto e a versão do produto. Fornecer essas informações permite o uso de recursos do Windows Forms como <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName>que facilitam a gravar aplicativos que estão em conformidade com o programa de &quot;Certificado para Windows&quot;.</xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> Para obter mais informações sobre o programa de certificados para o Windows, consulte http://msdn.microsoft.com/certification."
  example:
  - "The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>. This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, ProductName and <xref:System.Windows.Forms.Control.ProductVersion%2A> have been set.  \n  \n [!code-cs[Windows.Forms.Control Properties3#1](~/add/codesnippet/csharp/p-system.windows.forms.c_78_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties3#1](~/add/codesnippet/cpp/p-system.windows.forms.c_78_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties3#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_78_1.vb)]"
  syntax:
    content: public string ProductName { get; }
    return:
      type: System.String
      description: "O nome do produto do assembly que contém o controle."
  overload: System.Windows.Forms.Control.ProductName*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ProductVersion
  id: ProductVersion
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ProductVersion
  nameWithType: Control.ProductVersion
  fullName: System.Windows.Forms.Control.ProductVersion
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém a versão do assembly que contém o controle."
  remarks: "A propriedade ProductVersion é uma propriedade somente leitura. Para alterar o valor dessa propriedade, defina o <xref:System.Reflection.AssemblyVersionAttribute.Version%2A>valor da propriedade de <xref:System.Reflection.AssemblyVersionAttribute>.</xref:System.Reflection.AssemblyVersionAttribute> </xref:System.Reflection.AssemblyVersionAttribute.Version%2A> A linha de código c# a seguir define a propriedade ProductVersion.      ```   [assembly: AssemblyVersion(&quot;1.0.1&quot;)]   ```      > [!NOTE]> É altamente recomendável que você forneça o nome da empresa, o nome do produto e a versão do produto. Fornecer essas informações permite o uso de recursos do Windows Forms como <xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName>que facilitam a gravar aplicativos que estão em conformidade com o programa de &quot;Certificado para Windows&quot;.</xref:System.Windows.Forms.Application.UserAppDataPath%2A?displayProperty=fullName> Para obter mais informações sobre o programa de certificados para o Windows, consulte http://msdn.microsoft.com/certification."
  example:
  - "The following code example displays information about the application in a <xref:System.Windows.Forms.Label> contained by a <xref:System.Windows.Forms.Form>. This example requires that the <xref:System.Windows.Forms.Control.CompanyName%2A>, <xref:System.Windows.Forms.Control.ProductName%2A> and ProductVersion have been set.  \n  \n [!code-cs[Windows.Forms.Control Properties3#1](~/add/codesnippet/csharp/p-system.windows.forms.c_45_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties3#1](~/add/codesnippet/cpp/p-system.windows.forms.c_45_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties3#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_45_1.vb)]"
  syntax:
    content: public string ProductVersion { get; }
    return:
      type: System.String
      description: "A versão do arquivo do assembly que contém o controle."
  overload: System.Windows.Forms.Control.ProductVersion*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.PropagatingImeMode
  id: PropagatingImeMode
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: PropagatingImeMode
  nameWithType: Control.PropagatingImeMode
  fullName: System.Windows.Forms.Control.PropagatingImeMode
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um objeto que representa um modo IME propagação."
  syntax:
    content: protected static System.Windows.Forms.ImeMode PropagatingImeMode { get; }
    return:
      type: System.Windows.Forms.ImeMode
      description: "Um objeto que representa um modo IME propagação."
  overload: System.Windows.Forms.Control.PropagatingImeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.QueryAccessibilityHelp
  id: QueryAccessibilityHelp
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: QueryAccessibilityHelp
  nameWithType: Control.QueryAccessibilityHelp
  fullName: System.Windows.Forms.Control.QueryAccessibilityHelp
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando <xref href=&quot;System.Windows.Forms.AccessibleObject&quot;> </xref> fornece ajuda para os aplicativos de acessibilidade."
  remarks: "Você deve usar o <xref:System.Windows.Forms.HelpProvider>classe habilitar usuários a chamar a Ajuda em seu objeto acessível, pressionando a tecla F1.</xref:System.Windows.Forms.HelpProvider> Usando o <xref:System.Windows.Forms.HelpProvider>fornece a você informações completas em <xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs>.</xref:System.Windows.Forms.QueryAccessibilityHelpEventArgs> </xref:System.Windows.Forms.HelpProvider> Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the creation of an accessibility-aware chart control, using the <xref:System.Windows.Forms.AccessibleObject> and <xref:System.Windows.Forms.Control.ControlAccessibleObject> classes to expose accessible information. The control plots two curves along with a legend. The `ChartControlAccessibleObject` class, which derives from `ControlAccessibleObject`, is used in the <xref:System.Windows.Forms.Control.CreateAccessibilityInstance%2A> method to provide custom accessible information for the chart control. Since the chart legend is not an actual <xref:System.Windows.Forms.Control> -based control, but instead is drawn by the chart control, it does not any built-in accessible information. Because of this, the `ChartControlAccessibleObject` class overrides the <xref:System.Windows.Forms.AccessibleObject.GetChild%2A> method to return the `CurveLegendAccessibleObject` that represents accessible information for each part of the legend. When an accessible-aware application uses this control, the control can provide the necessary accessible information.  \n  \n This code excerpt demonstrates handling the QueryAccessibilityHelp event. See the <xref:System.Windows.Forms.AccessibleObject> class overview for the complete code example.  \n  \n [!code-vb[System.Windows.Forms.AccessibleObject#3](~/add/codesnippet/visualbasic/e-system.windows.forms.c_11_1.vb)]\n [!code-cs[System.Windows.Forms.AccessibleObject#3](~/add/codesnippet/csharp/e-system.windows.forms.c_11_1.cs)]\n [!code-cpp[System.Windows.Forms.AccessibleObject#3](~/add/codesnippet/cpp/e-system.windows.forms.c_11_1.cpp)]"
  syntax:
    content: public event System.Windows.Forms.QueryAccessibilityHelpEventHandler QueryAccessibilityHelp;
    return:
      type: System.Windows.Forms.QueryAccessibilityHelpEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.QueryContinueDrag
  id: QueryContinueDrag
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: QueryContinueDrag
  nameWithType: Control.QueryContinueDrag
  fullName: System.Windows.Forms.Control.QueryContinueDrag
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre durante uma operação de arrastar e soltar e permite que a fonte determinar se a operação de arrastar e soltar deve ser cancelada."
  remarks: "O evento QueryContinueDrag é gerado quando há uma alteração no estado de botão do teclado ou mouse durante uma operação de arrastar e soltar. O evento QueryContinueDrag permite que a fonte determinar se a operação de arrastar e soltar deve ser cancelada.       O exemplo a seguir descreve como e quando os eventos relacionados às operações de arrastar e soltar são gerados.       O <xref:System.Windows.Forms.Control.DoDragDrop%2A>método determina o controle no local atual do cursor.</xref:System.Windows.Forms.Control.DoDragDrop%2A> Em seguida, ele verifica para ver se o controle é um destino válido.       Se o controle é um destino válido, o <xref:System.Windows.Forms.Control.GiveFeedback>é gerado com o efeito de arrastar e soltar especificado.</xref:System.Windows.Forms.Control.GiveFeedback> Para obter uma lista dos efeitos de arrastar e soltar, consulte o <xref:System.Windows.Forms.DragDropEffects>enumeração.</xref:System.Windows.Forms.DragDropEffects>       As alterações na posição do cursor do mouse, o estado de teclado e o estado do botão do mouse são rastreadas.      -Se o usuário sai de uma janela, o <xref:System.Windows.Forms.Control.DragLeave>é gerado.</xref:System.Windows.Forms.Control.DragLeave>      -Se o mouse entra em outro controle, o <xref:System.Windows.Forms.Control.DragEnter>para que o controle é gerado.</xref:System.Windows.Forms.Control.DragEnter>      -Se o mouse se move, mas permanece dentro do mesmo controle, o <xref:System.Windows.Forms.Control.DragOver>é gerado.</xref:System.Windows.Forms.Control.DragOver>       Se houver uma alteração no estado de botão do mouse ou teclado, theQueryContinueDrag evento é gerado e determina se deseja continuar a operação de arrastar, soltar os dados, ou para cancelar a operação com base no valor da <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>propriedade de evento <xref:System.Windows.Forms.QueryContinueDragEventArgs>.</xref:System.Windows.Forms.QueryContinueDragEventArgs> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Continue`, o <xref:System.Windows.Forms.Control.DragOver>é gerado para continuar a operação e o <xref:System.Windows.Forms.Control.GiveFeedback>é gerado com o efeito de novo para comentários visuais apropriado podem ser definido.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver> </xref:System.Windows.Forms.DragAction> Para obter uma lista dos efeitos de soltar válidas, consulte o <xref:System.Windows.Forms.DragDropEffects>enumeração.</xref:System.Windows.Forms.DragDropEffects>          > [!NOTE] > O <xref:System.Windows.Forms.Control.DragOver>e <xref:System.Windows.Forms.Control.GiveFeedback>eventos são combinados para dar conforme o mouse se move entre o local de destino, o usuário os comentários mais atualizados sobre a posição do mouse.</xref:System.Windows.Forms.Control.GiveFeedback> </xref:System.Windows.Forms.Control.DragOver>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Drop`, o valor de efeito de soltar é retornado para a fonte, para que o aplicativo de origem possa executar a operação apropriada nos dados de origem; por exemplo, recortar os dados se a operação foi uma movimentação.</xref:System.Windows.Forms.DragAction>      -Se o valor de <xref:System.Windows.Forms.DragAction>é `Cancel`, o <xref:System.Windows.Forms.Control.DragLeave>é gerado.</xref:System.Windows.Forms.Control.DragLeave> </xref:System.Windows.Forms.DragAction>       Por padrão, o evento QueryContinueDrag define <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>para `Cancel` em <xref:System.Windows.Forms.DragAction>se a tecla ESC foi pressionada e define <xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>para `Drop` em <xref:System.Windows.Forms.DragAction>se o botão esquerdo, central ou direito do mouse é pressionado.</xref:System.Windows.Forms.DragAction> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A> </xref:System.Windows.Forms.DragAction> </xref:System.Windows.Forms.QueryContinueDragEventArgs.Action%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates a drag-and-drop operation between two <xref:System.Windows.Forms.ListBox> controls. The example calls the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method when the drag action starts. The drag action starts if the mouse has moved more than <xref:System.Windows.Forms.SystemInformation.DragSize%2A?displayProperty=fullName> from the mouse location during the <xref:System.Windows.Forms.Control.MouseDown> event. The <xref:System.Windows.Forms.ListBox.IndexFromPoint%2A> method is used to determine the index of the item to drag during the `MouseDown` event.  \n  \n The example also demonstrates using custom cursors for the drag-and-drop operation. The example requires that two cursor files,`3dwarro.cur` and `3dwno.cur`, exist in the application directory, for the custom drag and no-drop cursors, respectively. The custom cursors will be used if the `UseCustomCursorsCheck`<xref:System.Windows.Forms.CheckBox> is checked. The custom cursors are set in the <xref:System.Windows.Forms.Control.GiveFeedback> event handler.  \n  \n The keyboard state is evaluated in the <xref:System.Windows.Forms.Control.DragOver> event handler for the right `ListBox`, to determine what the drag operation will be based on state of the SHIFT, CTRL, ALT, or CTRL+ALT keys. The location in the `ListBox` where the drop would occur is also determined during the `DragOver` event. If the data to drop is not a `String`, then the <xref:System.Windows.Forms.DragEventArgs.Effect%2A?displayProperty=fullName> is set to `None` in <xref:System.Windows.Forms.DragDropEffects>. Finally, the status of the drop is displayed in the `DropLocationLabel`<xref:System.Windows.Forms.Label>.  \n  \n The data to drop for the right `ListBox` is determined in the <xref:System.Windows.Forms.Control.DragDrop> event handler and the `String` value is added at the appropriate place in the `ListBox`. If the drag operation moves outside the bounds of the form, then the drag-and-drop operation is canceled in the QueryContinueDrag event handler.  \n  \n This code excerpt demonstrates using the QueryContinueDrag event. See the <xref:System.Windows.Forms.Control.DoDragDrop%2A> method for the complete code example.  \n  \n [!code-cpp[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/cpp/e-system.windows.forms.c_75_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/visualbasic/e-system.windows.forms.c_75_1.vb)]\n [!code-cs[System.Windows.Forms.Control.DoDragDrop#6](~/add/codesnippet/csharp/e-system.windows.forms.c_75_1.cs)]"
  syntax:
    content: public event System.Windows.Forms.QueryContinueDragEventHandler QueryContinueDrag;
    return:
      type: System.Windows.Forms.QueryContinueDragEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  id: RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RaiseDragEvent(Object,DragEventArgs)
  nameWithType: Control.RaiseDragEvent(Object,DragEventArgs)
  fullName: System.Windows.Forms.Control.RaiseDragEvent(Object,DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o evento arrastar apropriado."
  syntax:
    content: protected void RaiseDragEvent (object key, System.Windows.Forms.DragEventArgs e);
    parameters:
    - id: key
      type: System.Object
      description: "Evento a ser gerado."
    - id: e
      type: System.Windows.Forms.DragEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.RaiseDragEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  id: RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RaiseKeyEvent(Object,KeyEventArgs)
  nameWithType: Control.RaiseKeyEvent(Object,KeyEventArgs)
  fullName: System.Windows.Forms.Control.RaiseKeyEvent(Object,KeyEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o evento de chave apropriado."
  syntax:
    content: protected void RaiseKeyEvent (object key, System.Windows.Forms.KeyEventArgs e);
    parameters:
    - id: key
      type: System.Object
      description: "Evento a ser gerado."
    - id: e
      type: System.Windows.Forms.KeyEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.KeyEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.RaiseKeyEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  id: RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RaiseMouseEvent(Object,MouseEventArgs)
  nameWithType: Control.RaiseMouseEvent(Object,MouseEventArgs)
  fullName: System.Windows.Forms.Control.RaiseMouseEvent(Object,MouseEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o evento apropriado do mouse."
  syntax:
    content: protected void RaiseMouseEvent (object key, System.Windows.Forms.MouseEventArgs e);
    parameters:
    - id: key
      type: System.Object
      description: "Evento a ser gerado."
    - id: e
      type: System.Windows.Forms.MouseEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.MouseEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.RaiseMouseEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  id: RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RaisePaintEvent(Object,PaintEventArgs)
  nameWithType: Control.RaisePaintEvent(Object,PaintEventArgs)
  fullName: System.Windows.Forms.Control.RaisePaintEvent(Object,PaintEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o evento de pintura apropriado."
  syntax:
    content: protected void RaisePaintEvent (object key, System.Windows.Forms.PaintEventArgs e);
    parameters:
    - id: key
      type: System.Object
      description: "Evento a ser gerado."
    - id: e
      type: System.Windows.Forms.PaintEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.PaintEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.RaisePaintEvent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RecreateHandle
  id: RecreateHandle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RecreateHandle()
  nameWithType: Control.RecreateHandle()
  fullName: System.Windows.Forms.Control.RecreateHandle()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Força a recriação do identificador para o controle."
  remarks: "O método RecreateHandle é chamado sempre que parâmetros são necessários para um novo controle, mas o uso de uma chamada de <xref:System.Windows.Forms.Control.UpdateStyles%2A>para <xref:System.Windows.Forms.Control.CreateParams%2A>é insuficiente.</xref:System.Windows.Forms.Control.CreateParams%2A> </xref:System.Windows.Forms.Control.UpdateStyles%2A> Este método também chama <xref:System.Windows.Forms.Control.DestroyHandle%2A>e<xref:System.Windows.Forms.Control.CreateHandle%2A> e define <xref:System.Windows.Forms.Control.RecreatingHandle%2A>para `true`.</xref:System.Windows.Forms.Control.RecreatingHandle%2A> </xref:System.Windows.Forms.Control.CreateHandle%2A> </xref:System.Windows.Forms.Control.DestroyHandle%2A>"
  syntax:
    content: protected void RecreateHandle ();
    parameters: []
  overload: System.Windows.Forms.Control.RecreateHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RecreatingHandle
  id: RecreatingHandle
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RecreatingHandle
  nameWithType: Control.RecreatingHandle
  fullName: System.Windows.Forms.Control.RecreatingHandle
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o controle está atualmente recriando seu identificador."
  remarks: "A propriedade retorna RecreatingHandle `true` se o <xref:System.Windows.Forms.Control.RecreateHandle%2A>método ainda está em execução no controle.</xref:System.Windows.Forms.Control.RecreateHandle%2A>"
  syntax:
    content: public bool RecreatingHandle { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle está atualmente recriando seu identificador; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.RecreatingHandle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  id: RectangleToClient(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RectangleToClient(Rectangle)
  nameWithType: Control.RectangleToClient(Rectangle)
  fullName: System.Windows.Forms.Control.RectangleToClient(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Calcula o tamanho e o local do retângulo tela especificada nas coordenadas do cliente."
  syntax:
    content: public System.Drawing.Rectangle RectangleToClient (System.Drawing.Rectangle r);
    parameters:
    - id: r
      type: System.Drawing.Rectangle
      description: "A coordenada da tela <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> para converter."
    return:
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa o objeto <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>, <code> r </code>, nas coordenadas do cliente."
  overload: System.Windows.Forms.Control.RectangleToClient*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  id: RectangleToScreen(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RectangleToScreen(Rectangle)
  nameWithType: Control.RectangleToScreen(Rectangle)
  fullName: System.Windows.Forms.Control.RectangleToScreen(Rectangle)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Calcula o tamanho e o local do retângulo cliente especificado em coordenadas da tela."
  remarks: ''
  example:
  - "The following code example demonstrates how to use the <xref:System.Windows.Forms.Control.BackColor%2A>, RectangleToScreen, <xref:System.Windows.Forms.Control.PointToScreen%2A>, <xref:System.Windows.Forms.Control.MouseButtons%2A>, <xref:System.Windows.Forms.ControlPaint.DrawReversibleFrame%2A?displayProperty=fullName>, and <xref:System.Drawing.Rectangle.IntersectsWith%2A?displayProperty=fullName> members. To run the example, paste the following code in a form called **Form1** containing several controls. This example requires that the <xref:System.Windows.Forms.Control.MouseDown>, <xref:System.Windows.Forms.Control.MouseMove>, and <xref:System.Windows.Forms.Control.MouseUp> events are connected to the event handlers defined in the example.  \n  \n [!code-cs[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/csharp/m-system.windows.forms.c_86_1.cs)]\n [!code-cpp[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/cpp/m-system.windows.forms.c_86_1.cpp)]\n [!code-vb[System.Windows.Forms.RectangleToScreen#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_86_1.vb)]"
  syntax:
    content: public System.Drawing.Rectangle RectangleToScreen (System.Drawing.Rectangle r);
    parameters:
    - id: r
      type: System.Drawing.Rectangle
      description: "A coordenada de cliente <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> para converter."
    return:
      type: System.Drawing.Rectangle
      description: "Um <xref href=&quot;System.Drawing.Rectangle&quot;> </xref> que representa o objeto <xref href=&quot;System.Drawing.Rectangle&quot;> </xref>, <code> p </code>, em coordenadas de tela."
  overload: System.Windows.Forms.Control.RectangleToScreen*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  id: ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ReflectMessage(IntPtr,Message)
  nameWithType: Control.ReflectMessage(IntPtr,Message)
  fullName: System.Windows.Forms.Control.ReflectMessage(IntPtr,Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Reflete a mensagem especificada para o controle que está associado ao identificador especificado."
  remarks: "O método ReflectMessage é um método de infraestrutura e normalmente não deve ser chamado a partir do código.       Se o `hWnd` parâmetro não representa um controle válido, o método ReflectMessage retorna `false`.       Como mensagens do Windows são retornadas para a janela de nível superior, o método ReflectMessage é usado para propagar a mensagem de retorno para o controle que enviou a mensagem."
  syntax:
    content: protected static bool ReflectMessage (IntPtr hWnd, ref System.Windows.Forms.Message m);
    parameters:
    - id: hWnd
      type: System.IntPtr
      description: "Um <xref:System.IntPtr>que representa o identificador do controle para refletir a mensagem.</xref:System.IntPtr>"
    - id: m
      type: System.Windows.Forms.Message
      description: "Um <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> que representa a mensagem do Windows para refletir."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a mensagem foi refletida; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ReflectMessage*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Refresh
  id: Refresh
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Refresh()
  nameWithType: Control.Refresh()
  fullName: System.Windows.Forms.Control.Refresh()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Força o controle para invalidar sua área cliente e imediatamente redesenhado e os controles filho."
  syntax:
    content: public virtual void Refresh ();
    parameters: []
  overload: System.Windows.Forms.Control.Refresh*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Region
  id: Region
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Region
  nameWithType: Control.Region
  fullName: System.Windows.Forms.Control.Region
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a região da janela associada ao controle."
  remarks: "A região da janela é uma coleção de pixels dentro da janela em que o sistema operacional permite desenho. O sistema operacional não exibir qualquer parte de uma janela que se encontra fora a região da janela. As coordenadas da região do controle são relativas ao canto superior esquerdo do controle, não a área cliente do controle.      > [!NOTE] > A coleção de pixels contido com a região pode ser não contígua."
  example:
  - "The following code example demonstrates how to use the Region property by creating a round button. To run the example, paste the following code in a form containing a button called `roundButton`. This example requires that the <xref:System.Windows.Forms.Control.Paint> event is connected to the event handler defined in the example.  \n  \n [!code-cs[System.Windows.Forms.Control.Region#1](~/add/codesnippet/csharp/p-system.windows.forms.c_106_1.cs)]\n [!code-cpp[System.Windows.Forms.Control.Region#1](~/add/codesnippet/cpp/p-system.windows.forms.c_106_1.cpp)]\n [!code-vb[System.Windows.Forms.Control.Region#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_106_1.vb)]"
  syntax:
    content: public System.Drawing.Region Region { get; set; }
    return:
      type: System.Drawing.Region
      description: "A janela <xref href=&quot;System.Drawing.Region&quot;> </xref> associado ao controle."
  overload: System.Windows.Forms.Control.Region*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RegionChanged
  id: RegionChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RegionChanged
  nameWithType: Control.RegionChanged
  fullName: System.Windows.Forms.Control.RegionChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o valor de <xref:System.Windows.Forms.Control.Region*>alterações de propriedade.</xref:System.Windows.Forms.Control.Region*>"
  remarks: "Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the RegionChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the RegionChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#22](~/add/codesnippet/csharp/e-system.windows.forms.c_18_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#22](~/add/codesnippet/visualbasic/e-system.windows.forms.c_18_1.vb)]"
  syntax:
    content: public event EventHandler RegionChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RenderRightToLeft
  id: RenderRightToLeft
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RenderRightToLeft
  nameWithType: Control.RenderRightToLeft
  fullName: System.Windows.Forms.Control.RenderRightToLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Esta propriedade agora está obsoleta."
  syntax:
    content: protected bool RenderRightToLeft { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle é processado da direita para a esquerda. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.RenderRightToLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetBackColor
  id: ResetBackColor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetBackColor()
  nameWithType: Control.ResetBackColor()
  fullName: System.Windows.Forms.Control.ResetBackColor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Redefine o <xref:System.Windows.Forms.Control.BackColor*>propriedade para o valor padrão.</xref:System.Windows.Forms.Control.BackColor*>"
  remarks: "Esse método não é relevante para essa classe."
  syntax:
    content: public virtual void ResetBackColor ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetBackColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetBindings
  id: ResetBindings
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetBindings()
  nameWithType: Control.ResetBindings()
  fullName: System.Windows.Forms.Control.ResetBindings()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Faz com que um controle associado para o <xref href=&quot;System.Windows.Forms.BindingSource&quot;> </xref> para reler todos os itens na lista e atualizar seus valores exibidos."
  remarks: "Esse método não é relevante para essa classe."
  syntax:
    content: public void ResetBindings ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetBindings*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetCursor
  id: ResetCursor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetCursor()
  nameWithType: Control.ResetCursor()
  fullName: System.Windows.Forms.Control.ResetCursor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Redefine o <xref:System.Windows.Forms.Control.Cursor*>propriedade para o valor padrão.</xref:System.Windows.Forms.Control.Cursor*>"
  remarks: "Esse método não é relevante para essa classe."
  syntax:
    content: public virtual void ResetCursor ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetFont
  id: ResetFont
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetFont()
  nameWithType: Control.ResetFont()
  fullName: System.Windows.Forms.Control.ResetFont()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Redefine o <xref:System.Windows.Forms.Control.Font*>propriedade para o valor padrão.</xref:System.Windows.Forms.Control.Font*>"
  remarks: "Esse método não é relevante para essa classe."
  syntax:
    content: public virtual void ResetFont ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetFont*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetForeColor
  id: ResetForeColor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetForeColor()
  nameWithType: Control.ResetForeColor()
  fullName: System.Windows.Forms.Control.ResetForeColor()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Redefine o <xref:System.Windows.Forms.Control.ForeColor*>propriedade para o valor padrão.</xref:System.Windows.Forms.Control.ForeColor*>"
  remarks: "Esse método não é relevante para essa classe."
  syntax:
    content: public virtual void ResetForeColor ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetForeColor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetImeMode
  id: ResetImeMode
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetImeMode()
  nameWithType: Control.ResetImeMode()
  fullName: System.Windows.Forms.Control.ResetImeMode()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Redefine o <xref:System.Windows.Forms.Control.ImeMode*>propriedade para o valor padrão.</xref:System.Windows.Forms.Control.ImeMode*>"
  remarks: "Esse método não é relevante para essa classe."
  syntax:
    content: public void ResetImeMode ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetImeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetMouseEventArgs
  id: ResetMouseEventArgs
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetMouseEventArgs()
  nameWithType: Control.ResetMouseEventArgs()
  fullName: System.Windows.Forms.Control.ResetMouseEventArgs()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Redefine o controle para tratar o <xref href=&quot;System.Windows.Forms.Control.MouseLeave&quot;> </xref> eventos."
  syntax:
    content: protected void ResetMouseEventArgs ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetMouseEventArgs*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetRightToLeft
  id: ResetRightToLeft
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetRightToLeft()
  nameWithType: Control.ResetRightToLeft()
  fullName: System.Windows.Forms.Control.ResetRightToLeft()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Redefine o <xref:System.Windows.Forms.Control.RightToLeft*>propriedade para o valor padrão.</xref:System.Windows.Forms.Control.RightToLeft*>"
  remarks: "Esse método não é relevante para essa classe."
  syntax:
    content: public virtual void ResetRightToLeft ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetRightToLeft*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResetText
  id: ResetText
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResetText()
  nameWithType: Control.ResetText()
  fullName: System.Windows.Forms.Control.ResetText()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Redefine o <xref:System.Windows.Forms.Control.Text*>propriedade para o valor padrão.</xref:System.Windows.Forms.Control.Text*>"
  remarks: "Você normalmente usa esse método se você estiver criando ou um designer para a <xref:System.Windows.Forms.Control>ou criar seu próprio controle incorporar <xref:System.Windows.Forms.Control>.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.Control>"
  syntax:
    content: public virtual void ResetText ();
    parameters: []
  overload: System.Windows.Forms.Control.ResetText*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Resize
  id: Resize
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Resize
  nameWithType: Control.Resize
  fullName: System.Windows.Forms.Control.Resize
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle é redimensionado."
  remarks: "Para determinar o <xref:System.Windows.Forms.Control.Size%2A>do controle redimensionado, você pode converter o `sender` parâmetro registrado <xref:System.Windows.Forms.ControlEventHandler>método para um <xref:System.Windows.Forms.Control>e obter sua <xref:System.Windows.Forms.Control.Size%2A>propriedade (ou <xref:System.Windows.Forms.Control.Height%2A>e <xref:System.Windows.Forms.Control.Width%2A>propriedades individualmente).</xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Control.Size%2A> </xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.ControlEventHandler> </xref:System.Windows.Forms.Control.Size%2A>       Para lidar com layouts personalizados, use o <xref:System.Windows.Forms.Control.Layout>eventos em vez do evento de redimensionamento.</xref:System.Windows.Forms.Control.Layout> O <xref:System.Windows.Forms.Control.Layout>é gerado em resposta a um evento de redimensionamento, mas também em resposta a outras alterações que afetam o layout do controle.</xref:System.Windows.Forms.Control.Layout>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example handles the Resize event of a <xref:System.Windows.Forms.Form>. When the form is resized, the event handler ensures that the form stays square (its <xref:System.Windows.Forms.Control.Height%2A> and <xref:System.Windows.Forms.Control.Width%2A> remain equal). To run this example, make sure and associate this event-handling method with the form’s Resize event.  \n  \n [!code-vb[WinForms.Control.Resize#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_12_1.vb)]\n [!code-cpp[WinForms.Control.Resize#1](~/add/codesnippet/cpp/e-system.windows.forms.c_12_1.cpp)]\n [!code-cs[WinForms.Control.Resize#1](~/add/codesnippet/csharp/e-system.windows.forms.c_12_1.cs)]"
  syntax:
    content: public event EventHandler Resize;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResizeRedraw
  id: ResizeRedraw
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResizeRedraw
  nameWithType: Control.ResizeRedraw
  fullName: System.Windows.Forms.Control.ResizeRedraw
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se o controle é redesenhado quando redimensionado."
  remarks: "O valor da propriedade ResizeRedraw é equivalente ao valor de retorno o <xref:System.Windows.Forms.Control.GetStyle%2A>método quando passando o <xref:System.Windows.Forms.ControlStyles?displayProperty=fullName>valor como um parâmetro.</xref:System.Windows.Forms.ControlStyles?displayProperty=fullName> </xref:System.Windows.Forms.Control.GetStyle%2A>"
  syntax:
    content: protected bool ResizeRedraw { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle é redesenhado quando redimensionado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ResizeRedraw*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResumeLayout
  id: ResumeLayout
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResumeLayout()
  nameWithType: Control.ResumeLayout()
  fullName: System.Windows.Forms.Control.ResumeLayout()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retoma a lógica de layout habitual."
  remarks: "Chamar o método ResumeLayout força um layout imediato se não houver nenhuma solicitação pendente de layout.       O <xref:System.Windows.Forms.Control.SuspendLayout%2A>e ResumeLayout métodos são usados em conjunto para suprimir vários <xref:System.Windows.Forms.Control.Layout>eventos enquanto você ajustar vários atributos do controle.</xref:System.Windows.Forms.Control.Layout> </xref:System.Windows.Forms.Control.SuspendLayout%2A> Por exemplo, você poderia chamar normalmente o <xref:System.Windows.Forms.Control.SuspendLayout%2A>método, em seguida, defina o <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, ou <xref:System.Windows.Forms.Control.Dock%2A>as propriedades do controle e, em seguida, chame o método ResumeLayout para habilitar as alterações entrem em vigor.</xref:System.Windows.Forms.Control.Dock%2A> </xref:System.Windows.Forms.Control.Anchor%2A> </xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Control.Size%2A> </xref:System.Windows.Forms.Control.SuspendLayout%2A>       Não deve haver nenhuma chamada pendente para <xref:System.Windows.Forms.Control.SuspendLayout%2A>para ResumeLayout a ser chamado com êxito.</xref:System.Windows.Forms.Control.SuspendLayout%2A>"
  example:
  - "The following code example adds two buttons to a form. The example transactions the addition of the buttons by using the <xref:System.Windows.Forms.Control.SuspendLayout%2A> and ResumeLayout methods.  \n  \n [!code-cs[Windows.Forms.Control Members2#2](~/add/codesnippet/csharp/m-system.windows.forms.c_34_1.cs)]\n [!code-cpp[Windows.Forms.Control Members2#2](~/add/codesnippet/cpp/m-system.windows.forms.c_34_1.cpp)]\n [!code-vb[Windows.Forms.Control Members2#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_34_1.vb)]"
  syntax:
    content: public void ResumeLayout ();
    parameters: []
  overload: System.Windows.Forms.Control.ResumeLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  id: ResumeLayout(System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ResumeLayout(Boolean)
  nameWithType: Control.ResumeLayout(Boolean)
  fullName: System.Windows.Forms.Control.ResumeLayout(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Retoma a lógica de layout habitual, opcionalmente, forçando um layout imediato do layout solicitações pendentes."
  remarks: "Chamar o <xref:System.Windows.Forms.Control.ResumeLayout%2A>método força um layout de imediato, se houver qualquer layout solicitações pendentes.</xref:System.Windows.Forms.Control.ResumeLayout%2A> Quando o `performLayout` parâmetro está definido como `true`, um layout imediato ocorre se houver qualquer layout solicitações pendentes.       O <xref:System.Windows.Forms.Control.SuspendLayout%2A>e <xref:System.Windows.Forms.Control.ResumeLayout%2A>métodos são usados em conjunto para suprimir vários <xref:System.Windows.Forms.Control.Layout>eventos enquanto você ajustar vários atributos do controle.</xref:System.Windows.Forms.Control.Layout> </xref:System.Windows.Forms.Control.ResumeLayout%2A> </xref:System.Windows.Forms.Control.SuspendLayout%2A> Por exemplo, você poderia chamar normalmente o <xref:System.Windows.Forms.Control.SuspendLayout%2A>método, em seguida, defina o <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, ou <xref:System.Windows.Forms.Control.Dock%2A>as propriedades do controle e, em seguida, chame o <xref:System.Windows.Forms.Control.ResumeLayout%2A>método para permitir que as alterações entrem em vigor.</xref:System.Windows.Forms.Control.ResumeLayout%2A> </xref:System.Windows.Forms.Control.Dock%2A> </xref:System.Windows.Forms.Control.Anchor%2A> </xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Control.Size%2A> </xref:System.Windows.Forms.Control.SuspendLayout%2A>       Não deve haver nenhuma chamada pendente para <xref:System.Windows.Forms.Control.SuspendLayout%2A>para <xref:System.Windows.Forms.Control.ResumeLayout%2A>a ser chamado com êxito.</xref:System.Windows.Forms.Control.ResumeLayout%2A> </xref:System.Windows.Forms.Control.SuspendLayout%2A>      > [!NOTE] > Ao adicionar vários controles a um controle pai, é recomendável que você chamar o <xref:System.Windows.Forms.Control.SuspendLayout%2A>método antes de inicializar os controles sejam adicionados.</xref:System.Windows.Forms.Control.SuspendLayout%2A> Depois de adicionar os controles para o controle pai, chame o <xref:System.Windows.Forms.Control.ResumeLayout%2A>método.</xref:System.Windows.Forms.Control.ResumeLayout%2A> Isso aumentará o desempenho de aplicativos com muitos controles."
  syntax:
    content: public void ResumeLayout (bool performLayout);
    parameters:
    - id: performLayout
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para executar solicitações de layout; pendentes Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ResumeLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Right
  id: Right
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Right
  nameWithType: Control.Right
  fullName: System.Windows.Forms.Control.Right
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém a distância, em pixels, entre a borda direita do controle e a borda esquerda da área cliente do seu contêiner."
  remarks: "O valor da propriedade à direita é igual à soma do <xref:System.Windows.Forms.Control.Left%2A>o valor da propriedade e o <xref:System.Windows.Forms.Control.Width%2A>o valor da propriedade.</xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Left%2A>       A propriedade à direita é somente leitura. Você pode alterar o valor da propriedade indiretamente, alterando o valor da <xref:System.Windows.Forms.Control.Left%2A>ou <xref:System.Windows.Forms.Control.Width%2A>Propriedades ou chamar o <xref:System.Windows.Forms.Control.SetBounds%2A>, <xref:System.Windows.Forms.Control.SetBoundsCore%2A>, <xref:System.Windows.Forms.Control.UpdateBounds%2A>, ou <xref:System.Windows.Forms.Control.SetClientSizeCore%2A>métodos.</xref:System.Windows.Forms.Control.SetClientSizeCore%2A> </xref:System.Windows.Forms.Control.UpdateBounds%2A> </xref:System.Windows.Forms.Control.SetBoundsCore%2A> </xref:System.Windows.Forms.Control.SetBounds%2A> </xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Left%2A>"
  example:
  - "The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \n  \n [!code-cs[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/csharp/p-system.windows.forms.c_70_1.cs)]\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/cpp/p-system.windows.forms.c_70_1.cpp)]\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_70_1.vb)]  \n  \n [!code-cpp[Control.KeyUp#1](~/add/codesnippet/cpp/p-system.windows.forms.c_70_2.cpp)]\n [!code-vb[Control.KeyUp#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_70_2.vb)]\n [!code-cs[Control.KeyUp#1](~/add/codesnippet/csharp/p-system.windows.forms.c_70_2.cs)]"
  syntax:
    content: public int Right { get; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>que representa a distância em pixels entre a borda direita do controle e a borda esquerda da área cliente do seu contêiner.</xref:System.Int32>"
  overload: System.Windows.Forms.Control.Right*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RightToLeft
  id: RightToLeft
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RightToLeft
  nameWithType: Control.RightToLeft
  fullName: System.Windows.Forms.Control.RightToLeft
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se os elementos do controle são alinhados para dar suporte a localidades usando fontes da direita para esquerda."
  remarks: "A propriedade RightToLeft é uma propriedade de ambiente. Uma propriedade de ambiente é uma propriedade de controle que, se não for definido, será recuperado do controle pai. Por exemplo, um <xref:System.Windows.Forms.Button>terão o mesmo <xref:System.Windows.Forms.Control.BackColor%2A>como seu pai <xref:System.Windows.Forms.Form>por padrão.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Control.BackColor%2A> </xref:System.Windows.Forms.Button> Para obter mais informações sobre propriedades de ambiente, consulte o <xref:System.Windows.Forms.AmbientProperties>classe ou o <xref:System.Windows.Forms.Control>Visão geral da classe.</xref:System.Windows.Forms.Control> </xref:System.Windows.Forms.AmbientProperties>       A propriedade RightToLeft é usada para aplicativos internacionais, onde o idioma é escrito da direita para a esquerda, como hebraico ou árabe. Quando essa propriedade é definida como <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>, elementos de controle que incluem texto são exibidos da direita para esquerda.</xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>      > [!NOTE] > Se o valor da propriedade RightToLeft é alterado em tempo de execução, somente bruto texto sem formatação é preservado.       A seguir estão alguns exemplos de como os elementos de controle são afetados pelo valor da propriedade RightToLeft de <xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>:-barras de rolagem Vertical são exibidas no lado esquerdo, em vez de lado direito de controles roláveis (por exemplo, <xref:System.Windows.Forms.Form>, <xref:System.Windows.Forms.Panel>, várias linhas <xref:System.Windows.Forms.TextBox>, e <xref:System.Windows.Forms.RichTextBox>).</xref:System.Windows.Forms.RichTextBox> </xref:System.Windows.Forms.TextBox> </xref:System.Windows.Forms.Panel> </xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.RightToLeft?displayProperty=fullName>      -Barras de rolagem horizontal começar com a caixa de rolagem (thumb) alinhada à direita.      -O alinhamento do elemento de caixa de seleção, controlado pelo `CheckAlign` propriedade, é revertida para <xref:System.Windows.Forms.CheckBox>e <xref:System.Windows.Forms.RadioButton>controles.</xref:System.Windows.Forms.RadioButton> </xref:System.Windows.Forms.CheckBox>      -Itens na caixa de listagem, caixa de combinação e controles para cima para baixo à direita são alinhados.      -Para cima e para baixo botões são alinhados à esquerda em <xref:System.Windows.Forms.NumericUpDown>e <xref:System.Windows.Forms.DomainUpDown>controles.</xref:System.Windows.Forms.DomainUpDown> </xref:System.Windows.Forms.NumericUpDown>      -Menus (<xref:System.Windows.Forms.MainMenu>, <xref:System.Windows.Forms.MenuItem>, e <xref:System.Windows.Forms.ContextMenu>) são exibidos alinhado à direita.</xref:System.Windows.Forms.ContextMenu> </xref:System.Windows.Forms.MenuItem> </xref:System.Windows.Forms.MainMenu>      -O alinhamento dos botões de barra de ferramentas em uma <xref:System.Windows.Forms.ToolBar>controle ou o alinhamento do texto em um <xref:System.Windows.Forms.ToolBarButton>não é afetada pela propriedade RightToLeft.</xref:System.Windows.Forms.ToolBarButton> </xref:System.Windows.Forms.ToolBar>      - <xref:System.Windows.Forms.AxHost>dá suporte ao alinhamento à direita para a esquerda; no entanto, o efeito em um controle ActiveX depende da extensão à qual o autor do controle implementou o suporte para a exibição da direita para esquerda.</xref:System.Windows.Forms.AxHost>"
  syntax:
    content: public virtual System.Windows.Forms.RightToLeft RightToLeft { get; set; }
    return:
      type: System.Windows.Forms.RightToLeft
      description: "Uma da <xref href=&quot;System.Windows.Forms.RightToLeft&quot;> </xref> valores. O padrão é <xref href=&quot;System.Windows.Forms.RightToLeft&quot;> </xref>."
  overload: System.Windows.Forms.Control.RightToLeft*
  exceptions:
  - type: System.ComponentModel.InvalidEnumArgumentException
    commentId: T:System.ComponentModel.InvalidEnumArgumentException
    description: "O valor atribuído não é um do <xref href=&quot;System.Windows.Forms.RightToLeft&quot;> </xref> valores."
  platform:
  - net462
- uid: System.Windows.Forms.Control.RightToLeftChanged
  id: RightToLeftChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RightToLeftChanged
  nameWithType: Control.RightToLeftChanged
  fullName: System.Windows.Forms.Control.RightToLeftChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.RightToLeft*>alterações de valor de propriedade.</xref:System.Windows.Forms.Control.RightToLeft*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.RightToLeft%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.RightToLeft%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example is an event handler that is executed when the <xref:System.Windows.Forms.Control.Text%2A> property value changes. The <xref:System.Windows.Forms.Control> class has several methods with the name pattern *PropertyName*`Changed` that are raised when the corresponding *PropertyName* value changes (*PropertyName* represents the name of the corresponding property).  \n  \n The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_63_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_63_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_63_1.cpp)]"
  syntax:
    content: public event EventHandler RightToLeftChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  id: RtlTranslateAlignment(System.Drawing.ContentAlignment)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RtlTranslateAlignment(ContentAlignment)
  nameWithType: Control.RtlTranslateAlignment(ContentAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateAlignment(ContentAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Converte especificado <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> ao apropriado <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> para oferecer suporte a texto da direita para esquerda."
  remarks: "Se o <xref:System.Windows.Forms.Control.RightToLeft%2A>propriedade de <xref:System.Windows.Forms.RightToLeft>é definido como `No`, o valor de retorno é igual de `align` parâmetro passado.</xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  syntax:
    content: protected System.Drawing.ContentAlignment RtlTranslateAlignment (System.Drawing.ContentAlignment align);
    parameters:
    - id: align
      type: System.Drawing.ContentAlignment
      description: "Uma da <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> valores."
    return:
      type: System.Drawing.ContentAlignment
      description: "Uma da <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> valores."
  overload: System.Windows.Forms.Control.RtlTranslateAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  id: RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RtlTranslateAlignment(HorizontalAlignment)
  nameWithType: Control.RtlTranslateAlignment(HorizontalAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateAlignment(HorizontalAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Converte especificado <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> ao apropriado <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> para oferecer suporte a texto da direita para esquerda."
  remarks: "Se o <xref:System.Windows.Forms.Control.RightToLeft%2A>propriedade de <xref:System.Windows.Forms.RightToLeft>é definido como `No`, o valor de retorno é igual de `align` parâmetro passado.</xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  syntax:
    content: protected System.Windows.Forms.HorizontalAlignment RtlTranslateAlignment (System.Windows.Forms.HorizontalAlignment align);
    parameters:
    - id: align
      type: System.Windows.Forms.HorizontalAlignment
      description: "Uma da <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> valores."
    return:
      type: System.Windows.Forms.HorizontalAlignment
      description: "Uma da <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> valores."
  overload: System.Windows.Forms.Control.RtlTranslateAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  id: RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RtlTranslateAlignment(LeftRightAlignment)
  nameWithType: Control.RtlTranslateAlignment(LeftRightAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateAlignment(LeftRightAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Converte especificado <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> ao apropriado <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> para oferecer suporte a texto da direita para esquerda."
  remarks: "Se o <xref:System.Windows.Forms.Control.RightToLeft%2A>propriedade de <xref:System.Windows.Forms.RightToLeft>é definido como `No`, o valor de retorno é igual de `align` parâmetro passado.</xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  syntax:
    content: protected System.Windows.Forms.LeftRightAlignment RtlTranslateAlignment (System.Windows.Forms.LeftRightAlignment align);
    parameters:
    - id: align
      type: System.Windows.Forms.LeftRightAlignment
      description: "Uma da <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> valores."
    return:
      type: System.Windows.Forms.LeftRightAlignment
      description: "Uma da <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> valores."
  overload: System.Windows.Forms.Control.RtlTranslateAlignment*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  id: RtlTranslateContent(System.Drawing.ContentAlignment)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RtlTranslateContent(ContentAlignment)
  nameWithType: Control.RtlTranslateContent(ContentAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateContent(ContentAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Converte especificado <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> ao apropriado <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> para oferecer suporte a texto da direita para esquerda."
  remarks: "Se o <xref:System.Windows.Forms.Control.RightToLeft%2A>propriedade de <xref:System.Windows.Forms.RightToLeft>é definido como `No`, o valor de retorno é igual de `align` parâmetro passado.</xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  syntax:
    content: protected System.Drawing.ContentAlignment RtlTranslateContent (System.Drawing.ContentAlignment align);
    parameters:
    - id: align
      type: System.Drawing.ContentAlignment
      description: "Uma da <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> valores."
    return:
      type: System.Drawing.ContentAlignment
      description: "Uma da <xref href=&quot;System.Drawing.ContentAlignment&quot;> </xref> valores."
  overload: System.Windows.Forms.Control.RtlTranslateContent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  id: RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RtlTranslateHorizontal(HorizontalAlignment)
  nameWithType: Control.RtlTranslateHorizontal(HorizontalAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateHorizontal(HorizontalAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Converte especificado <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> ao apropriado <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> para oferecer suporte a texto da direita para esquerda."
  remarks: "Se o <xref:System.Windows.Forms.Control.RightToLeft%2A>propriedade de <xref:System.Windows.Forms.RightToLeft>é definido como `No`, o valor de retorno é igual de `align` parâmetro passado.</xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  syntax:
    content: protected System.Windows.Forms.HorizontalAlignment RtlTranslateHorizontal (System.Windows.Forms.HorizontalAlignment align);
    parameters:
    - id: align
      type: System.Windows.Forms.HorizontalAlignment
      description: "Uma da <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> valores."
    return:
      type: System.Windows.Forms.HorizontalAlignment
      description: "Uma da <xref href=&quot;System.Windows.Forms.HorizontalAlignment&quot;> </xref> valores."
  overload: System.Windows.Forms.Control.RtlTranslateHorizontal*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  id: RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: RtlTranslateLeftRight(LeftRightAlignment)
  nameWithType: Control.RtlTranslateLeftRight(LeftRightAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateLeftRight(LeftRightAlignment)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Converte especificado <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> ao apropriado <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> para oferecer suporte a texto da direita para esquerda."
  remarks: "Se o <xref:System.Windows.Forms.Control.RightToLeft%2A>propriedade de <xref:System.Windows.Forms.RightToLeft>é definido como `No`, o valor de retorno é igual de `align` parâmetro passado.</xref:System.Windows.Forms.RightToLeft> </xref:System.Windows.Forms.Control.RightToLeft%2A>"
  syntax:
    content: protected System.Windows.Forms.LeftRightAlignment RtlTranslateLeftRight (System.Windows.Forms.LeftRightAlignment align);
    parameters:
    - id: align
      type: System.Windows.Forms.LeftRightAlignment
      description: "Uma da <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> valores."
    return:
      type: System.Windows.Forms.LeftRightAlignment
      description: "Uma da <xref href=&quot;System.Windows.Forms.LeftRightAlignment&quot;> </xref> valores."
  overload: System.Windows.Forms.Control.RtlTranslateLeftRight*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  id: Scale(System.Drawing.SizeF)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Scale(SizeF)
  nameWithType: Control.Scale(SizeF)
  fullName: System.Windows.Forms.Control.Scale(SizeF)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Dimensiona o controle e todos os controles filho de acordo com o fator de escala especificado."
  remarks: "O método de escala dimensiona o controle de acordo com a escala especificada `factor`. Ele também recursivamente dimensiona todos os controles filho se o <xref:System.Windows.Forms.Control.ScaleChildren%2A>é de propriedade `true`.</xref:System.Windows.Forms.Control.ScaleChildren%2A> Internamente, este método chama <xref:System.Windows.Forms.Control.ScaleControl%2A>Dimensionar cada controle.</xref:System.Windows.Forms.Control.ScaleControl%2A>"
  syntax:
    content: public void Scale (System.Drawing.SizeF factor);
    parameters:
    - id: factor
      type: System.Drawing.SizeF
      description: "Um <xref href=&quot;System.Drawing.SizeF&quot;> </xref> que contém os fatores de escala horizontais e verticais."
  overload: System.Windows.Forms.Control.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Scale(System.Single)
  id: Scale(System.Single)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Scale(Single)
  nameWithType: Control.Scale(Single)
  fullName: System.Windows.Forms.Control.Scale(Single)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Dimensiona o controle e os controles filho."
  syntax:
    content: public void Scale (float ratio);
    parameters:
    - id: ratio
      type: System.Single
      description: "A razão para usar no dimensionamento."
  overload: System.Windows.Forms.Control.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Scale(System.Single,System.Single)
  id: Scale(System.Single,System.Single)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Scale(Single,Single)
  nameWithType: Control.Scale(Single,Single)
  fullName: System.Windows.Forms.Control.Scale(Single,Single)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Dimensiona todo o controle e os controles filho."
  syntax:
    content: public void Scale (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "O fator de escala horizontal."
    - id: dy
      type: System.Single
      description: "O fator de escala vertical."
  overload: System.Windows.Forms.Control.Scale*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ScaleChildren
  id: ScaleChildren
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ScaleChildren
  nameWithType: Control.ScaleChildren
  fullName: System.Windows.Forms.Control.ScaleChildren
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que determina o dimensionamento de controles filho."
  remarks: "Se a propriedade ScaleChildren `true`, em seguida, o <xref:System.Windows.Forms.Control.Scale%2A>método será chamada recursivamente o <xref:System.Windows.Forms.Control.ScaleControl%2A>método de cada um dos seus controles filhos.</xref:System.Windows.Forms.Control.ScaleControl%2A> </xref:System.Windows.Forms.Control.Scale%2A>       Retorna a implementação padrão de ScaleChildren sempre `true`. Classes derivadas podem substituir ScaleChildren para retornar `false` para indicar que o dimensionamento não deve ser executado em seus filhos."
  syntax:
    content: protected virtual bool ScaleChildren { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os controles filho será dimensionado quando o <xref:System.Windows.Forms.Control.Scale*>método neste controle é chamado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Forms.Control.Scale*> O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ScaleChildren*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  id: ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: Control.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Control.ScaleControl(SizeF,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Dimensiona local, tamanho, preenchimento e margem de um controle."
  remarks: "Se o controle de nível superior, isso não será dimensionado local do controle. Isso não se expandir filhos ou o tamanho dos controles dimensionados automaticamente. Você pode omitir o dimensionamento em qualquer direção, alterando o valor da `specified` parâmetro."
  example:
  - "<xref:System.Windows.Forms.BoundsSpecified>  \n  \n <xref:System.Windows.Forms.Control.Scale%2A>  \n  \n <xref:System.Windows.Forms.Control.GetScaledBounds%2A>  \n  \n <xref:System.Windows.Forms.Control.SetBoundsCore%2A>"
  syntax:
    content: protected virtual void ScaleControl (System.Drawing.SizeF factor, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: factor
      type: System.Drawing.SizeF
      description: "O fator pelo qual a altura e largura do controle serão dimensionados."
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "Um <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> valor que especifica os limites do controle a ser usado ao definir seu tamanho e posição."
  overload: System.Windows.Forms.Control.ScaleControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  id: ScaleCore(System.Single,System.Single)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ScaleCore(Single,Single)
  nameWithType: Control.ScaleCore(Single,Single)
  fullName: System.Windows.Forms.Control.ScaleCore(Single,Single)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Esse método não é relevante para essa classe."
  remarks: "Esse método não é relevante para essa classe."
  syntax:
    content: protected virtual void ScaleCore (float dx, float dy);
    parameters:
    - id: dx
      type: System.Single
      description: "O fator de escala horizontal."
    - id: dy
      type: System.Single
      description: "O fator de escala vertical."
  overload: System.Windows.Forms.Control.ScaleCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Select
  id: Select
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Select()
  nameWithType: Control.Select()
  fullName: System.Windows.Forms.Control.Select()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ativa o controle."
  remarks: "O método de seleção ativa o controle se o controle `Selectable` bit de estilo é definido como `true` em <xref:System.Windows.Forms.ControlStyles>, está contida em outro controle e todos os seus controles pai são visíveis e habilitados.</xref:System.Windows.Forms.ControlStyles>       Os controles de formulários do Windows na lista a seguir não são selecionáveis. Controles derivados dos controles na lista também não poderão ser selecionados.      - <xref:System.Windows.Forms.Label>- <xref:System.Windows.Forms.Panel>- <xref:System.Windows.Forms.GroupBox>- <xref:System.Windows.Forms.PictureBox>- <xref:System.Windows.Forms.ProgressBar>- <xref:System.Windows.Forms.Splitter>- <xref:System.Windows.Forms.LinkLabel>(quando não houver nenhum presente no controle de link)</xref:System.Windows.Forms.LinkLabel> </xref:System.Windows.Forms.Splitter> </xref:System.Windows.Forms.ProgressBar> </xref:System.Windows.Forms.PictureBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.Panel> </xref:System.Windows.Forms.Label>"
  example:
  - "The following code example selects the specified <xref:System.Windows.Forms.Control>, if it is selectable.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#2](~/add/codesnippet/cpp/m-system.windows.forms.c_92_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#2](~/add/codesnippet/csharp/m-system.windows.forms.c_92_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_92_1.vb)]"
  syntax:
    content: public void Select ();
    parameters: []
  overload: System.Windows.Forms.Control.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  id: Select(System.Boolean,System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Select(Boolean,Boolean)
  nameWithType: Control.Select(Boolean,Boolean)
  fullName: System.Windows.Forms.Control.Select(Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ativa um controle filho. Opcionalmente, especifica a direção na ordem de tabulação para selecionar o controle de."
  remarks: "O `directed` e `forward` parâmetros são usados por controles de estilo do contêiner. Quando o `directed` parâmetro está definido como `true`, o `forward` parâmetro é avaliado para determinar qual controle para selecionar. Quando `forward` é definido como `true`, o próximo controle na ordem de tabulação é selecionado; quando `false`, o controle anterior na ordem de tabulação é selecionado.       O <xref:System.Windows.Forms.Control.Select%2A>método ativa o controle se o controle `Selectable` bit de estilo é definido como `true` em <xref:System.Windows.Forms.ControlStyles>, está contida em outro controle e todos os seus controles pai são visíveis e habilitados.</xref:System.Windows.Forms.ControlStyles> </xref:System.Windows.Forms.Control.Select%2A>       Os controles de formulários do Windows na lista a seguir não são selecionáveis. Controles derivados dos controles na lista também não poderão ser selecionados.      - <xref:System.Windows.Forms.Label>- <xref:System.Windows.Forms.Panel>- <xref:System.Windows.Forms.GroupBox>- <xref:System.Windows.Forms.PictureBox>- <xref:System.Windows.Forms.ProgressBar>- <xref:System.Windows.Forms.Splitter>- <xref:System.Windows.Forms.LinkLabel>(quando não houver nenhum presente no controle de link)</xref:System.Windows.Forms.LinkLabel> </xref:System.Windows.Forms.Splitter> </xref:System.Windows.Forms.ProgressBar> </xref:System.Windows.Forms.PictureBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.Panel> </xref:System.Windows.Forms.Label>"
  syntax:
    content: protected virtual void Select (bool directed, bool forward);
    parameters:
    - id: directed
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para especificar a direção do controle para selecionar; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: forward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para Avançar na ordem de tabulação; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para retroceder na ordem de tabulação."
  overload: System.Windows.Forms.Control.Select*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)
  nameWithType: Control.SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.Control.SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ativa o próximo controle."
  remarks: "O método SelectNextControl ativa o próximo controle na ordem de tabulação, se o controle `Selectable` bit de estilo é definido como `true` em <xref:System.Windows.Forms.ControlStyles>, está contida em outro controle e todos os seus controles pai são visíveis e habilitados.</xref:System.Windows.Forms.ControlStyles>       Os controles de formulários do Windows na lista a seguir não são selecionáveis. Controles derivados dos controles na lista também não poderão ser selecionados.      - <xref:System.Windows.Forms.Label>- <xref:System.Windows.Forms.Panel>- <xref:System.Windows.Forms.GroupBox>- <xref:System.Windows.Forms.PictureBox>- <xref:System.Windows.Forms.ProgressBar>- <xref:System.Windows.Forms.Splitter>- <xref:System.Windows.Forms.LinkLabel>(quando não houver nenhum presente no controle de link) quando você altera o foco usando o teclado (guia, SHIFT + TAB e assim por diante), chamando o <xref:System.Windows.Forms.Control.Select%2A>ou SelectNextControl métodos, ou definindo o <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName>propriedade para o formulário, os eventos focus ocorrem na seguinte ordem: 1.</xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> </xref:System.Windows.Forms.Control.Select%2A> </xref:System.Windows.Forms.LinkLabel> </xref:System.Windows.Forms.Splitter> </xref:System.Windows.Forms.ProgressBar> </xref:System.Windows.Forms.PictureBox> </xref:System.Windows.Forms.GroupBox> </xref:System.Windows.Forms.Panel> </xref:System.Windows.Forms.Label>  <xref:System.Windows.Forms.Control.Enter>2.</xref:System.Windows.Forms.Control.Enter>  <xref:System.Windows.Forms.Control.GotFocus>3.</xref:System.Windows.Forms.Control.GotFocus>  <xref:System.Windows.Forms.Control.Leave>4.</xref:System.Windows.Forms.Control.Leave>  <xref:System.Windows.Forms.Control.Validating>5.</xref:System.Windows.Forms.Control.Validating>  <xref:System.Windows.Forms.Control.Validated>6.</xref:System.Windows.Forms.Control.Validated>  <xref:System.Windows.Forms.Control.LostFocus>Se o <xref:System.Windows.Forms.Control.CausesValidation%2A>está definida como `false`, o <xref:System.Windows.Forms.Control.Validating>e <xref:System.Windows.Forms.Control.Validated>eventos são suprimidos.</xref:System.Windows.Forms.Control.Validated> </xref:System.Windows.Forms.Control.Validating> </xref:System.Windows.Forms.Control.CausesValidation%2A></xref:System.Windows.Forms.Control.LostFocus>"
  example:
  - "The following code exampleshows theSelectNextControl method being used in a form that has some controls. Each time that you click the form, the next control is activated. The <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A> property gets the currently active control in the container control.  \n  \n [!code-cs[System.Windows.Forms.Control.SelectNextControl#1](~/add/codesnippet/csharp/b0a604e4-0b0f-4d7f-842c-_1.cs)]\n [!code-vb[System.Windows.Forms.Control.SelectNextControl#1](~/add/codesnippet/visualbasic/b0a604e4-0b0f-4d7f-842c-_1.vb)]  \n  \n The following code example shows the SelectNextControl method being used in a form that has a <xref:System.Windows.Forms.Button> and some other controls. When you click the <xref:System.Windows.Forms.Button>, the next control after the <xref:System.Windows.Forms.Button> is activated. Notice that you have to get the parent of the <xref:System.Windows.Forms.Button> control. Since <xref:System.Windows.Forms.Button> is not a container, calling SelectNextControl directly on the <xref:System.Windows.Forms.Button> would not change the activation.  \n  \n [!code-cs[System.Windows.Forms.Control.SelectNextControl#2](~/add/codesnippet/csharp/b0a604e4-0b0f-4d7f-842c-_2.cs)]\n [!code-vb[System.Windows.Forms.Control.SelectNextControl#2](~/add/codesnippet/visualbasic/b0a604e4-0b0f-4d7f-842c-_2.vb)]"
  syntax:
    content: public bool SelectNextControl (System.Windows.Forms.Control ctl, bool forward, bool tabStopOnly, bool nested, bool wrap);
    parameters:
    - id: ctl
      type: System.Windows.Forms.Control
      description: "O <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> no qual iniciar a pesquisa."
    - id: forward
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para Avançar na ordem de tabulação; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para retroceder na ordem de tabulação."
    - id: tabStopOnly
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para ignorar os controles com o <xref:System.Windows.Forms.Control.TabStop*>propriedade definida como <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>.</xref:System.Windows.Forms.Control.TabStop*>"
    - id: nested
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>controles filho para incluir aninhados (filhos de controles filho); Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: wrap
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para continuar a pesquisa do primeiro controle na ordem de tabulação após o último controle foi atingido; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se um controle foi ativado; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.SelectNextControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SendToBack
  id: SendToBack
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SendToBack()
  nameWithType: Control.SendToBack()
  fullName: System.Windows.Forms.Control.SendToBack()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Envia o controle para trás da ordem z."
  remarks: "O controle é movido para trás da ordem z. Se o controle é um filho de outro controle, o controle filho é movido para trás da ordem z. Se o controle é um controle de nível superior, esse método não funcionará corretamente a menos que o controle está ativo. Um controle de nível superior é um controle, como um <xref:System.Windows.Forms.Form>, que é não um filho de outro controle.</xref:System.Windows.Forms.Form> Um ativo é um controle visível que tem o foco de entrada. Para usar o método SendToBack com um controle de nível superior, inativo, chame primeiro o <xref:System.Windows.Forms.Control.BringToFront%2A>método no controle.</xref:System.Windows.Forms.Control.BringToFront%2A>"
  syntax:
    content: public void SendToBack ();
    parameters: []
  overload: System.Windows.Forms.Control.SendToBack*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  id: SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetAutoSizeMode(AutoSizeMode)
  nameWithType: Control.SetAutoSizeMode(AutoSizeMode)
  fullName: System.Windows.Forms.Control.SetAutoSizeMode(AutoSizeMode)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Define um valor que indica como um controle se comportará quando seu <xref:System.Windows.Forms.Control.AutoSize*>propriedade está habilitada.</xref:System.Windows.Forms.Control.AutoSize*>"
  syntax:
    content: protected void SetAutoSizeMode (System.Windows.Forms.AutoSizeMode mode);
    parameters:
    - id: mode
      type: System.Windows.Forms.AutoSizeMode
      description: "Uma da <xref href=&quot;System.Windows.Forms.AutoSizeMode&quot;> </xref> valores."
  overload: System.Windows.Forms.Control.SetAutoSizeMode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  id: SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetBounds(Int32,Int32,Int32,Int32)
  nameWithType: Control.SetBounds(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.SetBounds(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Define os limites do controle para o local especificado e o tamanho."
  syntax:
    content: public void SetBounds (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "O novo <xref:System.Windows.Forms.Control.Left*>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Left*>"
    - id: y
      type: System.Int32
      description: "O novo <xref:System.Windows.Forms.Control.Top*>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Top*>"
    - id: width
      type: System.Int32
      description: "O novo <xref:System.Windows.Forms.Control.Width*>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "O novo <xref:System.Windows.Forms.Control.Height*>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Height*>"
  overload: System.Windows.Forms.Control.SetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: Control.SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.Control.SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Define os limites especificados do controle para o local especificado e o tamanho."
  remarks: ''
  example:
  - "The following code example centers a <xref:System.Windows.Forms.Form> on the screen in the <xref:System.Windows.Forms.Control.Layout> event. This will keep the form centered as the user resizes it. This example requires that you have created a <xref:System.Windows.Forms.Form> control.  \n  \n [!code-cs[Control.Layout#1](~/add/codesnippet/csharp/f057e785-da4d-4281-b958-_1.cs)]\n [!code-vb[Control.Layout#1](~/add/codesnippet/visualbasic/f057e785-da4d-4281-b958-_1.vb)]\n [!code-cpp[Control.Layout#1](~/add/codesnippet/cpp/f057e785-da4d-4281-b958-_1.cpp)]"
  syntax:
    content: public void SetBounds (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "O novo <xref:System.Windows.Forms.Control.Left*>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Left*>"
    - id: y
      type: System.Int32
      description: "O novo <xref:System.Windows.Forms.Control.Top*>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Top*>"
    - id: width
      type: System.Int32
      description: "O novo <xref:System.Windows.Forms.Control.Width*>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "O novo <xref:System.Windows.Forms.Control.Height*>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Height*>"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "Uma combinação bit a bit do <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> valores. Para qualquer parâmetro não especificado, o valor atual será usado."
  overload: System.Windows.Forms.Control.SetBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  id: SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: Control.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.Control.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Executa o trabalho de configurar os limites especificados deste controle."
  remarks: "Normalmente, os parâmetros que correspondem dos limites não são incluídos no `specified` parâmetro são transmitidas com seus valores atuais. Por exemplo, o <xref:System.Windows.Forms.Control.Height%2A>, <xref:System.Windows.Forms.Control.Width%2A>, ou <xref:System.Drawing.Point.X%2A>ou <xref:System.Drawing.Point.Y%2A>Propriedades do <xref:System.Windows.Forms.Control.Location%2A>propriedade pode ser passada com uma referência para a instância atual do controle.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Drawing.Point.Y%2A> </xref:System.Drawing.Point.X%2A> </xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Height%2A> Contudo, todos os valores passados são mantidos e aplicados ao controle.       O `boundsSpecified` parâmetro representa os elementos dos controles <xref:System.Windows.Forms.Control.Bounds%2A>alterado pelo seu aplicativo.</xref:System.Windows.Forms.Control.Bounds%2A> Por exemplo, se você alterar o <xref:System.Windows.Forms.Control.Size%2A>do controle, o `boundsSpecified` valor do parâmetro é o `Size` valor <xref:System.Windows.Forms.BoundsSpecified>.</xref:System.Windows.Forms.BoundsSpecified> </xref:System.Windows.Forms.Control.Size%2A> No entanto, se o <xref:System.Windows.Forms.Control.Size%2A>é ajustada em resposta ao <xref:System.Windows.Forms.Control.Dock%2A>propriedade sendo definida, o `boundsSpecified` valor do parâmetro é o `None` valor <xref:System.Windows.Forms.BoundsSpecified>.</xref:System.Windows.Forms.BoundsSpecified> </xref:System.Windows.Forms.Control.Dock%2A> </xref:System.Windows.Forms.Control.Size%2A>      > [!NOTE] > Sistemas no Windows Server 2003, o tamanho de um <xref:System.Windows.Forms.Form>é restrito pelo máximo pixels de largura e altura do monitor.</xref:System.Windows.Forms.Form>"
  example:
  - "The following code example overrides the SetBoundsCore method to ensure that the control remains a fixed size. This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.  \n  \n [!code-cs[Windows.Forms.Control_Methods#1](~/add/codesnippet/csharp/603eafb5-3583-44bd-962b-_1.cs)]\n [!code-cpp[Windows.Forms.Control_Methods#1](~/add/codesnippet/cpp/603eafb5-3583-44bd-962b-_1.cpp)]\n [!code-vb[Windows.Forms.Control_Methods#1](~/add/codesnippet/visualbasic/603eafb5-3583-44bd-962b-_1.vb)]"
  syntax:
    content: protected virtual void SetBoundsCore (int x, int y, int width, int height, System.Windows.Forms.BoundsSpecified specified);
    parameters:
    - id: x
      type: System.Int32
      description: "O novo <xref:System.Windows.Forms.Control.Left*>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Left*>"
    - id: y
      type: System.Int32
      description: "O novo <xref:System.Windows.Forms.Control.Top*>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Top*>"
    - id: width
      type: System.Int32
      description: "O novo <xref:System.Windows.Forms.Control.Width*>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Width*>"
    - id: height
      type: System.Int32
      description: "O novo <xref:System.Windows.Forms.Control.Height*>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Height*>"
    - id: specified
      type: System.Windows.Forms.BoundsSpecified
      description: "Uma combinação bit a bit do <xref href=&quot;System.Windows.Forms.BoundsSpecified&quot;> </xref> valores."
  overload: System.Windows.Forms.Control.SetBoundsCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  id: SetClientSizeCore(System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetClientSizeCore(Int32,Int32)
  nameWithType: Control.SetClientSizeCore(Int32,Int32)
  fullName: System.Windows.Forms.Control.SetClientSizeCore(Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Define o tamanho da área cliente do controle."
  remarks: "A área cliente começa com a (0, 0) local e se estende até o (`x`, `y`) local.       Normalmente, você não deve definir o <xref:System.Windows.Forms.Control.ClientSize%2A>do controle.</xref:System.Windows.Forms.Control.ClientSize%2A>"
  example:
  - "The following code example overrides the SetClientSizeCore method to ensure that the control remains square. This example requires that you have a class that is either directly or indirectly derived from the <xref:System.Windows.Forms.Control> class.  \n  \n [!code-cs[Windows.Forms.Control_Methods#2](~/add/codesnippet/csharp/m-system.windows.forms.c_54_1.cs)]\n [!code-cpp[Windows.Forms.Control_Methods#2](~/add/codesnippet/cpp/m-system.windows.forms.c_54_1.cpp)]\n [!code-vb[Windows.Forms.Control_Methods#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_54_1.vb)]"
  syntax:
    content: protected virtual void SetClientSizeCore (int x, int y);
    parameters:
    - id: x
      type: System.Int32
      description: "A largura da área cliente, em pixels."
    - id: y
      type: System.Int32
      description: "A altura da área cliente, em pixels."
  overload: System.Windows.Forms.Control.SetClientSizeCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  id: SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetStyle(ControlStyles,Boolean)
  nameWithType: Control.SetStyle(ControlStyles,Boolean)
  fullName: System.Windows.Forms.Control.SetStyle(ControlStyles,Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Define um especificado <xref href=&quot;System.Windows.Forms.ControlStyles&quot;> </xref> sinalizador como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> ou <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  remarks: "Sinalizadores de bit de estilo de controle são usados para categorizar comportamento com suporte. Um controle pode habilitar um estilo de chamar o método SetStyle e passando apropriada <xref:System.Windows.Forms.ControlStyles>bit (ou bits) e o valor booliano para definir o ão para.</xref:System.Windows.Forms.ControlStyles> Para determinar o valor atribuído a um especificado <xref:System.Windows.Forms.ControlStyles>bits, use o <xref:System.Windows.Forms.Control.GetStyle%2A>método e passar o <xref:System.Windows.Forms.ControlStyles>membro para avaliar.</xref:System.Windows.Forms.ControlStyles> </xref:System.Windows.Forms.Control.GetStyle%2A> </xref:System.Windows.Forms.ControlStyles>      > [!CAUTION] > Configurar o controle de bits de estilo substancialmente pode alterar o comportamento do controle. Examine o <xref:System.Windows.Forms.ControlStyles>documentação de enumeração para entender os efeitos de alterar os bits de estilo de controle antes de chamar o método SetStyle.</xref:System.Windows.Forms.ControlStyles>"
  example:
  - "The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#3](~/add/codesnippet/cpp/2751760d-2ebd-4c65-9243-_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#3](~/add/codesnippet/csharp/2751760d-2ebd-4c65-9243-_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#3](~/add/codesnippet/visualbasic/2751760d-2ebd-4c65-9243-_1.vb)]"
  syntax:
    content: protected void SetStyle (System.Windows.Forms.ControlStyles flag, bool value);
    parameters:
    - id: flag
      type: System.Windows.Forms.ControlStyles
      description: "O <xref href=&quot;System.Windows.Forms.ControlStyles&quot;> </xref> bit para definir."
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para aplicar o estilo especificado para o controle. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.SetStyle*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  id: SetTopLevel(System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetTopLevel(Boolean)
  nameWithType: Control.SetTopLevel(Boolean)
  fullName: System.Windows.Forms.Control.SetTopLevel(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Define o controle como controle de nível superior."
  remarks: "Se você chamar o método SetTopLevel de um <xref:System.Windows.Forms.Form>e passar um valor de `false`, o formulário não ficará visível até que você chame SetTopLevelagain, passando um valor de `true`.</xref:System.Windows.Forms.Form>"
  syntax:
    content: protected void SetTopLevel (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para definir o controle como o controle de nível superior; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.SetTopLevel*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O <code> value </code> parâmetro está definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> e o controle é um controle ActiveX."
  - type: System.Exception
    commentId: T:System.Exception
    description: "O <> </> *> valor de retorno não é igual de <code> value </code> parâmetro e o <> </> *> propriedade não é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  platform:
  - net462
- uid: System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  id: SetVisibleCore(System.Boolean)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SetVisibleCore(Boolean)
  nameWithType: Control.SetVisibleCore(Boolean)
  fullName: System.Windows.Forms.Control.SetVisibleCore(Boolean)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Define o controle para o estado de visibilidade especificado."
  remarks: "Normalmente, você poderia substituir este método para alterar o comportamento de visibilidade do controle."
  syntax:
    content: protected virtual void SetVisibleCore (bool value);
    parameters:
    - id: value
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Para tornar o controle visível; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.SetVisibleCore*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Show
  id: Show
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Show()
  nameWithType: Control.Show()
  fullName: System.Windows.Forms.Control.Show()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Exibe o controle ao usuário."
  remarks: "Mostrar o controle é equivalente à configuração de <xref:System.Windows.Forms.Control.Visible%2A>propriedade `true`.</xref:System.Windows.Forms.Control.Visible%2A> Depois que o método Show é chamado, o <xref:System.Windows.Forms.Control.Visible%2A>propriedade retorna um valor de `true` até que o <xref:System.Windows.Forms.Control.Hide%2A>método é chamado.</xref:System.Windows.Forms.Control.Hide%2A> </xref:System.Windows.Forms.Control.Visible%2A>"
  example:
  - "The following code example displays an about dialog box and temporarily draws a blue square on its surface. This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `AboutDialog`.  \n  \n [!code-cs[Windows.Forms.Control Members2#1](~/add/codesnippet/csharp/m-system.windows.forms.c_27_1.cs)]\n [!code-cpp[Windows.Forms.Control Members2#1](~/add/codesnippet/cpp/m-system.windows.forms.c_27_1.cpp)]\n [!code-vb[Windows.Forms.Control Members2#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_27_1.vb)]"
  syntax:
    content: public void Show ();
    parameters: []
  overload: System.Windows.Forms.Control.Show*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ShowFocusCues
  id: ShowFocusCues
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ShowFocusCues
  nameWithType: Control.ShowFocusCues
  fullName: System.Windows.Forms.Control.ShowFocusCues
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se o controle deve exibir retângulos de foco."
  remarks: "Para obter mais informações sobre esse recurso, consulte o[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\\(v=vs.85\\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\\(v=vs.85\\).aspx)e o [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\\(v=vs.85\\).aspx)tópicos."
  syntax:
    content: protected virtual bool ShowFocusCues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle deve exibir retângulos de foco; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ShowFocusCues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.ShowKeyboardCues
  id: ShowKeyboardCues
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: ShowKeyboardCues
  nameWithType: Control.ShowKeyboardCues
  fullName: System.Windows.Forms.Control.ShowKeyboardCues
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém um valor que indica se a interface do usuário está em um estado apropriado para mostrar ou ocultar os aceleradores de teclado."
  remarks: "In controls created in the Windows Forms designer, keyboard accelerators are visible by default.  \n  \n For more information about this feature, see the[WM_CHANGEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646342\\(v=vs.85\\).aspx),[WM_QUERYUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646355\\(v=vs.85\\).aspx), and the [WM_UPDATEUISTATE](http://msdn.microsoft.com/library/windows/desktop/ms646361\\(v=vs.85\\).aspx)topics."
  syntax:
    content: protected virtual bool ShowKeyboardCues { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os aceleradores de teclado são visíveis; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.ShowKeyboardCues*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Site
  id: Site
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Site
  nameWithType: Control.Site
  fullName: System.Windows.Forms.Control.Site
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o local do controle."
  syntax:
    content: public override System.ComponentModel.ISite Site { get; set; }
    return:
      type: System.ComponentModel.ISite
      description: "O <xref href=&quot;System.ComponentModel.ISite&quot;> </xref> associados a <xref href=&quot;System.Windows.Forms.Control&quot;> </xref>, se houver."
  overload: System.Windows.Forms.Control.Site*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Size
  id: Size
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Size
  nameWithType: Control.Size
  fullName: System.Windows.Forms.Control.Size
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a altura e largura do controle."
  remarks: "Porque o <xref:System.Drawing.Size>classe é um tipo de valor (`Structure` na [!INCLUDE[vbprvb](~/add/includes/vbprvb-md.md)], `struct` em [!INCLUDE[csprcs](~/add/includes/csprcs-md.md)]), ele é retornado por valor, o que significa que acessar a propriedade retorna uma cópia do tamanho do controle.</xref:System.Drawing.Size> Assim, ajustando a <xref:System.Drawing.Size.Width%2A>ou <xref:System.Drawing.Size.Height%2A>Propriedades do <xref:System.Drawing.Size>retornada desta propriedade não afetará a <xref:System.Windows.Forms.Control.Width%2A>ou <xref:System.Windows.Forms.Control.Height%2A>do controle.</xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Control.Width%2A> </xref:System.Drawing.Size> </xref:System.Drawing.Size.Height%2A> </xref:System.Drawing.Size.Width%2A> Para ajustar o <xref:System.Windows.Forms.Control.Width%2A>ou <xref:System.Windows.Forms.Control.Height%2A>do controle, você deve definir o controle <xref:System.Windows.Forms.Control.Width%2A>ou <xref:System.Windows.Forms.Control.Height%2A>propriedade, ou defina a propriedade de tamanho com um novo <xref:System.Drawing.Size>.</xref:System.Drawing.Size> </xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Control.Width%2A> </xref:System.Windows.Forms.Control.Height%2A> </xref:System.Windows.Forms.Control.Width%2A>      > [!NOTE] > Para manter o melhor desempenho, não defina o <xref:System.Drawing.Size>de um controle em seu construtor.</xref:System.Drawing.Size> É o método preferido substituir o <xref:System.Windows.Forms.Control.DefaultSize%2A>propriedade.</xref:System.Windows.Forms.Control.DefaultSize%2A>      > [!NOTE] > Sistemas no Windows Server 2003, o tamanho de um <xref:System.Windows.Forms.Form>é restrito pelo máximo pixels de largura e altura do monitor.</xref:System.Windows.Forms.Form>"
  example:
  - "The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the<xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \n  \n [!code-cs[Windows.Forms.Control Properties#3](~/add/codesnippet/csharp/p-system.windows.forms.c_76_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#3](~/add/codesnippet/cpp/p-system.windows.forms.c_76_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_76_1.vb)]"
  syntax:
    content: public System.Drawing.Size Size { get; set; }
    return:
      type: System.Drawing.Size
      description: "O <xref href=&quot;System.Drawing.Size&quot;> </xref> que representa a altura e largura do controle em pixels."
  overload: System.Windows.Forms.Control.Size*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SizeChanged
  id: SizeChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SizeChanged
  nameWithType: Control.SizeChanged
  fullName: System.Windows.Forms.Control.SizeChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.Size*>alterações de valor de propriedade.</xref:System.Windows.Forms.Control.Size*>"
  remarks: "É preferível usar o <xref:System.Windows.Forms.Control.Layout>eventos para lidar com layouts personalizados.</xref:System.Windows.Forms.Control.Layout> O <xref:System.Windows.Forms.Control.Layout>é gerado em resposta a <xref:System.Windows.Forms.Control.Resize>eventos, mas também em outras condições ao layout talvez precise ser aplicada.</xref:System.Windows.Forms.Control.Resize> </xref:System.Windows.Forms.Control.Layout>       Esse evento é gerado se o <xref:System.Windows.Forms.Control.Size%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.Size%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the SizeChanged event. An instance of a <xref:System.Windows.Forms.Button> control has been provided that can be scaled both horizontally and vertically. A <xref:System.Windows.Forms.NumericUpDown> instance provides the horizontal and vertical scale value. The <xref:System.Windows.Forms.Button> instance named **OK** is used to set the scale values for the <xref:System.Windows.Forms.Button> control instance. Whenever the size of the control changes, the event handler associated with the SizeChanged event of the control is called. This event handler displays a message box indicating that the size of the control has changed.  \n  \n [!code-cs[Control_Scale1#2](~/add/codesnippet/csharp/e-system.windows.forms.c_24_1.cs)]\n [!code-cpp[Control_Scale1#2](~/add/codesnippet/cpp/e-system.windows.forms.c_24_1.cpp)]\n [!code-vb[Control_Scale1#2](~/add/codesnippet/visualbasic/e-system.windows.forms.c_24_1.vb)]"
  syntax:
    content: public event EventHandler SizeChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  id: SizeFromClientSize(System.Drawing.Size)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SizeFromClientSize(Size)
  nameWithType: Control.SizeFromClientSize(Size)
  fullName: System.Windows.Forms.Control.SizeFromClientSize(Size)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Determina o tamanho de todo o controle de altura e largura da sua área cliente."
  syntax:
    content: protected virtual System.Drawing.Size SizeFromClientSize (System.Drawing.Size clientSize);
    parameters:
    - id: clientSize
      type: System.Drawing.Size
      description: "Um <xref href=&quot;System.Drawing.Size&quot;> </xref> valor que representa a altura e largura da área do cliente do controle."
    return:
      type: System.Drawing.Size
      description: "Um <xref href=&quot;System.Drawing.Size&quot;> </xref> valor que representa a altura e largura de todo o controle."
  overload: System.Windows.Forms.Control.SizeFromClientSize*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.StyleChanged
  id: StyleChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: StyleChanged
  nameWithType: Control.StyleChanged
  fullName: System.Windows.Forms.Control.StyleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o estilo de controle é alterado."
  remarks: "O evento StyleChanged ocorre quando <xref:System.Windows.Forms.ControlStyles>sinalizadores foram adicionados ou alterados.</xref:System.Windows.Forms.ControlStyles>       Esse evento é gerado se o estilo do controle é alterado por uma modificação programática ou a interação do usuário.       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the StyleChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the StyleChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#68](~/add/codesnippet/csharp/e-system.windows.forms.c_25_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#68](~/add/codesnippet/visualbasic/e-system.windows.forms.c_25_1.vb)]"
  syntax:
    content: public event EventHandler StyleChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SuspendLayout
  id: SuspendLayout
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SuspendLayout()
  nameWithType: Control.SuspendLayout()
  fullName: System.Windows.Forms.Control.SuspendLayout()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Suspende temporariamente a lógica de layout para o controle."
  remarks: "A lógica de layout do controle será suspensa até que o <xref:System.Windows.Forms.Control.ResumeLayout%2A>método é chamado.</xref:System.Windows.Forms.Control.ResumeLayout%2A>       O SuspendLayout e <xref:System.Windows.Forms.Control.ResumeLayout%2A>métodos são usados em conjunto para suprimir vários <xref:System.Windows.Forms.Control.Layout>eventos enquanto você ajustar vários atributos do controle.</xref:System.Windows.Forms.Control.Layout> </xref:System.Windows.Forms.Control.ResumeLayout%2A> Por exemplo, você faria normalmente chamar o método SuspendLayout e definir o <xref:System.Windows.Forms.Control.Size%2A>, <xref:System.Windows.Forms.Control.Location%2A>, <xref:System.Windows.Forms.Control.Anchor%2A>, ou <xref:System.Windows.Forms.Control.Dock%2A>as propriedades do controle e, em seguida, chame o <xref:System.Windows.Forms.Control.ResumeLayout%2A>método para permitir que as alterações entrem em vigor.</xref:System.Windows.Forms.Control.ResumeLayout%2A> </xref:System.Windows.Forms.Control.Dock%2A> </xref:System.Windows.Forms.Control.Anchor%2A> </xref:System.Windows.Forms.Control.Location%2A> </xref:System.Windows.Forms.Control.Size%2A>       Não deve haver nenhuma chamada pendente para SuspendLayout para <xref:System.Windows.Forms.Control.ResumeLayout%2A>a ser chamado com êxito.</xref:System.Windows.Forms.Control.ResumeLayout%2A>      > [!NOTE] > Ao adicionar vários controles a um controle pai, é recomendável que você chamar o método SuspendLayout antes de inicializar os controles sejam adicionados. Depois de adicionar os controles para o controle pai, chame o <xref:System.Windows.Forms.Control.ResumeLayout%2A>método.</xref:System.Windows.Forms.Control.ResumeLayout%2A> Isso aumentará o desempenho de aplicativos com muitos controles."
  example:
  - "The following code example adds two buttons to a form. The example transactions the addition of the buttons by using the SuspendLayout and <xref:System.Windows.Forms.Control.ResumeLayout%2A> methods.  \n  \n [!code-cs[Windows.Forms.Control Members2#2](~/add/codesnippet/csharp/m-system.windows.forms.c_14_1.cs)]\n [!code-cpp[Windows.Forms.Control Members2#2](~/add/codesnippet/cpp/m-system.windows.forms.c_14_1.cpp)]\n [!code-vb[Windows.Forms.Control Members2#2](~/add/codesnippet/visualbasic/m-system.windows.forms.c_14_1.vb)]"
  syntax:
    content: public void SuspendLayout ();
    parameters: []
  overload: System.Windows.Forms.Control.SuspendLayout*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  id: System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  isEii: true
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: System.Windows.Forms.IDropTarget.OnDragDrop(DragEventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragDrop(DragEventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragDrop(DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.DragDrop&quot;> </xref> eventos."
  syntax:
    content: void IDropTarget.OnDragDrop (System.Windows.Forms.DragEventArgs drgEvent);
    parameters:
    - id: drgEvent
      type: System.Windows.Forms.DragEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  id: System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  isEii: true
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: System.Windows.Forms.IDropTarget.OnDragEnter(DragEventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragEnter(DragEventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragEnter(DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.DragEnter&quot;> </xref> eventos."
  syntax:
    content: void IDropTarget.OnDragEnter (System.Windows.Forms.DragEventArgs drgEvent);
    parameters:
    - id: drgEvent
      type: System.Windows.Forms.DragEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  id: System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  isEii: true
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.DragLeave&quot;> </xref> eventos."
  syntax:
    content: void IDropTarget.OnDragLeave (EventArgs e);
    parameters:
    - id: e
      type: System.EventArgs
      description: "Um <xref:System.EventArgs>que contém os dados de evento.</xref:System.EventArgs>"
  overload: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  id: System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  isEii: true
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: System.Windows.Forms.IDropTarget.OnDragOver(DragEventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragOver(DragEventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragOver(DragEventArgs)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Gera o <xref href=&quot;System.Windows.Forms.Control.DragOver&quot;> </xref> eventos."
  syntax:
    content: void IDropTarget.OnDragOver (System.Windows.Forms.DragEventArgs drgEvent);
    parameters:
    - id: drgEvent
      type: System.Windows.Forms.DragEventArgs
      description: "Um <xref href=&quot;System.Windows.Forms.DragEventArgs&quot;> </xref> que contém os dados de evento."
  overload: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.SystemColorsChanged
  id: SystemColorsChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: SystemColorsChanged
  nameWithType: Control.SystemColorsChanged
  fullName: System.Windows.Forms.Control.SystemColorsChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando alterar as cores do sistema."
  remarks: "Esse evento é gerado se o <xref:System.Drawing.SystemColors>é alterada por uma modificação programática ou a interação do usuário.</xref:System.Drawing.SystemColors>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the SystemColorsChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the SystemColorsChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#69](~/add/codesnippet/csharp/e-system.windows.forms.c_57_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#69](~/add/codesnippet/visualbasic/e-system.windows.forms.c_57_1.vb)]"
  syntax:
    content: public event EventHandler SystemColorsChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.TabIndex
  id: TabIndex
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: TabIndex
  nameWithType: Control.TabIndex
  fullName: System.Windows.Forms.Control.TabIndex
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a ordem de tabulação do controle dentro do respectivo contêiner."
  remarks: "Um índice de tabulação pode consistir em qualquer inteiro válido maior ou igual a zero, números menores que está sendo anterior na ordem de tabulação. Se mais de um controle do mesmo controle pai tem o mesmo índice de tabulação, a ordem z dos controles determina a ordem para alternar entre os controles.       Para um controle a ser incluído na ordem de tabulação, seu <xref:System.Windows.Forms.Control.TabStop%2A>propriedade deve ser definida como `true`.</xref:System.Windows.Forms.Control.TabStop%2A>"
  example:
  - "The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>. The example then sets the <xref:System.Windows.Forms.Control.TabStop%2A> to `true` and sets the TabIndex property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \n  \n [!code-cs[Windows.Forms.Control Properties#3](~/add/codesnippet/csharp/p-system.windows.forms.c_102_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#3](~/add/codesnippet/cpp/p-system.windows.forms.c_102_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_102_1.vb)]"
  syntax:
    content: public int TabIndex { get; set; }
    return:
      type: System.Int32
      description: "O valor de índice do controle dentro do conjunto de controles do respectivo contêiner. Os controles no contêiner são incluídos na ordem de tabulação."
  overload: System.Windows.Forms.Control.TabIndex*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.TabIndexChanged
  id: TabIndexChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: TabIndexChanged
  nameWithType: Control.TabIndexChanged
  fullName: System.Windows.Forms.Control.TabIndexChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.TabIndex*>alterações de valor de propriedade.</xref:System.Windows.Forms.Control.TabIndex*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.TabIndex%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.TabIndex%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the TabIndexChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the TabIndexChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#25](~/add/codesnippet/csharp/e-system.windows.forms.c_79_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#25](~/add/codesnippet/visualbasic/e-system.windows.forms.c_79_1.vb)]"
  syntax:
    content: public event EventHandler TabIndexChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.TabStop
  id: TabStop
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: TabStop
  nameWithType: Control.TabStop
  fullName: System.Windows.Forms.Control.TabStop
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se o usuário pode conceder o foco para esse controle usando a tecla TAB."
  remarks: "Quando o usuário pressiona a tecla TAB, o foco de entrada é definido para o próximo controle na ordem de tabulação. Controles com o valor da propriedade TabStop de `false` não são incluídos na coleção de controles na ordem de tabulação. A ordem de tabulação pode ser manipulada, definindo o controle <xref:System.Windows.Forms.Control.TabIndex%2A>o valor da propriedade.</xref:System.Windows.Forms.Control.TabIndex%2A>"
  example:
  - "The following code example adds a <xref:System.Windows.Forms.Button> to a form and sets some of its common properties. The example anchors the button to the bottom-right corner of the form so it keeps its relative position as the form is resized. Next it sets the <xref:System.Windows.Forms.Control.BackgroundImage%2A> and resizes the button to the same size as the <xref:System.Drawing.Image>. The example then sets the TabStop to `true` and sets the <xref:System.Windows.Forms.Control.TabIndex%2A> property. Lastly, it adds an event handler to handle the <xref:System.Windows.Forms.Control.Click> event of the button. This example requires that you have an <xref:System.Windows.Forms.ImageList> named `imageList1`.  \n  \n [!code-cs[Windows.Forms.Control Properties#3](~/add/codesnippet/csharp/p-system.windows.forms.c_74_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#3](~/add/codesnippet/cpp/p-system.windows.forms.c_74_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_74_1.vb)]"
  syntax:
    content: public bool TabStop { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o usuário pode fornecer o foco para o controle usando a tecla TAB; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>.       <div class=&quot;alert NOTE&quot;>    Essa propriedade sempre retornará <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> para uma instância do <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> classe.      </div>"
  overload: System.Windows.Forms.Control.TabStop*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.TabStopChanged
  id: TabStopChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: TabStopChanged
  nameWithType: Control.TabStopChanged
  fullName: System.Windows.Forms.Control.TabStopChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.TabStop*>alterações de valor de propriedade.</xref:System.Windows.Forms.Control.TabStop*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.TabStop%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.TabStop%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example demonstrates the use of this member. In the example, an event handler reports on the occurrence of the TabStopChanged event. This report helps you to learn when the event occurs and can assist you in debugging. To report on multiple events or on events that occur frequently, consider replacing <xref:System.Windows.Forms.MessageBox.Show%2A?displayProperty=fullName> with <xref:System.Console.WriteLine%2A?displayProperty=fullName> or appending the message to a multiline <xref:System.Windows.Forms.TextBox>.  \n  \n To run the example code, paste it into a project that contains an instance of a type that inherits from <xref:System.Windows.Forms.Control>, such as a <xref:System.Windows.Forms.Button> or <xref:System.Windows.Forms.ComboBox>. Then name the instance `Control1` and ensure that the event handler is associated with the TabStopChanged event.  \n  \n [!code-cs[System.Windows.Forms.EventExamples#26](~/add/codesnippet/csharp/e-system.windows.forms.c_83_1.cs)]\n [!code-vb[System.Windows.Forms.EventExamples#26](~/add/codesnippet/visualbasic/e-system.windows.forms.c_83_1.vb)]"
  syntax:
    content: public event EventHandler TabStopChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Tag
  id: Tag
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Tag
  nameWithType: Control.Tag
  fullName: System.Windows.Forms.Control.Tag
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o objeto que contém dados sobre o controle."
  remarks: "Qualquer tipo derivado de <xref:System.Object>classe pode ser atribuída a essa propriedade.</xref:System.Object> Se a propriedade de marca é definida por meio do designer de formulários do Windows, pode ser atribuído somente texto.       Um uso comum para a propriedade de marca é armazenar dados que estão estreitamente relacionados com o controle. Por exemplo, se você tiver um controle que exibe informações sobre um cliente, você pode armazenar um <xref:System.Data.DataSet>que contém o histórico de pedidos do cliente na propriedade de marca do controle para os dados possam ser acessados rapidamente.</xref:System.Data.DataSet>"
  example:
  - "The following code example displays a form and stores a `Customer` in its Tag property. This example requires that you have defined a class that derives from <xref:System.Windows.Forms.Form> named `CustomerForm` and that you have defined a `Customer`.  \n  \n [!code-cs[Windows.Forms.Control Members2#3](~/add/codesnippet/csharp/p-system.windows.forms.c_59_1.cs)]\n [!code-cpp[Windows.Forms.Control Members2#3](~/add/codesnippet/cpp/p-system.windows.forms.c_59_1.cpp)]\n [!code-vb[Windows.Forms.Control Members2#3](~/add/codesnippet/visualbasic/p-system.windows.forms.c_59_1.vb)]"
  syntax:
    content: public object Tag { get; set; }
    return:
      type: System.Object
      description: "Um <xref:System.Object>que contém dados sobre o controle.</xref:System.Object> O padrão é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.Tag*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Text
  id: Text
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Text
  nameWithType: Control.Text
  fullName: System.Windows.Forms.Control.Text
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define o texto associado a este controle."
  remarks: "A propriedade de texto do controle é usada diferentemente por cada classe derivada. Por exemplo, a propriedade de texto de um <xref:System.Windows.Forms.Form>é exibido na barra de título na parte superior do formulário, é bastante pequeno na contagem de caracteres e geralmente exibe o nome do aplicativo ou documento.</xref:System.Windows.Forms.Form> No entanto, a propriedade Text de uma <xref:System.Windows.Forms.RichTextBox>podem ser grandes e pode incluir vários caracteres não visuais usados para formatar o texto.</xref:System.Windows.Forms.RichTextBox> Por exemplo, o texto exibido em um <xref:System.Windows.Forms.RichTextBox>pode ser formatada, ajustando o <xref:System.Drawing.Font>Propriedades, ou pela adição de espaços ou caracteres de tabulação para alinhar o texto.</xref:System.Drawing.Font> </xref:System.Windows.Forms.RichTextBox>"
  example:
  - "The following code example creates a <xref:System.Windows.Forms.GroupBox> and sets some of its common properties. The example creates a <xref:System.Windows.Forms.TextBox> and sets its <xref:System.Windows.Forms.Control.Location%2A> within the group box. Next, it sets the Text property of the group box, and docks the group box to the top of the form. Lastly, it disables the group box by setting the <xref:System.Windows.Forms.Control.Enabled%2A> property to `false`, which causes all controls contained within the group box to be disabled.  \n  \n [!code-cs[Windows.Forms.Control Properties#2](~/add/codesnippet/csharp/p-system.windows.forms.c_89_1.cs)]\n [!code-cpp[Windows.Forms.Control Properties#2](~/add/codesnippet/cpp/p-system.windows.forms.c_89_1.cpp)]\n [!code-vb[Windows.Forms.Control Properties#2](~/add/codesnippet/visualbasic/p-system.windows.forms.c_89_1.vb)]"
  syntax:
    content: public virtual string Text { get; set; }
    return:
      type: System.String
      description: "O texto associado a este controle."
  overload: System.Windows.Forms.Control.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.TextChanged
  id: TextChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: TextChanged
  nameWithType: Control.TextChanged
  fullName: System.Windows.Forms.Control.TextChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.Text*>alterações de valor de propriedade.</xref:System.Windows.Forms.Control.Text*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.Text%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.Text%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example changes the <xref:System.Windows.Forms.Control.ForeColor%2A> of a <xref:System.Windows.Forms.TextBox> displaying currency data. The example converts the text to a decimal number and changes the <xref:System.Windows.Forms.Control.ForeColor%2A> to <xref:System.Drawing.Color.Red%2A?displayProperty=fullName> if the number is negative and to <xref:System.Drawing.Color.Black%2A?displayProperty=fullName> if the number is positive. This example requires that you have a <xref:System.Windows.Forms.Form> that contains a <xref:System.Windows.Forms.TextBox>.  \n  \n [!code-vb[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_19_1.vb)]\n [!code-cs[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/csharp/e-system.windows.forms.c_19_1.cs)]\n [!code-cpp[Windows.Forms.Control_PropertyChangedEvents#1](~/add/codesnippet/cpp/e-system.windows.forms.c_19_1.cpp)]"
  syntax:
    content: public event EventHandler TextChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Top
  id: Top
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Top
  nameWithType: Control.Top
  fullName: System.Windows.Forms.Control.Top
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a distância em pixels entre a borda superior do controle e a borda superior da área cliente do seu contêiner."
  remarks: "O valor da propriedade superior é equivalente ao <xref:System.Drawing.Point.Y%2A?displayProperty=fullName>propriedade o <xref:System.Windows.Forms.Control.Location%2A>valor da propriedade do controle.</xref:System.Windows.Forms.Control.Location%2A> </xref:System.Drawing.Point.Y%2A?displayProperty=fullName>       As alterações feitas a <xref:System.Windows.Forms.Control.Height%2A>e valores de propriedade Top levam o <xref:System.Windows.Forms.Control.Bottom%2A>valor da propriedade do controle para alterar.</xref:System.Windows.Forms.Control.Bottom%2A> </xref:System.Windows.Forms.Control.Height%2A>"
  example:
  - "The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \n  \n [!code-cs[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/csharp/p-system.windows.forms.c_77_1.cs)]\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/cpp/p-system.windows.forms.c_77_1.cpp)]\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_77_1.vb)]"
  syntax:
    content: public int Top { get; set; }
    return:
      type: System.Int32
      description: "Um <xref:System.Int32>que representa a distância em pixels entre a borda inferior do controle e a borda superior da área cliente do seu contêiner.</xref:System.Int32>"
  overload: System.Windows.Forms.Control.Top*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.TopLevelControl
  id: TopLevelControl
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: TopLevelControl
  nameWithType: Control.TopLevelControl
  fullName: System.Windows.Forms.Control.TopLevelControl
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém o controle pai que não é pai por outro controle de formulários do Windows. Normalmente, isso é mais externo <xref href=&quot;System.Windows.Forms.Form&quot;> </xref> contido no controle."
  remarks: "O controle de nível superior é definido como o controle pai que não é pai por outro controle de formulários do Windows. Normalmente, isso é mais externo <xref:System.Windows.Forms.Form>que o controle está contido.</xref:System.Windows.Forms.Form> Por exemplo, se o controle está contido em um filho MDI <xref:System.Windows.Forms.Form>em seguida, o controle de nível superior é o pai de Interface de documentos múltiplos (MDI) <xref:System.Windows.Forms.Form>.</xref:System.Windows.Forms.Form> </xref:System.Windows.Forms.Form> Se o controle não é pai em um <xref:System.Windows.Forms.Form>, esta propriedade retornará `null`.</xref:System.Windows.Forms.Form>"
  syntax:
    content: public System.Windows.Forms.Control TopLevelControl { get; }
    return:
      type: System.Windows.Forms.Control
      description: "O <xref href=&quot;System.Windows.Forms.Control&quot;> </xref> que representa o controle de nível superior que contém o controle atual."
  overload: System.Windows.Forms.Control.TopLevelControl*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Update
  id: Update
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Update()
  nameWithType: Control.Update()
  fullName: System.Windows.Forms.Control.Update()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Faz com que o controle redesenhar as invalidada regiões dentro de sua área cliente."
  remarks: "Executes any pending requests for painting.  \n  \n There are two ways to repaint a form and its contents:  \n  \n-   You can use one of the overloads of the <xref:System.Windows.Forms.Control.Invalidate%2A> method with the Update method.  \n  \n-   You can call the <xref:System.Windows.Forms.Control.Refresh%2A> method, which forces the control to redraw itself and all its children. This is equivalent to setting the <xref:System.Windows.Forms.Control.Invalidate%2A> method to `true` and using it with Update.  \n  \n The <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted or repainted. The Update method governs when the painting or repainting occurs. If you use the <xref:System.Windows.Forms.Control.Invalidate%2A> and Update methods together rather than calling <xref:System.Windows.Forms.Control.Refresh%2A>, what gets repainted depends on which overload of <xref:System.Windows.Forms.Control.Invalidate%2A> you use. The Update method just forces the control to be painted immediately, but the <xref:System.Windows.Forms.Control.Invalidate%2A> method governs what gets painted when you call the Update method.  \n  \n For more information, see the[WM_PAINT](http://msdn.microsoft.com/library/dd145213\\(v=vs.85\\).aspx)topic."
  syntax:
    content: public void Update ();
    parameters: []
  overload: System.Windows.Forms.Control.Update*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.UpdateBounds
  id: UpdateBounds
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: UpdateBounds()
  nameWithType: Control.UpdateBounds()
  fullName: System.Windows.Forms.Control.UpdateBounds()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Atualiza os limites do controle com o tamanho atual e o local."
  remarks: "Se o novo <xref:System.Windows.Forms.Control.Size%2A>do controle é diferente do anterior <xref:System.Drawing.Size>, o <xref:System.Windows.Forms.Control.SizeChanged>é gerado.</xref:System.Windows.Forms.Control.SizeChanged> </xref:System.Drawing.Size> </xref:System.Windows.Forms.Control.Size%2A> Da mesma forma, se o <xref:System.Windows.Forms.Control.Location%2A>as alterações de controle, o <xref:System.Windows.Forms.Control.LocationChanged>é gerado.</xref:System.Windows.Forms.Control.LocationChanged> </xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: protected void UpdateBounds ();
    parameters: []
  overload: System.Windows.Forms.Control.UpdateBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  id: UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: UpdateBounds(Int32,Int32,Int32,Int32)
  nameWithType: Control.UpdateBounds(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.UpdateBounds(Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Atualiza os limites do controle com o tamanho especificado e o local."
  remarks: "Se o novo <xref:System.Windows.Forms.Control.Size%2A>do controle se for diferente do anterior <xref:System.Drawing.Size>, o <xref:System.Windows.Forms.Control.SizeChanged>é gerado.</xref:System.Windows.Forms.Control.SizeChanged> </xref:System.Drawing.Size> </xref:System.Windows.Forms.Control.Size%2A> Da mesma forma, é o <xref:System.Windows.Forms.Control.Location%2A>as alterações de controle, o <xref:System.Windows.Forms.Control.LocationChanged>é gerado.</xref:System.Windows.Forms.Control.LocationChanged> </xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: protected void UpdateBounds (int x, int y, int width, int height);
    parameters:
    - id: x
      type: System.Int32
      description: "O <xref:System.Drawing.Point.X*>coordenada do controle.</xref:System.Drawing.Point.X*>"
    - id: y
      type: System.Int32
      description: "O <xref:System.Drawing.Point.Y*>coordenada do controle.</xref:System.Drawing.Point.Y*>"
    - id: width
      type: System.Int32
      description: "O <xref:System.Drawing.Size.Width*>do controle.</xref:System.Drawing.Size.Width*>"
    - id: height
      type: System.Int32
      description: "O <xref:System.Drawing.Size.Height*>do controle.</xref:System.Drawing.Size.Height*>"
  overload: System.Windows.Forms.Control.UpdateBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  id: UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Control.UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Atualiza os limites do controle com o tamanho especificado, o local e o tamanho do cliente."
  remarks: "Se o novo <xref:System.Windows.Forms.Control.Size%2A>do controle é diferente do anterior <xref:System.Drawing.Size>, o <xref:System.Windows.Forms.Control.SizeChanged>é gerado.</xref:System.Windows.Forms.Control.SizeChanged> </xref:System.Drawing.Size> </xref:System.Windows.Forms.Control.Size%2A> Da mesma forma, se o <xref:System.Windows.Forms.Control.Location%2A>as alterações de controle, o <xref:System.Windows.Forms.Control.LocationChanged>é gerado.</xref:System.Windows.Forms.Control.LocationChanged> </xref:System.Windows.Forms.Control.Location%2A>"
  syntax:
    content: protected void UpdateBounds (int x, int y, int width, int height, int clientWidth, int clientHeight);
    parameters:
    - id: x
      type: System.Int32
      description: "O <xref:System.Drawing.Point.X*>coordenada do controle.</xref:System.Drawing.Point.X*>"
    - id: y
      type: System.Int32
      description: "O <xref:System.Drawing.Point.Y*>coordenada do controle.</xref:System.Drawing.Point.Y*>"
    - id: width
      type: System.Int32
      description: "O <xref:System.Drawing.Size.Width*>do controle.</xref:System.Drawing.Size.Width*>"
    - id: height
      type: System.Int32
      description: "O <xref:System.Drawing.Size.Height*>do controle.</xref:System.Drawing.Size.Height*>"
    - id: clientWidth
      type: System.Int32
      description: "O cliente <xref:System.Drawing.Size.Width*>do controle.</xref:System.Drawing.Size.Width*>"
    - id: clientHeight
      type: System.Int32
      description: "O cliente <xref:System.Drawing.Size.Height*>do controle.</xref:System.Drawing.Size.Height*>"
  overload: System.Windows.Forms.Control.UpdateBounds*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.UpdateStyles
  id: UpdateStyles
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: UpdateStyles()
  nameWithType: Control.UpdateStyles()
  fullName: System.Windows.Forms.Control.UpdateStyles()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Força os estilos atribuídos para o controle."
  remarks: "Este método chama o <xref:System.Windows.Forms.Control.CreateParams%2A>método para obter os estilos para aplicar.</xref:System.Windows.Forms.Control.CreateParams%2A> Os estilos atribuídos para o <xref:System.Windows.Forms.CreateParams.Style%2A>e <xref:System.Windows.Forms.CreateParams.ExStyle%2A>Propriedades do <xref:System.Windows.Forms.CreateParams>atribuídos ao controle de <xref:System.Windows.Forms.Control.CreateParams%2A>propriedade são reaplicadas.</xref:System.Windows.Forms.Control.CreateParams%2A> </xref:System.Windows.Forms.CreateParams> </xref:System.Windows.Forms.CreateParams.ExStyle%2A> </xref:System.Windows.Forms.CreateParams.Style%2A> O controle é redesenhado para refletir as alterações de estilo, se necessário.       O método UpdateStyles não tem nenhum efeito se a <xref:System.Windows.Forms.Control.IsHandleCreated%2A>é o valor da propriedade `false`.</xref:System.Windows.Forms.Control.IsHandleCreated%2A>"
  example:
  - "The following code example enables double-buffering on a <xref:System.Windows.Forms.Form> and updates the styles to reflect the changes.  \n  \n [!code-cpp[Windows.Forms.ControlMembers6#3](~/add/codesnippet/cpp/m-system.windows.forms.c_39_1.cpp)]\n [!code-cs[Windows.Forms.ControlMembers6#3](~/add/codesnippet/csharp/m-system.windows.forms.c_39_1.cs)]\n [!code-vb[Windows.Forms.ControlMembers6#3](~/add/codesnippet/visualbasic/m-system.windows.forms.c_39_1.vb)]"
  syntax:
    content: protected void UpdateStyles ();
    parameters: []
  overload: System.Windows.Forms.Control.UpdateStyles*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.UpdateZOrder
  id: UpdateZOrder
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: UpdateZOrder()
  nameWithType: Control.UpdateZOrder()
  fullName: System.Windows.Forms.Control.UpdateZOrder()
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Atualiza o controle na ordem z de seu pai."
  remarks: "O método UpdateZOrder atualiza a posição do controle na ordem z do controle pai. Por exemplo, se este controle é criado recentemente controle que foi adicionado a um <xref:System.Windows.Forms.Control.ControlCollection>, a ordem z é atualizada com o novo controle adicionado para trás.</xref:System.Windows.Forms.Control.ControlCollection>"
  syntax:
    content: protected void UpdateZOrder ();
    parameters: []
  overload: System.Windows.Forms.Control.UpdateZOrder*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.UseWaitCursor
  id: UseWaitCursor
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: UseWaitCursor
  nameWithType: Control.UseWaitCursor
  fullName: System.Windows.Forms.Control.UseWaitCursor
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se deve usar o cursor de espera para o controle atual e todos os controles filho."
  remarks: "Use um cursor de espera sempre que você executar uma operação que leva uma quantidade considerável de tempo. No entanto, observe que as operações que bloquear o thread de interface do usuário também bloqueará acursor alteração. Portanto, esta propriedade só deve ser usada ao executar operações demoradas em outro thread. Para alterar o cursor global e imediatamente, seethe <xref:System.Windows.Forms.Cursor.Current%2A>propriedade.</xref:System.Windows.Forms.Cursor.Current%2A>"
  syntax:
    content: public bool UseWaitCursor { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Use o cursor de espera para o controle atual e todos os controles de filho. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.UseWaitCursor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Validated
  id: Validated
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Validated
  nameWithType: Control.Validated
  fullName: System.Windows.Forms.Control.Validated
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle é terminado a validação."
  remarks: "When you change the focus by using the keyboard (TAB, SHIFT+TAB, and so on), by calling the <xref:System.Windows.Forms.Control.Select%2A> or <xref:System.Windows.Forms.Control.SelectNextControl%2A> methods, or by setting the <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> property to the current form, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.Leave>  \n  \n4.  <xref:System.Windows.Forms.Control.Validating>  \n  \n5.  Validated  \n  \n6.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n When you change the focus by using the mouse or by calling the <xref:System.Windows.Forms.Control.Focus%2A> method, focus events occur in the following order:  \n  \n1.  <xref:System.Windows.Forms.Control.Enter>  \n  \n2.  <xref:System.Windows.Forms.Control.GotFocus>  \n  \n3.  <xref:System.Windows.Forms.Control.LostFocus>  \n  \n4.  <xref:System.Windows.Forms.Control.Leave>  \n  \n5.  <xref:System.Windows.Forms.Control.Validating>  \n  \n6.  Validated  \n  \n If the <xref:System.Windows.Forms.Control.CausesValidation%2A> property is set to `false`, the <xref:System.Windows.Forms.Control.Validating> and Validated events are suppressed.  \n  \n If the <xref:System.ComponentModel.CancelEventArgs.Cancel%2A> property of the <xref:System.ComponentModel.CancelEventArgs> is set to `true` in the <xref:System.Windows.Forms.Control.Validating> event delegate, all events that would usually occur after the <xref:System.Windows.Forms.Control.Validating> event are suppressed.  \n  \n> [!CAUTION]\n>  Do not attempt to set focus from within the <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, <xref:System.Windows.Forms.Control.Validating>, or Validated event handlers. Doing so can cause your application or the operating system to stop responding. For more information, see the[WM_KILLFOCUS](http://msdn.microsoft.com/library/windows/desktop/ms632614\\(v=vs.85\\).aspx)topic, and the \"Message Deadlocks\" section of the [About Messages and Message Queues](http://msdn.microsoft.com/library/windows/desktop/ms644927\\(v=vs.85\\).aspx) topic.  \n  \n For more information about handling events, see [Handling and Raising Events](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an e-mail address that the user enters. If the e-mail address is not in the standard format (containing \"@\" and \".\"), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled. This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.  \n  \n [!code-cs[Control.Validating#1](~/add/codesnippet/csharp/e-system.windows.forms.c_81_1.cs)]\n [!code-cpp[Control.Validating#1](~/add/codesnippet/cpp/e-system.windows.forms.c_81_1.cpp)]\n [!code-vb[Control.Validating#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_81_1.vb)]"
  syntax:
    content: public event EventHandler Validated;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Validating
  id: Validating
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Validating
  nameWithType: Control.Validating
  fullName: System.Windows.Forms.Control.Validating
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o controle está sendo validada."
  remarks: "Quando você altera o foco usando o teclado (guia, SHIFT + TAB e assim por diante), chamando o <xref:System.Windows.Forms.Control.Select%2A>ou <xref:System.Windows.Forms.Control.SelectNextControl%2A>métodos, ou definindo o <xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName>propriedade para o formulário, os eventos focus ocorrem na seguinte ordem: 1.</xref:System.Windows.Forms.ContainerControl.ActiveControl%2A?displayProperty=fullName> </xref:System.Windows.Forms.Control.SelectNextControl%2A> </xref:System.Windows.Forms.Control.Select%2A>  <xref:System.Windows.Forms.Control.Enter>2.</xref:System.Windows.Forms.Control.Enter>  <xref:System.Windows.Forms.Control.GotFocus>3.</xref:System.Windows.Forms.Control.GotFocus>  <xref:System.Windows.Forms.Control.Leave>4.</xref:System.Windows.Forms.Control.Leave>  Validando 5.  <xref:System.Windows.Forms.Control.Validated>6.</xref:System.Windows.Forms.Control.Validated>  <xref:System.Windows.Forms.Control.LostFocus>Quando você altera o foco, usando o mouse ou chamando o <xref:System.Windows.Forms.Control.Focus%2A>método, os eventos focus ocorrem na seguinte ordem: 1.</xref:System.Windows.Forms.Control.Focus%2A></xref:System.Windows.Forms.Control.LostFocus>  <xref:System.Windows.Forms.Control.Enter>2.</xref:System.Windows.Forms.Control.Enter>  <xref:System.Windows.Forms.Control.GotFocus>3.</xref:System.Windows.Forms.Control.GotFocus>  <xref:System.Windows.Forms.Control.LostFocus>4.</xref:System.Windows.Forms.Control.LostFocus>  <xref:System.Windows.Forms.Control.Leave>5.</xref:System.Windows.Forms.Control.Leave>  Validando 6.  <xref:System.Windows.Forms.Control.Validated>Se o <xref:System.Windows.Forms.Control.CausesValidation%2A>está definida como `false`, o Validando e <xref:System.Windows.Forms.Control.Validated>eventos são suprimidos.</xref:System.Windows.Forms.Control.Validated> </xref:System.Windows.Forms.Control.CausesValidation%2A></xref:System.Windows.Forms.Control.Validated>       Se o <xref:System.ComponentModel.CancelEventArgs.Cancel%2A>propriedade o <xref:System.ComponentModel.CancelEventArgs>é definido como `true` no delegado de evento Validando, todos os eventos que normalmente seriam ocorrem após o evento Validando são suprimidos.</xref:System.ComponentModel.CancelEventArgs> </xref:System.ComponentModel.CancelEventArgs.Cancel%2A>      > [!CAUTION] > Não tentar definir o foco de dentro de <xref:System.Windows.Forms.Control.Enter>, <xref:System.Windows.Forms.Control.GotFocus>, <xref:System.Windows.Forms.Control.Leave>, <xref:System.Windows.Forms.Control.LostFocus>, validação, ou <xref:System.Windows.Forms.Control.Validated>manipuladores de eventos.</xref:System.Windows.Forms.Control.Validated> </xref:System.Windows.Forms.Control.LostFocus> </xref:System.Windows.Forms.Control.Leave> </xref:System.Windows.Forms.Control.GotFocus> </xref:System.Windows.Forms.Control.Enter> Isso pode causar o aplicativo ou o sistema operacional pare de responder. Para obter mais informações, consulte o `WM_KILLFOCUS` tópico na seção &quot;Referência de entrada do teclado&quot; e a seção &quot;Mensagem Deadlocks&quot; do tópico &quot;Sobre mensagens e filas de mensagens&quot; na biblioteca MSDN em http://msdn.microsoft.com/library.       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example uses the derived class <xref:System.Windows.Forms.TextBox> and validates an e-mail address that the user enters. If the e-mail address is not in the standard format (containing \"@\" and \".\"), the validation fails, an <xref:System.Windows.Forms.ErrorProvider> icon is displayed, and the event is canceled. This example requires that a <xref:System.Windows.Forms.TextBox> and <xref:System.Windows.Forms.ErrorProvider> control have been created on a form.  \n  \n [!code-cs[Control.Validating#1](~/add/codesnippet/csharp/e-system.windows.forms.c_41_1.cs)]\n [!code-cpp[Control.Validating#1](~/add/codesnippet/cpp/e-system.windows.forms.c_41_1.cpp)]\n [!code-vb[Control.Validating#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_41_1.vb)]"
  syntax:
    content: public event System.ComponentModel.CancelEventHandler Validating;
    return:
      type: System.ComponentModel.CancelEventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Visible
  id: Visible
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Visible
  nameWithType: Control.Visible
  fullName: System.Windows.Forms.Control.Visible
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define um valor que indica se o controle e todos os seus controles filhos são exibidos."
  remarks: "Observe que mesmo se `Visible` é definido como `true`, o controle pode não estar visível para o usuário se ele é obscurecido por trás de outros controles."
  example:
  - "The following code example uses the derived classes <xref:System.Windows.Forms.VScrollBar> and <xref:System.Windows.Forms.HScrollBar> and sets their Visible property values, based on the size of an <xref:System.Drawing.Image> being displayed in a <xref:System.Windows.Forms.PictureBox> control. This example requires that a <xref:System.Windows.Forms.PictureBox> has been created on a form and that <xref:System.Windows.Forms.HScrollBar> and <xref:System.Windows.Forms.VScrollBar> controls have been created on the <xref:System.Windows.Forms.PictureBox>. This code should be called when the image is loaded into the picture box and by the <xref:System.Windows.Forms.Control.Resize> event of the form.  \n  \n [!code-cpp[Classic Control.Visible Example#1](~/add/codesnippet/cpp/p-system.windows.forms.c_101_1.cpp)]\n [!code-vb[Classic Control.Visible Example#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_101_1.vb)]\n [!code-cs[Classic Control.Visible Example#1](~/add/codesnippet/csharp/p-system.windows.forms.c_101_1.cs)]"
  syntax:
    content: public bool Visible { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o controle e todos os seus controles filhos são exibidos; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.Forms.Control.Visible*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.VisibleChanged
  id: VisibleChanged
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: VisibleChanged
  nameWithType: Control.VisibleChanged
  fullName: System.Windows.Forms.Control.VisibleChanged
  type: Event
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Ocorre quando o <xref:System.Windows.Forms.Control.Visible*>alterações de valor de propriedade.</xref:System.Windows.Forms.Control.Visible*>"
  remarks: "Esse evento é gerado se o <xref:System.Windows.Forms.Control.Visible%2A>propriedade é alterada por uma modificação programática ou a interação do usuário.</xref:System.Windows.Forms.Control.Visible%2A>       Para obter mais informações sobre a manipulação de eventos, consulte [tratamento e gerando eventos](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example raises the VisibleChanged event when the <xref:System.Windows.Forms.Control.Visible%2A> property value of the <xref:System.Windows.Forms.Label> control has changed.  \n  \n [!code-vb[Control_VisibleChanged#1](~/add/codesnippet/visualbasic/e-system.windows.forms.c_58_1.vb)]\n [!code-cpp[Control_VisibleChanged#1](~/add/codesnippet/cpp/e-system.windows.forms.c_58_1.cpp)]\n [!code-cs[Control_VisibleChanged#1](~/add/codesnippet/csharp/e-system.windows.forms.c_58_1.cs)]"
  syntax:
    content: public event EventHandler VisibleChanged;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.Width
  id: Width
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: Width
  nameWithType: Control.Width
  fullName: System.Windows.Forms.Control.Width
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Obtém ou define a largura do controle."
  remarks: "As alterações feitas para a largura e <xref:System.Windows.Forms.Control.Left%2A>causa de valores de propriedade de <xref:System.Windows.Forms.Control.Right%2A>valor da propriedade do controle para alterar.</xref:System.Windows.Forms.Control.Right%2A> </xref:System.Windows.Forms.Control.Left%2A>"
  example:
  - "The following code example creates three <xref:System.Windows.Forms.Button> controls on a form and sets their size and location by using the various size-related and location-related properties. This example requires that you have a <xref:System.Windows.Forms.Form> that has a width and height of at least 300 pixels.  \n  \n [!code-cs[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/csharp/p-system.windows.forms.c_100_1.cs)]\n [!code-cpp[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/cpp/p-system.windows.forms.c_100_1.cpp)]\n [!code-vb[Windows.Forms.Control SizeLocation#1](~/add/codesnippet/visualbasic/p-system.windows.forms.c_100_1.vb)]"
  syntax:
    content: public int Width { get; set; }
    return:
      type: System.Int32
      description: "A largura do controle em pixels."
  overload: System.Windows.Forms.Control.Width*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.WindowTarget
  id: WindowTarget
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: WindowTarget
  nameWithType: Control.WindowTarget
  fullName: System.Windows.Forms.Control.WindowTarget
  type: Property
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Essa propriedade não é relevante para essa classe."
  remarks: "Essa propriedade não é relevante para essa classe."
  syntax:
    content: public System.Windows.Forms.IWindowTarget WindowTarget { get; set; }
    return:
      type: System.Windows.Forms.IWindowTarget
      description: "O NativeWindow contido dentro do controle."
  overload: System.Windows.Forms.Control.WindowTarget*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)
  id: WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  langs:
  - csharp
  name: WndProc(Message)
  nameWithType: Control.WndProc(Message)
  fullName: System.Windows.Forms.Control.WndProc(Message)
  type: Method
  assemblies:
  - System.Windows.Forms
  namespace: System.Windows.Forms
  summary: "Processa mensagens do Windows."
  remarks: "Todas as mensagens são enviadas para o método WndProc após ser filtrado por meio de <xref:System.Windows.Forms.Control.PreProcessMessage%2A>método.</xref:System.Windows.Forms.Control.PreProcessMessage%2A>       O método WndProc corresponde exatamente ao Windows `WindowProc` função. Para obter mais informações sobre o processamento de mensagens do Windows, consulte o [WindowProc função](http://go.microsoft.com/fwlink/?LinkId=181565)."
  example:
  - "The following code example demonstrates overriding the WndProc method to handle operating system messages identified in the <xref:System.Windows.Forms.Message> structure. The[WM_ACTIVATEAPP](http://msdn.microsoft.com/en-us/library/windows/desktop/ms632614\\(v=vs.85\\).aspx)operating system message is handled in this example to know when another application is becoming active. See the following topics to understand the available <xref:System.Windows.Forms.Message.Msg%2A?displayProperty=fullName>, <xref:System.Windows.Forms.Message.LParam%2A?displayProperty=fullName>, and <xref:System.Windows.Forms.Message.WParam%2A?displayProperty=fullName> values. Actual constant values can be found in the Windows.h header file.  \n  \n [!code-cs[System.Windows.Forms.Control.WndProc#1](~/add/codesnippet/csharp/m-system.windows.forms.c_79_1.cs)]\n [!code-vb[System.Windows.Forms.Control.WndProc#1](~/add/codesnippet/visualbasic/m-system.windows.forms.c_79_1.vb)]\n [!code-cpp[System.Windows.Forms.Control.WndProc#1](~/add/codesnippet/cpp/m-system.windows.forms.c_79_1.cpp)]"
  syntax:
    content: protected virtual void WndProc (ref System.Windows.Forms.Message m);
    parameters:
    - id: m
      type: System.Windows.Forms.Message
      description: "O Windows <xref href=&quot;System.Windows.Forms.Message&quot;> </xref> ao processo."
  overload: System.Windows.Forms.Control.WndProc*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ComponentModel.Component
  isExternal: false
  name: System.ComponentModel.Component
- uid: System.ComponentModel.InvalidEnumArgumentException
  parent: System.ComponentModel
  isExternal: false
  name: InvalidEnumArgumentException
  nameWithType: InvalidEnumArgumentException
  fullName: System.ComponentModel.InvalidEnumArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.Exception
  isExternal: true
  name: System.Exception
- uid: System.Windows.Forms.Control.#ctor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Control()
  nameWithType: Control.Control()
  fullName: System.Windows.Forms.Control.Control()
- uid: System.Windows.Forms.Control.#ctor(System.String)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Control(String)
  nameWithType: Control.Control(String)
  fullName: System.Windows.Forms.Control.Control(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Control(Control,String)
  nameWithType: Control.Control(Control,String)
  fullName: System.Windows.Forms.Control.Control(Control,String)
- uid: System.Windows.Forms.Control
  parent: System.Windows.Forms
  isExternal: false
  name: Control
  nameWithType: Control
  fullName: System.Windows.Forms.Control
- uid: System.Windows.Forms.Control.#ctor(System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Control(String,Int32,Int32,Int32,Int32)
  nameWithType: Control.Control(String,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.Control(String,Int32,Int32,Int32,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.Forms.Control.#ctor(System.Windows.Forms.Control,System.String,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Control(Control,String,Int32,Int32,Int32,Int32)
  nameWithType: Control.Control(Control,String,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.Control(Control,String,Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibilityNotifyClients(AccessibleEvents,Int32)
  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents,Int32)
  fullName: System.Windows.Forms.Control.AccessibilityNotifyClients(AccessibleEvents,Int32)
- uid: System.Windows.Forms.AccessibleEvents
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleEvents
  nameWithType: AccessibleEvents
  fullName: System.Windows.Forms.AccessibleEvents
- uid: System.Windows.Forms.Control.AccessibilityNotifyClients(System.Windows.Forms.AccessibleEvents,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)
  nameWithType: Control.AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)
  fullName: System.Windows.Forms.Control.AccessibilityNotifyClients(AccessibleEvents,Int32,Int32)
- uid: System.Windows.Forms.Control.AccessibilityObject
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibilityObject
  nameWithType: Control.AccessibilityObject
  fullName: System.Windows.Forms.Control.AccessibilityObject
- uid: System.Windows.Forms.AccessibleObject
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleObject
  nameWithType: AccessibleObject
  fullName: System.Windows.Forms.AccessibleObject
- uid: System.Windows.Forms.Control.AccessibleDefaultActionDescription
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleDefaultActionDescription
  nameWithType: Control.AccessibleDefaultActionDescription
  fullName: System.Windows.Forms.Control.AccessibleDefaultActionDescription
- uid: System.Windows.Forms.Control.AccessibleDescription
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleDescription
  nameWithType: Control.AccessibleDescription
  fullName: System.Windows.Forms.Control.AccessibleDescription
- uid: System.Windows.Forms.Control.AccessibleName
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleName
  nameWithType: Control.AccessibleName
  fullName: System.Windows.Forms.Control.AccessibleName
- uid: System.Windows.Forms.Control.AccessibleRole
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleRole
  nameWithType: Control.AccessibleRole
  fullName: System.Windows.Forms.Control.AccessibleRole
- uid: System.Windows.Forms.AccessibleRole
  parent: System.Windows.Forms
  isExternal: false
  name: AccessibleRole
  nameWithType: AccessibleRole
  fullName: System.Windows.Forms.AccessibleRole
- uid: System.Windows.Forms.Control.AllowDrop
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AllowDrop
  nameWithType: Control.AllowDrop
  fullName: System.Windows.Forms.Control.AllowDrop
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.Forms.Control.Anchor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Anchor
  nameWithType: Control.Anchor
  fullName: System.Windows.Forms.Control.Anchor
- uid: System.Windows.Forms.AnchorStyles
  parent: System.Windows.Forms
  isExternal: false
  name: AnchorStyles
  nameWithType: AnchorStyles
  fullName: System.Windows.Forms.AnchorStyles
- uid: System.Windows.Forms.Control.AutoScrollOffset
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AutoScrollOffset
  nameWithType: Control.AutoScrollOffset
  fullName: System.Windows.Forms.Control.AutoScrollOffset
- uid: System.Drawing.Point
  parent: System.Drawing
  isExternal: false
  name: Point
  nameWithType: Point
  fullName: System.Drawing.Point
- uid: System.Windows.Forms.Control.AutoSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AutoSize
  nameWithType: Control.AutoSize
  fullName: System.Windows.Forms.Control.AutoSize
- uid: System.Windows.Forms.Control.AutoSizeChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AutoSizeChanged
  nameWithType: Control.AutoSizeChanged
  fullName: System.Windows.Forms.Control.AutoSizeChanged
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Windows.Forms.Control.BackColor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackColor
  nameWithType: Control.BackColor
  fullName: System.Windows.Forms.Control.BackColor
- uid: System.Drawing.Color
  parent: System.Drawing
  isExternal: false
  name: Color
  nameWithType: Color
  fullName: System.Drawing.Color
- uid: System.Windows.Forms.Control.BackColorChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackColorChanged
  nameWithType: Control.BackColorChanged
  fullName: System.Windows.Forms.Control.BackColorChanged
- uid: System.Windows.Forms.Control.BackgroundImage
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackgroundImage
  nameWithType: Control.BackgroundImage
  fullName: System.Windows.Forms.Control.BackgroundImage
- uid: System.Drawing.Image
  parent: System.Drawing
  isExternal: false
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Windows.Forms.Control.BackgroundImageChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackgroundImageChanged
  nameWithType: Control.BackgroundImageChanged
  fullName: System.Windows.Forms.Control.BackgroundImageChanged
- uid: System.Windows.Forms.Control.BackgroundImageLayout
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: Control.BackgroundImageLayout
  fullName: System.Windows.Forms.Control.BackgroundImageLayout
- uid: System.Windows.Forms.ImageLayout
  parent: System.Windows.Forms
  isExternal: false
  name: ImageLayout
  nameWithType: ImageLayout
  fullName: System.Windows.Forms.ImageLayout
- uid: System.Windows.Forms.Control.BackgroundImageLayoutChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackgroundImageLayoutChanged
  nameWithType: Control.BackgroundImageLayoutChanged
  fullName: System.Windows.Forms.Control.BackgroundImageLayoutChanged
- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BeginInvoke(Delegate)
  nameWithType: Control.BeginInvoke(Delegate)
  fullName: System.Windows.Forms.Control.BeginInvoke(Delegate)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.Forms.Control.BeginInvoke(System.Delegate,System.Object[])
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BeginInvoke(Delegate,Object[])
  nameWithType: Control.BeginInvoke(Delegate,Object[])
  fullName: System.Windows.Forms.Control.BeginInvoke(Delegate,Object[])
- uid: System.Object[]
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object[]
  spec.csharp:
  - uid: System.Object
    name: Object
    nameWithType: Object
    fullName: Object[]
  - name: '[]'
    nameWithType: '[]'
    fullName: '[]'
- uid: System.Windows.Forms.Control.BindingContext
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BindingContext
  nameWithType: Control.BindingContext
  fullName: System.Windows.Forms.Control.BindingContext
- uid: System.Windows.Forms.BindingContext
  parent: System.Windows.Forms
  isExternal: false
  name: BindingContext
  nameWithType: BindingContext
  fullName: System.Windows.Forms.BindingContext
- uid: System.Windows.Forms.Control.BindingContextChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BindingContextChanged
  nameWithType: Control.BindingContextChanged
  fullName: System.Windows.Forms.Control.BindingContextChanged
- uid: System.Windows.Forms.Control.Bottom
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Bottom
  nameWithType: Control.Bottom
  fullName: System.Windows.Forms.Control.Bottom
- uid: System.Windows.Forms.Control.Bounds
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Bounds
  nameWithType: Control.Bounds
  fullName: System.Windows.Forms.Control.Bounds
- uid: System.Drawing.Rectangle
  parent: System.Drawing
  isExternal: false
  name: Rectangle
  nameWithType: Rectangle
  fullName: System.Drawing.Rectangle
- uid: System.Windows.Forms.Control.BringToFront
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BringToFront()
  nameWithType: Control.BringToFront()
  fullName: System.Windows.Forms.Control.BringToFront()
- uid: System.Windows.Forms.Control.CanEnableIme
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanEnableIme
  nameWithType: Control.CanEnableIme
  fullName: System.Windows.Forms.Control.CanEnableIme
- uid: System.Windows.Forms.Control.CanFocus
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanFocus
  nameWithType: Control.CanFocus
  fullName: System.Windows.Forms.Control.CanFocus
- uid: System.Windows.Forms.Control.CanRaiseEvents
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Control.CanRaiseEvents
  fullName: System.Windows.Forms.Control.CanRaiseEvents
- uid: System.Windows.Forms.Control.CanSelect
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanSelect
  nameWithType: Control.CanSelect
  fullName: System.Windows.Forms.Control.CanSelect
- uid: System.Windows.Forms.Control.Capture
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Capture
  nameWithType: Control.Capture
  fullName: System.Windows.Forms.Control.Capture
- uid: System.Windows.Forms.Control.CausesValidation
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CausesValidation
  nameWithType: Control.CausesValidation
  fullName: System.Windows.Forms.Control.CausesValidation
- uid: System.Windows.Forms.Control.CausesValidationChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CausesValidationChanged
  nameWithType: Control.CausesValidationChanged
  fullName: System.Windows.Forms.Control.CausesValidationChanged
- uid: System.Windows.Forms.Control.ChangeUICues
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ChangeUICues
  nameWithType: Control.ChangeUICues
  fullName: System.Windows.Forms.Control.ChangeUICues
- uid: System.Windows.Forms.UICuesEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: UICuesEventHandler
  nameWithType: UICuesEventHandler
  fullName: System.Windows.Forms.UICuesEventHandler
- uid: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CheckForIllegalCrossThreadCalls
  nameWithType: Control.CheckForIllegalCrossThreadCalls
  fullName: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls
- uid: System.Windows.Forms.Control.Click
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Click
  nameWithType: Control.Click
  fullName: System.Windows.Forms.Control.Click
- uid: System.Windows.Forms.Control.ClientRectangle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ClientRectangle
  nameWithType: Control.ClientRectangle
  fullName: System.Windows.Forms.Control.ClientRectangle
- uid: System.Windows.Forms.Control.ClientSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ClientSize
  nameWithType: Control.ClientSize
  fullName: System.Windows.Forms.Control.ClientSize
- uid: System.Drawing.Size
  parent: System.Drawing
  isExternal: false
  name: Size
  nameWithType: Size
  fullName: System.Drawing.Size
- uid: System.Windows.Forms.Control.ClientSizeChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ClientSizeChanged
  nameWithType: Control.ClientSizeChanged
  fullName: System.Windows.Forms.Control.ClientSizeChanged
- uid: System.Windows.Forms.Control.CompanyName
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CompanyName
  nameWithType: Control.CompanyName
  fullName: System.Windows.Forms.Control.CompanyName
- uid: System.Windows.Forms.Control.Contains(System.Windows.Forms.Control)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Contains(Control)
  nameWithType: Control.Contains(Control)
  fullName: System.Windows.Forms.Control.Contains(Control)
- uid: System.Windows.Forms.Control.ContainsFocus
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContainsFocus
  nameWithType: Control.ContainsFocus
  fullName: System.Windows.Forms.Control.ContainsFocus
- uid: System.Windows.Forms.Control.ContextMenu
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContextMenu
  nameWithType: Control.ContextMenu
  fullName: System.Windows.Forms.Control.ContextMenu
- uid: System.Windows.Forms.ContextMenu
  parent: System.Windows.Forms
  isExternal: false
  name: ContextMenu
  nameWithType: ContextMenu
  fullName: System.Windows.Forms.ContextMenu
- uid: System.Windows.Forms.Control.ContextMenuChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContextMenuChanged
  nameWithType: Control.ContextMenuChanged
  fullName: System.Windows.Forms.Control.ContextMenuChanged
- uid: System.Windows.Forms.Control.ContextMenuStrip
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContextMenuStrip
  nameWithType: Control.ContextMenuStrip
  fullName: System.Windows.Forms.Control.ContextMenuStrip
- uid: System.Windows.Forms.ContextMenuStrip
  parent: System.Windows.Forms
  isExternal: false
  name: ContextMenuStrip
  nameWithType: ContextMenuStrip
  fullName: System.Windows.Forms.ContextMenuStrip
- uid: System.Windows.Forms.Control.ContextMenuStripChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContextMenuStripChanged
  nameWithType: Control.ContextMenuStripChanged
  fullName: System.Windows.Forms.Control.ContextMenuStripChanged
- uid: System.Windows.Forms.Control.ControlAdded
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ControlAdded
  nameWithType: Control.ControlAdded
  fullName: System.Windows.Forms.Control.ControlAdded
- uid: System.Windows.Forms.ControlEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: ControlEventHandler
  nameWithType: ControlEventHandler
  fullName: System.Windows.Forms.ControlEventHandler
- uid: System.Windows.Forms.Control.ControlRemoved
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ControlRemoved
  nameWithType: Control.ControlRemoved
  fullName: System.Windows.Forms.Control.ControlRemoved
- uid: System.Windows.Forms.Control.Controls
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Controls
  nameWithType: Control.Controls
  fullName: System.Windows.Forms.Control.Controls
- uid: System.Windows.Forms.Control.ControlCollection
  parent: System.Windows.Forms
  isExternal: false
  name: Control+ControlCollection
  nameWithType: Control+ControlCollection
  fullName: System.Windows.Forms.Control+ControlCollection
- uid: System.Windows.Forms.Control.CreateAccessibilityInstance
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateAccessibilityInstance()
  nameWithType: Control.CreateAccessibilityInstance()
  fullName: System.Windows.Forms.Control.CreateAccessibilityInstance()
- uid: System.Windows.Forms.Control.CreateControl
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateControl()
  nameWithType: Control.CreateControl()
  fullName: System.Windows.Forms.Control.CreateControl()
- uid: System.Windows.Forms.Control.CreateControlsInstance
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateControlsInstance()
  nameWithType: Control.CreateControlsInstance()
  fullName: System.Windows.Forms.Control.CreateControlsInstance()
- uid: System.Windows.Forms.Control.Created
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Created
  nameWithType: Control.Created
  fullName: System.Windows.Forms.Control.Created
- uid: System.Windows.Forms.Control.CreateGraphics
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateGraphics()
  nameWithType: Control.CreateGraphics()
  fullName: System.Windows.Forms.Control.CreateGraphics()
- uid: System.Drawing.Graphics
  parent: System.Drawing
  isExternal: false
  name: Graphics
  nameWithType: Graphics
  fullName: System.Drawing.Graphics
- uid: System.Windows.Forms.Control.CreateHandle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateHandle()
  nameWithType: Control.CreateHandle()
  fullName: System.Windows.Forms.Control.CreateHandle()
- uid: System.Windows.Forms.Control.CreateParams
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateParams
  nameWithType: Control.CreateParams
  fullName: System.Windows.Forms.Control.CreateParams
- uid: System.Windows.Forms.CreateParams
  parent: System.Windows.Forms
  isExternal: false
  name: CreateParams
  nameWithType: CreateParams
  fullName: System.Windows.Forms.CreateParams
- uid: System.Windows.Forms.Control.Cursor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Cursor
  nameWithType: Control.Cursor
  fullName: System.Windows.Forms.Control.Cursor
- uid: System.Windows.Forms.Cursor
  parent: System.Windows.Forms
  isExternal: false
  name: Cursor
  nameWithType: Cursor
  fullName: System.Windows.Forms.Cursor
- uid: System.Windows.Forms.Control.CursorChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CursorChanged
  nameWithType: Control.CursorChanged
  fullName: System.Windows.Forms.Control.CursorChanged
- uid: System.Windows.Forms.Control.DataBindings
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DataBindings
  nameWithType: Control.DataBindings
  fullName: System.Windows.Forms.Control.DataBindings
- uid: System.Windows.Forms.ControlBindingsCollection
  parent: System.Windows.Forms
  isExternal: false
  name: ControlBindingsCollection
  nameWithType: ControlBindingsCollection
  fullName: System.Windows.Forms.ControlBindingsCollection
- uid: System.Windows.Forms.Control.DefaultBackColor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultBackColor
  nameWithType: Control.DefaultBackColor
  fullName: System.Windows.Forms.Control.DefaultBackColor
- uid: System.Windows.Forms.Control.DefaultCursor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultCursor
  nameWithType: Control.DefaultCursor
  fullName: System.Windows.Forms.Control.DefaultCursor
- uid: System.Windows.Forms.Control.DefaultFont
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultFont
  nameWithType: Control.DefaultFont
  fullName: System.Windows.Forms.Control.DefaultFont
- uid: System.Drawing.Font
  parent: System.Drawing
  isExternal: false
  name: Font
  nameWithType: Font
  fullName: System.Drawing.Font
- uid: System.Windows.Forms.Control.DefaultForeColor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultForeColor
  nameWithType: Control.DefaultForeColor
  fullName: System.Windows.Forms.Control.DefaultForeColor
- uid: System.Windows.Forms.Control.DefaultImeMode
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultImeMode
  nameWithType: Control.DefaultImeMode
  fullName: System.Windows.Forms.Control.DefaultImeMode
- uid: System.Windows.Forms.ImeMode
  parent: System.Windows.Forms
  isExternal: false
  name: ImeMode
  nameWithType: ImeMode
  fullName: System.Windows.Forms.ImeMode
- uid: System.Windows.Forms.Control.DefaultMargin
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultMargin
  nameWithType: Control.DefaultMargin
  fullName: System.Windows.Forms.Control.DefaultMargin
- uid: System.Windows.Forms.Padding
  parent: System.Windows.Forms
  isExternal: false
  name: Padding
  nameWithType: Padding
  fullName: System.Windows.Forms.Padding
- uid: System.Windows.Forms.Control.DefaultMaximumSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultMaximumSize
  nameWithType: Control.DefaultMaximumSize
  fullName: System.Windows.Forms.Control.DefaultMaximumSize
- uid: System.Windows.Forms.Control.DefaultMinimumSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultMinimumSize
  nameWithType: Control.DefaultMinimumSize
  fullName: System.Windows.Forms.Control.DefaultMinimumSize
- uid: System.Windows.Forms.Control.DefaultPadding
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultPadding
  nameWithType: Control.DefaultPadding
  fullName: System.Windows.Forms.Control.DefaultPadding
- uid: System.Windows.Forms.Control.DefaultSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultSize
  nameWithType: Control.DefaultSize
  fullName: System.Windows.Forms.Control.DefaultSize
- uid: System.Windows.Forms.Control.DefWndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefWndProc(Message)
  nameWithType: Control.DefWndProc(Message)
  fullName: System.Windows.Forms.Control.DefWndProc(Message)
- uid: System.Windows.Forms.Message
  parent: System.Windows.Forms
  isExternal: false
  name: Message
  nameWithType: Message
  fullName: System.Windows.Forms.Message
- uid: System.Windows.Forms.Control.DestroyHandle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DestroyHandle()
  nameWithType: Control.DestroyHandle()
  fullName: System.Windows.Forms.Control.DestroyHandle()
- uid: System.Windows.Forms.Control.DisplayRectangle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DisplayRectangle
  nameWithType: Control.DisplayRectangle
  fullName: System.Windows.Forms.Control.DisplayRectangle
- uid: System.Windows.Forms.Control.Dispose(System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: Control.Dispose(Boolean)
  fullName: System.Windows.Forms.Control.Dispose(Boolean)
- uid: System.Windows.Forms.Control.Disposing
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Disposing
  nameWithType: Control.Disposing
  fullName: System.Windows.Forms.Control.Disposing
- uid: System.Windows.Forms.Control.Dock
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Dock
  nameWithType: Control.Dock
  fullName: System.Windows.Forms.Control.Dock
- uid: System.Windows.Forms.DockStyle
  parent: System.Windows.Forms
  isExternal: false
  name: DockStyle
  nameWithType: DockStyle
  fullName: System.Windows.Forms.DockStyle
- uid: System.Windows.Forms.Control.DockChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DockChanged
  nameWithType: Control.DockChanged
  fullName: System.Windows.Forms.Control.DockChanged
- uid: System.Windows.Forms.Control.DoDragDrop(System.Object,System.Windows.Forms.DragDropEffects)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DoDragDrop(Object,DragDropEffects)
  nameWithType: Control.DoDragDrop(Object,DragDropEffects)
  fullName: System.Windows.Forms.Control.DoDragDrop(Object,DragDropEffects)
- uid: System.Windows.Forms.DragDropEffects
  parent: System.Windows.Forms
  isExternal: false
  name: DragDropEffects
  nameWithType: DragDropEffects
  fullName: System.Windows.Forms.DragDropEffects
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.Forms.Control.DoubleBuffered
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DoubleBuffered
  nameWithType: Control.DoubleBuffered
  fullName: System.Windows.Forms.Control.DoubleBuffered
- uid: System.Windows.Forms.Control.DoubleClick
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DoubleClick
  nameWithType: Control.DoubleClick
  fullName: System.Windows.Forms.Control.DoubleClick
- uid: System.Windows.Forms.Control.DragDrop
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DragDrop
  nameWithType: Control.DragDrop
  fullName: System.Windows.Forms.Control.DragDrop
- uid: System.Windows.Forms.DragEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: DragEventHandler
  nameWithType: DragEventHandler
  fullName: System.Windows.Forms.DragEventHandler
- uid: System.Windows.Forms.Control.DragEnter
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DragEnter
  nameWithType: Control.DragEnter
  fullName: System.Windows.Forms.Control.DragEnter
- uid: System.Windows.Forms.Control.DragLeave
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DragLeave
  nameWithType: Control.DragLeave
  fullName: System.Windows.Forms.Control.DragLeave
- uid: System.Windows.Forms.Control.DragOver
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DragOver
  nameWithType: Control.DragOver
  fullName: System.Windows.Forms.Control.DragOver
- uid: System.Windows.Forms.Control.DrawToBitmap(System.Drawing.Bitmap,System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DrawToBitmap(Bitmap,Rectangle)
  nameWithType: Control.DrawToBitmap(Bitmap,Rectangle)
  fullName: System.Windows.Forms.Control.DrawToBitmap(Bitmap,Rectangle)
- uid: System.Drawing.Bitmap
  parent: System.Drawing
  isExternal: false
  name: Bitmap
  nameWithType: Bitmap
  fullName: System.Drawing.Bitmap
- uid: System.Windows.Forms.Control.Enabled
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Enabled
  nameWithType: Control.Enabled
  fullName: System.Windows.Forms.Control.Enabled
- uid: System.Windows.Forms.Control.EnabledChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: EnabledChanged
  nameWithType: Control.EnabledChanged
  fullName: System.Windows.Forms.Control.EnabledChanged
- uid: System.Windows.Forms.Control.EndInvoke(System.IAsyncResult)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: EndInvoke(IAsyncResult)
  nameWithType: Control.EndInvoke(IAsyncResult)
  fullName: System.Windows.Forms.Control.EndInvoke(IAsyncResult)
- uid: System.Windows.Forms.Control.Enter
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Enter
  nameWithType: Control.Enter
  fullName: System.Windows.Forms.Control.Enter
- uid: System.Windows.Forms.Control.FindForm
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FindForm()
  nameWithType: Control.FindForm()
  fullName: System.Windows.Forms.Control.FindForm()
- uid: System.Windows.Forms.Form
  parent: System.Windows.Forms
  isExternal: false
  name: Form
  nameWithType: Form
  fullName: System.Windows.Forms.Form
- uid: System.Windows.Forms.Control.Focus
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Focus()
  nameWithType: Control.Focus()
  fullName: System.Windows.Forms.Control.Focus()
- uid: System.Windows.Forms.Control.Focused
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Focused
  nameWithType: Control.Focused
  fullName: System.Windows.Forms.Control.Focused
- uid: System.Windows.Forms.Control.Font
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Font
  nameWithType: Control.Font
  fullName: System.Windows.Forms.Control.Font
- uid: System.Windows.Forms.Control.FontChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FontChanged
  nameWithType: Control.FontChanged
  fullName: System.Windows.Forms.Control.FontChanged
- uid: System.Windows.Forms.Control.FontHeight
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FontHeight
  nameWithType: Control.FontHeight
  fullName: System.Windows.Forms.Control.FontHeight
- uid: System.Windows.Forms.Control.ForeColor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ForeColor
  nameWithType: Control.ForeColor
  fullName: System.Windows.Forms.Control.ForeColor
- uid: System.Windows.Forms.Control.ForeColorChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ForeColorChanged
  nameWithType: Control.ForeColorChanged
  fullName: System.Windows.Forms.Control.ForeColorChanged
- uid: System.Windows.Forms.Control.FromChildHandle(System.IntPtr)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FromChildHandle(IntPtr)
  nameWithType: Control.FromChildHandle(IntPtr)
  fullName: System.Windows.Forms.Control.FromChildHandle(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Windows.Forms.Control.FromHandle(System.IntPtr)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FromHandle(IntPtr)
  nameWithType: Control.FromHandle(IntPtr)
  fullName: System.Windows.Forms.Control.FromHandle(IntPtr)
- uid: System.Windows.Forms.Control.GetAccessibilityObjectById(System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetAccessibilityObjectById(Int32)
  nameWithType: Control.GetAccessibilityObjectById(Int32)
  fullName: System.Windows.Forms.Control.GetAccessibilityObjectById(Int32)
- uid: System.Windows.Forms.Control.GetAutoSizeMode
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetAutoSizeMode()
  nameWithType: Control.GetAutoSizeMode()
  fullName: System.Windows.Forms.Control.GetAutoSizeMode()
- uid: System.Windows.Forms.AutoSizeMode
  parent: System.Windows.Forms
  isExternal: false
  name: AutoSizeMode
  nameWithType: AutoSizeMode
  fullName: System.Windows.Forms.AutoSizeMode
- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetChildAtPoint(Point)
  nameWithType: Control.GetChildAtPoint(Point)
  fullName: System.Windows.Forms.Control.GetChildAtPoint(Point)
- uid: System.Windows.Forms.Control.GetChildAtPoint(System.Drawing.Point,System.Windows.Forms.GetChildAtPointSkip)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetChildAtPoint(Point,GetChildAtPointSkip)
  nameWithType: Control.GetChildAtPoint(Point,GetChildAtPointSkip)
  fullName: System.Windows.Forms.Control.GetChildAtPoint(Point,GetChildAtPointSkip)
- uid: System.Windows.Forms.GetChildAtPointSkip
  parent: System.Windows.Forms
  isExternal: false
  name: GetChildAtPointSkip
  nameWithType: GetChildAtPointSkip
  fullName: System.Windows.Forms.GetChildAtPointSkip
- uid: System.Windows.Forms.Control.GetContainerControl
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetContainerControl()
  nameWithType: Control.GetContainerControl()
  fullName: System.Windows.Forms.Control.GetContainerControl()
- uid: System.Windows.Forms.IContainerControl
  parent: System.Windows.Forms
  isExternal: false
  name: IContainerControl
  nameWithType: IContainerControl
  fullName: System.Windows.Forms.IContainerControl
- uid: System.Windows.Forms.Control.GetNextControl(System.Windows.Forms.Control,System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetNextControl(Control,Boolean)
  nameWithType: Control.GetNextControl(Control,Boolean)
  fullName: System.Windows.Forms.Control.GetNextControl(Control,Boolean)
- uid: System.Windows.Forms.Control.GetPreferredSize(System.Drawing.Size)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetPreferredSize(Size)
  nameWithType: Control.GetPreferredSize(Size)
  fullName: System.Windows.Forms.Control.GetPreferredSize(Size)
- uid: System.Windows.Forms.Control.GetScaledBounds(System.Drawing.Rectangle,System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  nameWithType: Control.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Control.GetScaledBounds(Rectangle,SizeF,BoundsSpecified)
- uid: System.Drawing.SizeF
  parent: System.Drawing
  isExternal: false
  name: SizeF
  nameWithType: SizeF
  fullName: System.Drawing.SizeF
- uid: System.Windows.Forms.BoundsSpecified
  parent: System.Windows.Forms
  isExternal: false
  name: BoundsSpecified
  nameWithType: BoundsSpecified
  fullName: System.Windows.Forms.BoundsSpecified
- uid: System.Windows.Forms.Control.GetStyle(System.Windows.Forms.ControlStyles)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetStyle(ControlStyles)
  nameWithType: Control.GetStyle(ControlStyles)
  fullName: System.Windows.Forms.Control.GetStyle(ControlStyles)
- uid: System.Windows.Forms.ControlStyles
  parent: System.Windows.Forms
  isExternal: false
  name: ControlStyles
  nameWithType: ControlStyles
  fullName: System.Windows.Forms.ControlStyles
- uid: System.Windows.Forms.Control.GetTopLevel
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetTopLevel()
  nameWithType: Control.GetTopLevel()
  fullName: System.Windows.Forms.Control.GetTopLevel()
- uid: System.Windows.Forms.Control.GiveFeedback
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GiveFeedback
  nameWithType: Control.GiveFeedback
  fullName: System.Windows.Forms.Control.GiveFeedback
- uid: System.Windows.Forms.GiveFeedbackEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: GiveFeedbackEventHandler
  nameWithType: GiveFeedbackEventHandler
  fullName: System.Windows.Forms.GiveFeedbackEventHandler
- uid: System.Windows.Forms.Control.GotFocus
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GotFocus
  nameWithType: Control.GotFocus
  fullName: System.Windows.Forms.Control.GotFocus
- uid: System.Windows.Forms.Control.Handle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Handle
  nameWithType: Control.Handle
  fullName: System.Windows.Forms.Control.Handle
- uid: System.Windows.Forms.Control.HandleCreated
  parent: System.Windows.Forms.Control
  isExternal: false
  name: HandleCreated
  nameWithType: Control.HandleCreated
  fullName: System.Windows.Forms.Control.HandleCreated
- uid: System.Windows.Forms.Control.HandleDestroyed
  parent: System.Windows.Forms.Control
  isExternal: false
  name: HandleDestroyed
  nameWithType: Control.HandleDestroyed
  fullName: System.Windows.Forms.Control.HandleDestroyed
- uid: System.Windows.Forms.Control.HasChildren
  parent: System.Windows.Forms.Control
  isExternal: false
  name: HasChildren
  nameWithType: Control.HasChildren
  fullName: System.Windows.Forms.Control.HasChildren
- uid: System.Windows.Forms.Control.Height
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Height
  nameWithType: Control.Height
  fullName: System.Windows.Forms.Control.Height
- uid: System.Windows.Forms.Control.HelpRequested
  parent: System.Windows.Forms.Control
  isExternal: false
  name: HelpRequested
  nameWithType: Control.HelpRequested
  fullName: System.Windows.Forms.Control.HelpRequested
- uid: System.Windows.Forms.HelpEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: HelpEventHandler
  nameWithType: HelpEventHandler
  fullName: System.Windows.Forms.HelpEventHandler
- uid: System.Windows.Forms.Control.Hide
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Hide()
  nameWithType: Control.Hide()
  fullName: System.Windows.Forms.Control.Hide()
- uid: System.Windows.Forms.Control.ImeMode
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ImeMode
  nameWithType: Control.ImeMode
  fullName: System.Windows.Forms.Control.ImeMode
- uid: System.Windows.Forms.Control.ImeModeBase
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ImeModeBase
  nameWithType: Control.ImeModeBase
  fullName: System.Windows.Forms.Control.ImeModeBase
- uid: System.Windows.Forms.Control.ImeModeChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ImeModeChanged
  nameWithType: Control.ImeModeChanged
  fullName: System.Windows.Forms.Control.ImeModeChanged
- uid: System.Windows.Forms.Control.InitLayout
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InitLayout()
  nameWithType: Control.InitLayout()
  fullName: System.Windows.Forms.Control.InitLayout()
- uid: System.Windows.Forms.Control.Invalidate
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate()
  nameWithType: Control.Invalidate()
  fullName: System.Windows.Forms.Control.Invalidate()
- uid: System.Windows.Forms.Control.Invalidate(System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate(Boolean)
  nameWithType: Control.Invalidate(Boolean)
  fullName: System.Windows.Forms.Control.Invalidate(Boolean)
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate(Rectangle)
  nameWithType: Control.Invalidate(Rectangle)
  fullName: System.Windows.Forms.Control.Invalidate(Rectangle)
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate(Region)
  nameWithType: Control.Invalidate(Region)
  fullName: System.Windows.Forms.Control.Invalidate(Region)
- uid: System.Drawing.Region
  parent: System.Drawing
  isExternal: false
  name: Region
  nameWithType: Region
  fullName: System.Drawing.Region
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Rectangle,System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate(Rectangle,Boolean)
  nameWithType: Control.Invalidate(Rectangle,Boolean)
  fullName: System.Windows.Forms.Control.Invalidate(Rectangle,Boolean)
- uid: System.Windows.Forms.Control.Invalidate(System.Drawing.Region,System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate(Region,Boolean)
  nameWithType: Control.Invalidate(Region,Boolean)
  fullName: System.Windows.Forms.Control.Invalidate(Region,Boolean)
- uid: System.Windows.Forms.Control.Invalidated
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidated
  nameWithType: Control.Invalidated
  fullName: System.Windows.Forms.Control.Invalidated
- uid: System.Windows.Forms.InvalidateEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: InvalidateEventHandler
  nameWithType: InvalidateEventHandler
  fullName: System.Windows.Forms.InvalidateEventHandler
- uid: System.Windows.Forms.Control.Invoke(System.Delegate)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invoke(Delegate)
  nameWithType: Control.Invoke(Delegate)
  fullName: System.Windows.Forms.Control.Invoke(Delegate)
- uid: System.Windows.Forms.Control.Invoke(System.Delegate,System.Object[])
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invoke(Delegate,Object[])
  nameWithType: Control.Invoke(Delegate,Object[])
  fullName: System.Windows.Forms.Control.Invoke(Delegate,Object[])
- uid: System.Windows.Forms.Control.InvokeGotFocus(System.Windows.Forms.Control,System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeGotFocus(Control,EventArgs)
  nameWithType: Control.InvokeGotFocus(Control,EventArgs)
  fullName: System.Windows.Forms.Control.InvokeGotFocus(Control,EventArgs)
- uid: System.EventArgs
  parent: System
  isExternal: true
  name: EventArgs
  nameWithType: EventArgs
  fullName: System.EventArgs
- uid: System.Windows.Forms.Control.InvokeLostFocus(System.Windows.Forms.Control,System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeLostFocus(Control,EventArgs)
  nameWithType: Control.InvokeLostFocus(Control,EventArgs)
  fullName: System.Windows.Forms.Control.InvokeLostFocus(Control,EventArgs)
- uid: System.Windows.Forms.Control.InvokeOnClick(System.Windows.Forms.Control,System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeOnClick(Control,EventArgs)
  nameWithType: Control.InvokeOnClick(Control,EventArgs)
  fullName: System.Windows.Forms.Control.InvokeOnClick(Control,EventArgs)
- uid: System.Windows.Forms.Control.InvokePaint(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokePaint(Control,PaintEventArgs)
  nameWithType: Control.InvokePaint(Control,PaintEventArgs)
  fullName: System.Windows.Forms.Control.InvokePaint(Control,PaintEventArgs)
- uid: System.Windows.Forms.PaintEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventArgs
  nameWithType: PaintEventArgs
  fullName: System.Windows.Forms.PaintEventArgs
- uid: System.Windows.Forms.Control.InvokePaintBackground(System.Windows.Forms.Control,System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokePaintBackground(Control,PaintEventArgs)
  nameWithType: Control.InvokePaintBackground(Control,PaintEventArgs)
  fullName: System.Windows.Forms.Control.InvokePaintBackground(Control,PaintEventArgs)
- uid: System.Windows.Forms.Control.InvokeRequired
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeRequired
  nameWithType: Control.InvokeRequired
  fullName: System.Windows.Forms.Control.InvokeRequired
- uid: System.Windows.Forms.Control.IsAccessible
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsAccessible
  nameWithType: Control.IsAccessible
  fullName: System.Windows.Forms.Control.IsAccessible
- uid: System.Windows.Forms.Control.IsDisposed
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsDisposed
  nameWithType: Control.IsDisposed
  fullName: System.Windows.Forms.Control.IsDisposed
- uid: System.Windows.Forms.Control.IsHandleCreated
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsHandleCreated
  nameWithType: Control.IsHandleCreated
  fullName: System.Windows.Forms.Control.IsHandleCreated
- uid: System.Windows.Forms.Control.IsInputChar(System.Char)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsInputChar(Char)
  nameWithType: Control.IsInputChar(Char)
  fullName: System.Windows.Forms.Control.IsInputChar(Char)
- uid: System.Char
  parent: System
  isExternal: true
  name: Char
  nameWithType: Char
  fullName: System.Char
- uid: System.Windows.Forms.Control.IsInputKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsInputKey(Keys)
  nameWithType: Control.IsInputKey(Keys)
  fullName: System.Windows.Forms.Control.IsInputKey(Keys)
- uid: System.Windows.Forms.Keys
  parent: System.Windows.Forms
  isExternal: false
  name: Keys
  nameWithType: Keys
  fullName: System.Windows.Forms.Keys
- uid: System.Windows.Forms.Control.IsKeyLocked(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsKeyLocked(Keys)
  nameWithType: Control.IsKeyLocked(Keys)
  fullName: System.Windows.Forms.Control.IsKeyLocked(Keys)
- uid: System.Windows.Forms.Control.IsMirrored
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsMirrored
  nameWithType: Control.IsMirrored
  fullName: System.Windows.Forms.Control.IsMirrored
- uid: System.Windows.Forms.Control.IsMnemonic(System.Char,System.String)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsMnemonic(Char,String)
  nameWithType: Control.IsMnemonic(Char,String)
  fullName: System.Windows.Forms.Control.IsMnemonic(Char,String)
- uid: System.Windows.Forms.Control.KeyDown
  parent: System.Windows.Forms.Control
  isExternal: false
  name: KeyDown
  nameWithType: Control.KeyDown
  fullName: System.Windows.Forms.Control.KeyDown
- uid: System.Windows.Forms.KeyEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: KeyEventHandler
  nameWithType: KeyEventHandler
  fullName: System.Windows.Forms.KeyEventHandler
- uid: System.Windows.Forms.Control.KeyPress
  parent: System.Windows.Forms.Control
  isExternal: false
  name: KeyPress
  nameWithType: Control.KeyPress
  fullName: System.Windows.Forms.Control.KeyPress
- uid: System.Windows.Forms.KeyPressEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: KeyPressEventHandler
  nameWithType: KeyPressEventHandler
  fullName: System.Windows.Forms.KeyPressEventHandler
- uid: System.Windows.Forms.Control.KeyUp
  parent: System.Windows.Forms.Control
  isExternal: false
  name: KeyUp
  nameWithType: Control.KeyUp
  fullName: System.Windows.Forms.Control.KeyUp
- uid: System.Windows.Forms.Control.Layout
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Layout
  nameWithType: Control.Layout
  fullName: System.Windows.Forms.Control.Layout
- uid: System.Windows.Forms.LayoutEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: LayoutEventHandler
  nameWithType: LayoutEventHandler
  fullName: System.Windows.Forms.LayoutEventHandler
- uid: System.Windows.Forms.Control.LayoutEngine
  parent: System.Windows.Forms.Control
  isExternal: false
  name: LayoutEngine
  nameWithType: Control.LayoutEngine
  fullName: System.Windows.Forms.Control.LayoutEngine
- uid: System.Windows.Forms.Layout.LayoutEngine
  parent: System.Windows.Forms.Layout
  isExternal: false
  name: LayoutEngine
  nameWithType: LayoutEngine
  fullName: System.Windows.Forms.Layout.LayoutEngine
- uid: System.Windows.Forms.Control.Leave
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Leave
  nameWithType: Control.Leave
  fullName: System.Windows.Forms.Control.Leave
- uid: System.Windows.Forms.Control.Left
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Left
  nameWithType: Control.Left
  fullName: System.Windows.Forms.Control.Left
- uid: System.Windows.Forms.Control.Location
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Location
  nameWithType: Control.Location
  fullName: System.Windows.Forms.Control.Location
- uid: System.Windows.Forms.Control.LocationChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: LocationChanged
  nameWithType: Control.LocationChanged
  fullName: System.Windows.Forms.Control.LocationChanged
- uid: System.Windows.Forms.Control.LostFocus
  parent: System.Windows.Forms.Control
  isExternal: false
  name: LostFocus
  nameWithType: Control.LostFocus
  fullName: System.Windows.Forms.Control.LostFocus
- uid: System.Windows.Forms.Control.Margin
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Margin
  nameWithType: Control.Margin
  fullName: System.Windows.Forms.Control.Margin
- uid: System.Windows.Forms.Control.MarginChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MarginChanged
  nameWithType: Control.MarginChanged
  fullName: System.Windows.Forms.Control.MarginChanged
- uid: System.Windows.Forms.Control.MaximumSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MaximumSize
  nameWithType: Control.MaximumSize
  fullName: System.Windows.Forms.Control.MaximumSize
- uid: System.Windows.Forms.Control.MinimumSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MinimumSize
  nameWithType: Control.MinimumSize
  fullName: System.Windows.Forms.Control.MinimumSize
- uid: System.Windows.Forms.Control.ModifierKeys
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ModifierKeys
  nameWithType: Control.ModifierKeys
  fullName: System.Windows.Forms.Control.ModifierKeys
- uid: System.Windows.Forms.Control.MouseButtons
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseButtons
  nameWithType: Control.MouseButtons
  fullName: System.Windows.Forms.Control.MouseButtons
- uid: System.Windows.Forms.MouseButtons
  parent: System.Windows.Forms
  isExternal: false
  name: MouseButtons
  nameWithType: MouseButtons
  fullName: System.Windows.Forms.MouseButtons
- uid: System.Windows.Forms.Control.MouseCaptureChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseCaptureChanged
  nameWithType: Control.MouseCaptureChanged
  fullName: System.Windows.Forms.Control.MouseCaptureChanged
- uid: System.Windows.Forms.Control.MouseClick
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseClick
  nameWithType: Control.MouseClick
  fullName: System.Windows.Forms.Control.MouseClick
- uid: System.Windows.Forms.MouseEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventHandler
  nameWithType: MouseEventHandler
  fullName: System.Windows.Forms.MouseEventHandler
- uid: System.Windows.Forms.Control.MouseDoubleClick
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseDoubleClick
  nameWithType: Control.MouseDoubleClick
  fullName: System.Windows.Forms.Control.MouseDoubleClick
- uid: System.Windows.Forms.Control.MouseDown
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseDown
  nameWithType: Control.MouseDown
  fullName: System.Windows.Forms.Control.MouseDown
- uid: System.Windows.Forms.Control.MouseEnter
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseEnter
  nameWithType: Control.MouseEnter
  fullName: System.Windows.Forms.Control.MouseEnter
- uid: System.Windows.Forms.Control.MouseHover
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseHover
  nameWithType: Control.MouseHover
  fullName: System.Windows.Forms.Control.MouseHover
- uid: System.Windows.Forms.Control.MouseLeave
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseLeave
  nameWithType: Control.MouseLeave
  fullName: System.Windows.Forms.Control.MouseLeave
- uid: System.Windows.Forms.Control.MouseMove
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseMove
  nameWithType: Control.MouseMove
  fullName: System.Windows.Forms.Control.MouseMove
- uid: System.Windows.Forms.Control.MousePosition
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MousePosition
  nameWithType: Control.MousePosition
  fullName: System.Windows.Forms.Control.MousePosition
- uid: System.Windows.Forms.Control.MouseUp
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseUp
  nameWithType: Control.MouseUp
  fullName: System.Windows.Forms.Control.MouseUp
- uid: System.Windows.Forms.Control.MouseWheel
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseWheel
  nameWithType: Control.MouseWheel
  fullName: System.Windows.Forms.Control.MouseWheel
- uid: System.Windows.Forms.Control.Move
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Move
  nameWithType: Control.Move
  fullName: System.Windows.Forms.Control.Move
- uid: System.Windows.Forms.Control.Name
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Name
  nameWithType: Control.Name
  fullName: System.Windows.Forms.Control.Name
- uid: System.Windows.Forms.Control.NotifyInvalidate(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: NotifyInvalidate(Rectangle)
  nameWithType: Control.NotifyInvalidate(Rectangle)
  fullName: System.Windows.Forms.Control.NotifyInvalidate(Rectangle)
- uid: System.Windows.Forms.Control.OnAutoSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnAutoSizeChanged(EventArgs)
  nameWithType: Control.OnAutoSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnAutoSizeChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnBackColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBackColorChanged(EventArgs)
  nameWithType: Control.OnBackColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBackColorChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnBackgroundImageChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBackgroundImageChanged(EventArgs)
  nameWithType: Control.OnBackgroundImageChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBackgroundImageChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBackgroundImageLayoutChanged(EventArgs)
  nameWithType: Control.OnBackgroundImageLayoutChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnBindingContextChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBindingContextChanged(EventArgs)
  nameWithType: Control.OnBindingContextChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnBindingContextChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnCausesValidationChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnCausesValidationChanged(EventArgs)
  nameWithType: Control.OnCausesValidationChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnCausesValidationChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnChangeUICues(System.Windows.Forms.UICuesEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnChangeUICues(UICuesEventArgs)
  nameWithType: Control.OnChangeUICues(UICuesEventArgs)
  fullName: System.Windows.Forms.Control.OnChangeUICues(UICuesEventArgs)
- uid: System.Windows.Forms.UICuesEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: UICuesEventArgs
  nameWithType: UICuesEventArgs
  fullName: System.Windows.Forms.UICuesEventArgs
- uid: System.Windows.Forms.Control.OnClick(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnClick(EventArgs)
  nameWithType: Control.OnClick(EventArgs)
  fullName: System.Windows.Forms.Control.OnClick(EventArgs)
- uid: System.Windows.Forms.Control.OnClientSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnClientSizeChanged(EventArgs)
  nameWithType: Control.OnClientSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnClientSizeChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnContextMenuChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnContextMenuChanged(EventArgs)
  nameWithType: Control.OnContextMenuChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnContextMenuChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnContextMenuStripChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnContextMenuStripChanged(EventArgs)
  nameWithType: Control.OnContextMenuStripChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnContextMenuStripChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnControlAdded(System.Windows.Forms.ControlEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnControlAdded(ControlEventArgs)
  nameWithType: Control.OnControlAdded(ControlEventArgs)
  fullName: System.Windows.Forms.Control.OnControlAdded(ControlEventArgs)
- uid: System.Windows.Forms.ControlEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: ControlEventArgs
  nameWithType: ControlEventArgs
  fullName: System.Windows.Forms.ControlEventArgs
- uid: System.Windows.Forms.Control.OnControlRemoved(System.Windows.Forms.ControlEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnControlRemoved(ControlEventArgs)
  nameWithType: Control.OnControlRemoved(ControlEventArgs)
  fullName: System.Windows.Forms.Control.OnControlRemoved(ControlEventArgs)
- uid: System.Windows.Forms.Control.OnCreateControl
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnCreateControl()
  nameWithType: Control.OnCreateControl()
  fullName: System.Windows.Forms.Control.OnCreateControl()
- uid: System.Windows.Forms.Control.OnCursorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnCursorChanged(EventArgs)
  nameWithType: Control.OnCursorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnCursorChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnDockChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDockChanged(EventArgs)
  nameWithType: Control.OnDockChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnDockChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnDoubleClick(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDoubleClick(EventArgs)
  nameWithType: Control.OnDoubleClick(EventArgs)
  fullName: System.Windows.Forms.Control.OnDoubleClick(EventArgs)
- uid: System.Windows.Forms.Control.OnDragDrop(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragDrop(DragEventArgs)
  nameWithType: Control.OnDragDrop(DragEventArgs)
  fullName: System.Windows.Forms.Control.OnDragDrop(DragEventArgs)
- uid: System.Windows.Forms.DragEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: DragEventArgs
  nameWithType: DragEventArgs
  fullName: System.Windows.Forms.DragEventArgs
- uid: System.Windows.Forms.Control.OnDragEnter(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragEnter(DragEventArgs)
  nameWithType: Control.OnDragEnter(DragEventArgs)
  fullName: System.Windows.Forms.Control.OnDragEnter(DragEventArgs)
- uid: System.Windows.Forms.Control.OnDragLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragLeave(EventArgs)
  nameWithType: Control.OnDragLeave(EventArgs)
  fullName: System.Windows.Forms.Control.OnDragLeave(EventArgs)
- uid: System.Windows.Forms.Control.OnDragOver(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragOver(DragEventArgs)
  nameWithType: Control.OnDragOver(DragEventArgs)
  fullName: System.Windows.Forms.Control.OnDragOver(DragEventArgs)
- uid: System.Windows.Forms.Control.OnEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnEnabledChanged(EventArgs)
  nameWithType: Control.OnEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnEnabledChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnEnter(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnEnter(EventArgs)
  nameWithType: Control.OnEnter(EventArgs)
  fullName: System.Windows.Forms.Control.OnEnter(EventArgs)
- uid: System.Windows.Forms.Control.OnFontChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnFontChanged(EventArgs)
  nameWithType: Control.OnFontChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnFontChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnForeColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnForeColorChanged(EventArgs)
  nameWithType: Control.OnForeColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnForeColorChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnGiveFeedback(System.Windows.Forms.GiveFeedbackEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnGiveFeedback(GiveFeedbackEventArgs)
  nameWithType: Control.OnGiveFeedback(GiveFeedbackEventArgs)
  fullName: System.Windows.Forms.Control.OnGiveFeedback(GiveFeedbackEventArgs)
- uid: System.Windows.Forms.GiveFeedbackEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: GiveFeedbackEventArgs
  nameWithType: GiveFeedbackEventArgs
  fullName: System.Windows.Forms.GiveFeedbackEventArgs
- uid: System.Windows.Forms.Control.OnGotFocus(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnGotFocus(EventArgs)
  nameWithType: Control.OnGotFocus(EventArgs)
  fullName: System.Windows.Forms.Control.OnGotFocus(EventArgs)
- uid: System.Windows.Forms.Control.OnHandleCreated(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnHandleCreated(EventArgs)
  nameWithType: Control.OnHandleCreated(EventArgs)
  fullName: System.Windows.Forms.Control.OnHandleCreated(EventArgs)
- uid: System.Windows.Forms.Control.OnHandleDestroyed(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnHandleDestroyed(EventArgs)
  nameWithType: Control.OnHandleDestroyed(EventArgs)
  fullName: System.Windows.Forms.Control.OnHandleDestroyed(EventArgs)
- uid: System.Windows.Forms.Control.OnHelpRequested(System.Windows.Forms.HelpEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnHelpRequested(HelpEventArgs)
  nameWithType: Control.OnHelpRequested(HelpEventArgs)
  fullName: System.Windows.Forms.Control.OnHelpRequested(HelpEventArgs)
- uid: System.Windows.Forms.HelpEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: HelpEventArgs
  nameWithType: HelpEventArgs
  fullName: System.Windows.Forms.HelpEventArgs
- uid: System.Windows.Forms.Control.OnImeModeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnImeModeChanged(EventArgs)
  nameWithType: Control.OnImeModeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnImeModeChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnInvalidated(System.Windows.Forms.InvalidateEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnInvalidated(InvalidateEventArgs)
  nameWithType: Control.OnInvalidated(InvalidateEventArgs)
  fullName: System.Windows.Forms.Control.OnInvalidated(InvalidateEventArgs)
- uid: System.Windows.Forms.InvalidateEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: InvalidateEventArgs
  nameWithType: InvalidateEventArgs
  fullName: System.Windows.Forms.InvalidateEventArgs
- uid: System.Windows.Forms.Control.OnKeyDown(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnKeyDown(KeyEventArgs)
  nameWithType: Control.OnKeyDown(KeyEventArgs)
  fullName: System.Windows.Forms.Control.OnKeyDown(KeyEventArgs)
- uid: System.Windows.Forms.KeyEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: KeyEventArgs
  nameWithType: KeyEventArgs
  fullName: System.Windows.Forms.KeyEventArgs
- uid: System.Windows.Forms.Control.OnKeyPress(System.Windows.Forms.KeyPressEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnKeyPress(KeyPressEventArgs)
  nameWithType: Control.OnKeyPress(KeyPressEventArgs)
  fullName: System.Windows.Forms.Control.OnKeyPress(KeyPressEventArgs)
- uid: System.Windows.Forms.KeyPressEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: KeyPressEventArgs
  nameWithType: KeyPressEventArgs
  fullName: System.Windows.Forms.KeyPressEventArgs
- uid: System.Windows.Forms.Control.OnKeyUp(System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnKeyUp(KeyEventArgs)
  nameWithType: Control.OnKeyUp(KeyEventArgs)
  fullName: System.Windows.Forms.Control.OnKeyUp(KeyEventArgs)
- uid: System.Windows.Forms.Control.OnLayout(System.Windows.Forms.LayoutEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLayout(LayoutEventArgs)
  nameWithType: Control.OnLayout(LayoutEventArgs)
  fullName: System.Windows.Forms.Control.OnLayout(LayoutEventArgs)
- uid: System.Windows.Forms.LayoutEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: LayoutEventArgs
  nameWithType: LayoutEventArgs
  fullName: System.Windows.Forms.LayoutEventArgs
- uid: System.Windows.Forms.Control.OnLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLeave(EventArgs)
  nameWithType: Control.OnLeave(EventArgs)
  fullName: System.Windows.Forms.Control.OnLeave(EventArgs)
- uid: System.Windows.Forms.Control.OnLocationChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLocationChanged(EventArgs)
  nameWithType: Control.OnLocationChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnLocationChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnLostFocus(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLostFocus(EventArgs)
  nameWithType: Control.OnLostFocus(EventArgs)
  fullName: System.Windows.Forms.Control.OnLostFocus(EventArgs)
- uid: System.Windows.Forms.Control.OnMarginChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMarginChanged(EventArgs)
  nameWithType: Control.OnMarginChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnMarginChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnMouseCaptureChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseCaptureChanged(EventArgs)
  nameWithType: Control.OnMouseCaptureChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseCaptureChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnMouseClick(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseClick(MouseEventArgs)
  nameWithType: Control.OnMouseClick(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseClick(MouseEventArgs)
- uid: System.Windows.Forms.MouseEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: MouseEventArgs
  nameWithType: MouseEventArgs
  fullName: System.Windows.Forms.MouseEventArgs
- uid: System.Windows.Forms.Control.OnMouseDoubleClick(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseDoubleClick(MouseEventArgs)
  nameWithType: Control.OnMouseDoubleClick(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseDoubleClick(MouseEventArgs)
- uid: System.Windows.Forms.Control.OnMouseDown(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseDown(MouseEventArgs)
  nameWithType: Control.OnMouseDown(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseDown(MouseEventArgs)
- uid: System.Windows.Forms.Control.OnMouseEnter(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseEnter(EventArgs)
  nameWithType: Control.OnMouseEnter(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseEnter(EventArgs)
- uid: System.Windows.Forms.Control.OnMouseHover(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseHover(EventArgs)
  nameWithType: Control.OnMouseHover(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseHover(EventArgs)
- uid: System.Windows.Forms.Control.OnMouseLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseLeave(EventArgs)
  nameWithType: Control.OnMouseLeave(EventArgs)
  fullName: System.Windows.Forms.Control.OnMouseLeave(EventArgs)
- uid: System.Windows.Forms.Control.OnMouseMove(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseMove(MouseEventArgs)
  nameWithType: Control.OnMouseMove(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseMove(MouseEventArgs)
- uid: System.Windows.Forms.Control.OnMouseUp(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseUp(MouseEventArgs)
  nameWithType: Control.OnMouseUp(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseUp(MouseEventArgs)
- uid: System.Windows.Forms.Control.OnMouseWheel(System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseWheel(MouseEventArgs)
  nameWithType: Control.OnMouseWheel(MouseEventArgs)
  fullName: System.Windows.Forms.Control.OnMouseWheel(MouseEventArgs)
- uid: System.Windows.Forms.Control.OnMove(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMove(EventArgs)
  nameWithType: Control.OnMove(EventArgs)
  fullName: System.Windows.Forms.Control.OnMove(EventArgs)
- uid: System.Windows.Forms.Control.OnNotifyMessage(System.Windows.Forms.Message)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnNotifyMessage(Message)
  nameWithType: Control.OnNotifyMessage(Message)
  fullName: System.Windows.Forms.Control.OnNotifyMessage(Message)
- uid: System.Windows.Forms.Control.OnPaddingChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPaddingChanged(EventArgs)
  nameWithType: Control.OnPaddingChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnPaddingChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnPaint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPaint(PaintEventArgs)
  nameWithType: Control.OnPaint(PaintEventArgs)
  fullName: System.Windows.Forms.Control.OnPaint(PaintEventArgs)
- uid: System.Windows.Forms.Control.OnPaintBackground(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPaintBackground(PaintEventArgs)
  nameWithType: Control.OnPaintBackground(PaintEventArgs)
  fullName: System.Windows.Forms.Control.OnPaintBackground(PaintEventArgs)
- uid: System.Windows.Forms.Control.OnParentBackColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentBackColorChanged(EventArgs)
  nameWithType: Control.OnParentBackColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentBackColorChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentBackgroundImageChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentBackgroundImageChanged(EventArgs)
  nameWithType: Control.OnParentBackgroundImageChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentBackgroundImageChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentBindingContextChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentBindingContextChanged(EventArgs)
  nameWithType: Control.OnParentBindingContextChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentBindingContextChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentChanged(EventArgs)
  nameWithType: Control.OnParentChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentCursorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentCursorChanged(EventArgs)
  nameWithType: Control.OnParentCursorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentCursorChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentEnabledChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentEnabledChanged(EventArgs)
  nameWithType: Control.OnParentEnabledChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentEnabledChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentFontChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentFontChanged(EventArgs)
  nameWithType: Control.OnParentFontChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentFontChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentForeColorChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentForeColorChanged(EventArgs)
  nameWithType: Control.OnParentForeColorChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentForeColorChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentRightToLeftChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentRightToLeftChanged(EventArgs)
  nameWithType: Control.OnParentRightToLeftChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentRightToLeftChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnParentVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentVisibleChanged(EventArgs)
  nameWithType: Control.OnParentVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnParentVisibleChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnPreviewKeyDown(System.Windows.Forms.PreviewKeyDownEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPreviewKeyDown(PreviewKeyDownEventArgs)
  nameWithType: Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)
  fullName: System.Windows.Forms.Control.OnPreviewKeyDown(PreviewKeyDownEventArgs)
- uid: System.Windows.Forms.PreviewKeyDownEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: PreviewKeyDownEventArgs
  nameWithType: PreviewKeyDownEventArgs
  fullName: System.Windows.Forms.PreviewKeyDownEventArgs
- uid: System.Windows.Forms.Control.OnPrint(System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPrint(PaintEventArgs)
  nameWithType: Control.OnPrint(PaintEventArgs)
  fullName: System.Windows.Forms.Control.OnPrint(PaintEventArgs)
- uid: System.Windows.Forms.Control.OnQueryContinueDrag(System.Windows.Forms.QueryContinueDragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnQueryContinueDrag(QueryContinueDragEventArgs)
  nameWithType: Control.OnQueryContinueDrag(QueryContinueDragEventArgs)
  fullName: System.Windows.Forms.Control.OnQueryContinueDrag(QueryContinueDragEventArgs)
- uid: System.Windows.Forms.QueryContinueDragEventArgs
  parent: System.Windows.Forms
  isExternal: false
  name: QueryContinueDragEventArgs
  nameWithType: QueryContinueDragEventArgs
  fullName: System.Windows.Forms.QueryContinueDragEventArgs
- uid: System.Windows.Forms.Control.OnRegionChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnRegionChanged(EventArgs)
  nameWithType: Control.OnRegionChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnRegionChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnResize(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnResize(EventArgs)
  nameWithType: Control.OnResize(EventArgs)
  fullName: System.Windows.Forms.Control.OnResize(EventArgs)
- uid: System.Windows.Forms.Control.OnRightToLeftChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnRightToLeftChanged(EventArgs)
  nameWithType: Control.OnRightToLeftChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnRightToLeftChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnSizeChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnSizeChanged(EventArgs)
  nameWithType: Control.OnSizeChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnSizeChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnStyleChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnStyleChanged(EventArgs)
  nameWithType: Control.OnStyleChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnStyleChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnSystemColorsChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnSystemColorsChanged(EventArgs)
  nameWithType: Control.OnSystemColorsChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnSystemColorsChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnTabIndexChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnTabIndexChanged(EventArgs)
  nameWithType: Control.OnTabIndexChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnTabIndexChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnTabStopChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnTabStopChanged(EventArgs)
  nameWithType: Control.OnTabStopChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnTabStopChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnTextChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnTextChanged(EventArgs)
  nameWithType: Control.OnTextChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnTextChanged(EventArgs)
- uid: System.Windows.Forms.Control.OnValidated(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnValidated(EventArgs)
  nameWithType: Control.OnValidated(EventArgs)
  fullName: System.Windows.Forms.Control.OnValidated(EventArgs)
- uid: System.Windows.Forms.Control.OnValidating(System.ComponentModel.CancelEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnValidating(CancelEventArgs)
  nameWithType: Control.OnValidating(CancelEventArgs)
  fullName: System.Windows.Forms.Control.OnValidating(CancelEventArgs)
- uid: System.ComponentModel.CancelEventArgs
  parent: System.ComponentModel
  isExternal: true
  name: CancelEventArgs
  nameWithType: CancelEventArgs
  fullName: System.ComponentModel.CancelEventArgs
- uid: System.Windows.Forms.Control.OnVisibleChanged(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnVisibleChanged(EventArgs)
  nameWithType: Control.OnVisibleChanged(EventArgs)
  fullName: System.Windows.Forms.Control.OnVisibleChanged(EventArgs)
- uid: System.Windows.Forms.Control.Padding
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Padding
  nameWithType: Control.Padding
  fullName: System.Windows.Forms.Control.Padding
- uid: System.Windows.Forms.Control.PaddingChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PaddingChanged
  nameWithType: Control.PaddingChanged
  fullName: System.Windows.Forms.Control.PaddingChanged
- uid: System.Windows.Forms.Control.Paint
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Paint
  nameWithType: Control.Paint
  fullName: System.Windows.Forms.Control.Paint
- uid: System.Windows.Forms.PaintEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: PaintEventHandler
  nameWithType: PaintEventHandler
  fullName: System.Windows.Forms.PaintEventHandler
- uid: System.Windows.Forms.Control.Parent
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Parent
  nameWithType: Control.Parent
  fullName: System.Windows.Forms.Control.Parent
- uid: System.Windows.Forms.Control.ParentChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ParentChanged
  nameWithType: Control.ParentChanged
  fullName: System.Windows.Forms.Control.ParentChanged
- uid: System.Windows.Forms.Control.PerformLayout
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PerformLayout()
  nameWithType: Control.PerformLayout()
  fullName: System.Windows.Forms.Control.PerformLayout()
- uid: System.Windows.Forms.Control.PerformLayout(System.Windows.Forms.Control,System.String)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PerformLayout(Control,String)
  nameWithType: Control.PerformLayout(Control,String)
  fullName: System.Windows.Forms.Control.PerformLayout(Control,String)
- uid: System.Windows.Forms.Control.PointToClient(System.Drawing.Point)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PointToClient(Point)
  nameWithType: Control.PointToClient(Point)
  fullName: System.Windows.Forms.Control.PointToClient(Point)
- uid: System.Windows.Forms.Control.PointToScreen(System.Drawing.Point)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PointToScreen(Point)
  nameWithType: Control.PointToScreen(Point)
  fullName: System.Windows.Forms.Control.PointToScreen(Point)
- uid: System.Windows.Forms.Control.PreferredSize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreferredSize
  nameWithType: Control.PreferredSize
  fullName: System.Windows.Forms.Control.PreferredSize
- uid: System.Windows.Forms.Control.PreProcessControlMessage(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreProcessControlMessage(Message)
  nameWithType: Control.PreProcessControlMessage(Message)
  fullName: System.Windows.Forms.Control.PreProcessControlMessage(Message)
- uid: System.Windows.Forms.PreProcessControlState
  parent: System.Windows.Forms
  isExternal: false
  name: PreProcessControlState
  nameWithType: PreProcessControlState
  fullName: System.Windows.Forms.PreProcessControlState
- uid: System.Windows.Forms.Control.PreProcessMessage(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreProcessMessage(Message)
  nameWithType: Control.PreProcessMessage(Message)
  fullName: System.Windows.Forms.Control.PreProcessMessage(Message)
- uid: System.Windows.Forms.Control.PreviewKeyDown
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreviewKeyDown
  nameWithType: Control.PreviewKeyDown
  fullName: System.Windows.Forms.Control.PreviewKeyDown
- uid: System.Windows.Forms.PreviewKeyDownEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: PreviewKeyDownEventHandler
  nameWithType: PreviewKeyDownEventHandler
  fullName: System.Windows.Forms.PreviewKeyDownEventHandler
- uid: System.Windows.Forms.Control.ProcessCmdKey(System.Windows.Forms.Message@,System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessCmdKey(Message,Keys)
  nameWithType: Control.ProcessCmdKey(Message,Keys)
  fullName: System.Windows.Forms.Control.ProcessCmdKey(Message,Keys)
- uid: System.Windows.Forms.Control.ProcessDialogChar(System.Char)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessDialogChar(Char)
  nameWithType: Control.ProcessDialogChar(Char)
  fullName: System.Windows.Forms.Control.ProcessDialogChar(Char)
- uid: System.Windows.Forms.Control.ProcessDialogKey(System.Windows.Forms.Keys)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessDialogKey(Keys)
  nameWithType: Control.ProcessDialogKey(Keys)
  fullName: System.Windows.Forms.Control.ProcessDialogKey(Keys)
- uid: System.Windows.Forms.Control.ProcessKeyEventArgs(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessKeyEventArgs(Message)
  nameWithType: Control.ProcessKeyEventArgs(Message)
  fullName: System.Windows.Forms.Control.ProcessKeyEventArgs(Message)
- uid: System.Windows.Forms.Control.ProcessKeyMessage(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessKeyMessage(Message)
  nameWithType: Control.ProcessKeyMessage(Message)
  fullName: System.Windows.Forms.Control.ProcessKeyMessage(Message)
- uid: System.Windows.Forms.Control.ProcessKeyPreview(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessKeyPreview(Message)
  nameWithType: Control.ProcessKeyPreview(Message)
  fullName: System.Windows.Forms.Control.ProcessKeyPreview(Message)
- uid: System.Windows.Forms.Control.ProcessMnemonic(System.Char)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessMnemonic(Char)
  nameWithType: Control.ProcessMnemonic(Char)
  fullName: System.Windows.Forms.Control.ProcessMnemonic(Char)
- uid: System.Windows.Forms.Control.ProductName
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProductName
  nameWithType: Control.ProductName
  fullName: System.Windows.Forms.Control.ProductName
- uid: System.Windows.Forms.Control.ProductVersion
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProductVersion
  nameWithType: Control.ProductVersion
  fullName: System.Windows.Forms.Control.ProductVersion
- uid: System.Windows.Forms.Control.PropagatingImeMode
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PropagatingImeMode
  nameWithType: Control.PropagatingImeMode
  fullName: System.Windows.Forms.Control.PropagatingImeMode
- uid: System.Windows.Forms.Control.QueryAccessibilityHelp
  parent: System.Windows.Forms.Control
  isExternal: false
  name: QueryAccessibilityHelp
  nameWithType: Control.QueryAccessibilityHelp
  fullName: System.Windows.Forms.Control.QueryAccessibilityHelp
- uid: System.Windows.Forms.QueryAccessibilityHelpEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: QueryAccessibilityHelpEventHandler
  nameWithType: QueryAccessibilityHelpEventHandler
  fullName: System.Windows.Forms.QueryAccessibilityHelpEventHandler
- uid: System.Windows.Forms.Control.QueryContinueDrag
  parent: System.Windows.Forms.Control
  isExternal: false
  name: QueryContinueDrag
  nameWithType: Control.QueryContinueDrag
  fullName: System.Windows.Forms.Control.QueryContinueDrag
- uid: System.Windows.Forms.QueryContinueDragEventHandler
  parent: System.Windows.Forms
  isExternal: false
  name: QueryContinueDragEventHandler
  nameWithType: QueryContinueDragEventHandler
  fullName: System.Windows.Forms.QueryContinueDragEventHandler
- uid: System.Windows.Forms.Control.RaiseDragEvent(System.Object,System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaiseDragEvent(Object,DragEventArgs)
  nameWithType: Control.RaiseDragEvent(Object,DragEventArgs)
  fullName: System.Windows.Forms.Control.RaiseDragEvent(Object,DragEventArgs)
- uid: System.Windows.Forms.Control.RaiseKeyEvent(System.Object,System.Windows.Forms.KeyEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaiseKeyEvent(Object,KeyEventArgs)
  nameWithType: Control.RaiseKeyEvent(Object,KeyEventArgs)
  fullName: System.Windows.Forms.Control.RaiseKeyEvent(Object,KeyEventArgs)
- uid: System.Windows.Forms.Control.RaiseMouseEvent(System.Object,System.Windows.Forms.MouseEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaiseMouseEvent(Object,MouseEventArgs)
  nameWithType: Control.RaiseMouseEvent(Object,MouseEventArgs)
  fullName: System.Windows.Forms.Control.RaiseMouseEvent(Object,MouseEventArgs)
- uid: System.Windows.Forms.Control.RaisePaintEvent(System.Object,System.Windows.Forms.PaintEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaisePaintEvent(Object,PaintEventArgs)
  nameWithType: Control.RaisePaintEvent(Object,PaintEventArgs)
  fullName: System.Windows.Forms.Control.RaisePaintEvent(Object,PaintEventArgs)
- uid: System.Windows.Forms.Control.RecreateHandle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RecreateHandle()
  nameWithType: Control.RecreateHandle()
  fullName: System.Windows.Forms.Control.RecreateHandle()
- uid: System.Windows.Forms.Control.RecreatingHandle
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RecreatingHandle
  nameWithType: Control.RecreatingHandle
  fullName: System.Windows.Forms.Control.RecreatingHandle
- uid: System.Windows.Forms.Control.RectangleToClient(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RectangleToClient(Rectangle)
  nameWithType: Control.RectangleToClient(Rectangle)
  fullName: System.Windows.Forms.Control.RectangleToClient(Rectangle)
- uid: System.Windows.Forms.Control.RectangleToScreen(System.Drawing.Rectangle)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RectangleToScreen(Rectangle)
  nameWithType: Control.RectangleToScreen(Rectangle)
  fullName: System.Windows.Forms.Control.RectangleToScreen(Rectangle)
- uid: System.Windows.Forms.Control.ReflectMessage(System.IntPtr,System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ReflectMessage(IntPtr,Message)
  nameWithType: Control.ReflectMessage(IntPtr,Message)
  fullName: System.Windows.Forms.Control.ReflectMessage(IntPtr,Message)
- uid: System.Windows.Forms.Control.Refresh
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Refresh()
  nameWithType: Control.Refresh()
  fullName: System.Windows.Forms.Control.Refresh()
- uid: System.Windows.Forms.Control.Region
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Region
  nameWithType: Control.Region
  fullName: System.Windows.Forms.Control.Region
- uid: System.Windows.Forms.Control.RegionChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RegionChanged
  nameWithType: Control.RegionChanged
  fullName: System.Windows.Forms.Control.RegionChanged
- uid: System.Windows.Forms.Control.RenderRightToLeft
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RenderRightToLeft
  nameWithType: Control.RenderRightToLeft
  fullName: System.Windows.Forms.Control.RenderRightToLeft
- uid: System.Windows.Forms.Control.ResetBackColor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetBackColor()
  nameWithType: Control.ResetBackColor()
  fullName: System.Windows.Forms.Control.ResetBackColor()
- uid: System.Windows.Forms.Control.ResetBindings
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetBindings()
  nameWithType: Control.ResetBindings()
  fullName: System.Windows.Forms.Control.ResetBindings()
- uid: System.Windows.Forms.Control.ResetCursor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetCursor()
  nameWithType: Control.ResetCursor()
  fullName: System.Windows.Forms.Control.ResetCursor()
- uid: System.Windows.Forms.Control.ResetFont
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetFont()
  nameWithType: Control.ResetFont()
  fullName: System.Windows.Forms.Control.ResetFont()
- uid: System.Windows.Forms.Control.ResetForeColor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetForeColor()
  nameWithType: Control.ResetForeColor()
  fullName: System.Windows.Forms.Control.ResetForeColor()
- uid: System.Windows.Forms.Control.ResetImeMode
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetImeMode()
  nameWithType: Control.ResetImeMode()
  fullName: System.Windows.Forms.Control.ResetImeMode()
- uid: System.Windows.Forms.Control.ResetMouseEventArgs
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetMouseEventArgs()
  nameWithType: Control.ResetMouseEventArgs()
  fullName: System.Windows.Forms.Control.ResetMouseEventArgs()
- uid: System.Windows.Forms.Control.ResetRightToLeft
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetRightToLeft()
  nameWithType: Control.ResetRightToLeft()
  fullName: System.Windows.Forms.Control.ResetRightToLeft()
- uid: System.Windows.Forms.Control.ResetText
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetText()
  nameWithType: Control.ResetText()
  fullName: System.Windows.Forms.Control.ResetText()
- uid: System.Windows.Forms.Control.Resize
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Resize
  nameWithType: Control.Resize
  fullName: System.Windows.Forms.Control.Resize
- uid: System.Windows.Forms.Control.ResizeRedraw
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResizeRedraw
  nameWithType: Control.ResizeRedraw
  fullName: System.Windows.Forms.Control.ResizeRedraw
- uid: System.Windows.Forms.Control.ResumeLayout
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResumeLayout()
  nameWithType: Control.ResumeLayout()
  fullName: System.Windows.Forms.Control.ResumeLayout()
- uid: System.Windows.Forms.Control.ResumeLayout(System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResumeLayout(Boolean)
  nameWithType: Control.ResumeLayout(Boolean)
  fullName: System.Windows.Forms.Control.ResumeLayout(Boolean)
- uid: System.Windows.Forms.Control.Right
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Right
  nameWithType: Control.Right
  fullName: System.Windows.Forms.Control.Right
- uid: System.Windows.Forms.Control.RightToLeft
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RightToLeft
  nameWithType: Control.RightToLeft
  fullName: System.Windows.Forms.Control.RightToLeft
- uid: System.Windows.Forms.RightToLeft
  parent: System.Windows.Forms
  isExternal: false
  name: RightToLeft
  nameWithType: RightToLeft
  fullName: System.Windows.Forms.RightToLeft
- uid: System.Windows.Forms.Control.RightToLeftChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RightToLeftChanged
  nameWithType: Control.RightToLeftChanged
  fullName: System.Windows.Forms.Control.RightToLeftChanged
- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Drawing.ContentAlignment)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateAlignment(ContentAlignment)
  nameWithType: Control.RtlTranslateAlignment(ContentAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateAlignment(ContentAlignment)
- uid: System.Drawing.ContentAlignment
  parent: System.Drawing
  isExternal: false
  name: ContentAlignment
  nameWithType: ContentAlignment
  fullName: System.Drawing.ContentAlignment
- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.HorizontalAlignment)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateAlignment(HorizontalAlignment)
  nameWithType: Control.RtlTranslateAlignment(HorizontalAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateAlignment(HorizontalAlignment)
- uid: System.Windows.Forms.HorizontalAlignment
  parent: System.Windows.Forms
  isExternal: false
  name: HorizontalAlignment
  nameWithType: HorizontalAlignment
  fullName: System.Windows.Forms.HorizontalAlignment
- uid: System.Windows.Forms.Control.RtlTranslateAlignment(System.Windows.Forms.LeftRightAlignment)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateAlignment(LeftRightAlignment)
  nameWithType: Control.RtlTranslateAlignment(LeftRightAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateAlignment(LeftRightAlignment)
- uid: System.Windows.Forms.LeftRightAlignment
  parent: System.Windows.Forms
  isExternal: false
  name: LeftRightAlignment
  nameWithType: LeftRightAlignment
  fullName: System.Windows.Forms.LeftRightAlignment
- uid: System.Windows.Forms.Control.RtlTranslateContent(System.Drawing.ContentAlignment)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateContent(ContentAlignment)
  nameWithType: Control.RtlTranslateContent(ContentAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateContent(ContentAlignment)
- uid: System.Windows.Forms.Control.RtlTranslateHorizontal(System.Windows.Forms.HorizontalAlignment)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateHorizontal(HorizontalAlignment)
  nameWithType: Control.RtlTranslateHorizontal(HorizontalAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateHorizontal(HorizontalAlignment)
- uid: System.Windows.Forms.Control.RtlTranslateLeftRight(System.Windows.Forms.LeftRightAlignment)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateLeftRight(LeftRightAlignment)
  nameWithType: Control.RtlTranslateLeftRight(LeftRightAlignment)
  fullName: System.Windows.Forms.Control.RtlTranslateLeftRight(LeftRightAlignment)
- uid: System.Windows.Forms.Control.Scale(System.Drawing.SizeF)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Scale(SizeF)
  nameWithType: Control.Scale(SizeF)
  fullName: System.Windows.Forms.Control.Scale(SizeF)
- uid: System.Windows.Forms.Control.Scale(System.Single)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Scale(Single)
  nameWithType: Control.Scale(Single)
  fullName: System.Windows.Forms.Control.Scale(Single)
- uid: System.Single
  parent: System
  isExternal: true
  name: Single
  nameWithType: Single
  fullName: System.Single
- uid: System.Windows.Forms.Control.Scale(System.Single,System.Single)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Scale(Single,Single)
  nameWithType: Control.Scale(Single,Single)
  fullName: System.Windows.Forms.Control.Scale(Single,Single)
- uid: System.Windows.Forms.Control.ScaleChildren
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ScaleChildren
  nameWithType: Control.ScaleChildren
  fullName: System.Windows.Forms.Control.ScaleChildren
- uid: System.Windows.Forms.Control.ScaleControl(System.Drawing.SizeF,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ScaleControl(SizeF,BoundsSpecified)
  nameWithType: Control.ScaleControl(SizeF,BoundsSpecified)
  fullName: System.Windows.Forms.Control.ScaleControl(SizeF,BoundsSpecified)
- uid: System.Windows.Forms.Control.ScaleCore(System.Single,System.Single)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ScaleCore(Single,Single)
  nameWithType: Control.ScaleCore(Single,Single)
  fullName: System.Windows.Forms.Control.ScaleCore(Single,Single)
- uid: System.Windows.Forms.Control.Select
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Select()
  nameWithType: Control.Select()
  fullName: System.Windows.Forms.Control.Select()
- uid: System.Windows.Forms.Control.Select(System.Boolean,System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Select(Boolean,Boolean)
  nameWithType: Control.Select(Boolean,Boolean)
  fullName: System.Windows.Forms.Control.Select(Boolean,Boolean)
- uid: System.Windows.Forms.Control.SelectNextControl(System.Windows.Forms.Control,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)
  nameWithType: Control.SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)
  fullName: System.Windows.Forms.Control.SelectNextControl(Control,Boolean,Boolean,Boolean,Boolean)
- uid: System.Windows.Forms.Control.SendToBack
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SendToBack()
  nameWithType: Control.SendToBack()
  fullName: System.Windows.Forms.Control.SendToBack()
- uid: System.Windows.Forms.Control.SetAutoSizeMode(System.Windows.Forms.AutoSizeMode)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetAutoSizeMode(AutoSizeMode)
  nameWithType: Control.SetAutoSizeMode(AutoSizeMode)
  fullName: System.Windows.Forms.Control.SetAutoSizeMode(AutoSizeMode)
- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetBounds(Int32,Int32,Int32,Int32)
  nameWithType: Control.SetBounds(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.SetBounds(Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.Control.SetBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: Control.SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.Control.SetBounds(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Windows.Forms.Control.SetBoundsCore(System.Int32,System.Int32,System.Int32,System.Int32,System.Windows.Forms.BoundsSpecified)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  nameWithType: Control.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
  fullName: System.Windows.Forms.Control.SetBoundsCore(Int32,Int32,Int32,Int32,BoundsSpecified)
- uid: System.Windows.Forms.Control.SetClientSizeCore(System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetClientSizeCore(Int32,Int32)
  nameWithType: Control.SetClientSizeCore(Int32,Int32)
  fullName: System.Windows.Forms.Control.SetClientSizeCore(Int32,Int32)
- uid: System.Windows.Forms.Control.SetStyle(System.Windows.Forms.ControlStyles,System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetStyle(ControlStyles,Boolean)
  nameWithType: Control.SetStyle(ControlStyles,Boolean)
  fullName: System.Windows.Forms.Control.SetStyle(ControlStyles,Boolean)
- uid: System.Windows.Forms.Control.SetTopLevel(System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetTopLevel(Boolean)
  nameWithType: Control.SetTopLevel(Boolean)
  fullName: System.Windows.Forms.Control.SetTopLevel(Boolean)
- uid: System.Windows.Forms.Control.SetVisibleCore(System.Boolean)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetVisibleCore(Boolean)
  nameWithType: Control.SetVisibleCore(Boolean)
  fullName: System.Windows.Forms.Control.SetVisibleCore(Boolean)
- uid: System.Windows.Forms.Control.Show
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Show()
  nameWithType: Control.Show()
  fullName: System.Windows.Forms.Control.Show()
- uid: System.Windows.Forms.Control.ShowFocusCues
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ShowFocusCues
  nameWithType: Control.ShowFocusCues
  fullName: System.Windows.Forms.Control.ShowFocusCues
- uid: System.Windows.Forms.Control.ShowKeyboardCues
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ShowKeyboardCues
  nameWithType: Control.ShowKeyboardCues
  fullName: System.Windows.Forms.Control.ShowKeyboardCues
- uid: System.Windows.Forms.Control.Site
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Site
  nameWithType: Control.Site
  fullName: System.Windows.Forms.Control.Site
- uid: System.ComponentModel.ISite
  parent: System.ComponentModel
  isExternal: false
  name: ISite
  nameWithType: ISite
  fullName: System.ComponentModel.ISite
- uid: System.Windows.Forms.Control.Size
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Size
  nameWithType: Control.Size
  fullName: System.Windows.Forms.Control.Size
- uid: System.Windows.Forms.Control.SizeChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SizeChanged
  nameWithType: Control.SizeChanged
  fullName: System.Windows.Forms.Control.SizeChanged
- uid: System.Windows.Forms.Control.SizeFromClientSize(System.Drawing.Size)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SizeFromClientSize(Size)
  nameWithType: Control.SizeFromClientSize(Size)
  fullName: System.Windows.Forms.Control.SizeFromClientSize(Size)
- uid: System.Windows.Forms.Control.StyleChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: StyleChanged
  nameWithType: Control.StyleChanged
  fullName: System.Windows.Forms.Control.StyleChanged
- uid: System.Windows.Forms.Control.SuspendLayout
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SuspendLayout()
  nameWithType: Control.SuspendLayout()
  fullName: System.Windows.Forms.Control.SuspendLayout()
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragDrop(DragEventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragDrop(DragEventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragDrop(DragEventArgs)
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragEnter(DragEventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragEnter(DragEventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragEnter(DragEventArgs)
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave(System.EventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragLeave(EventArgs)
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver(System.Windows.Forms.DragEventArgs)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragOver(DragEventArgs)
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragOver(DragEventArgs)
  fullName: System.Windows.Forms.Control.System.Windows.Forms.IDropTarget.OnDragOver(DragEventArgs)
- uid: System.Windows.Forms.Control.SystemColorsChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SystemColorsChanged
  nameWithType: Control.SystemColorsChanged
  fullName: System.Windows.Forms.Control.SystemColorsChanged
- uid: System.Windows.Forms.Control.TabIndex
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TabIndex
  nameWithType: Control.TabIndex
  fullName: System.Windows.Forms.Control.TabIndex
- uid: System.Windows.Forms.Control.TabIndexChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TabIndexChanged
  nameWithType: Control.TabIndexChanged
  fullName: System.Windows.Forms.Control.TabIndexChanged
- uid: System.Windows.Forms.Control.TabStop
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TabStop
  nameWithType: Control.TabStop
  fullName: System.Windows.Forms.Control.TabStop
- uid: System.Windows.Forms.Control.TabStopChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TabStopChanged
  nameWithType: Control.TabStopChanged
  fullName: System.Windows.Forms.Control.TabStopChanged
- uid: System.Windows.Forms.Control.Tag
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Tag
  nameWithType: Control.Tag
  fullName: System.Windows.Forms.Control.Tag
- uid: System.Windows.Forms.Control.Text
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Text
  nameWithType: Control.Text
  fullName: System.Windows.Forms.Control.Text
- uid: System.Windows.Forms.Control.TextChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TextChanged
  nameWithType: Control.TextChanged
  fullName: System.Windows.Forms.Control.TextChanged
- uid: System.Windows.Forms.Control.Top
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Top
  nameWithType: Control.Top
  fullName: System.Windows.Forms.Control.Top
- uid: System.Windows.Forms.Control.TopLevelControl
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TopLevelControl
  nameWithType: Control.TopLevelControl
  fullName: System.Windows.Forms.Control.TopLevelControl
- uid: System.Windows.Forms.Control.Update
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Update()
  nameWithType: Control.Update()
  fullName: System.Windows.Forms.Control.Update()
- uid: System.Windows.Forms.Control.UpdateBounds
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateBounds()
  nameWithType: Control.UpdateBounds()
  fullName: System.Windows.Forms.Control.UpdateBounds()
- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateBounds(Int32,Int32,Int32,Int32)
  nameWithType: Control.UpdateBounds(Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.UpdateBounds(Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.Control.UpdateBounds(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)
  nameWithType: Control.UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)
  fullName: System.Windows.Forms.Control.UpdateBounds(Int32,Int32,Int32,Int32,Int32,Int32)
- uid: System.Windows.Forms.Control.UpdateStyles
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateStyles()
  nameWithType: Control.UpdateStyles()
  fullName: System.Windows.Forms.Control.UpdateStyles()
- uid: System.Windows.Forms.Control.UpdateZOrder
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateZOrder()
  nameWithType: Control.UpdateZOrder()
  fullName: System.Windows.Forms.Control.UpdateZOrder()
- uid: System.Windows.Forms.Control.UseWaitCursor
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UseWaitCursor
  nameWithType: Control.UseWaitCursor
  fullName: System.Windows.Forms.Control.UseWaitCursor
- uid: System.Windows.Forms.Control.Validated
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Validated
  nameWithType: Control.Validated
  fullName: System.Windows.Forms.Control.Validated
- uid: System.Windows.Forms.Control.Validating
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Validating
  nameWithType: Control.Validating
  fullName: System.Windows.Forms.Control.Validating
- uid: System.ComponentModel.CancelEventHandler
  parent: System.ComponentModel
  isExternal: false
  name: CancelEventHandler
  nameWithType: CancelEventHandler
  fullName: System.ComponentModel.CancelEventHandler
- uid: System.Windows.Forms.Control.Visible
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Visible
  nameWithType: Control.Visible
  fullName: System.Windows.Forms.Control.Visible
- uid: System.Windows.Forms.Control.VisibleChanged
  parent: System.Windows.Forms.Control
  isExternal: false
  name: VisibleChanged
  nameWithType: Control.VisibleChanged
  fullName: System.Windows.Forms.Control.VisibleChanged
- uid: System.Windows.Forms.Control.Width
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Width
  nameWithType: Control.Width
  fullName: System.Windows.Forms.Control.Width
- uid: System.Windows.Forms.Control.WindowTarget
  parent: System.Windows.Forms.Control
  isExternal: false
  name: WindowTarget
  nameWithType: Control.WindowTarget
  fullName: System.Windows.Forms.Control.WindowTarget
- uid: System.Windows.Forms.IWindowTarget
  parent: System.Windows.Forms
  isExternal: false
  name: IWindowTarget
  nameWithType: IWindowTarget
  fullName: System.Windows.Forms.IWindowTarget
- uid: System.Windows.Forms.Control.WndProc(System.Windows.Forms.Message@)
  parent: System.Windows.Forms.Control
  isExternal: false
  name: WndProc(Message)
  nameWithType: Control.WndProc(Message)
  fullName: System.Windows.Forms.Control.WndProc(Message)
- uid: System.Windows.Forms.Control.#ctor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Control
  nameWithType: Control.Control
- uid: System.Windows.Forms.Control.AccessibilityNotifyClients*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibilityNotifyClients
  nameWithType: Control.AccessibilityNotifyClients
- uid: System.Windows.Forms.Control.AccessibilityObject*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibilityObject
  nameWithType: Control.AccessibilityObject
- uid: System.Windows.Forms.Control.AccessibleDefaultActionDescription*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleDefaultActionDescription
  nameWithType: Control.AccessibleDefaultActionDescription
- uid: System.Windows.Forms.Control.AccessibleDescription*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleDescription
  nameWithType: Control.AccessibleDescription
- uid: System.Windows.Forms.Control.AccessibleName*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleName
  nameWithType: Control.AccessibleName
- uid: System.Windows.Forms.Control.AccessibleRole*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AccessibleRole
  nameWithType: Control.AccessibleRole
- uid: System.Windows.Forms.Control.AllowDrop*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AllowDrop
  nameWithType: Control.AllowDrop
- uid: System.Windows.Forms.Control.Anchor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Anchor
  nameWithType: Control.Anchor
- uid: System.Windows.Forms.Control.AutoScrollOffset*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AutoScrollOffset
  nameWithType: Control.AutoScrollOffset
- uid: System.Windows.Forms.Control.AutoSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: AutoSize
  nameWithType: Control.AutoSize
- uid: System.Windows.Forms.Control.BackColor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackColor
  nameWithType: Control.BackColor
- uid: System.Windows.Forms.Control.BackgroundImage*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackgroundImage
  nameWithType: Control.BackgroundImage
- uid: System.Windows.Forms.Control.BackgroundImageLayout*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BackgroundImageLayout
  nameWithType: Control.BackgroundImageLayout
- uid: System.Windows.Forms.Control.BeginInvoke*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BeginInvoke
  nameWithType: Control.BeginInvoke
- uid: System.Windows.Forms.Control.BindingContext*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BindingContext
  nameWithType: Control.BindingContext
- uid: System.Windows.Forms.Control.Bottom*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Bottom
  nameWithType: Control.Bottom
- uid: System.Windows.Forms.Control.Bounds*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Bounds
  nameWithType: Control.Bounds
- uid: System.Windows.Forms.Control.BringToFront*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: BringToFront
  nameWithType: Control.BringToFront
- uid: System.Windows.Forms.Control.CanEnableIme*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanEnableIme
  nameWithType: Control.CanEnableIme
- uid: System.Windows.Forms.Control.CanFocus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanFocus
  nameWithType: Control.CanFocus
- uid: System.Windows.Forms.Control.CanRaiseEvents*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanRaiseEvents
  nameWithType: Control.CanRaiseEvents
- uid: System.Windows.Forms.Control.CanSelect*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CanSelect
  nameWithType: Control.CanSelect
- uid: System.Windows.Forms.Control.Capture*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Capture
  nameWithType: Control.Capture
- uid: System.Windows.Forms.Control.CausesValidation*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CausesValidation
  nameWithType: Control.CausesValidation
- uid: System.Windows.Forms.Control.CheckForIllegalCrossThreadCalls*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CheckForIllegalCrossThreadCalls
  nameWithType: Control.CheckForIllegalCrossThreadCalls
- uid: System.Windows.Forms.Control.ClientRectangle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ClientRectangle
  nameWithType: Control.ClientRectangle
- uid: System.Windows.Forms.Control.ClientSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ClientSize
  nameWithType: Control.ClientSize
- uid: System.Windows.Forms.Control.CompanyName*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CompanyName
  nameWithType: Control.CompanyName
- uid: System.Windows.Forms.Control.Contains*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Contains
  nameWithType: Control.Contains
- uid: System.Windows.Forms.Control.ContainsFocus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContainsFocus
  nameWithType: Control.ContainsFocus
- uid: System.Windows.Forms.Control.ContextMenu*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContextMenu
  nameWithType: Control.ContextMenu
- uid: System.Windows.Forms.Control.ContextMenuStrip*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ContextMenuStrip
  nameWithType: Control.ContextMenuStrip
- uid: System.Windows.Forms.Control.Controls*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Controls
  nameWithType: Control.Controls
- uid: System.Windows.Forms.Control.CreateAccessibilityInstance*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateAccessibilityInstance
  nameWithType: Control.CreateAccessibilityInstance
- uid: System.Windows.Forms.Control.CreateControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateControl
  nameWithType: Control.CreateControl
- uid: System.Windows.Forms.Control.CreateControlsInstance*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateControlsInstance
  nameWithType: Control.CreateControlsInstance
- uid: System.Windows.Forms.Control.Created*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Created
  nameWithType: Control.Created
- uid: System.Windows.Forms.Control.CreateGraphics*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateGraphics
  nameWithType: Control.CreateGraphics
- uid: System.Windows.Forms.Control.CreateHandle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateHandle
  nameWithType: Control.CreateHandle
- uid: System.Windows.Forms.Control.CreateParams*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: CreateParams
  nameWithType: Control.CreateParams
- uid: System.Windows.Forms.Control.Cursor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Cursor
  nameWithType: Control.Cursor
- uid: System.Windows.Forms.Control.DataBindings*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DataBindings
  nameWithType: Control.DataBindings
- uid: System.Windows.Forms.Control.DefaultBackColor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultBackColor
  nameWithType: Control.DefaultBackColor
- uid: System.Windows.Forms.Control.DefaultCursor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultCursor
  nameWithType: Control.DefaultCursor
- uid: System.Windows.Forms.Control.DefaultFont*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultFont
  nameWithType: Control.DefaultFont
- uid: System.Windows.Forms.Control.DefaultForeColor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultForeColor
  nameWithType: Control.DefaultForeColor
- uid: System.Windows.Forms.Control.DefaultImeMode*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultImeMode
  nameWithType: Control.DefaultImeMode
- uid: System.Windows.Forms.Control.DefaultMargin*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultMargin
  nameWithType: Control.DefaultMargin
- uid: System.Windows.Forms.Control.DefaultMaximumSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultMaximumSize
  nameWithType: Control.DefaultMaximumSize
- uid: System.Windows.Forms.Control.DefaultMinimumSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultMinimumSize
  nameWithType: Control.DefaultMinimumSize
- uid: System.Windows.Forms.Control.DefaultPadding*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultPadding
  nameWithType: Control.DefaultPadding
- uid: System.Windows.Forms.Control.DefaultSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefaultSize
  nameWithType: Control.DefaultSize
- uid: System.Windows.Forms.Control.DefWndProc*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DefWndProc
  nameWithType: Control.DefWndProc
- uid: System.Windows.Forms.Control.DestroyHandle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DestroyHandle
  nameWithType: Control.DestroyHandle
- uid: System.Windows.Forms.Control.DisplayRectangle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DisplayRectangle
  nameWithType: Control.DisplayRectangle
- uid: System.Windows.Forms.Control.Dispose*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Dispose
  nameWithType: Control.Dispose
- uid: System.Windows.Forms.Control.Disposing*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Disposing
  nameWithType: Control.Disposing
- uid: System.Windows.Forms.Control.Dock*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Dock
  nameWithType: Control.Dock
- uid: System.Windows.Forms.Control.DoDragDrop*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DoDragDrop
  nameWithType: Control.DoDragDrop
- uid: System.Windows.Forms.Control.DoubleBuffered*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DoubleBuffered
  nameWithType: Control.DoubleBuffered
- uid: System.Windows.Forms.Control.DrawToBitmap*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: DrawToBitmap
  nameWithType: Control.DrawToBitmap
- uid: System.Windows.Forms.Control.Enabled*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Enabled
  nameWithType: Control.Enabled
- uid: System.Windows.Forms.Control.EndInvoke*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: EndInvoke
  nameWithType: Control.EndInvoke
- uid: System.Windows.Forms.Control.FindForm*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FindForm
  nameWithType: Control.FindForm
- uid: System.Windows.Forms.Control.Focus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Focus
  nameWithType: Control.Focus
- uid: System.Windows.Forms.Control.Focused*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Focused
  nameWithType: Control.Focused
- uid: System.Windows.Forms.Control.Font*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Font
  nameWithType: Control.Font
- uid: System.Windows.Forms.Control.FontHeight*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FontHeight
  nameWithType: Control.FontHeight
- uid: System.Windows.Forms.Control.ForeColor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ForeColor
  nameWithType: Control.ForeColor
- uid: System.Windows.Forms.Control.FromChildHandle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FromChildHandle
  nameWithType: Control.FromChildHandle
- uid: System.Windows.Forms.Control.FromHandle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: FromHandle
  nameWithType: Control.FromHandle
- uid: System.Windows.Forms.Control.GetAccessibilityObjectById*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetAccessibilityObjectById
  nameWithType: Control.GetAccessibilityObjectById
- uid: System.Windows.Forms.Control.GetAutoSizeMode*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetAutoSizeMode
  nameWithType: Control.GetAutoSizeMode
- uid: System.Windows.Forms.Control.GetChildAtPoint*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetChildAtPoint
  nameWithType: Control.GetChildAtPoint
- uid: System.Windows.Forms.Control.GetContainerControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetContainerControl
  nameWithType: Control.GetContainerControl
- uid: System.Windows.Forms.Control.GetNextControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetNextControl
  nameWithType: Control.GetNextControl
- uid: System.Windows.Forms.Control.GetPreferredSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetPreferredSize
  nameWithType: Control.GetPreferredSize
- uid: System.Windows.Forms.Control.GetScaledBounds*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetScaledBounds
  nameWithType: Control.GetScaledBounds
- uid: System.Windows.Forms.Control.GetStyle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetStyle
  nameWithType: Control.GetStyle
- uid: System.Windows.Forms.Control.GetTopLevel*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: GetTopLevel
  nameWithType: Control.GetTopLevel
- uid: System.Windows.Forms.Control.Handle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Handle
  nameWithType: Control.Handle
- uid: System.Windows.Forms.Control.HasChildren*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: HasChildren
  nameWithType: Control.HasChildren
- uid: System.Windows.Forms.Control.Height*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Height
  nameWithType: Control.Height
- uid: System.Windows.Forms.Control.Hide*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Hide
  nameWithType: Control.Hide
- uid: System.Windows.Forms.Control.ImeMode*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ImeMode
  nameWithType: Control.ImeMode
- uid: System.Windows.Forms.Control.ImeModeBase*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ImeModeBase
  nameWithType: Control.ImeModeBase
- uid: System.Windows.Forms.Control.InitLayout*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InitLayout
  nameWithType: Control.InitLayout
- uid: System.Windows.Forms.Control.Invalidate*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invalidate
  nameWithType: Control.Invalidate
- uid: System.Windows.Forms.Control.Invoke*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Invoke
  nameWithType: Control.Invoke
- uid: System.Windows.Forms.Control.InvokeGotFocus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeGotFocus
  nameWithType: Control.InvokeGotFocus
- uid: System.Windows.Forms.Control.InvokeLostFocus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeLostFocus
  nameWithType: Control.InvokeLostFocus
- uid: System.Windows.Forms.Control.InvokeOnClick*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeOnClick
  nameWithType: Control.InvokeOnClick
- uid: System.Windows.Forms.Control.InvokePaint*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokePaint
  nameWithType: Control.InvokePaint
- uid: System.Windows.Forms.Control.InvokePaintBackground*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokePaintBackground
  nameWithType: Control.InvokePaintBackground
- uid: System.Windows.Forms.Control.InvokeRequired*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: InvokeRequired
  nameWithType: Control.InvokeRequired
- uid: System.Windows.Forms.Control.IsAccessible*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsAccessible
  nameWithType: Control.IsAccessible
- uid: System.Windows.Forms.Control.IsDisposed*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsDisposed
  nameWithType: Control.IsDisposed
- uid: System.Windows.Forms.Control.IsHandleCreated*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsHandleCreated
  nameWithType: Control.IsHandleCreated
- uid: System.Windows.Forms.Control.IsInputChar*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsInputChar
  nameWithType: Control.IsInputChar
- uid: System.Windows.Forms.Control.IsInputKey*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsInputKey
  nameWithType: Control.IsInputKey
- uid: System.Windows.Forms.Control.IsKeyLocked*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsKeyLocked
  nameWithType: Control.IsKeyLocked
- uid: System.Windows.Forms.Control.IsMirrored*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsMirrored
  nameWithType: Control.IsMirrored
- uid: System.Windows.Forms.Control.IsMnemonic*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: IsMnemonic
  nameWithType: Control.IsMnemonic
- uid: System.Windows.Forms.Control.LayoutEngine*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: LayoutEngine
  nameWithType: Control.LayoutEngine
- uid: System.Windows.Forms.Control.Left*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Left
  nameWithType: Control.Left
- uid: System.Windows.Forms.Control.Location*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Location
  nameWithType: Control.Location
- uid: System.Windows.Forms.Control.Margin*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Margin
  nameWithType: Control.Margin
- uid: System.Windows.Forms.Control.MaximumSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MaximumSize
  nameWithType: Control.MaximumSize
- uid: System.Windows.Forms.Control.MinimumSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MinimumSize
  nameWithType: Control.MinimumSize
- uid: System.Windows.Forms.Control.ModifierKeys*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ModifierKeys
  nameWithType: Control.ModifierKeys
- uid: System.Windows.Forms.Control.MouseButtons*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MouseButtons
  nameWithType: Control.MouseButtons
- uid: System.Windows.Forms.Control.MousePosition*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: MousePosition
  nameWithType: Control.MousePosition
- uid: System.Windows.Forms.Control.Name*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Name
  nameWithType: Control.Name
- uid: System.Windows.Forms.Control.NotifyInvalidate*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: NotifyInvalidate
  nameWithType: Control.NotifyInvalidate
- uid: System.Windows.Forms.Control.OnAutoSizeChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnAutoSizeChanged
  nameWithType: Control.OnAutoSizeChanged
- uid: System.Windows.Forms.Control.OnBackColorChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBackColorChanged
  nameWithType: Control.OnBackColorChanged
- uid: System.Windows.Forms.Control.OnBackgroundImageChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBackgroundImageChanged
  nameWithType: Control.OnBackgroundImageChanged
- uid: System.Windows.Forms.Control.OnBackgroundImageLayoutChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBackgroundImageLayoutChanged
  nameWithType: Control.OnBackgroundImageLayoutChanged
- uid: System.Windows.Forms.Control.OnBindingContextChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnBindingContextChanged
  nameWithType: Control.OnBindingContextChanged
- uid: System.Windows.Forms.Control.OnCausesValidationChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnCausesValidationChanged
  nameWithType: Control.OnCausesValidationChanged
- uid: System.Windows.Forms.Control.OnChangeUICues*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnChangeUICues
  nameWithType: Control.OnChangeUICues
- uid: System.Windows.Forms.Control.OnClick*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnClick
  nameWithType: Control.OnClick
- uid: System.Windows.Forms.Control.OnClientSizeChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnClientSizeChanged
  nameWithType: Control.OnClientSizeChanged
- uid: System.Windows.Forms.Control.OnContextMenuChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnContextMenuChanged
  nameWithType: Control.OnContextMenuChanged
- uid: System.Windows.Forms.Control.OnContextMenuStripChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnContextMenuStripChanged
  nameWithType: Control.OnContextMenuStripChanged
- uid: System.Windows.Forms.Control.OnControlAdded*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnControlAdded
  nameWithType: Control.OnControlAdded
- uid: System.Windows.Forms.Control.OnControlRemoved*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnControlRemoved
  nameWithType: Control.OnControlRemoved
- uid: System.Windows.Forms.Control.OnCreateControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnCreateControl
  nameWithType: Control.OnCreateControl
- uid: System.Windows.Forms.Control.OnCursorChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnCursorChanged
  nameWithType: Control.OnCursorChanged
- uid: System.Windows.Forms.Control.OnDockChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDockChanged
  nameWithType: Control.OnDockChanged
- uid: System.Windows.Forms.Control.OnDoubleClick*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDoubleClick
  nameWithType: Control.OnDoubleClick
- uid: System.Windows.Forms.Control.OnDragDrop*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragDrop
  nameWithType: Control.OnDragDrop
- uid: System.Windows.Forms.Control.OnDragEnter*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragEnter
  nameWithType: Control.OnDragEnter
- uid: System.Windows.Forms.Control.OnDragLeave*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragLeave
  nameWithType: Control.OnDragLeave
- uid: System.Windows.Forms.Control.OnDragOver*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnDragOver
  nameWithType: Control.OnDragOver
- uid: System.Windows.Forms.Control.OnEnabledChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnEnabledChanged
  nameWithType: Control.OnEnabledChanged
- uid: System.Windows.Forms.Control.OnEnter*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnEnter
  nameWithType: Control.OnEnter
- uid: System.Windows.Forms.Control.OnFontChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnFontChanged
  nameWithType: Control.OnFontChanged
- uid: System.Windows.Forms.Control.OnForeColorChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnForeColorChanged
  nameWithType: Control.OnForeColorChanged
- uid: System.Windows.Forms.Control.OnGiveFeedback*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnGiveFeedback
  nameWithType: Control.OnGiveFeedback
- uid: System.Windows.Forms.Control.OnGotFocus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnGotFocus
  nameWithType: Control.OnGotFocus
- uid: System.Windows.Forms.Control.OnHandleCreated*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnHandleCreated
  nameWithType: Control.OnHandleCreated
- uid: System.Windows.Forms.Control.OnHandleDestroyed*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnHandleDestroyed
  nameWithType: Control.OnHandleDestroyed
- uid: System.Windows.Forms.Control.OnHelpRequested*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnHelpRequested
  nameWithType: Control.OnHelpRequested
- uid: System.Windows.Forms.Control.OnImeModeChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnImeModeChanged
  nameWithType: Control.OnImeModeChanged
- uid: System.Windows.Forms.Control.OnInvalidated*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnInvalidated
  nameWithType: Control.OnInvalidated
- uid: System.Windows.Forms.Control.OnKeyDown*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnKeyDown
  nameWithType: Control.OnKeyDown
- uid: System.Windows.Forms.Control.OnKeyPress*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnKeyPress
  nameWithType: Control.OnKeyPress
- uid: System.Windows.Forms.Control.OnKeyUp*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnKeyUp
  nameWithType: Control.OnKeyUp
- uid: System.Windows.Forms.Control.OnLayout*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLayout
  nameWithType: Control.OnLayout
- uid: System.Windows.Forms.Control.OnLeave*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLeave
  nameWithType: Control.OnLeave
- uid: System.Windows.Forms.Control.OnLocationChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLocationChanged
  nameWithType: Control.OnLocationChanged
- uid: System.Windows.Forms.Control.OnLostFocus*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnLostFocus
  nameWithType: Control.OnLostFocus
- uid: System.Windows.Forms.Control.OnMarginChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMarginChanged
  nameWithType: Control.OnMarginChanged
- uid: System.Windows.Forms.Control.OnMouseCaptureChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseCaptureChanged
  nameWithType: Control.OnMouseCaptureChanged
- uid: System.Windows.Forms.Control.OnMouseClick*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseClick
  nameWithType: Control.OnMouseClick
- uid: System.Windows.Forms.Control.OnMouseDoubleClick*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseDoubleClick
  nameWithType: Control.OnMouseDoubleClick
- uid: System.Windows.Forms.Control.OnMouseDown*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseDown
  nameWithType: Control.OnMouseDown
- uid: System.Windows.Forms.Control.OnMouseEnter*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseEnter
  nameWithType: Control.OnMouseEnter
- uid: System.Windows.Forms.Control.OnMouseHover*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseHover
  nameWithType: Control.OnMouseHover
- uid: System.Windows.Forms.Control.OnMouseLeave*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseLeave
  nameWithType: Control.OnMouseLeave
- uid: System.Windows.Forms.Control.OnMouseMove*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseMove
  nameWithType: Control.OnMouseMove
- uid: System.Windows.Forms.Control.OnMouseUp*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseUp
  nameWithType: Control.OnMouseUp
- uid: System.Windows.Forms.Control.OnMouseWheel*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMouseWheel
  nameWithType: Control.OnMouseWheel
- uid: System.Windows.Forms.Control.OnMove*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnMove
  nameWithType: Control.OnMove
- uid: System.Windows.Forms.Control.OnNotifyMessage*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnNotifyMessage
  nameWithType: Control.OnNotifyMessage
- uid: System.Windows.Forms.Control.OnPaddingChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPaddingChanged
  nameWithType: Control.OnPaddingChanged
- uid: System.Windows.Forms.Control.OnPaint*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPaint
  nameWithType: Control.OnPaint
- uid: System.Windows.Forms.Control.OnPaintBackground*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPaintBackground
  nameWithType: Control.OnPaintBackground
- uid: System.Windows.Forms.Control.OnParentBackColorChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentBackColorChanged
  nameWithType: Control.OnParentBackColorChanged
- uid: System.Windows.Forms.Control.OnParentBackgroundImageChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentBackgroundImageChanged
  nameWithType: Control.OnParentBackgroundImageChanged
- uid: System.Windows.Forms.Control.OnParentBindingContextChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentBindingContextChanged
  nameWithType: Control.OnParentBindingContextChanged
- uid: System.Windows.Forms.Control.OnParentChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentChanged
  nameWithType: Control.OnParentChanged
- uid: System.Windows.Forms.Control.OnParentCursorChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentCursorChanged
  nameWithType: Control.OnParentCursorChanged
- uid: System.Windows.Forms.Control.OnParentEnabledChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentEnabledChanged
  nameWithType: Control.OnParentEnabledChanged
- uid: System.Windows.Forms.Control.OnParentFontChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentFontChanged
  nameWithType: Control.OnParentFontChanged
- uid: System.Windows.Forms.Control.OnParentForeColorChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentForeColorChanged
  nameWithType: Control.OnParentForeColorChanged
- uid: System.Windows.Forms.Control.OnParentRightToLeftChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentRightToLeftChanged
  nameWithType: Control.OnParentRightToLeftChanged
- uid: System.Windows.Forms.Control.OnParentVisibleChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnParentVisibleChanged
  nameWithType: Control.OnParentVisibleChanged
- uid: System.Windows.Forms.Control.OnPreviewKeyDown*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPreviewKeyDown
  nameWithType: Control.OnPreviewKeyDown
- uid: System.Windows.Forms.Control.OnPrint*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnPrint
  nameWithType: Control.OnPrint
- uid: System.Windows.Forms.Control.OnQueryContinueDrag*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnQueryContinueDrag
  nameWithType: Control.OnQueryContinueDrag
- uid: System.Windows.Forms.Control.OnRegionChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnRegionChanged
  nameWithType: Control.OnRegionChanged
- uid: System.Windows.Forms.Control.OnResize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnResize
  nameWithType: Control.OnResize
- uid: System.Windows.Forms.Control.OnRightToLeftChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnRightToLeftChanged
  nameWithType: Control.OnRightToLeftChanged
- uid: System.Windows.Forms.Control.OnSizeChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnSizeChanged
  nameWithType: Control.OnSizeChanged
- uid: System.Windows.Forms.Control.OnStyleChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnStyleChanged
  nameWithType: Control.OnStyleChanged
- uid: System.Windows.Forms.Control.OnSystemColorsChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnSystemColorsChanged
  nameWithType: Control.OnSystemColorsChanged
- uid: System.Windows.Forms.Control.OnTabIndexChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnTabIndexChanged
  nameWithType: Control.OnTabIndexChanged
- uid: System.Windows.Forms.Control.OnTabStopChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnTabStopChanged
  nameWithType: Control.OnTabStopChanged
- uid: System.Windows.Forms.Control.OnTextChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnTextChanged
  nameWithType: Control.OnTextChanged
- uid: System.Windows.Forms.Control.OnValidated*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnValidated
  nameWithType: Control.OnValidated
- uid: System.Windows.Forms.Control.OnValidating*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnValidating
  nameWithType: Control.OnValidating
- uid: System.Windows.Forms.Control.OnVisibleChanged*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: OnVisibleChanged
  nameWithType: Control.OnVisibleChanged
- uid: System.Windows.Forms.Control.Padding*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Padding
  nameWithType: Control.Padding
- uid: System.Windows.Forms.Control.Parent*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Parent
  nameWithType: Control.Parent
- uid: System.Windows.Forms.Control.PerformLayout*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PerformLayout
  nameWithType: Control.PerformLayout
- uid: System.Windows.Forms.Control.PointToClient*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PointToClient
  nameWithType: Control.PointToClient
- uid: System.Windows.Forms.Control.PointToScreen*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PointToScreen
  nameWithType: Control.PointToScreen
- uid: System.Windows.Forms.Control.PreferredSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreferredSize
  nameWithType: Control.PreferredSize
- uid: System.Windows.Forms.Control.PreProcessControlMessage*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreProcessControlMessage
  nameWithType: Control.PreProcessControlMessage
- uid: System.Windows.Forms.Control.PreProcessMessage*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PreProcessMessage
  nameWithType: Control.PreProcessMessage
- uid: System.Windows.Forms.Control.ProcessCmdKey*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessCmdKey
  nameWithType: Control.ProcessCmdKey
- uid: System.Windows.Forms.Control.ProcessDialogChar*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessDialogChar
  nameWithType: Control.ProcessDialogChar
- uid: System.Windows.Forms.Control.ProcessDialogKey*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessDialogKey
  nameWithType: Control.ProcessDialogKey
- uid: System.Windows.Forms.Control.ProcessKeyEventArgs*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessKeyEventArgs
  nameWithType: Control.ProcessKeyEventArgs
- uid: System.Windows.Forms.Control.ProcessKeyMessage*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessKeyMessage
  nameWithType: Control.ProcessKeyMessage
- uid: System.Windows.Forms.Control.ProcessKeyPreview*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessKeyPreview
  nameWithType: Control.ProcessKeyPreview
- uid: System.Windows.Forms.Control.ProcessMnemonic*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProcessMnemonic
  nameWithType: Control.ProcessMnemonic
- uid: System.Windows.Forms.Control.ProductName*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProductName
  nameWithType: Control.ProductName
- uid: System.Windows.Forms.Control.ProductVersion*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ProductVersion
  nameWithType: Control.ProductVersion
- uid: System.Windows.Forms.Control.PropagatingImeMode*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: PropagatingImeMode
  nameWithType: Control.PropagatingImeMode
- uid: System.Windows.Forms.Control.RaiseDragEvent*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaiseDragEvent
  nameWithType: Control.RaiseDragEvent
- uid: System.Windows.Forms.Control.RaiseKeyEvent*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaiseKeyEvent
  nameWithType: Control.RaiseKeyEvent
- uid: System.Windows.Forms.Control.RaiseMouseEvent*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaiseMouseEvent
  nameWithType: Control.RaiseMouseEvent
- uid: System.Windows.Forms.Control.RaisePaintEvent*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RaisePaintEvent
  nameWithType: Control.RaisePaintEvent
- uid: System.Windows.Forms.Control.RecreateHandle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RecreateHandle
  nameWithType: Control.RecreateHandle
- uid: System.Windows.Forms.Control.RecreatingHandle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RecreatingHandle
  nameWithType: Control.RecreatingHandle
- uid: System.Windows.Forms.Control.RectangleToClient*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RectangleToClient
  nameWithType: Control.RectangleToClient
- uid: System.Windows.Forms.Control.RectangleToScreen*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RectangleToScreen
  nameWithType: Control.RectangleToScreen
- uid: System.Windows.Forms.Control.ReflectMessage*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ReflectMessage
  nameWithType: Control.ReflectMessage
- uid: System.Windows.Forms.Control.Refresh*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Refresh
  nameWithType: Control.Refresh
- uid: System.Windows.Forms.Control.Region*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Region
  nameWithType: Control.Region
- uid: System.Windows.Forms.Control.RenderRightToLeft*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RenderRightToLeft
  nameWithType: Control.RenderRightToLeft
- uid: System.Windows.Forms.Control.ResetBackColor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetBackColor
  nameWithType: Control.ResetBackColor
- uid: System.Windows.Forms.Control.ResetBindings*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetBindings
  nameWithType: Control.ResetBindings
- uid: System.Windows.Forms.Control.ResetCursor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetCursor
  nameWithType: Control.ResetCursor
- uid: System.Windows.Forms.Control.ResetFont*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetFont
  nameWithType: Control.ResetFont
- uid: System.Windows.Forms.Control.ResetForeColor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetForeColor
  nameWithType: Control.ResetForeColor
- uid: System.Windows.Forms.Control.ResetImeMode*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetImeMode
  nameWithType: Control.ResetImeMode
- uid: System.Windows.Forms.Control.ResetMouseEventArgs*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetMouseEventArgs
  nameWithType: Control.ResetMouseEventArgs
- uid: System.Windows.Forms.Control.ResetRightToLeft*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetRightToLeft
  nameWithType: Control.ResetRightToLeft
- uid: System.Windows.Forms.Control.ResetText*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResetText
  nameWithType: Control.ResetText
- uid: System.Windows.Forms.Control.ResizeRedraw*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResizeRedraw
  nameWithType: Control.ResizeRedraw
- uid: System.Windows.Forms.Control.ResumeLayout*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ResumeLayout
  nameWithType: Control.ResumeLayout
- uid: System.Windows.Forms.Control.Right*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Right
  nameWithType: Control.Right
- uid: System.Windows.Forms.Control.RightToLeft*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RightToLeft
  nameWithType: Control.RightToLeft
- uid: System.Windows.Forms.Control.RtlTranslateAlignment*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateAlignment
  nameWithType: Control.RtlTranslateAlignment
- uid: System.Windows.Forms.Control.RtlTranslateContent*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateContent
  nameWithType: Control.RtlTranslateContent
- uid: System.Windows.Forms.Control.RtlTranslateHorizontal*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateHorizontal
  nameWithType: Control.RtlTranslateHorizontal
- uid: System.Windows.Forms.Control.RtlTranslateLeftRight*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: RtlTranslateLeftRight
  nameWithType: Control.RtlTranslateLeftRight
- uid: System.Windows.Forms.Control.Scale*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Scale
  nameWithType: Control.Scale
- uid: System.Windows.Forms.Control.ScaleChildren*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ScaleChildren
  nameWithType: Control.ScaleChildren
- uid: System.Windows.Forms.Control.ScaleControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ScaleControl
  nameWithType: Control.ScaleControl
- uid: System.Windows.Forms.Control.ScaleCore*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ScaleCore
  nameWithType: Control.ScaleCore
- uid: System.Windows.Forms.Control.Select*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Select
  nameWithType: Control.Select
- uid: System.Windows.Forms.Control.SelectNextControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SelectNextControl
  nameWithType: Control.SelectNextControl
- uid: System.Windows.Forms.Control.SendToBack*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SendToBack
  nameWithType: Control.SendToBack
- uid: System.Windows.Forms.Control.SetAutoSizeMode*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetAutoSizeMode
  nameWithType: Control.SetAutoSizeMode
- uid: System.Windows.Forms.Control.SetBounds*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetBounds
  nameWithType: Control.SetBounds
- uid: System.Windows.Forms.Control.SetBoundsCore*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetBoundsCore
  nameWithType: Control.SetBoundsCore
- uid: System.Windows.Forms.Control.SetClientSizeCore*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetClientSizeCore
  nameWithType: Control.SetClientSizeCore
- uid: System.Windows.Forms.Control.SetStyle*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetStyle
  nameWithType: Control.SetStyle
- uid: System.Windows.Forms.Control.SetTopLevel*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetTopLevel
  nameWithType: Control.SetTopLevel
- uid: System.Windows.Forms.Control.SetVisibleCore*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SetVisibleCore
  nameWithType: Control.SetVisibleCore
- uid: System.Windows.Forms.Control.Show*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Show
  nameWithType: Control.Show
- uid: System.Windows.Forms.Control.ShowFocusCues*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ShowFocusCues
  nameWithType: Control.ShowFocusCues
- uid: System.Windows.Forms.Control.ShowKeyboardCues*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: ShowKeyboardCues
  nameWithType: Control.ShowKeyboardCues
- uid: System.Windows.Forms.Control.Site*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Site
  nameWithType: Control.Site
- uid: System.Windows.Forms.Control.Size*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Size
  nameWithType: Control.Size
- uid: System.Windows.Forms.Control.SizeFromClientSize*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SizeFromClientSize
  nameWithType: Control.SizeFromClientSize
- uid: System.Windows.Forms.Control.SuspendLayout*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: SuspendLayout
  nameWithType: Control.SuspendLayout
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragDrop*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragDrop
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragDrop
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragEnter*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragEnter
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragEnter
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragLeave*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragLeave
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragLeave
- uid: System.Windows.Forms.Control.System#Windows#Forms#IDropTarget#OnDragOver*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: System.Windows.Forms.IDropTarget.OnDragOver
  nameWithType: Control.System.Windows.Forms.IDropTarget.OnDragOver
- uid: System.Windows.Forms.Control.TabIndex*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TabIndex
  nameWithType: Control.TabIndex
- uid: System.Windows.Forms.Control.TabStop*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TabStop
  nameWithType: Control.TabStop
- uid: System.Windows.Forms.Control.Tag*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Tag
  nameWithType: Control.Tag
- uid: System.Windows.Forms.Control.Text*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Text
  nameWithType: Control.Text
- uid: System.Windows.Forms.Control.Top*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Top
  nameWithType: Control.Top
- uid: System.Windows.Forms.Control.TopLevelControl*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: TopLevelControl
  nameWithType: Control.TopLevelControl
- uid: System.Windows.Forms.Control.Update*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Update
  nameWithType: Control.Update
- uid: System.Windows.Forms.Control.UpdateBounds*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateBounds
  nameWithType: Control.UpdateBounds
- uid: System.Windows.Forms.Control.UpdateStyles*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateStyles
  nameWithType: Control.UpdateStyles
- uid: System.Windows.Forms.Control.UpdateZOrder*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UpdateZOrder
  nameWithType: Control.UpdateZOrder
- uid: System.Windows.Forms.Control.UseWaitCursor*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: UseWaitCursor
  nameWithType: Control.UseWaitCursor
- uid: System.Windows.Forms.Control.Visible*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Visible
  nameWithType: Control.Visible
- uid: System.Windows.Forms.Control.Width*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: Width
  nameWithType: Control.Width
- uid: System.Windows.Forms.Control.WindowTarget*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: WindowTarget
  nameWithType: Control.WindowTarget
- uid: System.Windows.Forms.Control.WndProc*
  parent: System.Windows.Forms.Control
  isExternal: false
  name: WndProc
  nameWithType: Control.WndProc
