### YamlMime:ManagedReference
items:
- uid: System.Web.IHttpAsyncHandler
  id: IHttpAsyncHandler
  children:
  - System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  - System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)
  langs:
  - csharp
  name: IHttpAsyncHandler
  nameWithType: IHttpAsyncHandler
  fullName: System.Web.IHttpAsyncHandler
  type: Interface
  summary: "Define o contrato que objetos de manipulador assíncrono HTTP devem implementar."
  remarks: "Uma classe IHttpAsyncHandler pode ser associada com uma extensão de nome de arquivo ou uma URL em particular por um arquivo de configuração no `httpHandlers` seção de configuração. A infra-estrutura do ASP.NET será, em seguida, criar uma instância e chama o manipulador quando a solicitação correspondente é recebida. Como alternativa, o manipulador pode ser definido em um arquivo. ashx e quando a solicitação correspondente é recebida para o arquivo. ashx que o manipulador será executado."
  syntax:
    content: 'public interface IHttpAsyncHandler : System.Web.IHttpHandler'
  implements:
  - System.Web.IHttpHandler
  platform:
  - net462
- uid: System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  id: BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.IHttpAsyncHandler
  langs:
  - csharp
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Inicia uma chamada assíncrona para o manipulador HTTP."
  syntax:
    content: public IAsyncResult BeginProcessRequest (System.Web.HttpContext context, AsyncCallback cb, object extraData);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "Um <xref href=&quot;System.Web.HttpContext&quot;> </xref> objeto que fornece referências a objetos do servidor intrínsecos (por exemplo, <xref uid=&quot;langword_csharp_Request&quot; name=&quot;Request&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Response&quot; name=&quot;Response&quot; href=&quot;&quot;> </xref>, <xref uid=&quot;langword_csharp_Session&quot; name=&quot;Session&quot; href=&quot;&quot;> </xref>, e <xref uid=&quot;langword_csharp_Server&quot; name=&quot;Server&quot; href=&quot;&quot;> </xref>) usado para atender solicitações HTTP."
    - id: cb
      type: System.AsyncCallback
      description: "O <xref:System.AsyncCallback>para chamar quando a chamada de método assíncrono é concluída.</xref:System.AsyncCallback> Se `cb` é <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>, o delegado não é chamado."
    - id: extraData
      type: System.Object
      description: "Qualquer dado extra necessário para processar a solicitação."
    return:
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que contém informações sobre o status do processo.</xref:System.IAsyncResult>"
  overload: System.Web.IHttpAsyncHandler.BeginProcessRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)
  id: EndProcessRequest(System.IAsyncResult)
  parent: System.Web.IHttpAsyncHandler
  langs:
  - csharp
  name: EndProcessRequest(IAsyncResult)
  nameWithType: IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web
  summary: "Fornece um método de final do processo assíncrono quando o processo termina."
  remarks: "Você pode usar EndProcessRequest para gerar qualquer exceção capturada durante o processo assíncrono."
  syntax:
    content: public void EndProcessRequest (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "Um <xref:System.IAsyncResult>que contém informações sobre o status do processo.</xref:System.IAsyncResult>"
  overload: System.Web.IHttpAsyncHandler.EndProcessRequest*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Web.IHttpAsyncHandler.BeginProcessRequest(System.Web.HttpContext,System.AsyncCallback,System.Object)
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: BeginProcessRequest(HttpContext,AsyncCallback,Object)
  nameWithType: IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
  fullName: System.Web.IHttpAsyncHandler.BeginProcessRequest(HttpContext,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.IHttpAsyncHandler.EndProcessRequest(System.IAsyncResult)
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: EndProcessRequest(IAsyncResult)
  nameWithType: IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
  fullName: System.Web.IHttpAsyncHandler.EndProcessRequest(IAsyncResult)
- uid: System.Web.IHttpAsyncHandler.BeginProcessRequest*
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: BeginProcessRequest
  nameWithType: IHttpAsyncHandler.BeginProcessRequest
- uid: System.Web.IHttpAsyncHandler.EndProcessRequest*
  parent: System.Web.IHttpAsyncHandler
  isExternal: false
  name: EndProcessRequest
  nameWithType: IHttpAsyncHandler.EndProcessRequest
