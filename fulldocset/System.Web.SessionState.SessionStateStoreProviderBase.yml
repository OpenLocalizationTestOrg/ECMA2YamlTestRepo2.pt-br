### YamlMime:ManagedReference
items:
- uid: System.Web.SessionState.SessionStateStoreProviderBase
  id: SessionStateStoreProviderBase
  children:
  - System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  - System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  - System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  - System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  - System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  - System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  - System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  - System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  langs:
  - csharp
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase
  fullName: System.Web.SessionState.SessionStateStoreProviderBase
  type: Class
  summary: "Define os membros necessários de um provedor de estado de sessão para um repositório de dados."
  remarks: "Estado da sessão ASP.NET lê e grava o provedor de repositório de dados da sessão de e para um repositório de dados usando um estado de sessão. Um provedor de armazenamento de estado de sessão é uma classe que herda da classe abstrata SessionStateStoreProviderBase e substitui seus membros com implementações específicas para o repositório de dados. O provedor de armazenamento de estado de sessão é chamado pelo <xref:System.Web.SessionState.SessionStateModule>classe durante o processamento de uma página ASP.NET para se comunicar com o repositório de dados para o armazenamento e recuperação de variáveis de sessão e informações de sessão relacionado como o valor de tempo limite.</xref:System.Web.SessionState.SessionStateModule>       Dados de sessão em cada aplicativo do ASP.NET são armazenados separadamente para cada <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>propriedade.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Aplicativos ASP.NET não compartilham dados da sessão.       Você pode especificar uma implementação personalizada de SessionStateStoreProviderBase para um aplicativo ASP.NET, definindo o `mode` atributo do `sessionState` elemento de configuração para <xref:System.Web.SessionState.SessionStateMode>e o `customProvider` de atributo para o nome do provedor personalizado, como mostrado no exemplo deste tópico.</xref:System.Web.SessionState.SessionStateMode>      ## Bloqueando aplicativos sessão repositório dados porque ASP.NET são multithread para dar suporte ao responder a solicitações simultâneas, é possível que solicitações simultâneas podem tentar acessar as mesmas informações de sessão. Considere um cenário onde vários quadros em um conjunto de todos os quadros acessem o mesmo aplicativo. As solicitações separadas para cada quadro no conjunto de quadros podem ser executadas no servidor Web simultaneamente em threads diferentes. Se as páginas ASP.NET para cada fonte de quadro acessam variáveis de estado de sessão, você pode ter vários threads acessando o armazenamento de sessão simultaneamente.       Para evitar colisões de dados no armazenamento de sessão e comportamento inesperado de estado de sessão, o <xref:System.Web.SessionState.SessionStateModule>e classes SessionStateStoreProviderBase incluem a funcionalidade de bloqueio que exclusivamente bloqueia o item de armazenamento de sessão para uma determinada sessão durante a execução de uma página ASP.NET.</xref:System.Web.SessionState.SessionStateModule> Observe que mesmo se o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atributo está marcado como `ReadOnly`, outras páginas ASP.NET no mesmo aplicativo podem ser capazes de gravar para o armazenamento de sessão para uma solicitação de sessão somente de leitura dados do repositório ainda podem acabar aguardando dados bloqueados ser liberados.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       Um bloqueio é definido em dados de armazenamento de sessão no início da solicitação, na chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>método.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> Quando a solicitação for concluída, o bloqueio será liberado durante a chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>método.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>       Se o <xref:System.Web.SessionState.SessionStateModule>objeto encontrar dados de sessão bloqueados durante a chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>ou o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>método, ele solicitará novamente os dados da sessão em intervalos de meio segundo até que o bloqueio seja liberado ou o período de tempo que os dados da sessão foi bloqueados excede o valor da <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>propriedade.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> Se o tempo limite de execução for excedido, o <xref:System.Web.SessionState.SessionStateModule>objeto chamará o <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>método para liberar os dados de armazenamento de sessão e solicitar os dados de armazenamento de sessão no momento.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       Porque o armazenamento de sessão bloqueados dados podem ter sido liberados por uma chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>método em um thread separado antes da chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>método para a resposta atual, é foi feita uma tentativa de definir e liberar os dados de armazenamento de estado de sessão que já foram liberados e modificados por outra sessão.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> Para evitar essa situação, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>e <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>métodos retornam um identificador de bloqueio.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> Esse identificador de bloqueio deve ser incluído com cada solicitação para modificar os dados de armazenamento de sessão bloqueados. Armazenamento de dados é modificada somente se o identificador de bloqueio no repositório de dados corresponde ao identificador de bloqueio fornecido pelo <xref:System.Web.SessionState.SessionStateModule>.</xref:System.Web.SessionState.SessionStateModule>      ## Excluindo expirado sessão armazenar dados quando o <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>método é chamado para uma sessão específica, os dados para essa sessão são excluídos do armazenamento usando o <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>método; caso contrário, os dados permanecem no armazenamento de dados para solicitações futuras de servidor para a sessão.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Cabe a implementação de SessionStateStoreProviderBase para excluir dados de sessão expirada."
  example:
  - "For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).  \n  \n The following code example shows the Web.config file for an ASP.NET application that is configured to use a custom session-state store provider.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"OdbcSessionServices\" connectionString=\"DSN=SessionState;\" />  \n  </connectionStrings>  \n  \n  <system.web>  \n    <sessionState   \n      mode=\"Custom\"  \n      customProvider=\"OdbcSessionProvider\">  \n      <providers>  \n        <add name=\"OdbcSessionProvider\"  \n             type=\"Samples.AspNet.Session.OdbcSessionStateStore\"  \n             connectionStringName=\"OdbcSessionServices\" />  \n      </providers>  \n    </sessionState>  \n  </system.web>  \n</configuration>  \n```"
  syntax:
    content: 'public abstract class SessionStateStoreProviderBase : System.Configuration.Provider.ProviderBase'
  inheritance:
  - System.Object
  - System.Configuration.Provider.ProviderBase
  implements: []
  inheritedMembers:
  - System.Configuration.Provider.ProviderBase.Description
  - System.Configuration.Provider.ProviderBase.Initialize(System.String,System.Collections.Specialized.NameValueCollection)
  - System.Configuration.Provider.ProviderBase.Name
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  id: '#ctor'
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> classe."
  remarks: "Não é necessário para implementar um construtor para uma classe que herda a <xref:System.Web.SessionState.SessionStateStoreProviderBase>classe abstrata.</xref:System.Web.SessionState.SessionStateStoreProviderBase> Valores de inicialização para um <xref:System.Web.SessionState.SessionStateStoreProviderBase>implementação são passados para o <xref:System.Configuration.Provider.ProviderBase.Initialize%2A>implementação do método.</xref:System.Configuration.Provider.ProviderBase.Initialize%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: protected SessionStateStoreProviderBase ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  id: CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Cria um novo <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> objeto a ser usado para a solicitação atual."
  remarks: "O <xref:System.Web.SessionState.SessionStateModule>objeto chama o método CreateNewStoreData no início de uma solicitação para uma página ASP.NET, durante o <xref:System.Web.HttpApplication.AcquireRequestState>evento.</xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> O método CreateNewStoreData é chamado se: - a solicitação de entrada não tem nenhuma ID de sessão ou - a solicitação de entrada tem uma sessão de ID, mas a sessão não foi encontrado no repositório de dados.       O método CreateNewStoreData cria um novo <xref:System.Web.SessionState.SessionStateStoreData>objeto com vazio <xref:System.Web.SessionState.ISessionStateItemCollection>objeto, um <xref:System.Web.HttpStaticObjectsCollection>coleta e especificado `timeout` valor.</xref:System.Web.HttpStaticObjectsCollection> </xref:System.Web.SessionState.ISessionStateItemCollection> </xref:System.Web.SessionState.SessionStateStoreData> O <xref:System.Web.HttpStaticObjectsCollection>coleta para o aplicativo ASP.NET pode ser recuperada usando o <xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A>método.</xref:System.Web.SessionState.SessionStateUtility.GetSessionStaticObjects%2A> </xref:System.Web.HttpStaticObjectsCollection>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData CreateNewStoreData (System.Web.HttpContext context, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para a solicitação atual."
    - id: timeout
      type: System.Int32
      description: "O estado de sessão <xref:System.Web.SessionState.HttpSessionState.Timeout*>valor para o novo <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref>.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Um novo <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> para a solicitação atual."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  id: CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Adiciona um novo item de estado da sessão para o repositório de dados."
  remarks: "O método CreateUninitializedItem é usado com sessões quando o `cookieless` e `regenerateExpiredSessionId` os atributos são ambos `true`. Tendo o `regenerateExpiredSessionId attribute` definida como `true` faz com que o <xref:System.Web.SessionState.SessionStateModule>objeto para gerar um novo <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valor quando um expiradas <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valor é encontrado.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule>       O processo de geração de um novo <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valor requer redirecionar o navegador para uma URL que contém o recém-gerado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valor.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> O método CreateUninitializedItem é chamado durante a solicitação inicial que contém um expiradas <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valor.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> Após o <xref:System.Web.SessionState.SessionStateModule>objeto adquire um novo <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valor para substituir o valor expirado, ele chama o método CreateUninitializedItem para adicionar uma entrada não inicializada para o armazenamento de dados de estado de sessão.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> </xref:System.Web.SessionState.SessionStateModule> Em seguida, o navegador é redirecionado para a URL que contém o recém-gerado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valor.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A> A existência de entrada não inicializada no armazenamento de dados de sessão garante que a solicitação redirecionada que inclui o recém-gerado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valor não é confundida como uma solicitação de uma sessão expirada e é, em vez disso, tratada como uma nova sessão.</xref:System.Web.SessionState.HttpSessionState.SessionID%2A>       A entrada não inicializada no armazenamento de dados de sessão está associada com o recém-gerado <xref:System.Web.SessionState.HttpSessionState.SessionID%2A>valor e contém somente valores padrão, incluindo uma data de expiração e a hora e um valor que corresponde ao `actionFlags` parâmetro o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>e <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>métodos.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.HttpSessionState.SessionID%2A> A entrada não inicializada no armazenamento de estado de sessão deve incluir um `actionFlags` valor igual a <xref:System.Web.SessionState.SessionStateActions>valor de enumeração.</xref:System.Web.SessionState.SessionStateActions> Esse valor é passado para o <xref:System.Web.SessionState.SessionStateModule>objeto o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>e <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>métodos e informa o <xref:System.Web.SessionState.SessionStateModule>objeto que a sessão atual é um novo mas sessão foi cancelada.</xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> O <xref:System.Web.SessionState.SessionStateModule>objeto então inicializar a nova sessão e gerar o `Session_OnStart` evento.</xref:System.Web.SessionState.SessionStateModule>       Para obter mais informações sobre sessões sem cookies, consulte o <xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>propriedade.</xref:System.Web.SessionState.HttpSessionState.IsCookieless%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void CreateUninitializedItem (System.Web.HttpContext context, string id, int timeout);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para a solicitação atual."
    - id: id
      type: System.String
      description: "O <xref:System.Web.SessionState.HttpSessionState.SessionID*>para a solicitação atual.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: timeout
      type: System.Int32
      description: "A sessão <xref:System.Web.SessionState.HttpSessionState.Timeout*>para a solicitação atual.</xref:System.Web.SessionState.HttpSessionState.Timeout*>"
  overload: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  id: Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Libera todos os recursos usados pelo <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> implementação."
  remarks: "O método Dispose é chamado quando o <xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName>método é executado no fechamento do domínio do aplicativo.</xref:System.Web.SessionState.SessionStateModule.Dispose%2A?displayProperty=fullName> As classes que herdam o <xref:System.Web.SessionState.SessionStateStoreProviderBase>classe pode usar esse método para liberar quaisquer recursos não mais em uso.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void Dispose ();
    parameters: []
  overload: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  id: EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Chamado pelo <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> objeto ao final de uma solicitação."
  remarks: "O <xref:System.Web.SessionState.SessionStateModule>objeto chama o método de EndRequest no final de uma solicitação para uma página ASP.NET, durante o <xref:System.Web.HttpApplication.EndRequest>evento.</xref:System.Web.HttpApplication.EndRequest> </xref:System.Web.SessionState.SessionStateModule> Você pode usar o método EndRequest para realizar qualquer limpeza por solicitação exigida por seu provedor de armazenamento de estado de sessão."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void EndRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para a solicitação atual."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Retorna os dados de estado de sessão somente leitura do armazenamento de dados da sessão."
  remarks: "O <xref:System.Web.SessionState.SessionStateModule>objeto chama o método GetItem no início de uma solicitação, durante o <xref:System.Web.HttpApplication.AcquireRequestState>evento, quando o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atributo é definido como `ReadOnly`.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Se o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atributo é definido como `true`, o <xref:System.Web.SessionState.SessionStateModule>objeto, em vez disso, chama o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A>método.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       O método GetItem retorna um <xref:System.Web.SessionState.SessionStateStoreData>objeto preenchido com as informações de sessão do armazenamento de dados e atualiza a data de validade dos dados de sessão.</xref:System.Web.SessionState.SessionStateStoreData> Se nenhum dado de item de sessão é encontrado no banco de dados, o método GetItem define o `locked``out` parâmetro `false` e retorna `null`. Isso faz com que o <xref:System.Web.SessionState.SessionStateModule>objeto para chamar o <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>método para criar um item de nova sessão no repositório de dados.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule>       Se item de sessão dados são encontrados no banco de dados, mas os dados são bloqueados, os conjuntos de método GetItem o `locked``out` parâmetro `true`, define o `lockAge``out` parâmetro (que é recuperado do armazenamento de dados), define a data atual e menor do que a data e hora quando o item foi bloqueado o `lockId``out` parâmetro para o identificador de bloqueio recuperado do repositório de dados e retorna `null`. Isso faz com que o <xref:System.Web.SessionState.SessionStateModule>objeto para chamar o método GetItem novamente após um intervalo de meio segundo para tentar recuperar as informações do item de sessão.</xref:System.Web.SessionState.SessionStateModule>       Se o valor que o `lockAge``out` parâmetro for definido para exceder a <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>valor, o <xref:System.Web.SessionState.SessionStateModule>objeto chamadas a <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>método para limpar o bloqueio nos dados de item de sessão e, em seguida, chama o método GetItem novamente.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       O `actionFlags` parâmetro é usado quando tanto o `cookieless` e `regenerateExpiredSessionId` atributos são definidos como `true`. Um `actionFlags` valor definido como <xref:System.Web.SessionState.SessionStateActions>indica que a entrada no armazenamento de dados é uma nova sessão que requer inicialização.</xref:System.Web.SessionState.SessionStateActions> Entradas não inicializadas no armazenamento de dados de sessão são criadas por uma chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>método.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Se o item de armazenamento de dados da sessão não é um item não inicializado, o `actionFlags` parâmetro será definido como zero.       Os implementadores de armazenamento de estado de sessão personalizado que oferecem suporte a sessões sem cookies devem definir o `actionFlags` `out` parâmetro para o valor retornado de armazenamento de dados da sessão para o item atual. Se o `actionFlags` valor de parâmetro para o armazenamento de sessão solicitado item é igual a <xref:System.Web.SessionState.SessionStateActions>valor de enumeração e, em seguida, o método GetItem deve definir o valor no armazenamento de dados para zero após definir o `actionFlags` `out` parâmetro.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItem (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para a solicitação atual."
    - id: id
      type: System.String
      description: "O <xref:System.Web.SessionState.HttpSessionState.SessionID*>para a solicitação atual.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "Quando este método retorna, contém um valor booliano que é definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se o item de sessão solicitado está bloqueado no armazenamento de dados; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: lockAge
      type: System.TimeSpan
      description: "Quando este método retorna, contém um <xref:System.TimeSpan>objeto é definido como a quantidade de tempo que um item no repositório de dados de sessão foi bloqueado.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "Quando este método retorna, contém um objeto que é definido como o identificador de bloqueio para a solicitação atual. Para obter detalhes sobre o identificador de bloqueio, consulte &quot;Dados de armazenamento de sessão de bloqueio&quot; no <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> classe resumo."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "Quando este método retorna, contém um do <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> valores, que indica se a sessão atual é uma sessão sem cookies não inicializada."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Um <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> preenchida com valores de sessão e informações do armazenamento de dados da sessão."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  id: GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Retorna os dados de estado de sessão somente leitura do armazenamento de dados da sessão."
  remarks: "O <xref:System.Web.SessionState.SessionStateModule>objeto chama o método GetItemExclusive no início de uma solicitação, durante o <xref:System.Web.HttpApplication.AcquireRequestState>evento, quando o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atributo é definido como `true`, que é o padrão.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.SessionState.SessionStateModule> Se o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atributo é definido como `ReadOnly`, o <xref:System.Web.SessionState.SessionStateModule>objeto, em vez disso, chama o <xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A>método.</xref:System.Web.SessionState.SessionStateStoreProviderBase.GetItem%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>       O método GetItemExclusive retorna um <xref:System.Web.SessionState.SessionStateStoreData>objeto preenchido com as informações de sessão do armazenamento de dados, atualiza a data de validade dos dados armazenados e bloqueia os dados de item de sessão no banco de dados para a duração da solicitação.</xref:System.Web.SessionState.SessionStateStoreData> Se nenhum dado de item de sessão é encontrado no banco de dados, o método GetItemExclusive define o `locked` `out` parâmetro `false` e retorna `null`. Isso faz com que o <xref:System.Web.SessionState.SessionStateModule>objeto para chamar o <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A>método para criar um item de nova sessão no repositório de dados.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData%2A> </xref:System.Web.SessionState.SessionStateModule> Se item de sessão dados são encontrados no banco de dados, mas os dados são bloqueados, os conjuntos de método GetItemExclusive o `locked` `out` parâmetro `true`, define o `lockAge` `out` parâmetro (que é recuperado do armazenamento de dados), define a data atual e menor do que a data e hora quando o item foi bloqueado o `lockId` `out` parâmetro para o identificador de bloqueio recuperado do repositório de dados e retorna `null`. Isso faz com que o <xref:System.Web.SessionState.SessionStateModule>objeto para chamar o método GetItemExclusive novamente após um intervalo de meio segundo para tentar recuperar as informações do item de sessão e obter um bloqueio nos dados.</xref:System.Web.SessionState.SessionStateModule> Se o valor que o `lockAge` `out` parâmetro for definido para exceder a <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>valor, o <xref:System.Web.SessionState.SessionStateModule>chama o <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>método para limpar o bloqueio nos dados de item de sessão e, em seguida, chama o método GetItemExclusive novamente.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule> </xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>       O `actionFlags` parâmetro é usado quando o `cookieless` e `regenerateExpiredSessionId` atributos são definidos como `true`. Um `actionFlags` valor definido como <xref:System.Web.SessionState.SessionStateActions>indica que a entrada no armazenamento de dados é uma nova sessão que requer inicialização.</xref:System.Web.SessionState.SessionStateActions> Entradas não inicializadas no armazenamento de dados de sessão são criadas por uma chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A>método.</xref:System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem%2A> Se o item de armazenamento de dados da sessão não é um item não inicializado, o `actionFlags` parâmetro será definido como zero.       Os implementadores de armazenamento de estado de sessão personalizado que oferecem suporte a sessões sem cookies devem definir o `actionFlags` `out` parâmetro para o valor retornado de armazenamento de dados da sessão para o item atual. Se o `actionFlags` valor de parâmetro para o armazenamento de sessão solicitado item é igual a <xref:System.Web.SessionState.SessionStateActions>valor de enumeração e, em seguida, o método GetItemExclusive deve definir o valor no armazenamento de dados para zero após definir o `actionFlags` `out` parâmetro.</xref:System.Web.SessionState.SessionStateActions>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract System.Web.SessionState.SessionStateStoreData GetItemExclusive (System.Web.HttpContext context, string id, out bool locked, out TimeSpan lockAge, out object lockId, out System.Web.SessionState.SessionStateActions actions);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para a solicitação atual."
    - id: id
      type: System.String
      description: "O <xref:System.Web.SessionState.HttpSessionState.SessionID*>para a solicitação atual.</xref:System.Web.SessionState.HttpSessionState.SessionID*>"
    - id: locked
      type: System.Boolean
      description: "Quando este método retorna, contém um valor booliano que é definido como <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref> se um bloqueio for com êxito obtido; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: lockAge
      type: System.TimeSpan
      description: "Quando este método retorna, contém um <xref:System.TimeSpan>objeto é definido como a quantidade de tempo que um item no repositório de dados de sessão foi bloqueado.</xref:System.TimeSpan>"
    - id: lockId
      type: System.Object
      description: "Quando este método retorna, contém um objeto que é definido como o identificador de bloqueio para a solicitação atual. Para obter detalhes sobre o identificador de bloqueio, consulte &quot;Dados de armazenamento de sessão de bloqueio&quot; no <xref href=&quot;System.Web.SessionState.SessionStateStoreProviderBase&quot;> </xref> classe resumo."
    - id: actions
      type: System.Web.SessionState.SessionStateActions
      description: "Quando este método retorna, contém um do <xref href=&quot;System.Web.SessionState.SessionStateActions&quot;> </xref> valores, que indica se a sessão atual é uma sessão sem cookies não inicializada."
    return:
      type: System.Web.SessionState.SessionStateStoreData
      description: "Um <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> preenchida com valores de sessão e informações do armazenamento de dados da sessão."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  id: InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Chamado pelo <xref href=&quot;System.Web.SessionState.SessionStateModule&quot;> </xref> objeto para inicialização por solicitação."
  remarks: "O <xref:System.Web.SessionState.SessionStateModule>objeto chama o método InitializeRequest antes de chamar qualquer outra <xref:System.Web.SessionState.SessionStateStoreProviderBase>método.</xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule> Você pode usar o método InitializeRequest para executar uma inicialização por solicitação exigida por seu provedor de armazenamento de estado de sessão."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void InitializeRequest (System.Web.HttpContext context);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para a solicitação atual."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  id: ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Repositório de um bloqueio em um item nos dados de sessão de versões."
  remarks: "O <xref:System.Web.SessionState.SessionStateModule>objeto chama o método ReleaseItemExclusive para atualizar a data de expiração e liberar um bloqueio em um item no armazenamento de dados.</xref:System.Web.SessionState.SessionStateModule> Ele é chamado no final de uma solicitação, durante o <xref:System.Web.HttpApplication.ReleaseRequestState>evento, se os valores da sessão foram modificados.</xref:System.Web.HttpApplication.ReleaseRequestState> Se os valores de sessão foram modificados, o <xref:System.Web.SessionState.SessionStateModule>objeto, em vez disso, chama o <xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A>método.</xref:System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive%2A> </xref:System.Web.SessionState.SessionStateModule>       O <xref:System.Web.SessionState.SessionStateModule>objeto também chama o método ReleaseItemExclusive quando um bloqueio em um item no repositório de dados de sessão excedeu o <xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A>valor.</xref:System.Web.Configuration.HttpRuntimeSection.ExecutionTimeout%2A> </xref:System.Web.SessionState.SessionStateModule> Para obter mais informações sobre bloqueio e detalhes sobre o identificador de bloqueio, consulte &quot;Bloqueando dados de armazenamento de sessão&quot; o <xref:System.Web.SessionState.SessionStateStoreProviderBase>Visão geral da classe.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       O método ReleaseItemExclusive remove apenas o bloqueio de um item no repositório de dados de sessão para o aplicativo atual que corresponde a sessão fornecida `id` e `lockId` valores. Se o `lockId` não corresponde o um no repositório de dados, o método ReleaseItemExclusive não fará nada."
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ReleaseItemExclusive (System.Web.HttpContext context, string id, object lockId);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para a solicitação atual."
    - id: id
      type: System.String
      description: "O identificador de sessão para a solicitação atual."
    - id: lockId
      type: System.Object
      description: "O identificador de bloqueio para a solicitação atual."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  id: RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Exclusões de item de dados de armazenamento de dados da sessão."
  remarks: "O <xref:System.Web.SessionState.SessionStateModule>objeto chama o método RemoveItem no final de uma solicitação, durante o <xref:System.Web.HttpApplication.ReleaseRequestState>evento para excluir os dados de um item de sessão de armazenamento de dados de sessão se o <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>método foi chamado.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> </xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> Somente os dados de sessão para o aplicativo atual que corresponde a sessão fornecida `id` e `lockId` valores é excluído. Para obter mais informações sobre bloqueio e detalhes sobre o identificador de bloqueio, consulte &quot;Bloqueando dados de armazenamento de sessão&quot; o <xref:System.Web.SessionState.SessionStateStoreProviderBase>Visão geral da classe.</xref:System.Web.SessionState.SessionStateStoreProviderBase>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void RemoveItem (System.Web.HttpContext context, string id, object lockId, System.Web.SessionState.SessionStateStoreData item);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para a solicitação atual."
    - id: id
      type: System.String
      description: "O identificador de sessão para a solicitação atual."
    - id: lockId
      type: System.Object
      description: "O identificador de bloqueio para a solicitação atual."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "O <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> que representa o item a ser excluído do armazenamento de dados."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  id: ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Atualiza a data de expiração e a hora de um item no armazenamento de dados."
  remarks: "O <xref:System.Web.SessionState.SessionStateModule>objeto chama o método ResetItemTimeout para atualizar a data de expiração para uma sessão para a data atual e a hora mais a sessão <xref:System.Web.SessionState.HttpSessionState.Timeout%2A>valor quando qualquer: - o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atributo é `true`, ou - a solicitação não gerou o <xref:System.Web.HttpApplication.AcquireRequestState>e <xref:System.Web.HttpApplication.ReleaseRequestState>eventos devido a um erro.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.HttpApplication.AcquireRequestState> </xref:System.Web.Configuration.PagesSection.EnableSessionState%2A> </xref:System.Web.SessionState.HttpSessionState.Timeout%2A> </xref:System.Web.SessionState.SessionStateModule>       Se for solicitada uma página ASP.NET e o <xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>atributo é definido como `false`, o método ResetItemTimeout ainda é chamado para atualizar a data de expiração e a hora dos dados no armazenamento de dados da sessão.</xref:System.Web.Configuration.PagesSection.EnableSessionState%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void ResetItemTimeout (System.Web.HttpContext context, string id);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para a solicitação atual."
    - id: id
      type: System.String
      description: "O identificador de sessão para a solicitação atual."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  id: SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Atualiza as informações de item de sessão no armazenamento de dados de estado de sessão com valores da solicitação atual e limpa o bloqueio nos dados."
  remarks: "O <xref:System.Web.SessionState.SessionStateModule>objeto chama o método SetAndReleaseItemExclusive no final de uma solicitação, durante o <xref:System.Web.HttpApplication.ReleaseRequestState>evento para inserir informações do item de sessão atual no repositório de dados ou atualizar as informações de item de sessão existente no repositório de dados com os valores atuais, para atualizar o tempo de expiração no item e para liberar o bloqueio nos dados.</xref:System.Web.HttpApplication.ReleaseRequestState> </xref:System.Web.SessionState.SessionStateModule> Somente os dados de sessão para o aplicativo atual que corresponde a sessão fornecida `id` e `lockId` valores é atualizado. Para obter mais informações sobre bloqueio, consulte &quot;Bloqueando sessão repositório de dados&quot; a <xref:System.Web.SessionState.SessionStateStoreProviderBase>Visão geral da classe.</xref:System.Web.SessionState.SessionStateStoreProviderBase>       Se os valores de sessão para a solicitação atual não foram modificados, o método SetAndReleaseItemExclusive não é chamado. Em vez disso, o <xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>método é chamado.</xref:System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive%2A>       Se o <xref:System.Web.SessionState.HttpSessionState.Abandon%2A>método foi chamado, o método SetAndReleaseItemExclusive não for chamado.</xref:System.Web.SessionState.HttpSessionState.Abandon%2A> Em vez disso, o <xref:System.Web.SessionState.SessionStateModule>objeto chama o <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>método para excluir dados de item de sessão da fonte de dados.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A> </xref:System.Web.SessionState.SessionStateModule>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract void SetAndReleaseItemExclusive (System.Web.HttpContext context, string id, System.Web.SessionState.SessionStateStoreData item, object lockId, bool newItem);
    parameters:
    - id: context
      type: System.Web.HttpContext
      description: "O <xref href=&quot;System.Web.HttpContext&quot;> </xref> para a solicitação atual."
    - id: id
      type: System.String
      description: "O identificador de sessão para a solicitação atual."
    - id: item
      type: System.Web.SessionState.SessionStateStoreData
      description: "O <xref href=&quot;System.Web.SessionState.SessionStateStoreData&quot;> </xref> objeto que contém os valores da sessão atual a ser armazenado."
    - id: lockId
      type: System.Object
      description: "O identificador de bloqueio para a solicitação atual."
    - id: newItem
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para identificar o item de sessão como um novo item; <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref> para identificar o item de sessão como um item existente."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  exceptions: []
  platform:
  - net462
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  id: SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  langs:
  - csharp
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.SessionState
  summary: "Define uma referência o <xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> delegar o <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> evento definido no arquivo global asax."
  remarks: "O <xref:System.Web.SessionState.SessionStateModule>objeto chama o método SetItemExpireCallback quando o módulo é inicializado para determinar se chamadas para o `Session_OnEnd` eventos com suporte a <xref:System.Web.SessionState.SessionStateStoreProviderBase>implementação e associar o <xref:System.Web.SessionState.SessionStateItemExpireCallback>delegar com o `Session_OnEnd` evento.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateStoreProviderBase> </xref:System.Web.SessionState.SessionStateModule>       Implementadores de provedor de armazenamento de estado de sessão personalizado devem usar o método SetItemExpireCallback para informar o <xref:System.Web.SessionState.SessionStateModule>objeto se chamadas para o `Session_OnEnd` evento têm suporte e para definir uma referência local para o <xref:System.Web.SessionState.SessionStateItemExpireCallback>representante fornecido pelo `expireCallback` parâmetro.</xref:System.Web.SessionState.SessionStateItemExpireCallback> </xref:System.Web.SessionState.SessionStateModule> A implementação personalizada deve decidir quando local <xref:System.Web.SessionState.SessionStateItemExpireCallback>representante será chamado.</xref:System.Web.SessionState.SessionStateItemExpireCallback> Por exemplo, o representante pode ser chamado durante a chamada para o <xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>método, que é chamado quando uma sessão é abandonada.</xref:System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem%2A>"
  example:
  - For an example of a session-state store provider implementation, see [Implementing a Session-State Store Provider](~/add/includes/ajax-current-ext-md.md).
  syntax:
    content: public abstract bool SetItemExpireCallback (System.Web.SessionState.SessionStateItemExpireCallback expireCallback);
    parameters:
    - id: expireCallback
      type: System.Web.SessionState.SessionStateItemExpireCallback
      description: "O <xref href=&quot;System.Web.SessionState.SessionStateItemExpireCallback&quot;> </xref> delegar o <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> evento definido no arquivo global asax."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o provedor de armazenamento de estado de sessão oferece suporte ao chamar o <xref uid=&quot;langword_csharp_Session_OnEnd&quot; name=&quot;Session_OnEnd&quot; href=&quot;&quot;> </xref> evento; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.Provider.ProviderBase
  isExternal: false
  name: System.Configuration.Provider.ProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase()
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SessionStateStoreProviderBase()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(System.Web.HttpContext,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData(HttpContext,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData(HttpContext,Int32)
- uid: System.Web.SessionState.SessionStateStoreData
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateStoreData
  nameWithType: SessionStateStoreData
  fullName: System.Web.SessionState.SessionStateStoreData
- uid: System.Web.HttpContext
  parent: System.Web
  isExternal: false
  name: HttpContext
  nameWithType: HttpContext
  fullName: System.Web.HttpContext
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(System.Web.HttpContext,System.String,System.Int32)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem(HttpContext,String,Int32)
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem(HttpContext,String,Int32)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose()
  nameWithType: SessionStateStoreProviderBase.Dispose()
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.Dispose()
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.EndRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItem(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.SessionState.SessionStateActions
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateActions
  nameWithType: SessionStateActions
  fullName: System.Web.SessionState.SessionStateActions
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(System.Web.HttpContext,System.String,System.Boolean@,System.TimeSpan@,System.Object@,System.Web.SessionState.SessionStateActions@)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive(HttpContext,String,Boolean,TimeSpan,Object,SessionStateActions)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(System.Web.HttpContext)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest(HttpContext)
  nameWithType: SessionStateStoreProviderBase.InitializeRequest(HttpContext)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest(HttpContext)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(System.Web.HttpContext,System.String,System.Object)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive(HttpContext,String,Object)
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive(HttpContext,String,Object)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(System.Web.HttpContext,System.String,System.Object,System.Web.SessionState.SessionStateStoreData)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  nameWithType: SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem(HttpContext,String,Object,SessionStateStoreData)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(System.Web.HttpContext,System.String)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout(HttpContext,String)
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout(HttpContext,String)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(System.Web.HttpContext,System.String,System.Web.SessionState.SessionStateStoreData,System.Object,System.Boolean)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive(HttpContext,String,SessionStateStoreData,Object,Boolean)
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(System.Web.SessionState.SessionStateItemExpireCallback)
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback(SessionStateItemExpireCallback)
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
  fullName: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback(SessionStateItemExpireCallback)
- uid: System.Web.SessionState.SessionStateItemExpireCallback
  parent: System.Web.SessionState
  isExternal: false
  name: SessionStateItemExpireCallback
  nameWithType: SessionStateItemExpireCallback
  fullName: System.Web.SessionState.SessionStateItemExpireCallback
- uid: System.Web.SessionState.SessionStateStoreProviderBase.#ctor*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SessionStateStoreProviderBase
  nameWithType: SessionStateStoreProviderBase.SessionStateStoreProviderBase
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateNewStoreData*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateNewStoreData
  nameWithType: SessionStateStoreProviderBase.CreateNewStoreData
- uid: System.Web.SessionState.SessionStateStoreProviderBase.CreateUninitializedItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: CreateUninitializedItem
  nameWithType: SessionStateStoreProviderBase.CreateUninitializedItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.Dispose*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: Dispose
  nameWithType: SessionStateStoreProviderBase.Dispose
- uid: System.Web.SessionState.SessionStateStoreProviderBase.EndRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: EndRequest
  nameWithType: SessionStateStoreProviderBase.EndRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItem
  nameWithType: SessionStateStoreProviderBase.GetItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.GetItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: GetItemExclusive
  nameWithType: SessionStateStoreProviderBase.GetItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.InitializeRequest*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: InitializeRequest
  nameWithType: SessionStateStoreProviderBase.InitializeRequest
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.ReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.RemoveItem*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: RemoveItem
  nameWithType: SessionStateStoreProviderBase.RemoveItem
- uid: System.Web.SessionState.SessionStateStoreProviderBase.ResetItemTimeout*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: ResetItemTimeout
  nameWithType: SessionStateStoreProviderBase.ResetItemTimeout
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetAndReleaseItemExclusive*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetAndReleaseItemExclusive
  nameWithType: SessionStateStoreProviderBase.SetAndReleaseItemExclusive
- uid: System.Web.SessionState.SessionStateStoreProviderBase.SetItemExpireCallback*
  parent: System.Web.SessionState.SessionStateStoreProviderBase
  isExternal: false
  name: SetItemExpireCallback
  nameWithType: SessionStateStoreProviderBase.SetItemExpireCallback
