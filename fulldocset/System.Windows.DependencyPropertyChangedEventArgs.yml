### YamlMime:ManagedReference
items:
- uid: System.Windows.DependencyPropertyChangedEventArgs
  id: DependencyPropertyChangedEventArgs
  children:
  - System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)
  - System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)
  - System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyPropertyChangedEventArgs.GetHashCode
  - System.Windows.DependencyPropertyChangedEventArgs.NewValue
  - System.Windows.DependencyPropertyChangedEventArgs.OldValue
  - System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  - System.Windows.DependencyPropertyChangedEventArgs.Property
  langs:
  - csharp
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
  type: Struct
  summary: "Fornece dados para vários eventos de alteração de propriedade. Normalmente, esses eventos relatam alterações de valor efetivo no valor de uma propriedade de dependência somente leitura. Outro uso é como parte de um <xref href=&quot;System.Windows.PropertyChangedCallback&quot;> </xref> implementação."
  remarks: "Os eventos que usam a classe DependencyPropertyChangedEventArgs para dados de eventos, e o <xref:System.Windows.DependencyPropertyChangedEventHandler>implementações de método para manipuladores, geralmente seguem o padrão de nomenclatura `Is*Changed`e geralmente são implementadas como [!INCLUDE[TLA#tla_clr](~/add/includes/tlasharptla-clr-md.md)] eventos sem <xref:System.Windows.RoutedEvent>backup (eles não são eventos roteados).</xref:System.Windows.RoutedEvent> </xref:System.Windows.DependencyPropertyChangedEventHandler> Alguns métodos &quot;manipular&quot; caso contrário de tratamento de classe exposta eventos que reportam uma alteração de estado por meio de uma alteração de propriedade, como <xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName>, também usar a classe DependencyPropertyChangedEventArgs para dados de evento.</xref:System.Windows.Controls.Primitives.ButtonBase.OnIsPressedChanged%2A?displayProperty=fullName>       O cenário para <xref:System.Windows.PropertyChangedCallback>é usar os argumentos para relatórios antigos e novos valores provenientes de avaliação do sistema de propriedade da propriedade.</xref:System.Windows.PropertyChangedCallback> Um retorno de chamada que processa os valores novos e antigos pode escolher um tratamento especial dependendo esses valores, como escolher não responder às alterações de valor que são consideradas insignificantes."
  example:
  - "The following example uses the DependencyPropertyChangedEventArgs class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by DependencyPropertyChangedEventArgs, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \"ValueChanged\" event defined by and raised by the custom class.  \n  \n [!code-cs[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/csharp/NumericUpDownOneProject/NumericUpDown.cs#dependencypropertychangedeventargs)]\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/visualbasic/numericupdownoneproject/numericupdown.vb#dependencypropertychangedeventargs)]"
  syntax:
    content: public struct DependencyPropertyChangedEventArgs
  inheritance:
  - System.ValueType
  implements: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)
  id: '#ctor(System.Windows.DependencyProperty,System.Object,System.Object)'
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  type: Constructor
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> classe."
  remarks: "Implementadores de eventos personalizados que as alterações de propriedade de dependência de relatório devem usar esse construtor para preencher os dados de eventos com as especificações da alteração quando o evento é gerado."
  syntax:
    content: public DependencyPropertyChangedEventArgs (System.Windows.DependencyProperty property, object oldValue, object newValue);
    parameters:
    - id: property
      type: System.Windows.DependencyProperty
      description: "O identificador para a propriedade de dependência que foram alteradas."
    - id: oldValue
      type: System.Object
      description: "O valor da propriedade antes da alteração relatada pelo evento relevante ou alteração de estado."
    - id: newValue
      type: System.Object
      description: "O valor da propriedade após a alteração relatada pelo evento relevante ou alteração de estado."
  overload: System.Windows.DependencyPropertyChangedEventArgs.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: DependencyPropertyChangedEventArgs.Equals(Object)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(Object)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determina se o objeto fornecido é equivalente à atual <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>."
  remarks: "Essa implementação depende de equivalência do valor de todas as propriedades, incluindo propriedades internas."
  syntax:
    content: public override bool Equals (object obj);
    parameters:
    - id: obj
      type: System.Object
      description: "O objeto a ser comparado ao atual <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o objeto fornecido é equivalente à atual <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyPropertyChangedEventArgs.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)
  id: Equals(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: Equals(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determina se o fornecido <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> é equivalente à atual <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>."
  remarks: "Essa implementação depende de equivalência do valor de todas as propriedades, incluindo propriedades internas."
  syntax:
    content: public bool Equals (System.Windows.DependencyPropertyChangedEventArgs args);
    parameters:
    - id: args
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "O <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> para comparar com a atual<xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;></xref>"
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se fornecido <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> é equivalente à atual <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyPropertyChangedEventArgs.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode
  id: GetHashCode
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode()
  fullName: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode()
  type: Method
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Obtém um código hash para este <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref>."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "Um código de hash de inteiro de 32 bits com sinal."
  overload: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue
  id: NewValue
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: NewValue
  nameWithType: DependencyPropertyChangedEventArgs.NewValue
  fullName: System.Windows.DependencyPropertyChangedEventArgs.NewValue
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Obtém o valor da propriedade após a alteração."
  remarks: "O tipo do valor fornecido deve sempre ser conversíveis para o tipo da propriedade de dependência que está sendo relatado."
  example:
  - "The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \"ValueChanged\" event defined by and raised by the custom class.  \n  \n [!code-cs[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/csharp/NumericUpDownOneProject/NumericUpDown.cs#dependencypropertychangedeventargs)]\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/visualbasic/numericupdownoneproject/numericupdown.vb#dependencypropertychangedeventargs)]"
  syntax:
    content: public object NewValue { get; }
    return:
      type: System.Object
      description: "O valor da propriedade após a alteração."
  overload: System.Windows.DependencyPropertyChangedEventArgs.NewValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue
  id: OldValue
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: OldValue
  nameWithType: DependencyPropertyChangedEventArgs.OldValue
  fullName: System.Windows.DependencyPropertyChangedEventArgs.OldValue
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Obtém o valor da propriedade antes da alteração."
  remarks: "O tipo do valor fornecido deve sempre ser conversíveis para o tipo da propriedade de dependência que está sendo relatado."
  example:
  - "The following example uses the <xref:System.Windows.DependencyPropertyChangedEventArgs> class in the context of a <xref:System.Windows.PropertyChangedCallback> for a particular property of a custom class that also defines events. The callback takes the results of old and new values from the property system as communicated by <xref:System.Windows.DependencyPropertyChangedEventArgs>, and repackages these into a different events arguments class <xref:System.Windows.RoutedPropertyChangedEventArgs%601>. The new arguments are then used as the data for a \"ValueChanged\" event defined by and raised by the custom class.  \n  \n [!code-cs[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/csharp/NumericUpDownOneProject/NumericUpDown.cs#dependencypropertychangedeventargs)]\n [!code-vb[CustomControlNumericUpDownOneProject#DependencyPropertyChangedEventArgs](~/add/codesnippet/visualbasic/numericupdownoneproject/numericupdown.vb#dependencypropertychangedeventargs)]"
  syntax:
    content: public object OldValue { get; }
    return:
      type: System.Object
      description: "O valor da propriedade antes da alteração."
  overload: System.Windows.DependencyPropertyChangedEventArgs.OldValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  id: op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determina se duas especificadas <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> objetos têm o mesmo valor."
  remarks: "A implementação usa a mesma lógica <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>"
  syntax:
    content: public static bool op_Equality (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);
    parameters:
    - id: left
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "A primeira <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> para comparar."
    - id: right
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "A segunda <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> instâncias forem equivalentes; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyPropertyChangedEventArgs.op_Equality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  id: op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  type: Operator
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Determina se duas especificadas <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> objetos são diferentes."
  remarks: "A implementação retorna a negação da mesma lógica <xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>.</xref:System.Windows.DependencyPropertyChangedEventArgs.Equals%2A>"
  syntax:
    content: public static bool op_Inequality (System.Windows.DependencyPropertyChangedEventArgs left, System.Windows.DependencyPropertyChangedEventArgs right);
    parameters:
    - id: left
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "A primeira <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> para comparar."
    - id: right
      type: System.Windows.DependencyPropertyChangedEventArgs
      description: "A segunda <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> para comparar."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os dois <xref href=&quot;System.Windows.DependencyPropertyChangedEventArgs&quot;> </xref> instâncias forem diferentes; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.DependencyPropertyChangedEventArgs.Property
  id: Property
  parent: System.Windows.DependencyPropertyChangedEventArgs
  langs:
  - csharp
  name: Property
  nameWithType: DependencyPropertyChangedEventArgs.Property
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Property
  type: Property
  assemblies:
  - WindowsBase
  namespace: System.Windows
  summary: "Obtém o identificador para a propriedade de dependência em que ocorreu a alteração de valor."
  remarks: "Esta propriedade é relevante se usado em um comum <xref:System.Windows.PropertyChangedCallback>que está registrada para várias propriedades, e é necessário para resolver a ambiguidade que mudam de propriedade chamado o retorno de chamada.</xref:System.Windows.PropertyChangedCallback> Propriedade não é normalmente relevante para gerar eventos, pois normalmente há uma correspondência 1:1 entre propriedades e eventos de alteração de propriedade do relatório. O evento que foi gerado em si é a indicação de que a propriedade alterada."
  syntax:
    content: public System.Windows.DependencyProperty Property { get; }
    return:
      type: System.Windows.DependencyProperty
      description: "O campo de identificador de propriedade de dependência em que ocorreu a alteração de valor."
  overload: System.Windows.DependencyPropertyChangedEventArgs.Property*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ValueType
  isExternal: false
  name: System.ValueType
- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor(System.Windows.DependencyProperty,System.Object,System.Object)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs(DependencyProperty,Object,Object)
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Object)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Equals(Object)
  nameWithType: DependencyPropertyChangedEventArgs.Equals(Object)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals(System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Equals(DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Equals(DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs
  parent: System.Windows
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs
  fullName: System.Windows.DependencyPropertyChangedEventArgs
- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: GetHashCode()
  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode()
  fullName: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: DependencyPropertyChangedEventArgs.NewValue
  fullName: System.Windows.DependencyPropertyChangedEventArgs.NewValue
- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: DependencyPropertyChangedEventArgs.OldValue
  fullName: System.Windows.DependencyPropertyChangedEventArgs.OldValue
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Equality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(System.Windows.DependencyPropertyChangedEventArgs,System.Windows.DependencyPropertyChangedEventArgs)
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
  fullName: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality(DependencyPropertyChangedEventArgs,DependencyPropertyChangedEventArgs)
- uid: System.Windows.DependencyPropertyChangedEventArgs.Property
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Property
  nameWithType: DependencyPropertyChangedEventArgs.Property
  fullName: System.Windows.DependencyPropertyChangedEventArgs.Property
- uid: System.Windows.DependencyPropertyChangedEventArgs.#ctor*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: DependencyPropertyChangedEventArgs
  nameWithType: DependencyPropertyChangedEventArgs.DependencyPropertyChangedEventArgs
- uid: System.Windows.DependencyPropertyChangedEventArgs.Equals*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Equals
  nameWithType: DependencyPropertyChangedEventArgs.Equals
- uid: System.Windows.DependencyPropertyChangedEventArgs.GetHashCode*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: GetHashCode
  nameWithType: DependencyPropertyChangedEventArgs.GetHashCode
- uid: System.Windows.DependencyPropertyChangedEventArgs.NewValue*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: NewValue
  nameWithType: DependencyPropertyChangedEventArgs.NewValue
- uid: System.Windows.DependencyPropertyChangedEventArgs.OldValue*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: OldValue
  nameWithType: DependencyPropertyChangedEventArgs.OldValue
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Equality*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: op_Equality
  nameWithType: DependencyPropertyChangedEventArgs.op_Equality
- uid: System.Windows.DependencyPropertyChangedEventArgs.op_Inequality*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: op_Inequality
  nameWithType: DependencyPropertyChangedEventArgs.op_Inequality
- uid: System.Windows.DependencyPropertyChangedEventArgs.Property*
  parent: System.Windows.DependencyPropertyChangedEventArgs
  isExternal: false
  name: Property
  nameWithType: DependencyPropertyChangedEventArgs.Property
