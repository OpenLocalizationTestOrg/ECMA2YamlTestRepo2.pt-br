### YamlMime:ManagedReference
items:
- uid: System.Web.Configuration.MachineKeySection
  id: MachineKeySection
  children:
  - System.Web.Configuration.MachineKeySection.#ctor
  - System.Web.Configuration.MachineKeySection.ApplicationName
  - System.Web.Configuration.MachineKeySection.CompatibilityMode
  - System.Web.Configuration.MachineKeySection.DataProtectorType
  - System.Web.Configuration.MachineKeySection.Decryption
  - System.Web.Configuration.MachineKeySection.DecryptionKey
  - System.Web.Configuration.MachineKeySection.Properties
  - System.Web.Configuration.MachineKeySection.Reset(System.Configuration.ConfigurationElement)
  - System.Web.Configuration.MachineKeySection.SetReadOnly
  - System.Web.Configuration.MachineKeySection.Validation
  - System.Web.Configuration.MachineKeySection.ValidationAlgorithm
  - System.Web.Configuration.MachineKeySection.ValidationKey
  langs:
  - csharp
  name: MachineKeySection
  nameWithType: MachineKeySection
  fullName: System.Web.Configuration.MachineKeySection
  type: Class
  summary: "Define as configurações que controlam a geração de chave e algoritmos que são usados em operações de código (MAC) de autenticação de mensagem em autenticação de formulários do Windows, a validação do estado de exibição e o isolamento do aplicativo de estado de sessão, criptografia e descriptografia. Essa classe não pode ser herdada."
  remarks: "A classe MachineKeySection fornece uma maneira de acessar e modificar o conteúdo de programaticamente o `MachineKey` seção no arquivo de configuração. O `MachineKey` seção podem ser configurada no computador (Machine. config) ou no nível do aplicativo (Web. config) e controla as chaves e os algoritmos que são usados para autenticação de formulários do Windows, a validação do estado de exibição e o isolamento do aplicativo de estado de sessão. Para qualquer um desses recursos para funcionar em uma rede de servidores de Web (um farm da Web), o `DecryptionKey` e `ValidationKey` atributos do `MachineKey` seção deve ser configurada explicitamente e identicamente com valores de chave válidos. O `AutoGenerate` valor não funciona para farms da Web, porque ela depende de um segredo criptograficamente aleatório, que é mantido, usando a proteção da máquina local e não será o mesmo em mais de um computador."
  example:
  - "The example in this section demonstrates how to specify values declaratively for several attributes of the  section, which can also be accessed as members of the MachineKeySection class.  \n  \n The following example from a configuration file shows how to specify values declaratively for the  section.  \n  \n```  \n<system.web>  \n  <machineKey validationKey=\"AutoGenerate,IsolateApps\"   \n    decryptionKey=\"AutoGenerate,IsolateApps\"   \n    validation=\"SHA1\"/>  \n</system.web>  \n```  \n  \n The following example demonstrates how to use the MachineKeySection class in code.  \n  \n [!code-vb[System.Web.Configuration.MachineKeySection#1](~/add/codesnippet/visualbasic/t-system.web.configurati_5_1.vb)]\n [!code-cs[System.Web.Configuration.MachineKeySection#1](~/add/codesnippet/csharp/t-system.web.configurati_5_1.cs)]"
  syntax:
    content: 'public sealed class MachineKeySection : System.Configuration.ConfigurationSection'
  inheritance:
  - System.Object
  - System.Configuration.ConfigurationElement
  - System.Configuration.ConfigurationSection
  implements: []
  inheritedMembers:
  - System.Configuration.ConfigurationElement.CurrentConfiguration
  - System.Configuration.ConfigurationElement.DeserializeElement(System.Xml.XmlReader,System.Boolean)
  - System.Configuration.ConfigurationElement.ElementInformation
  - System.Configuration.ConfigurationElement.ElementProperty
  - System.Configuration.ConfigurationElement.Equals(System.Object)
  - System.Configuration.ConfigurationElement.EvaluationContext
  - System.Configuration.ConfigurationElement.GetHashCode
  - System.Configuration.ConfigurationElement.GetTransformedAssemblyString(System.String)
  - System.Configuration.ConfigurationElement.GetTransformedTypeString(System.String)
  - System.Configuration.ConfigurationElement.HasContext
  - System.Configuration.ConfigurationElement.Init
  - System.Configuration.ConfigurationElement.InitializeDefault
  - System.Configuration.ConfigurationElement.IsReadOnly
  - System.Configuration.ConfigurationElement.Item(System.Configuration.ConfigurationProperty)
  - System.Configuration.ConfigurationElement.Item(System.String)
  - System.Configuration.ConfigurationElement.ListErrors(System.Collections.IList)
  - System.Configuration.ConfigurationElement.LockAllAttributesExcept
  - System.Configuration.ConfigurationElement.LockAllElementsExcept
  - System.Configuration.ConfigurationElement.LockAttributes
  - System.Configuration.ConfigurationElement.LockElements
  - System.Configuration.ConfigurationElement.LockItem
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedAttribute(System.String,System.String)
  - System.Configuration.ConfigurationElement.OnDeserializeUnrecognizedElement(System.String,System.Xml.XmlReader)
  - System.Configuration.ConfigurationElement.OnRequiredPropertyNotFound(System.String)
  - System.Configuration.ConfigurationElement.PostDeserialize
  - System.Configuration.ConfigurationElement.PreSerialize(System.Xml.XmlWriter)
  - System.Configuration.ConfigurationElement.SerializeElement(System.Xml.XmlWriter,System.Boolean)
  - System.Configuration.ConfigurationElement.SerializeToXmlElement(System.Xml.XmlWriter,System.String)
  - System.Configuration.ConfigurationElement.SetPropertyValue(System.Configuration.ConfigurationProperty,System.Object,System.Boolean)
  - System.Configuration.ConfigurationElement.Unmerge(System.Configuration.ConfigurationElement,System.Configuration.ConfigurationElement,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.DeserializeSection(System.Xml.XmlReader)
  - System.Configuration.ConfigurationSection.GetRuntimeObject
  - System.Configuration.ConfigurationSection.IsModified
  - System.Configuration.ConfigurationSection.ResetModified
  - System.Configuration.ConfigurationSection.SectionInformation
  - System.Configuration.ConfigurationSection.SerializeSection(System.Configuration.ConfigurationElement,System.String,System.Configuration.ConfigurationSaveMode)
  - System.Configuration.ConfigurationSection.ShouldSerializeElementInTargetVersion(System.Configuration.ConfigurationElement,System.String,System.Runtime.Versioning.FrameworkName)
  - System.Configuration.ConfigurationSection.ShouldSerializePropertyInTargetVersion(System.Configuration.ConfigurationProperty,System.String,System.Runtime.Versioning.FrameworkName,System.Configuration.ConfigurationElement)
  - System.Configuration.ConfigurationSection.ShouldSerializeSectionInTargetVersion(System.Runtime.Versioning.FrameworkName)
  platform:
  - net462
- uid: System.Web.Configuration.MachineKeySection.#ctor
  id: '#ctor'
  parent: System.Web.Configuration.MachineKeySection
  langs:
  - csharp
  name: MachineKeySection()
  nameWithType: MachineKeySection.MachineKeySection()
  fullName: System.Web.Configuration.MachineKeySection.MachineKeySection()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Configuration.MachineKeySection&quot;> </xref> classe usando as configurações padrão."
  remarks: "O construtor não se destina a ser usado diretamente no seu código. Ele é chamado pelo sistema de configuração do ASP.NET. Obter uma instância de <xref:System.Web.Configuration.MachineKeySection>classe usando o <xref:System.Configuration.Configuration.GetSection%2A>método.</xref:System.Configuration.Configuration.GetSection%2A> </xref:System.Web.Configuration.MachineKeySection>"
  syntax:
    content: public MachineKeySection ();
    parameters: []
  overload: System.Web.Configuration.MachineKeySection.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.MachineKeySection.ApplicationName
  id: ApplicationName
  parent: System.Web.Configuration.MachineKeySection
  langs:
  - csharp
  name: ApplicationName
  nameWithType: MachineKeySection.ApplicationName
  fullName: System.Web.Configuration.MachineKeySection.ApplicationName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o nome do aplicativo."
  remarks: "Essa propriedade deve ser definida se você definir o <xref:System.Web.Configuration.MachineKeySection.DataProtectorType%2A>propriedade.</xref:System.Web.Configuration.MachineKeySection.DataProtectorType%2A> O valor da propriedade é passado para o <xref:System.Security.Cryptography.DataProtector.Create%2A?displayProperty=fullName>método de fábrica.</xref:System.Security.Cryptography.DataProtector.Create%2A?displayProperty=fullName>"
  syntax:
    content: public string ApplicationName { get; set; }
    return:
      type: System.String
      description: "O nome do aplicativo. O padrão é &lt;xref:System.String?displayProperty=fullName&gt;."
  overload: System.Web.Configuration.MachineKeySection.ApplicationName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.MachineKeySection.CompatibilityMode
  id: CompatibilityMode
  parent: System.Web.Configuration.MachineKeySection
  langs:
  - csharp
  name: CompatibilityMode
  nameWithType: MachineKeySection.CompatibilityMode
  fullName: System.Web.Configuration.MachineKeySection.CompatibilityMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define um valor que especifica se os métodos de criptografia atualizado para o modo de exibição de estado que foram introduzidos após a versão do .NET Framework versão 2.0 Service Pack 1."
  remarks: "Os métodos de criptografia atualizado nas versões posteriores do .NET Framework reduzem o risco de um invasor com êxito pode fazer engenharia reversa de `DecryptionKey` valor. Os métodos de criptografia mais antigos estão disponíveis para manter a compatibilidade com versões anteriores.       Todos os servidores em um Web farm devem ter a propriedade CompatibilityMode definido com o mesmo valor. Se o servidor que lê um tíquete de autenticação de formulários tem uma configuração CompatibilityMode diferente do servidor que criou o tíquete, o tíquete não reconhecido.       Os valores a seguir podem ser especificados para a propriedade CompatibilityMode:- `Framework20SP1`. Esse valor Especifica que o ASP.NET usa métodos de criptografia que estavam disponíveis em versões anteriores do ASP.NET que 2.0 SP2. Use esse valor para todos os servidores em um web farm se qualquer servidor tem uma versão do .NET Framework anteriores à 2.0 SP2. Este é o valor padrão, a menos que o arquivo Web. config do aplicativo tem o `targetFramework` atributo do `httpRuntime` elemento definido como &quot;4.5&quot;.      -   `Framework20SP2`. Esse valor Especifica que o ASP.NET usa métodos de criptografia atualizados que foram introduzidos no .NET Framework 2.0 SP2. Use esse valor para todos os servidores em um web farm, se todos os servidores têm o .NET Framework 2.0 SP2 ou posterior, mas pelo menos um não tem o .NET Framework 4.5.      -   `Framework45`. Aperfeiçoamentos de criptografia para ASP.NET 4.5 estão em vigor. Este é o valor padrão se o arquivo Web. config do aplicativo tem o `targetFramework` atributo do `httpRuntime` elemento definido como &quot;4.5&quot;.       Quando essa propriedade é definida como `Framework45`, as seguintes restrições estão em vigor: - se a <xref:System.Web.Configuration.MachineKeySection.DataProtectorType%2A>propriedade tem um valor, o <xref:System.Web.Configuration.MachineKeySection.ApplicationName%2A>propriedade também deve ter um valor.</xref:System.Web.Configuration.MachineKeySection.ApplicationName%2A> </xref:System.Web.Configuration.MachineKeySection.DataProtectorType%2A> O <xref:System.Security.Cryptography.DataProtector>classe exige o fornecimento de um nome de aplicativo não vazio.</xref:System.Security.Cryptography.DataProtector>      -A <xref:System.Web.Configuration.MachineKeySection.Validation%2A>atributo deve ser um algoritmo de validação real (por exemplo, MD5, SHA1, HMACSHA256, HMACSHA384, HMACSHA512) ou um algoritmo personalizado que as subclasses de <xref:System.Security.Cryptography.KeyedHashAlgorithm>tipo.</xref:System.Security.Cryptography.KeyedHashAlgorithm> </xref:System.Web.Configuration.MachineKeySection.Validation%2A> Os valores AES e 3DES são proibidos.      -O framework não produzirá cargas somente assinada. Tíquetes de autenticação de formulários serão sempre ser criptografados e assinados, independentemente de como o `protection` atributo o `forms` é definido no arquivo Web. config. Exibição de estado será sempre ser criptografado e assinado se `EnableViewStateMac` ou `RequireViewStateEncryption` está definido para uma determinada página.       Como resultado da atualização de segurança que é descrita em [boletim de segurança da Microsoft MS10-070](http://technet.microsoft.com/security/bulletin/MS10-070), o comportamento de criptografia padrão é o mesmo para o `Framework20SP1` e `Framework20SP2` configurações. Alterar o comportamento padrão não é recomendado, mas se você deseja fazer isso, consulte [como configurar o modo de criptografia herdados no ASP.NET](http://support.microsoft.com/kb/2425938)."
  syntax:
    content: public System.Web.Configuration.MachineKeyCompatibilityMode CompatibilityMode { get; set; }
    return:
      type: System.Web.Configuration.MachineKeyCompatibilityMode
      description: "Um valor que indica se os métodos de criptografia que foram introduzidos após o .NET Framework 2.0 SP1 versão são usados."
  overload: System.Web.Configuration.MachineKeySection.CompatibilityMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.MachineKeySection.DataProtectorType
  id: DataProtectorType
  parent: System.Web.Configuration.MachineKeySection
  langs:
  - csharp
  name: DataProtectorType
  nameWithType: MachineKeySection.DataProtectorType
  fullName: System.Web.Configuration.MachineKeySection.DataProtectorType
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o nome do tipo de protetor de dados. O padrão é &lt;xref:System.String.Empty?displayProperty=fullName&gt;."
  remarks: "Para especificar os algoritmos de proteção de dados personalizados para o ASP.NET, defina a <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=fullName>propriedade e <xref:System.Web.Configuration.MachineKeyCompatibilityMode>Defina essa propriedade como uma cadeia de caracteres que representa uma classe que deriva da <xref:System.Security.Cryptography.DataProtector>classe</xref:System.Security.Cryptography.DataProtector> de</xref:System.Web.Configuration.MachineKeyCompatibilityMode> </xref:System.Web.Configuration.MachineKeySection.CompatibilityMode%2A?displayProperty=fullName> Essa cadeia de caracteres corresponde do `providerClass` parâmetro que é passado para estático <xref:System.Security.Cryptography.DataProtector.Create%2A?displayProperty=fullName>método de fábrica.</xref:System.Security.Cryptography.DataProtector.Create%2A?displayProperty=fullName> A classe especificada é usada pelo <xref:System.Web.Security.MachineKey.Protect%2A?displayProperty=fullName>e <xref:System.Web.Security.MachineKey.Unprotect%2A?displayProperty=fullName>métodos mesmo se você não especificar o <xref:System.Web.Configuration.MachineKeyCompatibilityMode>opção.</xref:System.Web.Configuration.MachineKeyCompatibilityMode> </xref:System.Web.Security.MachineKey.Unprotect%2A?displayProperty=fullName> </xref:System.Web.Security.MachineKey.Protect%2A?displayProperty=fullName>       Se você definir essa propriedade, você também deve definir o <xref:System.Web.Configuration.MachineKeySection.ApplicationName%2A>propriedade.</xref:System.Web.Configuration.MachineKeySection.ApplicationName%2A>"
  syntax:
    content: public string DataProtectorType { get; set; }
    return:
      type: System.String
      description: "O nome do tipo de protetor de dados."
  overload: System.Web.Configuration.MachineKeySection.DataProtectorType*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.MachineKeySection.Decryption
  id: Decryption
  parent: System.Web.Configuration.MachineKeySection
  langs:
  - csharp
  name: Decryption
  nameWithType: MachineKeySection.Decryption
  fullName: System.Web.Configuration.MachineKeySection.Decryption
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Especifica o algoritmo de criptografia que é usado para criptografar e descriptografar dados de autenticação de formulários."
  remarks: "A propriedade de descriptografia suporta os seguintes valores de descriptografia:- `Auto`, que é o valor padrão, especifica que o ASP.NET determina qual algoritmo de criptografia a ser usado com base nas configurações de padrão de configuração.      - `AES`, que especifica que o ASP.NET usa o <xref:System.Web.Configuration.MachineKeyValidation>algoritmo para criptografar dados.</xref:System.Web.Configuration.MachineKeyValidation> `AES`é o algoritmo padrão para criptografar dados.      - `3DES`, que especifica que o ASP.NET usa o <xref:System.Web.Configuration.MachineKeyValidation>algoritmo para criptografar dados.</xref:System.Web.Configuration.MachineKeyValidation>      -Um algoritmo personalizado.       Essa propriedade é geralmente definida declarativamente `decryption` atributo do elemento do arquivo Web. config. Para obter mais informações, consulte o elemento."
  syntax:
    content: public string Decryption { get; set; }
    return:
      type: System.String
      description: "Um valor que indica o algoritmo que é usado para criptografar e descriptografar dados de autenticação de formulários. (Para obter informações sobre como especificar o algoritmo que é usado quando o estado de exibição é criptografado, consulte a propriedade <xref:System.Web.Configuration.MachineKeySection.Validation*>.) <xref uid=&quot;langword_csharp_Auto&quot; name=&quot;Auto&quot; href=&quot;&quot;> </xref> é o valor padrão.</xref:System.Web.Configuration.MachineKeySection.Validation*>"
  overload: System.Web.Configuration.MachineKeySection.Decryption*
  exceptions:
  - type: System.Configuration.ConfigurationErrorsException
    commentId: T:System.Configuration.ConfigurationErrorsException
    description: "O valor selecionado não é um dos valores de descriptografia."
  platform:
  - net462
- uid: System.Web.Configuration.MachineKeySection.DecryptionKey
  id: DecryptionKey
  parent: System.Web.Configuration.MachineKeySection
  langs:
  - csharp
  name: DecryptionKey
  nameWithType: MachineKeySection.DecryptionKey
  fullName: System.Web.Configuration.MachineKeySection.DecryptionKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define a chave usada para criptografar e descriptografar dados ou o processo pelo qual a chave é gerada."
  remarks: "A propriedade DecryptionKey é usada para criptografia e descriptografia, como autenticação de formulários do Windows e para o modo de exibição de estado quando o <xref:System.Web.Configuration.MachineKeySection.Validation%2A>propriedade é definida como &quot;3DES&quot; ou &quot;AES&quot;.</xref:System.Web.Configuration.MachineKeySection.Validation%2A>       Use a opção &quot;AutoGenerate&quot; para especificar que o ASP.NET gera uma chave aleatória e armazena na autoridade de segurança Local. A opção &quot;AutoGenerate&quot; faz parte do valor padrão.       Se você adicionar o modificador &quot;IsolateApps&quot; para o &quot;AutoGenerate&quot; <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>valor, o ASP.NET gera uma chave criptografada exclusiva para cada aplicativo por meio de cada aplicativo <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>.</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> </xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> Essa é a configuração padrão.       Se você adicionar o modificador &quot;IsolateByAppId&quot; para o &quot;AutoGenerate&quot; <xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A>valor, o ASP.NET gera uma chave criptografada exclusiva para cada aplicativo por meio de cada aplicativo <xref:System.Web.HttpRuntime.AppDomainAppId%2A>.</xref:System.Web.HttpRuntime.AppDomainAppId%2A> </xref:System.Web.Configuration.MachineKeySection.ValidationKey%2A> Se dois aplicativos distintos compartilham um caminho virtual (talvez porque esses aplicativos são executados em portas diferentes), este sinalizador pode ser usado para obter mais distingui-los uns dos outros. O sinalizador &quot;IsolateByAppId&quot; é entendido somente pelo ASP.NET 4.5, mas ele pode ser usado independentemente do <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode?displayProperty=fullName>configuração.</xref:System.Web.Configuration.MachineKeySection.CompatibilityMode?displayProperty=fullName>       Se você precisar oferecer suporte a configuração em uma rede de servidores de Web (um Web farm), defina a propriedade de DecryptionKey manualmente para garantir a configuração consistente. Para obter informações sobre como gerar manualmente os valores para o `DecryptionKey` de atributo, consulte [como: configurar MachineKey no ASP.NET 2.0](http://go.microsoft.com/fwlink/?linkid=155113).       Essa propriedade é geralmente definida declarativamente `DecryptionKey` atributo do elemento do arquivo Web. config. Para obter mais informações, consulte o elemento."
  example:
  - "The following example demonstrates how to set the DecryptionKey property by using code. This example is part of a larger example provided for the <xref:System.Web.Configuration.MachineKeySection> class.  \n  \n [!code-vb[System.Web.Configuration.MachineKeySection#3](~/add/codesnippet/visualbasic/p-system.web.configurati_32_1.vb)]\n [!code-cs[System.Web.Configuration.MachineKeySection#3](~/add/codesnippet/csharp/p-system.web.configurati_32_1.cs)]"
  syntax:
    content: public string DecryptionKey { get; set; }
    return:
      type: System.String
      description: "Um valor de chave ou um valor que indica como a chave é gerada. O padrão é &quot;AutoGenerate, IsolateApps&quot;."
  overload: System.Web.Configuration.MachineKeySection.DecryptionKey*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.MachineKeySection.Properties
  id: Properties
  parent: System.Web.Configuration.MachineKeySection
  langs:
  - csharp
  name: Properties
  nameWithType: MachineKeySection.Properties
  fullName: System.Web.Configuration.MachineKeySection.Properties
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override System.Configuration.ConfigurationPropertyCollection Properties { get; }
    return:
      type: System.Configuration.ConfigurationPropertyCollection
      description: "A ser adicionado."
  overload: System.Web.Configuration.MachineKeySection.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.MachineKeySection.Reset(System.Configuration.ConfigurationElement)
  id: Reset(System.Configuration.ConfigurationElement)
  parent: System.Web.Configuration.MachineKeySection
  langs:
  - csharp
  name: Reset(ConfigurationElement)
  nameWithType: MachineKeySection.Reset(ConfigurationElement)
  fullName: System.Web.Configuration.MachineKeySection.Reset(ConfigurationElement)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override void Reset (System.Configuration.ConfigurationElement parentElement);
    parameters:
    - id: parentElement
      type: System.Configuration.ConfigurationElement
      description: "A ser adicionado."
  overload: System.Web.Configuration.MachineKeySection.Reset*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.MachineKeySection.SetReadOnly
  id: SetReadOnly
  parent: System.Web.Configuration.MachineKeySection
  langs:
  - csharp
  name: SetReadOnly()
  nameWithType: MachineKeySection.SetReadOnly()
  fullName: System.Web.Configuration.MachineKeySection.SetReadOnly()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  syntax:
    content: protected override void SetReadOnly ();
    parameters: []
  overload: System.Web.Configuration.MachineKeySection.SetReadOnly*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.MachineKeySection.Validation
  id: Validation
  parent: System.Web.Configuration.MachineKeySection
  langs:
  - csharp
  name: Validation
  nameWithType: MachineKeySection.Validation
  fullName: System.Web.Configuration.MachineKeySection.Validation
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Especifica o algoritmo de hash que é usado para validação de autenticação de formulários e dados de estado de exibição."
  remarks: "A propriedade de validação dá suporte a algoritmos de criptografia que são definidos pelo <xref:System.Web.Configuration.MachineKeyValidation>enumeração.</xref:System.Web.Configuration.MachineKeyValidation> Essa propriedade é geralmente definida declarativamente `decryption` atributo do elemento do arquivo Web. config. Para obter mais informações, consulte o elemento."
  example:
  - "The following example demonstrates how to set the Validation property by using code. This example is part of a larger example provided for the <xref:System.Web.Configuration.MachineKeySection> class.  \n  \n [!code-vb[System.Web.Configuration.MachineKeySection#4](~/add/codesnippet/visualbasic/p-system.web.configurati_184_1.vb)]\n [!code-cs[System.Web.Configuration.MachineKeySection#4](~/add/codesnippet/csharp/p-system.web.configurati_184_1.cs)]"
  syntax:
    content: public System.Web.Configuration.MachineKeyValidation Validation { get; set; }
    return:
      type: System.Web.Configuration.MachineKeyValidation
      description: "Um valor que indica o algoritmo de hash que é usado para validar a autenticação e exibir dados de estado de formulários."
  overload: System.Web.Configuration.MachineKeySection.Validation*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.MachineKeySection.ValidationAlgorithm
  id: ValidationAlgorithm
  parent: System.Web.Configuration.MachineKeySection
  langs:
  - csharp
  name: ValidationAlgorithm
  nameWithType: MachineKeySection.ValidationAlgorithm
  fullName: System.Web.Configuration.MachineKeySection.ValidationAlgorithm
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define o nome de um algoritmo personalizado que é usado para validar a autenticação de formulários e exibir dados de estado."
  remarks: "Os algoritmos predefinidos disponíveis são definidos pelo <xref:System.Web.Configuration.MachineKeyValidation>enumeração.</xref:System.Web.Configuration.MachineKeyValidation> Se você quiser usar um algoritmo personalizado, você não precisa definir essa propriedade. Definir o <xref:System.Web.Configuration.MachineKeySection.Validation%2A>propriedade o para o nome do algoritmo personalizado.</xref:System.Web.Configuration.MachineKeySection.Validation%2A> Quando você faz isso, essa propriedade será definida automaticamente como <xref:System.Web.Configuration.MachineKeyValidation>.</xref:System.Web.Configuration.MachineKeyValidation>       Você pode definir a propriedade ValidationAlgorithm declarativamente no arquivo Web. config ou programaticamente no código.       Para definir essa propriedade declarativamente, você deve usar o `validationAlgorithm` atributo do elemento no arquivo de configuração. Esse atributo pode ser definido para o nome de um algoritmo predefinido ou de um algoritmo personalizado. Os algoritmos predefinidos são definidos pelo <xref:System.Web.Configuration.MachineKeyValidation>enumeração.</xref:System.Web.Configuration.MachineKeyValidation> Algoritmos personalizados são especificados no `validationAlgorithm` atributo usando o &quot;alg:&quot; prefixo seguido do nome do algoritmo. Se você usar esse formato para especificar um algoritmo personalizado, o <xref:System.Web.Configuration.MachineKeySection.Validation%2A>está definida como <xref:System.Web.Configuration.MachineKeyValidation>e essa propriedade é definida como o nome que segue a &quot;alg:&quot; prefixo.</xref:System.Web.Configuration.MachineKeyValidation> </xref:System.Web.Configuration.MachineKeySection.Validation%2A>       Para definir essa propriedade programaticamente, use o valor de um dos algoritmos predefinidos que são definidos pelo <xref:System.Web.Configuration.MachineKeyValidation>enumeração, ou defina essa propriedade como um nome de algoritmo personalizado.</xref:System.Web.Configuration.MachineKeyValidation> Se você definir essa propriedade como o nome de um algoritmo personalizado, defina a <xref:System.Web.Configuration.MachineKeySection.Validation%2A>propriedade <xref:System.Web.Configuration.MachineKeyValidation>.</xref:System.Web.Configuration.MachineKeyValidation> </xref:System.Web.Configuration.MachineKeySection.Validation%2A>"
  syntax:
    content: public string ValidationAlgorithm { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém o nome de um algoritmo predefinido ou o nome de um algoritmo personalizado."
  overload: System.Web.Configuration.MachineKeySection.ValidationAlgorithm*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Configuration.MachineKeySection.ValidationKey
  id: ValidationKey
  parent: System.Web.Configuration.MachineKeySection
  langs:
  - csharp
  name: ValidationKey
  nameWithType: MachineKeySection.ValidationKey
  fullName: System.Web.Configuration.MachineKeySection.ValidationKey
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Configuration
  summary: "Obtém ou define a chave que é usada para validar os dados de estado de autenticação e o modo de exibição de formulários ou o processo pelo qual a chave é gerada."
  remarks: "A propriedade ValidationKey é usada quando `enableViewStateMAC` é `true` para criar um código de autenticação de mensagem (MAC) para habilitar o ASP.NET determinar se o estado de exibição foi violado. A propriedade de ValidationKey também é usada para gerar IDs para garantir que as variáveis de estado da sessão estão isoladas entre aplicativos de sessão fora do processo, específicos do aplicativo.       Use a opção &quot;AutoGenerate&quot; para especificar que o ASP.NET gera uma chave aleatória e armazena na autoridade de segurança Local. A opção &quot;AutoGenerate&quot; faz parte do valor padrão.       Se você adicionar o modificador &quot;IsolateApps&quot; para o valor de ValidationKey &quot;AutoGenerate&quot;, o ASP.NET gera uma chave criptografada exclusiva para cada aplicativo por meio de cada aplicativo <xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A>.</xref:System.Web.HttpRuntime.AppDomainAppVirtualPath%2A> Essa é a configuração padrão.       Se você adicionar o modificador &quot;IsolateByAppId&quot; para o valor de ValidationKey &quot;AutoGenerate&quot;, o ASP.NET gera uma chave criptografada exclusiva para cada aplicativo por meio de cada aplicativo <xref:System.Web.HttpRuntime.AppDomainAppId%2A>.</xref:System.Web.HttpRuntime.AppDomainAppId%2A> Se dois aplicativos distintos compartilham um caminho virtual (talvez porque esses aplicativos são executados em portas diferentes), este sinalizador pode ser usado para obter mais distingui-los uns dos outros. O sinalizador &quot;IsolateByAppId&quot; é entendido somente pelo ASP.NET 4.5, mas ele pode ser usado independentemente do <xref:System.Web.Configuration.MachineKeySection.CompatibilityMode?displayProperty=fullName>configuração.</xref:System.Web.Configuration.MachineKeySection.CompatibilityMode?displayProperty=fullName>       Se você precisar oferecer suporte a configuração em uma rede de servidores de Web (um Web farm), defina a propriedade de ValidationKey manualmente para garantir a configuração consistente. Para obter informações sobre como gerar manualmente os valores para o `DecryptionKey` de atributo, consulte [como: configurar MachineKey no ASP.NET 2.0](http://go.microsoft.com/fwlink/?linkid=155113).       Essa propriedade é geralmente definida declarativamente `validationKey` atributo do elemento do arquivo Web. config."
  example:
  - "The following example shows how to set the ValidationKey property by using code. This example is part of a larger example provided for the <xref:System.Web.Configuration.MachineKeySection> class.  \n  \n [!code-vb[System.Web.Configuration.MachineKeySection#2](~/add/codesnippet/visualbasic/p-system.web.configurati_69_1.vb)]\n [!code-cs[System.Web.Configuration.MachineKeySection#2](~/add/codesnippet/csharp/p-system.web.configurati_69_1.cs)]"
  syntax:
    content: public string ValidationKey { get; set; }
    return:
      type: System.String
      description: "Um valor de chave ou um valor que indica como a chave é gerada. O padrão é &quot;AutoGenerate, IsolateApps&quot;."
  overload: System.Web.Configuration.MachineKeySection.ValidationKey*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Configuration.ConfigurationSection
  isExternal: false
  name: System.Configuration.ConfigurationSection
- uid: System.Configuration.ConfigurationErrorsException
  parent: System.Configuration
  isExternal: false
  name: ConfigurationErrorsException
  nameWithType: ConfigurationErrorsException
  fullName: System.Configuration.ConfigurationErrorsException
- uid: System.Web.Configuration.MachineKeySection.#ctor
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: MachineKeySection()
  nameWithType: MachineKeySection.MachineKeySection()
  fullName: System.Web.Configuration.MachineKeySection.MachineKeySection()
- uid: System.Web.Configuration.MachineKeySection.ApplicationName
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: ApplicationName
  nameWithType: MachineKeySection.ApplicationName
  fullName: System.Web.Configuration.MachineKeySection.ApplicationName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Configuration.MachineKeySection.CompatibilityMode
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: CompatibilityMode
  nameWithType: MachineKeySection.CompatibilityMode
  fullName: System.Web.Configuration.MachineKeySection.CompatibilityMode
- uid: System.Web.Configuration.MachineKeyCompatibilityMode
  parent: System.Web.Configuration
  isExternal: false
  name: MachineKeyCompatibilityMode
  nameWithType: MachineKeyCompatibilityMode
  fullName: System.Web.Configuration.MachineKeyCompatibilityMode
- uid: System.Web.Configuration.MachineKeySection.DataProtectorType
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: DataProtectorType
  nameWithType: MachineKeySection.DataProtectorType
  fullName: System.Web.Configuration.MachineKeySection.DataProtectorType
- uid: System.Web.Configuration.MachineKeySection.Decryption
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: Decryption
  nameWithType: MachineKeySection.Decryption
  fullName: System.Web.Configuration.MachineKeySection.Decryption
- uid: System.Web.Configuration.MachineKeySection.DecryptionKey
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: DecryptionKey
  nameWithType: MachineKeySection.DecryptionKey
  fullName: System.Web.Configuration.MachineKeySection.DecryptionKey
- uid: System.Web.Configuration.MachineKeySection.Properties
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: Properties
  nameWithType: MachineKeySection.Properties
  fullName: System.Web.Configuration.MachineKeySection.Properties
- uid: System.Configuration.ConfigurationPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: ConfigurationPropertyCollection
  nameWithType: ConfigurationPropertyCollection
  fullName: System.Configuration.ConfigurationPropertyCollection
- uid: System.Web.Configuration.MachineKeySection.Reset(System.Configuration.ConfigurationElement)
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: Reset(ConfigurationElement)
  nameWithType: MachineKeySection.Reset(ConfigurationElement)
  fullName: System.Web.Configuration.MachineKeySection.Reset(ConfigurationElement)
- uid: System.Configuration.ConfigurationElement
  parent: System.Configuration
  isExternal: false
  name: ConfigurationElement
  nameWithType: ConfigurationElement
  fullName: System.Configuration.ConfigurationElement
- uid: System.Web.Configuration.MachineKeySection.SetReadOnly
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: SetReadOnly()
  nameWithType: MachineKeySection.SetReadOnly()
  fullName: System.Web.Configuration.MachineKeySection.SetReadOnly()
- uid: System.Web.Configuration.MachineKeySection.Validation
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: Validation
  nameWithType: MachineKeySection.Validation
  fullName: System.Web.Configuration.MachineKeySection.Validation
- uid: System.Web.Configuration.MachineKeyValidation
  parent: System.Web.Configuration
  isExternal: false
  name: MachineKeyValidation
  nameWithType: MachineKeyValidation
  fullName: System.Web.Configuration.MachineKeyValidation
- uid: System.Web.Configuration.MachineKeySection.ValidationAlgorithm
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: ValidationAlgorithm
  nameWithType: MachineKeySection.ValidationAlgorithm
  fullName: System.Web.Configuration.MachineKeySection.ValidationAlgorithm
- uid: System.Web.Configuration.MachineKeySection.ValidationKey
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: ValidationKey
  nameWithType: MachineKeySection.ValidationKey
  fullName: System.Web.Configuration.MachineKeySection.ValidationKey
- uid: System.Web.Configuration.MachineKeySection.#ctor*
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: MachineKeySection
  nameWithType: MachineKeySection.MachineKeySection
- uid: System.Web.Configuration.MachineKeySection.ApplicationName*
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: ApplicationName
  nameWithType: MachineKeySection.ApplicationName
- uid: System.Web.Configuration.MachineKeySection.CompatibilityMode*
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: CompatibilityMode
  nameWithType: MachineKeySection.CompatibilityMode
- uid: System.Web.Configuration.MachineKeySection.DataProtectorType*
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: DataProtectorType
  nameWithType: MachineKeySection.DataProtectorType
- uid: System.Web.Configuration.MachineKeySection.Decryption*
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: Decryption
  nameWithType: MachineKeySection.Decryption
- uid: System.Web.Configuration.MachineKeySection.DecryptionKey*
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: DecryptionKey
  nameWithType: MachineKeySection.DecryptionKey
- uid: System.Web.Configuration.MachineKeySection.Properties*
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: Properties
  nameWithType: MachineKeySection.Properties
- uid: System.Web.Configuration.MachineKeySection.Reset*
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: Reset
  nameWithType: MachineKeySection.Reset
- uid: System.Web.Configuration.MachineKeySection.SetReadOnly*
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: SetReadOnly
  nameWithType: MachineKeySection.SetReadOnly
- uid: System.Web.Configuration.MachineKeySection.Validation*
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: Validation
  nameWithType: MachineKeySection.Validation
- uid: System.Web.Configuration.MachineKeySection.ValidationAlgorithm*
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: ValidationAlgorithm
  nameWithType: MachineKeySection.ValidationAlgorithm
- uid: System.Web.Configuration.MachineKeySection.ValidationKey*
  parent: System.Web.Configuration.MachineKeySection
  isExternal: false
  name: ValidationKey
  nameWithType: MachineKeySection.ValidationKey
