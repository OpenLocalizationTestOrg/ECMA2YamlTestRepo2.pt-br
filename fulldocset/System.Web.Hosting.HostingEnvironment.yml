### YamlMime:ManagedReference
items:
- uid: System.Web.Hosting.HostingEnvironment
  id: HostingEnvironment
  children:
  - System.Web.Hosting.HostingEnvironment.#ctor
  - System.Web.Hosting.HostingEnvironment.ApplicationHost
  - System.Web.Hosting.HostingEnvironment.ApplicationID
  - System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath
  - System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath
  - System.Web.Hosting.HostingEnvironment.Cache
  - System.Web.Hosting.HostingEnvironment.DecrementBusyCount
  - System.Web.Hosting.HostingEnvironment.Impersonate
  - System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)
  - System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)
  - System.Web.Hosting.HostingEnvironment.InClientBuildManager
  - System.Web.Hosting.HostingEnvironment.IncrementBusyCount
  - System.Web.Hosting.HostingEnvironment.InitializationException
  - System.Web.Hosting.HostingEnvironment.InitializeLifetimeService
  - System.Web.Hosting.HostingEnvironment.InitiateShutdown
  - System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment
  - System.Web.Hosting.HostingEnvironment.IsHosted
  - System.Web.Hosting.HostingEnvironment.MapPath(System.String)
  - System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU
  - System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU
  - System.Web.Hosting.HostingEnvironment.MessageReceived
  - System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})
  - System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})
  - System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)
  - System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)
  - System.Web.Hosting.HostingEnvironment.SetCultures
  - System.Web.Hosting.HostingEnvironment.SetCultures(System.String)
  - System.Web.Hosting.HostingEnvironment.ShutdownReason
  - System.Web.Hosting.HostingEnvironment.SiteName
  - System.Web.Hosting.HostingEnvironment.StopListening
  - System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)
  - System.Web.Hosting.HostingEnvironment.VirtualPathProvider
  langs:
  - csharp
  name: HostingEnvironment
  nameWithType: HostingEnvironment
  fullName: System.Web.Hosting.HostingEnvironment
  type: Class
  summary: "Fornece funções de gerenciamento de aplicativos e serviços de aplicativo para um aplicativo gerenciado no seu domínio de aplicativo. Essa classe não pode ser herdada."
  remarks: "Cada domínio de aplicativo gerenciado contém uma instância estática da classe HostingEnvironment, que fornece acesso às funções de gerenciamento de aplicativos e serviços de aplicativos."
  example:
  - "The following code example is a webpage that displays the application information available from the HostingEnvironment object.  \n  \n [!code-vb[System.Web.Hosting.HostingEnvironment#1](~/add/codesnippet/visualbasic/t-system.web.hosting.hos_1.aspx)]\n [!code-cs[System.Web.Hosting.HostingEnvironment#1](~/add/codesnippet/csharp/t-system.web.hosting.hos_1.aspx)]"
  syntax:
    content: 'public sealed class HostingEnvironment : MarshalByRefObject'
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  implements: []
  inheritedMembers:
  - System.MarshalByRefObject.CreateObjRef(System.Type)
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.#ctor
  id: '#ctor'
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: HostingEnvironment()
  nameWithType: HostingEnvironment.HostingEnvironment()
  fullName: System.Web.Hosting.HostingEnvironment.HostingEnvironment()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Hosting.HostingEnvironment&quot;> </xref> classe."
  remarks: "O construtor HostingEnvironment inicializa o <xref:System.Web.Hosting.HostingEnvironment>objeto.</xref:System.Web.Hosting.HostingEnvironment> O construtor de HostingEnvironment é chamado apenas uma vez, o aplicativo <xref:System.Web.Hosting.ApplicationManager>objeto.</xref:System.Web.Hosting.ApplicationManager> Mais de uma vez ao chamar o construtor HostingEnvironment fará com que um <xref:System.InvalidOperationException>exceção seja lançada.</xref:System.InvalidOperationException>"
  syntax:
    content: public HostingEnvironment ();
    parameters: []
  overload: System.Web.Hosting.HostingEnvironment.#ctor*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O construtor de HostingEnvironment é chamado mais de uma vez."
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.ApplicationHost
  id: ApplicationHost
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: ApplicationHost
  nameWithType: HostingEnvironment.ApplicationHost
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationHost
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Essa propriedade oferece suporte a [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] infraestrutura e não se destina a ser usado diretamente no seu código."
  syntax:
    content: public static System.Web.Hosting.IApplicationHost ApplicationHost { get; }
    return:
      type: System.Web.Hosting.IApplicationHost
      description: "Um objeto que contém informações sobre o host de aplicativo."
  overload: System.Web.Hosting.HostingEnvironment.ApplicationHost*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.ApplicationID
  id: ApplicationID
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: ApplicationID
  nameWithType: HostingEnvironment.ApplicationID
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationID
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém o identificador exclusivo do aplicativo."
  remarks: "O aplicativo deve ser executado com <xref:System.Web.AspNetHostingPermissionLevel>definido como alta confiança para acessar a propriedade ApplicationID.</xref:System.Web.AspNetHostingPermissionLevel>"
  syntax:
    content: public static string ApplicationID { get; }
    return:
      type: System.String
      description: "O identificador exclusivo do aplicativo."
  overload: System.Web.Hosting.HostingEnvironment.ApplicationID*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath
  id: ApplicationPhysicalPath
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: ApplicationPhysicalPath
  nameWithType: HostingEnvironment.ApplicationPhysicalPath
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém o caminho físico em disco para o diretório do aplicativo."
  remarks: ''
  example:
  - "The following code example uses the ApplicationPhysicalPath property to construct a path to a data file in the application's App_Data directory. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-cs[System.Web.Hosting.VirtualPathProvider#27](~/add/codesnippet/csharp/p-system.web.hosting.hos_1.cs)]\n [!code-vb[System.Web.Hosting.VirtualPathProvider#27](~/add/codesnippet/visualbasic/p-system.web.hosting.hos_1.vb)]"
  syntax:
    content: public static string ApplicationPhysicalPath { get; }
    return:
      type: System.String
      description: "O caminho físico em disco para o diretório do aplicativo."
  overload: System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath
  id: ApplicationVirtualPath
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: ApplicationVirtualPath
  nameWithType: HostingEnvironment.ApplicationVirtualPath
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém o caminho virtual raiz do aplicativo."
  remarks: "A propriedade ApplicationVirtualPath sempre retorna &quot;`/&quot;` como o primeiro caractere do valor retornado. Se o aplicativo está localizado na raiz do site, o valor de retorno é &quot;`/&quot;`."
  syntax:
    content: public static string ApplicationVirtualPath { get; }
    return:
      type: System.String
      description: "O caminho virtual raiz do aplicativo com nenhuma barra invertida (/)."
  overload: System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.Cache
  id: Cache
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: Cache
  nameWithType: HostingEnvironment.Cache
  fullName: System.Web.Hosting.HostingEnvironment.Cache
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém o <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> instância para o aplicativo atual."
  syntax:
    content: public static System.Web.Caching.Cache Cache { get; }
    return:
      type: System.Web.Caching.Cache
      description: "Atual <xref href=&quot;System.Web.Caching.Cache&quot;> </xref> instância."
  overload: System.Web.Hosting.HostingEnvironment.Cache*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.DecrementBusyCount
  id: DecrementBusyCount
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: DecrementBusyCount()
  nameWithType: HostingEnvironment.DecrementBusyCount()
  fullName: System.Web.Hosting.HostingEnvironment.DecrementBusyCount()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Reduz a contagem de objetos ocupados no ambiente hospedado por um."
  remarks: "Quando um objeto registrado ocupado termina, ele chama o método de DecrementBusyCount para sinalizar o <xref:System.Web.Hosting.HostingEnvironment>que concluiu o processamento do objeto e reduzir a contagem de objetos ocupados por um.</xref:System.Web.Hosting.HostingEnvironment>       Se a contagem de ocupado for maior que zero, o aplicativo de hospedagem não terá tempo limite mesmo se não houver nenhuma solicitação pendente.       Deve haver uma chamada ao método DecrementBusyCount para cada chamada para o <xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A>método.</xref:System.Web.Hosting.HostingEnvironment.IncrementBusyCount%2A>"
  syntax:
    content: public static void DecrementBusyCount ();
    parameters: []
  overload: System.Web.Hosting.HostingEnvironment.DecrementBusyCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.Impersonate
  id: Impersonate
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: Impersonate()
  nameWithType: HostingEnvironment.Impersonate()
  fullName: System.Web.Hosting.HostingEnvironment.Impersonate()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Representa o usuário representado pela identidade do aplicativo."
  syntax:
    content: public static IDisposable Impersonate ();
    parameters: []
    return:
      type: System.IDisposable
      description: "Um <xref:System.IDisposable>objeto que representa o usuário do Windows antes da representação; isso pode objeto ser usado para reverter para o contexto do usuário original.</xref:System.IDisposable>"
  overload: System.Web.Hosting.HostingEnvironment.Impersonate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O processo não pode representar."
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)
  id: Impersonate(System.IntPtr)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: Impersonate(IntPtr)
  nameWithType: HostingEnvironment.Impersonate(IntPtr)
  fullName: System.Web.Hosting.HostingEnvironment.Impersonate(IntPtr)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Representa o usuário representado pelo token de usuário especificado."
  syntax:
    content: public static IDisposable Impersonate (IntPtr token);
    parameters:
    - id: token
      type: System.IntPtr
      description: "O identificador de um token de conta do Windows."
    return:
      type: System.IDisposable
      description: "Um <xref:System.IDisposable>objeto que representa o usuário do Windows antes da representação; isso pode objeto ser usado para reverter para o contexto do usuário original.</xref:System.IDisposable>"
  overload: System.Web.Hosting.HostingEnvironment.Impersonate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O processo não pode representar."
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)
  id: Impersonate(System.IntPtr,System.String)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: Impersonate(IntPtr,String)
  nameWithType: HostingEnvironment.Impersonate(IntPtr,String)
  fullName: System.Web.Hosting.HostingEnvironment.Impersonate(IntPtr,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Representa o usuário especificado pelos parâmetros de configuração para o caminho virtual especificado ou o token de usuário especificado."
  remarks: "O método Impersonate representa o usuário que é o resultado após a aplicação de todos os elementos nas definições de configuração que afetam o caminho virtual especificado. Se um `identity` elemento não for especificado para o caminho virtual, o método Impersonate representa a conta do Windows especificada."
  syntax:
    content: public static IDisposable Impersonate (IntPtr userToken, string virtualPath);
    parameters:
    - id: userToken
      type: System.IntPtr
      description: "O identificador de um token de conta do Windows."
    - id: virtualPath
      type: System.String
      description: "O caminho para o recurso solicitado."
    return:
      type: System.IDisposable
      description: "Um <xref:System.IDisposable>objeto que representa o usuário do Windows antes da representação; isso pode objeto ser usado para reverter para o contexto do usuário original.</xref:System.IDisposable>"
  overload: System.Web.Hosting.HostingEnvironment.Impersonate*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "O processo não pode representar."
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.InClientBuildManager
  id: InClientBuildManager
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: InClientBuildManager
  nameWithType: HostingEnvironment.InClientBuildManager
  fullName: System.Web.Hosting.HostingEnvironment.InClientBuildManager
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém um valor que indica se o ambiente de hospedagem tem acesso para o ASP.NET sistema de compilação."
  syntax:
    content: public static bool InClientBuildManager { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o domínio de aplicativo é o domínio do aplicativo ASP.NET hospedado usado em <xref uid=&quot;langword_csharp_ClientBuildManager&quot; name=&quot;ClientBuildManager&quot; href=&quot;&quot;> </xref> cenários; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.HostingEnvironment.InClientBuildManager*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.IncrementBusyCount
  id: IncrementBusyCount
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: IncrementBusyCount()
  nameWithType: HostingEnvironment.IncrementBusyCount()
  fullName: System.Web.Hosting.HostingEnvironment.IncrementBusyCount()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Aumenta a contagem de objetos ocupados no ambiente hospedado por um."
  remarks: "Sinal de objetos registrados a <xref:System.Web.Hosting.HostingEnvironment>objeto que está em execução e para aumentar a contagem de objetos ocupados por um.</xref:System.Web.Hosting.HostingEnvironment>       Se a contagem de ocupado for maior que zero, o aplicativo de hospedagem não terá tempo limite mesmo se não houver nenhuma solicitação pendente.       Deve haver uma chamada para o <xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A>método para cada chamada ao método IncrementBusyCount.</xref:System.Web.Hosting.HostingEnvironment.DecrementBusyCount%2A>"
  syntax:
    content: public static void IncrementBusyCount ();
    parameters: []
  overload: System.Web.Hosting.HostingEnvironment.IncrementBusyCount*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.InitializationException
  id: InitializationException
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: InitializationException
  nameWithType: HostingEnvironment.InitializationException
  fullName: System.Web.Hosting.HostingEnvironment.InitializationException
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém a qualquer exceção lançada durante a inicialização do <xref href=&quot;System.Web.Hosting.HostingEnvironment&quot;> </xref> objeto."
  syntax:
    content: public static Exception InitializationException { get; }
    return:
      type: System.Exception
      description: "A exceção lançada durante a inicialização do <xref href=&quot;System.Web.Hosting.HostingEnvironment&quot;> </xref> objeto. Se nenhuma exceção foi lançada, retorna <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.HostingEnvironment.InitializationException*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.InitializeLifetimeService
  id: InitializeLifetimeService
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: InitializeLifetimeService()
  nameWithType: HostingEnvironment.InitializeLifetimeService()
  fullName: System.Web.Hosting.HostingEnvironment.InitializeLifetimeService()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Fornece o <xref href=&quot;System.Web.Hosting.HostingEnvironment&quot;> </xref> objeto de tempo de vida infinito, impedindo que uma concessão que está sendo criado."
  remarks: "Esse método substitui o <xref:System.MarshalByRefObject.InitializeLifetimeService%2A>método na sua classe base.</xref:System.MarshalByRefObject.InitializeLifetimeService%2A> Sempre retorna `null` e impede que uma concessão de ser criado que limita o <xref:System.Web.Hosting.HostingEnvironment>tempo de vida do objeto.</xref:System.Web.Hosting.HostingEnvironment>"
  syntax:
    content: public override object InitializeLifetimeService ();
    parameters: []
    return:
      type: System.Object
      description: "Always <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  overload: System.Web.Hosting.HostingEnvironment.InitializeLifetimeService*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.InitiateShutdown
  id: InitiateShutdown
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: InitiateShutdown()
  nameWithType: HostingEnvironment.InitiateShutdown()
  fullName: System.Web.Hosting.HostingEnvironment.InitiateShutdown()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Desligar o aplicativo da web associado a este host é iniciado e remove objetos registrados do sistema."
  remarks: "Use o método InitiateShutdown para parar um domínio de aplicativo web e remova quaisquer objetos registrados com o <xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A>método.</xref:System.Web.Hosting.HostingEnvironment.RegisterObject%2A> Esse método retorna imediatamente, antes do desligamento ser concluído.       O <xref:System.Web.Hosting.IRegisteredObject.Stop%2A>método é chamado em cada objeto registrado com o parâmetro passado definido como `false` para permitir que cada objeto registrado desligado de forma assíncrona.</xref:System.Web.Hosting.IRegisteredObject.Stop%2A> Após esperar pelo período de tempo especificado no `shutdownTimeout` atributo do elemento de configuração, o <xref:System.Web.Hosting.IRegisteredObject.Stop%2A>método é chamado novamente com o parâmetro passado definido como `true` para cada objeto registrado restantes.</xref:System.Web.Hosting.IRegisteredObject.Stop%2A>       Depois que todos os objetos registrados terminar de desligamento, o <xref:System.Web.Hosting.HostingEnvironment>objetos desliga o domínio de aplicativo.</xref:System.Web.Hosting.HostingEnvironment>"
  syntax:
    content: public static void InitiateShutdown ();
    parameters: []
  overload: System.Web.Hosting.HostingEnvironment.InitiateShutdown*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment
  id: IsDevelopmentEnvironment
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: IsDevelopmentEnvironment
  nameWithType: HostingEnvironment.IsDevelopmentEnvironment
  fullName: System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém um valor que indicats se o aplicativo atual está em um ambiente de desenvolvimento."
  syntax:
    content: public static bool IsDevelopmentEnvironment { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o aplicativo estiver em um ambiente de desenvolvimento. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.IsHosted
  id: IsHosted
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: IsHosted
  nameWithType: HostingEnvironment.IsHosted
  fullName: System.Web.Hosting.HostingEnvironment.IsHosted
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém um valor que indica se o domínio de aplicativo atual está sendo hospedado por um <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> objeto."
  syntax:
    content: public static bool IsHosted { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o domínio de aplicativo for hospedado por um <xref href=&quot;System.Web.Hosting.ApplicationManager&quot;> </xref> objeto; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Hosting.HostingEnvironment.IsHosted*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.MapPath(System.String)
  id: MapPath(System.String)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: MapPath(String)
  nameWithType: HostingEnvironment.MapPath(String)
  fullName: System.Web.Hosting.HostingEnvironment.MapPath(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Mapeia um caminho virtual para um caminho físico no servidor."
  syntax:
    content: public static string MapPath (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho virtual (absoluto ou relativo)."
    return:
      type: System.String
      description: "O caminho físico no servidor especificado por <code> virtualPath </code>."
  overload: System.Web.Hosting.HostingEnvironment.MapPath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU
  id: MaxConcurrentRequestsPerCPU
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: MaxConcurrentRequestsPerCPU
  nameWithType: HostingEnvironment.MaxConcurrentRequestsPerCPU
  fullName: System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém ou define o máximo de solicitações simultâneo por CPU."
  syntax:
    content: public static int MaxConcurrentRequestsPerCPU { get; set; }
    return:
      type: System.Int32
      description: "O máximo de solicitações simultâneo por CPU."
  overload: System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU
  id: MaxConcurrentThreadsPerCPU
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: MaxConcurrentThreadsPerCPU
  nameWithType: HostingEnvironment.MaxConcurrentThreadsPerCPU
  fullName: System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém ou define o máximo de threads simultâneo por CPU."
  syntax:
    content: public static int MaxConcurrentThreadsPerCPU { get; set; }
    return:
      type: System.Int32
      description: "O máximo de threads de simultâneo por CPU."
  overload: System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.MessageReceived
  id: MessageReceived
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: MessageReceived()
  nameWithType: HostingEnvironment.MessageReceived()
  fullName: System.Web.Hosting.HostingEnvironment.MessageReceived()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Este método oferece suporte a [!INCLUDE[vstecasp](~/add/includes/vstecasp-md.md)] infraestrutura e não se destina a ser usado diretamente no seu código."
  syntax:
    content: public static void MessageReceived ();
    parameters: []
  overload: System.Web.Hosting.HostingEnvironment.MessageReceived*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})
  id: QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: QueueBackgroundWorkItem(Action<CancellationToken>)
  nameWithType: HostingEnvironment.QueueBackgroundWorkItem(Action<CancellationToken>)
  fullName: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(Action<CancellationToken>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "[Com suporte no .NET Framework 4.5.2 e versões posteriores]       Agenda uma tarefa que pode ser executado em segundo plano, independentemente de qualquer solicitação."
  remarks: "Difere de um item de trabalho normal do ThreadPool ASP.NET pode manter o controle de trabalho quantos itens registrados por essa API atualmente em execução e o tempo de execução do ASP.NET tentará atraso AppDomain desligamento até que esses itens de trabalho concluiu a execução. Esta API não pode ser chamada fora de um AppDomain gerenciados pelo ASP.NET. O CancellationToken fornecido sinalizará quando o aplicativo está sendo desligado.       QueueBackgroundWorkItem usa um retorno de chamada de retorno; o item de trabalho será considerado concluída quando o retorno de chamada retorna."
  syntax:
    content: public static void QueueBackgroundWorkItem (Action<System.Threading.CancellationToken> workItem);
    parameters:
    - id: workItem
      type: System.Action{System.Threading.CancellationToken}
      description: "Uma unidade de execução."
  overload: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})
  id: QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: QueueBackgroundWorkItem(Func<CancellationToken,Task>)
  nameWithType: HostingEnvironment.QueueBackgroundWorkItem(Func<CancellationToken,Task>)
  fullName: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(Func<CancellationToken,Task>)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "[Com suporte no .NET Framework 4.5.2 e versões posteriores]       Agenda uma tarefa que pode ser executado em segundo plano, independentemente de qualquer solicitação."
  remarks: "Difere de um item de trabalho normal do ThreadPool ASP.NET pode manter o controle de trabalho quantos itens registrados por essa API atualmente em execução e o tempo de execução do ASP.NET tentará atraso AppDomain desligamento até que esses itens de trabalho concluiu a execução. Esta API não pode ser chamada fora de um AppDomain gerenciados pelo ASP.NET. O CancellationToken fornecido sinalizará quando o aplicativo está sendo desligado.       QueueBackgroundWorkItem usa um retorno de chamada de retorno; o item de trabalho será considerado concluída quando a tarefa retornada faz a transição para um estado terminal."
  syntax:
    content: public static void QueueBackgroundWorkItem (Func<System.Threading.CancellationToken,System.Threading.Tasks.Task> workItem);
    parameters:
    - id: workItem
      type: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task}
      description: "Uma unidade de execução."
  overload: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)
  id: RegisterObject(System.Web.Hosting.IRegisteredObject)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: RegisterObject(IRegisteredObject)
  nameWithType: HostingEnvironment.RegisterObject(IRegisteredObject)
  fullName: System.Web.Hosting.HostingEnvironment.RegisterObject(IRegisteredObject)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Coloca um objeto na lista de objetos registrados para o aplicativo."
  remarks: "O <xref:System.Web.Hosting.ApplicationManager>classe permite que os métodos fora do domínio de aplicativo atual para criar, gerenciar e destruir os objetos dentro do domínio de aplicativo atual.</xref:System.Web.Hosting.ApplicationManager> O método RegisterObject é usado para registrar os objetos criados anteriormente com o ambiente de hospedagem. Objetos registrados com o método RegisterObject devem implementar o <xref:System.Web.Hosting.IRegisteredObject>interface.</xref:System.Web.Hosting.IRegisteredObject>       Para usar um objeto registrado, siga estas etapas: 1.  Criar uma nova instância do objeto registrado ao chamar o <xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=fullName>método.</xref:System.Web.Hosting.ApplicationManager.CreateObject%2A?displayProperty=fullName>      2.  Chame um método de tipo específico para inicializar o novo objeto. O método de inicialização, chame o método de RegisterObject para adicionar o objeto à lista de objetos registrados.      3.  Chamar o <xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=fullName>método para retornar o objeto registrado quando necessário.</xref:System.Web.Hosting.ApplicationManager.GetObject%2A?displayProperty=fullName>      4.  Quando você deseja interromper seu objeto, chame o <xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName>método.</xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName> O <xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName>método por sua vez chama o <xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName>método.</xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName> </xref:System.Web.Hosting.ApplicationManager.StopObject%2A?displayProperty=fullName>      5.  No <xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName>método, têm sua chamada de objeto de <xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A>método.</xref:System.Web.Hosting.HostingEnvironment.UnregisterObject%2A> </xref:System.Web.Hosting.IRegisteredObject.Stop%2A?displayProperty=fullName>"
  example:
  - "The following code example is an implementation of a `Start` method for a registered object. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.IRegisteredObject> interface overview topic.  \n  \n [!code-cs[System.Web.Hosting.ApplicationManager#2](~/add/codesnippet/csharp/2fd0c065-ec76-48c8-bbb1-_1.cs)]\n [!code-vb[System.Web.Hosting.ApplicationManager#2](~/add/codesnippet/visualbasic/2fd0c065-ec76-48c8-bbb1-_1.vb)]"
  syntax:
    content: public static void RegisterObject (System.Web.Hosting.IRegisteredObject obj);
    parameters:
    - id: obj
      type: System.Web.Hosting.IRegisteredObject
      description: "O objeto a registrar."
  overload: System.Web.Hosting.HostingEnvironment.RegisterObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)
  id: RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: RegisterVirtualPathProvider(VirtualPathProvider)
  nameWithType: HostingEnvironment.RegisterVirtualPathProvider(VirtualPathProvider)
  fullName: System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(VirtualPathProvider)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Registra um novo <xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;> </xref> instância com o sistema de compilação do ASP.NET."
  remarks: "O método RegisterVirtualPathProvider adiciona especificado <xref:System.Web.Hosting.VirtualPathProvider>instância à lista do aplicativo do caminho virtual de provedor.</xref:System.Web.Hosting.VirtualPathProvider>       Para obter mais informações, consulte o <xref:System.Web.Hosting.VirtualPathProvider>Visão geral da classe.</xref:System.Web.Hosting.VirtualPathProvider>"
  example:
  - "The following code example is part of an application startup method that registers a custom <xref:System.Web.Hosting.VirtualPathProvider> instance with the compilation system. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.VirtualPathProvider> class overview topic.  \n  \n [!code-vb[System.Web.Hosting.VirtualPathProvider#11](~/add/codesnippet/visualbasic/6c4fefcc-d45a-4168-86ab-_1.vb)]\n [!code-cs[System.Web.Hosting.VirtualPathProvider#11](~/add/codesnippet/csharp/6c4fefcc-d45a-4168-86ab-_1.cs)]"
  syntax:
    content: public static void RegisterVirtualPathProvider (System.Web.Hosting.VirtualPathProvider virtualPathProvider);
    parameters:
    - id: virtualPathProvider
      type: System.Web.Hosting.VirtualPathProvider
      description: "O novo <xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;> </xref> instância a ser adicionada para o sistema de compilação."
  overload: System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.SetCultures
  id: SetCultures
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: SetCultures()
  nameWithType: HostingEnvironment.SetCultures()
  fullName: System.Web.Hosting.HostingEnvironment.SetCultures()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Define o thread atual para a cultura especificada no arquivo de configuração do aplicativo."
  remarks: "O método SetCultures define o thread atual para a cultura especificada no [globalização Element (ASP.NET Settings Schema)](http://msdn.microsoft.com/en-us/e2dffc8e-ebd2-439b-a2fd-e3ac5e620da7) elemento no arquivo de configuração do aplicativo."
  syntax:
    content: public static IDisposable SetCultures ();
    parameters: []
    return:
      type: System.IDisposable
      description: "Um <xref:System.IDisposable>objeto que representa a cultura antes da alteração; isso pode objeto ser usado para reverter para a cultura anterior.</xref:System.IDisposable>"
  overload: System.Web.Hosting.HostingEnvironment.SetCultures*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.SetCultures(System.String)
  id: SetCultures(System.String)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: SetCultures(String)
  nameWithType: HostingEnvironment.SetCultures(String)
  fullName: System.Web.Hosting.HostingEnvironment.SetCultures(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Define o thread atual para a cultura do caminho virtual especificado."
  remarks: "O método SetCultures define o thread atual para a cultura que é o resultado após a aplicação de todos os elementos nos arquivos de configuração que afetam o caminho virtual especificado."
  syntax:
    content: public static IDisposable SetCultures (string virtualPath);
    parameters:
    - id: virtualPath
      type: System.String
      description: "O caminho que contém as informações de cultura."
    return:
      type: System.IDisposable
      description: "Um <xref:System.IDisposable>objeto que representa a cultura antes da alteração; isso pode objeto ser usado para reverter para a cultura anterior.</xref:System.IDisposable>"
  overload: System.Web.Hosting.HostingEnvironment.SetCultures*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.ShutdownReason
  id: ShutdownReason
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: ShutdownReason
  nameWithType: HostingEnvironment.ShutdownReason
  fullName: System.Web.Hosting.HostingEnvironment.ShutdownReason
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Retorna um valor enumerado que indica o motivo pelo qual o aplicativo é encerrado."
  syntax:
    content: public static System.Web.ApplicationShutdownReason ShutdownReason { get; }
    return:
      type: System.Web.ApplicationShutdownReason
      description: "Uma da <xref href=&quot;System.Web.ApplicationShutdownReason&quot;> </xref> valores."
  overload: System.Web.Hosting.HostingEnvironment.ShutdownReason*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.SiteName
  id: SiteName
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: SiteName
  nameWithType: HostingEnvironment.SiteName
  fullName: System.Web.Hosting.HostingEnvironment.SiteName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém o nome do site."
  syntax:
    content: public static string SiteName { get; }
    return:
      type: System.String
      description: "O nome do site."
  overload: System.Web.Hosting.HostingEnvironment.SiteName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.StopListening
  id: StopListening
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: StopListening
  nameWithType: HostingEnvironment.StopListening
  fullName: System.Web.Hosting.HostingEnvironment.StopListening
  type: Event
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "[Com suporte no .NET Framework 4.5.1 apenas]       Ocorre quando o processo de trabalho ou pool de aplicativos associado a este host parou de escutar novas solicitações e será desligado eventualmente."
  remarks: "Quando um pool de aplicativos e seus processos de trabalho associados estão sendo desligados pelo IIS, por exemplo quando um pool de aplicativos atingiu um intervalo de reciclagem agendado, o IIS notifica o tempo de execução do ASP.NET que o aplicativo está sendo desligado e o processo de trabalho para o pool de aplicativos para escutar novas solicitações. Aplicativos que usam as solicitações de longa execução, por exemplo [SignalR](http://go.microsoft.com/fwlink/?LinkID=285432) aplicativos, pode escutar o evento StopListening e desligar suas operações de longa execução quando o IIS tiver iniciado o desligamento de um pool de aplicativos e seus processos de trabalho associado.      > [!WARNING] > Há várias considerações de design que um desenvolvedor deve considerar ao implementar o evento StopListening: >> 1.  O evento StopListening só está disponível para aplicativos que são configurados para usar o pipeline integrado do IIS.   > 2.  Os desenvolvedores não devem gerar erros de suas implementações StopListening; gerar erros, você terá resultados imprevisíveis.   > 3.  Devido à natureza simultânea de operações em ASP.NET, não há nenhuma garantia de que o ASP.NET chamará um evento StopListening depois que ela foi implementada por um desenvolvedor.   > 4.  O evento StopListening pode executar simultaneamente com outras <xref:System.Web.Hosting.IRegisteredObject>notificações.</xref:System.Web.Hosting.IRegisteredObject>   > 5.  Os desenvolvedores precisam estar ciente de que o ASP.NET pode desligar o domínio de aplicativo durante a execução de seus eventos StopListening e crie suas implementações para lidar com essa possibilidade.   > 6.  Manipuladores de eventos de StopListening não devem bloquear; implementações de bloqueio resultará em deadlocks e IIS encerrará o processo de trabalho quando o intervalo de proteção rápida é atingido."
  syntax:
    content: public static event EventHandler StopListening;
    return:
      type: System.EventHandler
      description: "A ser adicionado."
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)
  id: UnregisterObject(System.Web.Hosting.IRegisteredObject)
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: UnregisterObject(IRegisteredObject)
  nameWithType: HostingEnvironment.UnregisterObject(IRegisteredObject)
  fullName: System.Web.Hosting.HostingEnvironment.UnregisterObject(IRegisteredObject)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Remove um objeto da lista de objetos registrados para o aplicativo."
  remarks: "O <xref:System.Web.Hosting.ApplicationManager>classe permite que os métodos fora do domínio de aplicativo atual para criar, gerenciar e destruir os objetos dentro do domínio de aplicativo atual.</xref:System.Web.Hosting.ApplicationManager> O método UnregisterObject é usado para remover objetos previamente registrados do ambiente de hospedagem."
  example:
  - "The following code example is the <xref:System.Web.Hosting.IRegisteredObject.Stop%2A> method for a registered object. For the full code required to run the example, see the Example section of the <xref:System.Web.Hosting.IRegisteredObject> interface overview topic.  \n  \n [!code-cs[System.Web.Hosting.ApplicationManager#3](~/add/codesnippet/csharp/0c500c41-6bed-4c83-8364-_1.cs)]\n [!code-vb[System.Web.Hosting.ApplicationManager#3](~/add/codesnippet/visualbasic/0c500c41-6bed-4c83-8364-_1.vb)]"
  syntax:
    content: public static void UnregisterObject (System.Web.Hosting.IRegisteredObject obj);
    parameters:
    - id: obj
      type: System.Web.Hosting.IRegisteredObject
      description: "O objeto a ser removido."
  overload: System.Web.Hosting.HostingEnvironment.UnregisterObject*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Hosting.HostingEnvironment.VirtualPathProvider
  id: VirtualPathProvider
  parent: System.Web.Hosting.HostingEnvironment
  langs:
  - csharp
  name: VirtualPathProvider
  nameWithType: HostingEnvironment.VirtualPathProvider
  fullName: System.Web.Hosting.HostingEnvironment.VirtualPathProvider
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Hosting
  summary: "Obtém o provedor de caminho virtual para esse aplicativo."
  remarks: "Quando mais de um <xref:System.Web.Hosting.VirtualPathProvider>instância estiver registrada, o <xref:System.Web.Hosting.HostingEnvironment>objeto gerencia o encadeamento de chamada.</xref:System.Web.Hosting.HostingEnvironment> </xref:System.Web.Hosting.VirtualPathProvider> Você não pode controlar a ordem em que são chamados de provedores de caminho virtual."
  syntax:
    content: public static System.Web.Hosting.VirtualPathProvider VirtualPathProvider { get; }
    return:
      type: System.Web.Hosting.VirtualPathProvider
      description: "O <xref href=&quot;System.Web.Hosting.VirtualPathProvider&quot;> </xref> instância para este aplicativo."
  overload: System.Web.Hosting.HostingEnvironment.VirtualPathProvider*
  exceptions: []
  platform:
  - net462
references:
- uid: System.MarshalByRefObject
  isExternal: false
  name: System.MarshalByRefObject
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Hosting.HostingEnvironment.#ctor
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: HostingEnvironment()
  nameWithType: HostingEnvironment.HostingEnvironment()
  fullName: System.Web.Hosting.HostingEnvironment.HostingEnvironment()
- uid: System.Web.Hosting.HostingEnvironment.ApplicationHost
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationHost
  nameWithType: HostingEnvironment.ApplicationHost
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationHost
- uid: System.Web.Hosting.IApplicationHost
  parent: System.Web.Hosting
  isExternal: false
  name: IApplicationHost
  nameWithType: IApplicationHost
  fullName: System.Web.Hosting.IApplicationHost
- uid: System.Web.Hosting.HostingEnvironment.ApplicationID
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationID
  nameWithType: HostingEnvironment.ApplicationID
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationID
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationPhysicalPath
  nameWithType: HostingEnvironment.ApplicationPhysicalPath
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath
- uid: System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationVirtualPath
  nameWithType: HostingEnvironment.ApplicationVirtualPath
  fullName: System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath
- uid: System.Web.Hosting.HostingEnvironment.Cache
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: Cache
  nameWithType: HostingEnvironment.Cache
  fullName: System.Web.Hosting.HostingEnvironment.Cache
- uid: System.Web.Caching.Cache
  parent: System.Web.Caching
  isExternal: false
  name: Cache
  nameWithType: Cache
  fullName: System.Web.Caching.Cache
- uid: System.Web.Hosting.HostingEnvironment.DecrementBusyCount
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: DecrementBusyCount()
  nameWithType: HostingEnvironment.DecrementBusyCount()
  fullName: System.Web.Hosting.HostingEnvironment.DecrementBusyCount()
- uid: System.Web.Hosting.HostingEnvironment.Impersonate
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: Impersonate()
  nameWithType: HostingEnvironment.Impersonate()
  fullName: System.Web.Hosting.HostingEnvironment.Impersonate()
- uid: System.IDisposable
  parent: System
  isExternal: true
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: Impersonate(IntPtr)
  nameWithType: HostingEnvironment.Impersonate(IntPtr)
  fullName: System.Web.Hosting.HostingEnvironment.Impersonate(IntPtr)
- uid: System.IntPtr
  parent: System
  isExternal: true
  name: IntPtr
  nameWithType: IntPtr
  fullName: System.IntPtr
- uid: System.Web.Hosting.HostingEnvironment.Impersonate(System.IntPtr,System.String)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: Impersonate(IntPtr,String)
  nameWithType: HostingEnvironment.Impersonate(IntPtr,String)
  fullName: System.Web.Hosting.HostingEnvironment.Impersonate(IntPtr,String)
- uid: System.Web.Hosting.HostingEnvironment.InClientBuildManager
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InClientBuildManager
  nameWithType: HostingEnvironment.InClientBuildManager
  fullName: System.Web.Hosting.HostingEnvironment.InClientBuildManager
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.Hosting.HostingEnvironment.IncrementBusyCount
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: IncrementBusyCount()
  nameWithType: HostingEnvironment.IncrementBusyCount()
  fullName: System.Web.Hosting.HostingEnvironment.IncrementBusyCount()
- uid: System.Web.Hosting.HostingEnvironment.InitializationException
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InitializationException
  nameWithType: HostingEnvironment.InitializationException
  fullName: System.Web.Hosting.HostingEnvironment.InitializationException
- uid: System.Exception
  parent: System
  isExternal: true
  name: Exception
  nameWithType: Exception
  fullName: System.Exception
- uid: System.Web.Hosting.HostingEnvironment.InitializeLifetimeService
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InitializeLifetimeService()
  nameWithType: HostingEnvironment.InitializeLifetimeService()
  fullName: System.Web.Hosting.HostingEnvironment.InitializeLifetimeService()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Web.Hosting.HostingEnvironment.InitiateShutdown
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InitiateShutdown()
  nameWithType: HostingEnvironment.InitiateShutdown()
  fullName: System.Web.Hosting.HostingEnvironment.InitiateShutdown()
- uid: System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: IsDevelopmentEnvironment
  nameWithType: HostingEnvironment.IsDevelopmentEnvironment
  fullName: System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment
- uid: System.Web.Hosting.HostingEnvironment.IsHosted
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: IsHosted
  nameWithType: HostingEnvironment.IsHosted
  fullName: System.Web.Hosting.HostingEnvironment.IsHosted
- uid: System.Web.Hosting.HostingEnvironment.MapPath(System.String)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MapPath(String)
  nameWithType: HostingEnvironment.MapPath(String)
  fullName: System.Web.Hosting.HostingEnvironment.MapPath(String)
- uid: System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MaxConcurrentRequestsPerCPU
  nameWithType: HostingEnvironment.MaxConcurrentRequestsPerCPU
  fullName: System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MaxConcurrentThreadsPerCPU
  nameWithType: HostingEnvironment.MaxConcurrentThreadsPerCPU
  fullName: System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU
- uid: System.Web.Hosting.HostingEnvironment.MessageReceived
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MessageReceived()
  nameWithType: HostingEnvironment.MessageReceived()
  fullName: System.Web.Hosting.HostingEnvironment.MessageReceived()
- uid: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Action{System.Threading.CancellationToken})
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: QueueBackgroundWorkItem(Action<CancellationToken>)
  nameWithType: HostingEnvironment.QueueBackgroundWorkItem(Action<CancellationToken>)
  fullName: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(Action<CancellationToken>)
- uid: System.Action{System.Threading.CancellationToken}
  parent: System
  isExternal: true
  name: Action<CancellationToken>
  nameWithType: Action<CancellationToken>
  fullName: System.Action<System.Threading.CancellationToken>
  spec.csharp:
  - uid: System.Action`1
    name: Action
    nameWithType: Action
    fullName: Action<System.Threading.CancellationToken>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task})
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: QueueBackgroundWorkItem(Func<CancellationToken,Task>)
  nameWithType: HostingEnvironment.QueueBackgroundWorkItem(Func<CancellationToken,Task>)
  fullName: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem(Func<CancellationToken,Task>)
- uid: System.Func{System.Threading.CancellationToken,System.Threading.Tasks.Task}
  parent: System
  isExternal: true
  name: Func<CancellationToken,Task>
  nameWithType: Func<CancellationToken,Task>
  fullName: System.Func<System.Threading.CancellationToken,System.Threading.Tasks.Task>
  spec.csharp:
  - uid: System.Func`2
    name: Func
    nameWithType: Func
    fullName: Func<System.Threading.CancellationToken,System.Threading.Tasks.Task>
  - name: <
    nameWithType: <
    fullName: <
  - uid: System.Threading.CancellationToken
    name: CancellationToken
    nameWithType: CancellationToken
    fullName: CancellationToken
  - name: ','
    nameWithType: ','
    fullName: ','
  - uid: System.Threading.Tasks.Task
    name: Task
    nameWithType: Task
    fullName: Task
  - name: '>'
    nameWithType: '>'
    fullName: '>'
- uid: System.Web.Hosting.HostingEnvironment.RegisterObject(System.Web.Hosting.IRegisteredObject)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: RegisterObject(IRegisteredObject)
  nameWithType: HostingEnvironment.RegisterObject(IRegisteredObject)
  fullName: System.Web.Hosting.HostingEnvironment.RegisterObject(IRegisteredObject)
- uid: System.Web.Hosting.IRegisteredObject
  parent: System.Web.Hosting
  isExternal: false
  name: IRegisteredObject
  nameWithType: IRegisteredObject
  fullName: System.Web.Hosting.IRegisteredObject
- uid: System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(System.Web.Hosting.VirtualPathProvider)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: RegisterVirtualPathProvider(VirtualPathProvider)
  nameWithType: HostingEnvironment.RegisterVirtualPathProvider(VirtualPathProvider)
  fullName: System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider(VirtualPathProvider)
- uid: System.Web.Hosting.VirtualPathProvider
  parent: System.Web.Hosting
  isExternal: false
  name: VirtualPathProvider
  nameWithType: VirtualPathProvider
  fullName: System.Web.Hosting.VirtualPathProvider
- uid: System.Web.Hosting.HostingEnvironment.SetCultures
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: SetCultures()
  nameWithType: HostingEnvironment.SetCultures()
  fullName: System.Web.Hosting.HostingEnvironment.SetCultures()
- uid: System.Web.Hosting.HostingEnvironment.SetCultures(System.String)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: SetCultures(String)
  nameWithType: HostingEnvironment.SetCultures(String)
  fullName: System.Web.Hosting.HostingEnvironment.SetCultures(String)
- uid: System.Web.Hosting.HostingEnvironment.ShutdownReason
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ShutdownReason
  nameWithType: HostingEnvironment.ShutdownReason
  fullName: System.Web.Hosting.HostingEnvironment.ShutdownReason
- uid: System.Web.ApplicationShutdownReason
  parent: System.Web
  isExternal: false
  name: ApplicationShutdownReason
  nameWithType: ApplicationShutdownReason
  fullName: System.Web.ApplicationShutdownReason
- uid: System.Web.Hosting.HostingEnvironment.SiteName
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: SiteName
  nameWithType: HostingEnvironment.SiteName
  fullName: System.Web.Hosting.HostingEnvironment.SiteName
- uid: System.Web.Hosting.HostingEnvironment.StopListening
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: StopListening
  nameWithType: HostingEnvironment.StopListening
  fullName: System.Web.Hosting.HostingEnvironment.StopListening
- uid: System.EventHandler
  parent: System
  isExternal: true
  name: EventHandler
  nameWithType: EventHandler
  fullName: System.EventHandler
- uid: System.Web.Hosting.HostingEnvironment.UnregisterObject(System.Web.Hosting.IRegisteredObject)
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: UnregisterObject(IRegisteredObject)
  nameWithType: HostingEnvironment.UnregisterObject(IRegisteredObject)
  fullName: System.Web.Hosting.HostingEnvironment.UnregisterObject(IRegisteredObject)
- uid: System.Web.Hosting.HostingEnvironment.VirtualPathProvider
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: VirtualPathProvider
  nameWithType: HostingEnvironment.VirtualPathProvider
  fullName: System.Web.Hosting.HostingEnvironment.VirtualPathProvider
- uid: System.Web.Hosting.HostingEnvironment.#ctor*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: HostingEnvironment
  nameWithType: HostingEnvironment.HostingEnvironment
- uid: System.Web.Hosting.HostingEnvironment.ApplicationHost*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationHost
  nameWithType: HostingEnvironment.ApplicationHost
- uid: System.Web.Hosting.HostingEnvironment.ApplicationID*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationID
  nameWithType: HostingEnvironment.ApplicationID
- uid: System.Web.Hosting.HostingEnvironment.ApplicationPhysicalPath*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationPhysicalPath
  nameWithType: HostingEnvironment.ApplicationPhysicalPath
- uid: System.Web.Hosting.HostingEnvironment.ApplicationVirtualPath*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ApplicationVirtualPath
  nameWithType: HostingEnvironment.ApplicationVirtualPath
- uid: System.Web.Hosting.HostingEnvironment.Cache*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: Cache
  nameWithType: HostingEnvironment.Cache
- uid: System.Web.Hosting.HostingEnvironment.DecrementBusyCount*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: DecrementBusyCount
  nameWithType: HostingEnvironment.DecrementBusyCount
- uid: System.Web.Hosting.HostingEnvironment.Impersonate*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: Impersonate
  nameWithType: HostingEnvironment.Impersonate
- uid: System.Web.Hosting.HostingEnvironment.InClientBuildManager*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InClientBuildManager
  nameWithType: HostingEnvironment.InClientBuildManager
- uid: System.Web.Hosting.HostingEnvironment.IncrementBusyCount*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: IncrementBusyCount
  nameWithType: HostingEnvironment.IncrementBusyCount
- uid: System.Web.Hosting.HostingEnvironment.InitializationException*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InitializationException
  nameWithType: HostingEnvironment.InitializationException
- uid: System.Web.Hosting.HostingEnvironment.InitializeLifetimeService*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InitializeLifetimeService
  nameWithType: HostingEnvironment.InitializeLifetimeService
- uid: System.Web.Hosting.HostingEnvironment.InitiateShutdown*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: InitiateShutdown
  nameWithType: HostingEnvironment.InitiateShutdown
- uid: System.Web.Hosting.HostingEnvironment.IsDevelopmentEnvironment*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: IsDevelopmentEnvironment
  nameWithType: HostingEnvironment.IsDevelopmentEnvironment
- uid: System.Web.Hosting.HostingEnvironment.IsHosted*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: IsHosted
  nameWithType: HostingEnvironment.IsHosted
- uid: System.Web.Hosting.HostingEnvironment.MapPath*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MapPath
  nameWithType: HostingEnvironment.MapPath
- uid: System.Web.Hosting.HostingEnvironment.MaxConcurrentRequestsPerCPU*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MaxConcurrentRequestsPerCPU
  nameWithType: HostingEnvironment.MaxConcurrentRequestsPerCPU
- uid: System.Web.Hosting.HostingEnvironment.MaxConcurrentThreadsPerCPU*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MaxConcurrentThreadsPerCPU
  nameWithType: HostingEnvironment.MaxConcurrentThreadsPerCPU
- uid: System.Web.Hosting.HostingEnvironment.MessageReceived*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: MessageReceived
  nameWithType: HostingEnvironment.MessageReceived
- uid: System.Web.Hosting.HostingEnvironment.QueueBackgroundWorkItem*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: QueueBackgroundWorkItem
  nameWithType: HostingEnvironment.QueueBackgroundWorkItem
- uid: System.Web.Hosting.HostingEnvironment.RegisterObject*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: RegisterObject
  nameWithType: HostingEnvironment.RegisterObject
- uid: System.Web.Hosting.HostingEnvironment.RegisterVirtualPathProvider*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: RegisterVirtualPathProvider
  nameWithType: HostingEnvironment.RegisterVirtualPathProvider
- uid: System.Web.Hosting.HostingEnvironment.SetCultures*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: SetCultures
  nameWithType: HostingEnvironment.SetCultures
- uid: System.Web.Hosting.HostingEnvironment.ShutdownReason*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: ShutdownReason
  nameWithType: HostingEnvironment.ShutdownReason
- uid: System.Web.Hosting.HostingEnvironment.SiteName*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: SiteName
  nameWithType: HostingEnvironment.SiteName
- uid: System.Web.Hosting.HostingEnvironment.UnregisterObject*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: UnregisterObject
  nameWithType: HostingEnvironment.UnregisterObject
- uid: System.Web.Hosting.HostingEnvironment.VirtualPathProvider*
  parent: System.Web.Hosting.HostingEnvironment
  isExternal: false
  name: VirtualPathProvider
  nameWithType: HostingEnvironment.VirtualPathProvider
