### YamlMime:ManagedReference
items:
- uid: System.Web.UI.PageStatePersister
  id: PageStatePersister
  children:
  - System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  - System.Web.UI.PageStatePersister.ControlState
  - System.Web.UI.PageStatePersister.Load
  - System.Web.UI.PageStatePersister.Page
  - System.Web.UI.PageStatePersister.Save
  - System.Web.UI.PageStatePersister.StateFormatter
  - System.Web.UI.PageStatePersister.ViewState
  langs:
  - csharp
  name: PageStatePersister
  nameWithType: PageStatePersister
  fullName: System.Web.UI.PageStatePersister
  type: Class
  summary: "Fornece a funcionalidade básica para mecanismos de persistência de estado de exibição do ASP.NET."
  remarks: "As solicitações e respostas HTTP são inerentemente sem monitoração de estado. Para manter informações de estado entre as solicitações HTTP, páginas de servidor ASP.NET podem armazenar <xref:System.Web.UI.Page>estado.</xref:System.Web.UI.Page> Nesse estado, chamado de estado de exibição, consiste em página e as configurações de controle e os dados que tornam a página e os controles que aparecem como se eles são os mesmos que o usuário ver e interagir com em seu último ida e volta ao servidor. Existem vários mecanismos para armazenar o estado de exibição entre as solicitações sucessivas para a mesma página. A classe abstrata de PageStatePersister representa a classe base para esses mecanismos de armazenamento de informações de estado.       O mecanismo de persistência de estado de exibição padrão no ASP.NET é manter as informações de estado como uma cadeia de caracteres codificada em Base64 em um elemento HTML oculto (um elemento com o `type` atributo definido como `&quot;hidden&quot;`) na página. Uma página ASP.NET usa um <xref:System.Web.UI.HiddenFieldPageStatePersister>objeto para fazer isso funcionar, usando um <xref:System.Web.UI.IStateFormatter>instância para serializar e desserializar informações de estado do objeto.</xref:System.Web.UI.IStateFormatter> </xref:System.Web.UI.HiddenFieldPageStatePersister> Como alternativa, você pode armazenar o estado de exibição para as páginas no <xref:System.Web.HttpContext.Session%2A>objeto no servidor usando o <xref:System.Web.UI.SessionPageStatePersister>classe para clientes móveis com recursos e largura de banda limitada.</xref:System.Web.UI.SessionPageStatePersister> </xref:System.Web.HttpContext.Session%2A> Em alguns casos, você poderá desabilitar a persistência de estado de exibição completamente. Se você fizer isso, o resultado é que, às vezes, páginas e controles que dependem de persistência de estado não funcionar corretamente. Para obter mais informações sobre o estado de gerenciamento e exibição de estado de página, consulte [visão geral do gerenciamento de estado ASP.NET](~/add/includes/ajax-current-ext-md.md).       Se você estiver escrevendo controles, você pode armazenar informações de estado para os controles de <xref:System.Web.UI.Control.ViewState%2A>dicionário, que é uma <xref:System.Web.UI.StateBag>objeto.</xref:System.Web.UI.StateBag> </xref:System.Web.UI.Control.ViewState%2A> Um desenvolvedor deve recuperar o estado de controle por meio de <xref:System.Web.UI.PageStatePersister.ControlState%2A>propriedade.</xref:System.Web.UI.PageStatePersister.ControlState%2A> Atribuir as chaves e valores de <xref:System.Web.UI.Control.ViewState%2A>propriedade e o <xref:System.Web.UI.Page>objeto serializa as informações de estado entre as solicitações.</xref:System.Web.UI.Page> </xref:System.Web.UI.Control.ViewState%2A> Para executar a manipulação do seu controle de estado personalizado, substitua o <xref:System.Web.UI.Control.LoadViewState%2A>e <xref:System.Web.UI.Control.SaveViewState%2A>métodos.</xref:System.Web.UI.Control.SaveViewState%2A> </xref:System.Web.UI.Control.LoadViewState%2A> Qualquer informação de estado que é armazenada neste dicionário é perdida quando o estado de exibição está desabilitado por um desenvolvedor de página. Para atenuar isso, no ASP.NET 2.0, você pode armazenar informações de estado crítico em um objeto separado, chamado de estado de controle de versão. O objeto de estado de controle não é afetado quando o estado de exibição está desabilitado por um desenvolvedor de página. Armazenando informações de estado do objeto de estado do controle requer que o controle de substituição de <xref:System.Web.UI.Control.LoadControlState%2A>e <xref:System.Web.UI.Control.SaveControlState%2A>métodos e que o controle ser registrado para armazenar informações de estado de controle de estado toda vez que o controle é inicializado.</xref:System.Web.UI.Control.SaveControlState%2A> </xref:System.Web.UI.Control.LoadControlState%2A> Você pode registrar um controle para usar o estado de controle, substituindo o <xref:System.Web.UI.Control.OnInit%2A>método e chamar o <xref:System.Web.UI.Page.RegisterRequiresControlState%2A>método.</xref:System.Web.UI.Page.RegisterRequiresControlState%2A> </xref:System.Web.UI.Control.OnInit%2A> Para obter mais informações sobre como usar o <xref:System.Web.UI.Control.ViewState%2A>propriedade e controle de estado durante o desenvolvimento de controles, consulte [Developing Custom ASP.NET Server Controls](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.Control.ViewState%2A>       Para manter o estado de exibição em clientes que não oferece suporte os mecanismos de persistência de estado de exibição existente, você pode estender a classe PageStatePersister para colocar seus próprios métodos de persistência de estado de exibição, e você pode usar adaptadores de página para configurar seu aplicativo ASP.NET para usar mecanismos de persistência de estado de exibição diferente com base no tipo de cliente para que uma página é atendida. Classes que derivam da classe PageStatePersister devem substituir o abstrato <xref:System.Web.UI.PageStatePersister.Save%2A>método para armazenar o estado de exibição e controlar o estado na mídia de persistência e substituir o <xref:System.Web.UI.PageStatePersister.Load%2A>método para extrair o proprietário.</xref:System.Web.UI.PageStatePersister.Load%2A> </xref:System.Web.UI.PageStatePersister.Save%2A> Se você precisa serializar o estado de exibição e o estado de controle para uma cadeia de caracteres, você pode usar o <xref:System.Web.UI.IStateFormatter>objeto é acessado usando o <xref:System.Web.UI.PageStatePersister.StateFormatter%2A>propriedade.</xref:System.Web.UI.PageStatePersister.StateFormatter%2A> </xref:System.Web.UI.IStateFormatter> Ele serializa e desserializa a informações de estado do objeto para uma cadeia de caracteres codificada em Base64 com eficiência. Você também pode substituir o <xref:System.Web.UI.PageStatePersister.StateFormatter%2A>propriedade para fornecer seu próprio mecanismo de serialização do estado de objeto.</xref:System.Web.UI.PageStatePersister.StateFormatter%2A>"
  example:
  - "The following code example demonstrates how to create a PageStatePersister object that saves view and control state on the Web server. The `StreamPageStatePersister` demonstrates how to override the <xref:System.Web.UI.PageStatePersister.Load%2A> and <xref:System.Web.UI.PageStatePersister.Save%2A> methods to extract and save view state information. Because the state persistence mechanisms are related to adaptive rendering and client capabilities, the `MyPageAdapter` class is provided to activate the `StreamPageStatePersister` for an ASP.NET application. Finally, a browser capabilities (.browser) file is provided to enable the `MyPageAdapter` adapter for a specific class of clients (in this case, the default Web browser).  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/add/codesnippet/csharp/t-system.web.ui.pagestat_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#1](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_1.vb)]  \n  \n The following code example demonstrates how to create a <xref:System.Web.UI.Adapters.PageAdapter> class that returns an instance of `StreamPageStatePersister`, which is used to persist view and control state for an ASP.NET Web page.  \n  \n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_2.vb)]\n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#5](~/add/codesnippet/csharp/t-system.web.ui.pagestat_2.cs)]  \n  \n Compile these two classes into an assembly that you can use to run a sample, using the following compiler command line. Ensure that the compiled assembly is in the \\Bin directory underneath the ASP.NET application root.  \n  \n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/add/codesnippet/visualbasic/t-system.web.ui.pagestat_3.vb)]\n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#6](~/add/codesnippet/csharp/t-system.web.ui.pagestat_3.cs)]  \n  \n Finally, to enable the `MyPageAdapter` adapter, you must create a directory named Browsers underneath the ASP.NET application root, and include a .browser file with configuration information. The `<refid>` element in the configuration file indicates that the configuration overrides the values specified for the default browser in the Default.browser configuration file. In this example, `MyPageAdapter` is used for ASP.NET Web pages (where normally no adapter is used).  \n  \n```  \n<browsers>  \n    <browser refid=\"Default\" >  \n        <controlAdapters>  \n            <adapter   \n                controlType=\"System.Web.UI.Page\"                              \n                adapterType=\"Samples.AspNet.CS.MyPageAdapter\" />  \n        </controlAdapters>  \n    </browser>  \n</browsers>  \n```"
  syntax:
    content: public abstract class PageStatePersister
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  id: '#ctor(System.Web.UI.Page)'
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: PageStatePersister(Page)
  nameWithType: PageStatePersister.PageStatePersister(Page)
  fullName: System.Web.UI.PageStatePersister.PageStatePersister(Page)
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> classe."
  syntax:
    content: protected PageStatePersister (System.Web.UI.Page page);
    parameters:
    - id: page
      type: System.Web.UI.Page
      description: "O <xref href=&quot;System.Web.UI.Page&quot;> </xref> criado para o mecanismo de persistência de estado de exibição."
  overload: System.Web.UI.PageStatePersister.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>page</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.ControlState
  id: ControlState
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: ControlState
  nameWithType: PageStatePersister.ControlState
  fullName: System.Web.UI.PageStatePersister.ControlState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um objeto que representa os dados que controla contidos pelo atual <xref href=&quot;System.Web.UI.Page&quot;> </xref> uso de objeto para manter em solicitações HTTP para o servidor Web."
  remarks: "Estado do controle é um objeto composto de dados de estado de exibição críticos que Web necessidade de controles de servidor de função e estão contidos em um objeto separado de informações de estado de exibição normal. Dados de estado do controle não são afetados quando o estado de exibição está desabilitado no <xref:System.Web.UI.Page>nível, mas requer etapas adicionais de implementação para usar.</xref:System.Web.UI.Page> Para obter mais informações sobre como usar o <xref:System.Web.UI.Control.ViewState%2A>propriedade e controle de estado durante o desenvolvimento de controles, consulte [Developing Custom ASP.NET Server Controls](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.Control.ViewState%2A>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the ControlState property. In this example, the ControlState property has been assigned to the <xref:System.Web.UI.Pair.Second> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> class. When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> class is used to deserialize view state and control state information, and the ControlState property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.Second> field. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/p-system.web.ui.pagestat_0_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_0_1.vb)]"
  syntax:
    content: public object ControlState { get; set; }
    return:
      type: System.Object
      description: "Um objeto que contém dados de estado de exibição."
  overload: System.Web.UI.PageStatePersister.ControlState*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Load
  id: Load
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Load()
  nameWithType: PageStatePersister.Load()
  fullName: System.Web.UI.PageStatePersister.Load()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Substituído por classes derivadas para desserializar e carregar as informações de estado persistente quando um <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto inicializa sua hierarquia de controle."
  remarks: "Classes que derivam de <xref:System.Web.UI.PageStatePersister>classe implementa o método de carga para inicializar o <xref:System.Web.UI.PageStatePersister.ViewState%2A>e <xref:System.Web.UI.PageStatePersister.ControlState%2A>Propriedades de algum formato persistente.</xref:System.Web.UI.PageStatePersister.ControlState%2A> </xref:System.Web.UI.PageStatePersister.ViewState%2A> </xref:System.Web.UI.PageStatePersister>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the Load method to load view state from a persistence medium. The `StreamPageStatePersister` attempts to read data from a stream. It uses an <xref:System.Web.UI.IStateFormatter> object to deserialize view state data and initialize the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and the <xref:System.Web.UI.PageStatePersister.ControlState%2A> property, which a page uses to initialize controls. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/m-system.web.ui.pagestat_0_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/m-system.web.ui.pagestat_0_1.vb)]"
  syntax:
    content: public abstract void Load ();
    parameters: []
  overload: System.Web.UI.PageStatePersister.Load*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Page
  id: Page
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Page
  nameWithType: PageStatePersister.Page
  fullName: System.Web.UI.PageStatePersister.Page
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define o <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto criado para o mecanismo de persistência de estado de exibição."
  remarks: "Você pode usar a propriedade da página para acessar o atual <xref:System.Web.HttpContext>objeto.</xref:System.Web.HttpContext>"
  syntax:
    content: protected System.Web.UI.Page Page { get; set; }
    return:
      type: System.Web.UI.Page
      description: "O <xref href=&quot;System.Web.UI.Page&quot;> </xref> que o <xref href=&quot;System.Web.UI.PageStatePersister&quot;> </xref> está associado."
  overload: System.Web.UI.PageStatePersister.Page*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.Save
  id: Save
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: Save()
  nameWithType: PageStatePersister.Save()
  fullName: System.Web.UI.PageStatePersister.Save()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Substituído por classes derivadas para serializar informações de estado persistente quando um <xref href=&quot;System.Web.UI.Page&quot;> </xref> objeto é descarregado da memória."
  remarks: "Classes que derivam de <xref:System.Web.UI.PageStatePersister>classe implementa o método Save para manter o conteúdo da <xref:System.Web.UI.PageStatePersister.ViewState%2A>e <xref:System.Web.UI.PageStatePersister.ControlState%2A>Propriedades para uma média de persistência.</xref:System.Web.UI.PageStatePersister.ControlState%2A> </xref:System.Web.UI.PageStatePersister.ViewState%2A> </xref:System.Web.UI.PageStatePersister>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class implements the Save method to persist view state to a persistence medium. The `StreamPageStatePersister` uses an <xref:System.Web.UI.IStateFormatter> object to serialize the contents of the <xref:System.Web.UI.PageStatePersister.ViewState%2A> property and <xref:System.Web.UI.PageStatePersister.ControlState%2A> property. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/csharp/m-system.web.ui.pagestat_1_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/visualbasic/m-system.web.ui.pagestat_1_1.vb)]"
  syntax:
    content: public abstract void Save ();
    parameters: []
  overload: System.Web.UI.PageStatePersister.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.StateFormatter
  id: StateFormatter
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
  fullName: System.Web.UI.PageStatePersister.StateFormatter
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém um <xref href=&quot;System.Web.UI.IStateFormatter&quot;> </xref> que é usado para serializar e desserializar as informações de estado contidas no objeto de <> </> *> e <> </> *> propriedades durante as chamadas a <> </> *> e <> </> *> métodos."
  remarks: "Você pode substituir a propriedade StateFormatter para fornecer seu próprio formatador de estado de exibição."
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class accesses the StateFormatter property to retrieve an <xref:System.Web.UI.ObjectStateFormatter> object, which is the default implementation of the <xref:System.Web.UI.IStateFormatter> interface, to serialize view state and control state to a stream. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/csharp/p-system.web.ui.pagestat_2_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#3](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_2_1.vb)]"
  syntax:
    content: protected System.Web.UI.IStateFormatter StateFormatter { get; }
    return:
      type: System.Web.UI.IStateFormatter
      description: "Uma instância de <xref href=&quot;System.Web.UI.IStateFormatter&quot;> </xref> que é usado para serializar e desserializar o estado do objeto."
  overload: System.Web.UI.PageStatePersister.StateFormatter*
  exceptions: []
  platform:
  - net462
- uid: System.Web.UI.PageStatePersister.ViewState
  id: ViewState
  parent: System.Web.UI.PageStatePersister
  langs:
  - csharp
  name: ViewState
  nameWithType: PageStatePersister.ViewState
  fullName: System.Web.UI.PageStatePersister.ViewState
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.UI
  summary: "Obtém ou define um objeto que representa os dados que controla contidos pelo atual <xref href=&quot;System.Web.UI.Page&quot;> </xref> uso de objeto para manter em solicitações HTTP para o servidor Web."
  remarks: "Estado de exibição é um dicionário de dados do estado do servidor Web precisa funcionar e processar. Normalmente, os desenvolvedores de controle acessar o objeto de estado de exibição usando o <xref:System.Web.UI.Control.ViewState%2A>propriedade.</xref:System.Web.UI.Control.ViewState%2A> Estado de exibição é afetado quando o estado de exibição está desabilitado no <xref:System.Web.UI.Page>nível e assim os controles podem não funcionar corretamente nessas situações.</xref:System.Web.UI.Page> Para obter mais informações sobre como usar <xref:System.Web.UI.Control.ViewState%2A>e controlar o estado durante o desenvolvimento de controles, consulte [Developing Custom ASP.NET Server Controls](~/add/includes/ajax-current-ext-md.md).</xref:System.Web.UI.Control.ViewState%2A>"
  example:
  - "The following code example demonstrates how a class that derives from the <xref:System.Web.UI.PageStatePersister> class initializes the ViewState property. In this example, the ViewState property has been assigned to the <xref:System.Web.UI.Pair.First> field of a <xref:System.Web.UI.Pair> object, and serialized using the <xref:System.Web.UI.ObjectStateFormatter> object, which is an instance of the <xref:System.Web.UI.IStateFormatter> interface. When the <xref:System.Web.UI.PageStatePersister.Load%2A> method is called, the <xref:System.Web.UI.ObjectStateFormatter> interface is used to deserialize view state information, and the ViewState property is initialized from the resulting <xref:System.Web.UI.Pair> object's <xref:System.Web.UI.Pair.First> field. This code example is part of a larger example provided for the <xref:System.Web.UI.PageStatePersister> class.  \n  \n [!code-cs[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/csharp/p-system.web.ui.pagestat_1_1.cs)]\n [!code-vb[Samples.AspNet.Alexkr.TextFilePageStatePersister_1#2](~/add/codesnippet/visualbasic/p-system.web.ui.pagestat_1_1.vb)]"
  syntax:
    content: public object ViewState { get; set; }
    return:
      type: System.Object
      description: "Um objeto que contém dados de estado de exibição."
  overload: System.Web.UI.PageStatePersister.ViewState*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.UI.PageStatePersister.#ctor(System.Web.UI.Page)
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: PageStatePersister(Page)
  nameWithType: PageStatePersister.PageStatePersister(Page)
  fullName: System.Web.UI.PageStatePersister.PageStatePersister(Page)
- uid: System.Web.UI.Page
  parent: System.Web.UI
  isExternal: false
  name: Page
  nameWithType: Page
  fullName: System.Web.UI.Page
- uid: System.Web.UI.PageStatePersister.ControlState
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ControlState
  nameWithType: PageStatePersister.ControlState
  fullName: System.Web.UI.PageStatePersister.ControlState
- uid: System.Web.UI.PageStatePersister.Load
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Load()
  nameWithType: PageStatePersister.Load()
  fullName: System.Web.UI.PageStatePersister.Load()
- uid: System.Web.UI.PageStatePersister.Page
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Page
  nameWithType: PageStatePersister.Page
  fullName: System.Web.UI.PageStatePersister.Page
- uid: System.Web.UI.PageStatePersister.Save
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Save()
  nameWithType: PageStatePersister.Save()
  fullName: System.Web.UI.PageStatePersister.Save()
- uid: System.Web.UI.PageStatePersister.StateFormatter
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
  fullName: System.Web.UI.PageStatePersister.StateFormatter
- uid: System.Web.UI.IStateFormatter
  parent: System.Web.UI
  isExternal: false
  name: IStateFormatter
  nameWithType: IStateFormatter
  fullName: System.Web.UI.IStateFormatter
- uid: System.Web.UI.PageStatePersister.ViewState
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ViewState
  nameWithType: PageStatePersister.ViewState
  fullName: System.Web.UI.PageStatePersister.ViewState
- uid: System.Web.UI.PageStatePersister.#ctor*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: PageStatePersister
  nameWithType: PageStatePersister.PageStatePersister
- uid: System.Web.UI.PageStatePersister.ControlState*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ControlState
  nameWithType: PageStatePersister.ControlState
- uid: System.Web.UI.PageStatePersister.Load*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Load
  nameWithType: PageStatePersister.Load
- uid: System.Web.UI.PageStatePersister.Page*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Page
  nameWithType: PageStatePersister.Page
- uid: System.Web.UI.PageStatePersister.Save*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: Save
  nameWithType: PageStatePersister.Save
- uid: System.Web.UI.PageStatePersister.StateFormatter*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: StateFormatter
  nameWithType: PageStatePersister.StateFormatter
- uid: System.Web.UI.PageStatePersister.ViewState*
  parent: System.Web.UI.PageStatePersister
  isExternal: false
  name: ViewState
  nameWithType: PageStatePersister.ViewState
