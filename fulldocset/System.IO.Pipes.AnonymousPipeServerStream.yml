### YamlMime:ManagedReference
items:
- uid: System.IO.Pipes.AnonymousPipeServerStream
  id: AnonymousPipeServerStream
  children:
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  - System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  - System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  - System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  - System.IO.Pipes.AnonymousPipeServerStream.Finalize
  - System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  - System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  - System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  langs:
  - csharp
  name: AnonymousPipeServerStream
  nameWithType: AnonymousPipeServerStream
  fullName: System.IO.Pipes.AnonymousPipeServerStream
  type: Class
  summary: "Expõe um fluxo em torno de um pipe anônimo, que dá suporte a síncronas e assíncrona operações leitura e gravação."
  remarks: "Pipes anônimos ajudam a fornecer segurança e proteger a comunicação entre processos entre pai e filho processos. A classe AnonymousPipeServerStream permite que um processo pai enviar ou receber informações de um processo filho.       Pipes anônimos são pipes sem nome, unidirecionais que transferem dados entre processos pai e filho. Pipes anônimos sempre são locais; eles não podem ser usados em uma rede. Um <xref:System.IO.Pipes.PipeDirection>valor <xref:System.IO.Pipes.PipeDirection>não é suportado porque pipes anônimos são definidos para serem unidirecional.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       Pipes anônimos não suportam <xref:System.IO.Pipes.PipeTransmissionMode>modos de leitura.</xref:System.IO.Pipes.PipeTransmissionMode>       Lado do cliente de um pipe anônimo deve ser criado de um identificador de pipe fornecido pelo lado do servidor chamando o <xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A>método.</xref:System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString%2A> A cadeia de caracteres é então passada como um parâmetro ao criar o processo do cliente. No processo de cliente, em seguida, ele é passado para o <xref:System.IO.Pipes.AnonymousPipeClientStream>construtor como o `pipeHandleAsString` parâmetro.</xref:System.IO.Pipes.AnonymousPipeClientStream>       O objeto AnonymousPipeServerStream deve descartar o identificador de cliente usando o <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>método para ser notificado quando o cliente será encerrado.</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>      > [!NOTE] > Para [!INCLUDE[winxppro](~/add/includes/winxppro-md.md)] e [!INCLUDE[win2kserver](~/add/includes/win2kserver-md.md)], um máximo de 10 pipes pode se conectar simultaneamente pela rede."
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process using anonymous pipes. This example creates an AnonymousPipeServerStream object in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. It also creates an <xref:System.IO.Pipes.AnonymousPipeClientStream> object in a child process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>. The parent process then sends a user-supplied string to the child process. The string is displayed to the console.  \n  \n This example is for the server process, which uses the AnonymousPipeServerStream class. For the entire code example, including the code for both the pipe client and server, see [How to: Use Anonymous Pipes for Local Interprocess Communication](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/t-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/t-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/t-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: 'public sealed class AnonymousPipeServerStream : System.IO.Pipes.PipeStream'
  inheritance:
  - System.IO.Stream
  - System.IO.Pipes.PipeStream
  implements: []
  inheritedMembers:
  - System.IO.Pipes.PipeStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)
  - System.IO.Pipes.PipeStream.CanRead
  - System.IO.Pipes.PipeStream.CanSeek
  - System.IO.Pipes.PipeStream.CanWrite
  - System.IO.Pipes.PipeStream.CheckPipePropertyOperations
  - System.IO.Pipes.PipeStream.CheckReadOperations
  - System.IO.Pipes.PipeStream.CheckWriteOperations
  - System.IO.Pipes.PipeStream.EndRead(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.EndWrite(System.IAsyncResult)
  - System.IO.Pipes.PipeStream.Flush
  - System.IO.Pipes.PipeStream.GetAccessControl
  - System.IO.Pipes.PipeStream.InBufferSize
  - System.IO.Pipes.PipeStream.InitializeHandle(Microsoft.Win32.SafeHandles.SafePipeHandle,System.Boolean,System.Boolean)
  - System.IO.Pipes.PipeStream.IsAsync
  - System.IO.Pipes.PipeStream.IsConnected
  - System.IO.Pipes.PipeStream.IsHandleExposed
  - System.IO.Pipes.PipeStream.IsMessageComplete
  - System.IO.Pipes.PipeStream.Length
  - System.IO.Pipes.PipeStream.OutBufferSize
  - System.IO.Pipes.PipeStream.Position
  - System.IO.Pipes.PipeStream.Read(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.ReadByte
  - System.IO.Pipes.PipeStream.SafePipeHandle
  - System.IO.Pipes.PipeStream.Seek(System.Int64,System.IO.SeekOrigin)
  - System.IO.Pipes.PipeStream.SetAccessControl(System.IO.Pipes.PipeSecurity)
  - System.IO.Pipes.PipeStream.SetLength(System.Int64)
  - System.IO.Pipes.PipeStream.WaitForPipeDrain
  - System.IO.Pipes.PipeStream.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.Pipes.PipeStream.WriteByte(System.Byte)
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor
  id: '#ctor'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream()
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream()
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> classe."
  remarks: "Para <xref:System.IO.Pipes.AnonymousPipeServerStream>construtores sem um <xref:System.IO.Pipes.PipeDirection>parâmetro, a direção padrão é <xref:System.IO.Pipes.PipeDirection>.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.AnonymousPipeServerStream> Um <xref:System.IO.Pipes.PipeDirection>valor <xref:System.IO.Pipes.PipeDirection>não é suportado porque pipes anônimos são definidos para serem unidirecional.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       Este construtor cria um <xref:System.IO.Pipes.AnonymousPipeServerStream>objeto que tem o tamanho do buffer padrão, nenhuma segurança de pipe e um <xref:System.IO.HandleInheritability>valor de <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public AnonymousPipeServerStream ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  id: '#ctor(System.IO.Pipes.PipeDirection)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> classe com a direção do pipe especificado."
  remarks: "Um <xref:System.IO.Pipes.PipeDirection>valor <xref:System.IO.Pipes.PipeDirection>não é suportado porque pipes anônimos são definidos para serem unidirecional.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       Este construtor cria um <xref:System.IO.Pipes.AnonymousPipeServerStream>objeto que tem o tamanho do buffer padrão, nenhuma segurança de pipe e um <xref:System.IO.HandleInheritability>valor de <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Um dos valores de enumeração que determina a direção do pipe.       Pipes anônimos só podem ser em uma direção, portanto `direction` não pode ser definido como <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> classe com o modo de direção e inheritability de pipe especificado."
  remarks: "Um <xref:System.IO.Pipes.PipeDirection>valor <xref:System.IO.Pipes.PipeDirection>não é suportado porque pipes anônimos são definidos para serem unidirecional.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       Este construtor cria um <xref:System.IO.Pipes.AnonymousPipeServerStream>objeto que tem o tamanho do buffer padrão e nenhuma segurança de pipe.</xref:System.IO.Pipes.AnonymousPipeServerStream>"
  example:
  - "The following example demonstrates a method to send a string from a parent process to a child process using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/d22da34b-b931-48af-8c21-_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/d22da34b-b931-48af-8c21-_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/d22da34b-b931-48af-8c21-_1.cpp)]"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Um dos valores de enumeração que determina a direção do pipe.       Pipes anônimos só podem ser em uma direção, portanto `direction` não pode ser definido como <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Um dos valores de enumeração que determina se o identificador subjacente pode ser herdado pelos processos filhos. Deve ser definido como um <xref:System.IO.HandleInheritability>ou <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability>"
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>não está definido como <xref:System.IO.HandleInheritability> ou <xref:System.IO.HandleInheritability>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  id: '#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> classe a partir de identificadores de pipe especificado."
  remarks: "Um <xref:System.IO.Pipes.PipeDirection>valor <xref:System.IO.Pipes.PipeDirection>não é suportado porque pipes anônimos são definidos para serem unidirecional.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, Microsoft.Win32.SafeHandles.SafePipeHandle serverSafePipeHandle, Microsoft.Win32.SafeHandles.SafePipeHandle clientSafePipeHandle);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Um dos valores de enumeração que determina a direção do pipe.       Pipes anônimos só podem ser em uma direção, portanto `direction` não pode ser definido como <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>."
    - id: serverSafePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "Identificador de um cofre para o pipe que este <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> objeto encapsulará."
    - id: clientSafePipeHandle
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "Um identificador seguro para a <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> objeto."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>serverSafePipeHandle</code>ou <code>clientSafePipeHandle</code> é um identificador inválido."
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>serverSafePipeHandle</code>or <code>clientSafePipeHandle</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "Ocorreu um erro de e/s, como um erro de disco.       - ou - o fluxo foi fechado."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> classe com a direção do pipe especificado, o modo de inheritability e o tamanho do buffer."
  remarks: "Um <xref:System.IO.Pipes.PipeDirection>valor <xref:System.IO.Pipes.PipeDirection>não é suportado porque pipes anônimos são definidos para serem unidirecional.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>       Este construtor cria um <xref:System.IO.Pipes.AnonymousPipeServerStream>objeto sem segurança de pipe.</xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Um dos valores de enumeração que determina a direção do pipe.       Pipes anônimos só podem ser em uma direção, portanto `direction` não pode ser definido como <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Um dos valores de enumeração que determina se o identificador subjacente pode ser herdado pelos processos filhos. Deve ser definido como um <xref:System.IO.HandleInheritability>ou <xref:System.IO.HandleInheritability>.</xref:System.IO.HandleInheritability> </xref:System.IO.HandleInheritability>"
    - id: bufferSize
      type: System.Int32
      description: "O tamanho do buffer. Esse valor deve ser maior ou igual a 0."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>não está definido como <xref:System.IO.HandleInheritability> ou <xref:System.IO.HandleInheritability>.       - ou - <code>bufferSize</code> é menor que 0."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  id: '#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)'
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  type: Constructor
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Inicializa uma nova instância do <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> classe com a direção do pipe especificado, o modo inheritability, o tamanho do buffer e a segurança de pipe."
  remarks: "Um <xref:System.IO.Pipes.PipeDirection>valor <xref:System.IO.Pipes.PipeDirection>não é suportado porque pipes anônimos são definidos para serem unidirecional.</xref:System.IO.Pipes.PipeDirection> </xref:System.IO.Pipes.PipeDirection>"
  syntax:
    content: public AnonymousPipeServerStream (System.IO.Pipes.PipeDirection direction, System.IO.HandleInheritability inheritability, int bufferSize, System.IO.Pipes.PipeSecurity pipeSecurity);
    parameters:
    - id: direction
      type: System.IO.Pipes.PipeDirection
      description: "Um dos valores de enumeração que determina a direção do pipe.       Pipes anônimos só podem ser em uma direção, portanto `direction` não pode ser definido como <xref href=&quot;System.IO.Pipes.PipeDirection&quot;> </xref>."
    - id: inheritability
      type: System.IO.HandleInheritability
      description: "Um dos valores de enumeração que determina se o identificador subjacente pode ser herdado pelos processos filhos."
    - id: bufferSize
      type: System.Int32
      description: "O tamanho do buffer. Esse valor deve ser maior ou igual a 0."
    - id: pipeSecurity
      type: System.IO.Pipes.PipeSecurity
      description: "Um objeto que determina o controle de acesso e auditoria de segurança para o pipe."
  overload: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "<code>inheritability</code>não está definido como <xref:System.IO.HandleInheritability> ou <xref:System.IO.HandleInheritability>.       - ou - <code>bufferSize</code> é menor que 0."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "<code>direction</code>is set to <xref href=&quot;System.IO.Pipes.PipeDirection&quot;></xref>."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  id: ClientSafePipeHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém o identificador de seguro para o <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> objeto que está conectado no momento para o <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> objeto."
  remarks: "O <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>método deve ser chamado depois que um identificador de cliente foi passado para um processo de cliente.</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> Se esse método não for chamado, o <xref:System.IO.Pipes.AnonymousPipeServerStream>objeto não receberá aviso quando o cliente descarta seu <xref:System.IO.Pipes.PipeStream>objeto.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  syntax:
    content: public Microsoft.Win32.SafeHandles.SafePipeHandle ClientSafePipeHandle { get; }
    return:
      type: Microsoft.Win32.SafeHandles.SafePipeHandle
      description: "Um identificador para o <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> objeto que está conectado no momento para o <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> objeto."
  overload: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  id: Dispose(System.Boolean)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: Dispose(Boolean)
  nameWithType: AnonymousPipeServerStream.Dispose(Boolean)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Dispose(Boolean)
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  syntax:
    content: protected override void Dispose (bool disposing);
    parameters:
    - id: disposing
      type: System.Boolean
      description: "A ser adicionado."
  overload: System.IO.Pipes.AnonymousPipeServerStream.Dispose*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  id: DisposeLocalCopyOfClientHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: DisposeLocalCopyOfClientHandle()
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Fecha a cópia local do <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> identificador do objeto."
  remarks: "O método DisposeLocalCopyOfClientHandle deve ser chamado depois que o identificador de cliente foi passado para o cliente. Se esse método não for chamado, o <xref:System.IO.Pipes.AnonymousPipeServerStream>objeto não receberá aviso quando o cliente descarta seu <xref:System.IO.Pipes.PipeStream>objeto.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/m-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/m-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/m-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: public void DisposeLocalCopyOfClientHandle ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize
  id: Finalize
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: Finalize()
  nameWithType: AnonymousPipeServerStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Finalize()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Libera recursos não gerenciados e executa outras operações de limpeza antes do <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> instância é recuperada pela coleta de lixo."
  syntax:
    content: ~AnonymousPipeServerStream ();
    parameters: []
  overload: System.IO.Pipes.AnonymousPipeServerStream.Finalize*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  id: GetClientHandleAsString
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: GetClientHandleAsString()
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString()
  type: Method
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém o conectado <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> identificador do objeto como uma cadeia de caracteres."
  remarks: "O <xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A>método deve ser chamado depois que um identificador de cliente foi passado para um processo de cliente.</xref:System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle%2A> Se esse método não for chamado, o <xref:System.IO.Pipes.AnonymousPipeServerStream>objeto não receberá aviso quando o cliente descarta seu <xref:System.IO.Pipes.PipeStream>objeto.</xref:System.IO.Pipes.PipeStream> </xref:System.IO.Pipes.AnonymousPipeServerStream>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process with a <xref:System.IO.Pipes.PipeDirection> value of <xref:System.IO.Pipes.PipeDirection>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/m-system.io.pipes.anonym_2_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/m-system.io.pipes.anonym_2_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/m-system.io.pipes.anonym_2_1.cpp)]"
  syntax:
    content: public string GetClientHandleAsString ();
    parameters: []
    return:
      type: System.String
      description: "Uma cadeia de caracteres que representa o conectado <xref href=&quot;System.IO.Pipes.AnonymousPipeClientStream&quot;> </xref> identificador do objeto."
  overload: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString*
  exceptions: []
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  id: ReadMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Define o modo de leitura para o <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> objeto. Para pipes anônimos, o modo de transmissão deve ser <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>."
  remarks: "Pipes anônimos não suportam <xref:System.IO.Pipes.PipeTransmissionMode>o modo de leitura.</xref:System.IO.Pipes.PipeTransmissionMode>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, the <xref:System.NotSupportedException> is caught when the ReadMode property is set to <xref:System.IO.Pipes.PipeTransmissionMode>.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_1_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_1_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_1_1.cpp)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode ReadMode { set; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "O modo de leitura para o <xref href=&quot;System.IO.Pipes.AnonymousPipeServerStream&quot;> </xref> objeto."
  overload: System.IO.Pipes.AnonymousPipeServerStream.ReadMode*
  exceptions:
  - type: System.ArgumentOutOfRangeException
    commentId: T:System.ArgumentOutOfRangeException
    description: "O modo de transmissão não é válido. Para pipes anônimos, apenas <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> tem suporte."
  - type: System.NotSupportedException
    commentId: T:System.NotSupportedException
    description: "A propriedade é definida como <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref>, que não há suporte para pipes anônimos."
  - type: System.IO.IOException
    commentId: T:System.IO.IOException
    description: "A conexão for interrompida ou outro erro de e/s ocorre."
  - type: System.ObjectDisposedException
    commentId: T:System.ObjectDisposedException
    description: "A conexão é fechada."
  platform:
  - net462
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  id: TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  langs:
  - csharp
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  type: Property
  assemblies:
  - System.Core
  namespace: System.IO.Pipes
  summary: "Obtém o modo de transmissão de pipe com suporte para a conexão atual."
  remarks: "Pipes anônimos não suportam <xref:System.IO.Pipes.PipeTransmissionMode>o modo de leitura.</xref:System.IO.Pipes.PipeTransmissionMode>"
  example:
  - "The following example demonstrates a way to send a string from a parent process to a child process by using anonymous pipes. In this example, an <xref:System.IO.Pipes.AnonymousPipeServerStream> object is created in a parent process and the TransmissionMode property is displayed to the console.  \n  \n [!code-cs[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/csharp/p-system.io.pipes.anonym_0_1.cs)]\n [!code-vb[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/visualbasic/p-system.io.pipes.anonym_0_1.vb)]\n [!code-cpp[System.IO.Pipes.AnonymousPipeServerStream_Sample#01](~/add/codesnippet/cpp/p-system.io.pipes.anonym_0_1.cpp)]"
  syntax:
    content: public override System.IO.Pipes.PipeTransmissionMode TransmissionMode { get; }
    return:
      type: System.IO.Pipes.PipeTransmissionMode
      description: "O <xref href=&quot;System.IO.Pipes.PipeTransmissionMode&quot;> </xref> o pipe atual com suporte."
  overload: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode*
  exceptions: []
  platform:
  - net462
references:
- uid: System.IO.Pipes.PipeStream
  isExternal: false
  name: System.IO.Pipes.PipeStream
- uid: System.NotSupportedException
  isExternal: true
  name: System.NotSupportedException
- uid: System.ArgumentOutOfRangeException
  isExternal: true
  name: System.ArgumentOutOfRangeException
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.IO.IOException
  isExternal: true
  name: System.IO.IOException
- uid: System.ObjectDisposedException
  isExternal: true
  name: System.ObjectDisposedException
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream()
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream()
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection)
- uid: System.IO.Pipes.PipeDirection
  parent: System.IO.Pipes
  isExternal: false
  name: PipeDirection
  nameWithType: PipeDirection
  fullName: System.IO.Pipes.PipeDirection
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability)
- uid: System.IO.HandleInheritability
  parent: System.IO
  isExternal: true
  name: HandleInheritability
  nameWithType: HandleInheritability
  fullName: System.IO.HandleInheritability
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,Microsoft.Win32.SafeHandles.SafePipeHandle,Microsoft.Win32.SafeHandles.SafePipeHandle)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,SafePipeHandle,SafePipeHandle)
- uid: Microsoft.Win32.SafeHandles.SafePipeHandle
  parent: Microsoft.Win32.SafeHandles
  isExternal: false
  name: SafePipeHandle
  nameWithType: SafePipeHandle
  fullName: Microsoft.Win32.SafeHandles.SafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32)
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor(System.IO.Pipes.PipeDirection,System.IO.HandleInheritability,System.Int32,System.IO.Pipes.PipeSecurity)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.AnonymousPipeServerStream(PipeDirection,HandleInheritability,Int32,PipeSecurity)
- uid: System.IO.Pipes.PipeSecurity
  parent: System.IO.Pipes
  isExternal: false
  name: PipeSecurity
  nameWithType: PipeSecurity
  fullName: System.IO.Pipes.PipeSecurity
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose(System.Boolean)
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Dispose(Boolean)
  nameWithType: AnonymousPipeServerStream.Dispose(Boolean)
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Dispose(Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: DisposeLocalCopyOfClientHandle()
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle()
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Finalize()
  nameWithType: AnonymousPipeServerStream.Finalize()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.Finalize()
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: GetClientHandleAsString()
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString()
  fullName: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString()
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.ReadMode
- uid: System.IO.Pipes.PipeTransmissionMode
  parent: System.IO.Pipes
  isExternal: false
  name: PipeTransmissionMode
  nameWithType: PipeTransmissionMode
  fullName: System.IO.Pipes.PipeTransmissionMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
  fullName: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.#ctor*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: AnonymousPipeServerStream
  nameWithType: AnonymousPipeServerStream.AnonymousPipeServerStream
- uid: System.IO.Pipes.AnonymousPipeServerStream.ClientSafePipeHandle*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ClientSafePipeHandle
  nameWithType: AnonymousPipeServerStream.ClientSafePipeHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Dispose*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Dispose
  nameWithType: AnonymousPipeServerStream.Dispose
- uid: System.IO.Pipes.AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: DisposeLocalCopyOfClientHandle
  nameWithType: AnonymousPipeServerStream.DisposeLocalCopyOfClientHandle
- uid: System.IO.Pipes.AnonymousPipeServerStream.Finalize*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: Finalize
  nameWithType: AnonymousPipeServerStream.Finalize
- uid: System.IO.Pipes.AnonymousPipeServerStream.GetClientHandleAsString*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: GetClientHandleAsString
  nameWithType: AnonymousPipeServerStream.GetClientHandleAsString
- uid: System.IO.Pipes.AnonymousPipeServerStream.ReadMode*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: ReadMode
  nameWithType: AnonymousPipeServerStream.ReadMode
- uid: System.IO.Pipes.AnonymousPipeServerStream.TransmissionMode*
  parent: System.IO.Pipes.AnonymousPipeServerStream
  isExternal: false
  name: TransmissionMode
  nameWithType: AnonymousPipeServerStream.TransmissionMode
