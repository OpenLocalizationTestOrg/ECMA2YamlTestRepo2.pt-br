### YamlMime:ManagedReference
items:
- uid: System.ServiceModel.Description.IPolicyImportExtension
  id: IPolicyImportExtension
  children:
  - System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  langs:
  - csharp
  name: IPolicyImportExtension
  nameWithType: IPolicyImportExtension
  fullName: System.ServiceModel.Description.IPolicyImportExtension
  type: Interface
  summary: "Define um método para objetos que importar asserções de políticas personalizadas sobre associações."
  remarks: "Implemente a interface IPolicyImportExtension para pesquisar informações de WSDL expostas por um ponto de extremidade específico para declarações de políticas personalizadas sobre recursos de ponto de extremidade ou requisitos. Normalmente, um importador de política procura por uma declaração específica e ou insere um elemento de associação, configura um elemento de associação ou modifica o contrato para oferecer suporte a requisitos da asserção.       Diferentemente de sua contraparte <xref:System.ServiceModel.Description.IPolicyExportExtension>, IPolicyImportExtension não exige a implementação por um <xref:System.ServiceModel.Channels.BindingElement>do objeto; você pode carregá-lo usando a seção de configuração de cliente mostrada na seção exemplos ou programaticamente ao ser adicionado a <xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName>construtor.</xref:System.ServiceModel.Description.WsdlImporter?displayProperty=fullName> </xref:System.ServiceModel.Channels.BindingElement> </xref:System.ServiceModel.Description.IPolicyExportExtension>       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]passa dois objetos para o <xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A>método, um <xref:System.ServiceModel.Description.MetadataImporter>e <xref:System.ServiceModel.Description.PolicyConversionContext>.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter> </xref:System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy%2A> Normalmente o <xref:System.ServiceModel.Description.PolicyConversionContext>objeto já contém as declarações de política para cada escopo de associação.</xref:System.ServiceModel.Description.PolicyConversionContext>       Uma implementação de IPolicyImportExtension executa as seguintes etapas: 1.  Localiza a declaração de política personalizada para os quais é responsável por chamar o <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, ou <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>métodos, dependendo do escopo.</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>      2.  Remove a declaração de política da coleção de asserção. O <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>método localiza retorna e remove a asserção em uma única etapa.</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>      3.  Modificar a pilha de associação ou o contrato adicionando um personalizado necessário <xref:System.ServiceModel.Channels.BindingElement>para o <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>propriedade ou modificando o <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>propriedade.</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> </xref:System.ServiceModel.Channels.BindingElement>       Etapa 2 é importante. Depois de tem sido chamados todos os importadores de políticas, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] verifica a existência de quaisquer declarações de política que permanecem. Se houver, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] pressupõe que a importação da política não foi bem-sucedida e não importa a associação associada.      > [!IMPORTANT] > Um fornecedor de metadados mal-intencionados pode tentar enviar XML mal formado como parte dos metadados em uma tentativa de explorar um importador de política. É altamente recomendável que política personalizada importadores ser robusto para todas as formas de XML que pode ser passado a ele.       Personalizado <xref:System.ServiceModel.Description.MetadataImporter>implementações devem implementar seus próprios <xref:System.ServiceModel.Description.PolicyConversionContext>objeto para extrair as declarações de política associado ao formato de metadados personalizados.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter>       Se você deseja exportar e importar os elementos WSDL personalizados que não fazem declarações de política, consulte <xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>e <xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName>.</xref:System.ServiceModel.Description.IWsdlImportExtension?displayProperty=fullName> </xref:System.ServiceModel.Description.IWsdlExportExtension?displayProperty=fullName>      > [!NOTE] > Você pode usar importadores de políticas personalizadas e exporters com o [Ferramenta Utilitária de metadados ServiceModel (Svcutil.exe)](~/add/includes/ajax-current-ext-md.md) usando os mesmos elementos de configuração em um arquivo de configuração e o `/svcutilConfig:<configFile>` opção."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public interface IPolicyImportExtension
  implements: []
  platform:
  - net462
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  id: ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  langs:
  - csharp
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  type: Method
  assemblies:
  - System.ServiceModel
  namespace: System.ServiceModel.Description
  summary: "Define um método que pode importar asserções de política personalizada e adicionar a implementação de elementos de associação."
  remarks: "Implementar o `ImportPolicy` método obter declarações de política e executar a modificação do contrato importado ou associação para dar suporte a asserção. Normalmente, um importador de política responde para localizar uma declaração de política personalizada definindo ou inserindo um elemento de associação a associação está sendo importada.       [!INCLUDE[indigo1](~/add/includes/ajax-current-ext-md.md)]passa dois objetos para o método ImportPolicy um <xref:System.ServiceModel.Description.MetadataImporter>e <xref:System.ServiceModel.Description.PolicyConversionContext>.</xref:System.ServiceModel.Description.PolicyConversionContext> </xref:System.ServiceModel.Description.MetadataImporter> Normalmente o <xref:System.ServiceModel.Description.PolicyConversionContext>objeto já contém as declarações de política para cada escopo de associação.</xref:System.ServiceModel.Description.PolicyConversionContext>       Um <xref:System.ServiceModel.Description.IPolicyImportExtension>implementação executa as seguintes etapas: 1.</xref:System.ServiceModel.Description.IPolicyImportExtension>  Localiza a declaração de política personalizada para os quais é responsável por chamar o <xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>, <xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A>, ou <xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A>métodos, dependendo do escopo.</xref:System.ServiceModel.Description.PolicyConversionContext.GetOperationBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetMessageBindingAssertions%2A> </xref:System.ServiceModel.Description.PolicyConversionContext.GetBindingAssertions%2A>      2.  Remove a declaração de política da coleção de asserção. O <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>método localiza retorna e remove a asserção em uma única etapa.</xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName>      3.  Modifica a pilha de associação ou o contrato adicionando um personalizado necessário <xref:System.ServiceModel.Channels.BindingElement>para o <xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A>propriedade ou modificando o <xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName>propriedade.</xref:System.ServiceModel.Description.PolicyConversionContext.Contract%2A?displayProperty=fullName> </xref:System.ServiceModel.Description.PolicyConversionContext.BindingElements%2A> </xref:System.ServiceModel.Channels.BindingElement>       Etapa 2 é importante. Depois de tem sido chamados todos os importadores de políticas, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] verifica a existência de quaisquer declarações de política que permanecem. Se houver, [!INCLUDE[indigo2](~/add/includes/ajax-current-ext-md.md)] pressupõe que a importação da política não foi bem-sucedida e não importa a associação associada."
  example:
  - "The following code example shows the use of the <xref:System.ServiceModel.Description.PolicyAssertionCollection.Remove%2A?displayProperty=fullName> method to locate, return, and remove the assertion in one step.  \n  \n [!code-cs[CustomPolicySample#1](~/add/codesnippet/csharp/custompolicysample.client/policyimporter.cs#1)]\n [!code-vb[CustomPolicySample#1](~/add/codesnippet/visualbasic/custompolicysample.client/policyimporter.vb#1)]  \n  \n The following code example shows the client application configuration file to load the custom policy importer when the <xref:System.ServiceModel.Description.MetadataResolver?displayProperty=fullName> is invoked.  \n  \n [!code-cs[XpsCreate#XpsCreateAddPkgContent](~/add/codesnippet/csharp/XpsCreate/XpsCreate.cs#xpscreateaddpkgcontent)]  \n  \n The following code example shows the use of the <xref:System.ServiceModel.Description.MetadataResolver> to download and resolve metadata into description objects.  \n  \n [!code-vb[CustomPolicySample#10](~/add/codesnippet/visualbasic/custompolicysample.client/client.vb#10)]\n [!code-cs[CustomPolicySample#10](~/add/codesnippet/csharp/custompolicysample.client/client.cs#10)]"
  syntax:
    content: public void ImportPolicy (System.ServiceModel.Description.MetadataImporter importer, System.ServiceModel.Description.PolicyConversionContext context);
    parameters:
    - id: importer
      type: System.ServiceModel.Description.MetadataImporter
      description: "O <xref href=&quot;System.ServiceModel.Description.MetadataImporter&quot;> </xref> objeto em uso."
    - id: context
      type: System.ServiceModel.Description.PolicyConversionContext
      description: "O <xref href=&quot;System.ServiceModel.Description.PolicyConversionContext&quot;> </xref> que contém as declarações de política podem ser importadas e as coleções de elementos a que a implementação de elementos de associação pode ser adicionado de associação."
  overload: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  exceptions: []
  platform:
  - net462
references:
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(System.ServiceModel.Description.MetadataImporter,System.ServiceModel.Description.PolicyConversionContext)
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy(MetadataImporter,PolicyConversionContext)
  nameWithType: IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
  fullName: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy(MetadataImporter,PolicyConversionContext)
- uid: System.ServiceModel.Description.MetadataImporter
  parent: System.ServiceModel.Description
  isExternal: false
  name: MetadataImporter
  nameWithType: MetadataImporter
  fullName: System.ServiceModel.Description.MetadataImporter
- uid: System.ServiceModel.Description.PolicyConversionContext
  parent: System.ServiceModel.Description
  isExternal: false
  name: PolicyConversionContext
  nameWithType: PolicyConversionContext
  fullName: System.ServiceModel.Description.PolicyConversionContext
- uid: System.ServiceModel.Description.IPolicyImportExtension.ImportPolicy*
  parent: System.ServiceModel.Description.IPolicyImportExtension
  isExternal: false
  name: ImportPolicy
  nameWithType: IPolicyImportExtension.ImportPolicy
