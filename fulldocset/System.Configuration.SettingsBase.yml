### YamlMime:ManagedReference
items:
- uid: System.Configuration.SettingsBase
  id: SettingsBase
  children:
  - System.Configuration.SettingsBase.#ctor
  - System.Configuration.SettingsBase.Context
  - System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  - System.Configuration.SettingsBase.IsSynchronized
  - System.Configuration.SettingsBase.Item(System.String)
  - System.Configuration.SettingsBase.Properties
  - System.Configuration.SettingsBase.PropertyValues
  - System.Configuration.SettingsBase.Providers
  - System.Configuration.SettingsBase.Save
  - System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  langs:
  - csharp
  name: SettingsBase
  nameWithType: SettingsBase
  fullName: System.Configuration.SettingsBase
  type: Class
  summary: "Fornece a classe base usada para oferecer suporte a configurações de propriedade do usuário."
  remarks: "Web Forms do ASP.NET e Windows Forms usam a mesma infraestrutura de definições de configuração para dar suporte a configurações de usuário. Configurações de usuário dentro do ASP.NET são geralmente chamadas de perfil do ASP.NET. A infraestrutura de configurações inclui a classe base SettingsBase, a <xref:System.Configuration.SettingsProperty>classe, a <xref:System.Configuration.SettingsPropertyValue>classe, a <xref:System.Configuration.SettingsContext>classe, a <xref:System.Configuration.SettingsProvider>classe e a <xref:System.Configuration.SettingAttribute>classe.</xref:System.Configuration.SettingAttribute> </xref:System.Configuration.SettingsProvider> </xref:System.Configuration.SettingsContext> </xref:System.Configuration.SettingsPropertyValue> </xref:System.Configuration.SettingsProperty>       As classes de base de configuração fornecem apenas uma infraestrutura comum para definir e persistência das propriedades de configurações. Dependendo de como essas classes base são derivadas e seu ambiente de tempo de execução, a API de configurações pode fornecer níveis diferentes de funcionalidades. Por exemplo, o perfil do ASP.NET usa as classes de base de configuração para fornecer as configurações por usuário que são salvos e carregadas de acordo com a semântica de solicitação."
  syntax:
    content: public abstract class SettingsBase
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.#ctor
  id: '#ctor'
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: SettingsBase()
  nameWithType: SettingsBase.SettingsBase()
  fullName: System.Configuration.SettingsBase.SettingsBase()
  type: Constructor
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> classe."
  syntax:
    content: protected SettingsBase ();
    parameters: []
  overload: System.Configuration.SettingsBase.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Context
  id: Context
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Context
  nameWithType: SettingsBase.Context
  fullName: System.Configuration.SettingsBase.Context
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém o contexto de configurações associadas."
  remarks: "Um <xref:System.Configuration.SettingsContext>é usado pelo aplicativo para fornecer informações contextuais que o provedor pode usar para manter as configurações.</xref:System.Configuration.SettingsContext>       Cada classe de configurações derivado <xref:System.Configuration.SettingsBase>tem um contexto associado a.</xref:System.Configuration.SettingsBase> O contexto é passado para o provedor de configurações para informações adicionais sobre as informações de configurações de identidade. Contexto, portanto, atua como uma dica para ajudar o provedor de configurações determinam como persistir os valores de configurações associadas."
  syntax:
    content: public virtual System.Configuration.SettingsContext Context { get; }
    return:
      type: System.Configuration.SettingsContext
      description: "Um <xref href=&quot;System.Configuration.SettingsContext&quot;> </xref> associado à instância de configurações."
  overload: System.Configuration.SettingsBase.Context*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  id: Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  nameWithType: SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  fullName: System.Configuration.SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Inicializa as propriedades internas usadas pelo <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> objeto."
  syntax:
    content: public void Initialize (System.Configuration.SettingsContext context, System.Configuration.SettingsPropertyCollection properties, System.Configuration.SettingsProviderCollection providers);
    parameters:
    - id: context
      type: System.Configuration.SettingsContext
      description: "O contexto de configurações relacionadas às configurações de propriedades."
    - id: properties
      type: System.Configuration.SettingsPropertyCollection
      description: "As propriedades de configurações que estarão acessíveis a partir de <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> instância."
    - id: providers
      type: System.Configuration.SettingsProviderCollection
      description: "Os provedores inicializados que devem ser usados ao carregar e salvar os valores de propriedade."
  overload: System.Configuration.SettingsBase.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.IsSynchronized
  id: IsSynchronized
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
  fullName: System.Configuration.SettingsBase.IsSynchronized
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém um valor que indica se o acesso ao objeto é sincronizado (thread-safe)."
  syntax:
    content: public bool IsSynchronized { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se acessar para o <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> for sincronizado; caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Configuration.SettingsBase.IsSynchronized*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Item(System.String)
  id: Item(System.String)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Item(String)
  nameWithType: SettingsBase.Item(String)
  fullName: System.Configuration.SettingsBase.Item(String)
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém ou define o valor da propriedade configurações especificadas."
  remarks: "A propriedade do Item, também conhecido como o indexador, normalmente é usada na classe de configurações derivada de <xref:System.Configuration.SettingsBase>.</xref:System.Configuration.SettingsBase> A propriedade do Item associa a propriedade pública da classe para a propriedade de configurações correspondente.       Na primeira vez que uma propriedade é acessada, o <xref:System.Configuration.SettingsBase>instância encontrará todas as outras propriedades que compartilham o mesmo provedor de propriedade solicitada.</xref:System.Configuration.SettingsBase> O <xref:System.Configuration.SettingsBase>instância chamará o provedor, passando o conjunto de <xref:System.Configuration.SettingsProperty>objetos que representam os dados que o provedor deve recuperar.</xref:System.Configuration.SettingsProperty> </xref:System.Configuration.SettingsBase>       Observe que o indexador será obter e definir dados de propriedade de uma forma thread-safe se <xref:System.Configuration.SettingsBase.IsSynchronized%2A>é `true`.</xref:System.Configuration.SettingsBase.IsSynchronized%2A> Um <xref:System.Configuration.SettingsBase>instância por padrão não é thread-safe.</xref:System.Configuration.SettingsBase> No entanto, você pode chamar <xref:System.Configuration.SettingsBase.Synchronized%2A>, passando um <xref:System.Configuration.SettingsBase>instância para estabelecer o <xref:System.Configuration.SettingsBase>indexador operar de forma segura para thread.</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase.Synchronized%2A>"
  syntax:
    content: public virtual object this[string propertyName] { get; set; }
    parameters:
    - id: propertyName
      type: System.String
      description: "Um <xref:System.String>que contém o nome da propriedade para acessar.</xref:System.String>"
    return:
      type: System.Object
      description: "Se encontrado, o valor da propriedade nomeada de configurações."
  overload: System.Configuration.SettingsBase.Item*
  exceptions:
  - type: System.Configuration.SettingsPropertyNotFoundException
    commentId: T:System.Configuration.SettingsPropertyNotFoundException
    description: "Não existem propriedades associadas ao objeto atual, ou a propriedade especificada não pôde ser encontrada."
  - type: System.Configuration.SettingsPropertyIsReadOnlyException
    commentId: T:System.Configuration.SettingsPropertyIsReadOnlyException
    description: "Foi feita uma tentativa para definir uma propriedade somente leitura."
  - type: System.Configuration.SettingsPropertyWrongTypeException
    commentId: T:System.Configuration.SettingsPropertyWrongTypeException
    description: "O valor fornecido é de um tipo incompatível com a propriedade de configurações, durante uma operação de definição."
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Properties
  id: Properties
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Properties
  nameWithType: SettingsBase.Properties
  fullName: System.Configuration.SettingsBase.Properties
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém a coleção de propriedades de configurações."
  remarks: "O `get` acessador da propriedade propriedades retorna a coleção de <xref:System.Configuration.SettingsProperty>instâncias associadas às propriedades gerenciadas pelo <xref:System.Configuration.SettingsBase>instância.</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsProperty>       O <xref:System.Configuration.SettingsBase>classe nativamente reconhece certas características de uma configuração, como seu nome, tipo de propriedade, provedor de configurações, o valor padrão e status de somente leitura e uma preferência de serialização.</xref:System.Configuration.SettingsBase> Essas características são espelhadas como propriedades de <xref:System.Configuration.SettingsProperty>classe.</xref:System.Configuration.SettingsProperty> Todos os outros atributos da <xref:System.Configuration.SettingsProperty>classe apenas são passados para o seu provedor de configurações associadas como <xref:System.Configuration.SettingsAttributeDictionary>.</xref:System.Configuration.SettingsAttributeDictionary> </xref:System.Configuration.SettingsProperty>"
  syntax:
    content: public virtual System.Configuration.SettingsPropertyCollection Properties { get; }
    return:
      type: System.Configuration.SettingsPropertyCollection
      description: "Um <xref href=&quot;System.Configuration.SettingsPropertyCollection&quot;> </xref> coleção que contém todos os <xref href=&quot;System.Configuration.SettingsProperty&quot;> </xref> objetos."
  overload: System.Configuration.SettingsBase.Properties*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.PropertyValues
  id: PropertyValues
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
  fullName: System.Configuration.SettingsBase.PropertyValues
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém uma coleção de configurações de valores de propriedade."
  syntax:
    content: public virtual System.Configuration.SettingsPropertyValueCollection PropertyValues { get; }
    return:
      type: System.Configuration.SettingsPropertyValueCollection
      description: "Uma coleção de <xref href=&quot;System.Configuration.SettingsPropertyValue&quot;> </xref> objetos que representam os valores de dados reais para as propriedades gerenciadas pelo <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> instância."
  overload: System.Configuration.SettingsBase.PropertyValues*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Providers
  id: Providers
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Providers
  nameWithType: SettingsBase.Providers
  fullName: System.Configuration.SettingsBase.Providers
  type: Property
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Obtém uma coleção de provedores de configurações."
  syntax:
    content: public virtual System.Configuration.SettingsProviderCollection Providers { get; }
    return:
      type: System.Configuration.SettingsProviderCollection
      description: "Um <xref href=&quot;System.Configuration.SettingsProviderCollection&quot;> </xref> contendo <xref href=&quot;System.Configuration.SettingsProvider&quot;> </xref> objetos."
  overload: System.Configuration.SettingsBase.Providers*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Save
  id: Save
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Save()
  nameWithType: SettingsBase.Save()
  fullName: System.Configuration.SettingsBase.Save()
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Armazena os valores atuais das propriedades de configurações."
  remarks: "O <xref:System.Configuration.SettingsBase>instância agrupa propriedades com base no provedor que está associado a cada propriedade.</xref:System.Configuration.SettingsBase> Cada provedor é chamado em sequência e é passado o conjunto de propriedades que o provedor deve salvar."
  syntax:
    content: public virtual void Save ();
    parameters: []
  overload: System.Configuration.SettingsBase.Save*
  exceptions: []
  platform:
  - net462
- uid: System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  id: Synchronized(System.Configuration.SettingsBase)
  parent: System.Configuration.SettingsBase
  langs:
  - csharp
  name: Synchronized(SettingsBase)
  nameWithType: SettingsBase.Synchronized(SettingsBase)
  fullName: System.Configuration.SettingsBase.Synchronized(SettingsBase)
  type: Method
  assemblies:
  - System
  namespace: System.Configuration
  summary: "Fornece um <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> classe que é sincronizado (isento de threads)."
  remarks: "O indexador será obter e definir os dados de propriedade de uma forma thread-safe se o <xref:System.Configuration.SettingsBase.IsSynchronized%2A>está definida como `true`.</xref:System.Configuration.SettingsBase.IsSynchronized%2A>  Um <xref:System.Configuration.SettingsBase>instância por padrão não é thread-safe.</xref:System.Configuration.SettingsBase>  No entanto, você pode chamar Synchronized passando um <xref:System.Configuration.SettingsBase>instância para estabelecer o <xref:System.Configuration.SettingsBase>indexador operar de forma segura para thread.</xref:System.Configuration.SettingsBase> </xref:System.Configuration.SettingsBase>"
  syntax:
    content: public static System.Configuration.SettingsBase Synchronized (System.Configuration.SettingsBase settingsBase);
    parameters:
    - id: settingsBase
      type: System.Configuration.SettingsBase
      description: "A classe usada para oferecer suporte a configurações de propriedade do usuário."
    return:
      type: System.Configuration.SettingsBase
      description: "Um <xref href=&quot;System.Configuration.SettingsBase&quot;> </xref> classe que é sincronizado."
  overload: System.Configuration.SettingsBase.Synchronized*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Configuration.SettingsPropertyNotFoundException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyNotFoundException
  nameWithType: SettingsPropertyNotFoundException
  fullName: System.Configuration.SettingsPropertyNotFoundException
- uid: System.Configuration.SettingsPropertyIsReadOnlyException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyIsReadOnlyException
  nameWithType: SettingsPropertyIsReadOnlyException
  fullName: System.Configuration.SettingsPropertyIsReadOnlyException
- uid: System.Configuration.SettingsPropertyWrongTypeException
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyWrongTypeException
  nameWithType: SettingsPropertyWrongTypeException
  fullName: System.Configuration.SettingsPropertyWrongTypeException
- uid: System.Configuration.SettingsBase.#ctor
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: SettingsBase()
  nameWithType: SettingsBase.SettingsBase()
  fullName: System.Configuration.SettingsBase.SettingsBase()
- uid: System.Configuration.SettingsBase.Context
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Context
  nameWithType: SettingsBase.Context
  fullName: System.Configuration.SettingsBase.Context
- uid: System.Configuration.SettingsContext
  parent: System.Configuration
  isExternal: false
  name: SettingsContext
  nameWithType: SettingsContext
  fullName: System.Configuration.SettingsContext
- uid: System.Configuration.SettingsBase.Initialize(System.Configuration.SettingsContext,System.Configuration.SettingsPropertyCollection,System.Configuration.SettingsProviderCollection)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  nameWithType: SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
  fullName: System.Configuration.SettingsBase.Initialize(SettingsContext,SettingsPropertyCollection,SettingsProviderCollection)
- uid: System.Configuration.SettingsPropertyCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyCollection
  nameWithType: SettingsPropertyCollection
  fullName: System.Configuration.SettingsPropertyCollection
- uid: System.Configuration.SettingsProviderCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsProviderCollection
  nameWithType: SettingsProviderCollection
  fullName: System.Configuration.SettingsProviderCollection
- uid: System.Configuration.SettingsBase.IsSynchronized
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
  fullName: System.Configuration.SettingsBase.IsSynchronized
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Configuration.SettingsBase.Item(System.String)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Item(String)
  nameWithType: SettingsBase.Item(String)
  fullName: System.Configuration.SettingsBase.Item(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Configuration.SettingsBase.Properties
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Properties
  nameWithType: SettingsBase.Properties
  fullName: System.Configuration.SettingsBase.Properties
- uid: System.Configuration.SettingsBase.PropertyValues
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
  fullName: System.Configuration.SettingsBase.PropertyValues
- uid: System.Configuration.SettingsPropertyValueCollection
  parent: System.Configuration
  isExternal: false
  name: SettingsPropertyValueCollection
  nameWithType: SettingsPropertyValueCollection
  fullName: System.Configuration.SettingsPropertyValueCollection
- uid: System.Configuration.SettingsBase.Providers
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Providers
  nameWithType: SettingsBase.Providers
  fullName: System.Configuration.SettingsBase.Providers
- uid: System.Configuration.SettingsBase.Save
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Save()
  nameWithType: SettingsBase.Save()
  fullName: System.Configuration.SettingsBase.Save()
- uid: System.Configuration.SettingsBase.Synchronized(System.Configuration.SettingsBase)
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Synchronized(SettingsBase)
  nameWithType: SettingsBase.Synchronized(SettingsBase)
  fullName: System.Configuration.SettingsBase.Synchronized(SettingsBase)
- uid: System.Configuration.SettingsBase
  parent: System.Configuration
  isExternal: false
  name: SettingsBase
  nameWithType: SettingsBase
  fullName: System.Configuration.SettingsBase
- uid: System.Configuration.SettingsBase.#ctor*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: SettingsBase
  nameWithType: SettingsBase.SettingsBase
- uid: System.Configuration.SettingsBase.Context*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Context
  nameWithType: SettingsBase.Context
- uid: System.Configuration.SettingsBase.Initialize*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Initialize
  nameWithType: SettingsBase.Initialize
- uid: System.Configuration.SettingsBase.IsSynchronized*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: IsSynchronized
  nameWithType: SettingsBase.IsSynchronized
- uid: System.Configuration.SettingsBase.Item*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Item
  nameWithType: SettingsBase.Item
- uid: System.Configuration.SettingsBase.Properties*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Properties
  nameWithType: SettingsBase.Properties
- uid: System.Configuration.SettingsBase.PropertyValues*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: PropertyValues
  nameWithType: SettingsBase.PropertyValues
- uid: System.Configuration.SettingsBase.Providers*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Providers
  nameWithType: SettingsBase.Providers
- uid: System.Configuration.SettingsBase.Save*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Save
  nameWithType: SettingsBase.Save
- uid: System.Configuration.SettingsBase.Synchronized*
  parent: System.Configuration.SettingsBase
  isExternal: false
  name: Synchronized
  nameWithType: SettingsBase.Synchronized
