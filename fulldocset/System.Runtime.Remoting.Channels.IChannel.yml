### YamlMime:ManagedReference
items:
- uid: System.Runtime.Remoting.Channels.IChannel
  id: IChannel
  children:
  - System.Runtime.Remoting.Channels.IChannel.ChannelName
  - System.Runtime.Remoting.Channels.IChannel.ChannelPriority
  - System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)
  langs:
  - csharp
  name: IChannel
  nameWithType: IChannel
  fullName: System.Runtime.Remoting.Channels.IChannel
  type: Interface
  summary: "Fornece os canais para mensagens que ultrapassam os limites de comunicação remota."
  remarks: "Os limites de comunicação remota podem ser <xref:System.Runtime.Remoting.Contexts.Context>s, <xref:System.AppDomain>s, processos ou computadores.</xref:System.AppDomain> </xref:System.Runtime.Remoting.Contexts.Context> Um aplicativo pode atravessar esses limites usando os canais. Esses cruzamentos podem ser de entrada e saída. Um canal pode escutar em um ponto de extremidade de mensagens de entrada, enviar para um ponto de extremidade para as mensagens de saída, ou ambos. Isso fornece um ponto de extensibilidade no tempo de execução de protocolos uma ampla gama, mesmo que o tempo de execução não pode ser na outra extremidade do canal.       Objetos de tempo de execução podem ser usados para representar um conjunto de entidades e semântica amplo e Avançado. O canal fornece o ponto de extensibilidade para converter as mensagens para e de protocolos específicos. Se houver tempos de execução de ambas as extremidades do canal, um canal virtual é criado entre as duas extremidades, para conectar-se as cadeias de coletor do cliente e servidor em ambos os lados do limite.       A parte do cliente do canal está localizada no final de uma cadeia de coletor de contexto do cliente. A parte do canal de servidor está localizada no início da cadeia de coletor do contexto de servidor. As mensagens são entregues para o canal de cliente usando o <xref:System.Runtime.Remoting.Messaging.IMessageSink>de interface, percorrer o canal e, em seguida, são recebidas pelo canal de servidor.</xref:System.Runtime.Remoting.Messaging.IMessageSink> O canal do servidor de entrega a mensagem para o primeiro coletor de contexto do servidor.       Canais devem expor a interface IChannel, que fornece propriedades informativas, como o <xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A>e <xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A>Propriedades.</xref:System.Runtime.Remoting.Channels.IChannel.ChannelPriority%2A> </xref:System.Runtime.Remoting.Channels.IChannel.ChannelName%2A> Canais podem ser registrados usando o <xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName>método.</xref:System.Runtime.Remoting.Channels.ChannelServices.RegisterChannel%2A?displayProperty=fullName>"
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public interface IChannel
  implements: []
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelName
  id: ChannelName
  parent: System.Runtime.Remoting.Channels.IChannel
  langs:
  - csharp
  name: ChannelName
  nameWithType: IChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.IChannel.ChannelName
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Obtém o nome do canal."
  remarks: ''
  example:
  - >-
    [!code-cpp[HttpServerChannel_Server_Client#2](~/add/codesnippet/cpp/p-system.runtime.remotin_0_1.cpp)]
     [!code-cs[HttpServerChannel_Server_Client#2](~/add/codesnippet/csharp/p-system.runtime.remotin_0_1.cs)]
     [!code-vb[HttpServerChannel_Server_Client#2](~/add/codesnippet/visualbasic/p-system.runtime.remotin_0_1.vb)]
  syntax:
    content: public string ChannelName { get; }
    return:
      type: System.String
      description: "O nome do canal."
  overload: System.Runtime.Remoting.Channels.IChannel.ChannelName*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelPriority
  id: ChannelPriority
  parent: System.Runtime.Remoting.Channels.IChannel
  langs:
  - csharp
  name: ChannelPriority
  nameWithType: IChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.IChannel.ChannelPriority
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Obtém a prioridade do canal."
  remarks: "Números mais altos indicam uma prioridade mais alta, portanto, um canal com prioridade de 50 tem uma prioridade maior que um canal com prioridade 25. O canal de domínio entre aplicativos tem uma prioridade de 100.       Canais de cliente com prioridade mais alta recebem a primeira chance de se conectar a um objeto remoto especificado por uma URL ou uma entrada de dados de canal específico de <xref:System.Runtime.Remoting.ObjRef>.</xref:System.Runtime.Remoting.ObjRef>       Para canais de servidor, a prioridade indica a ordem na qual os dados de canal aparecerá em um <xref:System.Runtime.Remoting.ObjRef>, que por sua vez afeta a ordem na qual os clientes tentarão conectar-se ao objeto do servidor.</xref:System.Runtime.Remoting.ObjRef> Se o servidor está escutando em um canal de HTTP com prioridade 50 e um canal TCP com prioridade 25 e o cliente registrou um HTTP e TCP de canal, o cliente usará o canal de HTTP para se comunicar com o servidor."
  example:
  - >-
    [!code-cs[HttpServerChannel_Server_Client#5](~/add/codesnippet/csharp/p-system.runtime.remotin_5_1.cs)]
     [!code-vb[HttpServerChannel_Server_Client#5](~/add/codesnippet/visualbasic/p-system.runtime.remotin_5_1.vb)]
     [!code-cpp[HttpServerChannel_Server_Client#5](~/add/codesnippet/cpp/p-system.runtime.remotin_5_1.cpp)]
  syntax:
    content: public int ChannelPriority { get; }
    return:
      type: System.Int32
      description: "Um inteiro que indica a prioridade do canal."
  overload: System.Runtime.Remoting.Channels.IChannel.ChannelPriority*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
- uid: System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)
  id: Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.IChannel
  langs:
  - csharp
  name: Parse(String,String)
  nameWithType: IChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.IChannel.Parse(String,String)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Runtime.Remoting.Channels
  summary: "Retorna o objeto URI como um parâmetro de saída e o URI do canal atual como o valor de retorno."
  remarks: ''
  example:
  - >-
    [!code-cs[HttpServerChannel_Server_Client#5](~/add/codesnippet/csharp/m-system.runtime.remotin_15_1.cs)]
     [!code-vb[HttpServerChannel_Server_Client#5](~/add/codesnippet/visualbasic/m-system.runtime.remotin_15_1.vb)]
     [!code-cpp[HttpServerChannel_Server_Client#5](~/add/codesnippet/cpp/m-system.runtime.remotin_15_1.cpp)]
  syntax:
    content: public string Parse (string url, out string objectURI);
    parameters:
    - id: url
      type: System.String
      description: "A URL do objeto."
    - id: objectURI
      type: System.String
      description: "Quando este método retorna, contém um <xref:System.String>que contém o objeto URI.</xref:System.String> Esse parâmetro é passado não inicializado."
    return:
      type: System.String
      description: "O URI do canal atual, ou <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> se o URI não pertence a esse canal."
  overload: System.Runtime.Remoting.Channels.IChannel.Parse*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: "O chamador imediato não tem permissão de infraestrutura."
  platform:
  - net462
references:
- uid: System.Security.SecurityException
  isExternal: true
  name: System.Security.SecurityException
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelName
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: ChannelName
  nameWithType: IChannel.ChannelName
  fullName: System.Runtime.Remoting.Channels.IChannel.ChannelName
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelPriority
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IChannel.ChannelPriority
  fullName: System.Runtime.Remoting.Channels.IChannel.ChannelPriority
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Runtime.Remoting.Channels.IChannel.Parse(System.String,System.String@)
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: Parse(String,String)
  nameWithType: IChannel.Parse(String,String)
  fullName: System.Runtime.Remoting.Channels.IChannel.Parse(String,String)
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelName*
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: ChannelName
  nameWithType: IChannel.ChannelName
- uid: System.Runtime.Remoting.Channels.IChannel.ChannelPriority*
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: ChannelPriority
  nameWithType: IChannel.ChannelPriority
- uid: System.Runtime.Remoting.Channels.IChannel.Parse*
  parent: System.Runtime.Remoting.Channels.IChannel
  isExternal: false
  name: Parse
  nameWithType: IChannel.Parse
