### YamlMime:ManagedReference
items:
- uid: System.Windows.FrameworkElementFactory
  id: FrameworkElementFactory
  children:
  - System.Windows.FrameworkElementFactory.#ctor
  - System.Windows.FrameworkElementFactory.#ctor(System.String)
  - System.Windows.FrameworkElementFactory.#ctor(System.Type)
  - System.Windows.FrameworkElementFactory.#ctor(System.Type,System.String)
  - System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  - System.Windows.FrameworkElementFactory.AppendChild(System.Windows.FrameworkElementFactory)
  - System.Windows.FrameworkElementFactory.FirstChild
  - System.Windows.FrameworkElementFactory.IsSealed
  - System.Windows.FrameworkElementFactory.Name
  - System.Windows.FrameworkElementFactory.NextSibling
  - System.Windows.FrameworkElementFactory.Parent
  - System.Windows.FrameworkElementFactory.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  - System.Windows.FrameworkElementFactory.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  - System.Windows.FrameworkElementFactory.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  - System.Windows.FrameworkElementFactory.SetValue(System.Windows.DependencyProperty,System.Object)
  - System.Windows.FrameworkElementFactory.Text
  - System.Windows.FrameworkElementFactory.Type
  langs:
  - csharp
  name: FrameworkElementFactory
  nameWithType: FrameworkElementFactory
  fullName: System.Windows.FrameworkElementFactory
  type: Class
  summary: "Oferece suporte à criação de modelos."
  remarks: "Essa classe é uma maneira preterida programaticamente criar modelos que são subclasses de <xref:System.Windows.FrameworkTemplate>como <xref:System.Windows.Controls.ControlTemplate>ou <xref:System.Windows.DataTemplate>, não toda a funcionalidade de modelo está disponível quando você cria um modelo usando essa classe.</xref:System.Windows.DataTemplate> </xref:System.Windows.Controls.ControlTemplate> </xref:System.Windows.FrameworkTemplate> A maneira recomendada para criar programaticamente um modelo é carregar [!INCLUDE[TLA2#tla_xaml](~/add/includes/tla2sharptla-xaml-md.md)] de uma cadeia de caracteres ou um fluxo de memória usando o <xref:System.Windows.Markup.XamlReader.Load%2A>método de <xref:System.Windows.Markup.XamlReader>classe.</xref:System.Windows.Markup.XamlReader> </xref:System.Windows.Markup.XamlReader.Load%2A>      <a name=&quot;xamlTextUsage_FrameworkElementFactory&quot;></a># # Uso de texto XAML"
  syntax:
    content: >-
      [System.Windows.Localizability(System.Windows.LocalizationCategory.NeverLocalize)]

      public class FrameworkElementFactory
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.#ctor
  id: '#ctor'
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: FrameworkElementFactory()
  nameWithType: FrameworkElementFactory.FrameworkElementFactory()
  fullName: System.Windows.FrameworkElementFactory.FrameworkElementFactory()
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.FrameworkElementFactory&quot;> </xref> classe."
  syntax:
    content: public FrameworkElementFactory ();
    parameters: []
  overload: System.Windows.FrameworkElementFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: FrameworkElementFactory(String)
  nameWithType: FrameworkElementFactory.FrameworkElementFactory(String)
  fullName: System.Windows.FrameworkElementFactory.FrameworkElementFactory(String)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.FrameworkElementFactory&quot;> </xref> classe com o texto especificado para produzir."
  syntax:
    content: public FrameworkElementFactory (string text);
    parameters:
    - id: text
      type: System.String
      description: "A cadeia de caracteres de texto para produzir."
  overload: System.Windows.FrameworkElementFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.#ctor(System.Type)
  id: '#ctor(System.Type)'
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: FrameworkElementFactory(Type)
  nameWithType: FrameworkElementFactory.FrameworkElementFactory(Type)
  fullName: System.Windows.FrameworkElementFactory.FrameworkElementFactory(Type)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.FrameworkElementFactory&quot;> </xref> classe com o <xref:System.Type>.</xref:System.Type> especificado"
  syntax:
    content: public FrameworkElementFactory (Type type);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de instância para criar."
  overload: System.Windows.FrameworkElementFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.#ctor(System.Type,System.String)
  id: '#ctor(System.Type,System.String)'
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: FrameworkElementFactory(Type,String)
  nameWithType: FrameworkElementFactory.FrameworkElementFactory(Type,String)
  fullName: System.Windows.FrameworkElementFactory.FrameworkElementFactory(Type,String)
  type: Constructor
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Windows.FrameworkElementFactory&quot;> </xref> classe com especificado <xref:System.Type>e nome.</xref:System.Type>"
  syntax:
    content: public FrameworkElementFactory (Type type, string name);
    parameters:
    - id: type
      type: System.Type
      description: "O tipo de instância para criar."
    - id: name
      type: System.String
      description: "O identificador de estilo."
  overload: System.Windows.FrameworkElementFactory.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  id: AddHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: AddHandler(RoutedEvent,Delegate)
  nameWithType: FrameworkElementFactory.AddHandler(RoutedEvent,Delegate)
  fullName: System.Windows.FrameworkElementFactory.AddHandler(RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adiciona um manipulador de eventos para o evento roteado para as instâncias criadas por essa fábrica."
  syntax:
    content: public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Objeto de identificador para o evento roteado está sendo tratado."
    - id: handler
      type: System.Delegate
      description: "Uma referência para a implementação do manipulador."
  overload: System.Windows.FrameworkElementFactory.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  id: AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: AddHandler(RoutedEvent,Delegate,Boolean)
  nameWithType: FrameworkElementFactory.AddHandler(RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.FrameworkElementFactory.AddHandler(RoutedEvent,Delegate,Boolean)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adiciona um manipulador de eventos para o evento roteado para as instâncias criadas por essa fábrica, com a opção de configurar o manipulador fornecido a ser invocado até mesmo em casos de eventos roteados que já foram marcados como tratado por outro elemento na rota."
  syntax:
    content: public void AddHandler (System.Windows.RoutedEvent routedEvent, Delegate handler, bool handledEventsToo);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Objeto de identificador para o evento roteado está sendo tratado."
    - id: handler
      type: System.Delegate
      description: "Uma referência para a implementação do manipulador."
    - id: handledEventsToo
      type: System.Boolean
      description: "Se você invocar o manipulador em casos onde o evento roteado já foi marcado como manipulados em seu objeto de argumentos. <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para invocar o manipulador mesmo quando o evento roteado estiver marcado tratada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. Não é comum pedindo para manipular eventos roteados já tratado."
  overload: System.Windows.FrameworkElementFactory.AddHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.AppendChild(System.Windows.FrameworkElementFactory)
  id: AppendChild(System.Windows.FrameworkElementFactory)
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: AppendChild(FrameworkElementFactory)
  nameWithType: FrameworkElementFactory.AppendChild(FrameworkElementFactory)
  fullName: System.Windows.FrameworkElementFactory.AppendChild(FrameworkElementFactory)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Adiciona uma fábrica de filho para esta fábrica."
  syntax:
    content: public void AppendChild (System.Windows.FrameworkElementFactory child);
    parameters:
    - id: child
      type: System.Windows.FrameworkElementFactory
      description: "O <xref href=&quot;System.Windows.FrameworkElementFactory&quot;> </xref> objeto a ser adicionado como um filho."
  overload: System.Windows.FrameworkElementFactory.AppendChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.FirstChild
  id: FirstChild
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: FirstChild
  nameWithType: FrameworkElementFactory.FirstChild
  fullName: System.Windows.FrameworkElementFactory.FirstChild
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém a fábrica do primeiro filho."
  remarks: "<a name=&quot;xamlTextUsage_FirstChild&quot;></a># # Uso de texto XAML"
  syntax:
    content: public System.Windows.FrameworkElementFactory FirstChild { get; }
    return:
      type: System.Windows.FrameworkElementFactory
      description: "Um <xref href=&quot;System.Windows.FrameworkElementFactory&quot;> </xref> a fábrica do primeiro filho."
  overload: System.Windows.FrameworkElementFactory.FirstChild*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.IsSealed
  id: IsSealed
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: IsSealed
  nameWithType: FrameworkElementFactory.IsSealed
  fullName: System.Windows.FrameworkElementFactory.IsSealed
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém um valor que indica se este objeto está em um estado imutável."
  remarks: "<a name=&quot;xamlTextUsage_IsSealed&quot;></a># # Uso de texto XAML"
  syntax:
    content: public bool IsSealed { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se esse objeto está em um estado imutável; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Windows.FrameworkElementFactory.IsSealed*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.Name
  id: Name
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: Name
  nameWithType: FrameworkElementFactory.Name
  fullName: System.Windows.FrameworkElementFactory.Name
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o nome de um item de modelo."
  remarks: "<a name=&quot;xamlTextUsage_Name&quot;></a># # Uso de texto XAML"
  syntax:
    content: public string Name { get; set; }
    return:
      type: System.String
      description: "Uma cadeia de caracteres que é o identificador do modelo."
  overload: System.Windows.FrameworkElementFactory.Name*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.NextSibling
  id: NextSibling
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: NextSibling
  nameWithType: FrameworkElementFactory.NextSibling
  fullName: System.Windows.FrameworkElementFactory.NextSibling
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém a fábrica do próxima irmão."
  remarks: "<a name=&quot;xamlTextUsage_NextSibling&quot;></a># # Uso de texto XAML"
  syntax:
    content: public System.Windows.FrameworkElementFactory NextSibling { get; }
    return:
      type: System.Windows.FrameworkElementFactory
      description: "Um <xref href=&quot;System.Windows.FrameworkElementFactory&quot;> </xref> que é a fábrica do próxima irmão."
  overload: System.Windows.FrameworkElementFactory.NextSibling*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.Parent
  id: Parent
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: Parent
  nameWithType: FrameworkElementFactory.Parent
  fullName: System.Windows.FrameworkElementFactory.Parent
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém o pai <xref href=&quot;System.Windows.FrameworkElementFactory&quot;> </xref>."
  remarks: "<a name=&quot;xamlTextUsage_Parent&quot;></a># # Uso de texto XAML"
  syntax:
    content: public System.Windows.FrameworkElementFactory Parent { get; }
    return:
      type: System.Windows.FrameworkElementFactory
      description: "Um <xref href=&quot;System.Windows.FrameworkElementFactory&quot;> </xref> que é a fábrica do pai."
  overload: System.Windows.FrameworkElementFactory.Parent*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  id: RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: RemoveHandler(RoutedEvent,Delegate)
  nameWithType: FrameworkElementFactory.RemoveHandler(RoutedEvent,Delegate)
  fullName: System.Windows.FrameworkElementFactory.RemoveHandler(RoutedEvent,Delegate)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Remove um manipulador de eventos do evento roteado. Isso se aplica às instâncias criadas por essa fábrica."
  syntax:
    content: public void RemoveHandler (System.Windows.RoutedEvent routedEvent, Delegate handler);
    parameters:
    - id: routedEvent
      type: System.Windows.RoutedEvent
      description: "Objeto de identificador para o evento roteado."
    - id: handler
      type: System.Delegate
      description: "O manipulador a ser removido."
  overload: System.Windows.FrameworkElementFactory.RemoveHandler*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  id: SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: SetBinding(DependencyProperty,BindingBase)
  nameWithType: FrameworkElementFactory.SetBinding(DependencyProperty,BindingBase)
  fullName: System.Windows.FrameworkElementFactory.SetBinding(DependencyProperty,BindingBase)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Configura a associação de dados em uma propriedade."
  syntax:
    content: public void SetBinding (System.Windows.DependencyProperty dp, System.Windows.Data.BindingBase binding);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "Identifica a propriedade onde a associação deve ser estabelecida."
    - id: binding
      type: System.Windows.Data.BindingBase
      description: "Descrição da associação."
  overload: System.Windows.FrameworkElementFactory.SetBinding*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  id: SetResourceReference(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: SetResourceReference(DependencyProperty,Object)
  nameWithType: FrameworkElementFactory.SetResourceReference(DependencyProperty,Object)
  fullName: System.Windows.FrameworkElementFactory.SetResourceReference(DependencyProperty,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Configure uma referência de recurso dinâmico em uma propriedade filho."
  syntax:
    content: public void SetResourceReference (System.Windows.DependencyProperty dp, object name);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "A propriedade à qual o recurso está associado."
    - id: name
      type: System.Object
      description: "O nome do recurso."
  overload: System.Windows.FrameworkElementFactory.SetResourceReference*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.SetValue(System.Windows.DependencyProperty,System.Object)
  id: SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: SetValue(DependencyProperty,Object)
  nameWithType: FrameworkElementFactory.SetValue(DependencyProperty,Object)
  fullName: System.Windows.FrameworkElementFactory.SetValue(DependencyProperty,Object)
  type: Method
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Define o valor da propriedade de dependência."
  syntax:
    content: public void SetValue (System.Windows.DependencyProperty dp, object value);
    parameters:
    - id: dp
      type: System.Windows.DependencyProperty
      description: "O identificador de propriedade de dependência da propriedade a ser definido."
    - id: value
      type: System.Object
      description: "O novo valor."
  overload: System.Windows.FrameworkElementFactory.SetValue*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.Text
  id: Text
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: Text
  nameWithType: FrameworkElementFactory.Text
  fullName: System.Windows.FrameworkElementFactory.Text
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define a cadeia de caracteres de texto para produzir."
  remarks: "<a name=&quot;xamlTextUsage_Text&quot;></a># # Uso de texto XAML"
  syntax:
    content: public string Text { get; set; }
    return:
      type: System.String
      description: "A cadeia de caracteres de texto para produzir."
  overload: System.Windows.FrameworkElementFactory.Text*
  exceptions: []
  platform:
  - net462
- uid: System.Windows.FrameworkElementFactory.Type
  id: Type
  parent: System.Windows.FrameworkElementFactory
  langs:
  - csharp
  name: Type
  nameWithType: FrameworkElementFactory.Type
  fullName: System.Windows.FrameworkElementFactory.Type
  type: Property
  assemblies:
  - PresentationFramework
  namespace: System.Windows
  summary: "Obtém ou define o tipo dos objetos que produz essa fábrica."
  remarks: "<a name=&quot;xamlTextUsage_Type&quot;></a># # Uso de texto XAML"
  syntax:
    content: public Type Type { get; set; }
    return:
      type: System.Type
      description: "O tipo dos objetos que produz essa fábrica."
  overload: System.Windows.FrameworkElementFactory.Type*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Windows.FrameworkElementFactory.#ctor
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: FrameworkElementFactory()
  nameWithType: FrameworkElementFactory.FrameworkElementFactory()
  fullName: System.Windows.FrameworkElementFactory.FrameworkElementFactory()
- uid: System.Windows.FrameworkElementFactory.#ctor(System.String)
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: FrameworkElementFactory(String)
  nameWithType: FrameworkElementFactory.FrameworkElementFactory(String)
  fullName: System.Windows.FrameworkElementFactory.FrameworkElementFactory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Windows.FrameworkElementFactory.#ctor(System.Type)
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: FrameworkElementFactory(Type)
  nameWithType: FrameworkElementFactory.FrameworkElementFactory(Type)
  fullName: System.Windows.FrameworkElementFactory.FrameworkElementFactory(Type)
- uid: System.Type
  parent: System
  isExternal: true
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: System.Windows.FrameworkElementFactory.#ctor(System.Type,System.String)
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: FrameworkElementFactory(Type,String)
  nameWithType: FrameworkElementFactory.FrameworkElementFactory(Type,String)
  fullName: System.Windows.FrameworkElementFactory.FrameworkElementFactory(Type,String)
- uid: System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: AddHandler(RoutedEvent,Delegate)
  nameWithType: FrameworkElementFactory.AddHandler(RoutedEvent,Delegate)
  fullName: System.Windows.FrameworkElementFactory.AddHandler(RoutedEvent,Delegate)
- uid: System.Windows.RoutedEvent
  parent: System.Windows
  isExternal: false
  name: RoutedEvent
  nameWithType: RoutedEvent
  fullName: System.Windows.RoutedEvent
- uid: System.Delegate
  parent: System
  isExternal: true
  name: Delegate
  nameWithType: Delegate
  fullName: System.Delegate
- uid: System.Windows.FrameworkElementFactory.AddHandler(System.Windows.RoutedEvent,System.Delegate,System.Boolean)
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: AddHandler(RoutedEvent,Delegate,Boolean)
  nameWithType: FrameworkElementFactory.AddHandler(RoutedEvent,Delegate,Boolean)
  fullName: System.Windows.FrameworkElementFactory.AddHandler(RoutedEvent,Delegate,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Windows.FrameworkElementFactory.AppendChild(System.Windows.FrameworkElementFactory)
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: AppendChild(FrameworkElementFactory)
  nameWithType: FrameworkElementFactory.AppendChild(FrameworkElementFactory)
  fullName: System.Windows.FrameworkElementFactory.AppendChild(FrameworkElementFactory)
- uid: System.Windows.FrameworkElementFactory
  parent: System.Windows
  isExternal: false
  name: FrameworkElementFactory
  nameWithType: FrameworkElementFactory
  fullName: System.Windows.FrameworkElementFactory
- uid: System.Windows.FrameworkElementFactory.FirstChild
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: FirstChild
  nameWithType: FrameworkElementFactory.FirstChild
  fullName: System.Windows.FrameworkElementFactory.FirstChild
- uid: System.Windows.FrameworkElementFactory.IsSealed
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: IsSealed
  nameWithType: FrameworkElementFactory.IsSealed
  fullName: System.Windows.FrameworkElementFactory.IsSealed
- uid: System.Windows.FrameworkElementFactory.Name
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: Name
  nameWithType: FrameworkElementFactory.Name
  fullName: System.Windows.FrameworkElementFactory.Name
- uid: System.Windows.FrameworkElementFactory.NextSibling
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: NextSibling
  nameWithType: FrameworkElementFactory.NextSibling
  fullName: System.Windows.FrameworkElementFactory.NextSibling
- uid: System.Windows.FrameworkElementFactory.Parent
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: Parent
  nameWithType: FrameworkElementFactory.Parent
  fullName: System.Windows.FrameworkElementFactory.Parent
- uid: System.Windows.FrameworkElementFactory.RemoveHandler(System.Windows.RoutedEvent,System.Delegate)
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: RemoveHandler(RoutedEvent,Delegate)
  nameWithType: FrameworkElementFactory.RemoveHandler(RoutedEvent,Delegate)
  fullName: System.Windows.FrameworkElementFactory.RemoveHandler(RoutedEvent,Delegate)
- uid: System.Windows.FrameworkElementFactory.SetBinding(System.Windows.DependencyProperty,System.Windows.Data.BindingBase)
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: SetBinding(DependencyProperty,BindingBase)
  nameWithType: FrameworkElementFactory.SetBinding(DependencyProperty,BindingBase)
  fullName: System.Windows.FrameworkElementFactory.SetBinding(DependencyProperty,BindingBase)
- uid: System.Windows.DependencyProperty
  parent: System.Windows
  isExternal: false
  name: DependencyProperty
  nameWithType: DependencyProperty
  fullName: System.Windows.DependencyProperty
- uid: System.Windows.Data.BindingBase
  parent: System.Windows.Data
  isExternal: false
  name: BindingBase
  nameWithType: BindingBase
  fullName: System.Windows.Data.BindingBase
- uid: System.Windows.FrameworkElementFactory.SetResourceReference(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: SetResourceReference(DependencyProperty,Object)
  nameWithType: FrameworkElementFactory.SetResourceReference(DependencyProperty,Object)
  fullName: System.Windows.FrameworkElementFactory.SetResourceReference(DependencyProperty,Object)
- uid: System.Windows.FrameworkElementFactory.SetValue(System.Windows.DependencyProperty,System.Object)
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: SetValue(DependencyProperty,Object)
  nameWithType: FrameworkElementFactory.SetValue(DependencyProperty,Object)
  fullName: System.Windows.FrameworkElementFactory.SetValue(DependencyProperty,Object)
- uid: System.Windows.FrameworkElementFactory.Text
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: Text
  nameWithType: FrameworkElementFactory.Text
  fullName: System.Windows.FrameworkElementFactory.Text
- uid: System.Windows.FrameworkElementFactory.Type
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: Type
  nameWithType: FrameworkElementFactory.Type
  fullName: System.Windows.FrameworkElementFactory.Type
- uid: System.Windows.FrameworkElementFactory.#ctor*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: FrameworkElementFactory
  nameWithType: FrameworkElementFactory.FrameworkElementFactory
- uid: System.Windows.FrameworkElementFactory.AddHandler*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: AddHandler
  nameWithType: FrameworkElementFactory.AddHandler
- uid: System.Windows.FrameworkElementFactory.AppendChild*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: AppendChild
  nameWithType: FrameworkElementFactory.AppendChild
- uid: System.Windows.FrameworkElementFactory.FirstChild*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: FirstChild
  nameWithType: FrameworkElementFactory.FirstChild
- uid: System.Windows.FrameworkElementFactory.IsSealed*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: IsSealed
  nameWithType: FrameworkElementFactory.IsSealed
- uid: System.Windows.FrameworkElementFactory.Name*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: Name
  nameWithType: FrameworkElementFactory.Name
- uid: System.Windows.FrameworkElementFactory.NextSibling*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: NextSibling
  nameWithType: FrameworkElementFactory.NextSibling
- uid: System.Windows.FrameworkElementFactory.Parent*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: Parent
  nameWithType: FrameworkElementFactory.Parent
- uid: System.Windows.FrameworkElementFactory.RemoveHandler*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: RemoveHandler
  nameWithType: FrameworkElementFactory.RemoveHandler
- uid: System.Windows.FrameworkElementFactory.SetBinding*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: SetBinding
  nameWithType: FrameworkElementFactory.SetBinding
- uid: System.Windows.FrameworkElementFactory.SetResourceReference*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: SetResourceReference
  nameWithType: FrameworkElementFactory.SetResourceReference
- uid: System.Windows.FrameworkElementFactory.SetValue*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: SetValue
  nameWithType: FrameworkElementFactory.SetValue
- uid: System.Windows.FrameworkElementFactory.Text*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: Text
  nameWithType: FrameworkElementFactory.Text
- uid: System.Windows.FrameworkElementFactory.Type*
  parent: System.Windows.FrameworkElementFactory
  isExternal: false
  name: Type
  nameWithType: FrameworkElementFactory.Type
