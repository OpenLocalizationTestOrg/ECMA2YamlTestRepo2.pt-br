### YamlMime:ManagedReference
items:
- uid: System.Security.Policy.ApplicationDirectory
  id: ApplicationDirectory
  children:
  - System.Security.Policy.ApplicationDirectory.#ctor(System.String)
  - System.Security.Policy.ApplicationDirectory.Clone
  - System.Security.Policy.ApplicationDirectory.Copy
  - System.Security.Policy.ApplicationDirectory.Directory
  - System.Security.Policy.ApplicationDirectory.Equals(System.Object)
  - System.Security.Policy.ApplicationDirectory.GetHashCode
  - System.Security.Policy.ApplicationDirectory.ToString
  langs:
  - csharp
  name: ApplicationDirectory
  nameWithType: ApplicationDirectory
  fullName: System.Security.Policy.ApplicationDirectory
  type: Class
  summary: "Fornece o diretório de aplicativo como evidência para avaliação de política. Essa classe não pode ser herdada."
  remarks: "O host de domínio pode associar um diretório de arquivos um domínio de aplicativo. A evidência para avaliação de política é fornecida apenas quando o domínio de aplicativo está associado um diretório de arquivos."
  syntax:
    content: >-
      [System.Runtime.InteropServices.ComVisible(true)]

      public sealed class ApplicationDirectory : System.Security.Policy.EvidenceBase
  inheritance:
  - System.Object
  - System.Security.Policy.EvidenceBase
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.#ctor(System.String)
  id: '#ctor(System.String)'
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: ApplicationDirectory(String)
  nameWithType: ApplicationDirectory.ApplicationDirectory(String)
  fullName: System.Security.Policy.ApplicationDirectory.ApplicationDirectory(String)
  type: Constructor
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Security.Policy.ApplicationDirectory&quot;> </xref> classe."
  remarks: "Código do aplicativo não precisa criar as instâncias dessa classe."
  syntax:
    content: public ApplicationDirectory (string name);
    parameters:
    - id: name
      type: System.String
      description: "O caminho do diretório do aplicativo."
  overload: System.Security.Policy.ApplicationDirectory.#ctor*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "The <code>name</code> parameter is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.Clone
  id: Clone
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: Clone()
  nameWithType: ApplicationDirectory.Clone()
  fullName: System.Security.Policy.ApplicationDirectory.Clone()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Cria um novo objeto que é uma cópia da instância atual."
  syntax:
    content: public override System.Security.Policy.EvidenceBase Clone ();
    parameters: []
    return:
      type: System.Security.Policy.EvidenceBase
      description: "Um novo objeto que é uma cópia desta instância."
  overload: System.Security.Policy.ApplicationDirectory.Clone*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.Copy
  id: Copy
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: Copy()
  nameWithType: ApplicationDirectory.Copy()
  fullName: System.Security.Policy.ApplicationDirectory.Copy()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Cria uma nova cópia do <xref href=&quot;System.Security.Policy.ApplicationDirectory&quot;> </xref>."
  syntax:
    content: public object Copy ();
    parameters: []
    return:
      type: System.Object
      description: "Uma nova cópia idêntica do <xref href=&quot;System.Security.Policy.ApplicationDirectory&quot;> </xref>."
  overload: System.Security.Policy.ApplicationDirectory.Copy*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.Directory
  id: Directory
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: Directory
  nameWithType: ApplicationDirectory.Directory
  fullName: System.Security.Policy.ApplicationDirectory.Directory
  type: Property
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém o caminho do diretório do aplicativo."
  syntax:
    content: public string Directory { get; }
    return:
      type: System.String
      description: "O caminho do diretório do aplicativo."
  overload: System.Security.Policy.ApplicationDirectory.Directory*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.Equals(System.Object)
  id: Equals(System.Object)
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: Equals(Object)
  nameWithType: ApplicationDirectory.Equals(Object)
  fullName: System.Security.Policy.ApplicationDirectory.Equals(Object)
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Determina se as instâncias do mesmo tipo de um objeto de evidência são equivalentes."
  remarks: "Os valores de diretório de duas instâncias devem corresponder exatamente. Caminhos não canônico equivalentes não estão resolvidos. Por exemplo, C:\\app e C:\\temp\\\\... \\app não são valores de diretório igual."
  syntax:
    content: public override bool Equals (object o);
    parameters:
    - id: o
      type: System.Object
      description: "Um objeto do mesmo tipo de objeto de evidência atual."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as duas instâncias forem equivalentes; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Security.Policy.ApplicationDirectory.Equals*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.GetHashCode
  id: GetHashCode
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: GetHashCode()
  nameWithType: ApplicationDirectory.GetHashCode()
  fullName: System.Security.Policy.ApplicationDirectory.GetHashCode()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém o código hash do diretório do aplicativo atual."
  syntax:
    content: public override int GetHashCode ();
    parameters: []
    return:
      type: System.Int32
      description: "O código hash do diretório do aplicativo atual."
  overload: System.Security.Policy.ApplicationDirectory.GetHashCode*
  exceptions: []
  platform:
  - net462
- uid: System.Security.Policy.ApplicationDirectory.ToString
  id: ToString
  parent: System.Security.Policy.ApplicationDirectory
  langs:
  - csharp
  name: ToString()
  nameWithType: ApplicationDirectory.ToString()
  fullName: System.Security.Policy.ApplicationDirectory.ToString()
  type: Method
  assemblies:
  - mscorlib
  namespace: System.Security.Policy
  summary: "Obtém uma representação de cadeia de caracteres do estado do <xref href=&quot;System.Security.Policy.ApplicationDirectory&quot;> </xref> objeto evidência."
  remarks: "Esse método é útil durante a depuração para obter uma representação de fácil leitura do objeto."
  syntax:
    content: public override string ToString ();
    parameters: []
    return:
      type: System.String
      description: "Uma representação do estado do <xref href=&quot;System.Security.Policy.ApplicationDirectory&quot;> </xref> objeto evidência."
  overload: System.Security.Policy.ApplicationDirectory.ToString*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Security.Policy.EvidenceBase
  isExternal: false
  name: System.Security.Policy.EvidenceBase
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Security.Policy.ApplicationDirectory.#ctor(System.String)
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: ApplicationDirectory(String)
  nameWithType: ApplicationDirectory.ApplicationDirectory(String)
  fullName: System.Security.Policy.ApplicationDirectory.ApplicationDirectory(String)
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Security.Policy.ApplicationDirectory.Clone
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Clone()
  nameWithType: ApplicationDirectory.Clone()
  fullName: System.Security.Policy.ApplicationDirectory.Clone()
- uid: System.Security.Policy.ApplicationDirectory.Copy
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Copy()
  nameWithType: ApplicationDirectory.Copy()
  fullName: System.Security.Policy.ApplicationDirectory.Copy()
- uid: System.Object
  parent: System
  isExternal: true
  name: Object
  nameWithType: Object
  fullName: System.Object
- uid: System.Security.Policy.ApplicationDirectory.Directory
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Directory
  nameWithType: ApplicationDirectory.Directory
  fullName: System.Security.Policy.ApplicationDirectory.Directory
- uid: System.Security.Policy.ApplicationDirectory.Equals(System.Object)
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Equals(Object)
  nameWithType: ApplicationDirectory.Equals(Object)
  fullName: System.Security.Policy.ApplicationDirectory.Equals(Object)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Security.Policy.ApplicationDirectory.GetHashCode
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: GetHashCode()
  nameWithType: ApplicationDirectory.GetHashCode()
  fullName: System.Security.Policy.ApplicationDirectory.GetHashCode()
- uid: System.Int32
  parent: System
  isExternal: true
  name: Int32
  nameWithType: Int32
  fullName: System.Int32
- uid: System.Security.Policy.ApplicationDirectory.ToString
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: ToString()
  nameWithType: ApplicationDirectory.ToString()
  fullName: System.Security.Policy.ApplicationDirectory.ToString()
- uid: System.Security.Policy.ApplicationDirectory.#ctor*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: ApplicationDirectory
  nameWithType: ApplicationDirectory.ApplicationDirectory
- uid: System.Security.Policy.ApplicationDirectory.Clone*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Clone
  nameWithType: ApplicationDirectory.Clone
- uid: System.Security.Policy.ApplicationDirectory.Copy*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Copy
  nameWithType: ApplicationDirectory.Copy
- uid: System.Security.Policy.ApplicationDirectory.Directory*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Directory
  nameWithType: ApplicationDirectory.Directory
- uid: System.Security.Policy.ApplicationDirectory.Equals*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: Equals
  nameWithType: ApplicationDirectory.Equals
- uid: System.Security.Policy.ApplicationDirectory.GetHashCode*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: GetHashCode
  nameWithType: ApplicationDirectory.GetHashCode
- uid: System.Security.Policy.ApplicationDirectory.ToString*
  parent: System.Security.Policy.ApplicationDirectory
  isExternal: false
  name: ToString
  nameWithType: ApplicationDirectory.ToString
