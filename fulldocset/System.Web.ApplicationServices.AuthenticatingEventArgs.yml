### YamlMime:ManagedReference
items:
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs
  id: AuthenticatingEventArgs
  children:
  - System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
  - System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
  - System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
  - System.Web.ApplicationServices.AuthenticatingEventArgs.Password
  - System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
  langs:
  - csharp
  name: AuthenticatingEventArgs
  nameWithType: AuthenticatingEventArgs
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs
  type: Class
  summary: "Fornece dados para o <xref href=&quot;System.Web.ApplicationServices.AuthenticationService.Authenticating&quot;> </xref> eventos."
  remarks: "Criar um manipulador para o <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>evento para personalizar como as credenciais do usuário são autenticadas em tempo de execução.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> A classe AuthenticatingEventArgs fornece valores para qualquer <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>manipulador de eventos.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Usando as propriedades disponíveis nessa classe, você pode recuperar as credenciais do usuário para personalizar a autenticação.       O <xref:System.Web.ApplicationServices.AuthenticationService>classe gera o <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>evento antes de validar as credenciais do usuário.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> </xref:System.Web.ApplicationServices.AuthenticationService> O <xref:System.Web.ApplicationServices.AuthenticationService>classe constrói uma instância do objeto AuthenticatingEventArgs e passá-lo para qualquer <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>manipulador de eventos.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> </xref:System.Web.ApplicationServices.AuthenticationService>       Você pode usar o <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A>, <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A>e <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>Propriedades para recuperar as credenciais do usuário.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A> </xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> </xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> O <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>propriedade pode conter valores adicionais que são necessários para autenticação, como um número de identificação.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential%2A>       O <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>propriedade indica se as credenciais do usuário são válidas.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> Definir o <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>propriedade para o resultado da sua autenticação personalizada.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> Além disso, você definir o <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>propriedade `true` se você verificou as credenciais do usuário e não quiser que o <xref:System.Web.ApplicationServices.AuthenticationService>classe para verificar as credenciais de usuário por meio do provedor de associação padrão.</xref:System.Web.ApplicationServices.AuthenticationService> </xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>"
  example:
  - "The following example shows an event handler that passes the <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to a custom membership provider to validate the user credentials. The event handler sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/visualbasic/t-system.web.application_3_1.asax)]\n [!code-cs[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/csharp/t-system.web.application_3_1.asax)]"
  syntax:
    content: 'public class AuthenticatingEventArgs : EventArgs'
  inheritance:
  - System.EventArgs
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
  id: Authenticated
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: Authenticated
  nameWithType: AuthenticatingEventArgs.Authenticated
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Obtém ou define um valor que indica se as credenciais do usuário são válidas."
  remarks: "Se você autenticar credenciais de usuário em um manipulador de eventos para o <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>evento, defina a propriedade de autenticado para indicar se as credenciais do usuário são válidas.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Se as credenciais do usuário são válidas e nenhuma validação adicional é necessária, defina autenticado `true` e <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>para `true`.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> Definir o <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>etapas de propriedade para indicar que o serviço de autenticação deve ignorar o padrão para autenticar um usuário.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> É usado o valor do autenticado pelo <xref:System.Web.ApplicationServices.AuthenticationService>se única classe <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>é definido como `true`.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> </xref:System.Web.ApplicationServices.AuthenticationService> Se <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>é `false`, o <xref:System.Web.ApplicationServices.AuthenticationService>classe chama o provedor de associação padrão para validar as credenciais do usuário e, em seguida, substitui o valor em autenticado.</xref:System.Web.ApplicationServices.AuthenticationService> </xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A>"
  example:
  - "The following example shows an event handler that passes <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to a custom membership provider to validate the user credentials. The event handler sets Authenticated to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/visualbasic/p-system.web.application_4_1.asax)]\n [!code-cs[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/csharp/p-system.web.application_4_1.asax)]"
  syntax:
    content: public bool Authenticated { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se as credenciais do usuário são válidas. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
  id: AuthenticationIsComplete
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: AuthenticationIsComplete
  nameWithType: AuthenticatingEventArgs.AuthenticationIsComplete
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Obtém ou define um valor que indica se as credenciais de usuário autenticadas."
  remarks: "Você pode definir a propriedade AuthenticationIsComplete para indicar se o <xref:System.Web.ApplicationServices.AuthenticationService>classe deve autenticar as credenciais do usuário.</xref:System.Web.ApplicationServices.AuthenticationService> Se for AuthenticationIsComplete `true`, o <xref:System.Web.ApplicationServices.AuthenticationService>classe não valida as credenciais do usuário por meio do provedor de associação padrão.</xref:System.Web.ApplicationServices.AuthenticationService> Em vez disso, ele usa o valor em <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>para determinar se deseja criar um cookie de autenticação.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>       Se for AuthenticationIsComplete `false`, o <xref:System.Web.ApplicationServices.AuthenticationService>classe valida as credenciais do usuário por meio do provedor de associação padrão e substitui o valor de <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A>propriedade.</xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> </xref:System.Web.ApplicationServices.AuthenticationService>"
  example:
  - "The following example shows an event handler that passes <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to a custom membership provider to validate the user credentials. The event handler sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets AuthenticationIsComplete to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/visualbasic/db2b0263-dafe-4889-a472-_1.asax)]\n [!code-cs[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/csharp/db2b0263-dafe-4889-a472-_1.asax)]"
  syntax:
    content: public bool AuthenticationIsComplete { get; set; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se todas as etapas para validar as credenciais do usuário tem sido executadas; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
  id: CustomCredential
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: CustomCredential
  nameWithType: AuthenticatingEventArgs.CustomCredential
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Obtém os valores de usuário adicionais para autenticação."
  remarks: "Você pode usar a propriedade CustomCredential para recuperar valores de autenticação que não seja o nome de usuário e senha durante o <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>evento.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> Por exemplo, um aplicativo pode ser configurado para validar um número de identificação junto com o nome de usuário e senha. Nesse caso, o número de identificação será passado a `CustomCredential` parâmetro o <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>método.</xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> Em seguida, você pode recuperar o valor personalizado por meio da propriedade CustomCredential.       A propriedade CustomCredential contém os valores personalizados no mesmo formato que eles são passados para o <xref:System.Web.ApplicationServices.AuthenticationService.Login%2A>método.</xref:System.Web.ApplicationServices.AuthenticationService.Login%2A> No <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>manipulador de eventos, se mais de um valor é armazenado na propriedade, você deve analisar o valor da propriedade CustomCredential para recuperar os valores.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>"
  example:
  - "The following example shows an event handler for the <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating> event that parses two authentication values from the CustomCredential property. It passes the two values and the user name and password to a custom authentication class named `StudentAuthentication`.  \n  \n [!code-cs[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/csharp/p-system.web.application_10_1.asax)]\n [!code-vb[System.Web.Security.LoginService_MultipleCredentials#2](~/add/codesnippet/visualbasic/p-system.web.application_10_1.asax)]"
  syntax:
    content: public string CustomCredential { get; }
    return:
      type: System.String
      description: "Os valores necessários para autenticação diferente do nome de usuário e senha."
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Password
  id: Password
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: Password
  nameWithType: AuthenticatingEventArgs.Password
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.Password
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Obtém a senha do usuário."
  remarks: "Use a propriedade de senha para recuperar a senha durante o <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>evento.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>"
  example:
  - "The following example shows an event handler that passes <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.UserName%2A> and Password values to a custom membership provider to validate the user credentials. The event handler sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/visualbasic/p-system.web.application_1_1.asax)]\n [!code-cs[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/csharp/p-system.web.application_1_1.asax)]"
  syntax:
    content: public string Password { get; }
    return:
      type: System.String
      description: "A senha para validar."
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.Password*
  exceptions: []
  platform:
  - net462
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
  id: UserName
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  langs:
  - csharp
  name: UserName
  nameWithType: AuthenticatingEventArgs.UserName
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
  type: Property
  assemblies:
  - System.Web.Extensions
  namespace: System.Web.ApplicationServices
  summary: "Obtém o nome de autenticação para o usuário."
  remarks: "Use a propriedade de nome de usuário para recuperar o nome de autenticação durante o <xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>evento.</xref:System.Web.ApplicationServices.AuthenticationService.Authenticating>"
  example:
  - "The following example shows an event handler that selects a membership provider to use based on the value of the UserName property. The handler passes UserName and <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Password%2A> values to the custom membership provider to validate the user credentials. It sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated%2A> to the return value of the <xref:System.Web.Security.MembershipProvider.ValidateUser%2A> method and sets <xref:System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete%2A> to `true` so that the <xref:System.Web.ApplicationServices.AuthenticationService> class does not validate the credentials.  \n  \n [!code-vb[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/visualbasic/p-system.web.application_5_1.asax)]\n [!code-cs[System.Web.Security.LoginService_NonDefaultProvider#2](~/add/codesnippet/csharp/p-system.web.application_5_1.asax)]"
  syntax:
    content: public string UserName { get; }
    return:
      type: System.String
      description: "O nome de usuário para validar."
  overload: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName*
  exceptions: []
  platform:
  - net462
references:
- uid: System.EventArgs
  isExternal: false
  name: System.EventArgs
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: Authenticated
  nameWithType: AuthenticatingEventArgs.Authenticated
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: AuthenticationIsComplete
  nameWithType: AuthenticatingEventArgs.AuthenticationIsComplete
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: CustomCredential
  nameWithType: AuthenticatingEventArgs.CustomCredential
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Password
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: Password
  nameWithType: AuthenticatingEventArgs.Password
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.Password
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: UserName
  nameWithType: AuthenticatingEventArgs.UserName
  fullName: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Authenticated*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: Authenticated
  nameWithType: AuthenticatingEventArgs.Authenticated
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.AuthenticationIsComplete*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: AuthenticationIsComplete
  nameWithType: AuthenticatingEventArgs.AuthenticationIsComplete
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.CustomCredential*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: CustomCredential
  nameWithType: AuthenticatingEventArgs.CustomCredential
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.Password*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: Password
  nameWithType: AuthenticatingEventArgs.Password
- uid: System.Web.ApplicationServices.AuthenticatingEventArgs.UserName*
  parent: System.Web.ApplicationServices.AuthenticatingEventArgs
  isExternal: false
  name: UserName
  nameWithType: AuthenticatingEventArgs.UserName
