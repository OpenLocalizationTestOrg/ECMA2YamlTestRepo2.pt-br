### YamlMime:ManagedReference
items:
- uid: System.Activities.Tracking.TrackingParticipant
  id: TrackingParticipant
  children:
  - System.Activities.Tracking.TrackingParticipant.#ctor
  - System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)
  - System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)
  - System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)
  - System.Activities.Tracking.TrackingParticipant.TrackingProfile
  langs:
  - csharp
  name: TrackingParticipant
  nameWithType: TrackingParticipant
  fullName: System.Activities.Tracking.TrackingParticipant
  type: Class
  summary: "A classe base para as extensões de fluxo de trabalho que interagem com o infraestrutura e os registros de controle de acesso de controle de fluxo de trabalho."
  remarks: "Um participante de rastreamento está registrado para receber os registros do controle. Atualmente, qualquer classe que implementa o participante de rastreamento pode ser registrado com a instância de fluxo de trabalho para receber os registros do controle. Se o participante de rastreamento é um código de terceiros, certifique-se de que isso não é um código mal-intencionado. Os participantes de rastreamento executados no mesmo processo da instância de fluxo de trabalho e no caso de participantes de rastreamento mal-intencionado, esse código pode afetar a execução de fluxo de trabalho geral. Os registros de rastreamento são entregues para os participantes de rastreamento registrado como o fluxo de trabalho é executado, para que o desenvolvedor deve garantir que o participante de rastreamento não afeta o fluxo de trabalho em execução por operações não intencional de dentro do método de controle. Exemplos disso podem ser a alteração de variáveis de fluxo de trabalho ou as operações que levam muito tempo."
  syntax:
    content: public abstract class TrackingParticipant
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Activities.Tracking.TrackingParticipant.#ctor
  id: '#ctor'
  parent: System.Activities.Tracking.TrackingParticipant
  langs:
  - csharp
  name: TrackingParticipant()
  nameWithType: TrackingParticipant.TrackingParticipant()
  fullName: System.Activities.Tracking.TrackingParticipant.TrackingParticipant()
  type: Constructor
  assemblies:
  - System.Activities
  namespace: System.Activities.Tracking
  summary: "Quando implementada em uma classe derivada, cria uma nova instância da classe derivada."
  syntax:
    content: protected TrackingParticipant ();
    parameters: []
  overload: System.Activities.Tracking.TrackingParticipant.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)
  id: BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Tracking.TrackingParticipant
  langs:
  - csharp
  name: BeginTrack(TrackingRecord,TimeSpan,AsyncCallback,Object)
  nameWithType: TrackingParticipant.BeginTrack(TrackingRecord,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Tracking.TrackingParticipant.BeginTrack(TrackingRecord,TimeSpan,AsyncCallback,Object)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Tracking
  summary: "Quando implementada em uma classe derivada, inicia o processamento assíncrono do registro de rastreamento."
  remarks: "Os participantes são esperados para iniciar um trabalho para processar os registros e retornar um <xref:System.IAsyncResult>que o tempo de execução do fluxo de trabalho usa para aguardar a conclusão.</xref:System.IAsyncResult> A implementação padrão é chamar <xref:System.Activities.Tracking.TrackingParticipant.Track%2A>e retornar um status concluído.</xref:System.Activities.Tracking.TrackingParticipant.Track%2A>"
  syntax:
    content: protected virtual IAsyncResult BeginTrack (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout, AsyncCallback callback, object state);
    parameters:
    - id: record
      type: System.Activities.Tracking.TrackingRecord
      description: "O registro de rastreamento gerado."
    - id: timeout
      type: System.TimeSpan
      description: "O período de tempo após o qual o provedor anula a tentativa."
    - id: callback
      type: System.AsyncCallback
      description: "O método a ser chamado após a conclusão da operação."
    - id: state
      type: System.Object
      description: "Um objeto definido pelo usuário que identifica exclusivamente essa operação assíncrona."
    return:
      type: System.IAsyncResult
      description: "O resultado da operação."
  overload: System.Activities.Tracking.TrackingParticipant.BeginTrack*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)
  id: EndTrack(System.IAsyncResult)
  parent: System.Activities.Tracking.TrackingParticipant
  langs:
  - csharp
  name: EndTrack(IAsyncResult)
  nameWithType: TrackingParticipant.EndTrack(IAsyncResult)
  fullName: System.Activities.Tracking.TrackingParticipant.EndTrack(IAsyncResult)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Tracking
  summary: "Quando implementada em uma classe derivada, representa o final de uma operação assíncrona do controle."
  remarks: "Esse método é esperado para bloquear até que a operação de rastreamento for concluída."
  syntax:
    content: protected virtual void EndTrack (IAsyncResult result);
    parameters:
    - id: result
      type: System.IAsyncResult
      description: "O status da operação."
  overload: System.Activities.Tracking.TrackingParticipant.EndTrack*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)
  id: Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)
  parent: System.Activities.Tracking.TrackingParticipant
  langs:
  - csharp
  name: Track(TrackingRecord,TimeSpan)
  nameWithType: TrackingParticipant.Track(TrackingRecord,TimeSpan)
  fullName: System.Activities.Tracking.TrackingParticipant.Track(TrackingRecord,TimeSpan)
  type: Method
  assemblies:
  - System.Activities
  namespace: System.Activities.Tracking
  summary: "Quando implementada em uma classe derivada, usado para processar sincronicamente o registro de rastreamento."
  remarks: "O método de faixa é chamado quando a instância de fluxo de trabalho emite um registro de controle."
  syntax:
    content: protected abstract void Track (System.Activities.Tracking.TrackingRecord record, TimeSpan timeout);
    parameters:
    - id: record
      type: System.Activities.Tracking.TrackingRecord
      description: "O registro de rastreamento gerado."
    - id: timeout
      type: System.TimeSpan
      description: "O período de tempo após o qual o provedor anula a tentativa."
  overload: System.Activities.Tracking.TrackingParticipant.Track*
  exceptions: []
  platform:
  - net462
- uid: System.Activities.Tracking.TrackingParticipant.TrackingProfile
  id: TrackingProfile
  parent: System.Activities.Tracking.TrackingParticipant
  langs:
  - csharp
  name: TrackingProfile
  nameWithType: TrackingParticipant.TrackingProfile
  fullName: System.Activities.Tracking.TrackingParticipant.TrackingProfile
  type: Property
  assemblies:
  - System.Activities
  namespace: System.Activities.Tracking
  summary: "O controle de perfil usado pelo participante de rastreamento do objeto. Antes de adicionar o participante de rastreamento para as extensões de fluxo de trabalho, o perfil de rastreamento é definido no participante."
  remarks: "O perfil de rastreamento define quais eventos de rastreamento são enviados para esse participante de rastreamento."
  syntax:
    content: public virtual System.Activities.Tracking.TrackingProfile TrackingProfile { get; set; }
    return:
      type: System.Activities.Tracking.TrackingProfile
      description: "O perfil de rastreamento."
  overload: System.Activities.Tracking.TrackingParticipant.TrackingProfile*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.Activities.Tracking.TrackingParticipant.#ctor
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: TrackingParticipant()
  nameWithType: TrackingParticipant.TrackingParticipant()
  fullName: System.Activities.Tracking.TrackingParticipant.TrackingParticipant()
- uid: System.Activities.Tracking.TrackingParticipant.BeginTrack(System.Activities.Tracking.TrackingRecord,System.TimeSpan,System.AsyncCallback,System.Object)
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: BeginTrack(TrackingRecord,TimeSpan,AsyncCallback,Object)
  nameWithType: TrackingParticipant.BeginTrack(TrackingRecord,TimeSpan,AsyncCallback,Object)
  fullName: System.Activities.Tracking.TrackingParticipant.BeginTrack(TrackingRecord,TimeSpan,AsyncCallback,Object)
- uid: System.IAsyncResult
  parent: System
  isExternal: true
  name: IAsyncResult
  nameWithType: IAsyncResult
  fullName: System.IAsyncResult
- uid: System.Activities.Tracking.TrackingRecord
  parent: System.Activities.Tracking
  isExternal: false
  name: TrackingRecord
  nameWithType: TrackingRecord
  fullName: System.Activities.Tracking.TrackingRecord
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.AsyncCallback
  parent: System
  isExternal: true
  name: AsyncCallback
  nameWithType: AsyncCallback
  fullName: System.AsyncCallback
- uid: System.Activities.Tracking.TrackingParticipant.EndTrack(System.IAsyncResult)
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: EndTrack(IAsyncResult)
  nameWithType: TrackingParticipant.EndTrack(IAsyncResult)
  fullName: System.Activities.Tracking.TrackingParticipant.EndTrack(IAsyncResult)
- uid: System.Activities.Tracking.TrackingParticipant.Track(System.Activities.Tracking.TrackingRecord,System.TimeSpan)
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: Track(TrackingRecord,TimeSpan)
  nameWithType: TrackingParticipant.Track(TrackingRecord,TimeSpan)
  fullName: System.Activities.Tracking.TrackingParticipant.Track(TrackingRecord,TimeSpan)
- uid: System.Activities.Tracking.TrackingParticipant.TrackingProfile
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: TrackingProfile
  nameWithType: TrackingParticipant.TrackingProfile
  fullName: System.Activities.Tracking.TrackingParticipant.TrackingProfile
- uid: System.Activities.Tracking.TrackingProfile
  parent: System.Activities.Tracking
  isExternal: false
  name: TrackingProfile
  nameWithType: TrackingProfile
  fullName: System.Activities.Tracking.TrackingProfile
- uid: System.Activities.Tracking.TrackingParticipant.#ctor*
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: TrackingParticipant
  nameWithType: TrackingParticipant.TrackingParticipant
- uid: System.Activities.Tracking.TrackingParticipant.BeginTrack*
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: BeginTrack
  nameWithType: TrackingParticipant.BeginTrack
- uid: System.Activities.Tracking.TrackingParticipant.EndTrack*
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: EndTrack
  nameWithType: TrackingParticipant.EndTrack
- uid: System.Activities.Tracking.TrackingParticipant.Track*
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: Track
  nameWithType: TrackingParticipant.Track
- uid: System.Activities.Tracking.TrackingParticipant.TrackingProfile*
  parent: System.Activities.Tracking.TrackingParticipant
  isExternal: false
  name: TrackingProfile
  nameWithType: TrackingParticipant.TrackingProfile
