### YamlMime:ManagedReference
items:
- uid: System.Web.Security.FormsAuthentication
  id: FormsAuthentication
  children:
  - System.Web.Security.FormsAuthentication.#ctor
  - System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  - System.Web.Security.FormsAuthentication.CookieDomain
  - System.Web.Security.FormsAuthentication.CookieMode
  - System.Web.Security.FormsAuthentication.CookiesSupported
  - System.Web.Security.FormsAuthentication.Decrypt(System.String)
  - System.Web.Security.FormsAuthentication.DefaultUrl
  - System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  - System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  - System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.FormsCookieName
  - System.Web.Security.FormsAuthentication.FormsCookiePath
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  - System.Web.Security.FormsAuthentication.Initialize
  - System.Web.Security.FormsAuthentication.IsEnabled
  - System.Web.Security.FormsAuthentication.LoginUrl
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage
  - System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  - System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  - System.Web.Security.FormsAuthentication.RequireSSL
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  - System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  - System.Web.Security.FormsAuthentication.SignOut
  - System.Web.Security.FormsAuthentication.SlidingExpiration
  - System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  - System.Web.Security.FormsAuthentication.Timeout
  langs:
  - csharp
  name: FormsAuthentication
  nameWithType: FormsAuthentication
  fullName: System.Web.Security.FormsAuthentication
  type: Class
  summary: "Gerencia serviços de autenticação de formulários para aplicativos da Web. Essa classe não pode ser herdada."
  remarks: "Autenticação de formulários permite que o usuário e a validação de senha para aplicativos da Web que não exigem a autenticação do Windows. Com a autenticação de formulários, informações de usuário são armazenadas em uma fonte de dados externa, como um <xref:System.Web.Security.Membership>banco de dados, ou no arquivo de configuração para um aplicativo.</xref:System.Web.Security.Membership> Quando um usuário é autenticado, a autenticação de formulários mantém um tíquete de autenticação em um cookie ou a URL para que um usuário autenticado não precisa fornecer credenciais com cada solicitação.       Autenticação de formulários é habilitada definindo o `mode` atributo do elemento de configuração para `Forms`. Você pode exigir que todas as solicitações para um aplicativo contém um tíquete de autenticação de usuário válido usando o elemento de configuração para negar a solicitação de qualquer usuário desconhecido, conforme mostrado no exemplo a seguir.      ```   <system.web>     <authentication mode=&quot;Forms&quot;>       <forms loginUrl=&quot;login.aspx&quot; />     </authentication>     <authorization>       <deny users=&quot;?&quot; />     </authorization>   </system.web>   ```No exemplo anterior, qualquer solicitação de uma página ASP.NET que faz parte do aplicativo requer um nome de usuário válido que é fornecido pela autenticação de formulários. Se nenhum nome de usuário existir, em seguida, a solicitação é redirecionada para o <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> configurado       A classe FormsAuthentication fornece acesso a métodos e propriedades que você pode usar em um aplicativo que autentica os usuários. O <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>método redireciona um navegador para configurado <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>para os usuários façam logon em um aplicativo.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> O <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>método redireciona um usuário autenticado de volta para a URL protegida original que foi solicitada ou <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> </xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Também há métodos que permitem gerenciar tíquetes de autenticação de formulários, se necessário."
  example:
  - "The following code example shows the Web.config file for an ASP.NET application that uses the ASP.NET membership provider for forms authentication and requires all users to be authenticated.  \n  \n```  \n<configuration>  \n  <connectionStrings>  \n    <add name=\"SqlServices\" connectionString=\"Data Source=MySqlServer;Integrated Security=SSPI;Initial Catalog=aspnetdb;\" />  \n  </connectionStrings>  \n  <system.web>  \n    <membership defaultProvider=\"SqlProvider\" userIsOnlineTimeWindow=\"20\">  \n      <providers>  \n        <add name=\"SqlProvider\"  \n          type=\"System.Web.Security.SqlMembershipProvider\"  \n          connectionStringName=\"SqlServices\"  \n          enablePasswordRetrieval=\"false\"  \n          enablePasswordReset=\"true\"  \n          requiresQuestionAndAnswer=\"true\"  \n          passwordFormat=\"Hashed\"  \n          applicationName=\"/\" />  \n      </providers>  \n    </membership>  \n  </system.web>  \n</configuration>  \n```  \n  \n The following code example shows the login page for an ASP.NET application that uses forms authentication and ASP.NET membership.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/t-system.web.security.fo_5_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/t-system.web.security.fo_5_1.aspx)]"
  syntax:
    content: public sealed class FormsAuthentication
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.#ctor
  id: '#ctor'
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
  type: Constructor
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicializa uma nova instância do <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> classe."
  remarks: "Este construtor não se destina a ser usado em seu código."
  syntax:
    content: public FormsAuthentication ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  id: Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Valida um nome de usuário e senha com credenciais armazenadas no arquivo de configuração para um aplicativo."
  remarks: "O método de autenticação verifica as credenciais do usuário que são armazenadas na seção do arquivo de configuração do aplicativo. Como alternativa, você pode usar a associação do ASP.NET para armazenar credenciais de usuário e a chamada a <xref:System.Web.Security.MembershipProvider.ValidateUser%2A>para verificar as credenciais.</xref:System.Web.Security.MembershipProvider.ValidateUser%2A> Para obter mais informações, consulte [Gerenciando usuários com o uso de associações](~/add/includes/ajax-current-ext-md.md).       Para maior segurança, você pode criptografar senhas armazenadas no arquivo de configuração para um aplicativo usando o <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>método.</xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A>"
  example:
  - "The following code example shows user credentials stored in the Web.config file for an application. The password values have been hashed using the <xref:System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile%2A> method.  \n  \n `<authentication mode=\"Forms\">`  \n  \n `<forms loginUrl=\"login.aspx\">`  \n  \n `<credentials passwordFormat=\"SHA1\">`  \n  \n `<user name=\"user1\"   password=\"27CE4CA7FBF00685AF2F617E3F5BBCAFF7B7403C\" />`  \n  \n `<user name=\"user2\"   password=\"D108F80936F78DFDD333141EBC985B0233A30C7A\" />`  \n  \n `<user name=\"user3\" password=\"7BDB09781A3F23885CD43177C0508B375CB1B7E9\"/>`  \n  \n `</credentials>`  \n  \n `</forms>`  \n  \n `</authentication>`  \n  \n The following code example shows a login page that uses the Authenticate method to validate user credentials.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/visualbasic/5b51c766-1819-4817-a951-_1.aspx)]\n [!code-cs[System.Web.Security.FormsAuthentication#1](~/add/codesnippet/csharp/5b51c766-1819-4817-a951-_1.aspx)]"
  syntax:
    content: public static bool Authenticate (string name, string password);
    parameters:
    - id: name
      type: System.String
      description: "O nome de usuário."
    - id: password
      type: System.String
      description: "A senha do usuário."
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o nome de usuário e senha são válidos; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.Authenticate*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  id: CookieDomain
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o valor do domínio do cookie de autenticação de formulários."
  remarks: "O valor da propriedade CookieDomain é definido no arquivo de configuração para um aplicativo ASP.NET usando o `domain` atributo do elemento de configuração. O valor da propriedade CookieDomain determina o <xref:System.Web.HttpCookie.Domain%2A>que o cookie será usado for</xref:System.Web.HttpCookie.Domain%2A>"
  example:
  - "The following code example sets the `domain` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    domain=\"contoso.com\" />  \n</authentication>  \n```"
  syntax:
    content: public static string CookieDomain { get; }
    return:
      type: System.String
      description: "O <xref:System.Web.HttpCookie.Domain*>do cookie de autenticação de formulários.</xref:System.Web.HttpCookie.Domain*> O padrão é uma cadeia de caracteres vazia (&quot;&quot;)."
  overload: System.Web.Security.FormsAuthentication.CookieDomain*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookieMode
  id: CookieMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o aplicativo está configurado para autenticação de formulários cookieless."
  remarks: "A propriedade CookieMode reflete o valor para o `cookieless` atributo do elemento de configuração. A propriedade CookieMode determina se o <xref:System.Web.Security.FormsAuthenticationTicket>será armazenado em um cookie de sessão no navegador ou armazenado no valor o <xref:System.Web.HttpRequest.QueryString%2A>propriedade.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthenticationTicket>      > [!NOTE] > Quando o <xref:System.Web.Security.FormsAuthenticationTicket>valor é armazenado no URI, o comprimento do URI gerado pode ser maior que o comprimento máximo permitido.</xref:System.Web.Security.FormsAuthenticationTicket> Isso é mais provável de ocorrer quando o <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>propriedade é definida como o nome do aplicativo e o nome do aplicativo é longo (40 ou mais caracteres), nomes de usuário do aplicativo são longos ou ao longo <xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A>cadeias de caracteres são armazenadas no <xref:System.Web.Security.FormsAuthenticationTicket>valor.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.Security.FormsAuthenticationTicket.UserData%2A> </xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A> Se o URI gerado é muito longo, o servidor Web retornará um `400 - Bad Request` erro."
  example:
  - "The following code example sets the `cookieless` attribute to `AutoDetect` in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"AutoDetect\" />  \n</authentication>  \n```"
  syntax:
    content: public static System.Web.HttpCookieMode CookieMode { get; }
    return:
      type: System.Web.HttpCookieMode
      description: "Uma da <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref> valores que indica se o aplicativo está configurado para autenticação de formulários cookieless. O padrão é <xref href=&quot;System.Web.HttpCookieMode&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookieMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  id: CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o aplicativo está configurado para dar suporte a autenticação de formulários cookieless."
  remarks: "A propriedade CookiesSupported retorna um valor com base no <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>valor e os recursos do navegador.</xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Se a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>está definida como <xref:System.Web.HttpCookieMode>, a propriedade CookiesSupported retornará `true`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Se a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>está definida como <xref:System.Web.HttpCookieMode>, a propriedade CookiesSupported retornará `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Se a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>está definida como <xref:System.Web.HttpCookieMode>, retornará a propriedade CookiesSupported `true` se o navegador oferece suporte a cookies e os cookies estão habilitados; caso contrário, a propriedade CookiesSupported retornará `false`.</xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>      -Se a <xref:System.Web.Security.FormsAuthentication.CookieMode%2A>está definida como <xref:System.Web.HttpCookieMode>, retornará a propriedade CookiesSupported `true` se o <xref:System.Web.HttpRequest.Browser%2A>atual <xref:System.Web.HttpContext.Request%2A>oferece suporte a cookies e redirecionar com cookies; caso contrário, retornará a propriedade CookiesSupported `false`.</xref:System.Web.HttpContext.Request%2A> </xref:System.Web.HttpRequest.Browser%2A> </xref:System.Web.HttpCookieMode> </xref:System.Web.Security.FormsAuthentication.CookieMode%2A>"
  example:
  - "The following code example sets the `cookieless` attribute to <xref:System.Web.HttpCookieMode> in the Web.config file. This configuration will result in the CookiesSupported property returning `false`.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool CookiesSupported { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>Se o aplicativo está configurado para dar suporte à autenticação de formulários cookieless; Caso contrário, <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.CookiesSupported*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  id: Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cria um <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> objeto com base no tíquete de autenticação de formulários criptografado passado para o método."
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket Decrypt (string encryptedTicket);
    parameters:
    - id: encryptedTicket
      type: System.String
      description: "O tíquete de autenticação criptografada."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;></xref> object. Se o <code> encryptedTicket </code> parâmetro não é um tíquete válido, <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;> </xref> é retornado."
  overload: System.Web.Security.FormsAuthentication.Decrypt*
  exceptions:
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>encryptedTicket</code> is <xref uid=\"langword_csharp_null\" name=\"null\" href=\"\"></xref>.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is an empty string (\"\").  \n  \n \\- or -  \n  \n The length of <code>encryptedTicket</code> is greater than 4096 characters.  \n  \n \\- or -  \n  \n <code>encryptedTicket</code> is of an invalid format."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  id: DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a URL que o <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> classe não redirecionará como se nenhum redirecionamento de URL for especificada."
  remarks: "O valor da propriedade DefaultUrl é definido no arquivo de configuração para um aplicativo ASP.NET usando o `defaultUrl` atributo do elemento de configuração. A propriedade DefaultUrl é usada pelo <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>método se nenhuma URL de retorno é incluído na solicitação.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Da mesma forma, o <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>método retornará o DefaultUrl se nenhuma URL de retorno é incluído na solicitação.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>"
  example:
  - "The following code example sets the `defaultUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string DefaultUrl { get; }
    return:
      type: System.String
      description: "A URL que o <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> classe não redirecionará como se nenhum redirecionamento de URL for especificada. O padrão é &quot;default.aspx&quot;."
  overload: System.Web.Security.FormsAuthentication.DefaultUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  id: EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se os usuários autenticados podem ser redirecionados para URLs em outros aplicativos da Web."
  remarks: "O valor da propriedade EnableCrossAppRedirects é definido usando o `enableCrossAppRedirects` atributo do elemento de configuração.       A propriedade EnableCrossAppRedirects é verificada dentro de <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>método quando o redirecionamento de URL não aponta para uma página no aplicativo atual.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A> Se for EnableCrossAppRedirects `true`, o redirecionamento será executada; se for EnableCrossAppRedirects `false`, o navegador é redirecionado para a página definida no <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>      > [!NOTE] > Quando você redireciona as páginas em todos os aplicativos, certifique-se de que os atributos específicos no elemento de configuração são duplicados em todos os aplicativos autenticados. Para obter mais informações e um exemplo, consulte [autenticação de formulários em aplicativos](~/add/includes/ajax-current-ext-md.md).      > [!IMPORTANT] > Quando redirecionamentos entre aplicativos são permitidos, seu site é vulnerável a um ataque que direciona os usuários para um site mal-intencionado, mas usa a página de logon para o seu site. Sempre verifique a URL de redirecionamento que é retornada pelo <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A>método é uma URL que você espera para que você pode assegurar-se de que redireciona somente para sites da Web aprovados.</xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> Você também deve verificar se a URL de redirecionamento usa o protocolo apropriado (HTTP ou HTTPS). Para executar essas verificações, você pode adicionar um manipulador de eventos de postback para a página de logon, ou você pode adicionar um manipulador para o <xref:System.Web.UI.WebControls.Login.LoggedIn>evento o <xref:System.Web.UI.WebControls.Login>controle.</xref:System.Web.UI.WebControls.Login> </xref:System.Web.UI.WebControls.Login.LoggedIn>"
  example:
  - "The following code example sets the `enableCrossAppRedirects` attribute to `true` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseUri\"  \n    requireSSL=\"true\"   \n    enableCrossAppRedirects=\"true\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool EnableCrossAppRedirects { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se os usuários autenticados podem ser redirecionados para URLs em outros aplicativos da Web; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  id: EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Habilita a autenticação de formulários."
  remarks: "Se o <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>é de propriedade `null`, se a propriedade é definida como o valor de URL padrão do `configurationData` parâmetro.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Se o <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>é de propriedade `null`, se a propriedade é definida como o valor da URL de logon de `configurationData` parâmetro.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>"
  syntax:
    content: public static void EnableFormsAuthentication (System.Collections.Specialized.NameValueCollection configurationData);
    parameters:
    - id: configurationData
      type: System.Collections.Specialized.NameValueCollection
      description: "Uma coleção de nome-valor que contém os valores para &quot;defaultUrl&quot; e/ou &quot;loginUrl&quot;. O parâmetro pode ser null se não houver nenhum valor para a URL padrão ou a URL de logon."
  overload: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  exceptions:
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "O aplicativo não está na fase de inicialização anterior ao início."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  id: Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cria uma cadeia de caracteres que contém um tíquete de autenticação de formulários criptografado adequado para uso em um cookie HTTP."
  remarks: ''
  example:
  - "The following code example stores the result of the Encrypt method in a cookie by using the <xref:System.Web.Security.FormsAuthentication.FormsCookieName%2A> property and redirects the user to the URL returned from the <xref:System.Web.Security.FormsAuthentication.GetRedirectUrl%2A> method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/d209d6db-e50b-4c64-961a-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/d209d6db-e50b-4c64-961a-_1.aspx)]"
  syntax:
    content: public static string Encrypt (System.Web.Security.FormsAuthenticationTicket ticket);
    parameters:
    - id: ticket
      type: System.Web.Security.FormsAuthenticationTicket
      description: "O <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref> objeto com o qual criar o tíquete de autenticação de formulários criptografado."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém um tíquete de autenticação de formulários criptografado."
  overload: System.Web.Security.FormsAuthentication.Encrypt*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>ticket</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  id: FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o nome do cookie usado para armazenar o tíquete de autenticação de formulários."
  remarks: "O valor da propriedade FormsCookieName é definido no arquivo de configuração para um aplicativo ASP.NET usando o `name` atributo do elemento de configuração. O FormsCookieName é usado para referenciar o cookie que armazena o <xref:System.Web.Security.FormsAuthenticationTicket>informações.</xref:System.Web.Security.FormsAuthenticationTicket>"
  example:
  - "The following code example sets the FormsCookieName property value by using the `name` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    name=\".ASPXFORMSAUTH\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookieName { get; }
    return:
      type: System.String
      description: "O nome do cookie usado para armazenar o tíquete de autenticação de formulários. O padrão é &quot;. ASPXAUTH&quot;."
  overload: System.Web.Security.FormsAuthentication.FormsCookieName*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  id: FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém o caminho para o cookie de autenticação de formulários."
  remarks: "O valor da propriedade FormsCookiePath é definido no arquivo de configuração para um aplicativo ASP.NET usando o `path` atributo do elemento de configuração. Especifica o FormsCookiePath o <xref:System.Web.HttpCookie.Path%2A>para o cookie que armazena o <xref:System.Web.Security.FormsAuthenticationTicket>informações.</xref:System.Web.Security.FormsAuthenticationTicket> </xref:System.Web.HttpCookie.Path%2A>"
  example:
  - "The following code example sets the FormsCookiePath property value by using the `path` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static string FormsCookiePath { get; }
    return:
      type: System.String
      description: "O caminho do cookie em que as informações do tíquete de autenticação de formulários são armazenadas. O padrão é &quot;/&quot;."
  overload: System.Web.Security.FormsAuthentication.FormsCookiePath*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  id: GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cria um cookie de autenticação para um nome de usuário fornecido. Isso não define o cookie como parte da resposta de saída, para que um aplicativo pode ter mais controle sobre como o cookie é emitido."
  remarks: "O caminho do cookie é determinado pelo <xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath%2A>"
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "O nome do usuário autenticado."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para criar um cookie durável (aquele que é salvo em sessões do navegador); Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    return:
      type: System.Web.HttpCookie
      description: "Um <xref href=&quot;System.Web.HttpCookie&quot;> </xref> que contém informações de tíquete de autenticação de formulários criptografado. O valor padrão para o <xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>propriedade é usada.</xref:System.Web.Security.FormsAuthentication.FormsCookiePath*>"
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  id: GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cria um cookie de autenticação para um nome de usuário fornecido. Isso não define o cookie como parte da resposta de saída."
  syntax:
    content: public static System.Web.HttpCookie GetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "O nome do usuário autenticado."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para criar um cookie durável (aquele que é salvo em sessões do navegador); Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "O <xref:System.Web.HttpCookie.Path*>do cookie de autenticação.</xref:System.Web.HttpCookie.Path*>"
    return:
      type: System.Web.HttpCookie
      description: "Um <xref href=&quot;System.Web.HttpCookie&quot;> </xref> que contém informações de tíquete de autenticação de formulários criptografado."
  overload: System.Web.Security.FormsAuthentication.GetAuthCookie*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  id: GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Retorna a URL de redirecionamento para a solicitação original que causou o redirecionamento para a página de logon."
  remarks: "Você pode usar esse método quando você deseja executar o redirecionamento no código do aplicativo em vez de usar o <xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>método.</xref:System.Web.Security.FormsAuthentication.RedirectFromLoginPage%2A>       O método GetRedirectUrl retorna a URL especificada na cadeia de consulta usando o `ReturnURL` nome da variável. Por exemplo, na URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, o método GetRedirectUrl retorna a URL de retorno `caller.aspx`. Se o `ReturnURL` variável não existe, o método GetRedirectUrl retorna a URL do <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET adiciona automaticamente a URL de retorno quando o navegador é redirecionado para a página de logon.       Por padrão, o `ReturnUrl` variável deve se referir a uma página dentro do aplicativo atual. Se `ReturnUrl` refere-se a uma página em um aplicativo diferente ou em um servidor diferente, os métodos GetRedirectUrl retorna a URL do <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Se você quiser permitir que a URL de retorno para se referir a uma página fora do aplicativo atual, você deve definir o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade `true` usando o `enableCrossAppRedirects` atributo do elemento de configuração.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Configuração o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade `true` para permitir que os redirecionamentos entre aplicativos é uma possível ameaça à segurança.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Para obter mais informações, consulte o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>"
  example:
  - "The following code example redirects authenticated users to the URL returned from the GetRedirectUrl method.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[FormsAuthenticationTicketClass#1](~/add/codesnippet/csharp/41a9cd2e-33ed-4156-8c31-_1.aspx)]\n [!code-vb[FormsAuthenticationTicketClass#1](~/add/codesnippet/visualbasic/41a9cd2e-33ed-4156-8c31-_1.aspx)]"
  syntax:
    content: public static string GetRedirectUrl (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "O nome do usuário autenticado."
    - id: createPersistentCookie
      type: System.Boolean
      description: "Esse parâmetro é ignorado."
    return:
      type: System.String
      description: "Uma cadeia de caracteres que contém a URL de redirecionamento."
  overload: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  id: HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Gera uma senha hash adequada para armazenar em um arquivo de configuração com base no algoritmo de hash e a senha especificada."
  remarks: "O método HashPasswordForStoringInConfigFile cria um valor de hash de senha que pode ser usado ao armazenar credenciais de autenticação de formulários no arquivo de configuração para um aplicativo.       Credenciais de autenticação armazenadas no arquivo de configuração para um aplicativo são usadas pelo <xref:System.Web.Security.FormsAuthentication.Authenticate%2A>método para verificar se as senhas para usuários de um aplicativo.</xref:System.Web.Security.FormsAuthentication.Authenticate%2A> Como alternativa, você pode usar a associação do ASP.NET para armazenar as credenciais do usuário. Para obter mais informações, consulte [Gerenciando usuários com o uso de associações](~/add/includes/ajax-current-ext-md.md)."
  example:
  - "The following code example takes a user name, password, and hash type and displays the  section of the configuration that includes the user definition and hashed password.  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-vb[FormsAuthenticationHashPassword#1](~/add/codesnippet/visualbasic/60863efe-d1c9-47ee-90e6-_1.aspx)]\n [!code-cs[FormsAuthenticationHashPassword#1](~/add/codesnippet/csharp/60863efe-d1c9-47ee-90e6-_1.aspx)]"
  syntax:
    content: public static string HashPasswordForStoringInConfigFile (string password, string passwordFormat);
    parameters:
    - id: password
      type: System.String
      description: "A senha para hash."
    - id: passwordFormat
      type: System.String
      description: "O algoritmo de hash a ser usado. `passwordFormat`é um <xref uid=&quot;langword_csharp_String&quot; name=&quot;String&quot; href=&quot;&quot;> </xref> que representa uma da <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> valores de enumeração."
    return:
      type: System.String
      description: "A senha de hash."
  overload: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>password</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>       -or-       <code>passwordFormat</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.ArgumentException
    commentId: T:System.ArgumentException
    description: "<code>passwordFormat</code>não é válido <xref href=&quot;System.Web.Configuration.FormsAuthPasswordFormat&quot;> </xref> valor."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Initialize
  id: Initialize
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Inicializa o <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> objeto com base nas definições de configuração para o aplicativo."
  remarks: "O método Initialize é chamado quando o <xref:System.Web.Security.FormsAuthenticationModule>cria uma instância de <xref:System.Web.Security.FormsAuthentication>classe.</xref:System.Web.Security.FormsAuthentication> </xref:System.Web.Security.FormsAuthenticationModule> Esse método não deve ser chamado a partir do código."
  syntax:
    content: public static void Initialize ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.Initialize*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  id: IsEnabled
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se a autenticação de formulários está habilitada."
  syntax:
    content: public static bool IsEnabled { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a autenticação de formulários está habilitada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.IsEnabled*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  id: LoginUrl
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a URL para a página de logon que o <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> classe será redirecionado para."
  remarks: "O valor da propriedade LoginUrl é definido no arquivo de configuração para um aplicativo ASP.NET usando o `loginUrl` atributo do elemento de configuração. O LoginUrl é usado pelo <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>método.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>"
  example:
  - "The following code example sets the `loginUrl` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    defaultUrl=\"index.aspx\" />  \n</authentication>  \n```"
  syntax:
    content: public static string LoginUrl { get; }
    return:
      type: System.String
      description: "A URL para o logon de página que o <xref href=&quot;System.Web.Security.FormsAuthentication&quot;> </xref> classe será redirecionado para. O padrão é &quot;login.aspx&quot;."
  overload: System.Web.Security.FormsAuthentication.LoginUrl*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  id: RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Redireciona a um usuário autenticado para a URL solicitada originalmente ou a URL padrão."
  remarks: "O método RedirectFromLoginPage redireciona para a URL especificada na cadeia de consulta usando o `ReturnURL` nome da variável. Por exemplo, na URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, o método RedirectFromLoginPage redireciona para a URL de retorno `caller.aspx`. Se o `ReturnURL` variável não existe, o método RedirectFromLoginPage redireciona para a URL de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET adiciona automaticamente a URL de retorno quando o navegador é redirecionado para a página de logon.       Por padrão, o `ReturnUrl` variável deve se referir a uma página dentro do aplicativo atual. Se `ReturnUrl` refere-se a uma página em um aplicativo diferente ou em um servidor diferente, os métodos RedirectFromLoginPage redireciona para a URL de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Se você quiser permitir que o redireciona para uma página fora do aplicativo atual, você deve definir o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade `true` usando o `enableCrossAppRedirects` atributo do elemento de configuração.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Configuração o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade `true` para permitir que os redirecionamentos entre aplicativos é uma possível ameaça à segurança.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Para obter mais informações, consulte o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Se o <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é de propriedade `true`e o `ReturnUrl` variável está dentro do aplicativo atual ou o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>é de propriedade `true`, em seguida, o método RedirectFromLoginPage emite um tíquete de autenticação e o coloca no cookie padrão usando o <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>método.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false` e o caminho de redirecionamento é uma URL no aplicativo atual, a permissão é emitida como parte da URL de redirecionamento.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>é `true`, e o redirecionamento de URL não se refere a uma página dentro do aplicativo atual, o método RedirectFromLoginPage emite um tíquete de autenticação e o coloca no <xref:System.Web.HttpRequest.QueryString%2A>propriedade.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  example:
  - "The following code example redirects validated users to either the originally requested URL or the <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>. The code example uses ASP.NET membership to validate users. For more information about ASP.NET membership, see [Managing Users by Using Membership](~/add/includes/ajax-current-ext-md.md).  \n  \n> [!IMPORTANT]\n>  This example contains a text box that accepts user input, which is a potential security threat. By default, ASP.NET Web pages validate that user input does not include script or HTML elements. For more information, see [Script Exploits Overview](~/add/includes/ajax-current-ext-md.md).  \n  \n [!code-cs[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/csharp/1b30741b-7340-4c63-b342-_1.aspx)]\n [!code-vb[System.Web.Security.SqlMembershipProvider#1](~/add/codesnippet/visualbasic/1b30741b-7340-4c63-b342-_1.aspx)]"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "O nome de usuário autenticado."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para criar um cookie durável (aquele que é salvo em sessões do navegador); Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'A URL de retorno especificada na cadeia de caracteres de consulta contém um protocolo diferente de HTTP: ou HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  id: RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Redireciona a um usuário autenticado para a URL solicitada originalmente ou a URL padrão usando o caminho do cookie especificado para o cookie de autenticação de formulários."
  remarks: "O método RedirectFromLoginPage redireciona para a URL de retorno especificada na cadeia de consulta usando o `ReturnURL` nome da variável. Por exemplo, na URL `http://www.contoso.com/login.aspx?ReturnUrl=caller.aspx`, o método RedirectFromLoginPage redireciona para a URL de retorno `caller.aspx`. Se o `ReturnURL` variável não existe, o método RedirectFromLoginPage redireciona para a URL de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>       ASP.NET adiciona automaticamente a URL de retorno quando o navegador é redirecionado para a página de logon.       Por padrão, o `ReturnUrl` variável deve se referir a uma página dentro do aplicativo atual. Se `ReturnUrl` refere-se a uma página em um aplicativo diferente ou em um servidor diferente, o RedirectFromLoginPage método redireciona para a URL de <xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.DefaultUrl%2A> Se você quiser permitir que o redireciona para uma página fora do aplicativo atual, você deve definir o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade `true` usando o `enableCrossAppRedirects` atributo do elemento de configuração.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>      > [!IMPORTANT] > Configuração o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade `true` para permitir que os redirecionamentos entre aplicativos é uma possível ameaça à segurança.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> Para obter mais informações, consulte o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>propriedade.</xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>       Se o <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é de propriedade `true`e o `ReturnUrl` variável está dentro do aplicativo atual ou o <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>é de propriedade `true`, e em seguida, o método RedirectFromLoginPage emite um tíquete de autenticação e o coloca no cookie especificado pelo `strCookiePath` parâmetro usando o <xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A>método.</xref:System.Web.Security.FormsAuthentication.SetAuthCookie%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>       Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false` e o caminho de redirecionamento é uma URL no aplicativo atual, a permissão é emitida como parte da URL de redirecionamento.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false`, <xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A>é `true`, e o redirecionamento de URL não se refere a uma página dentro do aplicativo atual, o método RedirectFromLoginPage emite um tíquete de autenticação e o coloca no <xref:System.Web.HttpRequest.QueryString%2A>propriedade.</xref:System.Web.HttpRequest.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.EnableCrossAppRedirects%2A> </xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>"
  syntax:
    content: public static void RedirectFromLoginPage (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "O nome de usuário autenticado."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para criar um cookie durável (aquele que é salvo em sessões do navegador); Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "O caminho do cookie para o tíquete de autenticação de formulários."
  overload: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: 'A URL de retorno especificada na cadeia de caracteres de consulta contém um protocolo diferente de HTTP: ou HTTPS:.'
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  id: RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Redireciona o navegador para a URL de logon."
  remarks: "O método RedirectToLoginPage redireciona o navegador para <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>.</xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       O método RedirectToLoginPage não limpa o cookie de autenticação de formulários. Você pode usar o método RedirectToLoginPage em conjunto com o <xref:System.Web.Security.FormsAuthentication.SignOut%2A>método de usuário de uma saída de log e permitir que um usuário diferente para logon.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_0_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_0_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  id: RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Redireciona o navegador para a URL de logon com a cadeia de caracteres de consulta especificada."
  remarks: "O método RedirectToLoginPage redireciona o navegador para o <xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>e inclui o `extraQueryString` valor como o <xref:System.Management.ManagementQuery.QueryString%2A>para a URL de redirecionamento.</xref:System.Management.ManagementQuery.QueryString%2A> </xref:System.Web.Security.FormsAuthentication.LoginUrl%2A>       O método RedirectToLoginPage não limpa o cookie de autenticação de formulários. Você pode usar o método RedirectToLoginPage em conjunto com o <xref:System.Web.Security.FormsAuthentication.SignOut%2A>método de usuário de uma saída de log e permitir que um usuário diferente para logon.</xref:System.Web.Security.FormsAuthentication.SignOut%2A>"
  example:
  - "The following code example clears the forms-authentication cookie using the <xref:System.Web.Security.FormsAuthentication.SignOut%2A> method and redirects the user to the login page using the RedirectToLoginPage method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/csharp/m-system.web.security.fo_1_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#3](~/add/codesnippet/visualbasic/m-system.web.security.fo_1_1.aspx)]"
  syntax:
    content: public static void RedirectToLoginPage (string extraQueryString);
    parameters:
    - id: extraQueryString
      type: System.String
      description: "A cadeia de caracteres de consulta para incluir com a URL de redirecionamento."
  overload: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  id: RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Atualizações condicionalmente a data de emissão e a hora e a data de expiração e a hora para um <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  remarks: "O método RenewTicketIfOld atualiza a data de expiração e a hora de fornecido <xref:System.Web.Security.FormsAuthenticationTicket>se a data e hora atuais menos a <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>valor é maior que o <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>valor menos a data e hora atuais.</xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket>       O tíquete é atualizado com o <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>propriedade definida como a data e hora atuais e o <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>propriedade definida como a data atual e a hora mais original <xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A>valor menos original <xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>valor.</xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.Expiration%2A> </xref:System.Web.Security.FormsAuthenticationTicket.IssueDate%2A>"
  syntax:
    content: public static System.Web.Security.FormsAuthenticationTicket RenewTicketIfOld (System.Web.Security.FormsAuthenticationTicket tOld);
    parameters:
    - id: tOld
      type: System.Web.Security.FormsAuthenticationTicket
      description: "O tíquete de autenticação de formulários para atualizar."
    return:
      type: System.Web.Security.FormsAuthenticationTicket
      description: "A atualização <xref href=&quot;System.Web.Security.FormsAuthenticationTicket&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  id: RequireSSL
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se o cookie de autenticação de formulários requer SSL a fim de ser retornado para o servidor."
  remarks: "O valor da propriedade RequireSSL está definido no arquivo de configuração para um aplicativo ASP.NET usando o `requireSSL` atributo do elemento de configuração. Você pode especificar no arquivo Web. config para seu aplicativo ASP.NET se o SSL (Secure Sockets Layer) é necessária para retornar o cookie de autenticação de formulários para o servidor definindo a `requireSSL` atributo. Para obter mais informações, consulte <xref:System.Web.HttpCookie.Secure%2A>.</xref:System.Web.HttpCookie.Secure%2A>       É recomendável que se você configurar `requireSSL` como `false`, você também configurar `slidingExpiration` como `false`, para reduzir a quantidade de tempo para o qual uma permissão é válida."
  example:
  - "The following code example sets the `requireSSL` attribute in the Web.config file.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"  \n    path=\"/MyApplication\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool RequireSSL { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se o SSL é necessário para retornar o cookie de autenticação de formulários para o servidor. Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.RequireSSL*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  id: SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cria um tíquete de autenticação para o nome de usuário fornecido e o adiciona à coleção de cookies de resposta ou à URL se você estiver usando a autenticação sem cookies."
  remarks: "O método SetAuthCookie adiciona um tíquete de autenticação de formulários para a coleção de cookies, ou para a URL se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> O tíquete de autenticação de formulários fornece informações de autenticação de formulários para a próxima solicitação feita pelo navegador. Com a autenticação de formulários, você pode usar o método SetAuthCookie para autenticar um usuário, mas ainda manter o controle de navegação com redirecionamentos."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie);
    parameters:
    - id: userName
      type: System.String
      description: "O nome de um usuário autenticado. Isso não tem que mapear para uma conta do Windows."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para criar um cookie persistente (aquele que é salvo em sessões do navegador); Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  id: SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Cria um tíquete de autenticação para o nome de usuário fornecido e o adiciona à coleção de cookies de resposta, o caminho do cookie fornecido ou se você estiver usando autenticação cookieless, usando a URL."
  remarks: "O método SetAuthCookie adiciona um tíquete de autenticação de formulários para a coleção de cookies ou a URL se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> O tíquete de autenticação de formulários fornece informações de autenticação de formulários para a próxima solicitação feita pelo navegador. Com a autenticação de formulários, você pode usar o método SetAuthCookie para autenticar um usuário, mas ainda manter o controle de navegação com redirecionamentos."
  syntax:
    content: public static void SetAuthCookie (string userName, bool createPersistentCookie, string strCookiePath);
    parameters:
    - id: userName
      type: System.String
      description: "O nome de um usuário autenticado."
    - id: createPersistentCookie
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para criar um cookie durável (aquele que é salvo em sessões do navegador); Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>."
    - id: strCookiePath
      type: System.String
      description: "O caminho do cookie para o tíquete de autenticação de formulários."
  overload: System.Web.Security.FormsAuthentication.SetAuthCookie*
  exceptions:
  - type: System.Web.HttpException
    commentId: T:System.Web.HttpException
    description: "<>*> is <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref> and <>*> is <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;></xref>."
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SignOut
  id: SignOut
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
  type: Method
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Remove o tíquete de autenticação de formulários do navegador."
  remarks: "O método SignOut remove as informações do tíquete de autenticação de formulários do cookie ou a URL se <xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A>é `false`.</xref:System.Web.Security.FormsAuthentication.CookiesSupported%2A> Você pode usar o método SignOut em conjunto com o <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>método de usuário de uma saída de log e permitir que um usuário diferente para logon.</xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A>       Se você executar exclusivamente no modo sem cookies, ou se você oferecer suporte aos usuários autenticados e anônimos, você deve explicitamente controle o redirecionamento para a página de logon, se você precisar de lógica de negócios especiais para executar como resultado da remoção do identificador anônimo.       Quando o método SignOut é chamado, um redirecionamento para a página de logon do aplicativo é feito ao chamar o <xref:System.Web.HttpResponse.Redirect%2A>método com o `endResponse` parâmetro definido como `false`.</xref:System.Web.HttpResponse.Redirect%2A> O redirecionamento não ocorrerá até que a página atual termina a execução, portanto o código adicional pode ser executado. Se o código não tem um redirecionamento explícito para outra página, o usuário é redirecionado para a página de logon configurada no arquivo de configuração do aplicativo.       Chamar o método SignOut remove apenas o cookie de autenticação de formulários. O servidor Web não armazenar tíquetes de autenticação válido e expiradas para a comparação posterior. Isso faz com que seu site vulnerável a ataques de repetição se um usuário mal-intencionado obtiver um cookie de autenticação. Para melhorar a segurança ao usar um cookie de autenticação de formulários, você deve fazer o seguinte:-usar expiração absoluta para cookies de autenticação de formulários, definindo o <xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A>propriedade `false`.</xref:System.Web.Security.FormsAuthentication.SlidingExpiration%2A> Isso limita a janela em que um cookie capturado pode ser reproduzido.      -Somente emitir e aceita os cookies de autenticação por SSL Secure Sockets Layer (), definindo o <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>propriedade `true` e executando todo o site da Web em SSL.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Definindo o <xref:System.Web.Security.FormsAuthentication.RequireSSL%2A>propriedade `true` garante que o ASP.NET nunca enviará um cookie de autenticação para o navegador sobre uma conexão não SSL; no entanto, o cliente não poderá respeitar a configuração segura no cookie.</xref:System.Web.Security.FormsAuthentication.RequireSSL%2A> Isso significa que o cliente pode enviar o cookie de autenticação de formulários em uma conexão não SSL, assim, deixando-o vulnerável a assumir o controle. Você pode impedir que um cliente enviar o cookie de autenticação de formulários criptografado com a execução de todo o site da Web em SSL.      -Use o armazenamento persistente no servidor para registrar quando um usuário faz logoff do site da Web e, em seguida, usar um evento de aplicativo, como <xref:System.Web.HttpApplication.PostAuthenticateRequest>evento para determinar se o usuário atual foi autenticado com autenticação de formulários.</xref:System.Web.HttpApplication.PostAuthenticateRequest> Se o usuário foi autenticado com autenticação de formulários, e se as informações no armazenamento persistente indicam o usuário é desconectado, imediatamente limpar o cookie de autenticação e redirecionar o navegador para a página de logon. Após um logon bem-sucedido, atualize o armazenamento para refletir que o usuário está conectado. Quando você usar esse método, seu aplicativo deve controlar o status de login do usuário e deve forçar os usuários inativos para efetuar logout."
  example:
  - "The following code example clears the forms-authentication cookie using the SignOut method and redirects the user to the login page using the <xref:System.Web.Security.FormsAuthentication.RedirectToLoginPage%2A> method.  \n  \n [!code-cs[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/csharp/m-system.web.security.fo_2_1.aspx)]\n [!code-vb[System.Web.Security.FormsAuthentication#2](~/add/codesnippet/visualbasic/m-system.web.security.fo_2_1.aspx)]"
  syntax:
    content: public static void SignOut ();
    parameters: []
  overload: System.Web.Security.FormsAuthentication.SignOut*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  id: SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se a expiração deslizante está habilitada."
  remarks: "O valor da propriedade SlidingExpiration é definido usando o `slidingExpiration` atributo do elemento de configuração.       A expiração deslizante redefine a hora de expiração de um cookie de autenticação válido, se uma solicitação é feita e mais da metade do intervalo de tempo limite expirou. Se o cookie expira, o usuário deve autenticar novamente. Definir a propriedade SlidingExpiration como `false` pode melhorar a segurança de um aplicativo, limitando o tempo para o qual um cookie de autenticação é válido, com base no configurado `timeout` valor.       É recomendável que, se você configurar `requireSSL` como `false`, você também configurar `slidingExpiration` como `false`, para reduzir a quantidade de tempo para o qual uma permissão é válida."
  example:
  - "The following code example sets the `slidingExpiration` attribute to `false` in the Web.config file for an ASP.NET application.  \n  \n```  \n<authentication mode=\"Forms\">  \n  <forms loginUrl=\"member_login.aspx\"  \n    name=\".ASPXFORMSAUTH\"  \n    cookieless=\"UseCookies\"  \n    requireSSL=\"true\"   \n    slidingExpiration=\"false\" />  \n</authentication>  \n```"
  syntax:
    content: public static bool SlidingExpiration { get; }
    return:
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>Se a expiração deslizante está habilitada; Caso contrário, <xref uid=&quot;langword_csharp_false&quot; name=&quot;false&quot; href=&quot;&quot;> </xref>. O padrão é <xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;> </xref>."
  overload: System.Web.Security.FormsAuthentication.SlidingExpiration*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  id: TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém um valor que indica se deve usar o tempo Universal Coordenado (UTC) ou horário local para a data de expiração do tíquete."
  syntax:
    content: public static System.Web.Configuration.TicketCompatibilityMode TicketCompatibilityMode { get; }
    return:
      type: System.Web.Configuration.TicketCompatibilityMode
      description: "Um valor que indica se deve usar o tempo Universal Coordenado (UTC) ou horário local para a data de expiração do tíquete."
  overload: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  exceptions: []
  platform:
  - net462
- uid: System.Web.Security.FormsAuthentication.Timeout
  id: Timeout
  parent: System.Web.Security.FormsAuthentication
  langs:
  - csharp
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
  type: Property
  assemblies:
  - System.Web
  namespace: System.Web.Security
  summary: "Obtém a quantidade de tempo antes que um tíquete de autenticação expira."
  syntax:
    content: public static TimeSpan Timeout { get; }
    return:
      type: System.TimeSpan
      description: "A quantidade de tempo antes que um tíquete de autenticação expira."
  overload: System.Web.Security.FormsAuthentication.Timeout*
  exceptions: []
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentException
  isExternal: true
  name: System.ArgumentException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.Web.HttpException
  parent: System.Web
  isExternal: false
  name: HttpException
  nameWithType: HttpException
  fullName: System.Web.HttpException
- uid: System.Web.Security.FormsAuthentication.#ctor
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication()
  nameWithType: FormsAuthentication.FormsAuthentication()
  fullName: System.Web.Security.FormsAuthentication.FormsAuthentication()
- uid: System.Web.Security.FormsAuthentication.Authenticate(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate(String,String)
  nameWithType: FormsAuthentication.Authenticate(String,String)
  fullName: System.Web.Security.FormsAuthentication.Authenticate(String,String)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.String
  parent: System
  isExternal: true
  name: String
  nameWithType: String
  fullName: System.String
- uid: System.Web.Security.FormsAuthentication.CookieDomain
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
  fullName: System.Web.Security.FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
  fullName: System.Web.Security.FormsAuthentication.CookieMode
- uid: System.Web.HttpCookieMode
  parent: System.Web
  isExternal: false
  name: HttpCookieMode
  nameWithType: HttpCookieMode
  fullName: System.Web.HttpCookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
  fullName: System.Web.Security.FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt(String)
  nameWithType: FormsAuthentication.Decrypt(String)
  fullName: System.Web.Security.FormsAuthentication.Decrypt(String)
- uid: System.Web.Security.FormsAuthenticationTicket
  parent: System.Web.Security
  isExternal: false
  name: FormsAuthenticationTicket
  nameWithType: FormsAuthenticationTicket
  fullName: System.Web.Security.FormsAuthenticationTicket
- uid: System.Web.Security.FormsAuthentication.DefaultUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
  fullName: System.Web.Security.FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
  fullName: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(System.Collections.Specialized.NameValueCollection)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication(NameValueCollection)
  nameWithType: FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
  fullName: System.Web.Security.FormsAuthentication.EnableFormsAuthentication(NameValueCollection)
- uid: System.Collections.Specialized.NameValueCollection
  parent: System.Collections.Specialized
  isExternal: false
  name: NameValueCollection
  nameWithType: NameValueCollection
  fullName: System.Collections.Specialized.NameValueCollection
- uid: System.Web.Security.FormsAuthentication.Encrypt(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.Encrypt(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.Encrypt(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.FormsCookieName
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
  fullName: System.Web.Security.FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
  fullName: System.Web.Security.FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean)
- uid: System.Web.HttpCookie
  parent: System.Web
  isExternal: false
  name: HttpCookie
  nameWithType: HttpCookie
  fullName: System.Web.HttpCookie
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.GetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.GetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl(String,Boolean)
  nameWithType: FormsAuthentication.GetRedirectUrl(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.GetRedirectUrl(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(System.String,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile(String,String)
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
  fullName: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile(String,String)
- uid: System.Web.Security.FormsAuthentication.Initialize
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize()
  nameWithType: FormsAuthentication.Initialize()
  fullName: System.Web.Security.FormsAuthentication.Initialize()
- uid: System.Web.Security.FormsAuthentication.IsEnabled
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
  fullName: System.Web.Security.FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
  fullName: System.Web.Security.FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage(String,Boolean,String)
  nameWithType: FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.RedirectFromLoginPage(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage()
  nameWithType: FormsAuthentication.RedirectToLoginPage()
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage()
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage(System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage(String)
  nameWithType: FormsAuthentication.RedirectToLoginPage(String)
  fullName: System.Web.Security.FormsAuthentication.RedirectToLoginPage(String)
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld(System.Web.Security.FormsAuthenticationTicket)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld(FormsAuthenticationTicket)
  nameWithType: FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
  fullName: System.Web.Security.FormsAuthentication.RenewTicketIfOld(FormsAuthenticationTicket)
- uid: System.Web.Security.FormsAuthentication.RequireSSL
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
  fullName: System.Web.Security.FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean)
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie(System.String,System.Boolean,System.String)
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie(String,Boolean,String)
  nameWithType: FormsAuthentication.SetAuthCookie(String,Boolean,String)
  fullName: System.Web.Security.FormsAuthentication.SetAuthCookie(String,Boolean,String)
- uid: System.Web.Security.FormsAuthentication.SignOut
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut()
  nameWithType: FormsAuthentication.SignOut()
  fullName: System.Web.Security.FormsAuthentication.SignOut()
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
  fullName: System.Web.Security.FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
  fullName: System.Web.Security.FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Configuration.TicketCompatibilityMode
  parent: System.Web.Configuration
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: TicketCompatibilityMode
  fullName: System.Web.Configuration.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
  fullName: System.Web.Security.FormsAuthentication.Timeout
- uid: System.TimeSpan
  parent: System
  isExternal: true
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Web.Security.FormsAuthentication.#ctor*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsAuthentication
  nameWithType: FormsAuthentication.FormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Authenticate*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Authenticate
  nameWithType: FormsAuthentication.Authenticate
- uid: System.Web.Security.FormsAuthentication.CookieDomain*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieDomain
  nameWithType: FormsAuthentication.CookieDomain
- uid: System.Web.Security.FormsAuthentication.CookieMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookieMode
  nameWithType: FormsAuthentication.CookieMode
- uid: System.Web.Security.FormsAuthentication.CookiesSupported*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: CookiesSupported
  nameWithType: FormsAuthentication.CookiesSupported
- uid: System.Web.Security.FormsAuthentication.Decrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Decrypt
  nameWithType: FormsAuthentication.Decrypt
- uid: System.Web.Security.FormsAuthentication.DefaultUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: DefaultUrl
  nameWithType: FormsAuthentication.DefaultUrl
- uid: System.Web.Security.FormsAuthentication.EnableCrossAppRedirects*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableCrossAppRedirects
  nameWithType: FormsAuthentication.EnableCrossAppRedirects
- uid: System.Web.Security.FormsAuthentication.EnableFormsAuthentication*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: EnableFormsAuthentication
  nameWithType: FormsAuthentication.EnableFormsAuthentication
- uid: System.Web.Security.FormsAuthentication.Encrypt*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Encrypt
  nameWithType: FormsAuthentication.Encrypt
- uid: System.Web.Security.FormsAuthentication.FormsCookieName*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookieName
  nameWithType: FormsAuthentication.FormsCookieName
- uid: System.Web.Security.FormsAuthentication.FormsCookiePath*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: FormsCookiePath
  nameWithType: FormsAuthentication.FormsCookiePath
- uid: System.Web.Security.FormsAuthentication.GetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetAuthCookie
  nameWithType: FormsAuthentication.GetAuthCookie
- uid: System.Web.Security.FormsAuthentication.GetRedirectUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: GetRedirectUrl
  nameWithType: FormsAuthentication.GetRedirectUrl
- uid: System.Web.Security.FormsAuthentication.HashPasswordForStoringInConfigFile*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: HashPasswordForStoringInConfigFile
  nameWithType: FormsAuthentication.HashPasswordForStoringInConfigFile
- uid: System.Web.Security.FormsAuthentication.Initialize*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Initialize
  nameWithType: FormsAuthentication.Initialize
- uid: System.Web.Security.FormsAuthentication.IsEnabled*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: IsEnabled
  nameWithType: FormsAuthentication.IsEnabled
- uid: System.Web.Security.FormsAuthentication.LoginUrl*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: LoginUrl
  nameWithType: FormsAuthentication.LoginUrl
- uid: System.Web.Security.FormsAuthentication.RedirectFromLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectFromLoginPage
  nameWithType: FormsAuthentication.RedirectFromLoginPage
- uid: System.Web.Security.FormsAuthentication.RedirectToLoginPage*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RedirectToLoginPage
  nameWithType: FormsAuthentication.RedirectToLoginPage
- uid: System.Web.Security.FormsAuthentication.RenewTicketIfOld*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RenewTicketIfOld
  nameWithType: FormsAuthentication.RenewTicketIfOld
- uid: System.Web.Security.FormsAuthentication.RequireSSL*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: RequireSSL
  nameWithType: FormsAuthentication.RequireSSL
- uid: System.Web.Security.FormsAuthentication.SetAuthCookie*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SetAuthCookie
  nameWithType: FormsAuthentication.SetAuthCookie
- uid: System.Web.Security.FormsAuthentication.SignOut*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SignOut
  nameWithType: FormsAuthentication.SignOut
- uid: System.Web.Security.FormsAuthentication.SlidingExpiration*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: SlidingExpiration
  nameWithType: FormsAuthentication.SlidingExpiration
- uid: System.Web.Security.FormsAuthentication.TicketCompatibilityMode*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: TicketCompatibilityMode
  nameWithType: FormsAuthentication.TicketCompatibilityMode
- uid: System.Web.Security.FormsAuthentication.Timeout*
  parent: System.Web.Security.FormsAuthentication
  isExternal: false
  name: Timeout
  nameWithType: FormsAuthentication.Timeout
