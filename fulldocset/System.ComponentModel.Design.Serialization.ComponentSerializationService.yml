### YamlMime:ManagedReference
items:
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService
  id: ComponentSerializationService
  children:
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  - System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  langs:
  - csharp
  name: ComponentSerializationService
  nameWithType: ComponentSerializationService
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService
  type: Class
  summary: "Fornece a classe base para serializar um conjunto de componentes ou objetos serializáveis em um repositório de serialização."
  remarks: "O ComponentSerializationService serializa um conjunto de componentes ou objetos serializáveis em um repositório de serialização. O repositório, em seguida, pode ser desserializado posteriormente. A classe ComponentSerializationService difere de outros esquemas de serialização em que o formato de serialização é opaco e permite parcial serialização de objetos. Por exemplo, você pode escolher serializar apenas as propriedades selecionadas de um objeto.       Essa classe é `abstract`. Normalmente, um <xref:System.ComponentModel.Design.Serialization.DesignerLoader>fornecerá uma implementação concreta dessa classe e adicioná-lo como um serviço para o seu <xref:System.ComponentModel.Design.DesignSurface>.</xref:System.ComponentModel.Design.DesignSurface> </xref:System.ComponentModel.Design.Serialization.DesignerLoader> Isso permite que os objetos a ser serializado no formato mais adequado.       O ComponentSerializationService classe substitui o <xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>da interface do .NET Framework versão 1.0, embora o último é mantido para compatibilidade com versões anteriores.</xref:System.ComponentModel.Design.Serialization.IDesignerSerializationService>"
  syntax:
    content: public abstract class ComponentSerializationService
  inheritance:
  - System.Object
  implements: []
  inheritedMembers: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  id: '#ctor'
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: ComponentSerializationService()
  nameWithType: ComponentSerializationService.ComponentSerializationService()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.ComponentSerializationService()
  type: Constructor
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Inicializa uma nova instância do <xref href=&quot;System.ComponentModel.Design.Serialization.ComponentSerializationService&quot;> </xref> classe."
  syntax:
    content: protected ComponentSerializationService ();
    parameters: []
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  id: CreateStore
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: CreateStore()
  nameWithType: ComponentSerializationService.CreateStore()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore()
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Cria um novo <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>."
  remarks: "Vários objetos podem ser serializados para o mesmo armazenamento de serialização. Quando tiver terminado com o armazenamento, você pode chamar seu <xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A>ou <xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A>método.</xref:System.ComponentModel.Design.Serialization.SerializationStore.Close%2A> </xref:System.ComponentModel.Design.Serialization.SerializationStore.System%23IDisposable%23Dispose%2A> Depois de fechado, um repositório de serialização pode ser usado para desserialização ou pode ser salvo em um fluxo.       O armazenamento de serialização pode ser passado para qualquer um dos vários métodos de serialização para criar o estado de serialização para um grupo de objetos."
  syntax:
    content: public abstract System.ComponentModel.Design.Serialization.SerializationStore CreateStore ();
    parameters: []
    return:
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "Um novo repositório de serialização criado."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore*
  exceptions: []
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  id: Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Deserialize(SerializationStore)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Desserializa a determinada loja para produzir uma coleção de objetos."
  remarks: "Esse método desserializa `store` para produzir uma coleção de objetos contidos nele. Objetos desserializados na mesma ordem em que eles foram serializados."
  syntax:
    content: public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> a ser desserializado."
    return:
      type: System.Collections.ICollection
      description: "Uma coleção de objetos criados de acordo com o estado armazenado."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>não contém dados em um formato que pode processar o contêiner de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  id: Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Deserialize(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Desserializa a determinada loja e preenche o determinado <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> com desserializado <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> objetos."
  remarks: "Esse método desserializa `store` para produzir uma coleção de objetos contidos nele. Objetos desserializados na mesma ordem em que eles foram serializados.       Criou objetos que implementam <xref:System.ComponentModel.IComponent>são adicionados ao `container`.</xref:System.ComponentModel.IComponent>"
  syntax:
    content: public abstract System.Collections.ICollection Deserialize (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> a ser desserializado."
    - id: container
      type: System.ComponentModel.IContainer
      description: "O <xref href=&quot;System.ComponentModel.IContainer&quot;> </xref> para o qual <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> objetos serão adicionados."
    return:
      type: System.Collections.ICollection
      description: "Uma coleção de objetos criados de acordo com o estado armazenado."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>não contém dados em um formato que pode processar o contêiner de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Desserializa o determinado <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> no contêiner especificado."
  remarks: "O método DeserializeTo desserializa `store`, mas em vez de produzir novos objetos, ele se aplica os dados no repositório de um conjunto existente de objetos que são obtidos do contêiner fornecido. Como resultado, o chamador pode criar previamente um objeto no entanto, ele vê se ajustar. Se um objeto tem um estado de desserialização e o objeto não é chamado no conjunto de objetos existentes, será criado um novo objeto. Se esse objeto também implementa <xref:System.ComponentModel.IComponent>, ele será adicionado ao `container`.</xref:System.ComponentModel.IComponent> Objetos de contêiner devem ter nomes e tipos que correspondem a objetos no repositório de serialização para um objeto existente a ser usado."
  syntax:
    content: public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> a ser desserializado."
    - id: container
      type: System.ComponentModel.IContainer
      description: "O contêiner para o qual <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> objetos serão adicionados."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>não contém dados em um formato que pode processar o contêiner de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Desserializa o determinado <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> para o contêiner especificado, opcionalmente, validar reciclados tipos."
  remarks: "O <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>método desserializa `store`, mas em vez de produzir novos objetos, ele se aplica os dados no repositório de um conjunto existente de objetos que são obtidos do contêiner fornecido.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> Como resultado, o chamador pode criar previamente um objeto no entanto, ele vê se ajustar. Se um objeto tem um estado de desserialização e o objeto não é chamado no conjunto de objetos existentes, será criado um novo objeto. Se esse objeto também implementa <xref:System.ComponentModel.IComponent>, ele será adicionado ao `container`.</xref:System.ComponentModel.IComponent> Objetos de contêiner devem ter nomes e tipos que correspondem a objetos no repositório de serialização para um objeto existente a ser usado."
  syntax:
    content: public void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> a ser desserializado."
    - id: container
      type: System.ComponentModel.IContainer
      description: "O contêiner para o qual <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> objetos serão adicionados."
    - id: validateRecycledTypes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para garantir que a desserialização só funcionará se aplicado a um objeto do mesmo tipo."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>não contém dados em um formato que pode processar o contêiner de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  id: DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Desserializa o determinado <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> para o contêiner especificado, opcionalmente, aplicando valores de propriedade padrão."
  remarks: "O <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A>método desserializa `store`, mas em vez de produzir novos objetos, ele se aplica os dados no repositório de um conjunto existente de objetos que são obtidos do contêiner fornecido.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo%2A> Como resultado, o chamador pode criar previamente um objeto no entanto, ele vê se ajustar. Se um objeto tem um estado de desserialização e o objeto não é chamado no conjunto de objetos existentes, será criado um novo objeto. Se esse objeto também implementa <xref:System.ComponentModel.IComponent>, ele será adicionado ao `container`.</xref:System.ComponentModel.IComponent> Objetos de contêiner devem ter nomes e tipos que correspondem a objetos no repositório de serialização para um objeto existente a ser usado."
  syntax:
    content: public abstract void DeserializeTo (System.ComponentModel.Design.Serialization.SerializationStore store, System.ComponentModel.IContainer container, bool validateRecycledTypes, bool applyDefaults);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> a ser desserializado."
    - id: container
      type: System.ComponentModel.IContainer
      description: "O contêiner para o qual <xref href=&quot;System.ComponentModel.IComponent&quot;> </xref> objetos serão adicionados."
    - id: validateRecycledTypes
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para garantir que a desserialização só funcionará se aplicado a um objeto do mesmo tipo."
    - id: applyDefaults
      type: System.Boolean
      description: "<xref uid=&quot;langword_csharp_true&quot; name=&quot;true&quot; href=&quot;&quot;></xref>para indicar que os valores de propriedade padrão devem ser aplicados."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>container</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>não contém dados em um formato que pode processar o contêiner de serialização."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  id: LoadStore(System.IO.Stream)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: LoadStore(Stream)
  nameWithType: ComponentSerializationService.LoadStore(Stream)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(Stream)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Carrega um <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> de um fluxo."
  remarks: "Você pode usar o repositório retornado para desserializar objetos passando-a uma da <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A>métodos.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize%2A>"
  syntax:
    content: public abstract System.ComponentModel.Design.Serialization.SerializationStore LoadStore (System.IO.Stream stream);
    parameters:
    - id: stream
      type: System.IO.Stream
      description: "O <xref:System.IO.Stream>do que o armazenamento será carregado.</xref:System.IO.Stream>"
    return:
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "Um novo <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> instância."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>stream</code>is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>stream</code>não contém dados salvos por uma chamada anterior para <xref:System.ComponentModel.Design.Serialization.SerializationStore.Save*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  id: Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: Serialize(SerializationStore,Object)
  nameWithType: ComponentSerializationService.Serialize(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(SerializationStore,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa o objeto fornecido para o determinado <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref>."
  remarks: "O armazenamento pode ser usado para serializar a mais de um objeto ao chamar esse método mais de uma vez."
  syntax:
    content: public abstract void Serialize (System.ComponentModel.Design.Serialization.SerializationStore store, object value);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> ao qual o estado do `value` será gravado."
    - id: value
      type: System.Object
      description: "O objeto a ser serializado."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>está fechado, ou <code>store</code> não é um tipo com suporte de armazenamento de serialização. Usar um repositório retornado pelo <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  id: SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeAbsolute(SerializationStore,Object)
  nameWithType: ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa o objeto fornecido, para valores de propriedade padrão."
  remarks: "Padrão de serialização, como implementado por meio de <xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A>método, serializa somente os valores diferentes do estado de padrão do componente.</xref:System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize%2A> Isso fornece o mecanismo de serialização mais compacto mas presume que um objeto recém-criado será usado durante a desserialização. Se um objeto existente for usado, o objeto desserializado resultante não é garantido para duplicar o estado original do objeto serializado; as propriedades que continha os valores padrão durante a serialização não serão redefinidas para seus padrões durante desserialização.       O método SerializeAbsolute não usar esse atalho. Ele serializa todas as propriedades do objeto de origem para que desserialização pode restaurar todas as propriedades do objeto, independentemente do estado padrão.       Esse método é particularmente útil para serializar coleções, porque pode alterar a ordem dos itens constituintes dentro da coleção. Nesse caso, o processo mais seguro para restaurar o estado original de toda a coleção é substituir todos os itens com todos os seus valores de propriedade original."
  syntax:
    content: public abstract void SerializeAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object value);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> ao qual o estado do `value` será serializado."
    - id: value
      type: System.Object
      description: "O objeto a ser serializado."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>está fechado, ou <code>store</code> não é um tipo com suporte de armazenamento de serialização. Usar um repositório retornado pelo <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  id: SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeMember(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa o membro fornecido no objeto especificado."
  remarks: "O método SerializeMember pode ser chamado várias vezes para o mesmo objeto criar uma lista de membros serializados no repositório de serialização. Em geral, o membro deve ser uma propriedade ou um evento."
  syntax:
    content: public abstract void SerializeMember (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> ao qual o estado do `member` será serializado."
    - id: owningObject
      type: System.Object
      description: "O objeto ao qual `member` está anexado."
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "Um <xref href=&quot;System.ComponentModel.MemberDescriptor&quot;> </xref> especificando para serializar o membro."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>está fechado, ou <code>store</code> não é um tipo com suporte de armazenamento de serialização. Usar um repositório retornado pelo <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  id: SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  langs:
  - csharp
  name: SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  type: Method
  assemblies:
  - System
  namespace: System.ComponentModel.Design.Serialization
  summary: "Serializa o membro fornecido em determinado objeto, considerando o valor da propriedade padrão."
  remarks: "O método SerializeMemberAbsolute serializa o `member` na `owningObject`, mesmo se `member` contém o valor da propriedade padrão.       Observe que para alguns membros, que contém o valor padrão e restaurar a configuração do mesmo valor para o membro são conceitos diferentes. Por exemplo, se uma propriedade herda seu valor de um objeto pai quando nenhum valor local é definido, definindo o valor para a propriedade pode não ser o desejado. O método SerializeMemberAbsolute leva em conta a isso e desmarque o estado da propriedade nesse caso."
  syntax:
    content: public abstract void SerializeMemberAbsolute (System.ComponentModel.Design.Serialization.SerializationStore store, object owningObject, System.ComponentModel.MemberDescriptor member);
    parameters:
    - id: store
      type: System.ComponentModel.Design.Serialization.SerializationStore
      description: "O <xref href=&quot;System.ComponentModel.Design.Serialization.SerializationStore&quot;> </xref> ao qual o estado do `member` será serializado."
    - id: owningObject
      type: System.Object
      description: "O objeto ao qual `member` está anexado."
    - id: member
      type: System.ComponentModel.MemberDescriptor
      description: "O membro para serializar."
  overload: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute*
  exceptions:
  - type: System.ArgumentNullException
    commentId: T:System.ArgumentNullException
    description: "<code>store</code>or <code>value</code> is <xref uid=&quot;langword_csharp_null&quot; name=&quot;null&quot; href=&quot;&quot;></xref>."
  - type: System.InvalidOperationException
    commentId: T:System.InvalidOperationException
    description: "<code>store</code>está fechado, ou <code>store</code> não é um tipo com suporte de armazenamento de serialização. Usar um repositório retornado pelo <xref:System.ComponentModel.Design.Serialization.CodeDomComponentSerializationService.CreateStore*>."
  platform:
  - net462
references:
- uid: System.Object
  isExternal: false
  name: System.Object
- uid: System.ArgumentNullException
  isExternal: true
  name: System.ArgumentNullException
- uid: System.InvalidOperationException
  isExternal: true
  name: System.InvalidOperationException
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: ComponentSerializationService()
  nameWithType: ComponentSerializationService.ComponentSerializationService()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.ComponentSerializationService()
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: CreateStore()
  nameWithType: ComponentSerializationService.CreateStore()
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore()
- uid: System.ComponentModel.Design.Serialization.SerializationStore
  parent: System.ComponentModel.Design.Serialization
  isExternal: false
  name: SerializationStore
  nameWithType: SerializationStore
  fullName: System.ComponentModel.Design.Serialization.SerializationStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize(SerializationStore)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore)
- uid: System.Collections.ICollection
  parent: System.Collections
  isExternal: true
  name: ICollection
  nameWithType: ICollection
  fullName: System.Collections.ICollection
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.Deserialize(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize(SerializationStore,IContainer)
- uid: System.ComponentModel.IContainer
  parent: System.ComponentModel
  isExternal: false
  name: IContainer
  nameWithType: IContainer
  fullName: System.ComponentModel.IContainer
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean)
- uid: System.Boolean
  parent: System
  isExternal: true
  name: Boolean
  nameWithType: Boolean
  fullName: System.Boolean
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(System.ComponentModel.Design.Serialization.SerializationStore,System.ComponentModel.IContainer,System.Boolean,System.Boolean)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  nameWithType: ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo(SerializationStore,IContainer,Boolean,Boolean)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(System.IO.Stream)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: LoadStore(Stream)
  nameWithType: ComponentSerializationService.LoadStore(Stream)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore(Stream)
- uid: System.IO.Stream
  parent: System.IO
  isExternal: true
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Serialize(SerializationStore,Object)
  nameWithType: ComponentSerializationService.Serialize(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize(SerializationStore,Object)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeAbsolute(SerializationStore,Object)
  nameWithType: ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute(SerializationStore,Object)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMember(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember(SerializationStore,Object,MemberDescriptor)
- uid: System.ComponentModel.MemberDescriptor
  parent: System.ComponentModel
  isExternal: false
  name: MemberDescriptor
  nameWithType: MemberDescriptor
  fullName: System.ComponentModel.MemberDescriptor
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(System.ComponentModel.Design.Serialization.SerializationStore,System.Object,System.ComponentModel.MemberDescriptor)
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
  fullName: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute(SerializationStore,Object,MemberDescriptor)
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.#ctor*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: ComponentSerializationService
  nameWithType: ComponentSerializationService.ComponentSerializationService
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.CreateStore*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: CreateStore
  nameWithType: ComponentSerializationService.CreateStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Deserialize*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Deserialize
  nameWithType: ComponentSerializationService.Deserialize
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.DeserializeTo*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: DeserializeTo
  nameWithType: ComponentSerializationService.DeserializeTo
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.LoadStore*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: LoadStore
  nameWithType: ComponentSerializationService.LoadStore
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.Serialize*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: Serialize
  nameWithType: ComponentSerializationService.Serialize
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeAbsolute*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeAbsolute
  nameWithType: ComponentSerializationService.SerializeAbsolute
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMember*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMember
  nameWithType: ComponentSerializationService.SerializeMember
- uid: System.ComponentModel.Design.Serialization.ComponentSerializationService.SerializeMemberAbsolute*
  parent: System.ComponentModel.Design.Serialization.ComponentSerializationService
  isExternal: false
  name: SerializeMemberAbsolute
  nameWithType: ComponentSerializationService.SerializeMemberAbsolute
